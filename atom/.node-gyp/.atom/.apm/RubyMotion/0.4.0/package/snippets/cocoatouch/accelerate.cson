'.source.rubymotion':
  'kvImageDecodeArray_16Q12Format (CGFloat*)':
    'prefix': 'kvImageDecodeArray_16Q12Format'
    'body': 'KvImageDecodeArray_16Q12Format'
  'VIMAGE_AFFINETRANSFORM_DOUBLE_IS_AVAILABLE (1)':
    'prefix': 'VIMAGE_AFFINETRANSFORM_DOUBLE_IS_AVAILABLE'
    'body': 'VIMAGE_AFFINETRANSFORM_DOUBLE_IS_AVAILABLE'
  'VIMAGE_CGAFFINETRANSFORM_IS_AVAILABLE (1)':
    'prefix': 'VIMAGE_CGAFFINETRANSFORM_IS_AVAILABLE'
    'body': 'VIMAGE_CGAFFINETRANSFORM_IS_AVAILABLE'
  'kRotate0DegreesClockwise (0)':
    'prefix': 'kRotate0DegreesClockwise'
    'body': 'KRotate0DegreesClockwise'
  'kRotate0DegreesCounterClockwise (0)':
    'prefix': 'kRotate0DegreesCounterClockwise'
    'body': 'KRotate0DegreesCounterClockwise'
  'kRotate180DegreesClockwise (2)':
    'prefix': 'kRotate180DegreesClockwise'
    'body': 'KRotate180DegreesClockwise'
  'kRotate180DegreesCounterClockwise (2)':
    'prefix': 'kRotate180DegreesCounterClockwise'
    'body': 'KRotate180DegreesCounterClockwise'
  'kRotate270DegreesClockwise (1)':
    'prefix': 'kRotate270DegreesClockwise'
    'body': 'KRotate270DegreesClockwise'
  'kRotate270DegreesCounterClockwise (3)':
    'prefix': 'kRotate270DegreesCounterClockwise'
    'body': 'KRotate270DegreesCounterClockwise'
  'kRotate90DegreesClockwise (3)':
    'prefix': 'kRotate90DegreesClockwise'
    'body': 'KRotate90DegreesClockwise'
  'kRotate90DegreesCounterClockwise (1)':
    'prefix': 'kRotate90DegreesCounterClockwise'
    'body': 'KRotate90DegreesCounterClockwise'
  'kvImageBackgroundColorFill (4)':
    'prefix': 'kvImageBackgroundColorFill'
    'body': 'KvImageBackgroundColorFill'
  'kvImageBufferSizeMismatch (-21774)':
    'prefix': 'kvImageBufferSizeMismatch'
    'body': 'KvImageBufferSizeMismatch'
  'kvImageColorSyncIsAbsent (-21779)':
    'prefix': 'kvImageColorSyncIsAbsent'
    'body': 'KvImageColorSyncIsAbsent'
  'kvImageConvert_DitherAtkinson (4)':
    'prefix': 'kvImageConvert_DitherAtkinson'
    'body': 'KvImageConvert_DitherAtkinson'
  'kvImageConvert_DitherFloydSteinberg (3)':
    'prefix': 'kvImageConvert_DitherFloydSteinberg'
    'body': 'KvImageConvert_DitherFloydSteinberg'
  'kvImageConvert_DitherNone (0)':
    'prefix': 'kvImageConvert_DitherNone'
    'body': 'KvImageConvert_DitherNone'
  'kvImageConvert_DitherOrdered (1)':
    'prefix': 'kvImageConvert_DitherOrdered'
    'body': 'KvImageConvert_DitherOrdered'
  'kvImageConvert_DitherOrderedReproducible (2)':
    'prefix': 'kvImageConvert_DitherOrderedReproducible'
    'body': 'KvImageConvert_DitherOrderedReproducible'
  'kvImageConvert_OrderedGaussianBlue (0)':
    'prefix': 'kvImageConvert_OrderedGaussianBlue'
    'body': 'KvImageConvert_OrderedGaussianBlue'
  'kvImageConvert_OrderedNoiseShapeMask (4026531840)':
    'prefix': 'kvImageConvert_OrderedNoiseShapeMask'
    'body': 'KvImageConvert_OrderedNoiseShapeMask'
  'kvImageConvert_OrderedUniformBlue (268435456)':
    'prefix': 'kvImageConvert_OrderedUniformBlue'
    'body': 'KvImageConvert_OrderedUniformBlue'
  'kvImageCopyInPlace (2)':
    'prefix': 'kvImageCopyInPlace'
    'body': 'KvImageCopyInPlace'
  'kvImageDoNotTile (16)':
    'prefix': 'kvImageDoNotTile'
    'body': 'KvImageDoNotTile'
  'kvImageEdgeExtend (8)':
    'prefix': 'kvImageEdgeExtend'
    'body': 'KvImageEdgeExtend'
  'kvImageFullInterpolation (1)':
    'prefix': 'kvImageFullInterpolation'
    'body': 'KvImageFullInterpolation'
  'kvImageGamma_11_over_5_half_precision (5)':
    'prefix': 'kvImageGamma_11_over_5_half_precision'
    'body': 'KvImageGamma_11_over_5_half_precision'
  'kvImageGamma_11_over_9_half_precision (8)':
    'prefix': 'kvImageGamma_11_over_9_half_precision'
    'body': 'KvImageGamma_11_over_9_half_precision'
  'kvImageGamma_5_over_11_half_precision (4)':
    'prefix': 'kvImageGamma_5_over_11_half_precision'
    'body': 'KvImageGamma_5_over_11_half_precision'
  'kvImageGamma_5_over_9_half_precision (2)':
    'prefix': 'kvImageGamma_5_over_9_half_precision'
    'body': 'KvImageGamma_5_over_9_half_precision'
  'kvImageGamma_9_over_11_half_precision (9)':
    'prefix': 'kvImageGamma_9_over_11_half_precision'
    'body': 'KvImageGamma_9_over_11_half_precision'
  'kvImageGamma_9_over_5_half_precision (3)':
    'prefix': 'kvImageGamma_9_over_5_half_precision'
    'body': 'KvImageGamma_9_over_5_half_precision'
  'kvImageGamma_BT709_forward_half_precision (10)':
    'prefix': 'kvImageGamma_BT709_forward_half_precision'
    'body': 'KvImageGamma_BT709_forward_half_precision'
  'kvImageGamma_BT709_reverse_half_precision (11)':
    'prefix': 'kvImageGamma_BT709_reverse_half_precision'
    'body': 'KvImageGamma_BT709_reverse_half_precision'
  'kvImageGamma_UseGammaValue (0)':
    'prefix': 'kvImageGamma_UseGammaValue'
    'body': 'KvImageGamma_UseGammaValue'
  'kvImageGamma_UseGammaValue_half_precision (1)':
    'prefix': 'kvImageGamma_UseGammaValue_half_precision'
    'body': 'KvImageGamma_UseGammaValue_half_precision'
  'kvImageGamma_sRGB_forward_half_precision (6)':
    'prefix': 'kvImageGamma_sRGB_forward_half_precision'
    'body': 'KvImageGamma_sRGB_forward_half_precision'
  'kvImageGamma_sRGB_reverse_half_precision (7)':
    'prefix': 'kvImageGamma_sRGB_reverse_half_precision'
    'body': 'KvImageGamma_sRGB_reverse_half_precision'
  'kvImageGetTempBufferSize (128)':
    'prefix': 'kvImageGetTempBufferSize'
    'body': 'KvImageGetTempBufferSize'
  'kvImageHalfInterpolation (2)':
    'prefix': 'kvImageHalfInterpolation'
    'body': 'KvImageHalfInterpolation'
  'kvImageHighQualityResampling (32)':
    'prefix': 'kvImageHighQualityResampling'
    'body': 'KvImageHighQualityResampling'
  'kvImageInternalError (-21776)':
    'prefix': 'kvImageInternalError'
    'body': 'KvImageInternalError'
  'kvImageInvalidEdgeStyle (-21768)':
    'prefix': 'kvImageInvalidEdgeStyle'
    'body': 'KvImageInvalidEdgeStyle'
  'kvImageInvalidImageFormat (-21778)':
    'prefix': 'kvImageInvalidImageFormat'
    'body': 'KvImageInvalidImageFormat'
  'kvImageInvalidKernelSize (-21767)':
    'prefix': 'kvImageInvalidKernelSize'
    'body': 'KvImageInvalidKernelSize'
  'kvImageInvalidOffset_X (-21769)':
    'prefix': 'kvImageInvalidOffset_X'
    'body': 'KvImageInvalidOffset_X'
  'kvImageInvalidOffset_Y (-21770)':
    'prefix': 'kvImageInvalidOffset_Y'
    'body': 'KvImageInvalidOffset_Y'
  'kvImageInvalidParameter (-21773)':
    'prefix': 'kvImageInvalidParameter'
    'body': 'KvImageInvalidParameter'
  'kvImageInvalidRowBytes (-21777)':
    'prefix': 'kvImageInvalidRowBytes'
    'body': 'KvImageInvalidRowBytes'
  'kvImageLeaveAlphaUnchanged (1)':
    'prefix': 'kvImageLeaveAlphaUnchanged'
    'body': 'KvImageLeaveAlphaUnchanged'
  'kvImageMDTableHint_16Q12 (1)':
    'prefix': 'kvImageMDTableHint_16Q12'
    'body': 'KvImageMDTableHint_16Q12'
  'kvImageMDTableHint_Float (2)':
    'prefix': 'kvImageMDTableHint_Float'
    'body': 'KvImageMDTableHint_Float'
  'kvImageMemoryAllocationError (-21771)':
    'prefix': 'kvImageMemoryAllocationError'
    'body': 'KvImageMemoryAllocationError'
  'kvImageNoAllocate (512)':
    'prefix': 'kvImageNoAllocate'
    'body': 'KvImageNoAllocate'
  'kvImageNoError (0)':
    'prefix': 'kvImageNoError'
    'body': 'KvImageNoError'
  'kvImageNoFlags (0)':
    'prefix': 'kvImageNoFlags'
    'body': 'KvImageNoFlags'
  'kvImageNoInterpolation (0)':
    'prefix': 'kvImageNoInterpolation'
    'body': 'KvImageNoInterpolation'
  'kvImageNullPointerArgument (-21772)':
    'prefix': 'kvImageNullPointerArgument'
    'body': 'KvImageNullPointerArgument'
  'kvImageOutOfPlaceOperationRequired (-21780)':
    'prefix': 'kvImageOutOfPlaceOperationRequired'
    'body': 'KvImageOutOfPlaceOperationRequired'
  'kvImagePrintDiagnosticsToConsole (256)':
    'prefix': 'kvImagePrintDiagnosticsToConsole'
    'body': 'KvImagePrintDiagnosticsToConsole'
  'kvImageRoiLargerThanInputBuffer (-21766)':
    'prefix': 'kvImageRoiLargerThanInputBuffer'
    'body': 'KvImageRoiLargerThanInputBuffer'
  'kvImageTruncateKernel (64)':
    'prefix': 'kvImageTruncateKernel'
    'body': 'KvImageTruncateKernel'
  'kvImageUnknownFlagsBit (-21775)':
    'prefix': 'kvImageUnknownFlagsBit'
    'body': 'KvImageUnknownFlagsBit'
  'kvImage_PNG_FILTER_VALUE_AVG (3)':
    'prefix': 'kvImage_PNG_FILTER_VALUE_AVG'
    'body': 'KvImage_PNG_FILTER_VALUE_AVG'
  'kvImage_PNG_FILTER_VALUE_NONE (0)':
    'prefix': 'kvImage_PNG_FILTER_VALUE_NONE'
    'body': 'KvImage_PNG_FILTER_VALUE_NONE'
  'kvImage_PNG_FILTER_VALUE_PAETH (4)':
    'prefix': 'kvImage_PNG_FILTER_VALUE_PAETH'
    'body': 'KvImage_PNG_FILTER_VALUE_PAETH'
  'kvImage_PNG_FILTER_VALUE_SUB (1)':
    'prefix': 'kvImage_PNG_FILTER_VALUE_SUB'
    'body': 'KvImage_PNG_FILTER_VALUE_SUB'
  'kvImage_PNG_FILTER_VALUE_UP (2)':
    'prefix': 'kvImage_PNG_FILTER_VALUE_UP'
    'body': 'KvImage_PNG_FILTER_VALUE_UP'
  'vImageAffineWarpCG_ARGB16S':
    'prefix': 'vImageAffineWarpCG_ARGB16S'
    'body': 'vImageAffineWarpCG_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:int16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpCG_ARGB16U':
    'prefix': 'vImageAffineWarpCG_ARGB16U'
    'body': 'vImageAffineWarpCG_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:uint16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpCG_ARGB8888':
    'prefix': 'vImageAffineWarpCG_ARGB8888'
    'body': 'vImageAffineWarpCG_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:uint8_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpCG_ARGBFFFF':
    'prefix': 'vImageAffineWarpCG_ARGBFFFF'
    'body': 'vImageAffineWarpCG_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:float* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpCG_Planar8':
    'prefix': 'vImageAffineWarpCG_Planar8'
    'body': 'vImageAffineWarpCG_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:Pixel_8 backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpCG_PlanarF':
    'prefix': 'vImageAffineWarpCG_PlanarF'
    'body': 'vImageAffineWarpCG_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_CGAffineTransform* transform}, ${5:Pixel_F backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_ARGB16S':
    'prefix': 'vImageAffineWarpD_ARGB16S'
    'body': 'vImageAffineWarpD_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:int16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_ARGB16U':
    'prefix': 'vImageAffineWarpD_ARGB16U'
    'body': 'vImageAffineWarpD_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:uint16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_ARGB8888':
    'prefix': 'vImageAffineWarpD_ARGB8888'
    'body': 'vImageAffineWarpD_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:uint8_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_ARGBFFFF':
    'prefix': 'vImageAffineWarpD_ARGBFFFF'
    'body': 'vImageAffineWarpD_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:float* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_Planar8':
    'prefix': 'vImageAffineWarpD_Planar8'
    'body': 'vImageAffineWarpD_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:Pixel_8 backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarpD_PlanarF':
    'prefix': 'vImageAffineWarpD_PlanarF'
    'body': 'vImageAffineWarpD_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform_Double* transform}, ${5:Pixel_F backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_ARGB16S':
    'prefix': 'vImageAffineWarp_ARGB16S'
    'body': 'vImageAffineWarp_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:int16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_ARGB16U':
    'prefix': 'vImageAffineWarp_ARGB16U'
    'body': 'vImageAffineWarp_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:uint16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_ARGB8888':
    'prefix': 'vImageAffineWarp_ARGB8888'
    'body': 'vImageAffineWarp_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:uint8_t* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_ARGBFFFF':
    'prefix': 'vImageAffineWarp_ARGBFFFF'
    'body': 'vImageAffineWarp_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:float* backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_Planar8':
    'prefix': 'vImageAffineWarp_Planar8'
    'body': 'vImageAffineWarp_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:Pixel_8 backColor}, ${6:vImage_Flags flags})'
  'vImageAffineWarp_PlanarF':
    'prefix': 'vImageAffineWarp_PlanarF'
    'body': 'vImageAffineWarp_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_AffineTransform* transform}, ${5:Pixel_F backColor}, ${6:vImage_Flags flags})'
  'vImageAlphaBlend_ARGB8888':
    'prefix': 'vImageAlphaBlend_ARGB8888'
    'body': 'vImageAlphaBlend_ARGB8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageAlphaBlend_ARGBFFFF':
    'prefix': 'vImageAlphaBlend_ARGBFFFF'
    'body': 'vImageAlphaBlend_ARGBFFFF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888':
    'prefix': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888'
    'body': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF':
    'prefix': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF'
    'body': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8':
    'prefix': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8'
    'body': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF':
    'prefix': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF'
    'body': 'vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImageAlphaBlend_Planar8':
    'prefix': 'vImageAlphaBlend_Planar8'
    'body': 'vImageAlphaBlend_Planar8(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* srcBottomAlpha}, ${5:vImage_Buffer* alpha}, ${6:vImage_Buffer* dest}, ${7:vImage_Flags flags})'
  'vImageAlphaBlend_PlanarF':
    'prefix': 'vImageAlphaBlend_PlanarF'
    'body': 'vImageAlphaBlend_PlanarF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* srcBottomAlpha}, ${5:vImage_Buffer* alpha}, ${6:vImage_Buffer* dest}, ${7:vImage_Flags flags})'
  'vImageBoxConvolve_ARGB8888':
    'prefix': 'vImageBoxConvolve_ARGB8888'
    'body': 'vImageBoxConvolve_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:uint32_t kernel_height}, ${7:uint32_t kernel_width}, ${8:uint8_t* backgroundColor}, ${9:vImage_Flags flags})'
  'vImageBoxConvolve_Planar8':
    'prefix': 'vImageBoxConvolve_Planar8'
    'body': 'vImageBoxConvolve_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:uint32_t kernel_height}, ${7:uint32_t kernel_width}, ${8:Pixel_8 backgroundColor}, ${9:vImage_Flags flags})'
  'vImageBufferFill_ARGB16S':
    'prefix': 'vImageBufferFill_ARGB16S'
    'body': 'vImageBufferFill_ARGB16S(${1:vImage_Buffer* dest}, ${2:int16_t* color}, ${3:vImage_Flags flags})'
  'vImageBufferFill_ARGB16U':
    'prefix': 'vImageBufferFill_ARGB16U'
    'body': 'vImageBufferFill_ARGB16U(${1:vImage_Buffer* dest}, ${2:uint16_t* color}, ${3:vImage_Flags flags})'
  'vImageBufferFill_ARGB8888':
    'prefix': 'vImageBufferFill_ARGB8888'
    'body': 'vImageBufferFill_ARGB8888(${1:vImage_Buffer* dest}, ${2:uint8_t* color}, ${3:vImage_Flags flags})'
  'vImageBufferFill_ARGBFFFF':
    'prefix': 'vImageBufferFill_ARGBFFFF'
    'body': 'vImageBufferFill_ARGBFFFF(${1:vImage_Buffer* dest}, ${2:float* color}, ${3:vImage_Flags flags})'
  'vImageBuffer_GetSize':
    'prefix': 'vImageBuffer_GetSize'
    'body': 'vImageBuffer_GetSize(${1:vImage_Buffer* buf})'
  'vImageBuffer_Init':
    'prefix': 'vImageBuffer_Init'
    'body': 'vImageBuffer_Init(${1:vImage_Buffer* buf}, ${2:vImagePixelCount height}, ${3:vImagePixelCount width}, ${4:uint32_t pixelBits}, ${5:vImage_Flags flags})'
  'vImageBuffer_InitWithCGImage':
    'prefix': 'vImageBuffer_InitWithCGImage'
    'body': 'vImageBuffer_InitWithCGImage(${1:vImage_Buffer* buf}, ${2:vImage_CGImageFormat* format}, ${3:CGFloat* backgroundColor}, ${4:CGImageRef image}, ${5:vImage_Flags flags})'
  'vImageByteSwap_Planar16U':
    'prefix': 'vImageByteSwap_Planar16U'
    'body': 'vImageByteSwap_Planar16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageCGImageFormat_GetComponentCount':
    'prefix': 'vImageCGImageFormat_GetComponentCount'
    'body': 'vImageCGImageFormat_GetComponentCount(${1:vImage_CGImageFormat* format})'
  'vImageCGImageFormat_IsEqual':
    'prefix': 'vImageCGImageFormat_IsEqual'
    'body': 'vImageCGImageFormat_IsEqual(${1:vImage_CGImageFormat* f1}, ${2:vImage_CGImageFormat* f2})'
  'vImageClipToAlpha_ARGB8888':
    'prefix': 'vImageClipToAlpha_ARGB8888'
    'body': 'vImageClipToAlpha_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageClipToAlpha_ARGBFFFF':
    'prefix': 'vImageClipToAlpha_ARGBFFFF'
    'body': 'vImageClipToAlpha_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageClipToAlpha_Planar8':
    'prefix': 'vImageClipToAlpha_Planar8'
    'body': 'vImageClipToAlpha_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageClipToAlpha_PlanarF':
    'prefix': 'vImageClipToAlpha_PlanarF'
    'body': 'vImageClipToAlpha_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageClipToAlpha_RGBA8888':
    'prefix': 'vImageClipToAlpha_RGBA8888'
    'body': 'vImageClipToAlpha_RGBA8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageClipToAlpha_RGBAFFFF':
    'prefix': 'vImageClipToAlpha_RGBAFFFF'
    'body': 'vImageClipToAlpha_RGBAFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageClip_PlanarF':
    'prefix': 'vImageClip_PlanarF'
    'body': 'vImageClip_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_F maxFloat}, ${4:Pixel_F minFloat}, ${5:vImage_Flags flags})'
  'vImageContrastStretch_ARGB8888':
    'prefix': 'vImageContrastStretch_ARGB8888'
    'body': 'vImageContrastStretch_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageContrastStretch_ARGBFFFF':
    'prefix': 'vImageContrastStretch_ARGBFFFF'
    'body': 'vImageContrastStretch_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int histogram_entries}, ${5:Pixel_F minVal}, ${6:Pixel_F maxVal}, ${7:vImage_Flags flags})'
  'vImageContrastStretch_Planar8':
    'prefix': 'vImageContrastStretch_Planar8'
    'body': 'vImageContrastStretch_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageContrastStretch_PlanarF':
    'prefix': 'vImageContrastStretch_PlanarF'
    'body': 'vImageContrastStretch_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int histogram_entries}, ${5:Pixel_F minVal}, ${6:Pixel_F maxVal}, ${7:vImage_Flags flags})'
  'vImageConvert_16Fto16U':
    'prefix': 'vImageConvert_16Fto16U'
    'body': 'vImageConvert_16Fto16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16Q12to16U':
    'prefix': 'vImageConvert_16Q12to16U'
    'body': 'vImageConvert_16Q12to16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16Q12to8':
    'prefix': 'vImageConvert_16Q12to8'
    'body': 'vImageConvert_16Q12to8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16Q12toF':
    'prefix': 'vImageConvert_16Q12toF'
    'body': 'vImageConvert_16Q12toF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16SToF':
    'prefix': 'vImageConvert_16SToF'
    'body': 'vImageConvert_16SToF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float offset}, ${4:float scale}, ${5:vImage_Flags flags})'
  'vImageConvert_16UToF':
    'prefix': 'vImageConvert_16UToF'
    'body': 'vImageConvert_16UToF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float offset}, ${4:float scale}, ${5:vImage_Flags flags})'
  'vImageConvert_16UToPlanar8':
    'prefix': 'vImageConvert_16UToPlanar8'
    'body': 'vImageConvert_16UToPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16Uto16F':
    'prefix': 'vImageConvert_16Uto16F'
    'body': 'vImageConvert_16Uto16F(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_16Uto16Q12':
    'prefix': 'vImageConvert_16Uto16Q12'
    'body': 'vImageConvert_16Uto16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_8to16Q12':
    'prefix': 'vImageConvert_8to16Q12'
    'body': 'vImageConvert_8to16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_ARGB1555toARGB8888':
    'prefix': 'vImageConvert_ARGB1555toARGB8888'
    'body': 'vImageConvert_ARGB1555toARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_ARGB1555toPlanar8':
    'prefix': 'vImageConvert_ARGB1555toPlanar8'
    'body': 'vImageConvert_ARGB1555toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* destA}, ${3:vImage_Buffer* destR}, ${4:vImage_Buffer* destG}, ${5:vImage_Buffer* destB}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB16UToARGB8888':
    'prefix': 'vImageConvert_ARGB16UToARGB8888'
    'body': 'vImageConvert_ARGB16UToARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:uint8_t* backgroundColor}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB16UtoPlanar16U':
    'prefix': 'vImageConvert_ARGB16UtoPlanar16U'
    'body': 'vImageConvert_ARGB16UtoPlanar16U(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* aDest}, ${3:vImage_Buffer* rDest}, ${4:vImage_Buffer* gDest}, ${5:vImage_Buffer* bDest}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB16UtoRGB16U':
    'prefix': 'vImageConvert_ARGB16UtoRGB16U'
    'body': 'vImageConvert_ARGB16UtoRGB16U(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* rgbDest}, ${3:vImage_Flags flags})'
  'vImageConvert_ARGB8888ToARGB16U':
    'prefix': 'vImageConvert_ARGB8888ToARGB16U'
    'body': 'vImageConvert_ARGB8888ToARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:uint16_t* backgroundColor}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB8888ToRGB16U':
    'prefix': 'vImageConvert_ARGB8888ToRGB16U'
    'body': 'vImageConvert_ARGB8888ToRGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:Pixel_16U* backgroundColor}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB8888toARGB1555':
    'prefix': 'vImageConvert_ARGB8888toARGB1555'
    'body': 'vImageConvert_ARGB8888toARGB1555(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_ARGB8888toPlanar16Q12':
    'prefix': 'vImageConvert_ARGB8888toPlanar16Q12'
    'body': 'vImageConvert_ARGB8888toPlanar16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* red}, ${4:vImage_Buffer* green}, ${5:vImage_Buffer* blue}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB8888toPlanar8':
    'prefix': 'vImageConvert_ARGB8888toPlanar8'
    'body': 'vImageConvert_ARGB8888toPlanar8(${1:vImage_Buffer* srcARGB}, ${2:vImage_Buffer* destA}, ${3:vImage_Buffer* destR}, ${4:vImage_Buffer* destG}, ${5:vImage_Buffer* destB}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGB8888toPlanarF':
    'prefix': 'vImageConvert_ARGB8888toPlanarF'
    'body': 'vImageConvert_ARGB8888toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* red}, ${4:vImage_Buffer* green}, ${5:vImage_Buffer* blue}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_ARGB8888toRGB565':
    'prefix': 'vImageConvert_ARGB8888toRGB565'
    'body': 'vImageConvert_ARGB8888toRGB565(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_ARGB8888toRGB888':
    'prefix': 'vImageConvert_ARGB8888toRGB888'
    'body': 'vImageConvert_ARGB8888toRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:vImage_Flags })'
  'vImageConvert_ARGBFFFFtoPlanar8':
    'prefix': 'vImageConvert_ARGBFFFFtoPlanar8'
    'body': 'vImageConvert_ARGBFFFFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* red}, ${4:vImage_Buffer* green}, ${5:vImage_Buffer* blue}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_ARGBFFFFtoPlanarF':
    'prefix': 'vImageConvert_ARGBFFFFtoPlanarF'
    'body': 'vImageConvert_ARGBFFFFtoPlanarF(${1:vImage_Buffer* srcARGB}, ${2:vImage_Buffer* destA}, ${3:vImage_Buffer* destR}, ${4:vImage_Buffer* destG}, ${5:vImage_Buffer* destB}, ${6:vImage_Flags flags})'
  'vImageConvert_ARGBFFFFtoRGBFFF':
    'prefix': 'vImageConvert_ARGBFFFFtoRGBFFF'
    'body': 'vImageConvert_ARGBFFFFtoRGBFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_AnyToAny':
    'prefix': 'vImageConvert_AnyToAny'
    'body': 'vImageConvert_AnyToAny(${1:vImageConverterRef converter}, ${2:vImage_Buffer* srcs}, ${3:vImage_Buffer* dests}, ${4:void* tempBuffer}, ${5:vImage_Flags flags})'
  'vImageConvert_BGRA16UtoRGB16U':
    'prefix': 'vImageConvert_BGRA16UtoRGB16U'
    'body': 'vImageConvert_BGRA16UtoRGB16U(${1:vImage_Buffer* bgraSrc}, ${2:vImage_Buffer* rgbDest}, ${3:vImage_Flags flags})'
  'vImageConvert_BGRA8888toRGB565':
    'prefix': 'vImageConvert_BGRA8888toRGB565'
    'body': 'vImageConvert_BGRA8888toRGB565(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_BGRA8888toRGB888':
    'prefix': 'vImageConvert_BGRA8888toRGB888'
    'body': 'vImageConvert_BGRA8888toRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:vImage_Flags })'
  'vImageConvert_BGRAFFFFtoRGBFFF':
    'prefix': 'vImageConvert_BGRAFFFFtoRGBFFF'
    'body': 'vImageConvert_BGRAFFFFtoRGBFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_BGRX8888ToPlanar8':
    'prefix': 'vImageConvert_BGRX8888ToPlanar8'
    'body': 'vImageConvert_BGRX8888ToPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* blue}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* red}, ${5:vImage_Flags flags})'
  'vImageConvert_BGRXFFFFToPlanarF':
    'prefix': 'vImageConvert_BGRXFFFFToPlanarF'
    'body': 'vImageConvert_BGRXFFFFToPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* blue}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* red}, ${5:vImage_Flags flags})'
  'vImageConvert_ChunkyToPlanar8':
    'prefix': 'vImageConvert_ChunkyToPlanar8'
    'body': 'vImageConvert_ChunkyToPlanar8(${1:void** srcChannels}, ${2:vImage_Buffer** destPlanarBuffers}, ${3:unsigned int channelCount}, ${4:size_t srcStrideBytes}, ${5:vImagePixelCount srcWidth}, ${6:vImagePixelCount srcHeight}, ${7:size_t srcRowBytes}, ${8:vImage_Flags flags})'
  'vImageConvert_ChunkyToPlanarF':
    'prefix': 'vImageConvert_ChunkyToPlanarF'
    'body': 'vImageConvert_ChunkyToPlanarF(${1:void** srcChannels}, ${2:vImage_Buffer** destPlanarBuffers}, ${3:unsigned int channelCount}, ${4:size_t srcStrideBytes}, ${5:vImagePixelCount srcWidth}, ${6:vImagePixelCount srcHeight}, ${7:size_t srcRowBytes}, ${8:vImage_Flags flags})'
  'vImageConvert_FTo16S':
    'prefix': 'vImageConvert_FTo16S'
    'body': 'vImageConvert_FTo16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float offset}, ${4:float scale}, ${5:vImage_Flags flags})'
  'vImageConvert_FTo16U':
    'prefix': 'vImageConvert_FTo16U'
    'body': 'vImageConvert_FTo16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float offset}, ${4:float scale}, ${5:vImage_Flags flags})'
  'vImageConvert_Fto16Q12':
    'prefix': 'vImageConvert_Fto16Q12'
    'body': 'vImageConvert_Fto16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Indexed1toPlanar8':
    'prefix': 'vImageConvert_Indexed1toPlanar8'
    'body': 'vImageConvert_Indexed1toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* colors}, ${4:vImage_Flags flags})'
  'vImageConvert_Indexed2toPlanar8':
    'prefix': 'vImageConvert_Indexed2toPlanar8'
    'body': 'vImageConvert_Indexed2toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* colors}, ${4:vImage_Flags flags})'
  'vImageConvert_Indexed4toPlanar8':
    'prefix': 'vImageConvert_Indexed4toPlanar8'
    'body': 'vImageConvert_Indexed4toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* colors}, ${4:vImage_Flags flags})'
  'vImageConvert_Planar16FtoPlanar8':
    'prefix': 'vImageConvert_Planar16FtoPlanar8'
    'body': 'vImageConvert_Planar16FtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar16FtoPlanarF':
    'prefix': 'vImageConvert_Planar16FtoPlanarF'
    'body': 'vImageConvert_Planar16FtoPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar16Q12toARGB8888':
    'prefix': 'vImageConvert_Planar16Q12toARGB8888'
    'body': 'vImageConvert_Planar16Q12toARGB8888(${1:vImage_Buffer* alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar16Q12toRGB888':
    'prefix': 'vImageConvert_Planar16Q12toRGB888'
    'body': 'vImageConvert_Planar16Q12toRGB888(${1:vImage_Buffer* red}, ${2:vImage_Buffer* green}, ${3:vImage_Buffer* blue}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar16UtoARGB16U':
    'prefix': 'vImageConvert_Planar16UtoARGB16U'
    'body': 'vImageConvert_Planar16UtoARGB16U(${1:vImage_Buffer* aSrc}, ${2:vImage_Buffer* rSrc}, ${3:vImage_Buffer* gSrc}, ${4:vImage_Buffer* bSrc}, ${5:vImage_Buffer* argbDest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar16UtoRGB16U':
    'prefix': 'vImageConvert_Planar16UtoRGB16U'
    'body': 'vImageConvert_Planar16UtoRGB16U(${1:vImage_Buffer* rSrc}, ${2:vImage_Buffer* gSrc}, ${3:vImage_Buffer* bSrc}, ${4:vImage_Buffer* rgbDest}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar1toPlanar8':
    'prefix': 'vImageConvert_Planar1toPlanar8'
    'body': 'vImageConvert_Planar1toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar2toPlanar8':
    'prefix': 'vImageConvert_Planar2toPlanar8'
    'body': 'vImageConvert_Planar2toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar4toPlanar8':
    'prefix': 'vImageConvert_Planar4toPlanar8'
    'body': 'vImageConvert_Planar4toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar8To16U':
    'prefix': 'vImageConvert_Planar8To16U'
    'body': 'vImageConvert_Planar8To16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar8ToARGBFFFF':
    'prefix': 'vImageConvert_Planar8ToARGBFFFF'
    'body': 'vImageConvert_Planar8ToARGBFFFF(${1:vImage_Buffer* alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_Planar8ToBGRX8888':
    'prefix': 'vImageConvert_Planar8ToBGRX8888'
    'body': 'vImageConvert_Planar8ToBGRX8888(${1:vImage_Buffer* blue}, ${2:vImage_Buffer* green}, ${3:vImage_Buffer* red}, ${4:Pixel_8 alpha}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8ToBGRXFFFF':
    'prefix': 'vImageConvert_Planar8ToBGRXFFFF'
    'body': 'vImageConvert_Planar8ToBGRXFFFF(${1:vImage_Buffer* blue}, ${2:vImage_Buffer* green}, ${3:vImage_Buffer* red}, ${4:Pixel_F alpha}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_Planar8ToXRGB8888':
    'prefix': 'vImageConvert_Planar8ToXRGB8888'
    'body': 'vImageConvert_Planar8ToXRGB8888(${1:Pixel_8 alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8ToXRGBFFFF':
    'prefix': 'vImageConvert_Planar8ToXRGBFFFF'
    'body': 'vImageConvert_Planar8ToXRGBFFFF(${1:Pixel_F alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_Planar8toARGB1555':
    'prefix': 'vImageConvert_Planar8toARGB1555'
    'body': 'vImageConvert_Planar8toARGB1555(${1:vImage_Buffer* srcA}, ${2:vImage_Buffer* srcR}, ${3:vImage_Buffer* srcG}, ${4:vImage_Buffer* srcB}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8toARGB8888':
    'prefix': 'vImageConvert_Planar8toARGB8888'
    'body': 'vImageConvert_Planar8toARGB8888(${1:vImage_Buffer* srcA}, ${2:vImage_Buffer* srcR}, ${3:vImage_Buffer* srcG}, ${4:vImage_Buffer* srcB}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8toIndexed1':
    'prefix': 'vImageConvert_Planar8toIndexed1'
    'body': 'vImageConvert_Planar8toIndexed1(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:Pixel_8* colors}, ${5:int dither}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8toIndexed2':
    'prefix': 'vImageConvert_Planar8toIndexed2'
    'body': 'vImageConvert_Planar8toIndexed2(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:Pixel_8* colors}, ${5:int dither}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8toIndexed4':
    'prefix': 'vImageConvert_Planar8toIndexed4'
    'body': 'vImageConvert_Planar8toIndexed4(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:Pixel_8* colors}, ${5:int dither}, ${6:vImage_Flags flags})'
  'vImageConvert_Planar8toPlanar1':
    'prefix': 'vImageConvert_Planar8toPlanar1'
    'body': 'vImageConvert_Planar8toPlanar1(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:int dither}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar8toPlanar16F':
    'prefix': 'vImageConvert_Planar8toPlanar16F'
    'body': 'vImageConvert_Planar8toPlanar16F(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_Planar8toPlanar2':
    'prefix': 'vImageConvert_Planar8toPlanar2'
    'body': 'vImageConvert_Planar8toPlanar2(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:int dither}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar8toPlanar4':
    'prefix': 'vImageConvert_Planar8toPlanar4'
    'body': 'vImageConvert_Planar8toPlanar4(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:int dither}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar8toPlanarF':
    'prefix': 'vImageConvert_Planar8toPlanarF'
    'body': 'vImageConvert_Planar8toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_F maxFloat}, ${4:Pixel_F minFloat}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar8toRGB565':
    'prefix': 'vImageConvert_Planar8toRGB565'
    'body': 'vImageConvert_Planar8toRGB565(${1:vImage_Buffer* srcR}, ${2:vImage_Buffer* srcG}, ${3:vImage_Buffer* srcB}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImageConvert_Planar8toRGB888':
    'prefix': 'vImageConvert_Planar8toRGB888'
    'body': 'vImageConvert_Planar8toRGB888(${1:vImage_Buffer* planarRed}, ${2:vImage_Buffer* planarGreen}, ${3:vImage_Buffer* planarBlue}, ${4:vImage_Buffer* rgbDest}, ${5:vImage_Flags flags})'
  'vImageConvert_PlanarFToARGB8888':
    'prefix': 'vImageConvert_PlanarFToARGB8888'
    'body': 'vImageConvert_PlanarFToARGB8888(${1:vImage_Buffer* alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_PlanarFToBGRX8888':
    'prefix': 'vImageConvert_PlanarFToBGRX8888'
    'body': 'vImageConvert_PlanarFToBGRX8888(${1:vImage_Buffer* blue}, ${2:vImage_Buffer* green}, ${3:vImage_Buffer* red}, ${4:Pixel_8 alpha}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_PlanarFToBGRXFFFF':
    'prefix': 'vImageConvert_PlanarFToBGRXFFFF'
    'body': 'vImageConvert_PlanarFToBGRXFFFF(${1:vImage_Buffer* blue}, ${2:vImage_Buffer* green}, ${3:vImage_Buffer* red}, ${4:Pixel_F alpha}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_PlanarFToXRGB8888':
    'prefix': 'vImageConvert_PlanarFToXRGB8888'
    'body': 'vImageConvert_PlanarFToXRGB8888(${1:Pixel_8 alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:float* maxFloat}, ${7:float* minFloat}, ${8:vImage_Flags flags})'
  'vImageConvert_PlanarFToXRGBFFFF':
    'prefix': 'vImageConvert_PlanarFToXRGBFFFF'
    'body': 'vImageConvert_PlanarFToXRGBFFFF(${1:Pixel_F alpha}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_PlanarFtoARGBFFFF':
    'prefix': 'vImageConvert_PlanarFtoARGBFFFF'
    'body': 'vImageConvert_PlanarFtoARGBFFFF(${1:vImage_Buffer* srcA}, ${2:vImage_Buffer* srcR}, ${3:vImage_Buffer* srcG}, ${4:vImage_Buffer* srcB}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImageConvert_PlanarFtoPlanar16F':
    'prefix': 'vImageConvert_PlanarFtoPlanar16F'
    'body': 'vImageConvert_PlanarFtoPlanar16F(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_PlanarFtoPlanar8':
    'prefix': 'vImageConvert_PlanarFtoPlanar8'
    'body': 'vImageConvert_PlanarFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_F maxFloat}, ${4:Pixel_F minFloat}, ${5:vImage_Flags flags})'
  'vImageConvert_PlanarFtoRGBFFF':
    'prefix': 'vImageConvert_PlanarFtoRGBFFF'
    'body': 'vImageConvert_PlanarFtoRGBFFF(${1:vImage_Buffer* planarRed}, ${2:vImage_Buffer* planarGreen}, ${3:vImage_Buffer* planarBlue}, ${4:vImage_Buffer* rgbDest}, ${5:vImage_Flags flags})'
  'vImageConvert_PlanarToChunky8':
    'prefix': 'vImageConvert_PlanarToChunky8'
    'body': 'vImageConvert_PlanarToChunky8(${1:vImage_Buffer** srcPlanarBuffers}, ${2:void** destChannels}, ${3:unsigned int channelCount}, ${4:size_t destStrideBytes}, ${5:vImagePixelCount destWidth}, ${6:vImagePixelCount destHeight}, ${7:size_t destRowBytes}, ${8:vImage_Flags flags})'
  'vImageConvert_PlanarToChunkyF':
    'prefix': 'vImageConvert_PlanarToChunkyF'
    'body': 'vImageConvert_PlanarToChunkyF(${1:vImage_Buffer** srcPlanarBuffers}, ${2:void** destChannels}, ${3:unsigned int channelCount}, ${4:size_t destStrideBytes}, ${5:vImagePixelCount destWidth}, ${6:vImagePixelCount destHeight}, ${7:size_t destRowBytes}, ${8:vImage_Flags flags})'
  'vImageConvert_RGB16UToARGB8888':
    'prefix': 'vImageConvert_RGB16UToARGB8888'
    'body': 'vImageConvert_RGB16UToARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:uint8_t* backgroundColor}, ${6:vImage_Flags flags})'
  'vImageConvert_RGB16UtoARGB16U':
    'prefix': 'vImageConvert_RGB16UtoARGB16U'
    'body': 'vImageConvert_RGB16UtoARGB16U(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* aSrc}, ${3:Pixel_16U alpha}, ${4:vImage_Buffer* argbDest}, ${5:_Bool premultiply}, ${6:vImage_Flags flags})'
  'vImageConvert_RGB16UtoBGRA16U':
    'prefix': 'vImageConvert_RGB16UtoBGRA16U'
    'body': 'vImageConvert_RGB16UtoBGRA16U(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* aSrc}, ${3:Pixel_16U alpha}, ${4:vImage_Buffer* bgraDest}, ${5:_Bool premultiply}, ${6:vImage_Flags flags})'
  'vImageConvert_RGB16UtoPlanar16U':
    'prefix': 'vImageConvert_RGB16UtoPlanar16U'
    'body': 'vImageConvert_RGB16UtoPlanar16U(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* rDest}, ${3:vImage_Buffer* gDest}, ${4:vImage_Buffer* bDest}, ${5:vImage_Flags flags})'
  'vImageConvert_RGB16UtoRGBA16U':
    'prefix': 'vImageConvert_RGB16UtoRGBA16U'
    'body': 'vImageConvert_RGB16UtoRGBA16U(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* aSrc}, ${3:Pixel_16U alpha}, ${4:vImage_Buffer* rgbaDest}, ${5:_Bool premultiply}, ${6:vImage_Flags flags})'
  'vImageConvert_RGB565toARGB8888':
    'prefix': 'vImageConvert_RGB565toARGB8888'
    'body': 'vImageConvert_RGB565toARGB8888(${1:Pixel_8 alpha}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageConvert_RGB565toBGRA8888':
    'prefix': 'vImageConvert_RGB565toBGRA8888'
    'body': 'vImageConvert_RGB565toBGRA8888(${1:Pixel_8 alpha}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageConvert_RGB565toPlanar8':
    'prefix': 'vImageConvert_RGB565toPlanar8'
    'body': 'vImageConvert_RGB565toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* destR}, ${3:vImage_Buffer* destG}, ${4:vImage_Buffer* destB}, ${5:vImage_Flags flags})'
  'vImageConvert_RGB565toRGBA8888':
    'prefix': 'vImageConvert_RGB565toRGBA8888'
    'body': 'vImageConvert_RGB565toRGBA8888(${1:Pixel_8 alpha}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageConvert_RGB888toARGB8888':
    'prefix': 'vImageConvert_RGB888toARGB8888'
    'body': 'vImageConvert_RGB888toARGB8888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_8 }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags })'
  'vImageConvert_RGB888toBGRA8888':
    'prefix': 'vImageConvert_RGB888toBGRA8888'
    'body': 'vImageConvert_RGB888toBGRA8888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_8 }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags })'
  'vImageConvert_RGB888toPlanar16Q12':
    'prefix': 'vImageConvert_RGB888toPlanar16Q12'
    'body': 'vImageConvert_RGB888toPlanar16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Flags flags})'
  'vImageConvert_RGB888toPlanar8':
    'prefix': 'vImageConvert_RGB888toPlanar8'
    'body': 'vImageConvert_RGB888toPlanar8(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* redDest}, ${3:vImage_Buffer* greenDest}, ${4:vImage_Buffer* blueDest}, ${5:vImage_Flags flags})'
  'vImageConvert_RGB888toRGBA8888':
    'prefix': 'vImageConvert_RGB888toRGBA8888'
    'body': 'vImageConvert_RGB888toRGBA8888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_8 }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags })'
  'vImageConvert_RGBA16UtoRGB16U':
    'prefix': 'vImageConvert_RGBA16UtoRGB16U'
    'body': 'vImageConvert_RGBA16UtoRGB16U(${1:vImage_Buffer* rgbaSrc}, ${2:vImage_Buffer* rgbDest}, ${3:vImage_Flags flags})'
  'vImageConvert_RGBA8888toRGB565':
    'prefix': 'vImageConvert_RGBA8888toRGB565'
    'body': 'vImageConvert_RGBA8888toRGB565(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_RGBA8888toRGB888':
    'prefix': 'vImageConvert_RGBA8888toRGB888'
    'body': 'vImageConvert_RGBA8888toRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:vImage_Flags })'
  'vImageConvert_RGBAFFFFtoRGBFFF':
    'prefix': 'vImageConvert_RGBAFFFFtoRGBFFF'
    'body': 'vImageConvert_RGBAFFFFtoRGBFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageConvert_RGBFFFtoARGBFFFF':
    'prefix': 'vImageConvert_RGBFFFtoARGBFFFF'
    'body': 'vImageConvert_RGBFFFtoARGBFFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_F }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags flags})'
  'vImageConvert_RGBFFFtoBGRAFFFF':
    'prefix': 'vImageConvert_RGBFFFtoBGRAFFFF'
    'body': 'vImageConvert_RGBFFFtoBGRAFFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_F }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags flags})'
  'vImageConvert_RGBFFFtoPlanarF':
    'prefix': 'vImageConvert_RGBFFFtoPlanarF'
    'body': 'vImageConvert_RGBFFFtoPlanarF(${1:vImage_Buffer* rgbSrc}, ${2:vImage_Buffer* redDest}, ${3:vImage_Buffer* greenDest}, ${4:vImage_Buffer* blueDest}, ${5:vImage_Flags flags})'
  'vImageConvert_RGBFFFtoRGBAFFFF':
    'prefix': 'vImageConvert_RGBFFFtoRGBAFFFF'
    'body': 'vImageConvert_RGBFFFtoRGBAFFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:Pixel_F }, ${4:vImage_Buffer* }, ${5:_Bool }, ${6:vImage_Flags flags})'
  'vImageConvert_XRGB8888ToPlanar8':
    'prefix': 'vImageConvert_XRGB8888ToPlanar8'
    'body': 'vImageConvert_XRGB8888ToPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Flags flags})'
  'vImageConvert_XRGBFFFFToPlanarF':
    'prefix': 'vImageConvert_XRGBFFFFToPlanarF'
    'body': 'vImageConvert_XRGBFFFFToPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* red}, ${3:vImage_Buffer* green}, ${4:vImage_Buffer* blue}, ${5:vImage_Flags flags})'
  'vImageConverter_CreateWithCGImageFormat':
    'prefix': 'vImageConverter_CreateWithCGImageFormat'
    'body': 'vImageConverter_CreateWithCGImageFormat(${1:vImage_CGImageFormat* srcFormat}, ${2:vImage_CGImageFormat* destFormat}, ${3:CGFloat* backgroundColor}, ${4:vImage_Flags flags}, ${5:vImage_Error* error})'
  'vImageConverter_CreateWithColorSyncCodeFragment':
    'prefix': 'vImageConverter_CreateWithColorSyncCodeFragment'
    'body': 'vImageConverter_CreateWithColorSyncCodeFragment(${1:CFTypeRef codeFragment}, ${2:vImage_CGImageFormat* srcFormat}, ${3:vImage_CGImageFormat* destFormat}, ${4:CGFloat* backgroundColor}, ${5:vImage_Flags flags}, ${6:vImage_Error* error})'
  'vImageConverter_MustOperateOutOfPlace':
    'prefix': 'vImageConverter_MustOperateOutOfPlace'
    'body': 'vImageConverter_MustOperateOutOfPlace(${1:vImageConverterRef converter}, ${2:vImage_Buffer* srcs}, ${3:vImage_Buffer* dests}, ${4:vImage_Flags flags})'
  'vImageConverter_Release':
    'prefix': 'vImageConverter_Release'
    'body': 'vImageConverter_Release(${1:vImageConverterRef converter})'
  'vImageConverter_Retain':
    'prefix': 'vImageConverter_Retain'
    'body': 'vImageConverter_Retain(${1:vImageConverterRef converter})'
  'vImageConvolveMultiKernel_ARGB8888':
    'prefix': 'vImageConvolveMultiKernel_ARGB8888'
    'body': 'vImageConvolveMultiKernel_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t** kernels}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:int32_t* divisors}, ${10:int32_t* biases}, ${11:uint8_t* backgroundColor}, ${12:vImage_Flags flags})'
  'vImageConvolveMultiKernel_ARGBFFFF':
    'prefix': 'vImageConvolveMultiKernel_ARGBFFFF'
    'body': 'vImageConvolveMultiKernel_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float** kernels}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:float* biases}, ${10:float* backgroundColor}, ${11:vImage_Flags flags})'
  'vImageConvolveWithBias_ARGB8888':
    'prefix': 'vImageConvolveWithBias_ARGB8888'
    'body': 'vImageConvolveWithBias_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:int32_t divisor}, ${10:int32_t bias}, ${11:uint8_t* backgroundColor}, ${12:vImage_Flags flags})'
  'vImageConvolveWithBias_ARGBFFFF':
    'prefix': 'vImageConvolveWithBias_ARGBFFFF'
    'body': 'vImageConvolveWithBias_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:float bias}, ${10:float* backgroundColor}, ${11:vImage_Flags flags})'
  'vImageConvolveWithBias_Planar8':
    'prefix': 'vImageConvolveWithBias_Planar8'
    'body': 'vImageConvolveWithBias_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:int32_t divisor}, ${10:int32_t bias}, ${11:Pixel_8 backgroundColor}, ${12:vImage_Flags flags})'
  'vImageConvolveWithBias_PlanarF':
    'prefix': 'vImageConvolveWithBias_PlanarF'
    'body': 'vImageConvolveWithBias_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:float bias}, ${10:Pixel_F backgroundColor}, ${11:vImage_Flags flags})'
  'vImageConvolve_ARGB8888':
    'prefix': 'vImageConvolve_ARGB8888'
    'body': 'vImageConvolve_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:int32_t divisor}, ${10:uint8_t* backgroundColor}, ${11:vImage_Flags flags})'
  'vImageConvolve_ARGBFFFF':
    'prefix': 'vImageConvolve_ARGBFFFF'
    'body': 'vImageConvolve_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:float* backgroundColor}, ${10:vImage_Flags flags})'
  'vImageConvolve_Planar8':
    'prefix': 'vImageConvolve_Planar8'
    'body': 'vImageConvolve_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:int32_t divisor}, ${10:Pixel_8 backgroundColor}, ${11:vImage_Flags flags})'
  'vImageConvolve_PlanarF':
    'prefix': 'vImageConvolve_PlanarF'
    'body': 'vImageConvolve_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:uint32_t kernel_height}, ${8:uint32_t kernel_width}, ${9:Pixel_F backgroundColor}, ${10:vImage_Flags flags})'
  'vImageCreateCGImageFromBuffer':
    'prefix': 'vImageCreateCGImageFromBuffer'
    'body': 'vImageCreateCGImageFromBuffer(${1:vImage_Buffer* buf}, ${2:vImage_CGImageFormat* format}, ${3:void (*)(void *, void *) callback}, ${4:void* userData}, ${5:vImage_Flags flags}, ${6:vImage_Error* error})'
  'vImageCreateGammaFunction':
    'prefix': 'vImageCreateGammaFunction'
    'body': 'vImageCreateGammaFunction(${1:float gamma}, ${2:int gamma_type}, ${3:vImage_Flags flags})'
  'vImageDestroyGammaFunction':
    'prefix': 'vImageDestroyGammaFunction'
    'body': 'vImageDestroyGammaFunction(${1:GammaFunction f})'
  'vImageDestroyResamplingFilter':
    'prefix': 'vImageDestroyResamplingFilter'
    'body': 'vImageDestroyResamplingFilter(${1:ResamplingFilter filter})'
  'vImageDilate_ARGB8888':
    'prefix': 'vImageDilate_ARGB8888'
    'body': 'vImageDilate_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:unsigned char* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageDilate_ARGBFFFF':
    'prefix': 'vImageDilate_ARGBFFFF'
    'body': 'vImageDilate_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageDilate_Planar8':
    'prefix': 'vImageDilate_Planar8'
    'body': 'vImageDilate_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:unsigned char* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageDilate_PlanarF':
    'prefix': 'vImageDilate_PlanarF'
    'body': 'vImageDilate_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageEndsInContrastStretch_ARGB8888':
    'prefix': 'vImageEndsInContrastStretch_ARGB8888'
    'body': 'vImageEndsInContrastStretch_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:unsigned int* percent_low}, ${4:unsigned int* percent_high}, ${5:vImage_Flags flags})'
  'vImageEndsInContrastStretch_ARGBFFFF':
    'prefix': 'vImageEndsInContrastStretch_ARGBFFFF'
    'body': 'vImageEndsInContrastStretch_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int* percent_low}, ${5:unsigned int* percent_high}, ${6:unsigned int histogram_entries}, ${7:Pixel_F minVal}, ${8:Pixel_F maxVal}, ${9:vImage_Flags flags})'
  'vImageEndsInContrastStretch_Planar8':
    'prefix': 'vImageEndsInContrastStretch_Planar8'
    'body': 'vImageEndsInContrastStretch_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:unsigned int percent_low}, ${4:unsigned int percent_high}, ${5:vImage_Flags flags})'
  'vImageEndsInContrastStretch_PlanarF':
    'prefix': 'vImageEndsInContrastStretch_PlanarF'
    'body': 'vImageEndsInContrastStretch_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int percent_low}, ${5:unsigned int percent_high}, ${6:unsigned int histogram_entries}, ${7:Pixel_F minVal}, ${8:Pixel_F maxVal}, ${9:vImage_Flags flags})'
  'vImageEqualization_ARGB8888':
    'prefix': 'vImageEqualization_ARGB8888'
    'body': 'vImageEqualization_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageEqualization_ARGBFFFF':
    'prefix': 'vImageEqualization_ARGBFFFF'
    'body': 'vImageEqualization_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int histogram_entries}, ${5:Pixel_F minVal}, ${6:Pixel_F maxVal}, ${7:vImage_Flags flags})'
  'vImageEqualization_Planar8':
    'prefix': 'vImageEqualization_Planar8'
    'body': 'vImageEqualization_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageEqualization_PlanarF':
    'prefix': 'vImageEqualization_PlanarF'
    'body': 'vImageEqualization_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:unsigned int histogram_entries}, ${5:Pixel_F minVal}, ${6:Pixel_F maxVal}, ${7:vImage_Flags flags})'
  'vImageErode_ARGB8888':
    'prefix': 'vImageErode_ARGB8888'
    'body': 'vImageErode_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:unsigned char* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageErode_ARGBFFFF':
    'prefix': 'vImageErode_ARGBFFFF'
    'body': 'vImageErode_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageErode_Planar8':
    'prefix': 'vImageErode_Planar8'
    'body': 'vImageErode_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:unsigned char* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageErode_PlanarF':
    'prefix': 'vImageErode_PlanarF'
    'body': 'vImageErode_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float* kernel}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageFlatten_ARGB16Q12':
    'prefix': 'vImageFlatten_ARGB16Q12'
    'body': 'vImageFlatten_ARGB16Q12(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* argbDst}, ${3:int16_t* argbBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_ARGB16U':
    'prefix': 'vImageFlatten_ARGB16U'
    'body': 'vImageFlatten_ARGB16U(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* argbDst}, ${3:uint16_t* argbBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_ARGB8888':
    'prefix': 'vImageFlatten_ARGB8888'
    'body': 'vImageFlatten_ARGB8888(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* argbDst}, ${3:uint8_t* argbBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_ARGB8888ToRGB888':
    'prefix': 'vImageFlatten_ARGB8888ToRGB888'
    'body': 'vImageFlatten_ARGB8888ToRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:uint8_t* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageFlatten_ARGBFFFF':
    'prefix': 'vImageFlatten_ARGBFFFF'
    'body': 'vImageFlatten_ARGBFFFF(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* argbDst}, ${3:float* argbBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_ARGBFFFFToRGBFFF':
    'prefix': 'vImageFlatten_ARGBFFFFToRGBFFF'
    'body': 'vImageFlatten_ARGBFFFFToRGBFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:float* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageFlatten_BGRA8888ToRGB888':
    'prefix': 'vImageFlatten_BGRA8888ToRGB888'
    'body': 'vImageFlatten_BGRA8888ToRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:uint8_t* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageFlatten_BGRAFFFFToRGBFFF':
    'prefix': 'vImageFlatten_BGRAFFFFToRGBFFF'
    'body': 'vImageFlatten_BGRAFFFFToRGBFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:float* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageFlatten_RGBA16Q12':
    'prefix': 'vImageFlatten_RGBA16Q12'
    'body': 'vImageFlatten_RGBA16Q12(${1:vImage_Buffer* argbSrc}, ${2:vImage_Buffer* argbDst}, ${3:int16_t* argbBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_RGBA16U':
    'prefix': 'vImageFlatten_RGBA16U'
    'body': 'vImageFlatten_RGBA16U(${1:vImage_Buffer* rgbaSrc}, ${2:vImage_Buffer* rgbaDst}, ${3:uint16_t* rgbaBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_RGBA8888':
    'prefix': 'vImageFlatten_RGBA8888'
    'body': 'vImageFlatten_RGBA8888(${1:vImage_Buffer* rgbaSrc}, ${2:vImage_Buffer* rgbaDst}, ${3:uint8_t* rgbaBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_RGBA8888ToRGB888':
    'prefix': 'vImageFlatten_RGBA8888ToRGB888'
    'body': 'vImageFlatten_RGBA8888ToRGB888(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:uint8_t* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageFlatten_RGBAFFFF':
    'prefix': 'vImageFlatten_RGBAFFFF'
    'body': 'vImageFlatten_RGBAFFFF(${1:vImage_Buffer* rgbaSrc}, ${2:vImage_Buffer* rgbaDst}, ${3:float* rgbaBackgroundColorPtr}, ${4:_Bool isImagePremultiplied}, ${5:vImage_Flags flags})'
  'vImageFlatten_RGBAFFFFToRGBFFF':
    'prefix': 'vImageFlatten_RGBAFFFFToRGBFFF'
    'body': 'vImageFlatten_RGBAFFFFToRGBFFF(${1:vImage_Buffer* }, ${2:vImage_Buffer* }, ${3:float* }, ${4:_Bool }, ${5:vImage_Flags })'
  'vImageGamma_Planar8toPlanarF':
    'prefix': 'vImageGamma_Planar8toPlanarF'
    'body': 'vImageGamma_Planar8toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:GammaFunction gamma}, ${4:vImage_Flags flags})'
  'vImageGamma_PlanarF':
    'prefix': 'vImageGamma_PlanarF'
    'body': 'vImageGamma_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:GammaFunction gamma}, ${4:vImage_Flags flags})'
  'vImageGamma_PlanarFtoPlanar8':
    'prefix': 'vImageGamma_PlanarFtoPlanar8'
    'body': 'vImageGamma_PlanarFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:GammaFunction gamma}, ${4:vImage_Flags flags})'
  'vImageGetResamplingFilterExtent':
    'prefix': 'vImageGetResamplingFilterExtent'
    'body': 'vImageGetResamplingFilterExtent(${1:ResamplingFilter filter}, ${2:vImage_Flags flags})'
  'vImageGetResamplingFilterSize':
    'prefix': 'vImageGetResamplingFilterSize'
    'body': 'vImageGetResamplingFilterSize(${1:float scale}, ${2:void (*)(float *, float *, unsigned long, void *) kernelFunc}, ${3:float kernelWidth}, ${4:vImage_Flags flags})'
  'vImageHistogramCalculation_ARGB8888':
    'prefix': 'vImageHistogramCalculation_ARGB8888'
    'body': 'vImageHistogramCalculation_ARGB8888(${1:vImage_Buffer* src}, ${2:vImagePixelCount** histogram}, ${3:vImage_Flags flags})'
  'vImageHistogramCalculation_ARGBFFFF':
    'prefix': 'vImageHistogramCalculation_ARGBFFFF'
    'body': 'vImageHistogramCalculation_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImagePixelCount** histogram}, ${3:unsigned int histogram_entries}, ${4:Pixel_F minVal}, ${5:Pixel_F maxVal}, ${6:vImage_Flags flags})'
  'vImageHistogramCalculation_Planar8':
    'prefix': 'vImageHistogramCalculation_Planar8'
    'body': 'vImageHistogramCalculation_Planar8(${1:vImage_Buffer* src}, ${2:vImagePixelCount* histogram}, ${3:vImage_Flags flags})'
  'vImageHistogramCalculation_PlanarF':
    'prefix': 'vImageHistogramCalculation_PlanarF'
    'body': 'vImageHistogramCalculation_PlanarF(${1:vImage_Buffer* src}, ${2:vImagePixelCount* histogram}, ${3:unsigned int histogram_entries}, ${4:Pixel_F minVal}, ${5:Pixel_F maxVal}, ${6:vImage_Flags flags})'
  'vImageHistogramSpecification_ARGB8888':
    'prefix': 'vImageHistogramSpecification_ARGB8888'
    'body': 'vImageHistogramSpecification_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount** desired_histogram}, ${4:vImage_Flags flags})'
  'vImageHistogramSpecification_ARGBFFFF':
    'prefix': 'vImageHistogramSpecification_ARGBFFFF'
    'body': 'vImageHistogramSpecification_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount** desired_histogram}, ${5:unsigned int histogram_entries}, ${6:Pixel_F minVal}, ${7:Pixel_F maxVal}, ${8:vImage_Flags flags})'
  'vImageHistogramSpecification_Planar8':
    'prefix': 'vImageHistogramSpecification_Planar8'
    'body': 'vImageHistogramSpecification_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount* desired_histogram}, ${4:vImage_Flags flags})'
  'vImageHistogramSpecification_PlanarF':
    'prefix': 'vImageHistogramSpecification_PlanarF'
    'body': 'vImageHistogramSpecification_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount* desired_histogram}, ${5:unsigned int histogram_entries}, ${6:Pixel_F minVal}, ${7:Pixel_F maxVal}, ${8:vImage_Flags flags})'
  'vImageHorizontalReflect_ARGB16S':
    'prefix': 'vImageHorizontalReflect_ARGB16S'
    'body': 'vImageHorizontalReflect_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_ARGB16U':
    'prefix': 'vImageHorizontalReflect_ARGB16U'
    'body': 'vImageHorizontalReflect_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_ARGB8888':
    'prefix': 'vImageHorizontalReflect_ARGB8888'
    'body': 'vImageHorizontalReflect_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_ARGBFFFF':
    'prefix': 'vImageHorizontalReflect_ARGBFFFF'
    'body': 'vImageHorizontalReflect_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_Planar16U':
    'prefix': 'vImageHorizontalReflect_Planar16U'
    'body': 'vImageHorizontalReflect_Planar16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_Planar8':
    'prefix': 'vImageHorizontalReflect_Planar8'
    'body': 'vImageHorizontalReflect_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalReflect_PlanarF':
    'prefix': 'vImageHorizontalReflect_PlanarF'
    'body': 'vImageHorizontalReflect_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageHorizontalShearD_ARGB16S':
    'prefix': 'vImageHorizontalShearD_ARGB16S'
    'body': 'vImageHorizontalShearD_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:int16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShearD_ARGB16U':
    'prefix': 'vImageHorizontalShearD_ARGB16U'
    'body': 'vImageHorizontalShearD_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:uint16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShearD_ARGB8888':
    'prefix': 'vImageHorizontalShearD_ARGB8888'
    'body': 'vImageHorizontalShearD_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:uint8_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShearD_ARGBFFFF':
    'prefix': 'vImageHorizontalShearD_ARGBFFFF'
    'body': 'vImageHorizontalShearD_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:float* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShearD_Planar8':
    'prefix': 'vImageHorizontalShearD_Planar8'
    'body': 'vImageHorizontalShearD_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_8 backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShearD_PlanarF':
    'prefix': 'vImageHorizontalShearD_PlanarF'
    'body': 'vImageHorizontalShearD_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double xTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_F backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_ARGB16S':
    'prefix': 'vImageHorizontalShear_ARGB16S'
    'body': 'vImageHorizontalShear_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:int16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_ARGB16U':
    'prefix': 'vImageHorizontalShear_ARGB16U'
    'body': 'vImageHorizontalShear_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:uint16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_ARGB8888':
    'prefix': 'vImageHorizontalShear_ARGB8888'
    'body': 'vImageHorizontalShear_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:uint8_t* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_ARGBFFFF':
    'prefix': 'vImageHorizontalShear_ARGBFFFF'
    'body': 'vImageHorizontalShear_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:float* backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_Planar8':
    'prefix': 'vImageHorizontalShear_Planar8'
    'body': 'vImageHorizontalShear_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_8 backColor}, ${9:vImage_Flags flags})'
  'vImageHorizontalShear_PlanarF':
    'prefix': 'vImageHorizontalShear_PlanarF'
    'body': 'vImageHorizontalShear_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float xTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_F backColor}, ${9:vImage_Flags flags})'
  'vImageInterpolatedLookupTable_PlanarF':
    'prefix': 'vImageInterpolatedLookupTable_PlanarF'
    'body': 'vImageInterpolatedLookupTable_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_F* table}, ${4:vImagePixelCount tableEntries}, ${5:float maxFloat}, ${6:float minFloat}, ${7:vImage_Flags flags})'
  'vImageLookupTable_8to64U':
    'prefix': 'vImageLookupTable_8to64U'
    'body': 'vImageLookupTable_8to64U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint64_t* LUT}, ${4:vImage_Flags flags})'
  'vImageLookupTable_Planar8toPlanar16':
    'prefix': 'vImageLookupTable_Planar8toPlanar16'
    'body': 'vImageLookupTable_Planar8toPlanar16(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_16U* table}, ${4:vImage_Flags flags})'
  'vImageLookupTable_Planar8toPlanarF':
    'prefix': 'vImageLookupTable_Planar8toPlanarF'
    'body': 'vImageLookupTable_Planar8toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_F* table}, ${4:vImage_Flags flags})'
  'vImageLookupTable_PlanarFtoPlanar8':
    'prefix': 'vImageLookupTable_PlanarFtoPlanar8'
    'body': 'vImageLookupTable_PlanarFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* table}, ${4:vImage_Flags flags})'
  'vImageMatrixMultiply_ARGB8888':
    'prefix': 'vImageMatrixMultiply_ARGB8888'
    'body': 'vImageMatrixMultiply_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:int16_t* matrix}, ${4:int32_t divisor}, ${5:int16_t* pre_bias}, ${6:int32_t* post_bias}, ${7:vImage_Flags flags})'
  'vImageMatrixMultiply_ARGBFFFF':
    'prefix': 'vImageMatrixMultiply_ARGBFFFF'
    'body': 'vImageMatrixMultiply_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* matrix}, ${4:float* pre_bias}, ${5:float* post_bias}, ${6:vImage_Flags flags})'
  'vImageMatrixMultiply_Planar16S':
    'prefix': 'vImageMatrixMultiply_Planar16S'
    'body': 'vImageMatrixMultiply_Planar16S(${1:vImage_Buffer** srcs}, ${2:vImage_Buffer** dests}, ${3:uint32_t src_planes}, ${4:uint32_t dest_planes}, ${5:int16_t* matrix}, ${6:int32_t divisor}, ${7:int16_t* pre_bias}, ${8:int32_t* post_bias}, ${9:vImage_Flags flags})'
  'vImageMatrixMultiply_Planar8':
    'prefix': 'vImageMatrixMultiply_Planar8'
    'body': 'vImageMatrixMultiply_Planar8(${1:vImage_Buffer** srcs}, ${2:vImage_Buffer** dests}, ${3:uint32_t src_planes}, ${4:uint32_t dest_planes}, ${5:int16_t* matrix}, ${6:int32_t divisor}, ${7:int16_t* pre_bias}, ${8:int32_t* post_bias}, ${9:vImage_Flags flags})'
  'vImageMatrixMultiply_PlanarF':
    'prefix': 'vImageMatrixMultiply_PlanarF'
    'body': 'vImageMatrixMultiply_PlanarF(${1:vImage_Buffer** srcs}, ${2:vImage_Buffer** dests}, ${3:uint32_t src_planes}, ${4:uint32_t dest_planes}, ${5:float* matrix}, ${6:float* pre_bias}, ${7:float* post_bias}, ${8:vImage_Flags flags})'
  'vImageMax_ARGB8888':
    'prefix': 'vImageMax_ARGB8888'
    'body': 'vImageMax_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMax_ARGBFFFF':
    'prefix': 'vImageMax_ARGBFFFF'
    'body': 'vImageMax_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMax_Planar8':
    'prefix': 'vImageMax_Planar8'
    'body': 'vImageMax_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMax_PlanarF':
    'prefix': 'vImageMax_PlanarF'
    'body': 'vImageMax_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMin_ARGB8888':
    'prefix': 'vImageMin_ARGB8888'
    'body': 'vImageMin_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMin_ARGBFFFF':
    'prefix': 'vImageMin_ARGBFFFF'
    'body': 'vImageMin_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMin_Planar8':
    'prefix': 'vImageMin_Planar8'
    'body': 'vImageMin_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMin_PlanarF':
    'prefix': 'vImageMin_PlanarF'
    'body': 'vImageMin_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:vImagePixelCount kernel_height}, ${7:vImagePixelCount kernel_width}, ${8:vImage_Flags flags})'
  'vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12':
    'prefix': 'vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12'
    'body': 'vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12(${1:vImage_Buffer* srcs}, ${2:vImage_Buffer* dests}, ${3:void* tempBuffer}, ${4:vImage_MultidimensionalTable table}, ${5:vImage_InterpolationMethod method}, ${6:vImage_Flags flags})'
  'vImageMultiDimensionalInterpolatedLookupTable_PlanarF':
    'prefix': 'vImageMultiDimensionalInterpolatedLookupTable_PlanarF'
    'body': 'vImageMultiDimensionalInterpolatedLookupTable_PlanarF(${1:vImage_Buffer* srcs}, ${2:vImage_Buffer* dests}, ${3:void* tempBuffer}, ${4:vImage_MultidimensionalTable table}, ${5:vImage_InterpolationMethod method}, ${6:vImage_Flags flags})'
  'vImageMultidimensionalTable_Create':
    'prefix': 'vImageMultidimensionalTable_Create'
    'body': 'vImageMultidimensionalTable_Create(${1:uint16_t* tableData}, ${2:uint32_t numSrcChannels}, ${3:uint32_t numDestChannels}, ${4:uint8_t* table_entries_per_dimension}, ${5:vImageMDTableUsageHint hint}, ${6:vImage_Flags flags}, ${7:vImage_Error* err})'
  'vImageMultidimensionalTable_Release':
    'prefix': 'vImageMultidimensionalTable_Release'
    'body': 'vImageMultidimensionalTable_Release(${1:vImage_MultidimensionalTable table})'
  'vImageMultidimensionalTable_Retain':
    'prefix': 'vImageMultidimensionalTable_Retain'
    'body': 'vImageMultidimensionalTable_Retain(${1:vImage_MultidimensionalTable table})'
  'vImageNewResamplingFilter':
    'prefix': 'vImageNewResamplingFilter'
    'body': 'vImageNewResamplingFilter(${1:float scale}, ${2:vImage_Flags flags})'
  'vImageNewResamplingFilterForFunctionUsingBuffer':
    'prefix': 'vImageNewResamplingFilterForFunctionUsingBuffer'
    'body': 'vImageNewResamplingFilterForFunctionUsingBuffer(${1:ResamplingFilter filter}, ${2:float scale}, ${3:void (*)(float *, float *, unsigned long, void *) kernelFunc}, ${4:float kernelWidth}, ${5:void* userData}, ${6:vImage_Flags flags})'
  'vImageOverwriteChannelsWithPixel_ARGB16U':
    'prefix': 'vImageOverwriteChannelsWithPixel_ARGB16U'
    'body': 'vImageOverwriteChannelsWithPixel_ARGB16U(${1:uint16_t* the_pixel}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannelsWithPixel_ARGB8888':
    'prefix': 'vImageOverwriteChannelsWithPixel_ARGB8888'
    'body': 'vImageOverwriteChannelsWithPixel_ARGB8888(${1:uint8_t* the_pixel}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannelsWithPixel_ARGBFFFF':
    'prefix': 'vImageOverwriteChannelsWithPixel_ARGBFFFF'
    'body': 'vImageOverwriteChannelsWithPixel_ARGBFFFF(${1:float* the_pixel}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannelsWithScalar_ARGB8888':
    'prefix': 'vImageOverwriteChannelsWithScalar_ARGB8888'
    'body': 'vImageOverwriteChannelsWithScalar_ARGB8888(${1:Pixel_8 scalar}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannelsWithScalar_ARGBFFFF':
    'prefix': 'vImageOverwriteChannelsWithScalar_ARGBFFFF'
    'body': 'vImageOverwriteChannelsWithScalar_ARGBFFFF(${1:Pixel_F scalar}, ${2:vImage_Buffer* src}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannelsWithScalar_Planar8':
    'prefix': 'vImageOverwriteChannelsWithScalar_Planar8'
    'body': 'vImageOverwriteChannelsWithScalar_Planar8(${1:Pixel_8 scalar}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageOverwriteChannelsWithScalar_PlanarF':
    'prefix': 'vImageOverwriteChannelsWithScalar_PlanarF'
    'body': 'vImageOverwriteChannelsWithScalar_PlanarF(${1:Pixel_F scalar}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageOverwriteChannels_ARGB8888':
    'prefix': 'vImageOverwriteChannels_ARGB8888'
    'body': 'vImageOverwriteChannels_ARGB8888(${1:vImage_Buffer* newSrc}, ${2:vImage_Buffer* origSrc}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageOverwriteChannels_ARGBFFFF':
    'prefix': 'vImageOverwriteChannels_ARGBFFFF'
    'body': 'vImageOverwriteChannels_ARGBFFFF(${1:vImage_Buffer* newSrc}, ${2:vImage_Buffer* origSrc}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImagePNGDecompressionFilter':
    'prefix': 'vImagePNGDecompressionFilter'
    'body': 'vImagePNGDecompressionFilter(${1:vImage_Buffer* buffer}, ${2:vImagePixelCount startScanline}, ${3:vImagePixelCount scanlineCount}, ${4:uint32_t bitsPerPixel}, ${5:uint32_t filterMethodNumber}, ${6:uint32_t filterType}, ${7:vImage_Flags flags})'
  'vImagePermuteChannelsWithMaskedInsert_ARGB8888':
    'prefix': 'vImagePermuteChannelsWithMaskedInsert_ARGB8888'
    'body': 'vImagePermuteChannelsWithMaskedInsert_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:uint8_t* backgroundColor}, ${6:vImage_Flags flags})'
  'vImagePermuteChannelsWithMaskedInsert_ARGBFFFF':
    'prefix': 'vImagePermuteChannelsWithMaskedInsert_ARGBFFFF'
    'body': 'vImagePermuteChannelsWithMaskedInsert_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:uint8_t copyMask}, ${5:float* backgroundColor}, ${6:vImage_Flags flags})'
  'vImagePermuteChannels_ARGB16U':
    'prefix': 'vImagePermuteChannels_ARGB16U'
    'body': 'vImagePermuteChannels_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:vImage_Flags flags})'
  'vImagePermuteChannels_ARGB8888':
    'prefix': 'vImagePermuteChannels_ARGB8888'
    'body': 'vImagePermuteChannels_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:vImage_Flags flags})'
  'vImagePermuteChannels_ARGBFFFF':
    'prefix': 'vImagePermuteChannels_ARGBFFFF'
    'body': 'vImagePermuteChannels_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t* permuteMap}, ${4:vImage_Flags flags})'
  'vImagePiecewiseGamma_Planar16Q12':
    'prefix': 'vImagePiecewiseGamma_Planar16Q12'
    'body': 'vImagePiecewiseGamma_Planar16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:Pixel_16S boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_Planar16Q12toPlanar8':
    'prefix': 'vImagePiecewiseGamma_Planar16Q12toPlanar8'
    'body': 'vImagePiecewiseGamma_Planar16Q12toPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:Pixel_16S boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_Planar8':
    'prefix': 'vImagePiecewiseGamma_Planar8'
    'body': 'vImagePiecewiseGamma_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:Pixel_8 boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_Planar8toPlanar16Q12':
    'prefix': 'vImagePiecewiseGamma_Planar8toPlanar16Q12'
    'body': 'vImagePiecewiseGamma_Planar8toPlanar16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:Pixel_8 boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_Planar8toPlanarF':
    'prefix': 'vImagePiecewiseGamma_Planar8toPlanarF'
    'body': 'vImagePiecewiseGamma_Planar8toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:Pixel_8 boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_PlanarF':
    'prefix': 'vImagePiecewiseGamma_PlanarF'
    'body': 'vImagePiecewiseGamma_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:float boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewiseGamma_PlanarFtoPlanar8':
    'prefix': 'vImagePiecewiseGamma_PlanarFtoPlanar8'
    'body': 'vImagePiecewiseGamma_PlanarFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float* exponentialCoeffs}, ${4:float gamma}, ${5:float* linearCoeffs}, ${6:float boundary}, ${7:vImage_Flags flags})'
  'vImagePiecewisePolynomial_Planar8toPlanarF':
    'prefix': 'vImagePiecewisePolynomial_Planar8toPlanarF'
    'body': 'vImagePiecewisePolynomial_Planar8toPlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float** coefficients}, ${4:float* boundaries}, ${5:uint32_t order}, ${6:uint32_t log2segments}, ${7:vImage_Flags flags})'
  'vImagePiecewisePolynomial_PlanarF':
    'prefix': 'vImagePiecewisePolynomial_PlanarF'
    'body': 'vImagePiecewisePolynomial_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float** coefficients}, ${4:float* boundaries}, ${5:uint32_t order}, ${6:uint32_t log2segments}, ${7:vImage_Flags flags})'
  'vImagePiecewisePolynomial_PlanarFtoPlanar8':
    'prefix': 'vImagePiecewisePolynomial_PlanarFtoPlanar8'
    'body': 'vImagePiecewisePolynomial_PlanarFtoPlanar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float** coefficients}, ${4:float* boundaries}, ${5:uint32_t order}, ${6:uint32_t log2segments}, ${7:vImage_Flags flags})'
  'vImagePiecewiseRational_PlanarF':
    'prefix': 'vImagePiecewiseRational_PlanarF'
    'body': 'vImagePiecewiseRational_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:float** topCoefficients}, ${4:float** bottomCoefficients}, ${5:float* boundaries}, ${6:uint32_t topOrder}, ${7:uint32_t bottomOrder}, ${8:uint32_t log2segments}, ${9:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlendWithPermute_ARGB8888':
    'prefix': 'vImagePremultipliedAlphaBlendWithPermute_ARGB8888'
    'body': 'vImagePremultipliedAlphaBlendWithPermute_ARGB8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:uint8_t* permuteMap}, ${5:_Bool makeDestAlphaOpaque}, ${6:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlendWithPermute_RGBA8888':
    'prefix': 'vImagePremultipliedAlphaBlendWithPermute_RGBA8888'
    'body': 'vImagePremultipliedAlphaBlendWithPermute_RGBA8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:uint8_t* permuteMap}, ${5:_Bool makeDestAlphaOpaque}, ${6:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_ARGB8888':
    'prefix': 'vImagePremultipliedAlphaBlend_ARGB8888'
    'body': 'vImagePremultipliedAlphaBlend_ARGB8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_ARGBFFFF':
    'prefix': 'vImagePremultipliedAlphaBlend_ARGBFFFF'
    'body': 'vImagePremultipliedAlphaBlend_ARGBFFFF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_BGRA8888':
    'prefix': 'vImagePremultipliedAlphaBlend_BGRA8888'
    'body': 'vImagePremultipliedAlphaBlend_BGRA8888(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_BGRAFFFF':
    'prefix': 'vImagePremultipliedAlphaBlend_BGRAFFFF'
    'body': 'vImagePremultipliedAlphaBlend_BGRAFFFF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcBottom}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_Planar8':
    'prefix': 'vImagePremultipliedAlphaBlend_Planar8'
    'body': 'vImagePremultipliedAlphaBlend_Planar8(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImagePremultipliedAlphaBlend_PlanarF':
    'prefix': 'vImagePremultipliedAlphaBlend_PlanarF'
    'body': 'vImagePremultipliedAlphaBlend_PlanarF(${1:vImage_Buffer* srcTop}, ${2:vImage_Buffer* srcTopAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImagePremultipliedConstAlphaBlend_ARGB8888':
    'prefix': 'vImagePremultipliedConstAlphaBlend_ARGB8888'
    'body': 'vImagePremultipliedConstAlphaBlend_ARGB8888(${1:vImage_Buffer* srcTop}, ${2:Pixel_8 constAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImagePremultipliedConstAlphaBlend_ARGBFFFF':
    'prefix': 'vImagePremultipliedConstAlphaBlend_ARGBFFFF'
    'body': 'vImagePremultipliedConstAlphaBlend_ARGBFFFF(${1:vImage_Buffer* srcTop}, ${2:Pixel_F constAlpha}, ${3:vImage_Buffer* srcBottom}, ${4:vImage_Buffer* dest}, ${5:vImage_Flags flags})'
  'vImagePremultipliedConstAlphaBlend_Planar8':
    'prefix': 'vImagePremultipliedConstAlphaBlend_Planar8'
    'body': 'vImagePremultipliedConstAlphaBlend_Planar8(${1:vImage_Buffer* srcTop}, ${2:Pixel_8 constAlpha}, ${3:vImage_Buffer* srcTopAlpha}, ${4:vImage_Buffer* srcBottom}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImagePremultipliedConstAlphaBlend_PlanarF':
    'prefix': 'vImagePremultipliedConstAlphaBlend_PlanarF'
    'body': 'vImagePremultipliedConstAlphaBlend_PlanarF(${1:vImage_Buffer* srcTop}, ${2:Pixel_F constAlpha}, ${3:vImage_Buffer* srcTopAlpha}, ${4:vImage_Buffer* srcBottom}, ${5:vImage_Buffer* dest}, ${6:vImage_Flags flags})'
  'vImagePremultiplyData_ARGB16Q12':
    'prefix': 'vImagePremultiplyData_ARGB16Q12'
    'body': 'vImagePremultiplyData_ARGB16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_ARGB16U':
    'prefix': 'vImagePremultiplyData_ARGB16U'
    'body': 'vImagePremultiplyData_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_ARGB8888':
    'prefix': 'vImagePremultiplyData_ARGB8888'
    'body': 'vImagePremultiplyData_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_ARGBFFFF':
    'prefix': 'vImagePremultiplyData_ARGBFFFF'
    'body': 'vImagePremultiplyData_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_Planar8':
    'prefix': 'vImagePremultiplyData_Planar8'
    'body': 'vImagePremultiplyData_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultiplyData_PlanarF':
    'prefix': 'vImagePremultiplyData_PlanarF'
    'body': 'vImagePremultiplyData_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImagePremultiplyData_RGBA16Q12':
    'prefix': 'vImagePremultiplyData_RGBA16Q12'
    'body': 'vImagePremultiplyData_RGBA16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_RGBA16U':
    'prefix': 'vImagePremultiplyData_RGBA16U'
    'body': 'vImagePremultiplyData_RGBA16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_RGBA8888':
    'prefix': 'vImagePremultiplyData_RGBA8888'
    'body': 'vImagePremultiplyData_RGBA8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImagePremultiplyData_RGBAFFFF':
    'prefix': 'vImagePremultiplyData_RGBAFFFF'
    'body': 'vImagePremultiplyData_RGBAFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageRichardsonLucyDeConvolve_ARGB8888':
    'prefix': 'vImageRichardsonLucyDeConvolve_ARGB8888'
    'body': 'vImageRichardsonLucyDeConvolve_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:int16_t* kernel2}, ${8:uint32_t kernel_height}, ${9:uint32_t kernel_width}, ${10:uint32_t kernel_height2}, ${11:uint32_t kernel_width2}, ${12:int32_t divisor}, ${13:int32_t divisor2}, ${14:uint8_t* backgroundColor}, ${15:uint32_t iterationCount}, ${16:vImage_Flags flags})'
  'vImageRichardsonLucyDeConvolve_ARGBFFFF':
    'prefix': 'vImageRichardsonLucyDeConvolve_ARGBFFFF'
    'body': 'vImageRichardsonLucyDeConvolve_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:float* kernel2}, ${8:uint32_t kernel_height}, ${9:uint32_t kernel_width}, ${10:uint32_t kernel_height2}, ${11:uint32_t kernel_width2}, ${12:float* backgroundColor}, ${13:uint32_t iterationCount}, ${14:vImage_Flags flags})'
  'vImageRichardsonLucyDeConvolve_Planar8':
    'prefix': 'vImageRichardsonLucyDeConvolve_Planar8'
    'body': 'vImageRichardsonLucyDeConvolve_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:int16_t* kernel}, ${7:int16_t* kernel2}, ${8:uint32_t kernel_height}, ${9:uint32_t kernel_width}, ${10:uint32_t kernel_height2}, ${11:uint32_t kernel_width2}, ${12:int32_t divisor}, ${13:int32_t divisor2}, ${14:Pixel_8 backgroundColor}, ${15:uint32_t iterationCount}, ${16:vImage_Flags flags})'
  'vImageRichardsonLucyDeConvolve_PlanarF':
    'prefix': 'vImageRichardsonLucyDeConvolve_PlanarF'
    'body': 'vImageRichardsonLucyDeConvolve_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:float* kernel}, ${7:float* kernel2}, ${8:uint32_t kernel_height}, ${9:uint32_t kernel_width}, ${10:uint32_t kernel_height2}, ${11:uint32_t kernel_width2}, ${12:Pixel_F backgroundColor}, ${13:uint32_t iterationCount}, ${14:vImage_Flags flags})'
  'vImageRotate90_ARGB16S':
    'prefix': 'vImageRotate90_ARGB16S'
    'body': 'vImageRotate90_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:int16_t* backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_ARGB16U':
    'prefix': 'vImageRotate90_ARGB16U'
    'body': 'vImageRotate90_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:uint16_t* backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_ARGB8888':
    'prefix': 'vImageRotate90_ARGB8888'
    'body': 'vImageRotate90_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:uint8_t* backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_ARGBFFFF':
    'prefix': 'vImageRotate90_ARGBFFFF'
    'body': 'vImageRotate90_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:float* backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_Planar16U':
    'prefix': 'vImageRotate90_Planar16U'
    'body': 'vImageRotate90_Planar16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:Pixel_16U backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_Planar8':
    'prefix': 'vImageRotate90_Planar8'
    'body': 'vImageRotate90_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:Pixel_8 backColor}, ${5:vImage_Flags flags})'
  'vImageRotate90_PlanarF':
    'prefix': 'vImageRotate90_PlanarF'
    'body': 'vImageRotate90_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:uint8_t rotationConstant}, ${4:Pixel_F backColor}, ${5:vImage_Flags flags})'
  'vImageRotate_ARGB16S':
    'prefix': 'vImageRotate_ARGB16S'
    'body': 'vImageRotate_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:int16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageRotate_ARGB16U':
    'prefix': 'vImageRotate_ARGB16U'
    'body': 'vImageRotate_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:uint16_t* backColor}, ${6:vImage_Flags flags})'
  'vImageRotate_ARGB8888':
    'prefix': 'vImageRotate_ARGB8888'
    'body': 'vImageRotate_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:uint8_t* backColor}, ${6:vImage_Flags flags})'
  'vImageRotate_ARGBFFFF':
    'prefix': 'vImageRotate_ARGBFFFF'
    'body': 'vImageRotate_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:float* backColor}, ${6:vImage_Flags flags})'
  'vImageRotate_Planar8':
    'prefix': 'vImageRotate_Planar8'
    'body': 'vImageRotate_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:Pixel_8 backColor}, ${6:vImage_Flags flags})'
  'vImageRotate_PlanarF':
    'prefix': 'vImageRotate_PlanarF'
    'body': 'vImageRotate_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:float angleInRadians}, ${5:Pixel_F backColor}, ${6:vImage_Flags flags})'
  'vImageScale_ARGB16S':
    'prefix': 'vImageScale_ARGB16S'
    'body': 'vImageScale_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageScale_ARGB16U':
    'prefix': 'vImageScale_ARGB16U'
    'body': 'vImageScale_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageScale_ARGB8888':
    'prefix': 'vImageScale_ARGB8888'
    'body': 'vImageScale_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageScale_ARGBFFFF':
    'prefix': 'vImageScale_ARGBFFFF'
    'body': 'vImageScale_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageScale_Planar8':
    'prefix': 'vImageScale_Planar8'
    'body': 'vImageScale_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageScale_PlanarF':
    'prefix': 'vImageScale_PlanarF'
    'body': 'vImageScale_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImage_Flags flags})'
  'vImageSelectChannels_ARGB8888':
    'prefix': 'vImageSelectChannels_ARGB8888'
    'body': 'vImageSelectChannels_ARGB8888(${1:vImage_Buffer* newSrc}, ${2:vImage_Buffer* origSrc}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageSelectChannels_ARGBFFFF':
    'prefix': 'vImageSelectChannels_ARGBFFFF'
    'body': 'vImageSelectChannels_ARGBFFFF(${1:vImage_Buffer* newSrc}, ${2:vImage_Buffer* origSrc}, ${3:vImage_Buffer* dest}, ${4:uint8_t copyMask}, ${5:vImage_Flags flags})'
  'vImageTableLookUp_ARGB8888':
    'prefix': 'vImageTableLookUp_ARGB8888'
    'body': 'vImageTableLookUp_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* alphaTable}, ${4:Pixel_8* redTable}, ${5:Pixel_8* greenTable}, ${6:Pixel_8* blueTable}, ${7:vImage_Flags flags})'
  'vImageTableLookUp_Planar8':
    'prefix': 'vImageTableLookUp_Planar8'
    'body': 'vImageTableLookUp_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:Pixel_8* table}, ${4:vImage_Flags flags})'
  'vImageTentConvolve_ARGB8888':
    'prefix': 'vImageTentConvolve_ARGB8888'
    'body': 'vImageTentConvolve_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:uint32_t kernel_height}, ${7:uint32_t kernel_width}, ${8:uint8_t* backgroundColor}, ${9:vImage_Flags flags})'
  'vImageTentConvolve_Planar8':
    'prefix': 'vImageTentConvolve_Planar8'
    'body': 'vImageTentConvolve_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:void* tempBuffer}, ${4:vImagePixelCount srcOffsetToROI_X}, ${5:vImagePixelCount srcOffsetToROI_Y}, ${6:uint32_t kernel_height}, ${7:uint32_t kernel_width}, ${8:Pixel_8 backgroundColor}, ${9:vImage_Flags flags})'
  'vImageUnpremultiplyData_ARGB16Q12':
    'prefix': 'vImageUnpremultiplyData_ARGB16Q12'
    'body': 'vImageUnpremultiplyData_ARGB16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_ARGB16U':
    'prefix': 'vImageUnpremultiplyData_ARGB16U'
    'body': 'vImageUnpremultiplyData_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_ARGB8888':
    'prefix': 'vImageUnpremultiplyData_ARGB8888'
    'body': 'vImageUnpremultiplyData_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_ARGBFFFF':
    'prefix': 'vImageUnpremultiplyData_ARGBFFFF'
    'body': 'vImageUnpremultiplyData_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_Planar8':
    'prefix': 'vImageUnpremultiplyData_Planar8'
    'body': 'vImageUnpremultiplyData_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageUnpremultiplyData_PlanarF':
    'prefix': 'vImageUnpremultiplyData_PlanarF'
    'body': 'vImageUnpremultiplyData_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* alpha}, ${3:vImage_Buffer* dest}, ${4:vImage_Flags flags})'
  'vImageUnpremultiplyData_RGBA16Q12':
    'prefix': 'vImageUnpremultiplyData_RGBA16Q12'
    'body': 'vImageUnpremultiplyData_RGBA16Q12(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_RGBA16U':
    'prefix': 'vImageUnpremultiplyData_RGBA16U'
    'body': 'vImageUnpremultiplyData_RGBA16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_RGBA8888':
    'prefix': 'vImageUnpremultiplyData_RGBA8888'
    'body': 'vImageUnpremultiplyData_RGBA8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageUnpremultiplyData_RGBAFFFF':
    'prefix': 'vImageUnpremultiplyData_RGBAFFFF'
    'body': 'vImageUnpremultiplyData_RGBAFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_ARGB16S':
    'prefix': 'vImageVerticalReflect_ARGB16S'
    'body': 'vImageVerticalReflect_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_ARGB16U':
    'prefix': 'vImageVerticalReflect_ARGB16U'
    'body': 'vImageVerticalReflect_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_ARGB8888':
    'prefix': 'vImageVerticalReflect_ARGB8888'
    'body': 'vImageVerticalReflect_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_ARGBFFFF':
    'prefix': 'vImageVerticalReflect_ARGBFFFF'
    'body': 'vImageVerticalReflect_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_Planar16U':
    'prefix': 'vImageVerticalReflect_Planar16U'
    'body': 'vImageVerticalReflect_Planar16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_Planar8':
    'prefix': 'vImageVerticalReflect_Planar8'
    'body': 'vImageVerticalReflect_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalReflect_PlanarF':
    'prefix': 'vImageVerticalReflect_PlanarF'
    'body': 'vImageVerticalReflect_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImage_Flags flags})'
  'vImageVerticalShearD_ARGB16S':
    'prefix': 'vImageVerticalShearD_ARGB16S'
    'body': 'vImageVerticalShearD_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:int16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShearD_ARGB16U':
    'prefix': 'vImageVerticalShearD_ARGB16U'
    'body': 'vImageVerticalShearD_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:uint16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShearD_ARGB8888':
    'prefix': 'vImageVerticalShearD_ARGB8888'
    'body': 'vImageVerticalShearD_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:uint8_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShearD_ARGBFFFF':
    'prefix': 'vImageVerticalShearD_ARGBFFFF'
    'body': 'vImageVerticalShearD_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:float* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShearD_Planar8':
    'prefix': 'vImageVerticalShearD_Planar8'
    'body': 'vImageVerticalShearD_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_8 backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShearD_PlanarF':
    'prefix': 'vImageVerticalShearD_PlanarF'
    'body': 'vImageVerticalShearD_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:double yTranslate}, ${6:double shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_F backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_ARGB16S':
    'prefix': 'vImageVerticalShear_ARGB16S'
    'body': 'vImageVerticalShear_ARGB16S(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:int16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_ARGB16U':
    'prefix': 'vImageVerticalShear_ARGB16U'
    'body': 'vImageVerticalShear_ARGB16U(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:uint16_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_ARGB8888':
    'prefix': 'vImageVerticalShear_ARGB8888'
    'body': 'vImageVerticalShear_ARGB8888(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:uint8_t* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_ARGBFFFF':
    'prefix': 'vImageVerticalShear_ARGBFFFF'
    'body': 'vImageVerticalShear_ARGBFFFF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:float* backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_Planar8':
    'prefix': 'vImageVerticalShear_Planar8'
    'body': 'vImageVerticalShear_Planar8(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_8 backColor}, ${9:vImage_Flags flags})'
  'vImageVerticalShear_PlanarF':
    'prefix': 'vImageVerticalShear_PlanarF'
    'body': 'vImageVerticalShear_PlanarF(${1:vImage_Buffer* src}, ${2:vImage_Buffer* dest}, ${3:vImagePixelCount srcOffsetToROI_X}, ${4:vImagePixelCount srcOffsetToROI_Y}, ${5:float yTranslate}, ${6:float shearSlope}, ${7:ResamplingFilter filter}, ${8:Pixel_F backColor}, ${9:vImage_Flags flags})'
