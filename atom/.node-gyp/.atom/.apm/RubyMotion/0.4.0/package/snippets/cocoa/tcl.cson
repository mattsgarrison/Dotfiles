'.source.rubymotion':
  'TclBNKaratsubaMulCutoff (int)':
    'prefix': 'TclBNKaratsubaMulCutoff'
    'body': 'TclBNKaratsubaMulCutoff'
  'TclBNKaratsubaSqrCutoff (int)':
    'prefix': 'TclBNKaratsubaSqrCutoff'
    'body': 'TclBNKaratsubaSqrCutoff'
  'TclBNMpSRmap (char*)':
    'prefix': 'TclBNMpSRmap'
    'body': 'TclBNMpSRmap'
  'TclBNToomMulCutoff (int)':
    'prefix': 'TclBNToomMulCutoff'
    'body': 'TclBNToomMulCutoff'
  'TclBNToomSqrCutoff (int)':
    'prefix': 'TclBNToomSqrCutoff'
    'body': 'TclBNToomSqrCutoff'
  'ltm_prime_tab (mp_digit*)':
    'prefix': 'ltm_prime_tab'
    'body': 'ltm_prime_tab'
  'tclArrayHashKeyType (Tcl_HashKeyType)':
    'prefix': 'tclArrayHashKeyType'
    'body': 'tclArrayHashKeyType'
  'tclArraySearchType (Tcl_ObjType)':
    'prefix': 'tclArraySearchType'
    'body': 'tclArraySearchType'
  'tclBignumType (Tcl_ObjType)':
    'prefix': 'tclBignumType'
    'body': 'tclBignumType'
  'tclBooleanType (Tcl_ObjType)':
    'prefix': 'tclBooleanType'
    'body': 'tclBooleanType'
  'tclByteArrayType (Tcl_ObjType)':
    'prefix': 'tclByteArrayType'
    'body': 'tclByteArrayType'
  'tclByteCodeType (Tcl_ObjType)':
    'prefix': 'tclByteCodeType'
    'body': 'tclByteCodeType'
  'tclDictType (Tcl_ObjType)':
    'prefix': 'tclDictType'
    'body': 'tclDictType'
  'tclDictUpdateInfoType (AuxDataType)':
    'prefix': 'tclDictUpdateInfoType'
    'body': 'tclDictUpdateInfoType'
  'tclDoubleType (Tcl_ObjType)':
    'prefix': 'tclDoubleType'
    'body': 'tclDoubleType'
  'tclEmptyString (char)':
    'prefix': 'tclEmptyString'
    'body': 'tclEmptyString'
  'tclEmptyStringRep (char*)':
    'prefix': 'tclEmptyStringRep'
    'body': 'tclEmptyStringRep'
  'tclEndOffsetType (Tcl_ObjType)':
    'prefix': 'tclEndOffsetType'
    'body': 'tclEndOffsetType'
  'tclEnsembleCmdType (Tcl_ObjType)':
    'prefix': 'tclEnsembleCmdType'
    'body': 'tclEnsembleCmdType'
  'tclFindExecutableSearchDone (int)':
    'prefix': 'tclFindExecutableSearchDone'
    'body': 'tclFindExecutableSearchDone'
  'tclForeachInfoType (AuxDataType)':
    'prefix': 'tclForeachInfoType'
    'body': 'tclForeachInfoType'
  'tclFreeObjList (Tcl_Obj*)':
    'prefix': 'tclFreeObjList'
    'body': 'tclFreeObjList'
  'tclInstructionTable (InstructionDesc*)':
    'prefix': 'tclInstructionTable'
    'body': 'tclInstructionTable'
  'tclIntPlatStubsPtr (TclIntPlatStubs*)':
    'prefix': 'tclIntPlatStubsPtr'
    'body': 'tclIntPlatStubsPtr'
  'tclIntStubsPtr (TclIntStubs*)':
    'prefix': 'tclIntStubsPtr'
    'body': 'tclIntStubsPtr'
  'tclIntType (Tcl_ObjType)':
    'prefix': 'tclIntType'
    'body': 'tclIntType'
  'tclJumptableInfoType (AuxDataType)':
    'prefix': 'tclJumptableInfoType'
    'body': 'tclJumptableInfoType'
  'tclListType (Tcl_ObjType)':
    'prefix': 'tclListType'
    'body': 'tclListType'
  'tclMemDumpFileName (char*)':
    'prefix': 'tclMemDumpFileName'
    'body': 'tclMemDumpFileName'
  'tclNativeExecutableName (char*)':
    'prefix': 'tclNativeExecutableName'
    'body': 'tclNativeExecutableName'
  'tclObjHashKeyType (Tcl_HashKeyType)':
    'prefix': 'tclObjHashKeyType'
    'body': 'tclObjHashKeyType'
  'tclOneWordHashKeyType (Tcl_HashKeyType)':
    'prefix': 'tclOneWordHashKeyType'
    'body': 'tclOneWordHashKeyType'
  'tclOriginalNotifier (Tcl_NotifierProcs)':
    'prefix': 'tclOriginalNotifier'
    'body': 'tclOriginalNotifier'
  'tclPlatStubsPtr (TclPlatStubs*)':
    'prefix': 'tclPlatStubsPtr'
    'body': 'tclPlatStubsPtr'
  'tclPlatform (TclPlatformType)':
    'prefix': 'tclPlatform'
    'body': 'tclPlatform'
  'tclProcBodyType (Tcl_ObjType)':
    'prefix': 'tclProcBodyType'
    'body': 'tclProcBodyType'
  'tclRegexpType (Tcl_ObjType)':
    'prefix': 'tclRegexpType'
    'body': 'tclRegexpType'
  'tclStringHashKeyType (Tcl_HashKeyType)':
    'prefix': 'tclStringHashKeyType'
    'body': 'tclStringHashKeyType'
  'tclStringType (Tcl_ObjType)':
    'prefix': 'tclStringType'
    'body': 'tclStringType'
  'tclStubsPtr (TclStubs*)':
    'prefix': 'tclStubsPtr'
    'body': 'tclStubsPtr'
  'tclTimeClientData (ClientData)':
    'prefix': 'tclTimeClientData'
    'body': 'tclTimeClientData'
  'tclTomMathStubsPtr (TclTomMathStubs*)':
    'prefix': 'tclTomMathStubsPtr'
    'body': 'tclTomMathStubsPtr'
  'TCL_LL_MODIFIER (ll)':
    'prefix': 'TCL_LL_MODIFIER'
    'body': 'TCL_LL_MODIFIER'
  'TCL_PATCH_LEVEL (8.5.9)':
    'prefix': 'TCL_PATCH_LEVEL'
    'body': 'TCL_PATCH_LEVEL'
  'TCL_VERSION (8.5)':
    'prefix': 'TCL_VERSION'
    'body': 'TCL_VERSION'
  'CATCH_EXCEPTION_RANGE (1)':
    'prefix': 'CATCH_EXCEPTION_RANGE'
    'body': 'CATCH_EXCEPTION_RANGE'
  'CLL_END (-1)':
    'prefix': 'CLL_END'
    'body': 'CLL_END'
  'CMD_HAS_EXEC_TRACES (4)':
    'prefix': 'CMD_HAS_EXEC_TRACES'
    'body': 'CMD_HAS_EXEC_TRACES'
  'CMD_IS_DELETED (1)':
    'prefix': 'CMD_IS_DELETED'
    'body': 'CMD_IS_DELETED'
  'CMD_TRACE_ACTIVE (2)':
    'prefix': 'CMD_TRACE_ACTIVE'
    'body': 'CMD_TRACE_ACTIVE'
  'COMPILEENV_INIT_AUX_DATA_SIZE (5)':
    'prefix': 'COMPILEENV_INIT_AUX_DATA_SIZE'
    'body': 'COMPILEENV_INIT_AUX_DATA_SIZE'
  'COMPILEENV_INIT_CMD_MAP_SIZE (40)':
    'prefix': 'COMPILEENV_INIT_CMD_MAP_SIZE'
    'body': 'COMPILEENV_INIT_CMD_MAP_SIZE'
  'COMPILEENV_INIT_CODE_BYTES (250)':
    'prefix': 'COMPILEENV_INIT_CODE_BYTES'
    'body': 'COMPILEENV_INIT_CODE_BYTES'
  'COMPILEENV_INIT_EXCEPT_RANGES (5)':
    'prefix': 'COMPILEENV_INIT_EXCEPT_RANGES'
    'body': 'COMPILEENV_INIT_EXCEPT_RANGES'
  'COMPILEENV_INIT_NUM_OBJECTS (60)':
    'prefix': 'COMPILEENV_INIT_NUM_OBJECTS'
    'body': 'COMPILEENV_INIT_NUM_OBJECTS'
  'DELETED (1)':
    'prefix': 'DELETED'
    'body': 'DELETED'
  'DICT_PATH_CREATE (5)':
    'prefix': 'DICT_PATH_CREATE'
    'body': 'DICT_PATH_CREATE'
  'DICT_PATH_EXISTS (2)':
    'prefix': 'DICT_PATH_EXISTS'
    'body': 'DICT_PATH_EXISTS'
  'DICT_PATH_READ (0)':
    'prefix': 'DICT_PATH_READ'
    'body': 'DICT_PATH_READ'
  'DICT_PATH_UPDATE (1)':
    'prefix': 'DICT_PATH_UPDATE'
    'body': 'DICT_PATH_UPDATE'
  'DIGIT_BIT (28)':
    'prefix': 'DIGIT_BIT'
    'body': 'DIGIT_BIT'
  'DONT_COMPILE_CMDS_INLINE (32)':
    'prefix': 'DONT_COMPILE_CMDS_INLINE'
    'body': 'DONT_COMPILE_CMDS_INLINE'
  'ENSEMBLE_COMPILE (4)':
    'prefix': 'ENSEMBLE_COMPILE'
    'body': 'ENSEMBLE_COMPILE'
  'ERR_ALREADY_LOGGED (4)':
    'prefix': 'ERR_ALREADY_LOGGED'
    'body': 'ERR_ALREADY_LOGGED'
  'ERR_LEGACY_COPY (2048)':
    'prefix': 'ERR_LEGACY_COPY'
    'body': 'ERR_LEGACY_COPY'
  'FRAME_IS_LAMBDA (2)':
    'prefix': 'FRAME_IS_LAMBDA'
    'body': 'FRAME_IS_LAMBDA'
  'FRAME_IS_PROC (1)':
    'prefix': 'FRAME_IS_PROC'
    'body': 'FRAME_IS_PROC'
  'INST_ADD (53)':
    'prefix': 'INST_ADD'
    'body': 'INST_ADD'
  'INST_APPEND_ARRAY1 (84)':
    'prefix': 'INST_APPEND_ARRAY1'
    'body': 'INST_APPEND_ARRAY1'
  'INST_APPEND_ARRAY4 (85)':
    'prefix': 'INST_APPEND_ARRAY4'
    'body': 'INST_APPEND_ARRAY4'
  'INST_APPEND_ARRAY_STK (86)':
    'prefix': 'INST_APPEND_ARRAY_STK'
    'body': 'INST_APPEND_ARRAY_STK'
  'INST_APPEND_SCALAR1 (82)':
    'prefix': 'INST_APPEND_SCALAR1'
    'body': 'INST_APPEND_SCALAR1'
  'INST_APPEND_SCALAR4 (83)':
    'prefix': 'INST_APPEND_SCALAR4'
    'body': 'INST_APPEND_SCALAR4'
  'INST_APPEND_STK (87)':
    'prefix': 'INST_APPEND_STK'
    'body': 'INST_APPEND_STK'
  'INST_BEGIN_CATCH4 (69)':
    'prefix': 'INST_BEGIN_CATCH4'
    'body': 'INST_BEGIN_CATCH4'
  'INST_BITAND (44)':
    'prefix': 'INST_BITAND'
    'body': 'INST_BITAND'
  'INST_BITNOT (60)':
    'prefix': 'INST_BITNOT'
    'body': 'INST_BITNOT'
  'INST_BITOR (42)':
    'prefix': 'INST_BITOR'
    'body': 'INST_BITOR'
  'INST_BITXOR (43)':
    'prefix': 'INST_BITXOR'
    'body': 'INST_BITXOR'
  'INST_BREAK (65)':
    'prefix': 'INST_BREAK'
    'body': 'INST_BREAK'
  'INST_CALL_BUILTIN_FUNC1 (62)':
    'prefix': 'INST_CALL_BUILTIN_FUNC1'
    'body': 'INST_CALL_BUILTIN_FUNC1'
  'INST_CALL_FUNC1 (63)':
    'prefix': 'INST_CALL_FUNC1'
    'body': 'INST_CALL_FUNC1'
  'INST_CONCAT1 (5)':
    'prefix': 'INST_CONCAT1'
    'body': 'INST_CONCAT1'
  'INST_CONTINUE (66)':
    'prefix': 'INST_CONTINUE'
    'body': 'INST_CONTINUE'
  'INST_DICT_APPEND (114)':
    'prefix': 'INST_DICT_APPEND'
    'body': 'INST_DICT_APPEND'
  'INST_DICT_DONE (118)':
    'prefix': 'INST_DICT_DONE'
    'body': 'INST_DICT_DONE'
  'INST_DICT_FIRST (116)':
    'prefix': 'INST_DICT_FIRST'
    'body': 'INST_DICT_FIRST'
  'INST_DICT_GET (110)':
    'prefix': 'INST_DICT_GET'
    'body': 'INST_DICT_GET'
  'INST_DICT_INCR_IMM (113)':
    'prefix': 'INST_DICT_INCR_IMM'
    'body': 'INST_DICT_INCR_IMM'
  'INST_DICT_LAPPEND (115)':
    'prefix': 'INST_DICT_LAPPEND'
    'body': 'INST_DICT_LAPPEND'
  'INST_DICT_NEXT (117)':
    'prefix': 'INST_DICT_NEXT'
    'body': 'INST_DICT_NEXT'
  'INST_DICT_SET (111)':
    'prefix': 'INST_DICT_SET'
    'body': 'INST_DICT_SET'
  'INST_DICT_UNSET (112)':
    'prefix': 'INST_DICT_UNSET'
    'body': 'INST_DICT_UNSET'
  'INST_DICT_UPDATE_END (120)':
    'prefix': 'INST_DICT_UPDATE_END'
    'body': 'INST_DICT_UPDATE_END'
  'INST_DICT_UPDATE_START (119)':
    'prefix': 'INST_DICT_UPDATE_START'
    'body': 'INST_DICT_UPDATE_START'
  'INST_DIV (56)':
    'prefix': 'INST_DIV'
    'body': 'INST_DIV'
  'INST_DONE (0)':
    'prefix': 'INST_DONE'
    'body': 'INST_DONE'
  'INST_DUP (4)':
    'prefix': 'INST_DUP'
    'body': 'INST_DUP'
  'INST_END_CATCH (70)':
    'prefix': 'INST_END_CATCH'
    'body': 'INST_END_CATCH'
  'INST_EQ (45)':
    'prefix': 'INST_EQ'
    'body': 'INST_EQ'
  'INST_EVAL_STK (8)':
    'prefix': 'INST_EVAL_STK'
    'body': 'INST_EVAL_STK'
  'INST_EXIST_ARRAY (129)':
    'prefix': 'INST_EXIST_ARRAY'
    'body': 'INST_EXIST_ARRAY'
  'INST_EXIST_ARRAY_STK (130)':
    'prefix': 'INST_EXIST_ARRAY_STK'
    'body': 'INST_EXIST_ARRAY_STK'
  'INST_EXIST_SCALAR (128)':
    'prefix': 'INST_EXIST_SCALAR'
    'body': 'INST_EXIST_SCALAR'
  'INST_EXIST_STK (131)':
    'prefix': 'INST_EXIST_STK'
    'body': 'INST_EXIST_STK'
  'INST_EXPAND_START (100)':
    'prefix': 'INST_EXPAND_START'
    'body': 'INST_EXPAND_START'
  'INST_EXPAND_STKTOP (101)':
    'prefix': 'INST_EXPAND_STKTOP'
    'body': 'INST_EXPAND_STKTOP'
  'INST_EXPON (99)':
    'prefix': 'INST_EXPON'
    'body': 'INST_EXPON'
  'INST_EXPR_STK (9)':
    'prefix': 'INST_EXPR_STK'
    'body': 'INST_EXPR_STK'
  'INST_FOREACH_START4 (67)':
    'prefix': 'INST_FOREACH_START4'
    'body': 'INST_FOREACH_START4'
  'INST_FOREACH_STEP4 (68)':
    'prefix': 'INST_FOREACH_STEP4'
    'body': 'INST_FOREACH_STEP4'
  'INST_GE (50)':
    'prefix': 'INST_GE'
    'body': 'INST_GE'
  'INST_GT (48)':
    'prefix': 'INST_GT'
    'body': 'INST_GT'
  'INST_INCR_ARRAY1 (26)':
    'prefix': 'INST_INCR_ARRAY1'
    'body': 'INST_INCR_ARRAY1'
  'INST_INCR_ARRAY1_IMM (31)':
    'prefix': 'INST_INCR_ARRAY1_IMM'
    'body': 'INST_INCR_ARRAY1_IMM'
  'INST_INCR_ARRAY_STK (27)':
    'prefix': 'INST_INCR_ARRAY_STK'
    'body': 'INST_INCR_ARRAY_STK'
  'INST_INCR_ARRAY_STK_IMM (32)':
    'prefix': 'INST_INCR_ARRAY_STK_IMM'
    'body': 'INST_INCR_ARRAY_STK_IMM'
  'INST_INCR_SCALAR1 (24)':
    'prefix': 'INST_INCR_SCALAR1'
    'body': 'INST_INCR_SCALAR1'
  'INST_INCR_SCALAR1_IMM (29)':
    'prefix': 'INST_INCR_SCALAR1_IMM'
    'body': 'INST_INCR_SCALAR1_IMM'
  'INST_INCR_SCALAR_STK (25)':
    'prefix': 'INST_INCR_SCALAR_STK'
    'body': 'INST_INCR_SCALAR_STK'
  'INST_INCR_SCALAR_STK_IMM (30)':
    'prefix': 'INST_INCR_SCALAR_STK_IMM'
    'body': 'INST_INCR_SCALAR_STK_IMM'
  'INST_INCR_STK (28)':
    'prefix': 'INST_INCR_STK'
    'body': 'INST_INCR_STK'
  'INST_INCR_STK_IMM (33)':
    'prefix': 'INST_INCR_STK_IMM'
    'body': 'INST_INCR_STK_IMM'
  'INST_INVOKE_EXPANDED (102)':
    'prefix': 'INST_INVOKE_EXPANDED'
    'body': 'INST_INVOKE_EXPANDED'
  'INST_INVOKE_STK1 (6)':
    'prefix': 'INST_INVOKE_STK1'
    'body': 'INST_INVOKE_STK1'
  'INST_INVOKE_STK4 (7)':
    'prefix': 'INST_INVOKE_STK4'
    'body': 'INST_INVOKE_STK4'
  'INST_JUMP1 (34)':
    'prefix': 'INST_JUMP1'
    'body': 'INST_JUMP1'
  'INST_JUMP4 (35)':
    'prefix': 'INST_JUMP4'
    'body': 'INST_JUMP4'
  'INST_JUMP_FALSE1 (38)':
    'prefix': 'INST_JUMP_FALSE1'
    'body': 'INST_JUMP_FALSE1'
  'INST_JUMP_FALSE4 (39)':
    'prefix': 'INST_JUMP_FALSE4'
    'body': 'INST_JUMP_FALSE4'
  'INST_JUMP_TABLE (121)':
    'prefix': 'INST_JUMP_TABLE'
    'body': 'INST_JUMP_TABLE'
  'INST_JUMP_TRUE1 (36)':
    'prefix': 'INST_JUMP_TRUE1'
    'body': 'INST_JUMP_TRUE1'
  'INST_JUMP_TRUE4 (37)':
    'prefix': 'INST_JUMP_TRUE4'
    'body': 'INST_JUMP_TRUE4'
  'INST_LAND (41)':
    'prefix': 'INST_LAND'
    'body': 'INST_LAND'
  'INST_LAPPEND_ARRAY1 (90)':
    'prefix': 'INST_LAPPEND_ARRAY1'
    'body': 'INST_LAPPEND_ARRAY1'
  'INST_LAPPEND_ARRAY4 (91)':
    'prefix': 'INST_LAPPEND_ARRAY4'
    'body': 'INST_LAPPEND_ARRAY4'
  'INST_LAPPEND_ARRAY_STK (92)':
    'prefix': 'INST_LAPPEND_ARRAY_STK'
    'body': 'INST_LAPPEND_ARRAY_STK'
  'INST_LAPPEND_SCALAR1 (88)':
    'prefix': 'INST_LAPPEND_SCALAR1'
    'body': 'INST_LAPPEND_SCALAR1'
  'INST_LAPPEND_SCALAR4 (89)':
    'prefix': 'INST_LAPPEND_SCALAR4'
    'body': 'INST_LAPPEND_SCALAR4'
  'INST_LAPPEND_STK (93)':
    'prefix': 'INST_LAPPEND_STK'
    'body': 'INST_LAPPEND_STK'
  'INST_LE (49)':
    'prefix': 'INST_LE'
    'body': 'INST_LE'
  'INST_LIST (79)':
    'prefix': 'INST_LIST'
    'body': 'INST_LIST'
  'INST_LIST_IN (106)':
    'prefix': 'INST_LIST_IN'
    'body': 'INST_LIST_IN'
  'INST_LIST_INDEX (80)':
    'prefix': 'INST_LIST_INDEX'
    'body': 'INST_LIST_INDEX'
  'INST_LIST_INDEX_IMM (103)':
    'prefix': 'INST_LIST_INDEX_IMM'
    'body': 'INST_LIST_INDEX_IMM'
  'INST_LIST_INDEX_MULTI (94)':
    'prefix': 'INST_LIST_INDEX_MULTI'
    'body': 'INST_LIST_INDEX_MULTI'
  'INST_LIST_LENGTH (81)':
    'prefix': 'INST_LIST_LENGTH'
    'body': 'INST_LIST_LENGTH'
  'INST_LIST_NOT_IN (107)':
    'prefix': 'INST_LIST_NOT_IN'
    'body': 'INST_LIST_NOT_IN'
  'INST_LIST_RANGE_IMM (104)':
    'prefix': 'INST_LIST_RANGE_IMM'
    'body': 'INST_LIST_RANGE_IMM'
  'INST_LNOT (61)':
    'prefix': 'INST_LNOT'
    'body': 'INST_LNOT'
  'INST_LOAD_ARRAY1 (13)':
    'prefix': 'INST_LOAD_ARRAY1'
    'body': 'INST_LOAD_ARRAY1'
  'INST_LOAD_ARRAY4 (14)':
    'prefix': 'INST_LOAD_ARRAY4'
    'body': 'INST_LOAD_ARRAY4'
  'INST_LOAD_ARRAY_STK (15)':
    'prefix': 'INST_LOAD_ARRAY_STK'
    'body': 'INST_LOAD_ARRAY_STK'
  'INST_LOAD_SCALAR1 (10)':
    'prefix': 'INST_LOAD_SCALAR1'
    'body': 'INST_LOAD_SCALAR1'
  'INST_LOAD_SCALAR4 (11)':
    'prefix': 'INST_LOAD_SCALAR4'
    'body': 'INST_LOAD_SCALAR4'
  'INST_LOAD_SCALAR_STK (12)':
    'prefix': 'INST_LOAD_SCALAR_STK'
    'body': 'INST_LOAD_SCALAR_STK'
  'INST_LOAD_STK (16)':
    'prefix': 'INST_LOAD_STK'
    'body': 'INST_LOAD_STK'
  'INST_LOR (40)':
    'prefix': 'INST_LOR'
    'body': 'INST_LOR'
  'INST_LSET_FLAT (97)':
    'prefix': 'INST_LSET_FLAT'
    'body': 'INST_LSET_FLAT'
  'INST_LSET_LIST (96)':
    'prefix': 'INST_LSET_LIST'
    'body': 'INST_LSET_LIST'
  'INST_LSHIFT (51)':
    'prefix': 'INST_LSHIFT'
    'body': 'INST_LSHIFT'
  'INST_LT (47)':
    'prefix': 'INST_LT'
    'body': 'INST_LT'
  'INST_MOD (57)':
    'prefix': 'INST_MOD'
    'body': 'INST_MOD'
  'INST_MULT (55)':
    'prefix': 'INST_MULT'
    'body': 'INST_MULT'
  'INST_NEQ (46)':
    'prefix': 'INST_NEQ'
    'body': 'INST_NEQ'
  'INST_NSUPVAR (123)':
    'prefix': 'INST_NSUPVAR'
    'body': 'INST_NSUPVAR'
  'INST_OVER (95)':
    'prefix': 'INST_OVER'
    'body': 'INST_OVER'
  'INST_POP (3)':
    'prefix': 'INST_POP'
    'body': 'INST_POP'
  'INST_PUSH1 (1)':
    'prefix': 'INST_PUSH1'
    'body': 'INST_PUSH1'
  'INST_PUSH4 (2)':
    'prefix': 'INST_PUSH4'
    'body': 'INST_PUSH4'
  'INST_PUSH_RESULT (71)':
    'prefix': 'INST_PUSH_RESULT'
    'body': 'INST_PUSH_RESULT'
  'INST_PUSH_RETURN_CODE (72)':
    'prefix': 'INST_PUSH_RETURN_CODE'
    'body': 'INST_PUSH_RETURN_CODE'
  'INST_PUSH_RETURN_OPTIONS (108)':
    'prefix': 'INST_PUSH_RETURN_OPTIONS'
    'body': 'INST_PUSH_RETURN_OPTIONS'
  'INST_REGEXP (127)':
    'prefix': 'INST_REGEXP'
    'body': 'INST_REGEXP'
  'INST_RETURN_IMM (98)':
    'prefix': 'INST_RETURN_IMM'
    'body': 'INST_RETURN_IMM'
  'INST_RETURN_STK (109)':
    'prefix': 'INST_RETURN_STK'
    'body': 'INST_RETURN_STK'
  'INST_REVERSE (126)':
    'prefix': 'INST_REVERSE'
    'body': 'INST_REVERSE'
  'INST_RSHIFT (52)':
    'prefix': 'INST_RSHIFT'
    'body': 'INST_RSHIFT'
  'INST_START_CMD (105)':
    'prefix': 'INST_START_CMD'
    'body': 'INST_START_CMD'
  'INST_STORE_ARRAY1 (20)':
    'prefix': 'INST_STORE_ARRAY1'
    'body': 'INST_STORE_ARRAY1'
  'INST_STORE_ARRAY4 (21)':
    'prefix': 'INST_STORE_ARRAY4'
    'body': 'INST_STORE_ARRAY4'
  'INST_STORE_ARRAY_STK (22)':
    'prefix': 'INST_STORE_ARRAY_STK'
    'body': 'INST_STORE_ARRAY_STK'
  'INST_STORE_SCALAR1 (17)':
    'prefix': 'INST_STORE_SCALAR1'
    'body': 'INST_STORE_SCALAR1'
  'INST_STORE_SCALAR4 (18)':
    'prefix': 'INST_STORE_SCALAR4'
    'body': 'INST_STORE_SCALAR4'
  'INST_STORE_SCALAR_STK (19)':
    'prefix': 'INST_STORE_SCALAR_STK'
    'body': 'INST_STORE_SCALAR_STK'
  'INST_STORE_STK (23)':
    'prefix': 'INST_STORE_STK'
    'body': 'INST_STORE_STK'
  'INST_STR_CMP (75)':
    'prefix': 'INST_STR_CMP'
    'body': 'INST_STR_CMP'
  'INST_STR_EQ (73)':
    'prefix': 'INST_STR_EQ'
    'body': 'INST_STR_EQ'
  'INST_STR_INDEX (77)':
    'prefix': 'INST_STR_INDEX'
    'body': 'INST_STR_INDEX'
  'INST_STR_LEN (76)':
    'prefix': 'INST_STR_LEN'
    'body': 'INST_STR_LEN'
  'INST_STR_MATCH (78)':
    'prefix': 'INST_STR_MATCH'
    'body': 'INST_STR_MATCH'
  'INST_STR_NEQ (74)':
    'prefix': 'INST_STR_NEQ'
    'body': 'INST_STR_NEQ'
  'INST_SUB (54)':
    'prefix': 'INST_SUB'
    'body': 'INST_SUB'
  'INST_SYNTAX (125)':
    'prefix': 'INST_SYNTAX'
    'body': 'INST_SYNTAX'
  'INST_TRY_CVT_TO_NUMERIC (64)':
    'prefix': 'INST_TRY_CVT_TO_NUMERIC'
    'body': 'INST_TRY_CVT_TO_NUMERIC'
  'INST_UMINUS (59)':
    'prefix': 'INST_UMINUS'
    'body': 'INST_UMINUS'
  'INST_UPLUS (58)':
    'prefix': 'INST_UPLUS'
    'body': 'INST_UPLUS'
  'INST_UPVAR (122)':
    'prefix': 'INST_UPVAR'
    'body': 'INST_UPVAR'
  'INST_VARIABLE (124)':
    'prefix': 'INST_VARIABLE'
    'body': 'INST_VARIABLE'
  'INTERP_ALTERNATE_WRONG_ARGS (1024)':
    'prefix': 'INTERP_ALTERNATE_WRONG_ARGS'
    'body': 'INTERP_ALTERNATE_WRONG_ARGS'
  'INTERP_TRACE_IN_PROGRESS (512)':
    'prefix': 'INTERP_TRACE_IN_PROGRESS'
    'body': 'INTERP_TRACE_IN_PROGRESS'
  'JUMPFIXUP_INIT_ENTRIES (10)':
    'prefix': 'JUMPFIXUP_INIT_ENTRIES'
    'body': 'JUMPFIXUP_INIT_ENTRIES'
  'LAST_INST_OPCODE (131)':
    'prefix': 'LAST_INST_OPCODE'
    'body': 'LAST_INST_OPCODE'
  'LIMIT_HANDLER_ACTIVE (1)':
    'prefix': 'LIMIT_HANDLER_ACTIVE'
    'body': 'LIMIT_HANDLER_ACTIVE'
  'LIMIT_HANDLER_DELETED (2)':
    'prefix': 'LIMIT_HANDLER_DELETED'
    'body': 'LIMIT_HANDLER_DELETED'
  'LITERAL_NS_SCOPE (2)':
    'prefix': 'LITERAL_NS_SCOPE'
    'body': 'LITERAL_NS_SCOPE'
  'LITERAL_ON_HEAP (1)':
    'prefix': 'LITERAL_ON_HEAP'
    'body': 'LITERAL_ON_HEAP'
  'LOOP_EXCEPTION_RANGE (0)':
    'prefix': 'LOOP_EXCEPTION_RANGE'
    'body': 'LOOP_EXCEPTION_RANGE'
  'LTM_PRIME_2MSB_ON (8)':
    'prefix': 'LTM_PRIME_2MSB_ON'
    'body': 'LTM_PRIME_2MSB_ON'
  'LTM_PRIME_BBS (1)':
    'prefix': 'LTM_PRIME_BBS'
    'body': 'LTM_PRIME_BBS'
  'LTM_PRIME_SAFE (2)':
    'prefix': 'LTM_PRIME_SAFE'
    'body': 'LTM_PRIME_SAFE'
  'MASK_SIZE (32)':
    'prefix': 'MASK_SIZE'
    'body': 'MASK_SIZE'
  'MAX_INSTRUCTION_OPERANDS (2)':
    'prefix': 'MAX_INSTRUCTION_OPERANDS'
    'body': 'MAX_INSTRUCTION_OPERANDS'
  'MAX_NESTING_DEPTH (1000)':
    'prefix': 'MAX_NESTING_DEPTH'
    'body': 'MAX_NESTING_DEPTH'
  'MP_DIGIT_BIT (28)':
    'prefix': 'MP_DIGIT_BIT'
    'body': 'MP_DIGIT_BIT'
  'MP_DIGIT_MAX (268435455)':
    'prefix': 'MP_DIGIT_MAX'
    'body': 'MP_DIGIT_MAX'
  'MP_EQ (0)':
    'prefix': 'MP_EQ'
    'body': 'MP_EQ'
  'MP_GT (1)':
    'prefix': 'MP_GT'
    'body': 'MP_GT'
  'MP_LT (-1)':
    'prefix': 'MP_LT'
    'body': 'MP_LT'
  'MP_MASK (268435455)':
    'prefix': 'MP_MASK'
    'body': 'MP_MASK'
  'MP_MEM (-2)':
    'prefix': 'MP_MEM'
    'body': 'MP_MEM'
  'MP_NEG (1)':
    'prefix': 'MP_NEG'
    'body': 'MP_NEG'
  'MP_NO (0)':
    'prefix': 'MP_NO'
    'body': 'MP_NO'
  'MP_OKAY (0)':
    'prefix': 'MP_OKAY'
    'body': 'MP_OKAY'
  'MP_PREC (32)':
    'prefix': 'MP_PREC'
    'body': 'MP_PREC'
  'MP_RANGE (-3)':
    'prefix': 'MP_RANGE'
    'body': 'MP_RANGE'
  'MP_VAL (-3)':
    'prefix': 'MP_VAL'
    'body': 'MP_VAL'
  'MP_WARRAY (512)':
    'prefix': 'MP_WARRAY'
    'body': 'MP_WARRAY'
  'MP_YES (1)':
    'prefix': 'MP_YES'
    'body': 'MP_YES'
  'MP_ZPOS (0)':
    'prefix': 'MP_ZPOS'
    'body': 'MP_ZPOS'
  'NS_DEAD (2)':
    'prefix': 'NS_DEAD'
    'body': 'NS_DEAD'
  'NS_DYING (1)':
    'prefix': 'NS_DYING'
    'body': 'NS_DYING'
  'NS_KILLED (4)':
    'prefix': 'NS_KILLED'
    'body': 'NS_KILLED'
  'NUM_STATIC_TOKENS (20)':
    'prefix': 'NUM_STATIC_TOKENS'
    'body': 'NUM_STATIC_TOKENS'
  'OPERAND_AUX4 (8)':
    'prefix': 'OPERAND_AUX4'
    'body': 'OPERAND_AUX4'
  'OPERAND_IDX4 (5)':
    'prefix': 'OPERAND_IDX4'
    'body': 'OPERAND_IDX4'
  'OPERAND_INT1 (1)':
    'prefix': 'OPERAND_INT1'
    'body': 'OPERAND_INT1'
  'OPERAND_INT4 (2)':
    'prefix': 'OPERAND_INT4'
    'body': 'OPERAND_INT4'
  'OPERAND_LVT1 (6)':
    'prefix': 'OPERAND_LVT1'
    'body': 'OPERAND_LVT1'
  'OPERAND_LVT4 (7)':
    'prefix': 'OPERAND_LVT4'
    'body': 'OPERAND_LVT4'
  'OPERAND_NONE (0)':
    'prefix': 'OPERAND_NONE'
    'body': 'OPERAND_NONE'
  'OPERAND_UINT1 (3)':
    'prefix': 'OPERAND_UINT1'
    'body': 'OPERAND_UINT1'
  'OPERAND_UINT4 (4)':
    'prefix': 'OPERAND_UINT4'
    'body': 'OPERAND_UINT4'
  'PKG_PREFER_LATEST (0)':
    'prefix': 'PKG_PREFER_LATEST'
    'body': 'PKG_PREFER_LATEST'
  'PKG_PREFER_STABLE (1)':
    'prefix': 'PKG_PREFER_STABLE'
    'body': 'PKG_PREFER_STABLE'
  'PRIME_SIZE (256)':
    'prefix': 'PRIME_SIZE'
    'body': 'PRIME_SIZE'
  'RAND_SEED_INITIALIZED (64)':
    'prefix': 'RAND_SEED_INITIALIZED'
    'body': 'RAND_SEED_INITIALIZED'
  'SAFE_INTERP (128)':
    'prefix': 'SAFE_INTERP'
    'body': 'SAFE_INTERP'
  'TCLTOMMATH_EPOCH (0)':
    'prefix': 'TCLTOMMATH_EPOCH'
    'body': 'TCLTOMMATH_EPOCH'
  'TCLTOMMATH_REVISION (0)':
    'prefix': 'TCLTOMMATH_REVISION'
    'body': 'TCLTOMMATH_REVISION'
  'TCL_ALLOCALIGN (16)':
    'prefix': 'TCL_ALLOCALIGN'
    'body': 'TCL_ALLOCALIGN'
  'TCL_ALLOW_EXCEPTIONS (4)':
    'prefix': 'TCL_ALLOW_EXCEPTIONS'
    'body': 'TCL_ALLOW_EXCEPTIONS'
  'TCL_ALLOW_INLINE_COMPILATION (131072)':
    'prefix': 'TCL_ALLOW_INLINE_COMPILATION'
    'body': 'TCL_ALLOW_INLINE_COMPILATION'
  'TCL_ALL_EVENTS (-3)':
    'prefix': 'TCL_ALL_EVENTS'
    'body': 'TCL_ALL_EVENTS'
  'TCL_ALPHA_RELEASE (0)':
    'prefix': 'TCL_ALPHA_RELEASE'
    'body': 'TCL_ALPHA_RELEASE'
  'TCL_APPEND_VALUE (4)':
    'prefix': 'TCL_APPEND_VALUE'
    'body': 'TCL_APPEND_VALUE'
  'TCL_BETA_RELEASE (1)':
    'prefix': 'TCL_BETA_RELEASE'
    'body': 'TCL_BETA_RELEASE'
  'TCL_BREAK (3)':
    'prefix': 'TCL_BREAK'
    'body': 'TCL_BREAK'
  'TCL_BYTECODE_PRECOMPILED (1)':
    'prefix': 'TCL_BYTECODE_PRECOMPILED'
    'body': 'TCL_BYTECODE_PRECOMPILED'
  'TCL_BYTECODE_RESOLVE_VARS (2)':
    'prefix': 'TCL_BYTECODE_RESOLVE_VARS'
    'body': 'TCL_BYTECODE_RESOLVE_VARS'
  'TCL_CFG_DO64BIT ()':
    'prefix': 'TCL_CFG_DO64BIT'
    'body': 'TCL_CFG_DO64BIT'
  'TCL_CHANNEL_THREAD_INSERT (0)':
    'prefix': 'TCL_CHANNEL_THREAD_INSERT'
    'body': 'TCL_CHANNEL_THREAD_INSERT'
  'TCL_CHANNEL_THREAD_REMOVE (1)':
    'prefix': 'TCL_CHANNEL_THREAD_REMOVE'
    'body': 'TCL_CHANNEL_THREAD_REMOVE'
  'TCL_CLOSE_READ (2)':
    'prefix': 'TCL_CLOSE_READ'
    'body': 'TCL_CLOSE_READ'
  'TCL_CLOSE_WRITE (4)':
    'prefix': 'TCL_CLOSE_WRITE'
    'body': 'TCL_CLOSE_WRITE'
  'TCL_CONTINUE (4)':
    'prefix': 'TCL_CONTINUE'
    'body': 'TCL_CONTINUE'
  'TCL_CONVERT_MULTIBYTE (-1)':
    'prefix': 'TCL_CONVERT_MULTIBYTE'
    'body': 'TCL_CONVERT_MULTIBYTE'
  'TCL_CONVERT_NOSPACE (-4)':
    'prefix': 'TCL_CONVERT_NOSPACE'
    'body': 'TCL_CONVERT_NOSPACE'
  'TCL_CONVERT_SYNTAX (-2)':
    'prefix': 'TCL_CONVERT_SYNTAX'
    'body': 'TCL_CONVERT_SYNTAX'
  'TCL_CONVERT_UNKNOWN (-3)':
    'prefix': 'TCL_CONVERT_UNKNOWN'
    'body': 'TCL_CONVERT_UNKNOWN'
  'TCL_CREATE_HARD_LINK (2)':
    'prefix': 'TCL_CREATE_HARD_LINK'
    'body': 'TCL_CREATE_HARD_LINK'
  'TCL_CREATE_NS_IF_UNKNOWN (2048)':
    'prefix': 'TCL_CREATE_NS_IF_UNKNOWN'
    'body': 'TCL_CREATE_NS_IF_UNKNOWN'
  'TCL_CREATE_SYMBOLIC_LINK (1)':
    'prefix': 'TCL_CREATE_SYMBOLIC_LINK'
    'body': 'TCL_CREATE_SYMBOLIC_LINK'
  'TCL_CUSTOM_PTR_KEYS (-1)':
    'prefix': 'TCL_CUSTOM_PTR_KEYS'
    'body': 'TCL_CUSTOM_PTR_KEYS'
  'TCL_CUSTOM_TYPE_KEYS (-2)':
    'prefix': 'TCL_CUSTOM_TYPE_KEYS'
    'body': 'TCL_CUSTOM_TYPE_KEYS'
  'TCL_DONT_QUOTE_HASH (8)':
    'prefix': 'TCL_DONT_QUOTE_HASH'
    'body': 'TCL_DONT_QUOTE_HASH'
  'TCL_DONT_USE_BRACES (1)':
    'prefix': 'TCL_DONT_USE_BRACES'
    'body': 'TCL_DONT_USE_BRACES'
  'TCL_DONT_WAIT (2)':
    'prefix': 'TCL_DONT_WAIT'
    'body': 'TCL_DONT_WAIT'
  'TCL_DOUBLE (1)':
    'prefix': 'TCL_DOUBLE'
    'body': 'TCL_DOUBLE'
  'TCL_DOUBLE_SPACE (27)':
    'prefix': 'TCL_DOUBLE_SPACE'
    'body': 'TCL_DOUBLE_SPACE'
  'TCL_DSTRING_STATIC_SIZE (200)':
    'prefix': 'TCL_DSTRING_STATIC_SIZE'
    'body': 'TCL_DSTRING_STATIC_SIZE'
  'TCL_EITHER (2)':
    'prefix': 'TCL_EITHER'
    'body': 'TCL_EITHER'
  'TCL_ENCODING_END (2)':
    'prefix': 'TCL_ENCODING_END'
    'body': 'TCL_ENCODING_END'
  'TCL_ENCODING_START (1)':
    'prefix': 'TCL_ENCODING_START'
    'body': 'TCL_ENCODING_START'
  'TCL_ENCODING_STOPONERROR (4)':
    'prefix': 'TCL_ENCODING_STOPONERROR'
    'body': 'TCL_ENCODING_STOPONERROR'
  'TCL_ENFORCE_MODE (16)':
    'prefix': 'TCL_ENFORCE_MODE'
    'body': 'TCL_ENFORCE_MODE'
  'TCL_ENSEMBLE_PREFIX (2)':
    'prefix': 'TCL_ENSEMBLE_PREFIX'
    'body': 'TCL_ENSEMBLE_PREFIX'
  'TCL_ERROR (1)':
    'prefix': 'TCL_ERROR'
    'body': 'TCL_ERROR'
  'TCL_EVAL_CTX (8)':
    'prefix': 'TCL_EVAL_CTX'
    'body': 'TCL_EVAL_CTX'
  'TCL_EVAL_DIRECT (262144)':
    'prefix': 'TCL_EVAL_DIRECT'
    'body': 'TCL_EVAL_DIRECT'
  'TCL_EVAL_FILE (2)':
    'prefix': 'TCL_EVAL_FILE'
    'body': 'TCL_EVAL_FILE'
  'TCL_EVAL_GLOBAL (131072)':
    'prefix': 'TCL_EVAL_GLOBAL'
    'body': 'TCL_EVAL_GLOBAL'
  'TCL_EVAL_INVOKE (524288)':
    'prefix': 'TCL_EVAL_INVOKE'
    'body': 'TCL_EVAL_INVOKE'
  'TCL_EXACT (1)':
    'prefix': 'TCL_EXACT'
    'body': 'TCL_EXACT'
  'TCL_EXCEPTION (8)':
    'prefix': 'TCL_EXCEPTION'
    'body': 'TCL_EXCEPTION'
  'TCL_FALSE_JUMP (2)':
    'prefix': 'TCL_FALSE_JUMP'
    'body': 'TCL_FALSE_JUMP'
  'TCL_FILE_EVENTS (8)':
    'prefix': 'TCL_FILE_EVENTS'
    'body': 'TCL_FILE_EVENTS'
  'TCL_FINAL_RELEASE (2)':
    'prefix': 'TCL_FINAL_RELEASE'
    'body': 'TCL_FINAL_RELEASE'
  'TCL_FIND_ONLY_NS (4096)':
    'prefix': 'TCL_FIND_ONLY_NS'
    'body': 'TCL_FIND_ONLY_NS'
  'TCL_GLOBAL_ONLY (1)':
    'prefix': 'TCL_GLOBAL_ONLY'
    'body': 'TCL_GLOBAL_ONLY'
  'TCL_GLOBMODE_DIR (4)':
    'prefix': 'TCL_GLOBMODE_DIR'
    'body': 'TCL_GLOBMODE_DIR'
  'TCL_GLOBMODE_JOIN (2)':
    'prefix': 'TCL_GLOBMODE_JOIN'
    'body': 'TCL_GLOBMODE_JOIN'
  'TCL_GLOBMODE_NO_COMPLAIN (1)':
    'prefix': 'TCL_GLOBMODE_NO_COMPLAIN'
    'body': 'TCL_GLOBMODE_NO_COMPLAIN'
  'TCL_GLOBMODE_TAILS (8)':
    'prefix': 'TCL_GLOBMODE_TAILS'
    'body': 'TCL_GLOBMODE_TAILS'
  'TCL_GLOB_PERM_HIDDEN (2)':
    'prefix': 'TCL_GLOB_PERM_HIDDEN'
    'body': 'TCL_GLOB_PERM_HIDDEN'
  'TCL_GLOB_PERM_R (4)':
    'prefix': 'TCL_GLOB_PERM_R'
    'body': 'TCL_GLOB_PERM_R'
  'TCL_GLOB_PERM_RONLY (1)':
    'prefix': 'TCL_GLOB_PERM_RONLY'
    'body': 'TCL_GLOB_PERM_RONLY'
  'TCL_GLOB_PERM_W (8)':
    'prefix': 'TCL_GLOB_PERM_W'
    'body': 'TCL_GLOB_PERM_W'
  'TCL_GLOB_PERM_X (16)':
    'prefix': 'TCL_GLOB_PERM_X'
    'body': 'TCL_GLOB_PERM_X'
  'TCL_GLOB_TYPE_BLOCK (1)':
    'prefix': 'TCL_GLOB_TYPE_BLOCK'
    'body': 'TCL_GLOB_TYPE_BLOCK'
  'TCL_GLOB_TYPE_CHAR (2)':
    'prefix': 'TCL_GLOB_TYPE_CHAR'
    'body': 'TCL_GLOB_TYPE_CHAR'
  'TCL_GLOB_TYPE_DIR (4)':
    'prefix': 'TCL_GLOB_TYPE_DIR'
    'body': 'TCL_GLOB_TYPE_DIR'
  'TCL_GLOB_TYPE_FILE (16)':
    'prefix': 'TCL_GLOB_TYPE_FILE'
    'body': 'TCL_GLOB_TYPE_FILE'
  'TCL_GLOB_TYPE_LINK (32)':
    'prefix': 'TCL_GLOB_TYPE_LINK'
    'body': 'TCL_GLOB_TYPE_LINK'
  'TCL_GLOB_TYPE_MOUNT (128)':
    'prefix': 'TCL_GLOB_TYPE_MOUNT'
    'body': 'TCL_GLOB_TYPE_MOUNT'
  'TCL_GLOB_TYPE_PIPE (8)':
    'prefix': 'TCL_GLOB_TYPE_PIPE'
    'body': 'TCL_GLOB_TYPE_PIPE'
  'TCL_GLOB_TYPE_SOCK (64)':
    'prefix': 'TCL_GLOB_TYPE_SOCK'
    'body': 'TCL_GLOB_TYPE_SOCK'
  'TCL_HASH_KEY_RANDOMIZE_HASH (1)':
    'prefix': 'TCL_HASH_KEY_RANDOMIZE_HASH'
    'body': 'TCL_HASH_KEY_RANDOMIZE_HASH'
  'TCL_HASH_KEY_STORE_HASH (1)':
    'prefix': 'TCL_HASH_KEY_STORE_HASH'
    'body': 'TCL_HASH_KEY_STORE_HASH'
  'TCL_HASH_KEY_SYSTEM_HASH (2)':
    'prefix': 'TCL_HASH_KEY_SYSTEM_HASH'
    'body': 'TCL_HASH_KEY_SYSTEM_HASH'
  'TCL_HASH_KEY_TYPE_VERSION (1)':
    'prefix': 'TCL_HASH_KEY_TYPE_VERSION'
    'body': 'TCL_HASH_KEY_TYPE_VERSION'
  'TCL_IDLE_EVENTS (32)':
    'prefix': 'TCL_IDLE_EVENTS'
    'body': 'TCL_IDLE_EVENTS'
  'TCL_INT (0)':
    'prefix': 'TCL_INT'
    'body': 'TCL_INT'
  'TCL_INTEGER_SPACE (24)':
    'prefix': 'TCL_INTEGER_SPACE'
    'body': 'TCL_INTEGER_SPACE'
  'TCL_INTERP_DESTROYED (256)':
    'prefix': 'TCL_INTERP_DESTROYED'
    'body': 'TCL_INTERP_DESTROYED'
  'TCL_INVOKE_HIDDEN (1)':
    'prefix': 'TCL_INVOKE_HIDDEN'
    'body': 'TCL_INVOKE_HIDDEN'
  'TCL_INVOKE_NO_TRACEBACK (4)':
    'prefix': 'TCL_INVOKE_NO_TRACEBACK'
    'body': 'TCL_INVOKE_NO_TRACEBACK'
  'TCL_INVOKE_NO_UNKNOWN (2)':
    'prefix': 'TCL_INVOKE_NO_UNKNOWN'
    'body': 'TCL_INVOKE_NO_UNKNOWN'
  'TCL_LEAVE_ERR_MSG (512)':
    'prefix': 'TCL_LEAVE_ERR_MSG'
    'body': 'TCL_LEAVE_ERR_MSG'
  'TCL_LIMIT_COMMANDS (1)':
    'prefix': 'TCL_LIMIT_COMMANDS'
    'body': 'TCL_LIMIT_COMMANDS'
  'TCL_LIMIT_TIME (2)':
    'prefix': 'TCL_LIMIT_TIME'
    'body': 'TCL_LIMIT_TIME'
  'TCL_LINK_BOOLEAN (3)':
    'prefix': 'TCL_LINK_BOOLEAN'
    'body': 'TCL_LINK_BOOLEAN'
  'TCL_LINK_CHAR (6)':
    'prefix': 'TCL_LINK_CHAR'
    'body': 'TCL_LINK_CHAR'
  'TCL_LINK_DOUBLE (2)':
    'prefix': 'TCL_LINK_DOUBLE'
    'body': 'TCL_LINK_DOUBLE'
  'TCL_LINK_FLOAT (13)':
    'prefix': 'TCL_LINK_FLOAT'
    'body': 'TCL_LINK_FLOAT'
  'TCL_LINK_INT (1)':
    'prefix': 'TCL_LINK_INT'
    'body': 'TCL_LINK_INT'
  'TCL_LINK_LONG (11)':
    'prefix': 'TCL_LINK_LONG'
    'body': 'TCL_LINK_LONG'
  'TCL_LINK_READ_ONLY (128)':
    'prefix': 'TCL_LINK_READ_ONLY'
    'body': 'TCL_LINK_READ_ONLY'
  'TCL_LINK_SHORT (8)':
    'prefix': 'TCL_LINK_SHORT'
    'body': 'TCL_LINK_SHORT'
  'TCL_LINK_STRING (4)':
    'prefix': 'TCL_LINK_STRING'
    'body': 'TCL_LINK_STRING'
  'TCL_LINK_UCHAR (7)':
    'prefix': 'TCL_LINK_UCHAR'
    'body': 'TCL_LINK_UCHAR'
  'TCL_LINK_UINT (10)':
    'prefix': 'TCL_LINK_UINT'
    'body': 'TCL_LINK_UINT'
  'TCL_LINK_ULONG (12)':
    'prefix': 'TCL_LINK_ULONG'
    'body': 'TCL_LINK_ULONG'
  'TCL_LINK_USHORT (9)':
    'prefix': 'TCL_LINK_USHORT'
    'body': 'TCL_LINK_USHORT'
  'TCL_LINK_WIDE_INT (5)':
    'prefix': 'TCL_LINK_WIDE_INT'
    'body': 'TCL_LINK_WIDE_INT'
  'TCL_LINK_WIDE_UINT (14)':
    'prefix': 'TCL_LINK_WIDE_UINT'
    'body': 'TCL_LINK_WIDE_UINT'
  'TCL_LIST_ELEMENT (8)':
    'prefix': 'TCL_LIST_ELEMENT'
    'body': 'TCL_LIST_ELEMENT'
  'TCL_LOCATION_BC (2)':
    'prefix': 'TCL_LOCATION_BC'
    'body': 'TCL_LOCATION_BC'
  'TCL_LOCATION_EVAL (0)':
    'prefix': 'TCL_LOCATION_EVAL'
    'body': 'TCL_LOCATION_EVAL'
  'TCL_LOCATION_EVAL_LIST (1)':
    'prefix': 'TCL_LOCATION_EVAL_LIST'
    'body': 'TCL_LOCATION_EVAL_LIST'
  'TCL_LOCATION_LAST (6)':
    'prefix': 'TCL_LOCATION_LAST'
    'body': 'TCL_LOCATION_LAST'
  'TCL_LOCATION_PREBC (3)':
    'prefix': 'TCL_LOCATION_PREBC'
    'body': 'TCL_LOCATION_PREBC'
  'TCL_LOCATION_PROC (5)':
    'prefix': 'TCL_LOCATION_PROC'
    'body': 'TCL_LOCATION_PROC'
  'TCL_LOCATION_SOURCE (4)':
    'prefix': 'TCL_LOCATION_SOURCE'
    'body': 'TCL_LOCATION_SOURCE'
  'TCL_MAJOR_VERSION (8)':
    'prefix': 'TCL_MAJOR_VERSION'
    'body': 'TCL_MAJOR_VERSION'
  'TCL_MATCH_NOCASE (1)':
    'prefix': 'TCL_MATCH_NOCASE'
    'body': 'TCL_MATCH_NOCASE'
  'TCL_MAX_PREC (17)':
    'prefix': 'TCL_MAX_PREC'
    'body': 'TCL_MAX_PREC'
  'TCL_MAX_TOKENS (268435455)':
    'prefix': 'TCL_MAX_TOKENS'
    'body': 'TCL_MAX_TOKENS'
  'TCL_MINOR_VERSION (5)':
    'prefix': 'TCL_MINOR_VERSION'
    'body': 'TCL_MINOR_VERSION'
  'TCL_MIN_TOKEN_GROWTH (50)':
    'prefix': 'TCL_MIN_TOKEN_GROWTH'
    'body': 'TCL_MIN_TOKEN_GROWTH'
  'TCL_MODE_BLOCKING (0)':
    'prefix': 'TCL_MODE_BLOCKING'
    'body': 'TCL_MODE_BLOCKING'
  'TCL_MODE_NONBLOCKING (1)':
    'prefix': 'TCL_MODE_NONBLOCKING'
    'body': 'TCL_MODE_NONBLOCKING'
  'TCL_NAMESPACE_ONLY (2)':
    'prefix': 'TCL_NAMESPACE_ONLY'
    'body': 'TCL_NAMESPACE_ONLY'
  'TCL_NO_EVAL (65536)':
    'prefix': 'TCL_NO_EVAL'
    'body': 'TCL_NO_EVAL'
  'TCL_NUMBER_BIG (3)':
    'prefix': 'TCL_NUMBER_BIG'
    'body': 'TCL_NUMBER_BIG'
  'TCL_NUMBER_DOUBLE (4)':
    'prefix': 'TCL_NUMBER_DOUBLE'
    'body': 'TCL_NUMBER_DOUBLE'
  'TCL_NUMBER_LONG (1)':
    'prefix': 'TCL_NUMBER_LONG'
    'body': 'TCL_NUMBER_LONG'
  'TCL_NUMBER_NAN (5)':
    'prefix': 'TCL_NUMBER_NAN'
    'body': 'TCL_NUMBER_NAN'
  'TCL_NUMBER_WIDE (2)':
    'prefix': 'TCL_NUMBER_WIDE'
    'body': 'TCL_NUMBER_WIDE'
  'TCL_OK (0)':
    'prefix': 'TCL_OK'
    'body': 'TCL_OK'
  'TCL_ONE_WORD_KEYS (1)':
    'prefix': 'TCL_ONE_WORD_KEYS'
    'body': 'TCL_ONE_WORD_KEYS'
  'TCL_OUT_LINE_COMPILE (1)':
    'prefix': 'TCL_OUT_LINE_COMPILE'
    'body': 'TCL_OUT_LINE_COMPILE'
  'TCL_PARSE_BAD_NUMBER (9)':
    'prefix': 'TCL_PARSE_BAD_NUMBER'
    'body': 'TCL_PARSE_BAD_NUMBER'
  'TCL_PARSE_BRACE_EXTRA (2)':
    'prefix': 'TCL_PARSE_BRACE_EXTRA'
    'body': 'TCL_PARSE_BRACE_EXTRA'
  'TCL_PARSE_DECIMAL_ONLY (1)':
    'prefix': 'TCL_PARSE_DECIMAL_ONLY'
    'body': 'TCL_PARSE_DECIMAL_ONLY'
  'TCL_PARSE_HEXADECIMAL_ONLY (4)':
    'prefix': 'TCL_PARSE_HEXADECIMAL_ONLY'
    'body': 'TCL_PARSE_HEXADECIMAL_ONLY'
  'TCL_PARSE_INTEGER_ONLY (8)':
    'prefix': 'TCL_PARSE_INTEGER_ONLY'
    'body': 'TCL_PARSE_INTEGER_ONLY'
  'TCL_PARSE_MISSING_BRACE (3)':
    'prefix': 'TCL_PARSE_MISSING_BRACE'
    'body': 'TCL_PARSE_MISSING_BRACE'
  'TCL_PARSE_MISSING_BRACKET (4)':
    'prefix': 'TCL_PARSE_MISSING_BRACKET'
    'body': 'TCL_PARSE_MISSING_BRACKET'
  'TCL_PARSE_MISSING_PAREN (5)':
    'prefix': 'TCL_PARSE_MISSING_PAREN'
    'body': 'TCL_PARSE_MISSING_PAREN'
  'TCL_PARSE_MISSING_QUOTE (6)':
    'prefix': 'TCL_PARSE_MISSING_QUOTE'
    'body': 'TCL_PARSE_MISSING_QUOTE'
  'TCL_PARSE_MISSING_VAR_BRACE (7)':
    'prefix': 'TCL_PARSE_MISSING_VAR_BRACE'
    'body': 'TCL_PARSE_MISSING_VAR_BRACE'
  'TCL_PARSE_NO_WHITESPACE (32)':
    'prefix': 'TCL_PARSE_NO_WHITESPACE'
    'body': 'TCL_PARSE_NO_WHITESPACE'
  'TCL_PARSE_OCTAL_ONLY (2)':
    'prefix': 'TCL_PARSE_OCTAL_ONLY'
    'body': 'TCL_PARSE_OCTAL_ONLY'
  'TCL_PARSE_PART1 (1024)':
    'prefix': 'TCL_PARSE_PART1'
    'body': 'TCL_PARSE_PART1'
  'TCL_PARSE_QUOTE_EXTRA (1)':
    'prefix': 'TCL_PARSE_QUOTE_EXTRA'
    'body': 'TCL_PARSE_QUOTE_EXTRA'
  'TCL_PARSE_SCAN_PREFIXES (16)':
    'prefix': 'TCL_PARSE_SCAN_PREFIXES'
    'body': 'TCL_PARSE_SCAN_PREFIXES'
  'TCL_PARSE_SUCCESS (0)':
    'prefix': 'TCL_PARSE_SUCCESS'
    'body': 'TCL_PARSE_SUCCESS'
  'TCL_PARSE_SYNTAX (8)':
    'prefix': 'TCL_PARSE_SYNTAX'
    'body': 'TCL_PARSE_SYNTAX'
  'TCL_PATH_ABSOLUTE (0)':
    'prefix': 'TCL_PATH_ABSOLUTE'
    'body': 'TCL_PATH_ABSOLUTE'
  'TCL_PATH_DIRNAME (0)':
    'prefix': 'TCL_PATH_DIRNAME'
    'body': 'TCL_PATH_DIRNAME'
  'TCL_PATH_EXTENSION (2)':
    'prefix': 'TCL_PATH_EXTENSION'
    'body': 'TCL_PATH_EXTENSION'
  'TCL_PATH_RELATIVE (1)':
    'prefix': 'TCL_PATH_RELATIVE'
    'body': 'TCL_PATH_RELATIVE'
  'TCL_PATH_ROOT (3)':
    'prefix': 'TCL_PATH_ROOT'
    'body': 'TCL_PATH_ROOT'
  'TCL_PATH_TAIL (1)':
    'prefix': 'TCL_PATH_TAIL'
    'body': 'TCL_PATH_TAIL'
  'TCL_PATH_VOLUME_RELATIVE (2)':
    'prefix': 'TCL_PATH_VOLUME_RELATIVE'
    'body': 'TCL_PATH_VOLUME_RELATIVE'
  'TCL_PLATFORM_TRANSLATION (2)':
    'prefix': 'TCL_PLATFORM_TRANSLATION'
    'body': 'TCL_PLATFORM_TRANSLATION'
  'TCL_PLATFORM_UNIX (0)':
    'prefix': 'TCL_PLATFORM_UNIX'
    'body': 'TCL_PLATFORM_UNIX'
  'TCL_PLATFORM_WINDOWS (2)':
    'prefix': 'TCL_PLATFORM_WINDOWS'
    'body': 'TCL_PLATFORM_WINDOWS'
  'TCL_QUEUE_HEAD (1)':
    'prefix': 'TCL_QUEUE_HEAD'
    'body': 'TCL_QUEUE_HEAD'
  'TCL_QUEUE_MARK (2)':
    'prefix': 'TCL_QUEUE_MARK'
    'body': 'TCL_QUEUE_MARK'
  'TCL_QUEUE_TAIL (0)':
    'prefix': 'TCL_QUEUE_TAIL'
    'body': 'TCL_QUEUE_TAIL'
  'TCL_READABLE (2)':
    'prefix': 'TCL_READABLE'
    'body': 'TCL_READABLE'
  'TCL_REG_ADVANCED (3)':
    'prefix': 'TCL_REG_ADVANCED'
    'body': 'TCL_REG_ADVANCED'
  'TCL_REG_ADVF (2)':
    'prefix': 'TCL_REG_ADVF'
    'body': 'TCL_REG_ADVF'
  'TCL_REG_BASIC (0)':
    'prefix': 'TCL_REG_BASIC'
    'body': 'TCL_REG_BASIC'
  'TCL_REG_BOSONLY (1024)':
    'prefix': 'TCL_REG_BOSONLY'
    'body': 'TCL_REG_BOSONLY'
  'TCL_REG_CANMATCH (512)':
    'prefix': 'TCL_REG_CANMATCH'
    'body': 'TCL_REG_CANMATCH'
  'TCL_REG_EXPANDED (32)':
    'prefix': 'TCL_REG_EXPANDED'
    'body': 'TCL_REG_EXPANDED'
  'TCL_REG_EXTENDED (1)':
    'prefix': 'TCL_REG_EXTENDED'
    'body': 'TCL_REG_EXTENDED'
  'TCL_REG_NEWLINE (192)':
    'prefix': 'TCL_REG_NEWLINE'
    'body': 'TCL_REG_NEWLINE'
  'TCL_REG_NLANCH (128)':
    'prefix': 'TCL_REG_NLANCH'
    'body': 'TCL_REG_NLANCH'
  'TCL_REG_NLSTOP (64)':
    'prefix': 'TCL_REG_NLSTOP'
    'body': 'TCL_REG_NLSTOP'
  'TCL_REG_NOCASE (8)':
    'prefix': 'TCL_REG_NOCASE'
    'body': 'TCL_REG_NOCASE'
  'TCL_REG_NOSUB (16)':
    'prefix': 'TCL_REG_NOSUB'
    'body': 'TCL_REG_NOSUB'
  'TCL_REG_NOTBOL (1)':
    'prefix': 'TCL_REG_NOTBOL'
    'body': 'TCL_REG_NOTBOL'
  'TCL_REG_NOTEOL (2)':
    'prefix': 'TCL_REG_NOTEOL'
    'body': 'TCL_REG_NOTEOL'
  'TCL_REG_QUOTE (4)':
    'prefix': 'TCL_REG_QUOTE'
    'body': 'TCL_REG_QUOTE'
  'TCL_RELEASE_LEVEL (2)':
    'prefix': 'TCL_RELEASE_LEVEL'
    'body': 'TCL_RELEASE_LEVEL'
  'TCL_RELEASE_SERIAL (9)':
    'prefix': 'TCL_RELEASE_SERIAL'
    'body': 'TCL_RELEASE_SERIAL'
  'TCL_RESULT_SIZE (200)':
    'prefix': 'TCL_RESULT_SIZE'
    'body': 'TCL_RESULT_SIZE'
  'TCL_RETURN (2)':
    'prefix': 'TCL_RETURN'
    'body': 'TCL_RETURN'
  'TCL_SERVICE_ALL (1)':
    'prefix': 'TCL_SERVICE_ALL'
    'body': 'TCL_SERVICE_ALL'
  'TCL_SERVICE_NONE (0)':
    'prefix': 'TCL_SERVICE_NONE'
    'body': 'TCL_SERVICE_NONE'
  'TCL_SMALL_HASH_TABLE (4)':
    'prefix': 'TCL_SMALL_HASH_TABLE'
    'body': 'TCL_SMALL_HASH_TABLE'
  'TCL_STDERR (8)':
    'prefix': 'TCL_STDERR'
    'body': 'TCL_STDERR'
  'TCL_STDIN (2)':
    'prefix': 'TCL_STDIN'
    'body': 'TCL_STDIN'
  'TCL_STDOUT (4)':
    'prefix': 'TCL_STDOUT'
    'body': 'TCL_STDOUT'
  'TCL_STRING_KEYS (0)':
    'prefix': 'TCL_STRING_KEYS'
    'body': 'TCL_STRING_KEYS'
  'TCL_STUB_MAGIC (-56378673)':
    'prefix': 'TCL_STUB_MAGIC'
    'body': 'TCL_STUB_MAGIC'
  'TCL_SUBST_ALL (7)':
    'prefix': 'TCL_SUBST_ALL'
    'body': 'TCL_SUBST_ALL'
  'TCL_SUBST_BACKSLASHES (4)':
    'prefix': 'TCL_SUBST_BACKSLASHES'
    'body': 'TCL_SUBST_BACKSLASHES'
  'TCL_SUBST_COMMANDS (1)':
    'prefix': 'TCL_SUBST_COMMANDS'
    'body': 'TCL_SUBST_COMMANDS'
  'TCL_SUBST_VARIABLES (2)':
    'prefix': 'TCL_SUBST_VARIABLES'
    'body': 'TCL_SUBST_VARIABLES'
  'TCL_THREAD_JOINABLE (1)':
    'prefix': 'TCL_THREAD_JOINABLE'
    'body': 'TCL_THREAD_JOINABLE'
  'TCL_THREAD_NOFLAGS (0)':
    'prefix': 'TCL_THREAD_NOFLAGS'
    'body': 'TCL_THREAD_NOFLAGS'
  'TCL_THREAD_STACK_DEFAULT (0)':
    'prefix': 'TCL_THREAD_STACK_DEFAULT'
    'body': 'TCL_THREAD_STACK_DEFAULT'
  'TCL_TIMER_EVENTS (16)':
    'prefix': 'TCL_TIMER_EVENTS'
    'body': 'TCL_TIMER_EVENTS'
  'TCL_TOKEN_BS (8)':
    'prefix': 'TCL_TOKEN_BS'
    'body': 'TCL_TOKEN_BS'
  'TCL_TOKEN_COMMAND (16)':
    'prefix': 'TCL_TOKEN_COMMAND'
    'body': 'TCL_TOKEN_COMMAND'
  'TCL_TOKEN_EXPAND_WORD (256)':
    'prefix': 'TCL_TOKEN_EXPAND_WORD'
    'body': 'TCL_TOKEN_EXPAND_WORD'
  'TCL_TOKEN_OPERATOR (128)':
    'prefix': 'TCL_TOKEN_OPERATOR'
    'body': 'TCL_TOKEN_OPERATOR'
  'TCL_TOKEN_SIMPLE_WORD (2)':
    'prefix': 'TCL_TOKEN_SIMPLE_WORD'
    'body': 'TCL_TOKEN_SIMPLE_WORD'
  'TCL_TOKEN_SUB_EXPR (64)':
    'prefix': 'TCL_TOKEN_SUB_EXPR'
    'body': 'TCL_TOKEN_SUB_EXPR'
  'TCL_TOKEN_TEXT (4)':
    'prefix': 'TCL_TOKEN_TEXT'
    'body': 'TCL_TOKEN_TEXT'
  'TCL_TOKEN_VARIABLE (32)':
    'prefix': 'TCL_TOKEN_VARIABLE'
    'body': 'TCL_TOKEN_VARIABLE'
  'TCL_TOKEN_WORD (1)':
    'prefix': 'TCL_TOKEN_WORD'
    'body': 'TCL_TOKEN_WORD'
  'TCL_TRACE_ARRAY (2048)':
    'prefix': 'TCL_TRACE_ARRAY'
    'body': 'TCL_TRACE_ARRAY'
  'TCL_TRACE_DELETE (16384)':
    'prefix': 'TCL_TRACE_DELETE'
    'body': 'TCL_TRACE_DELETE'
  'TCL_TRACE_DESTROYED (128)':
    'prefix': 'TCL_TRACE_DESTROYED'
    'body': 'TCL_TRACE_DESTROYED'
  'TCL_TRACE_ENTER_EXEC (1)':
    'prefix': 'TCL_TRACE_ENTER_EXEC'
    'body': 'TCL_TRACE_ENTER_EXEC'
  'TCL_TRACE_LEAVE_EXEC (2)':
    'prefix': 'TCL_TRACE_LEAVE_EXEC'
    'body': 'TCL_TRACE_LEAVE_EXEC'
  'TCL_TRACE_OLD_STYLE (4096)':
    'prefix': 'TCL_TRACE_OLD_STYLE'
    'body': 'TCL_TRACE_OLD_STYLE'
  'TCL_TRACE_READS (16)':
    'prefix': 'TCL_TRACE_READS'
    'body': 'TCL_TRACE_READS'
  'TCL_TRACE_RENAME (8192)':
    'prefix': 'TCL_TRACE_RENAME'
    'body': 'TCL_TRACE_RENAME'
  'TCL_TRACE_RESULT_DYNAMIC (32768)':
    'prefix': 'TCL_TRACE_RESULT_DYNAMIC'
    'body': 'TCL_TRACE_RESULT_DYNAMIC'
  'TCL_TRACE_RESULT_OBJECT (65536)':
    'prefix': 'TCL_TRACE_RESULT_OBJECT'
    'body': 'TCL_TRACE_RESULT_OBJECT'
  'TCL_TRACE_UNSETS (64)':
    'prefix': 'TCL_TRACE_UNSETS'
    'body': 'TCL_TRACE_UNSETS'
  'TCL_TRACE_WRITES (32)':
    'prefix': 'TCL_TRACE_WRITES'
    'body': 'TCL_TRACE_WRITES'
  'TCL_TRANSLATE_AUTO (0)':
    'prefix': 'TCL_TRANSLATE_AUTO'
    'body': 'TCL_TRANSLATE_AUTO'
  'TCL_TRANSLATE_CR (1)':
    'prefix': 'TCL_TRANSLATE_CR'
    'body': 'TCL_TRANSLATE_CR'
  'TCL_TRANSLATE_CRLF (3)':
    'prefix': 'TCL_TRANSLATE_CRLF'
    'body': 'TCL_TRANSLATE_CRLF'
  'TCL_TRANSLATE_LF (2)':
    'prefix': 'TCL_TRANSLATE_LF'
    'body': 'TCL_TRANSLATE_LF'
  'TCL_TRUE_JUMP (1)':
    'prefix': 'TCL_TRUE_JUMP'
    'body': 'TCL_TRUE_JUMP'
  'TCL_UNCONDITIONAL_JUMP (0)':
    'prefix': 'TCL_UNCONDITIONAL_JUMP'
    'body': 'TCL_UNCONDITIONAL_JUMP'
  'TCL_UNLOAD_DETACH_FROM_INTERPRETER (1)':
    'prefix': 'TCL_UNLOAD_DETACH_FROM_INTERPRETER'
    'body': 'TCL_UNLOAD_DETACH_FROM_INTERPRETER'
  'TCL_UNLOAD_DETACH_FROM_PROCESS (2)':
    'prefix': 'TCL_UNLOAD_DETACH_FROM_PROCESS'
    'body': 'TCL_UNLOAD_DETACH_FROM_PROCESS'
  'TCL_UTF_MAX (3)':
    'prefix': 'TCL_UTF_MAX'
    'body': 'TCL_UTF_MAX'
  'TCL_WIDE_INT (3)':
    'prefix': 'TCL_WIDE_INT'
    'body': 'TCL_WIDE_INT'
  'TCL_WIDE_INT_IS_LONG ()':
    'prefix': 'TCL_WIDE_INT_IS_LONG'
    'body': 'TCL_WIDE_INT_IS_LONG'
  'TCL_WINDOW_EVENTS (4)':
    'prefix': 'TCL_WINDOW_EVENTS'
    'body': 'TCL_WINDOW_EVENTS'
  'TCL_WRITABLE (4)':
    'prefix': 'TCL_WRITABLE'
    'body': 'TCL_WRITABLE'
  'USE_PUTENV (1)':
    'prefix': 'USE_PUTENV'
    'body': 'USE_PUTENV'
  'USE_TERMIOS (1)':
    'prefix': 'USE_TERMIOS'
    'body': 'USE_TERMIOS'
  'VAR_ALL_HASH (4236)':
    'prefix': 'VAR_ALL_HASH'
    'body': 'VAR_ALL_HASH'
  'VAR_ALL_TRACES (2160)':
    'prefix': 'VAR_ALL_TRACES'
    'body': 'VAR_ALL_TRACES'
  'VAR_ARGUMENT (256)':
    'prefix': 'VAR_ARGUMENT'
    'body': 'VAR_ARGUMENT'
  'VAR_ARRAY (1)':
    'prefix': 'VAR_ARRAY'
    'body': 'VAR_ARRAY'
  'VAR_ARRAY_ELEMENT (4096)':
    'prefix': 'VAR_ARRAY_ELEMENT'
    'body': 'VAR_ARRAY_ELEMENT'
  'VAR_DEAD_HASH (8)':
    'prefix': 'VAR_DEAD_HASH'
    'body': 'VAR_DEAD_HASH'
  'VAR_IN_HASHTABLE (4)':
    'prefix': 'VAR_IN_HASHTABLE'
    'body': 'VAR_IN_HASHTABLE'
  'VAR_IS_ARGS (1024)':
    'prefix': 'VAR_IS_ARGS'
    'body': 'VAR_IS_ARGS'
  'VAR_LINK (2)':
    'prefix': 'VAR_LINK'
    'body': 'VAR_LINK'
  'VAR_NAMESPACE_VAR (128)':
    'prefix': 'VAR_NAMESPACE_VAR'
    'body': 'VAR_NAMESPACE_VAR'
  'VAR_RESOLVED (32768)':
    'prefix': 'VAR_RESOLVED'
    'body': 'VAR_RESOLVED'
  'VAR_SEARCH_ACTIVE (16384)':
    'prefix': 'VAR_SEARCH_ACTIVE'
    'body': 'VAR_SEARCH_ACTIVE'
  'VAR_TEMPORARY (512)':
    'prefix': 'VAR_TEMPORARY'
    'body': 'VAR_TEMPORARY'
  'VAR_TRACED_ARRAY (2048)':
    'prefix': 'VAR_TRACED_ARRAY'
    'body': 'VAR_TRACED_ARRAY'
  'VAR_TRACED_READ (16)':
    'prefix': 'VAR_TRACED_READ'
    'body': 'VAR_TRACED_READ'
  'VAR_TRACED_UNSET (64)':
    'prefix': 'VAR_TRACED_UNSET'
    'body': 'VAR_TRACED_UNSET'
  'VAR_TRACED_WRITE (32)':
    'prefix': 'VAR_TRACED_WRITE'
    'body': 'VAR_TRACED_WRITE'
  'VAR_TRACE_ACTIVE (8192)':
    'prefix': 'VAR_TRACE_ACTIVE'
    'body': 'VAR_TRACE_ACTIVE'
  'TclAddLiteralObj':
    'prefix': 'TclAddLiteralObj'
    'body': 'TclAddLiteralObj(${1:struct CompileEnv* envPtr}, ${2:Tcl_Obj* objPtr}, ${3:LiteralEntry** litPtrPtr})'
  'TclAddOpCmd':
    'prefix': 'TclAddOpCmd'
    'body': 'TclAddOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclAdvanceContinuations':
    'prefix': 'TclAdvanceContinuations'
    'body': 'TclAdvanceContinuations(${1:int* line}, ${2:int** next}, ${3:int loc})'
  'TclAdvanceLines':
    'prefix': 'TclAdvanceLines'
    'body': 'TclAdvanceLines(${1:int* line}, ${2:char* start}, ${3:char* end})'
  'TclAllocateFreeObjects':
    'prefix': 'TclAllocateFreeObjects'
    'body': 'TclAllocateFreeObjects()'
  'TclAndOpCmd':
    'prefix': 'TclAndOpCmd'
    'body': 'TclAndOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclArgumentBCEnter':
    'prefix': 'TclArgumentBCEnter'
    'body': 'TclArgumentBCEnter(${1:Tcl_Interp* interp}, ${2:Tcl_Obj** objv}, ${3:int objc}, ${4:void* codePtr}, ${5:CmdFrame* cfPtr}, ${6:int pc})'
  'TclArgumentBCRelease':
    'prefix': 'TclArgumentBCRelease'
    'body': 'TclArgumentBCRelease(${1:Tcl_Interp* interp}, ${2:Tcl_Obj** objv}, ${3:int objc}, ${4:void* codePtr}, ${5:int pc})'
  'TclArgumentEnter':
    'prefix': 'TclArgumentEnter'
    'body': 'TclArgumentEnter(${1:Tcl_Interp* interp}, ${2:Tcl_Obj** objv}, ${3:int objc}, ${4:CmdFrame* cf})'
  'TclArgumentGet':
    'prefix': 'TclArgumentGet'
    'body': 'TclArgumentGet(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* obj}, ${3:CmdFrame** cfPtrPtr}, ${4:int* wordPtr})'
  'TclArgumentRelease':
    'prefix': 'TclArgumentRelease'
    'body': 'TclArgumentRelease(${1:Tcl_Interp* interp}, ${2:Tcl_Obj** objv}, ${3:int objc})'
  'TclArraySet':
    'prefix': 'TclArraySet'
    'body': 'TclArraySet(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* arrayNameObj}, ${3:Tcl_Obj* arrayElemObj})'
  'TclBNInitBignumFromLong':
    'prefix': 'TclBNInitBignumFromLong'
    'body': 'TclBNInitBignumFromLong(${1:mp_int* bignum}, ${2:long initVal})'
  'TclBNInitBignumFromWideInt':
    'prefix': 'TclBNInitBignumFromWideInt'
    'body': 'TclBNInitBignumFromWideInt(${1:mp_int* bignum}, ${2:Tcl_WideInt initVal})'
  'TclBNInitBignumFromWideUInt':
    'prefix': 'TclBNInitBignumFromWideUInt'
    'body': 'TclBNInitBignumFromWideUInt(${1:mp_int* bignum}, ${2:Tcl_WideUInt initVal})'
  'TclBN_epoch':
    'prefix': 'TclBN_epoch'
    'body': 'TclBN_epoch()'
  'TclBN_fast_s_mp_mul_digs':
    'prefix': 'TclBN_fast_s_mp_mul_digs'
    'body': 'TclBN_fast_s_mp_mul_digs(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c}, ${4:int digs})'
  'TclBN_fast_s_mp_sqr':
    'prefix': 'TclBN_fast_s_mp_sqr'
    'body': 'TclBN_fast_s_mp_sqr(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_add':
    'prefix': 'TclBN_mp_add'
    'body': 'TclBN_mp_add(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_add_d':
    'prefix': 'TclBN_mp_add_d'
    'body': 'TclBN_mp_add_d(${1:mp_int* a}, ${2:mp_digit b}, ${3:mp_int* c})'
  'TclBN_mp_and':
    'prefix': 'TclBN_mp_and'
    'body': 'TclBN_mp_and(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_clamp':
    'prefix': 'TclBN_mp_clamp'
    'body': 'TclBN_mp_clamp(${1:mp_int* a})'
  'TclBN_mp_clear':
    'prefix': 'TclBN_mp_clear'
    'body': 'TclBN_mp_clear(${1:mp_int* a})'
  'TclBN_mp_clear_multi':
    'prefix': 'TclBN_mp_clear_multi'
    'body': 'TclBN_mp_clear_multi(${1:mp_int* a})'
  'TclBN_mp_cmp':
    'prefix': 'TclBN_mp_cmp'
    'body': 'TclBN_mp_cmp(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_cmp_d':
    'prefix': 'TclBN_mp_cmp_d'
    'body': 'TclBN_mp_cmp_d(${1:mp_int* a}, ${2:mp_digit b})'
  'TclBN_mp_cmp_mag':
    'prefix': 'TclBN_mp_cmp_mag'
    'body': 'TclBN_mp_cmp_mag(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_copy':
    'prefix': 'TclBN_mp_copy'
    'body': 'TclBN_mp_copy(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_count_bits':
    'prefix': 'TclBN_mp_count_bits'
    'body': 'TclBN_mp_count_bits(${1:mp_int* a})'
  'TclBN_mp_div':
    'prefix': 'TclBN_mp_div'
    'body': 'TclBN_mp_div(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* q}, ${4:mp_int* r})'
  'TclBN_mp_div_2':
    'prefix': 'TclBN_mp_div_2'
    'body': 'TclBN_mp_div_2(${1:mp_int* a}, ${2:mp_int* q})'
  'TclBN_mp_div_2d':
    'prefix': 'TclBN_mp_div_2d'
    'body': 'TclBN_mp_div_2d(${1:mp_int* a}, ${2:int b}, ${3:mp_int* q}, ${4:mp_int* r})'
  'TclBN_mp_div_3':
    'prefix': 'TclBN_mp_div_3'
    'body': 'TclBN_mp_div_3(${1:mp_int* a}, ${2:mp_int* q}, ${3:mp_digit* r})'
  'TclBN_mp_div_d':
    'prefix': 'TclBN_mp_div_d'
    'body': 'TclBN_mp_div_d(${1:mp_int* a}, ${2:mp_digit b}, ${3:mp_int* q}, ${4:mp_digit* r})'
  'TclBN_mp_exch':
    'prefix': 'TclBN_mp_exch'
    'body': 'TclBN_mp_exch(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_expt_d':
    'prefix': 'TclBN_mp_expt_d'
    'body': 'TclBN_mp_expt_d(${1:mp_int* a}, ${2:mp_digit b}, ${3:mp_int* c})'
  'TclBN_mp_grow':
    'prefix': 'TclBN_mp_grow'
    'body': 'TclBN_mp_grow(${1:mp_int* a}, ${2:int size})'
  'TclBN_mp_init':
    'prefix': 'TclBN_mp_init'
    'body': 'TclBN_mp_init(${1:mp_int* a})'
  'TclBN_mp_init_copy':
    'prefix': 'TclBN_mp_init_copy'
    'body': 'TclBN_mp_init_copy(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_init_multi':
    'prefix': 'TclBN_mp_init_multi'
    'body': 'TclBN_mp_init_multi(${1:mp_int* a})'
  'TclBN_mp_init_set':
    'prefix': 'TclBN_mp_init_set'
    'body': 'TclBN_mp_init_set(${1:mp_int* a}, ${2:mp_digit b})'
  'TclBN_mp_init_size':
    'prefix': 'TclBN_mp_init_size'
    'body': 'TclBN_mp_init_size(${1:mp_int* a}, ${2:int size})'
  'TclBN_mp_karatsuba_mul':
    'prefix': 'TclBN_mp_karatsuba_mul'
    'body': 'TclBN_mp_karatsuba_mul(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_karatsuba_sqr':
    'prefix': 'TclBN_mp_karatsuba_sqr'
    'body': 'TclBN_mp_karatsuba_sqr(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_lshd':
    'prefix': 'TclBN_mp_lshd'
    'body': 'TclBN_mp_lshd(${1:mp_int* a}, ${2:int shift})'
  'TclBN_mp_mod':
    'prefix': 'TclBN_mp_mod'
    'body': 'TclBN_mp_mod(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* r})'
  'TclBN_mp_mod_2d':
    'prefix': 'TclBN_mp_mod_2d'
    'body': 'TclBN_mp_mod_2d(${1:mp_int* a}, ${2:int b}, ${3:mp_int* r})'
  'TclBN_mp_mul':
    'prefix': 'TclBN_mp_mul'
    'body': 'TclBN_mp_mul(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* p})'
  'TclBN_mp_mul_2':
    'prefix': 'TclBN_mp_mul_2'
    'body': 'TclBN_mp_mul_2(${1:mp_int* a}, ${2:mp_int* p})'
  'TclBN_mp_mul_2d':
    'prefix': 'TclBN_mp_mul_2d'
    'body': 'TclBN_mp_mul_2d(${1:mp_int* a}, ${2:int d}, ${3:mp_int* p})'
  'TclBN_mp_mul_d':
    'prefix': 'TclBN_mp_mul_d'
    'body': 'TclBN_mp_mul_d(${1:mp_int* a}, ${2:mp_digit b}, ${3:mp_int* p})'
  'TclBN_mp_neg':
    'prefix': 'TclBN_mp_neg'
    'body': 'TclBN_mp_neg(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_or':
    'prefix': 'TclBN_mp_or'
    'body': 'TclBN_mp_or(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_radix_size':
    'prefix': 'TclBN_mp_radix_size'
    'body': 'TclBN_mp_radix_size(${1:mp_int* a}, ${2:int radix}, ${3:int* size})'
  'TclBN_mp_read_radix':
    'prefix': 'TclBN_mp_read_radix'
    'body': 'TclBN_mp_read_radix(${1:mp_int* a}, ${2:char* str}, ${3:int radix})'
  'TclBN_mp_rshd':
    'prefix': 'TclBN_mp_rshd'
    'body': 'TclBN_mp_rshd(${1:mp_int* a}, ${2:int shift})'
  'TclBN_mp_set':
    'prefix': 'TclBN_mp_set'
    'body': 'TclBN_mp_set(${1:mp_int* a}, ${2:mp_digit b})'
  'TclBN_mp_shrink':
    'prefix': 'TclBN_mp_shrink'
    'body': 'TclBN_mp_shrink(${1:mp_int* a})'
  'TclBN_mp_sqr':
    'prefix': 'TclBN_mp_sqr'
    'body': 'TclBN_mp_sqr(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_sqrt':
    'prefix': 'TclBN_mp_sqrt'
    'body': 'TclBN_mp_sqrt(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_sub':
    'prefix': 'TclBN_mp_sub'
    'body': 'TclBN_mp_sub(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_sub_d':
    'prefix': 'TclBN_mp_sub_d'
    'body': 'TclBN_mp_sub_d(${1:mp_int* a}, ${2:mp_digit b}, ${3:mp_int* c})'
  'TclBN_mp_to_unsigned_bin':
    'prefix': 'TclBN_mp_to_unsigned_bin'
    'body': 'TclBN_mp_to_unsigned_bin(${1:mp_int* a}, ${2:unsigned char* b})'
  'TclBN_mp_to_unsigned_bin_n':
    'prefix': 'TclBN_mp_to_unsigned_bin_n'
    'body': 'TclBN_mp_to_unsigned_bin_n(${1:mp_int* a}, ${2:unsigned char* b}, ${3:unsigned long* outlen})'
  'TclBN_mp_toom_mul':
    'prefix': 'TclBN_mp_toom_mul'
    'body': 'TclBN_mp_toom_mul(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_toom_sqr':
    'prefix': 'TclBN_mp_toom_sqr'
    'body': 'TclBN_mp_toom_sqr(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_mp_toradix_n':
    'prefix': 'TclBN_mp_toradix_n'
    'body': 'TclBN_mp_toradix_n(${1:mp_int* a}, ${2:char* str}, ${3:int radix}, ${4:int maxlen})'
  'TclBN_mp_unsigned_bin_size':
    'prefix': 'TclBN_mp_unsigned_bin_size'
    'body': 'TclBN_mp_unsigned_bin_size(${1:mp_int* a})'
  'TclBN_mp_xor':
    'prefix': 'TclBN_mp_xor'
    'body': 'TclBN_mp_xor(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_mp_zero':
    'prefix': 'TclBN_mp_zero'
    'body': 'TclBN_mp_zero(${1:mp_int* a})'
  'TclBN_reverse':
    'prefix': 'TclBN_reverse'
    'body': 'TclBN_reverse(${1:unsigned char* s}, ${2:int len})'
  'TclBN_revision':
    'prefix': 'TclBN_revision'
    'body': 'TclBN_revision()'
  'TclBN_s_mp_add':
    'prefix': 'TclBN_s_mp_add'
    'body': 'TclBN_s_mp_add(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBN_s_mp_mul_digs':
    'prefix': 'TclBN_s_mp_mul_digs'
    'body': 'TclBN_s_mp_mul_digs(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c}, ${4:int digs})'
  'TclBN_s_mp_sqr':
    'prefix': 'TclBN_s_mp_sqr'
    'body': 'TclBN_s_mp_sqr(${1:mp_int* a}, ${2:mp_int* b})'
  'TclBN_s_mp_sub':
    'prefix': 'TclBN_s_mp_sub'
    'body': 'TclBN_s_mp_sub(${1:mp_int* a}, ${2:mp_int* b}, ${3:mp_int* c})'
  'TclBackgroundException':
    'prefix': 'TclBackgroundException'
    'body': 'TclBackgroundException(${1:Tcl_Interp* interp}, ${2:int code})'
  'TclBignumToDouble':
    'prefix': 'TclBignumToDouble'
    'body': 'TclBignumToDouble(${1:mp_int* bignum})'
  'TclByteArrayMatch':
    'prefix': 'TclByteArrayMatch'
    'body': 'TclByteArrayMatch(${1:unsigned char* string}, ${2:int strLen}, ${3:unsigned char* pattern}, ${4:int ptnLen}, ${5:int flags})'
  'TclCallVarTraces':
    'prefix': 'TclCallVarTraces'
    'body': 'TclCallVarTraces(${1:Interp* iPtr}, ${2:Var* arrayPtr}, ${3:Var* varPtr}, ${4:char* part1}, ${5:char* part2}, ${6:int flags}, ${7:int leaveErrMsg})'
  'TclCeil':
    'prefix': 'TclCeil'
    'body': 'TclCeil(${1:mp_int* a})'
  'TclChanCaughtErrorBypass':
    'prefix': 'TclChanCaughtErrorBypass'
    'body': 'TclChanCaughtErrorBypass(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'TclChanCreateObjCmd':
    'prefix': 'TclChanCreateObjCmd'
    'body': 'TclChanCreateObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclChanPostEventObjCmd':
    'prefix': 'TclChanPostEventObjCmd'
    'body': 'TclChanPostEventObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclChannelEventScriptInvoker':
    'prefix': 'TclChannelEventScriptInvoker'
    'body': 'TclChannelEventScriptInvoker(${1:ClientData clientData}, ${2:int flags})'
  'TclChannelTransform':
    'prefix': 'TclChannelTransform'
    'body': 'TclChannelTransform(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan}, ${3:Tcl_Obj* cmdObjPtr})'
  'TclCheckBadOctal':
    'prefix': 'TclCheckBadOctal'
    'body': 'TclCheckBadOctal(${1:Tcl_Interp* interp}, ${2:char* value})'
  'TclCheckExecutionTraces':
    'prefix': 'TclCheckExecutionTraces'
    'body': 'TclCheckExecutionTraces(${1:Tcl_Interp* interp}, ${2:char* command}, ${3:int numChars}, ${4:Command* cmdPtr}, ${5:int result}, ${6:int traceFlags}, ${7:int objc}, ${8:Tcl_Obj ** objv})'
  'TclCheckInterpTraces':
    'prefix': 'TclCheckInterpTraces'
    'body': 'TclCheckInterpTraces(${1:Tcl_Interp* interp}, ${2:char* command}, ${3:int numChars}, ${4:Command* cmdPtr}, ${5:int result}, ${6:int traceFlags}, ${7:int objc}, ${8:Tcl_Obj ** objv})'
  'TclCleanupByteCode':
    'prefix': 'TclCleanupByteCode'
    'body': 'TclCleanupByteCode(${1:ByteCode* codePtr})'
  'TclCleanupChildren':
    'prefix': 'TclCleanupChildren'
    'body': 'TclCleanupChildren(${1:Tcl_Interp* interp}, ${2:int numPids}, ${3:Tcl_Pid* pidPtr}, ${4:Tcl_Channel errorChan})'
  'TclCleanupCommand':
    'prefix': 'TclCleanupCommand'
    'body': 'TclCleanupCommand(${1:Command* cmdPtr})'
  'TclCleanupLiteralTable':
    'prefix': 'TclCleanupLiteralTable'
    'body': 'TclCleanupLiteralTable(${1:Tcl_Interp* interp}, ${2:LiteralTable* tablePtr})'
  'TclCleanupVar':
    'prefix': 'TclCleanupVar'
    'body': 'TclCleanupVar(${1:Var* varPtr}, ${2:Var* arrayPtr})'
  'TclClockInit':
    'prefix': 'TclClockInit'
    'body': 'TclClockInit(${1:Tcl_Interp* interp})'
  'TclClockOldscanObjCmd':
    'prefix': 'TclClockOldscanObjCmd'
    'body': 'TclClockOldscanObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclCompEvalObj':
    'prefix': 'TclCompEvalObj'
    'body': 'TclCompEvalObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:CmdFrame* invoker}, ${4:int word})'
  'TclCompareObjKeys':
    'prefix': 'TclCompareObjKeys'
    'body': 'TclCompareObjKeys(${1:void* keyPtr}, ${2:Tcl_HashEntry* hPtr})'
  'TclCompileAddOpCmd':
    'prefix': 'TclCompileAddOpCmd'
    'body': 'TclCompileAddOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileAndOpCmd':
    'prefix': 'TclCompileAndOpCmd'
    'body': 'TclCompileAndOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileAppendCmd':
    'prefix': 'TclCompileAppendCmd'
    'body': 'TclCompileAppendCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileBreakCmd':
    'prefix': 'TclCompileBreakCmd'
    'body': 'TclCompileBreakCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileCatchCmd':
    'prefix': 'TclCompileCatchCmd'
    'body': 'TclCompileCatchCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileCmdWord':
    'prefix': 'TclCompileCmdWord'
    'body': 'TclCompileCmdWord(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int count}, ${4:CompileEnv* envPtr})'
  'TclCompileContinueCmd':
    'prefix': 'TclCompileContinueCmd'
    'body': 'TclCompileContinueCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictAppendCmd':
    'prefix': 'TclCompileDictAppendCmd'
    'body': 'TclCompileDictAppendCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictForCmd':
    'prefix': 'TclCompileDictForCmd'
    'body': 'TclCompileDictForCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictGetCmd':
    'prefix': 'TclCompileDictGetCmd'
    'body': 'TclCompileDictGetCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictIncrCmd':
    'prefix': 'TclCompileDictIncrCmd'
    'body': 'TclCompileDictIncrCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictLappendCmd':
    'prefix': 'TclCompileDictLappendCmd'
    'body': 'TclCompileDictLappendCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictSetCmd':
    'prefix': 'TclCompileDictSetCmd'
    'body': 'TclCompileDictSetCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDictUpdateCmd':
    'prefix': 'TclCompileDictUpdateCmd'
    'body': 'TclCompileDictUpdateCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileDivOpCmd':
    'prefix': 'TclCompileDivOpCmd'
    'body': 'TclCompileDivOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileEnsemble':
    'prefix': 'TclCompileEnsemble'
    'body': 'TclCompileEnsemble(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileEqOpCmd':
    'prefix': 'TclCompileEqOpCmd'
    'body': 'TclCompileEqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileExpr':
    'prefix': 'TclCompileExpr'
    'body': 'TclCompileExpr(${1:Tcl_Interp* interp}, ${2:char* script}, ${3:int numBytes}, ${4:CompileEnv* envPtr}, ${5:int optimize})'
  'TclCompileExprCmd':
    'prefix': 'TclCompileExprCmd'
    'body': 'TclCompileExprCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileExprWords':
    'prefix': 'TclCompileExprWords'
    'body': 'TclCompileExprWords(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int numWords}, ${4:CompileEnv* envPtr})'
  'TclCompileForCmd':
    'prefix': 'TclCompileForCmd'
    'body': 'TclCompileForCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileForeachCmd':
    'prefix': 'TclCompileForeachCmd'
    'body': 'TclCompileForeachCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileGeqOpCmd':
    'prefix': 'TclCompileGeqOpCmd'
    'body': 'TclCompileGeqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileGlobalCmd':
    'prefix': 'TclCompileGlobalCmd'
    'body': 'TclCompileGlobalCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileGreaterOpCmd':
    'prefix': 'TclCompileGreaterOpCmd'
    'body': 'TclCompileGreaterOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileIfCmd':
    'prefix': 'TclCompileIfCmd'
    'body': 'TclCompileIfCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileInOpCmd':
    'prefix': 'TclCompileInOpCmd'
    'body': 'TclCompileInOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileIncrCmd':
    'prefix': 'TclCompileIncrCmd'
    'body': 'TclCompileIncrCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileInfoExistsCmd':
    'prefix': 'TclCompileInfoExistsCmd'
    'body': 'TclCompileInfoExistsCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileInvertOpCmd':
    'prefix': 'TclCompileInvertOpCmd'
    'body': 'TclCompileInvertOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLappendCmd':
    'prefix': 'TclCompileLappendCmd'
    'body': 'TclCompileLappendCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLassignCmd':
    'prefix': 'TclCompileLassignCmd'
    'body': 'TclCompileLassignCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLeqOpCmd':
    'prefix': 'TclCompileLeqOpCmd'
    'body': 'TclCompileLeqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLessOpCmd':
    'prefix': 'TclCompileLessOpCmd'
    'body': 'TclCompileLessOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLindexCmd':
    'prefix': 'TclCompileLindexCmd'
    'body': 'TclCompileLindexCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileListCmd':
    'prefix': 'TclCompileListCmd'
    'body': 'TclCompileListCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLlengthCmd':
    'prefix': 'TclCompileLlengthCmd'
    'body': 'TclCompileLlengthCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLsetCmd':
    'prefix': 'TclCompileLsetCmd'
    'body': 'TclCompileLsetCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileLshiftOpCmd':
    'prefix': 'TclCompileLshiftOpCmd'
    'body': 'TclCompileLshiftOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileMinusOpCmd':
    'prefix': 'TclCompileMinusOpCmd'
    'body': 'TclCompileMinusOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileModOpCmd':
    'prefix': 'TclCompileModOpCmd'
    'body': 'TclCompileModOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileMulOpCmd':
    'prefix': 'TclCompileMulOpCmd'
    'body': 'TclCompileMulOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileNamespaceCmd':
    'prefix': 'TclCompileNamespaceCmd'
    'body': 'TclCompileNamespaceCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileNeqOpCmd':
    'prefix': 'TclCompileNeqOpCmd'
    'body': 'TclCompileNeqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileNiOpCmd':
    'prefix': 'TclCompileNiOpCmd'
    'body': 'TclCompileNiOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileNoOp':
    'prefix': 'TclCompileNoOp'
    'body': 'TclCompileNoOp(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileNotOpCmd':
    'prefix': 'TclCompileNotOpCmd'
    'body': 'TclCompileNotOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileOrOpCmd':
    'prefix': 'TclCompileOrOpCmd'
    'body': 'TclCompileOrOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompilePowOpCmd':
    'prefix': 'TclCompilePowOpCmd'
    'body': 'TclCompilePowOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileRegexpCmd':
    'prefix': 'TclCompileRegexpCmd'
    'body': 'TclCompileRegexpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileReturnCmd':
    'prefix': 'TclCompileReturnCmd'
    'body': 'TclCompileReturnCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileRshiftOpCmd':
    'prefix': 'TclCompileRshiftOpCmd'
    'body': 'TclCompileRshiftOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileScript':
    'prefix': 'TclCompileScript'
    'body': 'TclCompileScript(${1:Tcl_Interp* interp}, ${2:char* script}, ${3:int numBytes}, ${4:CompileEnv* envPtr})'
  'TclCompileSetCmd':
    'prefix': 'TclCompileSetCmd'
    'body': 'TclCompileSetCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStreqOpCmd':
    'prefix': 'TclCompileStreqOpCmd'
    'body': 'TclCompileStreqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStringCmpCmd':
    'prefix': 'TclCompileStringCmpCmd'
    'body': 'TclCompileStringCmpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStringEqualCmd':
    'prefix': 'TclCompileStringEqualCmd'
    'body': 'TclCompileStringEqualCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStringIndexCmd':
    'prefix': 'TclCompileStringIndexCmd'
    'body': 'TclCompileStringIndexCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStringLenCmd':
    'prefix': 'TclCompileStringLenCmd'
    'body': 'TclCompileStringLenCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStringMatchCmd':
    'prefix': 'TclCompileStringMatchCmd'
    'body': 'TclCompileStringMatchCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileStrneqOpCmd':
    'prefix': 'TclCompileStrneqOpCmd'
    'body': 'TclCompileStrneqOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileSwitchCmd':
    'prefix': 'TclCompileSwitchCmd'
    'body': 'TclCompileSwitchCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileSyntaxError':
    'prefix': 'TclCompileSyntaxError'
    'body': 'TclCompileSyntaxError(${1:Tcl_Interp* interp}, ${2:CompileEnv* envPtr})'
  'TclCompileTokens':
    'prefix': 'TclCompileTokens'
    'body': 'TclCompileTokens(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int count}, ${4:CompileEnv* envPtr})'
  'TclCompileUpvarCmd':
    'prefix': 'TclCompileUpvarCmd'
    'body': 'TclCompileUpvarCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileVariableCmd':
    'prefix': 'TclCompileVariableCmd'
    'body': 'TclCompileVariableCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileWhileCmd':
    'prefix': 'TclCompileWhileCmd'
    'body': 'TclCompileWhileCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclCompileXorOpCmd':
    'prefix': 'TclCompileXorOpCmd'
    'body': 'TclCompileXorOpCmd(${1:Tcl_Interp* interp}, ${2:Tcl_Parse* parsePtr}, ${3:Command* cmdPtr}, ${4:struct CompileEnv* envPtr})'
  'TclContinuationsCopy':
    'prefix': 'TclContinuationsCopy'
    'body': 'TclContinuationsCopy(${1:Tcl_Obj* objPtr}, ${2:Tcl_Obj* originObjPtr})'
  'TclContinuationsEnter':
    'prefix': 'TclContinuationsEnter'
    'body': 'TclContinuationsEnter(${1:Tcl_Obj* objPtr}, ${2:int num}, ${3:int* loc})'
  'TclContinuationsEnterDerived':
    'prefix': 'TclContinuationsEnterDerived'
    'body': 'TclContinuationsEnterDerived(${1:Tcl_Obj* objPtr}, ${2:int start}, ${3:int* clNext})'
  'TclContinuationsGet':
    'prefix': 'TclContinuationsGet'
    'body': 'TclContinuationsGet(${1:Tcl_Obj* objPtr})'
  'TclCopyAndCollapse':
    'prefix': 'TclCopyAndCollapse'
    'body': 'TclCopyAndCollapse(${1:int count}, ${2:char* src}, ${3:char* dst})'
  'TclCopyChannel':
    'prefix': 'TclCopyChannel'
    'body': 'TclCopyChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Channel inChan}, ${3:Tcl_Channel outChan}, ${4:int toRead}, ${5:Tcl_Obj* cmdPtr})'
  'TclCreateAbsoluteTimerHandler':
    'prefix': 'TclCreateAbsoluteTimerHandler'
    'body': 'TclCreateAbsoluteTimerHandler(${1:Tcl_Time* timePtr}, ${2:Tcl_TimerProc* proc}, ${3:ClientData clientData})'
  'TclCreateAuxData':
    'prefix': 'TclCreateAuxData'
    'body': 'TclCreateAuxData(${1:ClientData clientData}, ${2:AuxDataType* typePtr}, ${3:CompileEnv* envPtr})'
  'TclCreateExceptRange':
    'prefix': 'TclCreateExceptRange'
    'body': 'TclCreateExceptRange(${1:ExceptionRangeType type}, ${2:CompileEnv* envPtr})'
  'TclCreateExecEnv':
    'prefix': 'TclCreateExecEnv'
    'body': 'TclCreateExecEnv(${1:Tcl_Interp* interp})'
  'TclCreateLateExitHandler':
    'prefix': 'TclCreateLateExitHandler'
    'body': 'TclCreateLateExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'TclCreateLiteral':
    'prefix': 'TclCreateLiteral'
    'body': 'TclCreateLiteral(${1:Interp* iPtr}, ${2:char* bytes}, ${3:int length}, ${4:unsigned int hash}, ${5:int* newPtr}, ${6:Namespace* nsPtr}, ${7:int flags}, ${8:LiteralEntry** globalPtrPtr})'
  'TclCreatePipeline':
    'prefix': 'TclCreatePipeline'
    'body': 'TclCreatePipeline(${1:Tcl_Interp* interp}, ${2:int argc}, ${3:char** argv}, ${4:Tcl_Pid** pidArrayPtr}, ${5:TclFile* inPipePtr}, ${6:TclFile* outPipePtr}, ${7:TclFile* errFilePtr})'
  'TclCreateProc':
    'prefix': 'TclCreateProc'
    'body': 'TclCreateProc(${1:Tcl_Interp* interp}, ${2:Namespace* nsPtr}, ${3:char* procName}, ${4:Tcl_Obj* argsPtr}, ${5:Tcl_Obj* bodyPtr}, ${6:Proc** procPtrPtr})'
  'TclCrossFilesystemCopy':
    'prefix': 'TclCrossFilesystemCopy'
    'body': 'TclCrossFilesystemCopy(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* source}, ${3:Tcl_Obj* target})'
  'TclDbDumpActiveObjects':
    'prefix': 'TclDbDumpActiveObjects'
    'body': 'TclDbDumpActiveObjects(${1:FILE* outFile})'
  'TclDefaultBgErrorHandlerObjCmd':
    'prefix': 'TclDefaultBgErrorHandlerObjCmd'
    'body': 'TclDefaultBgErrorHandlerObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclDeleteCompiledLocalVars':
    'prefix': 'TclDeleteCompiledLocalVars'
    'body': 'TclDeleteCompiledLocalVars(${1:Interp* iPtr}, ${2:CallFrame* framePtr})'
  'TclDeleteExecEnv':
    'prefix': 'TclDeleteExecEnv'
    'body': 'TclDeleteExecEnv(${1:ExecEnv* eePtr})'
  'TclDeleteLateExitHandler':
    'prefix': 'TclDeleteLateExitHandler'
    'body': 'TclDeleteLateExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'TclDeleteLiteralTable':
    'prefix': 'TclDeleteLiteralTable'
    'body': 'TclDeleteLiteralTable(${1:Tcl_Interp* interp}, ${2:LiteralTable* tablePtr})'
  'TclDeleteNamespaceVars':
    'prefix': 'TclDeleteNamespaceVars'
    'body': 'TclDeleteNamespaceVars(${1:Namespace* nsPtr})'
  'TclDeleteVars':
    'prefix': 'TclDeleteVars'
    'body': 'TclDeleteVars(${1:Interp* iPtr}, ${2:TclVarHashTable* tablePtr})'
  'TclDisassembleByteCodeObj':
    'prefix': 'TclDisassembleByteCodeObj'
    'body': 'TclDisassembleByteCodeObj(${1:Tcl_Obj* objPtr})'
  'TclDivOpCmd':
    'prefix': 'TclDivOpCmd'
    'body': 'TclDivOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclDoubleDigits':
    'prefix': 'TclDoubleDigits'
    'body': 'TclDoubleDigits(${1:char* buf}, ${2:double value}, ${3:int* signum})'
  'TclDumpMemoryInfo':
    'prefix': 'TclDumpMemoryInfo'
    'body': 'TclDumpMemoryInfo(${1:FILE* outFile})'
  'TclEmitForwardJump':
    'prefix': 'TclEmitForwardJump'
    'body': 'TclEmitForwardJump(${1:CompileEnv* envPtr}, ${2:TclJumpType jumpType}, ${3:JumpFixup* jumpFixupPtr})'
  'TclEqOpCmd':
    'prefix': 'TclEqOpCmd'
    'body': 'TclEqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclEvalEx':
    'prefix': 'TclEvalEx'
    'body': 'TclEvalEx(${1:Tcl_Interp* interp}, ${2:char* script}, ${3:int numBytes}, ${4:int flags}, ${5:int line}, ${6:int* clNextOuter}, ${7:char* outerScript})'
  'TclEvalObjEx':
    'prefix': 'TclEvalObjEx'
    'body': 'TclEvalObjEx(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int flags}, ${4:CmdFrame* invoker}, ${5:int word})'
  'TclEvalObjvInternal':
    'prefix': 'TclEvalObjvInternal'
    'body': 'TclEvalObjvInternal(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:char* command}, ${5:int length}, ${6:int flags})'
  'TclExecuteByteCode':
    'prefix': 'TclExecuteByteCode'
    'body': 'TclExecuteByteCode(${1:Tcl_Interp* interp}, ${2:ByteCode* codePtr})'
  'TclExpandCodeArray':
    'prefix': 'TclExpandCodeArray'
    'body': 'TclExpandCodeArray(${1:void* envPtr})'
  'TclExpandJumpFixupArray':
    'prefix': 'TclExpandJumpFixupArray'
    'body': 'TclExpandJumpFixupArray(${1:JumpFixupArray* fixupArrayPtr})'
  'TclExprFloatError':
    'prefix': 'TclExprFloatError'
    'body': 'TclExprFloatError(${1:Tcl_Interp* interp}, ${2:double value})'
  'TclFSFileAttrIndex':
    'prefix': 'TclFSFileAttrIndex'
    'body': 'TclFSFileAttrIndex(${1:Tcl_Obj* pathPtr}, ${2:char* attributeName}, ${3:int* indexPtr})'
  'TclFSUnloadTempFile':
    'prefix': 'TclFSUnloadTempFile'
    'body': 'TclFSUnloadTempFile(${1:Tcl_LoadHandle loadHandle})'
  'TclFileAttrsCmd':
    'prefix': 'TclFileAttrsCmd'
    'body': 'TclFileAttrsCmd(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'TclFileCopyCmd':
    'prefix': 'TclFileCopyCmd'
    'body': 'TclFileCopyCmd(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'TclFileDeleteCmd':
    'prefix': 'TclFileDeleteCmd'
    'body': 'TclFileDeleteCmd(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'TclFileMakeDirsCmd':
    'prefix': 'TclFileMakeDirsCmd'
    'body': 'TclFileMakeDirsCmd(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'TclFileRenameCmd':
    'prefix': 'TclFileRenameCmd'
    'body': 'TclFileRenameCmd(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'TclFinalizeAllocSubsystem':
    'prefix': 'TclFinalizeAllocSubsystem'
    'body': 'TclFinalizeAllocSubsystem()'
  'TclFinalizeAsync':
    'prefix': 'TclFinalizeAsync'
    'body': 'TclFinalizeAsync()'
  'TclFinalizeAuxDataTypeTable':
    'prefix': 'TclFinalizeAuxDataTypeTable'
    'body': 'TclFinalizeAuxDataTypeTable()'
  'TclFinalizeDoubleConversion':
    'prefix': 'TclFinalizeDoubleConversion'
    'body': 'TclFinalizeDoubleConversion()'
  'TclFinalizeEncodingSubsystem':
    'prefix': 'TclFinalizeEncodingSubsystem'
    'body': 'TclFinalizeEncodingSubsystem()'
  'TclFinalizeEnvironment':
    'prefix': 'TclFinalizeEnvironment'
    'body': 'TclFinalizeEnvironment()'
  'TclFinalizeExecution':
    'prefix': 'TclFinalizeExecution'
    'body': 'TclFinalizeExecution()'
  'TclFinalizeFilesystem':
    'prefix': 'TclFinalizeFilesystem'
    'body': 'TclFinalizeFilesystem()'
  'TclFinalizeIOSubsystem':
    'prefix': 'TclFinalizeIOSubsystem'
    'body': 'TclFinalizeIOSubsystem()'
  'TclFinalizeLoad':
    'prefix': 'TclFinalizeLoad'
    'body': 'TclFinalizeLoad()'
  'TclFinalizeLock':
    'prefix': 'TclFinalizeLock'
    'body': 'TclFinalizeLock()'
  'TclFinalizeMemorySubsystem':
    'prefix': 'TclFinalizeMemorySubsystem'
    'body': 'TclFinalizeMemorySubsystem()'
  'TclFinalizeNotifier':
    'prefix': 'TclFinalizeNotifier'
    'body': 'TclFinalizeNotifier()'
  'TclFinalizeObjects':
    'prefix': 'TclFinalizeObjects'
    'body': 'TclFinalizeObjects()'
  'TclFinalizePreserve':
    'prefix': 'TclFinalizePreserve'
    'body': 'TclFinalizePreserve()'
  'TclFinalizeSynchronization':
    'prefix': 'TclFinalizeSynchronization'
    'body': 'TclFinalizeSynchronization()'
  'TclFinalizeThreadAlloc':
    'prefix': 'TclFinalizeThreadAlloc'
    'body': 'TclFinalizeThreadAlloc()'
  'TclFinalizeThreadData':
    'prefix': 'TclFinalizeThreadData'
    'body': 'TclFinalizeThreadData()'
  'TclFinalizeThreadObjects':
    'prefix': 'TclFinalizeThreadObjects'
    'body': 'TclFinalizeThreadObjects()'
  'TclFinalizeThreadStorage':
    'prefix': 'TclFinalizeThreadStorage'
    'body': 'TclFinalizeThreadStorage()'
  'TclFindCompiledLocal':
    'prefix': 'TclFindCompiledLocal'
    'body': 'TclFindCompiledLocal(${1:char* name}, ${2:int nameChars}, ${3:int create}, ${4:Proc* procPtr})'
  'TclFindElement':
    'prefix': 'TclFindElement'
    'body': 'TclFindElement(${1:Tcl_Interp* interp}, ${2:char* listStr}, ${3:int listLength}, ${4:char** elementPtr}, ${5:char** nextPtr}, ${6:int* sizePtr}, ${7:int* bracePtr})'
  'TclFindProc':
    'prefix': 'TclFindProc'
    'body': 'TclFindProc(${1:Interp* iPtr}, ${2:char* procName})'
  'TclFixupForwardJump':
    'prefix': 'TclFixupForwardJump'
    'body': 'TclFixupForwardJump(${1:CompileEnv* envPtr}, ${2:JumpFixup* jumpFixupPtr}, ${3:int jumpDist}, ${4:int distThreshold})'
  'TclFloor':
    'prefix': 'TclFloor'
    'body': 'TclFloor(${1:mp_int* a})'
  'TclFormatNaN':
    'prefix': 'TclFormatNaN'
    'body': 'TclFormatNaN(${1:double value}, ${2:char* buffer})'
  'TclFreeCompileEnv':
    'prefix': 'TclFreeCompileEnv'
    'body': 'TclFreeCompileEnv(${1:CompileEnv* envPtr})'
  'TclFreeJumpFixupArray':
    'prefix': 'TclFreeJumpFixupArray'
    'body': 'TclFreeJumpFixupArray(${1:JumpFixupArray* fixupArrayPtr})'
  'TclFreeLocalCache':
    'prefix': 'TclFreeLocalCache'
    'body': 'TclFreeLocalCache(${1:Tcl_Interp* interp}, ${2:LocalCache* localCachePtr})'
  'TclFreeObj':
    'prefix': 'TclFreeObj'
    'body': 'TclFreeObj(${1:Tcl_Obj* objPtr})'
  'TclFreeObjEntry':
    'prefix': 'TclFreeObjEntry'
    'body': 'TclFreeObjEntry(${1:Tcl_HashEntry* hPtr})'
  'TclFreePackageInfo':
    'prefix': 'TclFreePackageInfo'
    'body': 'TclFreePackageInfo(${1:Interp* iPtr})'
  'TclGeqOpCmd':
    'prefix': 'TclGeqOpCmd'
    'body': 'TclGeqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclGetAndDetachPids':
    'prefix': 'TclGetAndDetachPids'
    'body': 'TclGetAndDetachPids(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'TclGetAsyncReadyPtr':
    'prefix': 'TclGetAsyncReadyPtr'
    'body': 'TclGetAsyncReadyPtr()'
  'TclGetAuxDataType':
    'prefix': 'TclGetAuxDataType'
    'body': 'TclGetAuxDataType(${1:char* typeName})'
  'TclGetBgErrorHandler':
    'prefix': 'TclGetBgErrorHandler'
    'body': 'TclGetBgErrorHandler(${1:Tcl_Interp* interp})'
  'TclGetChannelFromObj':
    'prefix': 'TclGetChannelFromObj'
    'body': 'TclGetChannelFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_Channel* chanPtr}, ${4:int* modePtr}, ${5:int flags})'
  'TclGetEnv':
    'prefix': 'TclGetEnv'
    'body': 'TclGetEnv(${1:char* name}, ${2:Tcl_DString* valuePtr})'
  'TclGetExceptionRangeForPc':
    'prefix': 'TclGetExceptionRangeForPc'
    'body': 'TclGetExceptionRangeForPc(${1:unsigned char* pc}, ${2:int catchOnly}, ${3:ByteCode* codePtr})'
  'TclGetExtension':
    'prefix': 'TclGetExtension'
    'body': 'TclGetExtension(${1:char* name})'
  'TclGetFrame':
    'prefix': 'TclGetFrame'
    'body': 'TclGetFrame(${1:Tcl_Interp* interp}, ${2:char* str}, ${3:CallFrame** framePtrPtr})'
  'TclGetInstructionTable':
    'prefix': 'TclGetInstructionTable'
    'body': 'TclGetInstructionTable()'
  'TclGetIntForIndex':
    'prefix': 'TclGetIntForIndex'
    'body': 'TclGetIntForIndex(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int endValue}, ${4:int* indexPtr})'
  'TclGetLibraryPath':
    'prefix': 'TclGetLibraryPath'
    'body': 'TclGetLibraryPath()'
  'TclGetLoadedPackages':
    'prefix': 'TclGetLoadedPackages'
    'body': 'TclGetLoadedPackages(${1:Tcl_Interp* interp}, ${2:char* targetName})'
  'TclGetLong':
    'prefix': 'TclGetLong'
    'body': 'TclGetLong(${1:Tcl_Interp* interp}, ${2:char* str}, ${3:long* longPtr})'
  'TclGetNamespaceForQualName':
    'prefix': 'TclGetNamespaceForQualName'
    'body': 'TclGetNamespaceForQualName(${1:Tcl_Interp* interp}, ${2:char* qualName}, ${3:Namespace* cxtNsPtr}, ${4:int flags}, ${5:Namespace** nsPtrPtr}, ${6:Namespace** altNsPtrPtr}, ${7:Namespace** actualCxtPtrPtr}, ${8:char** simpleNamePtr})'
  'TclGetNamespaceFromObj':
    'prefix': 'TclGetNamespaceFromObj'
    'body': 'TclGetNamespaceFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_Namespace** nsPtrPtr})'
  'TclGetNumberFromObj':
    'prefix': 'TclGetNumberFromObj'
    'body': 'TclGetNumberFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:ClientData* clientDataPtr}, ${4:int* typePtr})'
  'TclGetObjInterpProc':
    'prefix': 'TclGetObjInterpProc'
    'body': 'TclGetObjInterpProc()'
  'TclGetObjNameOfExecutable':
    'prefix': 'TclGetObjNameOfExecutable'
    'body': 'TclGetObjNameOfExecutable()'
  'TclGetOpenMode':
    'prefix': 'TclGetOpenMode'
    'body': 'TclGetOpenMode(${1:Tcl_Interp* interp}, ${2:char* str}, ${3:int* seekFlagPtr})'
  'TclGetOpenModeEx':
    'prefix': 'TclGetOpenModeEx'
    'body': 'TclGetOpenModeEx(${1:Tcl_Interp* interp}, ${2:char* modeString}, ${3:int* seekFlagPtr}, ${4:int* binaryPtr})'
  'TclGetOriginalCommand':
    'prefix': 'TclGetOriginalCommand'
    'body': 'TclGetOriginalCommand(${1:Tcl_Command command})'
  'TclGetPlatform':
    'prefix': 'TclGetPlatform'
    'body': 'TclGetPlatform()'
  'TclGetProcessGlobalValue':
    'prefix': 'TclGetProcessGlobalValue'
    'body': 'TclGetProcessGlobalValue(${1:ProcessGlobalValue* pgvPtr})'
  'TclGetSrcInfoForCmd':
    'prefix': 'TclGetSrcInfoForCmd'
    'body': 'TclGetSrcInfoForCmd(${1:Interp* iPtr}, ${2:int* lenPtr})'
  'TclGetSrcInfoForPc':
    'prefix': 'TclGetSrcInfoForPc'
    'body': 'TclGetSrcInfoForPc(${1:CmdFrame* contextPtr})'
  'TclGetStartupScriptFileName':
    'prefix': 'TclGetStartupScriptFileName'
    'body': 'TclGetStartupScriptFileName()'
  'TclGetStartupScriptPath':
    'prefix': 'TclGetStartupScriptPath'
    'body': 'TclGetStartupScriptPath()'
  'TclGlob':
    'prefix': 'TclGlob'
    'body': 'TclGlob(${1:Tcl_Interp* interp}, ${2:char* pattern}, ${3:Tcl_Obj* unquotedPrefix}, ${4:int globFlags}, ${5:Tcl_GlobTypeData* types})'
  'TclGreaterOpCmd':
    'prefix': 'TclGreaterOpCmd'
    'body': 'TclGreaterOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclGuessPackageName':
    'prefix': 'TclGuessPackageName'
    'body': 'TclGuessPackageName(${1:char* fileName}, ${2:Tcl_DString* bufPtr})'
  'TclHandleCreate':
    'prefix': 'TclHandleCreate'
    'body': 'TclHandleCreate(${1:void* ptr})'
  'TclHandleFree':
    'prefix': 'TclHandleFree'
    'body': 'TclHandleFree(${1:TclHandle handle})'
  'TclHandlePreserve':
    'prefix': 'TclHandlePreserve'
    'body': 'TclHandlePreserve(${1:TclHandle handle})'
  'TclHandleRelease':
    'prefix': 'TclHandleRelease'
    'body': 'TclHandleRelease(${1:TclHandle handle})'
  'TclHashObjKey':
    'prefix': 'TclHashObjKey'
    'body': 'TclHashObjKey(${1:Tcl_HashTable* tablePtr}, ${2:void* keyPtr})'
  'TclHideLiteral':
    'prefix': 'TclHideLiteral'
    'body': 'TclHideLiteral(${1:Tcl_Interp* interp}, ${2:struct CompileEnv* envPtr}, ${3:int index})'
  'TclHideUnsafeCommands':
    'prefix': 'TclHideUnsafeCommands'
    'body': 'TclHideUnsafeCommands(${1:Tcl_Interp* interp})'
  'TclInExit':
    'prefix': 'TclInExit'
    'body': 'TclInExit()'
  'TclInOpCmd':
    'prefix': 'TclInOpCmd'
    'body': 'TclInOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInThreadExit':
    'prefix': 'TclInThreadExit'
    'body': 'TclInThreadExit()'
  'TclIncrObj':
    'prefix': 'TclIncrObj'
    'body': 'TclIncrObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* valuePtr}, ${3:Tcl_Obj* incrPtr})'
  'TclIncrObjVar2':
    'prefix': 'TclIncrObjVar2'
    'body': 'TclIncrObjVar2(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:Tcl_Obj* incrPtr}, ${5:int flags})'
  'TclInfoExistsCmd':
    'prefix': 'TclInfoExistsCmd'
    'body': 'TclInfoExistsCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInfoFrame':
    'prefix': 'TclInfoFrame'
    'body': 'TclInfoFrame(${1:Tcl_Interp* interp}, ${2:CmdFrame* framePtr})'
  'TclInfoGlobalsCmd':
    'prefix': 'TclInfoGlobalsCmd'
    'body': 'TclInfoGlobalsCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInfoLocalsCmd':
    'prefix': 'TclInfoLocalsCmd'
    'body': 'TclInfoLocalsCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInfoVarsCmd':
    'prefix': 'TclInfoVarsCmd'
    'body': 'TclInfoVarsCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInitAlloc':
    'prefix': 'TclInitAlloc'
    'body': 'TclInitAlloc()'
  'TclInitAuxDataTypeTable':
    'prefix': 'TclInitAuxDataTypeTable'
    'body': 'TclInitAuxDataTypeTable()'
  'TclInitByteCodeObj':
    'prefix': 'TclInitByteCodeObj'
    'body': 'TclInitByteCodeObj(${1:Tcl_Obj* objPtr}, ${2:CompileEnv* envPtr})'
  'TclInitChanCmd':
    'prefix': 'TclInitChanCmd'
    'body': 'TclInitChanCmd(${1:Tcl_Interp* interp})'
  'TclInitCompilation':
    'prefix': 'TclInitCompilation'
    'body': 'TclInitCompilation()'
  'TclInitCompileEnv':
    'prefix': 'TclInitCompileEnv'
    'body': 'TclInitCompileEnv(${1:Tcl_Interp* interp}, ${2:CompileEnv* envPtr}, ${3:char* string}, ${4:int numBytes}, ${5:CmdFrame* invoker}, ${6:int word})'
  'TclInitCompiledLocals':
    'prefix': 'TclInitCompiledLocals'
    'body': 'TclInitCompiledLocals(${1:Tcl_Interp* interp}, ${2:CallFrame* framePtr}, ${3:Namespace* nsPtr})'
  'TclInitDbCkalloc':
    'prefix': 'TclInitDbCkalloc'
    'body': 'TclInitDbCkalloc()'
  'TclInitDictCmd':
    'prefix': 'TclInitDictCmd'
    'body': 'TclInitDictCmd(${1:Tcl_Interp* interp})'
  'TclInitDoubleConversion':
    'prefix': 'TclInitDoubleConversion'
    'body': 'TclInitDoubleConversion()'
  'TclInitEmbeddedConfigurationInformation':
    'prefix': 'TclInitEmbeddedConfigurationInformation'
    'body': 'TclInitEmbeddedConfigurationInformation(${1:Tcl_Interp* interp})'
  'TclInitEncodingSubsystem':
    'prefix': 'TclInitEncodingSubsystem'
    'body': 'TclInitEncodingSubsystem()'
  'TclInitIOSubsystem':
    'prefix': 'TclInitIOSubsystem'
    'body': 'TclInitIOSubsystem()'
  'TclInitInfoCmd':
    'prefix': 'TclInitInfoCmd'
    'body': 'TclInitInfoCmd(${1:Tcl_Interp* interp})'
  'TclInitJumpFixupArray':
    'prefix': 'TclInitJumpFixupArray'
    'body': 'TclInitJumpFixupArray(${1:JumpFixupArray* fixupArrayPtr})'
  'TclInitLimitSupport':
    'prefix': 'TclInitLimitSupport'
    'body': 'TclInitLimitSupport(${1:Tcl_Interp* interp})'
  'TclInitLiteralTable':
    'prefix': 'TclInitLiteralTable'
    'body': 'TclInitLiteralTable(${1:LiteralTable* tablePtr})'
  'TclInitNamespaceSubsystem':
    'prefix': 'TclInitNamespaceSubsystem'
    'body': 'TclInitNamespaceSubsystem()'
  'TclInitNotifier':
    'prefix': 'TclInitNotifier'
    'body': 'TclInitNotifier()'
  'TclInitObjSubsystem':
    'prefix': 'TclInitObjSubsystem'
    'body': 'TclInitObjSubsystem()'
  'TclInitStringCmd':
    'prefix': 'TclInitStringCmd'
    'body': 'TclInitStringCmd(${1:Tcl_Interp* interp})'
  'TclInitSubsystems':
    'prefix': 'TclInitSubsystems'
    'body': 'TclInitSubsystems()'
  'TclInitThreadStorage':
    'prefix': 'TclInitThreadStorage'
    'body': 'TclInitThreadStorage()'
  'TclInitVarHashTable':
    'prefix': 'TclInitVarHashTable'
    'body': 'TclInitVarHashTable(${1:TclVarHashTable* tablePtr}, ${2:Namespace* nsPtr})'
  'TclInterpInit':
    'prefix': 'TclInterpInit'
    'body': 'TclInterpInit(${1:Tcl_Interp* interp})'
  'TclInterpReady':
    'prefix': 'TclInterpReady'
    'body': 'TclInterpReady(${1:Tcl_Interp* interp})'
  'TclInvalidateNsPath':
    'prefix': 'TclInvalidateNsPath'
    'body': 'TclInvalidateNsPath(${1:Namespace* nsPtr})'
  'TclInvertOpCmd':
    'prefix': 'TclInvertOpCmd'
    'body': 'TclInvertOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclInvokeObjectCommand':
    'prefix': 'TclInvokeObjectCommand'
    'body': 'TclInvokeObjectCommand(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int argc}, ${4:char** argv})'
  'TclInvokeStringCommand':
    'prefix': 'TclInvokeStringCommand'
    'body': 'TclInvokeStringCommand(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclIsLocalScalar':
    'prefix': 'TclIsLocalScalar'
    'body': 'TclIsLocalScalar(${1:char* src}, ${2:int len})'
  'TclIsProc':
    'prefix': 'TclIsProc'
    'body': 'TclIsProc(${1:Command* cmdPtr})'
  'TclJoinThread':
    'prefix': 'TclJoinThread'
    'body': 'TclJoinThread(${1:Tcl_ThreadId id}, ${2:int* result})'
  'TclLeqOpCmd':
    'prefix': 'TclLeqOpCmd'
    'body': 'TclLeqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclLessOpCmd':
    'prefix': 'TclLessOpCmd'
    'body': 'TclLessOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclLimitRemoveAllHandlers':
    'prefix': 'TclLimitRemoveAllHandlers'
    'body': 'TclLimitRemoveAllHandlers(${1:Tcl_Interp* interp})'
  'TclLindexFlat':
    'prefix': 'TclLindexFlat'
    'body': 'TclLindexFlat(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int indexCount}, ${4:Tcl_Obj ** indexArray})'
  'TclLindexList':
    'prefix': 'TclLindexList'
    'body': 'TclLindexList(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:Tcl_Obj* argPtr})'
  'TclListLines':
    'prefix': 'TclListLines'
    'body': 'TclListLines(${1:Tcl_Obj* listObj}, ${2:int line}, ${3:int n}, ${4:int* lines}, ${5:Tcl_Obj ** elems})'
  'TclListObjCopy':
    'prefix': 'TclListObjCopy'
    'body': 'TclListObjCopy(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr})'
  'TclListObjSetElement':
    'prefix': 'TclListObjSetElement'
    'body': 'TclListObjSetElement(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int index}, ${4:Tcl_Obj* valuePtr})'
  'TclLoadFile':
    'prefix': 'TclLoadFile'
    'body': 'TclLoadFile(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:int symc}, ${4:char** symbols}, ${5:Tcl_PackageInitProc*** procPtrs}, ${6:Tcl_LoadHandle* handlePtr}, ${7:ClientData* clientDataPtr}, ${8:Tcl_FSUnloadFileProc** unloadProcPtr})'
  'TclLookupArrayElement':
    'prefix': 'TclLookupArrayElement'
    'body': 'TclLookupArrayElement(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* arrayNamePtr}, ${3:Tcl_Obj* elNamePtr}, ${4:int flags}, ${5:char* msg}, ${6:int createPart1}, ${7:int createPart2}, ${8:Var* arrayPtr}, ${9:int index})'
  'TclLookupLiteralEntry':
    'prefix': 'TclLookupLiteralEntry'
    'body': 'TclLookupLiteralEntry(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'TclLookupVar':
    'prefix': 'TclLookupVar'
    'body': 'TclLookupVar(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags}, ${5:char* msg}, ${6:int createPart1}, ${7:int createPart2}, ${8:Var** arrayPtrPtr})'
  'TclLsetFlat':
    'prefix': 'TclLsetFlat'
    'body': 'TclLsetFlat(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int indexCount}, ${4:Tcl_Obj ** indexArray}, ${5:Tcl_Obj* valuePtr})'
  'TclLsetList':
    'prefix': 'TclLsetList'
    'body': 'TclLsetList(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:Tcl_Obj* indexPtr}, ${4:Tcl_Obj* valuePtr})'
  'TclLshiftOpCmd':
    'prefix': 'TclLshiftOpCmd'
    'body': 'TclLshiftOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclMakeEnsemble':
    'prefix': 'TclMakeEnsemble'
    'body': 'TclMakeEnsemble(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:EnsembleImplMap* map})'
  'TclMarkList':
    'prefix': 'TclMarkList'
    'body': 'TclMarkList(${1:Tcl_Interp* interp}, ${2:char* list}, ${3:char* end}, ${4:int* argcPtr}, ${5:int** argszPtr}, ${6:char*** argvPtr})'
  'TclMergeReturnOptions':
    'prefix': 'TclMergeReturnOptions'
    'body': 'TclMergeReturnOptions(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:Tcl_Obj** optionsPtrPtr}, ${5:int* codePtr}, ${6:int* levelPtr})'
  'TclMinusOpCmd':
    'prefix': 'TclMinusOpCmd'
    'body': 'TclMinusOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclModOpCmd':
    'prefix': 'TclModOpCmd'
    'body': 'TclModOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclMulOpCmd':
    'prefix': 'TclMulOpCmd'
    'body': 'TclMulOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclNativeDupInternalRep':
    'prefix': 'TclNativeDupInternalRep'
    'body': 'TclNativeDupInternalRep(${1:ClientData })'
  'TclNeedSpace':
    'prefix': 'TclNeedSpace'
    'body': 'TclNeedSpace(${1:char* start}, ${2:char* end})'
  'TclNeqOpCmd':
    'prefix': 'TclNeqOpCmd'
    'body': 'TclNeqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclNewFSPathObj':
    'prefix': 'TclNewFSPathObj'
    'body': 'TclNewFSPathObj(${1:Tcl_Obj* dirPtr}, ${2:char* addStrRep}, ${3:int len})'
  'TclNewProcBodyObj':
    'prefix': 'TclNewProcBodyObj'
    'body': 'TclNewProcBodyObj(${1:Proc* procPtr})'
  'TclNiOpCmd':
    'prefix': 'TclNiOpCmd'
    'body': 'TclNiOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclNoIdentOpCmd':
    'prefix': 'TclNoIdentOpCmd'
    'body': 'TclNoIdentOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclNokia770Doubles':
    'prefix': 'TclNokia770Doubles'
    'body': 'TclNokia770Doubles()'
  'TclNotOpCmd':
    'prefix': 'TclNotOpCmd'
    'body': 'TclNotOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclObjBeingDeleted':
    'prefix': 'TclObjBeingDeleted'
    'body': 'TclObjBeingDeleted(${1:Tcl_Obj* objPtr})'
  'TclObjCallVarTraces':
    'prefix': 'TclObjCallVarTraces'
    'body': 'TclObjCallVarTraces(${1:Interp* iPtr}, ${2:Var* arrayPtr}, ${3:Var* varPtr}, ${4:Tcl_Obj* part1Ptr}, ${5:Tcl_Obj* part2Ptr}, ${6:int flags}, ${7:int leaveErrMsg}, ${8:int index})'
  'TclObjCommandComplete':
    'prefix': 'TclObjCommandComplete'
    'body': 'TclObjCommandComplete(${1:Tcl_Obj* cmdPtr})'
  'TclObjGetFrame':
    'prefix': 'TclObjGetFrame'
    'body': 'TclObjGetFrame(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:CallFrame** framePtrPtr})'
  'TclObjInterpProc':
    'prefix': 'TclObjInterpProc'
    'body': 'TclObjInterpProc(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclObjInterpProcCore':
    'prefix': 'TclObjInterpProcCore'
    'body': 'TclObjInterpProcCore(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* procNameObj}, ${3:int skip}, ${4:ProcErrorProc errorProc})'
  'TclObjInvoke':
    'prefix': 'TclObjInvoke'
    'body': 'TclObjInvoke(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:int flags})'
  'TclObjInvokeNamespace':
    'prefix': 'TclObjInvokeNamespace'
    'body': 'TclObjInvokeNamespace(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:Tcl_Namespace* nsPtr}, ${5:int flags})'
  'TclObjLookupVar':
    'prefix': 'TclObjLookupVar'
    'body': 'TclObjLookupVar(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:char* part2}, ${4:int flags}, ${5:char* msg}, ${6:int createPart1}, ${7:int createPart2}, ${8:Var** arrayPtrPtr})'
  'TclObjLookupVarEx':
    'prefix': 'TclObjLookupVarEx'
    'body': 'TclObjLookupVarEx(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:int flags}, ${5:char* msg}, ${6:int createPart1}, ${7:int createPart2}, ${8:Var** arrayPtrPtr})'
  'TclObjUnsetVar2':
    'prefix': 'TclObjUnsetVar2'
    'body': 'TclObjUnsetVar2(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:int flags})'
  'TclObjVarErrMsg':
    'prefix': 'TclObjVarErrMsg'
    'body': 'TclObjVarErrMsg(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:char* operation}, ${5:char* reason}, ${6:int index})'
  'TclOrOpCmd':
    'prefix': 'TclOrOpCmd'
    'body': 'TclOrOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclParseAllWhiteSpace':
    'prefix': 'TclParseAllWhiteSpace'
    'body': 'TclParseAllWhiteSpace(${1:char* src}, ${2:int numBytes})'
  'TclParseBackslash':
    'prefix': 'TclParseBackslash'
    'body': 'TclParseBackslash(${1:char* src}, ${2:int numBytes}, ${3:int* readPtr}, ${4:char* dst})'
  'TclParseHex':
    'prefix': 'TclParseHex'
    'body': 'TclParseHex(${1:char* src}, ${2:int numBytes}, ${3:Tcl_UniChar* resultPtr})'
  'TclParseInit':
    'prefix': 'TclParseInit'
    'body': 'TclParseInit(${1:Tcl_Interp* interp}, ${2:char* string}, ${3:int numBytes}, ${4:Tcl_Parse* parsePtr})'
  'TclParseNumber':
    'prefix': 'TclParseNumber'
    'body': 'TclParseNumber(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:char* expected}, ${4:char* bytes}, ${5:int numBytes}, ${6:char** endPtrPtr}, ${7:int flags})'
  'TclPathPart':
    'prefix': 'TclPathPart'
    'body': 'TclPathPart(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:Tcl_PathPart portion})'
  'TclPopStackFrame':
    'prefix': 'TclPopStackFrame'
    'body': 'TclPopStackFrame(${1:Tcl_Interp* interp})'
  'TclPowOpCmd':
    'prefix': 'TclPowOpCmd'
    'body': 'TclPowOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclPrecTraceProc':
    'prefix': 'TclPrecTraceProc'
    'body': 'TclPrecTraceProc(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:char* name1}, ${4:char* name2}, ${5:int flags})'
  'TclPreventAliasLoop':
    'prefix': 'TclPreventAliasLoop'
    'body': 'TclPreventAliasLoop(${1:Tcl_Interp* interp}, ${2:Tcl_Interp* cmdInterp}, ${3:Tcl_Command cmd})'
  'TclPrintInstruction':
    'prefix': 'TclPrintInstruction'
    'body': 'TclPrintInstruction(${1:ByteCode* codePtr}, ${2:unsigned char* pc})'
  'TclPrintObject':
    'prefix': 'TclPrintObject'
    'body': 'TclPrintObject(${1:FILE* outFile}, ${2:Tcl_Obj* objPtr}, ${3:int maxChars})'
  'TclPrintSource':
    'prefix': 'TclPrintSource'
    'body': 'TclPrintSource(${1:FILE* outFile}, ${2:char* string}, ${3:int maxChars})'
  'TclProcCleanupProc':
    'prefix': 'TclProcCleanupProc'
    'body': 'TclProcCleanupProc(${1:Proc* procPtr})'
  'TclProcCompileProc':
    'prefix': 'TclProcCompileProc'
    'body': 'TclProcCompileProc(${1:Tcl_Interp* interp}, ${2:Proc* procPtr}, ${3:Tcl_Obj* bodyPtr}, ${4:Namespace* nsPtr}, ${5:char* description}, ${6:char* procName})'
  'TclProcDeleteProc':
    'prefix': 'TclProcDeleteProc'
    'body': 'TclProcDeleteProc(${1:ClientData clientData})'
  'TclProcessReturn':
    'prefix': 'TclProcessReturn'
    'body': 'TclProcessReturn(${1:Tcl_Interp* interp}, ${2:int code}, ${3:int level}, ${4:Tcl_Obj* returnOpts})'
  'TclPtrGetVar':
    'prefix': 'TclPtrGetVar'
    'body': 'TclPtrGetVar(${1:Tcl_Interp* interp}, ${2:Var* varPtr}, ${3:Var* arrayPtr}, ${4:Tcl_Obj* part1Ptr}, ${5:Tcl_Obj* part2Ptr}, ${6:int flags}, ${7:int index})'
  'TclPtrIncrObjVar':
    'prefix': 'TclPtrIncrObjVar'
    'body': 'TclPtrIncrObjVar(${1:Tcl_Interp* interp}, ${2:Var* varPtr}, ${3:Var* arrayPtr}, ${4:Tcl_Obj* part1Ptr}, ${5:Tcl_Obj* part2Ptr}, ${6:Tcl_Obj* incrPtr}, ${7:int flags}, ${8:int index})'
  'TclPtrMakeUpvar':
    'prefix': 'TclPtrMakeUpvar'
    'body': 'TclPtrMakeUpvar(${1:Tcl_Interp* interp}, ${2:Var* otherP1Ptr}, ${3:char* myName}, ${4:int myFlags}, ${5:int index})'
  'TclPtrObjMakeUpvar':
    'prefix': 'TclPtrObjMakeUpvar'
    'body': 'TclPtrObjMakeUpvar(${1:Tcl_Interp* interp}, ${2:Var* otherPtr}, ${3:Tcl_Obj* myNamePtr}, ${4:int myFlags}, ${5:int index})'
  'TclPtrSetVar':
    'prefix': 'TclPtrSetVar'
    'body': 'TclPtrSetVar(${1:Tcl_Interp* interp}, ${2:Var* varPtr}, ${3:Var* arrayPtr}, ${4:Tcl_Obj* part1Ptr}, ${5:Tcl_Obj* part2Ptr}, ${6:Tcl_Obj* newValuePtr}, ${7:int flags}, ${8:int index})'
  'TclPushStackFrame':
    'prefix': 'TclPushStackFrame'
    'body': 'TclPushStackFrame(${1:Tcl_Interp* interp}, ${2:Tcl_CallFrame** framePtrPtr}, ${3:Tcl_Namespace* namespacePtr}, ${4:int isProcCallFrame})'
  'TclReToGlob':
    'prefix': 'TclReToGlob'
    'body': 'TclReToGlob(${1:Tcl_Interp* interp}, ${2:char* reStr}, ${3:int reStrLen}, ${4:Tcl_DString* dsPtr}, ${5:int* flagsPtr})'
  'TclRegAbout':
    'prefix': 'TclRegAbout'
    'body': 'TclRegAbout(${1:Tcl_Interp* interp}, ${2:Tcl_RegExp re})'
  'TclRegError':
    'prefix': 'TclRegError'
    'body': 'TclRegError(${1:Tcl_Interp* interp}, ${2:char* msg}, ${3:int status})'
  'TclRegExpRangeUniChar':
    'prefix': 'TclRegExpRangeUniChar'
    'body': 'TclRegExpRangeUniChar(${1:Tcl_RegExp re}, ${2:int index}, ${3:int* startPtr}, ${4:int* endPtr})'
  'TclRegisterAuxDataType':
    'prefix': 'TclRegisterAuxDataType'
    'body': 'TclRegisterAuxDataType(${1:AuxDataType* typePtr})'
  'TclRegisterLiteral':
    'prefix': 'TclRegisterLiteral'
    'body': 'TclRegisterLiteral(${1:CompileEnv* envPtr}, ${2:char* bytes}, ${3:int length}, ${4:int flags})'
  'TclReleaseLiteral':
    'prefix': 'TclReleaseLiteral'
    'body': 'TclReleaseLiteral(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'TclRememberCondition':
    'prefix': 'TclRememberCondition'
    'body': 'TclRememberCondition(${1:Tcl_Condition* mutex})'
  'TclRememberJoinableThread':
    'prefix': 'TclRememberJoinableThread'
    'body': 'TclRememberJoinableThread(${1:Tcl_ThreadId id})'
  'TclRememberMutex':
    'prefix': 'TclRememberMutex'
    'body': 'TclRememberMutex(${1:Tcl_Mutex* mutex})'
  'TclRemoveScriptLimitCallbacks':
    'prefix': 'TclRemoveScriptLimitCallbacks'
    'body': 'TclRemoveScriptLimitCallbacks(${1:Tcl_Interp* interp})'
  'TclRenameCommand':
    'prefix': 'TclRenameCommand'
    'body': 'TclRenameCommand(${1:Tcl_Interp* interp}, ${2:char* oldName}, ${3:char* newName})'
  'TclResetFilesystem':
    'prefix': 'TclResetFilesystem'
    'body': 'TclResetFilesystem()'
  'TclResetShadowedCmdRefs':
    'prefix': 'TclResetShadowedCmdRefs'
    'body': 'TclResetShadowedCmdRefs(${1:Tcl_Interp* interp}, ${2:Command* newCmdPtr})'
  'TclRshiftOpCmd':
    'prefix': 'TclRshiftOpCmd'
    'body': 'TclRshiftOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclServiceIdle':
    'prefix': 'TclServiceIdle'
    'body': 'TclServiceIdle()'
  'TclSetBgErrorHandler':
    'prefix': 'TclSetBgErrorHandler'
    'body': 'TclSetBgErrorHandler(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* cmdPrefix})'
  'TclSetBignumIntRep':
    'prefix': 'TclSetBignumIntRep'
    'body': 'TclSetBignumIntRep(${1:Tcl_Obj* objPtr}, ${2:mp_int* bignumValue})'
  'TclSetByteCodeFromAny':
    'prefix': 'TclSetByteCodeFromAny'
    'body': 'TclSetByteCodeFromAny(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:CompileHookProc* hookProc}, ${4:ClientData clientData})'
  'TclSetCmdNameObj':
    'prefix': 'TclSetCmdNameObj'
    'body': 'TclSetCmdNameObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Command* cmdPtr})'
  'TclSetLibraryPath':
    'prefix': 'TclSetLibraryPath'
    'body': 'TclSetLibraryPath(${1:Tcl_Obj* pathPtr})'
  'TclSetNsPath':
    'prefix': 'TclSetNsPath'
    'body': 'TclSetNsPath(${1:Namespace* nsPtr}, ${2:int pathLength}, ${3:Tcl_Namespace** pathAry})'
  'TclSetObjNameOfExecutable':
    'prefix': 'TclSetObjNameOfExecutable'
    'body': 'TclSetObjNameOfExecutable(${1:Tcl_Obj* name}, ${2:Tcl_Encoding encoding})'
  'TclSetPreInitScript':
    'prefix': 'TclSetPreInitScript'
    'body': 'TclSetPreInitScript(${1:char* string})'
  'TclSetProcessGlobalValue':
    'prefix': 'TclSetProcessGlobalValue'
    'body': 'TclSetProcessGlobalValue(${1:ProcessGlobalValue* pgvPtr}, ${2:Tcl_Obj* newValue}, ${3:Tcl_Encoding encoding})'
  'TclSetStartupScriptFileName':
    'prefix': 'TclSetStartupScriptFileName'
    'body': 'TclSetStartupScriptFileName(${1:char* filename})'
  'TclSetStartupScriptPath':
    'prefix': 'TclSetStartupScriptPath'
    'body': 'TclSetStartupScriptPath(${1:Tcl_Obj* pathPtr})'
  'TclSetupEnv':
    'prefix': 'TclSetupEnv'
    'body': 'TclSetupEnv(${1:Tcl_Interp* interp})'
  'TclSignalExitThread':
    'prefix': 'TclSignalExitThread'
    'body': 'TclSignalExitThread(${1:Tcl_ThreadId id}, ${2:int result})'
  'TclSingleOpCmd':
    'prefix': 'TclSingleOpCmd'
    'body': 'TclSingleOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclSockGetPort':
    'prefix': 'TclSockGetPort'
    'body': 'TclSockGetPort(${1:Tcl_Interp* interp}, ${2:char* str}, ${3:char* proto}, ${4:int* portPtr})'
  'TclSockMinimumBuffers':
    'prefix': 'TclSockMinimumBuffers'
    'body': 'TclSockMinimumBuffers(${1:int sock}, ${2:int size})'
  'TclSortingOpCmd':
    'prefix': 'TclSortingOpCmd'
    'body': 'TclSortingOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclStackAlloc':
    'prefix': 'TclStackAlloc'
    'body': 'TclStackAlloc(${1:Tcl_Interp* interp}, ${2:int numBytes})'
  'TclStackFree':
    'prefix': 'TclStackFree'
    'body': 'TclStackFree(${1:Tcl_Interp* interp}, ${2:void* freePtr})'
  'TclStackRealloc':
    'prefix': 'TclStackRealloc'
    'body': 'TclStackRealloc(${1:Tcl_Interp* interp}, ${2:void* ptr}, ${3:int numBytes})'
  'TclStreqOpCmd':
    'prefix': 'TclStreqOpCmd'
    'body': 'TclStreqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclStringMatch':
    'prefix': 'TclStringMatch'
    'body': 'TclStringMatch(${1:char* str}, ${2:int strLen}, ${3:char* pattern}, ${4:int ptnLen}, ${5:int flags})'
  'TclStringMatchObj':
    'prefix': 'TclStringMatchObj'
    'body': 'TclStringMatchObj(${1:Tcl_Obj* stringObj}, ${2:Tcl_Obj* patternObj}, ${3:int flags})'
  'TclStringObjReverse':
    'prefix': 'TclStringObjReverse'
    'body': 'TclStringObjReverse(${1:Tcl_Obj* objPtr})'
  'TclStrneqOpCmd':
    'prefix': 'TclStrneqOpCmd'
    'body': 'TclStrneqOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclSubstTokens':
    'prefix': 'TclSubstTokens'
    'body': 'TclSubstTokens(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int count}, ${4:int* tokensLeftPtr}, ${5:int line}, ${6:int* clNextOuter}, ${7:char* outerScript})'
  'TclTeardownNamespace':
    'prefix': 'TclTeardownNamespace'
    'body': 'TclTeardownNamespace(${1:Namespace* nsPtr})'
  'TclThreadDataKeyGet':
    'prefix': 'TclThreadDataKeyGet'
    'body': 'TclThreadDataKeyGet(${1:Tcl_ThreadDataKey* keyPtr})'
  'TclThreadDataKeySet':
    'prefix': 'TclThreadDataKeySet'
    'body': 'TclThreadDataKeySet(${1:Tcl_ThreadDataKey* keyPtr}, ${2:void* data})'
  'TclTomMathInitializeStubs':
    'prefix': 'TclTomMathInitializeStubs'
    'body': 'TclTomMathInitializeStubs(${1:Tcl_Interp* interp}, ${2:char* version}, ${3:int epoch}, ${4:int revision})'
  'TclTommath_Init':
    'prefix': 'TclTommath_Init'
    'body': 'TclTommath_Init(${1:Tcl_Interp* interp})'
  'TclTraceDictPath':
    'prefix': 'TclTraceDictPath'
    'body': 'TclTraceDictPath(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* rootPtr}, ${3:int keyc}, ${4:Tcl_Obj ** keyv}, ${5:int flags})'
  'TclTransferResult':
    'prefix': 'TclTransferResult'
    'body': 'TclTransferResult(${1:Tcl_Interp* sourceInterp}, ${2:int result}, ${3:Tcl_Interp* targetInterp})'
  'TclUniCharMatch':
    'prefix': 'TclUniCharMatch'
    'body': 'TclUniCharMatch(${1:Tcl_UniChar* string}, ${2:int strLen}, ${3:Tcl_UniChar* pattern}, ${4:int ptnLen}, ${5:int flags})'
  'TclUnixCopyFile':
    'prefix': 'TclUnixCopyFile'
    'body': 'TclUnixCopyFile(${1:char* src}, ${2:char* dst}, ${3:Tcl_StatBuf* statBufPtr}, ${4:int dontCopyAtts})'
  'TclUnixSetBlockingMode':
    'prefix': 'TclUnixSetBlockingMode'
    'body': 'TclUnixSetBlockingMode(${1:int fd}, ${2:int mode})'
  'TclUnixWaitForFile':
    'prefix': 'TclUnixWaitForFile'
    'body': 'TclUnixWaitForFile(${1:int fd}, ${2:int mask}, ${3:int timeout})'
  'TclUpdateReturnInfo':
    'prefix': 'TclUpdateReturnInfo'
    'body': 'TclUpdateReturnInfo(${1:Interp* iPtr})'
  'TclVarErrMsg':
    'prefix': 'TclVarErrMsg'
    'body': 'TclVarErrMsg(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:char* operation}, ${5:char* reason})'
  'TclVarHashCreateVar':
    'prefix': 'TclVarHashCreateVar'
    'body': 'TclVarHashCreateVar(${1:TclVarHashTable* tablePtr}, ${2:char* key}, ${3:int* newPtr})'
  'TclVarTraceExists':
    'prefix': 'TclVarTraceExists'
    'body': 'TclVarTraceExists(${1:Tcl_Interp* interp}, ${2:char* varName})'
  'TclVariadicOpCmd':
    'prefix': 'TclVariadicOpCmd'
    'body': 'TclVariadicOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'TclWordKnownAtCompileTime':
    'prefix': 'TclWordKnownAtCompileTime'
    'body': 'TclWordKnownAtCompileTime(${1:Tcl_Token* tokenPtr}, ${2:Tcl_Obj* valuePtr})'
  'TclXorOpCmd':
    'prefix': 'TclXorOpCmd'
    'body': 'TclXorOpCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Access':
    'prefix': 'Tcl_Access'
    'body': 'Tcl_Access(${1:char* path}, ${2:int mode})'
  'Tcl_AddErrorInfo':
    'prefix': 'Tcl_AddErrorInfo'
    'body': 'Tcl_AddErrorInfo(${1:Tcl_Interp* interp}, ${2:char* message})'
  'Tcl_AddInterpResolvers':
    'prefix': 'Tcl_AddInterpResolvers'
    'body': 'Tcl_AddInterpResolvers(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_ResolveCmdProc* cmdProc}, ${4:Tcl_ResolveVarProc* varProc}, ${5:Tcl_ResolveCompiledVarProc* compiledVarProc})'
  'Tcl_AddObjErrorInfo':
    'prefix': 'Tcl_AddObjErrorInfo'
    'body': 'Tcl_AddObjErrorInfo(${1:Tcl_Interp* interp}, ${2:char* message}, ${3:int length})'
  'Tcl_AfterObjCmd':
    'prefix': 'Tcl_AfterObjCmd'
    'body': 'Tcl_AfterObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_AlertNotifier':
    'prefix': 'Tcl_AlertNotifier'
    'body': 'Tcl_AlertNotifier(${1:ClientData clientData})'
  'Tcl_Alloc':
    'prefix': 'Tcl_Alloc'
    'body': 'Tcl_Alloc(${1:unsigned int size})'
  'Tcl_AllocStatBuf':
    'prefix': 'Tcl_AllocStatBuf'
    'body': 'Tcl_AllocStatBuf()'
  'Tcl_AllowExceptions':
    'prefix': 'Tcl_AllowExceptions'
    'body': 'Tcl_AllowExceptions(${1:Tcl_Interp* interp})'
  'Tcl_AppInit':
    'prefix': 'Tcl_AppInit'
    'body': 'Tcl_AppInit(${1:Tcl_Interp* interp})'
  'Tcl_AppendAllObjTypes':
    'prefix': 'Tcl_AppendAllObjTypes'
    'body': 'Tcl_AppendAllObjTypes(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'Tcl_AppendElement':
    'prefix': 'Tcl_AppendElement'
    'body': 'Tcl_AppendElement(${1:Tcl_Interp* interp}, ${2:char* element})'
  'Tcl_AppendExportList':
    'prefix': 'Tcl_AppendExportList'
    'body': 'Tcl_AppendExportList(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr}, ${3:Tcl_Obj* objPtr})'
  'Tcl_AppendFormatToObj':
    'prefix': 'Tcl_AppendFormatToObj'
    'body': 'Tcl_AppendFormatToObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:char* format}, ${4:int objc}, ${5:Tcl_Obj ** objv})'
  'Tcl_AppendLimitedToObj':
    'prefix': 'Tcl_AppendLimitedToObj'
    'body': 'Tcl_AppendLimitedToObj(${1:Tcl_Obj* objPtr}, ${2:char* bytes}, ${3:int length}, ${4:int limit}, ${5:char* ellipsis})'
  'Tcl_AppendObjCmd':
    'prefix': 'Tcl_AppendObjCmd'
    'body': 'Tcl_AppendObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_AppendObjToErrorInfo':
    'prefix': 'Tcl_AppendObjToErrorInfo'
    'body': 'Tcl_AppendObjToErrorInfo(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'Tcl_AppendObjToObj':
    'prefix': 'Tcl_AppendObjToObj'
    'body': 'Tcl_AppendObjToObj(${1:Tcl_Obj* objPtr}, ${2:Tcl_Obj* appendObjPtr})'
  'Tcl_AppendPrintfToObj':
    'prefix': 'Tcl_AppendPrintfToObj'
    'body': 'Tcl_AppendPrintfToObj(${1:Tcl_Obj* objPtr}, ${2:char* format})'
  'Tcl_AppendResult':
    'prefix': 'Tcl_AppendResult'
    'body': 'Tcl_AppendResult(${1:Tcl_Interp* interp})'
  'Tcl_AppendResultVA':
    'prefix': 'Tcl_AppendResultVA'
    'body': 'Tcl_AppendResultVA(${1:Tcl_Interp* interp}, ${2:va_list argList})'
  'Tcl_AppendStringsToObj':
    'prefix': 'Tcl_AppendStringsToObj'
    'body': 'Tcl_AppendStringsToObj(${1:Tcl_Obj* objPtr})'
  'Tcl_AppendStringsToObjVA':
    'prefix': 'Tcl_AppendStringsToObjVA'
    'body': 'Tcl_AppendStringsToObjVA(${1:Tcl_Obj* objPtr}, ${2:va_list argList})'
  'Tcl_AppendToObj':
    'prefix': 'Tcl_AppendToObj'
    'body': 'Tcl_AppendToObj(${1:Tcl_Obj* objPtr}, ${2:char* bytes}, ${3:int length})'
  'Tcl_AppendUnicodeToObj':
    'prefix': 'Tcl_AppendUnicodeToObj'
    'body': 'Tcl_AppendUnicodeToObj(${1:Tcl_Obj* objPtr}, ${2:Tcl_UniChar* unicode}, ${3:int length})'
  'Tcl_ApplyObjCmd':
    'prefix': 'Tcl_ApplyObjCmd'
    'body': 'Tcl_ApplyObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ArrayObjCmd':
    'prefix': 'Tcl_ArrayObjCmd'
    'body': 'Tcl_ArrayObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_AsyncCreate':
    'prefix': 'Tcl_AsyncCreate'
    'body': 'Tcl_AsyncCreate(${1:Tcl_AsyncProc* proc}, ${2:ClientData clientData})'
  'Tcl_AsyncDelete':
    'prefix': 'Tcl_AsyncDelete'
    'body': 'Tcl_AsyncDelete(${1:Tcl_AsyncHandler async})'
  'Tcl_AsyncInvoke':
    'prefix': 'Tcl_AsyncInvoke'
    'body': 'Tcl_AsyncInvoke(${1:Tcl_Interp* interp}, ${2:int code})'
  'Tcl_AsyncMark':
    'prefix': 'Tcl_AsyncMark'
    'body': 'Tcl_AsyncMark(${1:Tcl_AsyncHandler async})'
  'Tcl_AsyncReady':
    'prefix': 'Tcl_AsyncReady'
    'body': 'Tcl_AsyncReady()'
  'Tcl_AttemptAlloc':
    'prefix': 'Tcl_AttemptAlloc'
    'body': 'Tcl_AttemptAlloc(${1:unsigned int size})'
  'Tcl_AttemptDbCkalloc':
    'prefix': 'Tcl_AttemptDbCkalloc'
    'body': 'Tcl_AttemptDbCkalloc(${1:unsigned int size}, ${2:char* file}, ${3:int line})'
  'Tcl_AttemptDbCkrealloc':
    'prefix': 'Tcl_AttemptDbCkrealloc'
    'body': 'Tcl_AttemptDbCkrealloc(${1:char* ptr}, ${2:unsigned int size}, ${3:char* file}, ${4:int line})'
  'Tcl_AttemptRealloc':
    'prefix': 'Tcl_AttemptRealloc'
    'body': 'Tcl_AttemptRealloc(${1:char* ptr}, ${2:unsigned int size})'
  'Tcl_AttemptSetObjLength':
    'prefix': 'Tcl_AttemptSetObjLength'
    'body': 'Tcl_AttemptSetObjLength(${1:Tcl_Obj* objPtr}, ${2:int length})'
  'Tcl_BackgroundError':
    'prefix': 'Tcl_BackgroundError'
    'body': 'Tcl_BackgroundError(${1:Tcl_Interp* interp})'
  'Tcl_Backslash':
    'prefix': 'Tcl_Backslash'
    'body': 'Tcl_Backslash(${1:char* src}, ${2:int* readPtr})'
  'Tcl_BadChannelOption':
    'prefix': 'Tcl_BadChannelOption'
    'body': 'Tcl_BadChannelOption(${1:Tcl_Interp* interp}, ${2:char* optionName}, ${3:char* optionList})'
  'Tcl_BinaryObjCmd':
    'prefix': 'Tcl_BinaryObjCmd'
    'body': 'Tcl_BinaryObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_BreakObjCmd':
    'prefix': 'Tcl_BreakObjCmd'
    'body': 'Tcl_BreakObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_CallWhenDeleted':
    'prefix': 'Tcl_CallWhenDeleted'
    'body': 'Tcl_CallWhenDeleted(${1:Tcl_Interp* interp}, ${2:Tcl_InterpDeleteProc* proc}, ${3:ClientData clientData})'
  'Tcl_CancelIdleCall':
    'prefix': 'Tcl_CancelIdleCall'
    'body': 'Tcl_CancelIdleCall(${1:Tcl_IdleProc* idleProc}, ${2:ClientData clientData})'
  'Tcl_CaseObjCmd':
    'prefix': 'Tcl_CaseObjCmd'
    'body': 'Tcl_CaseObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_CatchObjCmd':
    'prefix': 'Tcl_CatchObjCmd'
    'body': 'Tcl_CatchObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_CdObjCmd':
    'prefix': 'Tcl_CdObjCmd'
    'body': 'Tcl_CdObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ChannelBlockModeProc':
    'prefix': 'Tcl_ChannelBlockModeProc'
    'body': 'Tcl_ChannelBlockModeProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelBuffered':
    'prefix': 'Tcl_ChannelBuffered'
    'body': 'Tcl_ChannelBuffered(${1:Tcl_Channel chan})'
  'Tcl_ChannelClose2Proc':
    'prefix': 'Tcl_ChannelClose2Proc'
    'body': 'Tcl_ChannelClose2Proc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelCloseProc':
    'prefix': 'Tcl_ChannelCloseProc'
    'body': 'Tcl_ChannelCloseProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelFlushProc':
    'prefix': 'Tcl_ChannelFlushProc'
    'body': 'Tcl_ChannelFlushProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelGetHandleProc':
    'prefix': 'Tcl_ChannelGetHandleProc'
    'body': 'Tcl_ChannelGetHandleProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelGetOptionProc':
    'prefix': 'Tcl_ChannelGetOptionProc'
    'body': 'Tcl_ChannelGetOptionProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelHandlerProc':
    'prefix': 'Tcl_ChannelHandlerProc'
    'body': 'Tcl_ChannelHandlerProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelInputProc':
    'prefix': 'Tcl_ChannelInputProc'
    'body': 'Tcl_ChannelInputProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelName':
    'prefix': 'Tcl_ChannelName'
    'body': 'Tcl_ChannelName(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelOutputProc':
    'prefix': 'Tcl_ChannelOutputProc'
    'body': 'Tcl_ChannelOutputProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelSeekProc':
    'prefix': 'Tcl_ChannelSeekProc'
    'body': 'Tcl_ChannelSeekProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelSetOptionProc':
    'prefix': 'Tcl_ChannelSetOptionProc'
    'body': 'Tcl_ChannelSetOptionProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelThreadActionProc':
    'prefix': 'Tcl_ChannelThreadActionProc'
    'body': 'Tcl_ChannelThreadActionProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelTruncateProc':
    'prefix': 'Tcl_ChannelTruncateProc'
    'body': 'Tcl_ChannelTruncateProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelVersion':
    'prefix': 'Tcl_ChannelVersion'
    'body': 'Tcl_ChannelVersion(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelWatchProc':
    'prefix': 'Tcl_ChannelWatchProc'
    'body': 'Tcl_ChannelWatchProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_ChannelWideSeekProc':
    'prefix': 'Tcl_ChannelWideSeekProc'
    'body': 'Tcl_ChannelWideSeekProc(${1:Tcl_ChannelType* chanTypePtr})'
  'Tcl_Chdir':
    'prefix': 'Tcl_Chdir'
    'body': 'Tcl_Chdir(${1:char* dirName})'
  'Tcl_ClearChannelHandlers':
    'prefix': 'Tcl_ClearChannelHandlers'
    'body': 'Tcl_ClearChannelHandlers(${1:Tcl_Channel channel})'
  'Tcl_Close':
    'prefix': 'Tcl_Close'
    'body': 'Tcl_Close(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'Tcl_CloseObjCmd':
    'prefix': 'Tcl_CloseObjCmd'
    'body': 'Tcl_CloseObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_CommandComplete':
    'prefix': 'Tcl_CommandComplete'
    'body': 'Tcl_CommandComplete(${1:char* cmd})'
  'Tcl_CommandTraceInfo':
    'prefix': 'Tcl_CommandTraceInfo'
    'body': 'Tcl_CommandTraceInfo(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_CommandTraceProc* procPtr}, ${5:ClientData prevClientData})'
  'Tcl_Concat':
    'prefix': 'Tcl_Concat'
    'body': 'Tcl_Concat(${1:int argc}, ${2:char ** argv})'
  'Tcl_ConcatObj':
    'prefix': 'Tcl_ConcatObj'
    'body': 'Tcl_ConcatObj(${1:int objc}, ${2:Tcl_Obj ** objv})'
  'Tcl_ConcatObjCmd':
    'prefix': 'Tcl_ConcatObjCmd'
    'body': 'Tcl_ConcatObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ConditionFinalize':
    'prefix': 'Tcl_ConditionFinalize'
    'body': 'Tcl_ConditionFinalize(${1:Tcl_Condition* condPtr})'
  'Tcl_ConditionNotify':
    'prefix': 'Tcl_ConditionNotify'
    'body': 'Tcl_ConditionNotify(${1:Tcl_Condition* condPtr})'
  'Tcl_ConditionWait':
    'prefix': 'Tcl_ConditionWait'
    'body': 'Tcl_ConditionWait(${1:Tcl_Condition* condPtr}, ${2:Tcl_Mutex* mutexPtr}, ${3:Tcl_Time* timePtr})'
  'Tcl_ContinueObjCmd':
    'prefix': 'Tcl_ContinueObjCmd'
    'body': 'Tcl_ContinueObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ConvertCountedElement':
    'prefix': 'Tcl_ConvertCountedElement'
    'body': 'Tcl_ConvertCountedElement(${1:char* src}, ${2:int length}, ${3:char* dst}, ${4:int flags})'
  'Tcl_ConvertElement':
    'prefix': 'Tcl_ConvertElement'
    'body': 'Tcl_ConvertElement(${1:char* src}, ${2:char* dst}, ${3:int flags})'
  'Tcl_ConvertToType':
    'prefix': 'Tcl_ConvertToType'
    'body': 'Tcl_ConvertToType(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_ObjType* typePtr})'
  'Tcl_CreateAlias':
    'prefix': 'Tcl_CreateAlias'
    'body': 'Tcl_CreateAlias(${1:Tcl_Interp* slave}, ${2:char* slaveCmd}, ${3:Tcl_Interp* target}, ${4:char* targetCmd}, ${5:int argc}, ${6:char ** argv})'
  'Tcl_CreateAliasObj':
    'prefix': 'Tcl_CreateAliasObj'
    'body': 'Tcl_CreateAliasObj(${1:Tcl_Interp* slave}, ${2:char* slaveCmd}, ${3:Tcl_Interp* target}, ${4:char* targetCmd}, ${5:int objc}, ${6:Tcl_Obj ** objv})'
  'Tcl_CreateChannel':
    'prefix': 'Tcl_CreateChannel'
    'body': 'Tcl_CreateChannel(${1:Tcl_ChannelType* typePtr}, ${2:char* chanName}, ${3:ClientData instanceData}, ${4:int mask})'
  'Tcl_CreateChannelHandler':
    'prefix': 'Tcl_CreateChannelHandler'
    'body': 'Tcl_CreateChannelHandler(${1:Tcl_Channel chan}, ${2:int mask}, ${3:Tcl_ChannelProc* proc}, ${4:ClientData clientData})'
  'Tcl_CreateCloseHandler':
    'prefix': 'Tcl_CreateCloseHandler'
    'body': 'Tcl_CreateCloseHandler(${1:Tcl_Channel chan}, ${2:Tcl_CloseProc* proc}, ${3:ClientData clientData})'
  'Tcl_CreateCommand':
    'prefix': 'Tcl_CreateCommand'
    'body': 'Tcl_CreateCommand(${1:Tcl_Interp* interp}, ${2:char* cmdName}, ${3:Tcl_CmdProc* proc}, ${4:ClientData clientData}, ${5:Tcl_CmdDeleteProc* deleteProc})'
  'Tcl_CreateEncoding':
    'prefix': 'Tcl_CreateEncoding'
    'body': 'Tcl_CreateEncoding(${1:Tcl_EncodingType* typePtr})'
  'Tcl_CreateEnsemble':
    'prefix': 'Tcl_CreateEnsemble'
    'body': 'Tcl_CreateEnsemble(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_Namespace* namespacePtr}, ${4:int flags})'
  'Tcl_CreateEventSource':
    'prefix': 'Tcl_CreateEventSource'
    'body': 'Tcl_CreateEventSource(${1:Tcl_EventSetupProc* setupProc}, ${2:Tcl_EventCheckProc* checkProc}, ${3:ClientData clientData})'
  'Tcl_CreateExitHandler':
    'prefix': 'Tcl_CreateExitHandler'
    'body': 'Tcl_CreateExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'Tcl_CreateFileHandler':
    'prefix': 'Tcl_CreateFileHandler'
    'body': 'Tcl_CreateFileHandler(${1:int fd}, ${2:int mask}, ${3:Tcl_FileProc* proc}, ${4:ClientData clientData})'
  'Tcl_CreateHashEntry':
    'prefix': 'Tcl_CreateHashEntry'
    'body': 'Tcl_CreateHashEntry(${1:Tcl_HashTable* tablePtr}, ${2:char* key}, ${3:int* newPtr})'
  'Tcl_CreateInterp':
    'prefix': 'Tcl_CreateInterp'
    'body': 'Tcl_CreateInterp()'
  'Tcl_CreateMathFunc':
    'prefix': 'Tcl_CreateMathFunc'
    'body': 'Tcl_CreateMathFunc(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:int numArgs}, ${4:Tcl_ValueType* argTypes}, ${5:Tcl_MathProc* proc}, ${6:ClientData clientData})'
  'Tcl_CreateNamespace':
    'prefix': 'Tcl_CreateNamespace'
    'body': 'Tcl_CreateNamespace(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:ClientData clientData}, ${4:Tcl_NamespaceDeleteProc* deleteProc})'
  'Tcl_CreateObjCommand':
    'prefix': 'Tcl_CreateObjCommand'
    'body': 'Tcl_CreateObjCommand(${1:Tcl_Interp* interp}, ${2:char* cmdName}, ${3:Tcl_ObjCmdProc* proc}, ${4:ClientData clientData}, ${5:Tcl_CmdDeleteProc* deleteProc})'
  'Tcl_CreateObjTrace':
    'prefix': 'Tcl_CreateObjTrace'
    'body': 'Tcl_CreateObjTrace(${1:Tcl_Interp* interp}, ${2:int level}, ${3:int flags}, ${4:Tcl_CmdObjTraceProc* objProc}, ${5:ClientData clientData}, ${6:Tcl_CmdObjTraceDeleteProc* delProc})'
  'Tcl_CreateSlave':
    'prefix': 'Tcl_CreateSlave'
    'body': 'Tcl_CreateSlave(${1:Tcl_Interp* interp}, ${2:char* slaveName}, ${3:int isSafe})'
  'Tcl_CreateThread':
    'prefix': 'Tcl_CreateThread'
    'body': 'Tcl_CreateThread(${1:Tcl_ThreadId* idPtr}, ${2:Tcl_ThreadCreateProc* proc}, ${3:ClientData clientData}, ${4:int stackSize}, ${5:int flags})'
  'Tcl_CreateThreadExitHandler':
    'prefix': 'Tcl_CreateThreadExitHandler'
    'body': 'Tcl_CreateThreadExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'Tcl_CreateTimerHandler':
    'prefix': 'Tcl_CreateTimerHandler'
    'body': 'Tcl_CreateTimerHandler(${1:int milliseconds}, ${2:Tcl_TimerProc* proc}, ${3:ClientData clientData})'
  'Tcl_CreateTrace':
    'prefix': 'Tcl_CreateTrace'
    'body': 'Tcl_CreateTrace(${1:Tcl_Interp* interp}, ${2:int level}, ${3:Tcl_CmdTraceProc* proc}, ${4:ClientData clientData})'
  'Tcl_CutChannel':
    'prefix': 'Tcl_CutChannel'
    'body': 'Tcl_CutChannel(${1:Tcl_Channel channel})'
  'Tcl_DStringAppend':
    'prefix': 'Tcl_DStringAppend'
    'body': 'Tcl_DStringAppend(${1:Tcl_DString* dsPtr}, ${2:char* bytes}, ${3:int length})'
  'Tcl_DStringAppendElement':
    'prefix': 'Tcl_DStringAppendElement'
    'body': 'Tcl_DStringAppendElement(${1:Tcl_DString* dsPtr}, ${2:char* element})'
  'Tcl_DStringEndSublist':
    'prefix': 'Tcl_DStringEndSublist'
    'body': 'Tcl_DStringEndSublist(${1:Tcl_DString* dsPtr})'
  'Tcl_DStringFree':
    'prefix': 'Tcl_DStringFree'
    'body': 'Tcl_DStringFree(${1:Tcl_DString* dsPtr})'
  'Tcl_DStringGetResult':
    'prefix': 'Tcl_DStringGetResult'
    'body': 'Tcl_DStringGetResult(${1:Tcl_Interp* interp}, ${2:Tcl_DString* dsPtr})'
  'Tcl_DStringInit':
    'prefix': 'Tcl_DStringInit'
    'body': 'Tcl_DStringInit(${1:Tcl_DString* dsPtr})'
  'Tcl_DStringResult':
    'prefix': 'Tcl_DStringResult'
    'body': 'Tcl_DStringResult(${1:Tcl_Interp* interp}, ${2:Tcl_DString* dsPtr})'
  'Tcl_DStringSetLength':
    'prefix': 'Tcl_DStringSetLength'
    'body': 'Tcl_DStringSetLength(${1:Tcl_DString* dsPtr}, ${2:int length})'
  'Tcl_DStringStartSublist':
    'prefix': 'Tcl_DStringStartSublist'
    'body': 'Tcl_DStringStartSublist(${1:Tcl_DString* dsPtr})'
  'Tcl_DbCkalloc':
    'prefix': 'Tcl_DbCkalloc'
    'body': 'Tcl_DbCkalloc(${1:unsigned int size}, ${2:char* file}, ${3:int line})'
  'Tcl_DbCkfree':
    'prefix': 'Tcl_DbCkfree'
    'body': 'Tcl_DbCkfree(${1:char* ptr}, ${2:char* file}, ${3:int line})'
  'Tcl_DbCkrealloc':
    'prefix': 'Tcl_DbCkrealloc'
    'body': 'Tcl_DbCkrealloc(${1:char* ptr}, ${2:unsigned int size}, ${3:char* file}, ${4:int line})'
  'Tcl_DbDecrRefCount':
    'prefix': 'Tcl_DbDecrRefCount'
    'body': 'Tcl_DbDecrRefCount(${1:Tcl_Obj* objPtr}, ${2:char* file}, ${3:int line})'
  'Tcl_DbIncrRefCount':
    'prefix': 'Tcl_DbIncrRefCount'
    'body': 'Tcl_DbIncrRefCount(${1:Tcl_Obj* objPtr}, ${2:char* file}, ${3:int line})'
  'Tcl_DbIsShared':
    'prefix': 'Tcl_DbIsShared'
    'body': 'Tcl_DbIsShared(${1:Tcl_Obj* objPtr}, ${2:char* file}, ${3:int line})'
  'Tcl_DbNewBignumObj':
    'prefix': 'Tcl_DbNewBignumObj'
    'body': 'Tcl_DbNewBignumObj(${1:mp_int* value}, ${2:char* file}, ${3:int line})'
  'Tcl_DbNewBooleanObj':
    'prefix': 'Tcl_DbNewBooleanObj'
    'body': 'Tcl_DbNewBooleanObj(${1:int boolValue}, ${2:char* file}, ${3:int line})'
  'Tcl_DbNewByteArrayObj':
    'prefix': 'Tcl_DbNewByteArrayObj'
    'body': 'Tcl_DbNewByteArrayObj(${1:unsigned char* bytes}, ${2:int length}, ${3:char* file}, ${4:int line})'
  'Tcl_DbNewDictObj':
    'prefix': 'Tcl_DbNewDictObj'
    'body': 'Tcl_DbNewDictObj(${1:char* file}, ${2:int line})'
  'Tcl_DbNewDoubleObj':
    'prefix': 'Tcl_DbNewDoubleObj'
    'body': 'Tcl_DbNewDoubleObj(${1:double doubleValue}, ${2:char* file}, ${3:int line})'
  'Tcl_DbNewListObj':
    'prefix': 'Tcl_DbNewListObj'
    'body': 'Tcl_DbNewListObj(${1:int objc}, ${2:Tcl_Obj ** objv}, ${3:char* file}, ${4:int line})'
  'Tcl_DbNewLongObj':
    'prefix': 'Tcl_DbNewLongObj'
    'body': 'Tcl_DbNewLongObj(${1:long longValue}, ${2:char* file}, ${3:int line})'
  'Tcl_DbNewObj':
    'prefix': 'Tcl_DbNewObj'
    'body': 'Tcl_DbNewObj(${1:char* file}, ${2:int line})'
  'Tcl_DbNewStringObj':
    'prefix': 'Tcl_DbNewStringObj'
    'body': 'Tcl_DbNewStringObj(${1:char* bytes}, ${2:int length}, ${3:char* file}, ${4:int line})'
  'Tcl_DbNewWideIntObj':
    'prefix': 'Tcl_DbNewWideIntObj'
    'body': 'Tcl_DbNewWideIntObj(${1:Tcl_WideInt wideValue}, ${2:char* file}, ${3:int line})'
  'Tcl_DecrRefCount':
    'prefix': 'Tcl_DecrRefCount'
    'body': 'Tcl_DecrRefCount(${1:Tcl_Obj* objPtr})'
  'Tcl_DeleteAssocData':
    'prefix': 'Tcl_DeleteAssocData'
    'body': 'Tcl_DeleteAssocData(${1:Tcl_Interp* interp}, ${2:char* name})'
  'Tcl_DeleteChannelHandler':
    'prefix': 'Tcl_DeleteChannelHandler'
    'body': 'Tcl_DeleteChannelHandler(${1:Tcl_Channel chan}, ${2:Tcl_ChannelProc* proc}, ${3:ClientData clientData})'
  'Tcl_DeleteCloseHandler':
    'prefix': 'Tcl_DeleteCloseHandler'
    'body': 'Tcl_DeleteCloseHandler(${1:Tcl_Channel chan}, ${2:Tcl_CloseProc* proc}, ${3:ClientData clientData})'
  'Tcl_DeleteCommand':
    'prefix': 'Tcl_DeleteCommand'
    'body': 'Tcl_DeleteCommand(${1:Tcl_Interp* interp}, ${2:char* cmdName})'
  'Tcl_DeleteCommandFromToken':
    'prefix': 'Tcl_DeleteCommandFromToken'
    'body': 'Tcl_DeleteCommandFromToken(${1:Tcl_Interp* interp}, ${2:Tcl_Command command})'
  'Tcl_DeleteEventSource':
    'prefix': 'Tcl_DeleteEventSource'
    'body': 'Tcl_DeleteEventSource(${1:Tcl_EventSetupProc* setupProc}, ${2:Tcl_EventCheckProc* checkProc}, ${3:ClientData clientData})'
  'Tcl_DeleteEvents':
    'prefix': 'Tcl_DeleteEvents'
    'body': 'Tcl_DeleteEvents(${1:Tcl_EventDeleteProc* proc}, ${2:ClientData clientData})'
  'Tcl_DeleteExitHandler':
    'prefix': 'Tcl_DeleteExitHandler'
    'body': 'Tcl_DeleteExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'Tcl_DeleteFileHandler':
    'prefix': 'Tcl_DeleteFileHandler'
    'body': 'Tcl_DeleteFileHandler(${1:int fd})'
  'Tcl_DeleteHashEntry':
    'prefix': 'Tcl_DeleteHashEntry'
    'body': 'Tcl_DeleteHashEntry(${1:Tcl_HashEntry* entryPtr})'
  'Tcl_DeleteHashTable':
    'prefix': 'Tcl_DeleteHashTable'
    'body': 'Tcl_DeleteHashTable(${1:Tcl_HashTable* tablePtr})'
  'Tcl_DeleteInterp':
    'prefix': 'Tcl_DeleteInterp'
    'body': 'Tcl_DeleteInterp(${1:Tcl_Interp* interp})'
  'Tcl_DeleteNamespace':
    'prefix': 'Tcl_DeleteNamespace'
    'body': 'Tcl_DeleteNamespace(${1:Tcl_Namespace* nsPtr})'
  'Tcl_DeleteThreadExitHandler':
    'prefix': 'Tcl_DeleteThreadExitHandler'
    'body': 'Tcl_DeleteThreadExitHandler(${1:Tcl_ExitProc* proc}, ${2:ClientData clientData})'
  'Tcl_DeleteTimerHandler':
    'prefix': 'Tcl_DeleteTimerHandler'
    'body': 'Tcl_DeleteTimerHandler(${1:Tcl_TimerToken token})'
  'Tcl_DeleteTrace':
    'prefix': 'Tcl_DeleteTrace'
    'body': 'Tcl_DeleteTrace(${1:Tcl_Interp* interp}, ${2:Tcl_Trace trace})'
  'Tcl_DetachChannel':
    'prefix': 'Tcl_DetachChannel'
    'body': 'Tcl_DetachChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Channel channel})'
  'Tcl_DetachPids':
    'prefix': 'Tcl_DetachPids'
    'body': 'Tcl_DetachPids(${1:int numPids}, ${2:Tcl_Pid* pidPtr})'
  'Tcl_DictObjDone':
    'prefix': 'Tcl_DictObjDone'
    'body': 'Tcl_DictObjDone(${1:Tcl_DictSearch* searchPtr})'
  'Tcl_DictObjFirst':
    'prefix': 'Tcl_DictObjFirst'
    'body': 'Tcl_DictObjFirst(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:Tcl_DictSearch* searchPtr}, ${4:Tcl_Obj** keyPtrPtr}, ${5:Tcl_Obj** valuePtrPtr}, ${6:int* donePtr})'
  'Tcl_DictObjGet':
    'prefix': 'Tcl_DictObjGet'
    'body': 'Tcl_DictObjGet(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:Tcl_Obj* keyPtr}, ${4:Tcl_Obj** valuePtrPtr})'
  'Tcl_DictObjNext':
    'prefix': 'Tcl_DictObjNext'
    'body': 'Tcl_DictObjNext(${1:Tcl_DictSearch* searchPtr}, ${2:Tcl_Obj** keyPtrPtr}, ${3:Tcl_Obj** valuePtrPtr}, ${4:int* donePtr})'
  'Tcl_DictObjPut':
    'prefix': 'Tcl_DictObjPut'
    'body': 'Tcl_DictObjPut(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:Tcl_Obj* keyPtr}, ${4:Tcl_Obj* valuePtr})'
  'Tcl_DictObjPutKeyList':
    'prefix': 'Tcl_DictObjPutKeyList'
    'body': 'Tcl_DictObjPutKeyList(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:int keyc}, ${4:Tcl_Obj ** keyv}, ${5:Tcl_Obj* valuePtr})'
  'Tcl_DictObjRemove':
    'prefix': 'Tcl_DictObjRemove'
    'body': 'Tcl_DictObjRemove(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:Tcl_Obj* keyPtr})'
  'Tcl_DictObjRemoveKeyList':
    'prefix': 'Tcl_DictObjRemoveKeyList'
    'body': 'Tcl_DictObjRemoveKeyList(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:int keyc}, ${4:Tcl_Obj ** keyv})'
  'Tcl_DictObjSize':
    'prefix': 'Tcl_DictObjSize'
    'body': 'Tcl_DictObjSize(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* dictPtr}, ${3:int* sizePtr})'
  'Tcl_DisassembleObjCmd':
    'prefix': 'Tcl_DisassembleObjCmd'
    'body': 'Tcl_DisassembleObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_DiscardInterpState':
    'prefix': 'Tcl_DiscardInterpState'
    'body': 'Tcl_DiscardInterpState(${1:Tcl_InterpState state})'
  'Tcl_DiscardResult':
    'prefix': 'Tcl_DiscardResult'
    'body': 'Tcl_DiscardResult(${1:Tcl_SavedResult* statePtr})'
  'Tcl_DoOneEvent':
    'prefix': 'Tcl_DoOneEvent'
    'body': 'Tcl_DoOneEvent(${1:int flags})'
  'Tcl_DoWhenIdle':
    'prefix': 'Tcl_DoWhenIdle'
    'body': 'Tcl_DoWhenIdle(${1:Tcl_IdleProc* proc}, ${2:ClientData clientData})'
  'Tcl_DontCallWhenDeleted':
    'prefix': 'Tcl_DontCallWhenDeleted'
    'body': 'Tcl_DontCallWhenDeleted(${1:Tcl_Interp* interp}, ${2:Tcl_InterpDeleteProc* proc}, ${3:ClientData clientData})'
  'Tcl_DumpActiveMemory':
    'prefix': 'Tcl_DumpActiveMemory'
    'body': 'Tcl_DumpActiveMemory(${1:char* fileName})'
  'Tcl_DuplicateObj':
    'prefix': 'Tcl_DuplicateObj'
    'body': 'Tcl_DuplicateObj(${1:Tcl_Obj* objPtr})'
  'Tcl_EncodingObjCmd':
    'prefix': 'Tcl_EncodingObjCmd'
    'body': 'Tcl_EncodingObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Eof':
    'prefix': 'Tcl_Eof'
    'body': 'Tcl_Eof(${1:Tcl_Channel chan})'
  'Tcl_EofObjCmd':
    'prefix': 'Tcl_EofObjCmd'
    'body': 'Tcl_EofObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ErrnoId':
    'prefix': 'Tcl_ErrnoId'
    'body': 'Tcl_ErrnoId()'
  'Tcl_ErrnoMsg':
    'prefix': 'Tcl_ErrnoMsg'
    'body': 'Tcl_ErrnoMsg(${1:int err})'
  'Tcl_ErrorObjCmd':
    'prefix': 'Tcl_ErrorObjCmd'
    'body': 'Tcl_ErrorObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Eval':
    'prefix': 'Tcl_Eval'
    'body': 'Tcl_Eval(${1:Tcl_Interp* interp}, ${2:char* script})'
  'Tcl_EvalEx':
    'prefix': 'Tcl_EvalEx'
    'body': 'Tcl_EvalEx(${1:Tcl_Interp* interp}, ${2:char* script}, ${3:int numBytes}, ${4:int flags})'
  'Tcl_EvalFile':
    'prefix': 'Tcl_EvalFile'
    'body': 'Tcl_EvalFile(${1:Tcl_Interp* interp}, ${2:char* fileName})'
  'Tcl_EvalObj':
    'prefix': 'Tcl_EvalObj'
    'body': 'Tcl_EvalObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'Tcl_EvalObjCmd':
    'prefix': 'Tcl_EvalObjCmd'
    'body': 'Tcl_EvalObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_EvalObjEx':
    'prefix': 'Tcl_EvalObjEx'
    'body': 'Tcl_EvalObjEx(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int flags})'
  'Tcl_EvalObjv':
    'prefix': 'Tcl_EvalObjv'
    'body': 'Tcl_EvalObjv(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:int flags})'
  'Tcl_EvalTokens':
    'prefix': 'Tcl_EvalTokens'
    'body': 'Tcl_EvalTokens(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int count})'
  'Tcl_EvalTokensStandard':
    'prefix': 'Tcl_EvalTokensStandard'
    'body': 'Tcl_EvalTokensStandard(${1:Tcl_Interp* interp}, ${2:Tcl_Token* tokenPtr}, ${3:int count})'
  'Tcl_EventuallyFree':
    'prefix': 'Tcl_EventuallyFree'
    'body': 'Tcl_EventuallyFree(${1:ClientData clientData}, ${2:Tcl_FreeProc* freeProc})'
  'Tcl_ExecObjCmd':
    'prefix': 'Tcl_ExecObjCmd'
    'body': 'Tcl_ExecObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Exit':
    'prefix': 'Tcl_Exit'
    'body': 'Tcl_Exit(${1:int status})'
  'Tcl_ExitObjCmd':
    'prefix': 'Tcl_ExitObjCmd'
    'body': 'Tcl_ExitObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ExitThread':
    'prefix': 'Tcl_ExitThread'
    'body': 'Tcl_ExitThread(${1:int status})'
  'Tcl_Export':
    'prefix': 'Tcl_Export'
    'body': 'Tcl_Export(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr}, ${3:char* pattern}, ${4:int resetListFirst})'
  'Tcl_ExposeCommand':
    'prefix': 'Tcl_ExposeCommand'
    'body': 'Tcl_ExposeCommand(${1:Tcl_Interp* interp}, ${2:char* hiddenCmdToken}, ${3:char* cmdName})'
  'Tcl_ExprBoolean':
    'prefix': 'Tcl_ExprBoolean'
    'body': 'Tcl_ExprBoolean(${1:Tcl_Interp* interp}, ${2:char* expr}, ${3:int* ptr})'
  'Tcl_ExprBooleanObj':
    'prefix': 'Tcl_ExprBooleanObj'
    'body': 'Tcl_ExprBooleanObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int* ptr})'
  'Tcl_ExprDouble':
    'prefix': 'Tcl_ExprDouble'
    'body': 'Tcl_ExprDouble(${1:Tcl_Interp* interp}, ${2:char* expr}, ${3:double* ptr})'
  'Tcl_ExprDoubleObj':
    'prefix': 'Tcl_ExprDoubleObj'
    'body': 'Tcl_ExprDoubleObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:double* ptr})'
  'Tcl_ExprLong':
    'prefix': 'Tcl_ExprLong'
    'body': 'Tcl_ExprLong(${1:Tcl_Interp* interp}, ${2:char* expr}, ${3:long* ptr})'
  'Tcl_ExprLongObj':
    'prefix': 'Tcl_ExprLongObj'
    'body': 'Tcl_ExprLongObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:long* ptr})'
  'Tcl_ExprObj':
    'prefix': 'Tcl_ExprObj'
    'body': 'Tcl_ExprObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_Obj** resultPtrPtr})'
  'Tcl_ExprObjCmd':
    'prefix': 'Tcl_ExprObjCmd'
    'body': 'Tcl_ExprObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ExprString':
    'prefix': 'Tcl_ExprString'
    'body': 'Tcl_ExprString(${1:Tcl_Interp* interp}, ${2:char* expr})'
  'Tcl_ExternalToUtf':
    'prefix': 'Tcl_ExternalToUtf'
    'body': 'Tcl_ExternalToUtf(${1:Tcl_Interp* interp}, ${2:Tcl_Encoding encoding}, ${3:char* src}, ${4:int srcLen}, ${5:int flags}, ${6:Tcl_EncodingState* statePtr}, ${7:char* dst}, ${8:int dstLen}, ${9:int* srcReadPtr}, ${10:int* dstWrotePtr}, ${11:int* dstCharsPtr})'
  'Tcl_ExternalToUtfDString':
    'prefix': 'Tcl_ExternalToUtfDString'
    'body': 'Tcl_ExternalToUtfDString(${1:Tcl_Encoding encoding}, ${2:char* src}, ${3:int srcLen}, ${4:Tcl_DString* dsPtr})'
  'Tcl_FSAccess':
    'prefix': 'Tcl_FSAccess'
    'body': 'Tcl_FSAccess(${1:Tcl_Obj* pathPtr}, ${2:int mode})'
  'Tcl_FSChdir':
    'prefix': 'Tcl_FSChdir'
    'body': 'Tcl_FSChdir(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSConvertToPathType':
    'prefix': 'Tcl_FSConvertToPathType'
    'body': 'Tcl_FSConvertToPathType(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr})'
  'Tcl_FSCopyDirectory':
    'prefix': 'Tcl_FSCopyDirectory'
    'body': 'Tcl_FSCopyDirectory(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr}, ${3:Tcl_Obj** errorPtr})'
  'Tcl_FSCopyFile':
    'prefix': 'Tcl_FSCopyFile'
    'body': 'Tcl_FSCopyFile(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr})'
  'Tcl_FSCreateDirectory':
    'prefix': 'Tcl_FSCreateDirectory'
    'body': 'Tcl_FSCreateDirectory(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSData':
    'prefix': 'Tcl_FSData'
    'body': 'Tcl_FSData(${1:Tcl_Filesystem* fsPtr})'
  'Tcl_FSDeleteFile':
    'prefix': 'Tcl_FSDeleteFile'
    'body': 'Tcl_FSDeleteFile(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSEqualPaths':
    'prefix': 'Tcl_FSEqualPaths'
    'body': 'Tcl_FSEqualPaths(${1:Tcl_Obj* firstPtr}, ${2:Tcl_Obj* secondPtr})'
  'Tcl_FSEvalFile':
    'prefix': 'Tcl_FSEvalFile'
    'body': 'Tcl_FSEvalFile(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* fileName})'
  'Tcl_FSEvalFileEx':
    'prefix': 'Tcl_FSEvalFileEx'
    'body': 'Tcl_FSEvalFileEx(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* fileName}, ${3:char* encodingName})'
  'Tcl_FSFileAttrStrings':
    'prefix': 'Tcl_FSFileAttrStrings'
    'body': 'Tcl_FSFileAttrStrings(${1:Tcl_Obj* pathPtr}, ${2:Tcl_Obj** objPtrRef})'
  'Tcl_FSFileAttrsGet':
    'prefix': 'Tcl_FSFileAttrsGet'
    'body': 'Tcl_FSFileAttrsGet(${1:Tcl_Interp* interp}, ${2:int index}, ${3:Tcl_Obj* pathPtr}, ${4:Tcl_Obj** objPtrRef})'
  'Tcl_FSFileAttrsSet':
    'prefix': 'Tcl_FSFileAttrsSet'
    'body': 'Tcl_FSFileAttrsSet(${1:Tcl_Interp* interp}, ${2:int index}, ${3:Tcl_Obj* pathPtr}, ${4:Tcl_Obj* objPtr})'
  'Tcl_FSFileSystemInfo':
    'prefix': 'Tcl_FSFileSystemInfo'
    'body': 'Tcl_FSFileSystemInfo(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSGetCwd':
    'prefix': 'Tcl_FSGetCwd'
    'body': 'Tcl_FSGetCwd(${1:Tcl_Interp* interp})'
  'Tcl_FSGetFileSystemForPath':
    'prefix': 'Tcl_FSGetFileSystemForPath'
    'body': 'Tcl_FSGetFileSystemForPath(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSGetInternalRep':
    'prefix': 'Tcl_FSGetInternalRep'
    'body': 'Tcl_FSGetInternalRep(${1:Tcl_Obj* pathPtr}, ${2:Tcl_Filesystem* fsPtr})'
  'Tcl_FSGetNativePath':
    'prefix': 'Tcl_FSGetNativePath'
    'body': 'Tcl_FSGetNativePath(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSGetNormalizedPath':
    'prefix': 'Tcl_FSGetNormalizedPath'
    'body': 'Tcl_FSGetNormalizedPath(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr})'
  'Tcl_FSGetPathType':
    'prefix': 'Tcl_FSGetPathType'
    'body': 'Tcl_FSGetPathType(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSGetTranslatedPath':
    'prefix': 'Tcl_FSGetTranslatedPath'
    'body': 'Tcl_FSGetTranslatedPath(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr})'
  'Tcl_FSGetTranslatedStringPath':
    'prefix': 'Tcl_FSGetTranslatedStringPath'
    'body': 'Tcl_FSGetTranslatedStringPath(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr})'
  'Tcl_FSJoinPath':
    'prefix': 'Tcl_FSJoinPath'
    'body': 'Tcl_FSJoinPath(${1:Tcl_Obj* listObj}, ${2:int elements})'
  'Tcl_FSJoinToPath':
    'prefix': 'Tcl_FSJoinToPath'
    'body': 'Tcl_FSJoinToPath(${1:Tcl_Obj* pathPtr}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'Tcl_FSLink':
    'prefix': 'Tcl_FSLink'
    'body': 'Tcl_FSLink(${1:Tcl_Obj* pathPtr}, ${2:Tcl_Obj* toPtr}, ${3:int linkAction})'
  'Tcl_FSListVolumes':
    'prefix': 'Tcl_FSListVolumes'
    'body': 'Tcl_FSListVolumes()'
  'Tcl_FSLoadFile':
    'prefix': 'Tcl_FSLoadFile'
    'body': 'Tcl_FSLoadFile(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:char* sym1}, ${4:char* sym2}, ${5:Tcl_PackageInitProc** proc1Ptr}, ${6:Tcl_PackageInitProc** proc2Ptr}, ${7:Tcl_LoadHandle* handlePtr}, ${8:Tcl_FSUnloadFileProc** unloadProcPtr})'
  'Tcl_FSLstat':
    'prefix': 'Tcl_FSLstat'
    'body': 'Tcl_FSLstat(${1:Tcl_Obj* pathPtr}, ${2:Tcl_StatBuf* buf})'
  'Tcl_FSMatchInDirectory':
    'prefix': 'Tcl_FSMatchInDirectory'
    'body': 'Tcl_FSMatchInDirectory(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* result}, ${3:Tcl_Obj* pathPtr}, ${4:char* pattern}, ${5:Tcl_GlobTypeData* types})'
  'Tcl_FSMountsChanged':
    'prefix': 'Tcl_FSMountsChanged'
    'body': 'Tcl_FSMountsChanged(${1:Tcl_Filesystem* fsPtr})'
  'Tcl_FSNewNativePath':
    'prefix': 'Tcl_FSNewNativePath'
    'body': 'Tcl_FSNewNativePath(${1:Tcl_Filesystem* fromFilesystem}, ${2:ClientData clientData})'
  'Tcl_FSOpenFileChannel':
    'prefix': 'Tcl_FSOpenFileChannel'
    'body': 'Tcl_FSOpenFileChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:char* modeString}, ${4:int permissions})'
  'Tcl_FSPathSeparator':
    'prefix': 'Tcl_FSPathSeparator'
    'body': 'Tcl_FSPathSeparator(${1:Tcl_Obj* pathPtr})'
  'Tcl_FSRegister':
    'prefix': 'Tcl_FSRegister'
    'body': 'Tcl_FSRegister(${1:ClientData clientData}, ${2:Tcl_Filesystem* fsPtr})'
  'Tcl_FSRemoveDirectory':
    'prefix': 'Tcl_FSRemoveDirectory'
    'body': 'Tcl_FSRemoveDirectory(${1:Tcl_Obj* pathPtr}, ${2:int recursive}, ${3:Tcl_Obj** errorPtr})'
  'Tcl_FSRenameFile':
    'prefix': 'Tcl_FSRenameFile'
    'body': 'Tcl_FSRenameFile(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr})'
  'Tcl_FSSplitPath':
    'prefix': 'Tcl_FSSplitPath'
    'body': 'Tcl_FSSplitPath(${1:Tcl_Obj* pathPtr}, ${2:int* lenPtr})'
  'Tcl_FSStat':
    'prefix': 'Tcl_FSStat'
    'body': 'Tcl_FSStat(${1:Tcl_Obj* pathPtr}, ${2:Tcl_StatBuf* buf})'
  'Tcl_FSUnregister':
    'prefix': 'Tcl_FSUnregister'
    'body': 'Tcl_FSUnregister(${1:Tcl_Filesystem* fsPtr})'
  'Tcl_FSUtime':
    'prefix': 'Tcl_FSUtime'
    'body': 'Tcl_FSUtime(${1:Tcl_Obj* pathPtr}, ${2:struct utimbuf* tval})'
  'Tcl_FblockedObjCmd':
    'prefix': 'Tcl_FblockedObjCmd'
    'body': 'Tcl_FblockedObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_FconfigureObjCmd':
    'prefix': 'Tcl_FconfigureObjCmd'
    'body': 'Tcl_FconfigureObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_FcopyObjCmd':
    'prefix': 'Tcl_FcopyObjCmd'
    'body': 'Tcl_FcopyObjCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_FileEventObjCmd':
    'prefix': 'Tcl_FileEventObjCmd'
    'body': 'Tcl_FileEventObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_FileObjCmd':
    'prefix': 'Tcl_FileObjCmd'
    'body': 'Tcl_FileObjCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Finalize':
    'prefix': 'Tcl_Finalize'
    'body': 'Tcl_Finalize()'
  'Tcl_FinalizeNotifier':
    'prefix': 'Tcl_FinalizeNotifier'
    'body': 'Tcl_FinalizeNotifier(${1:ClientData clientData})'
  'Tcl_FinalizeThread':
    'prefix': 'Tcl_FinalizeThread'
    'body': 'Tcl_FinalizeThread()'
  'Tcl_FindCommand':
    'prefix': 'Tcl_FindCommand'
    'body': 'Tcl_FindCommand(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_Namespace* contextNsPtr}, ${4:int flags})'
  'Tcl_FindEnsemble':
    'prefix': 'Tcl_FindEnsemble'
    'body': 'Tcl_FindEnsemble(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* cmdNameObj}, ${3:int flags})'
  'Tcl_FindExecutable':
    'prefix': 'Tcl_FindExecutable'
    'body': 'Tcl_FindExecutable(${1:char* argv0})'
  'Tcl_FindHashEntry':
    'prefix': 'Tcl_FindHashEntry'
    'body': 'Tcl_FindHashEntry(${1:Tcl_HashTable* tablePtr}, ${2:char* key})'
  'Tcl_FindNamespace':
    'prefix': 'Tcl_FindNamespace'
    'body': 'Tcl_FindNamespace(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_Namespace* contextNsPtr}, ${4:int flags})'
  'Tcl_FindNamespaceVar':
    'prefix': 'Tcl_FindNamespaceVar'
    'body': 'Tcl_FindNamespaceVar(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_Namespace* contextNsPtr}, ${4:int flags})'
  'Tcl_FirstHashEntry':
    'prefix': 'Tcl_FirstHashEntry'
    'body': 'Tcl_FirstHashEntry(${1:Tcl_HashTable* tablePtr}, ${2:Tcl_HashSearch* searchPtr})'
  'Tcl_Flush':
    'prefix': 'Tcl_Flush'
    'body': 'Tcl_Flush(${1:Tcl_Channel chan})'
  'Tcl_FlushObjCmd':
    'prefix': 'Tcl_FlushObjCmd'
    'body': 'Tcl_FlushObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ForObjCmd':
    'prefix': 'Tcl_ForObjCmd'
    'body': 'Tcl_ForObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ForeachObjCmd':
    'prefix': 'Tcl_ForeachObjCmd'
    'body': 'Tcl_ForeachObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ForgetImport':
    'prefix': 'Tcl_ForgetImport'
    'body': 'Tcl_ForgetImport(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr}, ${3:char* pattern})'
  'Tcl_Format':
    'prefix': 'Tcl_Format'
    'body': 'Tcl_Format(${1:Tcl_Interp* interp}, ${2:char* format}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_FormatObjCmd':
    'prefix': 'Tcl_FormatObjCmd'
    'body': 'Tcl_FormatObjCmd(${1:ClientData dummy}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Free':
    'prefix': 'Tcl_Free'
    'body': 'Tcl_Free(${1:char* ptr})'
  'Tcl_FreeEncoding':
    'prefix': 'Tcl_FreeEncoding'
    'body': 'Tcl_FreeEncoding(${1:Tcl_Encoding encoding})'
  'Tcl_FreeParse':
    'prefix': 'Tcl_FreeParse'
    'body': 'Tcl_FreeParse(${1:Tcl_Parse* parsePtr})'
  'Tcl_FreeResult':
    'prefix': 'Tcl_FreeResult'
    'body': 'Tcl_FreeResult(${1:Tcl_Interp* interp})'
  'Tcl_GetAlias':
    'prefix': 'Tcl_GetAlias'
    'body': 'Tcl_GetAlias(${1:Tcl_Interp* interp}, ${2:char* slaveCmd}, ${3:Tcl_Interp** targetInterpPtr}, ${4:char** targetCmdPtr}, ${5:int* argcPtr}, ${6:char*** argvPtr})'
  'Tcl_GetAliasObj':
    'prefix': 'Tcl_GetAliasObj'
    'body': 'Tcl_GetAliasObj(${1:Tcl_Interp* interp}, ${2:char* slaveCmd}, ${3:Tcl_Interp** targetInterpPtr}, ${4:char** targetCmdPtr}, ${5:int* objcPtr}, ${6:Tcl_Obj*** objv})'
  'Tcl_GetAllocMutex':
    'prefix': 'Tcl_GetAllocMutex'
    'body': 'Tcl_GetAllocMutex()'
  'Tcl_GetAssocData':
    'prefix': 'Tcl_GetAssocData'
    'body': 'Tcl_GetAssocData(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_InterpDeleteProc** procPtr})'
  'Tcl_GetBignumFromObj':
    'prefix': 'Tcl_GetBignumFromObj'
    'body': 'Tcl_GetBignumFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* obj}, ${3:mp_int* value})'
  'Tcl_GetBoolean':
    'prefix': 'Tcl_GetBoolean'
    'body': 'Tcl_GetBoolean(${1:Tcl_Interp* interp}, ${2:char* src}, ${3:int* boolPtr})'
  'Tcl_GetBooleanFromObj':
    'prefix': 'Tcl_GetBooleanFromObj'
    'body': 'Tcl_GetBooleanFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int* boolPtr})'
  'Tcl_GetByteArrayFromObj':
    'prefix': 'Tcl_GetByteArrayFromObj'
    'body': 'Tcl_GetByteArrayFromObj(${1:Tcl_Obj* objPtr}, ${2:int* lengthPtr})'
  'Tcl_GetChannel':
    'prefix': 'Tcl_GetChannel'
    'body': 'Tcl_GetChannel(${1:Tcl_Interp* interp}, ${2:char* chanName}, ${3:int* modePtr})'
  'Tcl_GetChannelBufferSize':
    'prefix': 'Tcl_GetChannelBufferSize'
    'body': 'Tcl_GetChannelBufferSize(${1:Tcl_Channel chan})'
  'Tcl_GetChannelError':
    'prefix': 'Tcl_GetChannelError'
    'body': 'Tcl_GetChannelError(${1:Tcl_Channel chan}, ${2:Tcl_Obj** msg})'
  'Tcl_GetChannelErrorInterp':
    'prefix': 'Tcl_GetChannelErrorInterp'
    'body': 'Tcl_GetChannelErrorInterp(${1:Tcl_Interp* interp}, ${2:Tcl_Obj** msg})'
  'Tcl_GetChannelHandle':
    'prefix': 'Tcl_GetChannelHandle'
    'body': 'Tcl_GetChannelHandle(${1:Tcl_Channel chan}, ${2:int direction}, ${3:ClientData* handlePtr})'
  'Tcl_GetChannelInstanceData':
    'prefix': 'Tcl_GetChannelInstanceData'
    'body': 'Tcl_GetChannelInstanceData(${1:Tcl_Channel chan})'
  'Tcl_GetChannelMode':
    'prefix': 'Tcl_GetChannelMode'
    'body': 'Tcl_GetChannelMode(${1:Tcl_Channel chan})'
  'Tcl_GetChannelName':
    'prefix': 'Tcl_GetChannelName'
    'body': 'Tcl_GetChannelName(${1:Tcl_Channel chan})'
  'Tcl_GetChannelNames':
    'prefix': 'Tcl_GetChannelNames'
    'body': 'Tcl_GetChannelNames(${1:Tcl_Interp* interp})'
  'Tcl_GetChannelNamesEx':
    'prefix': 'Tcl_GetChannelNamesEx'
    'body': 'Tcl_GetChannelNamesEx(${1:Tcl_Interp* interp}, ${2:char* pattern})'
  'Tcl_GetChannelOption':
    'prefix': 'Tcl_GetChannelOption'
    'body': 'Tcl_GetChannelOption(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan}, ${3:char* optionName}, ${4:Tcl_DString* dsPtr})'
  'Tcl_GetChannelThread':
    'prefix': 'Tcl_GetChannelThread'
    'body': 'Tcl_GetChannelThread(${1:Tcl_Channel channel})'
  'Tcl_GetChannelType':
    'prefix': 'Tcl_GetChannelType'
    'body': 'Tcl_GetChannelType(${1:Tcl_Channel chan})'
  'Tcl_GetCharLength':
    'prefix': 'Tcl_GetCharLength'
    'body': 'Tcl_GetCharLength(${1:Tcl_Obj* objPtr})'
  'Tcl_GetCommandFromObj':
    'prefix': 'Tcl_GetCommandFromObj'
    'body': 'Tcl_GetCommandFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'Tcl_GetCommandFullName':
    'prefix': 'Tcl_GetCommandFullName'
    'body': 'Tcl_GetCommandFullName(${1:Tcl_Interp* interp}, ${2:Tcl_Command command}, ${3:Tcl_Obj* objPtr})'
  'Tcl_GetCommandInfo':
    'prefix': 'Tcl_GetCommandInfo'
    'body': 'Tcl_GetCommandInfo(${1:Tcl_Interp* interp}, ${2:char* cmdName}, ${3:Tcl_CmdInfo* infoPtr})'
  'Tcl_GetCommandInfoFromToken':
    'prefix': 'Tcl_GetCommandInfoFromToken'
    'body': 'Tcl_GetCommandInfoFromToken(${1:Tcl_Command token}, ${2:Tcl_CmdInfo* infoPtr})'
  'Tcl_GetCommandName':
    'prefix': 'Tcl_GetCommandName'
    'body': 'Tcl_GetCommandName(${1:Tcl_Interp* interp}, ${2:Tcl_Command command})'
  'Tcl_GetCurrentNamespace':
    'prefix': 'Tcl_GetCurrentNamespace'
    'body': 'Tcl_GetCurrentNamespace(${1:Tcl_Interp* interp})'
  'Tcl_GetCurrentThread':
    'prefix': 'Tcl_GetCurrentThread'
    'body': 'Tcl_GetCurrentThread()'
  'Tcl_GetCwd':
    'prefix': 'Tcl_GetCwd'
    'body': 'Tcl_GetCwd(${1:Tcl_Interp* interp}, ${2:Tcl_DString* cwdPtr})'
  'Tcl_GetDefaultEncodingDir':
    'prefix': 'Tcl_GetDefaultEncodingDir'
    'body': 'Tcl_GetDefaultEncodingDir()'
  'Tcl_GetDouble':
    'prefix': 'Tcl_GetDouble'
    'body': 'Tcl_GetDouble(${1:Tcl_Interp* interp}, ${2:char* src}, ${3:double* doublePtr})'
  'Tcl_GetDoubleFromObj':
    'prefix': 'Tcl_GetDoubleFromObj'
    'body': 'Tcl_GetDoubleFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:double* doublePtr})'
  'Tcl_GetEncoding':
    'prefix': 'Tcl_GetEncoding'
    'body': 'Tcl_GetEncoding(${1:Tcl_Interp* interp}, ${2:char* name})'
  'Tcl_GetEncodingFromObj':
    'prefix': 'Tcl_GetEncodingFromObj'
    'body': 'Tcl_GetEncodingFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_Encoding* encodingPtr})'
  'Tcl_GetEncodingName':
    'prefix': 'Tcl_GetEncodingName'
    'body': 'Tcl_GetEncodingName(${1:Tcl_Encoding encoding})'
  'Tcl_GetEncodingNameFromEnvironment':
    'prefix': 'Tcl_GetEncodingNameFromEnvironment'
    'body': 'Tcl_GetEncodingNameFromEnvironment(${1:Tcl_DString* bufPtr})'
  'Tcl_GetEncodingNames':
    'prefix': 'Tcl_GetEncodingNames'
    'body': 'Tcl_GetEncodingNames(${1:Tcl_Interp* interp})'
  'Tcl_GetEncodingSearchPath':
    'prefix': 'Tcl_GetEncodingSearchPath'
    'body': 'Tcl_GetEncodingSearchPath()'
  'Tcl_GetEnsembleFlags':
    'prefix': 'Tcl_GetEnsembleFlags'
    'body': 'Tcl_GetEnsembleFlags(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:int* flagsPtr})'
  'Tcl_GetEnsembleMappingDict':
    'prefix': 'Tcl_GetEnsembleMappingDict'
    'body': 'Tcl_GetEnsembleMappingDict(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj** mapDictPtr})'
  'Tcl_GetEnsembleNamespace':
    'prefix': 'Tcl_GetEnsembleNamespace'
    'body': 'Tcl_GetEnsembleNamespace(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Namespace** namespacePtrPtr})'
  'Tcl_GetEnsembleSubcommandList':
    'prefix': 'Tcl_GetEnsembleSubcommandList'
    'body': 'Tcl_GetEnsembleSubcommandList(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj** subcmdListPtr})'
  'Tcl_GetEnsembleUnknownHandler':
    'prefix': 'Tcl_GetEnsembleUnknownHandler'
    'body': 'Tcl_GetEnsembleUnknownHandler(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj** unknownListPtr})'
  'Tcl_GetErrno':
    'prefix': 'Tcl_GetErrno'
    'body': 'Tcl_GetErrno()'
  'Tcl_GetGlobalNamespace':
    'prefix': 'Tcl_GetGlobalNamespace'
    'body': 'Tcl_GetGlobalNamespace(${1:Tcl_Interp* interp})'
  'Tcl_GetHostName':
    'prefix': 'Tcl_GetHostName'
    'body': 'Tcl_GetHostName()'
  'Tcl_GetIndexFromObj':
    'prefix': 'Tcl_GetIndexFromObj'
    'body': 'Tcl_GetIndexFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:char** tablePtr}, ${4:char* msg}, ${5:int flags}, ${6:int* indexPtr})'
  'Tcl_GetIndexFromObjStruct':
    'prefix': 'Tcl_GetIndexFromObjStruct'
    'body': 'Tcl_GetIndexFromObjStruct(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:void* tablePtr}, ${4:int offset}, ${5:char* msg}, ${6:int flags}, ${7:int* indexPtr})'
  'Tcl_GetInt':
    'prefix': 'Tcl_GetInt'
    'body': 'Tcl_GetInt(${1:Tcl_Interp* interp}, ${2:char* src}, ${3:int* intPtr})'
  'Tcl_GetIntFromObj':
    'prefix': 'Tcl_GetIntFromObj'
    'body': 'Tcl_GetIntFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int* intPtr})'
  'Tcl_GetInterpPath':
    'prefix': 'Tcl_GetInterpPath'
    'body': 'Tcl_GetInterpPath(${1:Tcl_Interp* askInterp}, ${2:Tcl_Interp* slaveInterp})'
  'Tcl_GetInterpResolvers':
    'prefix': 'Tcl_GetInterpResolvers'
    'body': 'Tcl_GetInterpResolvers(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_ResolverInfo* resInfo})'
  'Tcl_GetLongFromObj':
    'prefix': 'Tcl_GetLongFromObj'
    'body': 'Tcl_GetLongFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:long* longPtr})'
  'Tcl_GetMaster':
    'prefix': 'Tcl_GetMaster'
    'body': 'Tcl_GetMaster(${1:Tcl_Interp* interp})'
  'Tcl_GetMathFuncInfo':
    'prefix': 'Tcl_GetMathFuncInfo'
    'body': 'Tcl_GetMathFuncInfo(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:int* numArgsPtr}, ${4:Tcl_ValueType** argTypesPtr}, ${5:Tcl_MathProc** procPtr}, ${6:ClientData* clientDataPtr})'
  'Tcl_GetNameOfExecutable':
    'prefix': 'Tcl_GetNameOfExecutable'
    'body': 'Tcl_GetNameOfExecutable()'
  'Tcl_GetNamespaceResolvers':
    'prefix': 'Tcl_GetNamespaceResolvers'
    'body': 'Tcl_GetNamespaceResolvers(${1:Tcl_Namespace* namespacePtr}, ${2:Tcl_ResolverInfo* resInfo})'
  'Tcl_GetNamespaceUnknownHandler':
    'prefix': 'Tcl_GetNamespaceUnknownHandler'
    'body': 'Tcl_GetNamespaceUnknownHandler(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr})'
  'Tcl_GetObjResult':
    'prefix': 'Tcl_GetObjResult'
    'body': 'Tcl_GetObjResult(${1:Tcl_Interp* interp})'
  'Tcl_GetObjType':
    'prefix': 'Tcl_GetObjType'
    'body': 'Tcl_GetObjType(${1:char* typeName})'
  'Tcl_GetOpenFile':
    'prefix': 'Tcl_GetOpenFile'
    'body': 'Tcl_GetOpenFile(${1:Tcl_Interp* interp}, ${2:char* chanID}, ${3:int forWriting}, ${4:int checkUsage}, ${5:ClientData* filePtr})'
  'Tcl_GetPathType':
    'prefix': 'Tcl_GetPathType'
    'body': 'Tcl_GetPathType(${1:char* path})'
  'Tcl_GetRange':
    'prefix': 'Tcl_GetRange'
    'body': 'Tcl_GetRange(${1:Tcl_Obj* objPtr}, ${2:int first}, ${3:int last})'
  'Tcl_GetRegExpFromObj':
    'prefix': 'Tcl_GetRegExpFromObj'
    'body': 'Tcl_GetRegExpFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* patObj}, ${3:int flags})'
  'Tcl_GetReturnOptions':
    'prefix': 'Tcl_GetReturnOptions'
    'body': 'Tcl_GetReturnOptions(${1:Tcl_Interp* interp}, ${2:int result})'
  'Tcl_GetServiceMode':
    'prefix': 'Tcl_GetServiceMode'
    'body': 'Tcl_GetServiceMode()'
  'Tcl_GetSlave':
    'prefix': 'Tcl_GetSlave'
    'body': 'Tcl_GetSlave(${1:Tcl_Interp* interp}, ${2:char* slaveName})'
  'Tcl_GetStackedChannel':
    'prefix': 'Tcl_GetStackedChannel'
    'body': 'Tcl_GetStackedChannel(${1:Tcl_Channel chan})'
  'Tcl_GetStartupScript':
    'prefix': 'Tcl_GetStartupScript'
    'body': 'Tcl_GetStartupScript(${1:char** encodingNamePtr})'
  'Tcl_GetStdChannel':
    'prefix': 'Tcl_GetStdChannel'
    'body': 'Tcl_GetStdChannel(${1:int type})'
  'Tcl_GetString':
    'prefix': 'Tcl_GetString'
    'body': 'Tcl_GetString(${1:Tcl_Obj* objPtr})'
  'Tcl_GetStringFromObj':
    'prefix': 'Tcl_GetStringFromObj'
    'body': 'Tcl_GetStringFromObj(${1:Tcl_Obj* objPtr}, ${2:int* lengthPtr})'
  'Tcl_GetStringResult':
    'prefix': 'Tcl_GetStringResult'
    'body': 'Tcl_GetStringResult(${1:Tcl_Interp* interp})'
  'Tcl_GetThreadData':
    'prefix': 'Tcl_GetThreadData'
    'body': 'Tcl_GetThreadData(${1:Tcl_ThreadDataKey* keyPtr}, ${2:int size})'
  'Tcl_GetTime':
    'prefix': 'Tcl_GetTime'
    'body': 'Tcl_GetTime(${1:Tcl_Time* timeBuf})'
  'Tcl_GetTopChannel':
    'prefix': 'Tcl_GetTopChannel'
    'body': 'Tcl_GetTopChannel(${1:Tcl_Channel chan})'
  'Tcl_GetUniChar':
    'prefix': 'Tcl_GetUniChar'
    'body': 'Tcl_GetUniChar(${1:Tcl_Obj* objPtr}, ${2:int index})'
  'Tcl_GetUnicode':
    'prefix': 'Tcl_GetUnicode'
    'body': 'Tcl_GetUnicode(${1:Tcl_Obj* objPtr})'
  'Tcl_GetUnicodeFromObj':
    'prefix': 'Tcl_GetUnicodeFromObj'
    'body': 'Tcl_GetUnicodeFromObj(${1:Tcl_Obj* objPtr}, ${2:int* lengthPtr})'
  'Tcl_GetVar':
    'prefix': 'Tcl_GetVar'
    'body': 'Tcl_GetVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags})'
  'Tcl_GetVar2':
    'prefix': 'Tcl_GetVar2'
    'body': 'Tcl_GetVar2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags})'
  'Tcl_GetVar2Ex':
    'prefix': 'Tcl_GetVar2Ex'
    'body': 'Tcl_GetVar2Ex(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags})'
  'Tcl_GetVariableFullName':
    'prefix': 'Tcl_GetVariableFullName'
    'body': 'Tcl_GetVariableFullName(${1:Tcl_Interp* interp}, ${2:Tcl_Var variable}, ${3:Tcl_Obj* objPtr})'
  'Tcl_GetVersion':
    'prefix': 'Tcl_GetVersion'
    'body': 'Tcl_GetVersion(${1:int* major}, ${2:int* minor}, ${3:int* patchLevel}, ${4:int* type})'
  'Tcl_GetWideIntFromObj':
    'prefix': 'Tcl_GetWideIntFromObj'
    'body': 'Tcl_GetWideIntFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:Tcl_WideInt* widePtr})'
  'Tcl_Gets':
    'prefix': 'Tcl_Gets'
    'body': 'Tcl_Gets(${1:Tcl_Channel chan}, ${2:Tcl_DString* dsPtr})'
  'Tcl_GetsObj':
    'prefix': 'Tcl_GetsObj'
    'body': 'Tcl_GetsObj(${1:Tcl_Channel chan}, ${2:Tcl_Obj* objPtr})'
  'Tcl_GetsObjCmd':
    'prefix': 'Tcl_GetsObjCmd'
    'body': 'Tcl_GetsObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_GlobObjCmd':
    'prefix': 'Tcl_GlobObjCmd'
    'body': 'Tcl_GlobObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_GlobalEval':
    'prefix': 'Tcl_GlobalEval'
    'body': 'Tcl_GlobalEval(${1:Tcl_Interp* interp}, ${2:char* command})'
  'Tcl_GlobalEvalObj':
    'prefix': 'Tcl_GlobalEvalObj'
    'body': 'Tcl_GlobalEvalObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr})'
  'Tcl_GlobalObjCmd':
    'prefix': 'Tcl_GlobalObjCmd'
    'body': 'Tcl_GlobalObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_HashStats':
    'prefix': 'Tcl_HashStats'
    'body': 'Tcl_HashStats(${1:Tcl_HashTable* tablePtr})'
  'Tcl_HideCommand':
    'prefix': 'Tcl_HideCommand'
    'body': 'Tcl_HideCommand(${1:Tcl_Interp* interp}, ${2:char* cmdName}, ${3:char* hiddenCmdToken})'
  'Tcl_IfObjCmd':
    'prefix': 'Tcl_IfObjCmd'
    'body': 'Tcl_IfObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Import':
    'prefix': 'Tcl_Import'
    'body': 'Tcl_Import(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr}, ${3:char* pattern}, ${4:int allowOverwrite})'
  'Tcl_IncrObjCmd':
    'prefix': 'Tcl_IncrObjCmd'
    'body': 'Tcl_IncrObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_IncrRefCount':
    'prefix': 'Tcl_IncrRefCount'
    'body': 'Tcl_IncrRefCount(${1:Tcl_Obj* objPtr})'
  'Tcl_Init':
    'prefix': 'Tcl_Init'
    'body': 'Tcl_Init(${1:Tcl_Interp* interp})'
  'Tcl_InitBignumFromDouble':
    'prefix': 'Tcl_InitBignumFromDouble'
    'body': 'Tcl_InitBignumFromDouble(${1:Tcl_Interp* interp}, ${2:double initval}, ${3:mp_int* toInit})'
  'Tcl_InitCustomHashTable':
    'prefix': 'Tcl_InitCustomHashTable'
    'body': 'Tcl_InitCustomHashTable(${1:Tcl_HashTable* tablePtr}, ${2:int keyType}, ${3:Tcl_HashKeyType* typePtr})'
  'Tcl_InitHashTable':
    'prefix': 'Tcl_InitHashTable'
    'body': 'Tcl_InitHashTable(${1:Tcl_HashTable* tablePtr}, ${2:int keyType})'
  'Tcl_InitMemory':
    'prefix': 'Tcl_InitMemory'
    'body': 'Tcl_InitMemory(${1:Tcl_Interp* interp})'
  'Tcl_InitNotifier':
    'prefix': 'Tcl_InitNotifier'
    'body': 'Tcl_InitNotifier()'
  'Tcl_InitObjHashTable':
    'prefix': 'Tcl_InitObjHashTable'
    'body': 'Tcl_InitObjHashTable(${1:Tcl_HashTable* tablePtr})'
  'Tcl_InitStubs':
    'prefix': 'Tcl_InitStubs'
    'body': 'Tcl_InitStubs(${1:Tcl_Interp* interp}, ${2:char* version}, ${3:int exact})'
  'Tcl_InputBlocked':
    'prefix': 'Tcl_InputBlocked'
    'body': 'Tcl_InputBlocked(${1:Tcl_Channel chan})'
  'Tcl_InputBuffered':
    'prefix': 'Tcl_InputBuffered'
    'body': 'Tcl_InputBuffered(${1:Tcl_Channel chan})'
  'Tcl_InterpDeleted':
    'prefix': 'Tcl_InterpDeleted'
    'body': 'Tcl_InterpDeleted(${1:Tcl_Interp* interp})'
  'Tcl_InterpObjCmd':
    'prefix': 'Tcl_InterpObjCmd'
    'body': 'Tcl_InterpObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int argc}, ${4:Tcl_Obj ** objv})'
  'Tcl_InvalidateStringRep':
    'prefix': 'Tcl_InvalidateStringRep'
    'body': 'Tcl_InvalidateStringRep(${1:Tcl_Obj* objPtr})'
  'Tcl_IsChannelExisting':
    'prefix': 'Tcl_IsChannelExisting'
    'body': 'Tcl_IsChannelExisting(${1:char* channelName})'
  'Tcl_IsChannelRegistered':
    'prefix': 'Tcl_IsChannelRegistered'
    'body': 'Tcl_IsChannelRegistered(${1:Tcl_Interp* interp}, ${2:Tcl_Channel channel})'
  'Tcl_IsChannelShared':
    'prefix': 'Tcl_IsChannelShared'
    'body': 'Tcl_IsChannelShared(${1:Tcl_Channel channel})'
  'Tcl_IsEnsemble':
    'prefix': 'Tcl_IsEnsemble'
    'body': 'Tcl_IsEnsemble(${1:Tcl_Command token})'
  'Tcl_IsSafe':
    'prefix': 'Tcl_IsSafe'
    'body': 'Tcl_IsSafe(${1:Tcl_Interp* interp})'
  'Tcl_IsShared':
    'prefix': 'Tcl_IsShared'
    'body': 'Tcl_IsShared(${1:Tcl_Obj* objPtr})'
  'Tcl_IsStandardChannel':
    'prefix': 'Tcl_IsStandardChannel'
    'body': 'Tcl_IsStandardChannel(${1:Tcl_Channel channel})'
  'Tcl_JoinObjCmd':
    'prefix': 'Tcl_JoinObjCmd'
    'body': 'Tcl_JoinObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_JoinPath':
    'prefix': 'Tcl_JoinPath'
    'body': 'Tcl_JoinPath(${1:int argc}, ${2:char ** argv}, ${3:Tcl_DString* resultPtr})'
  'Tcl_JoinThread':
    'prefix': 'Tcl_JoinThread'
    'body': 'Tcl_JoinThread(${1:Tcl_ThreadId threadId}, ${2:int* result})'
  'Tcl_LappendObjCmd':
    'prefix': 'Tcl_LappendObjCmd'
    'body': 'Tcl_LappendObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LassignObjCmd':
    'prefix': 'Tcl_LassignObjCmd'
    'body': 'Tcl_LassignObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LimitAddHandler':
    'prefix': 'Tcl_LimitAddHandler'
    'body': 'Tcl_LimitAddHandler(${1:Tcl_Interp* interp}, ${2:int type}, ${3:Tcl_LimitHandlerProc* handlerProc}, ${4:ClientData clientData}, ${5:Tcl_LimitHandlerDeleteProc* deleteProc})'
  'Tcl_LimitCheck':
    'prefix': 'Tcl_LimitCheck'
    'body': 'Tcl_LimitCheck(${1:Tcl_Interp* interp})'
  'Tcl_LimitExceeded':
    'prefix': 'Tcl_LimitExceeded'
    'body': 'Tcl_LimitExceeded(${1:Tcl_Interp* interp})'
  'Tcl_LimitGetCommands':
    'prefix': 'Tcl_LimitGetCommands'
    'body': 'Tcl_LimitGetCommands(${1:Tcl_Interp* interp})'
  'Tcl_LimitGetGranularity':
    'prefix': 'Tcl_LimitGetGranularity'
    'body': 'Tcl_LimitGetGranularity(${1:Tcl_Interp* interp}, ${2:int type})'
  'Tcl_LimitGetTime':
    'prefix': 'Tcl_LimitGetTime'
    'body': 'Tcl_LimitGetTime(${1:Tcl_Interp* interp}, ${2:Tcl_Time* timeLimitPtr})'
  'Tcl_LimitReady':
    'prefix': 'Tcl_LimitReady'
    'body': 'Tcl_LimitReady(${1:Tcl_Interp* interp})'
  'Tcl_LimitRemoveHandler':
    'prefix': 'Tcl_LimitRemoveHandler'
    'body': 'Tcl_LimitRemoveHandler(${1:Tcl_Interp* interp}, ${2:int type}, ${3:Tcl_LimitHandlerProc* handlerProc}, ${4:ClientData clientData})'
  'Tcl_LimitSetCommands':
    'prefix': 'Tcl_LimitSetCommands'
    'body': 'Tcl_LimitSetCommands(${1:Tcl_Interp* interp}, ${2:int commandLimit})'
  'Tcl_LimitSetGranularity':
    'prefix': 'Tcl_LimitSetGranularity'
    'body': 'Tcl_LimitSetGranularity(${1:Tcl_Interp* interp}, ${2:int type}, ${3:int granularity})'
  'Tcl_LimitSetTime':
    'prefix': 'Tcl_LimitSetTime'
    'body': 'Tcl_LimitSetTime(${1:Tcl_Interp* interp}, ${2:Tcl_Time* timeLimitPtr})'
  'Tcl_LimitTypeEnabled':
    'prefix': 'Tcl_LimitTypeEnabled'
    'body': 'Tcl_LimitTypeEnabled(${1:Tcl_Interp* interp}, ${2:int type})'
  'Tcl_LimitTypeExceeded':
    'prefix': 'Tcl_LimitTypeExceeded'
    'body': 'Tcl_LimitTypeExceeded(${1:Tcl_Interp* interp}, ${2:int type})'
  'Tcl_LimitTypeReset':
    'prefix': 'Tcl_LimitTypeReset'
    'body': 'Tcl_LimitTypeReset(${1:Tcl_Interp* interp}, ${2:int type})'
  'Tcl_LimitTypeSet':
    'prefix': 'Tcl_LimitTypeSet'
    'body': 'Tcl_LimitTypeSet(${1:Tcl_Interp* interp}, ${2:int type})'
  'Tcl_LindexObjCmd':
    'prefix': 'Tcl_LindexObjCmd'
    'body': 'Tcl_LindexObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LinkVar':
    'prefix': 'Tcl_LinkVar'
    'body': 'Tcl_LinkVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:char* addr}, ${4:int type})'
  'Tcl_LinsertObjCmd':
    'prefix': 'Tcl_LinsertObjCmd'
    'body': 'Tcl_LinsertObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ListMathFuncs':
    'prefix': 'Tcl_ListMathFuncs'
    'body': 'Tcl_ListMathFuncs(${1:Tcl_Interp* interp}, ${2:char* pattern})'
  'Tcl_ListObjAppendElement':
    'prefix': 'Tcl_ListObjAppendElement'
    'body': 'Tcl_ListObjAppendElement(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:Tcl_Obj* objPtr})'
  'Tcl_ListObjAppendList':
    'prefix': 'Tcl_ListObjAppendList'
    'body': 'Tcl_ListObjAppendList(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:Tcl_Obj* elemListPtr})'
  'Tcl_ListObjCmd':
    'prefix': 'Tcl_ListObjCmd'
    'body': 'Tcl_ListObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ListObjGetElements':
    'prefix': 'Tcl_ListObjGetElements'
    'body': 'Tcl_ListObjGetElements(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int* objcPtr}, ${4:Tcl_Obj*** objvPtr})'
  'Tcl_ListObjIndex':
    'prefix': 'Tcl_ListObjIndex'
    'body': 'Tcl_ListObjIndex(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int index}, ${4:Tcl_Obj** objPtrPtr})'
  'Tcl_ListObjLength':
    'prefix': 'Tcl_ListObjLength'
    'body': 'Tcl_ListObjLength(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int* lengthPtr})'
  'Tcl_ListObjReplace':
    'prefix': 'Tcl_ListObjReplace'
    'body': 'Tcl_ListObjReplace(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* listPtr}, ${3:int first}, ${4:int count}, ${5:int objc}, ${6:Tcl_Obj ** objv})'
  'Tcl_LlengthObjCmd':
    'prefix': 'Tcl_LlengthObjCmd'
    'body': 'Tcl_LlengthObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LoadObjCmd':
    'prefix': 'Tcl_LoadObjCmd'
    'body': 'Tcl_LoadObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LogCommandInfo':
    'prefix': 'Tcl_LogCommandInfo'
    'body': 'Tcl_LogCommandInfo(${1:Tcl_Interp* interp}, ${2:char* script}, ${3:char* command}, ${4:int length})'
  'Tcl_LrangeObjCmd':
    'prefix': 'Tcl_LrangeObjCmd'
    'body': 'Tcl_LrangeObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LrepeatObjCmd':
    'prefix': 'Tcl_LrepeatObjCmd'
    'body': 'Tcl_LrepeatObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LreplaceObjCmd':
    'prefix': 'Tcl_LreplaceObjCmd'
    'body': 'Tcl_LreplaceObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LreverseObjCmd':
    'prefix': 'Tcl_LreverseObjCmd'
    'body': 'Tcl_LreverseObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LsearchObjCmd':
    'prefix': 'Tcl_LsearchObjCmd'
    'body': 'Tcl_LsearchObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LsetObjCmd':
    'prefix': 'Tcl_LsetObjCmd'
    'body': 'Tcl_LsetObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_LsortObjCmd':
    'prefix': 'Tcl_LsortObjCmd'
    'body': 'Tcl_LsortObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Main':
    'prefix': 'Tcl_Main'
    'body': 'Tcl_Main(${1:int argc}, ${2:char** argv}, ${3:Tcl_AppInitProc* appInitProc})'
  'Tcl_MakeFileChannel':
    'prefix': 'Tcl_MakeFileChannel'
    'body': 'Tcl_MakeFileChannel(${1:ClientData handle}, ${2:int mode})'
  'Tcl_MakeSafe':
    'prefix': 'Tcl_MakeSafe'
    'body': 'Tcl_MakeSafe(${1:Tcl_Interp* interp})'
  'Tcl_MakeTcpClientChannel':
    'prefix': 'Tcl_MakeTcpClientChannel'
    'body': 'Tcl_MakeTcpClientChannel(${1:ClientData tcpSocket})'
  'Tcl_Merge':
    'prefix': 'Tcl_Merge'
    'body': 'Tcl_Merge(${1:int argc}, ${2:char ** argv})'
  'Tcl_MutexFinalize':
    'prefix': 'Tcl_MutexFinalize'
    'body': 'Tcl_MutexFinalize(${1:Tcl_Mutex* mutex})'
  'Tcl_MutexLock':
    'prefix': 'Tcl_MutexLock'
    'body': 'Tcl_MutexLock(${1:Tcl_Mutex* mutexPtr})'
  'Tcl_MutexUnlock':
    'prefix': 'Tcl_MutexUnlock'
    'body': 'Tcl_MutexUnlock(${1:Tcl_Mutex* mutexPtr})'
  'Tcl_NamespaceObjCmd':
    'prefix': 'Tcl_NamespaceObjCmd'
    'body': 'Tcl_NamespaceObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_NewBignumObj':
    'prefix': 'Tcl_NewBignumObj'
    'body': 'Tcl_NewBignumObj(${1:mp_int* value})'
  'Tcl_NewBooleanObj':
    'prefix': 'Tcl_NewBooleanObj'
    'body': 'Tcl_NewBooleanObj(${1:int boolValue})'
  'Tcl_NewByteArrayObj':
    'prefix': 'Tcl_NewByteArrayObj'
    'body': 'Tcl_NewByteArrayObj(${1:unsigned char* bytes}, ${2:int length})'
  'Tcl_NewDictObj':
    'prefix': 'Tcl_NewDictObj'
    'body': 'Tcl_NewDictObj()'
  'Tcl_NewDoubleObj':
    'prefix': 'Tcl_NewDoubleObj'
    'body': 'Tcl_NewDoubleObj(${1:double doubleValue})'
  'Tcl_NewIntObj':
    'prefix': 'Tcl_NewIntObj'
    'body': 'Tcl_NewIntObj(${1:int intValue})'
  'Tcl_NewListObj':
    'prefix': 'Tcl_NewListObj'
    'body': 'Tcl_NewListObj(${1:int objc}, ${2:Tcl_Obj ** objv})'
  'Tcl_NewLongObj':
    'prefix': 'Tcl_NewLongObj'
    'body': 'Tcl_NewLongObj(${1:long longValue})'
  'Tcl_NewObj':
    'prefix': 'Tcl_NewObj'
    'body': 'Tcl_NewObj()'
  'Tcl_NewStringObj':
    'prefix': 'Tcl_NewStringObj'
    'body': 'Tcl_NewStringObj(${1:char* bytes}, ${2:int length})'
  'Tcl_NewUnicodeObj':
    'prefix': 'Tcl_NewUnicodeObj'
    'body': 'Tcl_NewUnicodeObj(${1:Tcl_UniChar* unicode}, ${2:int numChars})'
  'Tcl_NewWideIntObj':
    'prefix': 'Tcl_NewWideIntObj'
    'body': 'Tcl_NewWideIntObj(${1:Tcl_WideInt wideValue})'
  'Tcl_NextHashEntry':
    'prefix': 'Tcl_NextHashEntry'
    'body': 'Tcl_NextHashEntry(${1:Tcl_HashSearch* searchPtr})'
  'Tcl_NotifyChannel':
    'prefix': 'Tcl_NotifyChannel'
    'body': 'Tcl_NotifyChannel(${1:Tcl_Channel channel}, ${2:int mask})'
  'Tcl_NumUtfChars':
    'prefix': 'Tcl_NumUtfChars'
    'body': 'Tcl_NumUtfChars(${1:char* src}, ${2:int length})'
  'Tcl_ObjGetVar2':
    'prefix': 'Tcl_ObjGetVar2'
    'body': 'Tcl_ObjGetVar2(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:int flags})'
  'Tcl_ObjPrintf':
    'prefix': 'Tcl_ObjPrintf'
    'body': 'Tcl_ObjPrintf(${1:char* format})'
  'Tcl_ObjSetVar2':
    'prefix': 'Tcl_ObjSetVar2'
    'body': 'Tcl_ObjSetVar2(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* part1Ptr}, ${3:Tcl_Obj* part2Ptr}, ${4:Tcl_Obj* newValuePtr}, ${5:int flags})'
  'Tcl_OpenCommandChannel':
    'prefix': 'Tcl_OpenCommandChannel'
    'body': 'Tcl_OpenCommandChannel(${1:Tcl_Interp* interp}, ${2:int argc}, ${3:char** argv}, ${4:int flags})'
  'Tcl_OpenFileChannel':
    'prefix': 'Tcl_OpenFileChannel'
    'body': 'Tcl_OpenFileChannel(${1:Tcl_Interp* interp}, ${2:char* fileName}, ${3:char* modeString}, ${4:int permissions})'
  'Tcl_OpenObjCmd':
    'prefix': 'Tcl_OpenObjCmd'
    'body': 'Tcl_OpenObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_OpenTcpClient':
    'prefix': 'Tcl_OpenTcpClient'
    'body': 'Tcl_OpenTcpClient(${1:Tcl_Interp* interp}, ${2:int port}, ${3:char* address}, ${4:char* myaddr}, ${5:int myport}, ${6:int async})'
  'Tcl_OpenTcpServer':
    'prefix': 'Tcl_OpenTcpServer'
    'body': 'Tcl_OpenTcpServer(${1:Tcl_Interp* interp}, ${2:int port}, ${3:char* host}, ${4:Tcl_TcpAcceptProc* acceptProc}, ${5:ClientData callbackData})'
  'Tcl_OutputBuffered':
    'prefix': 'Tcl_OutputBuffered'
    'body': 'Tcl_OutputBuffered(${1:Tcl_Channel chan})'
  'Tcl_PackageObjCmd':
    'prefix': 'Tcl_PackageObjCmd'
    'body': 'Tcl_PackageObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Panic':
    'prefix': 'Tcl_Panic'
    'body': 'Tcl_Panic(${1:char* format})'
  'Tcl_PanicVA':
    'prefix': 'Tcl_PanicVA'
    'body': 'Tcl_PanicVA(${1:char* format}, ${2:va_list argList})'
  'Tcl_ParseBraces':
    'prefix': 'Tcl_ParseBraces'
    'body': 'Tcl_ParseBraces(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:int numBytes}, ${4:Tcl_Parse* parsePtr}, ${5:int append}, ${6:char** termPtr})'
  'Tcl_ParseCommand':
    'prefix': 'Tcl_ParseCommand'
    'body': 'Tcl_ParseCommand(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:int numBytes}, ${4:int nested}, ${5:Tcl_Parse* parsePtr})'
  'Tcl_ParseExpr':
    'prefix': 'Tcl_ParseExpr'
    'body': 'Tcl_ParseExpr(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:int numBytes}, ${4:Tcl_Parse* parsePtr})'
  'Tcl_ParseQuotedString':
    'prefix': 'Tcl_ParseQuotedString'
    'body': 'Tcl_ParseQuotedString(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:int numBytes}, ${4:Tcl_Parse* parsePtr}, ${5:int append}, ${6:char** termPtr})'
  'Tcl_ParseVar':
    'prefix': 'Tcl_ParseVar'
    'body': 'Tcl_ParseVar(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:char** termPtr})'
  'Tcl_ParseVarName':
    'prefix': 'Tcl_ParseVarName'
    'body': 'Tcl_ParseVarName(${1:Tcl_Interp* interp}, ${2:char* start}, ${3:int numBytes}, ${4:Tcl_Parse* parsePtr}, ${5:int append})'
  'Tcl_PidObjCmd':
    'prefix': 'Tcl_PidObjCmd'
    'body': 'Tcl_PidObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_PkgInitStubsCheck':
    'prefix': 'Tcl_PkgInitStubsCheck'
    'body': 'Tcl_PkgInitStubsCheck(${1:Tcl_Interp* interp}, ${2:char* version}, ${3:int exact})'
  'Tcl_PkgPresent':
    'prefix': 'Tcl_PkgPresent'
    'body': 'Tcl_PkgPresent(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version}, ${4:int exact})'
  'Tcl_PkgPresentEx':
    'prefix': 'Tcl_PkgPresentEx'
    'body': 'Tcl_PkgPresentEx(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version}, ${4:int exact}, ${5:ClientData* clientDataPtr})'
  'Tcl_PkgProvide':
    'prefix': 'Tcl_PkgProvide'
    'body': 'Tcl_PkgProvide(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version})'
  'Tcl_PkgProvideEx':
    'prefix': 'Tcl_PkgProvideEx'
    'body': 'Tcl_PkgProvideEx(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version}, ${4:ClientData clientData})'
  'Tcl_PkgRequire':
    'prefix': 'Tcl_PkgRequire'
    'body': 'Tcl_PkgRequire(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version}, ${4:int exact})'
  'Tcl_PkgRequireEx':
    'prefix': 'Tcl_PkgRequireEx'
    'body': 'Tcl_PkgRequireEx(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:char* version}, ${4:int exact}, ${5:ClientData* clientDataPtr})'
  'Tcl_PkgRequireProc':
    'prefix': 'Tcl_PkgRequireProc'
    'body': 'Tcl_PkgRequireProc(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:int objc}, ${4:Tcl_Obj ** objv}, ${5:ClientData* clientDataPtr})'
  'Tcl_PopCallFrame':
    'prefix': 'Tcl_PopCallFrame'
    'body': 'Tcl_PopCallFrame(${1:Tcl_Interp* interp})'
  'Tcl_PosixError':
    'prefix': 'Tcl_PosixError'
    'body': 'Tcl_PosixError(${1:Tcl_Interp* interp})'
  'Tcl_Preserve':
    'prefix': 'Tcl_Preserve'
    'body': 'Tcl_Preserve(${1:ClientData data})'
  'Tcl_PrintDouble':
    'prefix': 'Tcl_PrintDouble'
    'body': 'Tcl_PrintDouble(${1:Tcl_Interp* interp}, ${2:double value}, ${3:char* dst})'
  'Tcl_ProcObjCmd':
    'prefix': 'Tcl_ProcObjCmd'
    'body': 'Tcl_ProcObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_PushCallFrame':
    'prefix': 'Tcl_PushCallFrame'
    'body': 'Tcl_PushCallFrame(${1:Tcl_Interp* interp}, ${2:Tcl_CallFrame* framePtr}, ${3:Tcl_Namespace* nsPtr}, ${4:int isProcCallFrame})'
  'Tcl_PutEnv':
    'prefix': 'Tcl_PutEnv'
    'body': 'Tcl_PutEnv(${1:char* assignment})'
  'Tcl_PutsObjCmd':
    'prefix': 'Tcl_PutsObjCmd'
    'body': 'Tcl_PutsObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_PwdObjCmd':
    'prefix': 'Tcl_PwdObjCmd'
    'body': 'Tcl_PwdObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_QueryTimeProc':
    'prefix': 'Tcl_QueryTimeProc'
    'body': 'Tcl_QueryTimeProc(${1:Tcl_GetTimeProc** getProc}, ${2:Tcl_ScaleTimeProc** scaleProc}, ${3:ClientData* clientData})'
  'Tcl_QueueEvent':
    'prefix': 'Tcl_QueueEvent'
    'body': 'Tcl_QueueEvent(${1:Tcl_Event* evPtr}, ${2:Tcl_QueuePosition position})'
  'Tcl_Read':
    'prefix': 'Tcl_Read'
    'body': 'Tcl_Read(${1:Tcl_Channel chan}, ${2:char* bufPtr}, ${3:int toRead})'
  'Tcl_ReadChars':
    'prefix': 'Tcl_ReadChars'
    'body': 'Tcl_ReadChars(${1:Tcl_Channel channel}, ${2:Tcl_Obj* objPtr}, ${3:int charsToRead}, ${4:int appendFlag})'
  'Tcl_ReadObjCmd':
    'prefix': 'Tcl_ReadObjCmd'
    'body': 'Tcl_ReadObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ReadRaw':
    'prefix': 'Tcl_ReadRaw'
    'body': 'Tcl_ReadRaw(${1:Tcl_Channel chan}, ${2:char* dst}, ${3:int bytesToRead})'
  'Tcl_Realloc':
    'prefix': 'Tcl_Realloc'
    'body': 'Tcl_Realloc(${1:char* ptr}, ${2:unsigned int size})'
  'Tcl_ReapDetachedProcs':
    'prefix': 'Tcl_ReapDetachedProcs'
    'body': 'Tcl_ReapDetachedProcs()'
  'Tcl_RecordAndEval':
    'prefix': 'Tcl_RecordAndEval'
    'body': 'Tcl_RecordAndEval(${1:Tcl_Interp* interp}, ${2:char* cmd}, ${3:int flags})'
  'Tcl_RecordAndEvalObj':
    'prefix': 'Tcl_RecordAndEvalObj'
    'body': 'Tcl_RecordAndEvalObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* cmdPtr}, ${3:int flags})'
  'Tcl_RegExpCompile':
    'prefix': 'Tcl_RegExpCompile'
    'body': 'Tcl_RegExpCompile(${1:Tcl_Interp* interp}, ${2:char* pattern})'
  'Tcl_RegExpExec':
    'prefix': 'Tcl_RegExpExec'
    'body': 'Tcl_RegExpExec(${1:Tcl_Interp* interp}, ${2:Tcl_RegExp regexp}, ${3:char* text}, ${4:char* start})'
  'Tcl_RegExpExecObj':
    'prefix': 'Tcl_RegExpExecObj'
    'body': 'Tcl_RegExpExecObj(${1:Tcl_Interp* interp}, ${2:Tcl_RegExp regexp}, ${3:Tcl_Obj* textObj}, ${4:int offset}, ${5:int nmatches}, ${6:int flags})'
  'Tcl_RegExpGetInfo':
    'prefix': 'Tcl_RegExpGetInfo'
    'body': 'Tcl_RegExpGetInfo(${1:Tcl_RegExp regexp}, ${2:Tcl_RegExpInfo* infoPtr})'
  'Tcl_RegExpMatch':
    'prefix': 'Tcl_RegExpMatch'
    'body': 'Tcl_RegExpMatch(${1:Tcl_Interp* interp}, ${2:char* text}, ${3:char* pattern})'
  'Tcl_RegExpMatchObj':
    'prefix': 'Tcl_RegExpMatchObj'
    'body': 'Tcl_RegExpMatchObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* textObj}, ${3:Tcl_Obj* patternObj})'
  'Tcl_RegExpRange':
    'prefix': 'Tcl_RegExpRange'
    'body': 'Tcl_RegExpRange(${1:Tcl_RegExp regexp}, ${2:int index}, ${3:char** startPtr}, ${4:char** endPtr})'
  'Tcl_RegexpObjCmd':
    'prefix': 'Tcl_RegexpObjCmd'
    'body': 'Tcl_RegexpObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_RegisterChannel':
    'prefix': 'Tcl_RegisterChannel'
    'body': 'Tcl_RegisterChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'Tcl_RegisterConfig':
    'prefix': 'Tcl_RegisterConfig'
    'body': 'Tcl_RegisterConfig(${1:Tcl_Interp* interp}, ${2:char* pkgName}, ${3:Tcl_Config* configuration}, ${4:char* valEncoding})'
  'Tcl_RegisterObjType':
    'prefix': 'Tcl_RegisterObjType'
    'body': 'Tcl_RegisterObjType(${1:Tcl_ObjType* typePtr})'
  'Tcl_RegsubObjCmd':
    'prefix': 'Tcl_RegsubObjCmd'
    'body': 'Tcl_RegsubObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Release':
    'prefix': 'Tcl_Release'
    'body': 'Tcl_Release(${1:ClientData clientData})'
  'Tcl_RemoveInterpResolvers':
    'prefix': 'Tcl_RemoveInterpResolvers'
    'body': 'Tcl_RemoveInterpResolvers(${1:Tcl_Interp* interp}, ${2:char* name})'
  'Tcl_RenameObjCmd':
    'prefix': 'Tcl_RenameObjCmd'
    'body': 'Tcl_RenameObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_ResetResult':
    'prefix': 'Tcl_ResetResult'
    'body': 'Tcl_ResetResult(${1:Tcl_Interp* interp})'
  'Tcl_RestoreInterpState':
    'prefix': 'Tcl_RestoreInterpState'
    'body': 'Tcl_RestoreInterpState(${1:Tcl_Interp* interp}, ${2:Tcl_InterpState state})'
  'Tcl_RestoreResult':
    'prefix': 'Tcl_RestoreResult'
    'body': 'Tcl_RestoreResult(${1:Tcl_Interp* interp}, ${2:Tcl_SavedResult* statePtr})'
  'Tcl_ReturnObjCmd':
    'prefix': 'Tcl_ReturnObjCmd'
    'body': 'Tcl_ReturnObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SaveInterpState':
    'prefix': 'Tcl_SaveInterpState'
    'body': 'Tcl_SaveInterpState(${1:Tcl_Interp* interp}, ${2:int status})'
  'Tcl_SaveResult':
    'prefix': 'Tcl_SaveResult'
    'body': 'Tcl_SaveResult(${1:Tcl_Interp* interp}, ${2:Tcl_SavedResult* statePtr})'
  'Tcl_ScanCountedElement':
    'prefix': 'Tcl_ScanCountedElement'
    'body': 'Tcl_ScanCountedElement(${1:char* str}, ${2:int length}, ${3:int* flagPtr})'
  'Tcl_ScanElement':
    'prefix': 'Tcl_ScanElement'
    'body': 'Tcl_ScanElement(${1:char* str}, ${2:int* flagPtr})'
  'Tcl_ScanObjCmd':
    'prefix': 'Tcl_ScanObjCmd'
    'body': 'Tcl_ScanObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Seek':
    'prefix': 'Tcl_Seek'
    'body': 'Tcl_Seek(${1:Tcl_Channel chan}, ${2:Tcl_WideInt offset}, ${3:int mode})'
  'Tcl_SeekObjCmd':
    'prefix': 'Tcl_SeekObjCmd'
    'body': 'Tcl_SeekObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SeekOld':
    'prefix': 'Tcl_SeekOld'
    'body': 'Tcl_SeekOld(${1:Tcl_Channel chan}, ${2:int offset}, ${3:int mode})'
  'Tcl_ServiceAll':
    'prefix': 'Tcl_ServiceAll'
    'body': 'Tcl_ServiceAll()'
  'Tcl_ServiceEvent':
    'prefix': 'Tcl_ServiceEvent'
    'body': 'Tcl_ServiceEvent(${1:int flags})'
  'Tcl_ServiceModeHook':
    'prefix': 'Tcl_ServiceModeHook'
    'body': 'Tcl_ServiceModeHook(${1:int mode})'
  'Tcl_SetAssocData':
    'prefix': 'Tcl_SetAssocData'
    'body': 'Tcl_SetAssocData(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_InterpDeleteProc* proc}, ${4:ClientData clientData})'
  'Tcl_SetBignumObj':
    'prefix': 'Tcl_SetBignumObj'
    'body': 'Tcl_SetBignumObj(${1:Tcl_Obj* obj}, ${2:mp_int* value})'
  'Tcl_SetBooleanObj':
    'prefix': 'Tcl_SetBooleanObj'
    'body': 'Tcl_SetBooleanObj(${1:Tcl_Obj* objPtr}, ${2:int boolValue})'
  'Tcl_SetByteArrayLength':
    'prefix': 'Tcl_SetByteArrayLength'
    'body': 'Tcl_SetByteArrayLength(${1:Tcl_Obj* objPtr}, ${2:int length})'
  'Tcl_SetByteArrayObj':
    'prefix': 'Tcl_SetByteArrayObj'
    'body': 'Tcl_SetByteArrayObj(${1:Tcl_Obj* objPtr}, ${2:unsigned char* bytes}, ${3:int length})'
  'Tcl_SetChannelBufferSize':
    'prefix': 'Tcl_SetChannelBufferSize'
    'body': 'Tcl_SetChannelBufferSize(${1:Tcl_Channel chan}, ${2:int sz})'
  'Tcl_SetChannelError':
    'prefix': 'Tcl_SetChannelError'
    'body': 'Tcl_SetChannelError(${1:Tcl_Channel chan}, ${2:Tcl_Obj* msg})'
  'Tcl_SetChannelErrorInterp':
    'prefix': 'Tcl_SetChannelErrorInterp'
    'body': 'Tcl_SetChannelErrorInterp(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* msg})'
  'Tcl_SetChannelOption':
    'prefix': 'Tcl_SetChannelOption'
    'body': 'Tcl_SetChannelOption(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan}, ${3:char* optionName}, ${4:char* newValue})'
  'Tcl_SetCommandInfo':
    'prefix': 'Tcl_SetCommandInfo'
    'body': 'Tcl_SetCommandInfo(${1:Tcl_Interp* interp}, ${2:char* cmdName}, ${3:Tcl_CmdInfo* infoPtr})'
  'Tcl_SetCommandInfoFromToken':
    'prefix': 'Tcl_SetCommandInfoFromToken'
    'body': 'Tcl_SetCommandInfoFromToken(${1:Tcl_Command token}, ${2:Tcl_CmdInfo* infoPtr})'
  'Tcl_SetDefaultEncodingDir':
    'prefix': 'Tcl_SetDefaultEncodingDir'
    'body': 'Tcl_SetDefaultEncodingDir(${1:char* path})'
  'Tcl_SetDoubleObj':
    'prefix': 'Tcl_SetDoubleObj'
    'body': 'Tcl_SetDoubleObj(${1:Tcl_Obj* objPtr}, ${2:double doubleValue})'
  'Tcl_SetEncodingSearchPath':
    'prefix': 'Tcl_SetEncodingSearchPath'
    'body': 'Tcl_SetEncodingSearchPath(${1:Tcl_Obj* searchPath})'
  'Tcl_SetEnsembleFlags':
    'prefix': 'Tcl_SetEnsembleFlags'
    'body': 'Tcl_SetEnsembleFlags(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:int flags})'
  'Tcl_SetEnsembleMappingDict':
    'prefix': 'Tcl_SetEnsembleMappingDict'
    'body': 'Tcl_SetEnsembleMappingDict(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj* mapDict})'
  'Tcl_SetEnsembleSubcommandList':
    'prefix': 'Tcl_SetEnsembleSubcommandList'
    'body': 'Tcl_SetEnsembleSubcommandList(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj* subcmdList})'
  'Tcl_SetEnsembleUnknownHandler':
    'prefix': 'Tcl_SetEnsembleUnknownHandler'
    'body': 'Tcl_SetEnsembleUnknownHandler(${1:Tcl_Interp* interp}, ${2:Tcl_Command token}, ${3:Tcl_Obj* unknownList})'
  'Tcl_SetErrno':
    'prefix': 'Tcl_SetErrno'
    'body': 'Tcl_SetErrno(${1:int err})'
  'Tcl_SetErrorCode':
    'prefix': 'Tcl_SetErrorCode'
    'body': 'Tcl_SetErrorCode(${1:Tcl_Interp* interp})'
  'Tcl_SetErrorCodeVA':
    'prefix': 'Tcl_SetErrorCodeVA'
    'body': 'Tcl_SetErrorCodeVA(${1:Tcl_Interp* interp}, ${2:va_list argList})'
  'Tcl_SetExitProc':
    'prefix': 'Tcl_SetExitProc'
    'body': 'Tcl_SetExitProc(${1:Tcl_ExitProc* proc})'
  'Tcl_SetIntObj':
    'prefix': 'Tcl_SetIntObj'
    'body': 'Tcl_SetIntObj(${1:Tcl_Obj* objPtr}, ${2:int intValue})'
  'Tcl_SetListObj':
    'prefix': 'Tcl_SetListObj'
    'body': 'Tcl_SetListObj(${1:Tcl_Obj* objPtr}, ${2:int objc}, ${3:Tcl_Obj ** objv})'
  'Tcl_SetLongObj':
    'prefix': 'Tcl_SetLongObj'
    'body': 'Tcl_SetLongObj(${1:Tcl_Obj* objPtr}, ${2:long longValue})'
  'Tcl_SetMainLoop':
    'prefix': 'Tcl_SetMainLoop'
    'body': 'Tcl_SetMainLoop(${1:Tcl_MainLoopProc* proc})'
  'Tcl_SetMaxBlockTime':
    'prefix': 'Tcl_SetMaxBlockTime'
    'body': 'Tcl_SetMaxBlockTime(${1:Tcl_Time* timePtr})'
  'Tcl_SetNamespaceResolvers':
    'prefix': 'Tcl_SetNamespaceResolvers'
    'body': 'Tcl_SetNamespaceResolvers(${1:Tcl_Namespace* namespacePtr}, ${2:Tcl_ResolveCmdProc* cmdProc}, ${3:Tcl_ResolveVarProc* varProc}, ${4:Tcl_ResolveCompiledVarProc* compiledVarProc})'
  'Tcl_SetNamespaceUnknownHandler':
    'prefix': 'Tcl_SetNamespaceUnknownHandler'
    'body': 'Tcl_SetNamespaceUnknownHandler(${1:Tcl_Interp* interp}, ${2:Tcl_Namespace* nsPtr}, ${3:Tcl_Obj* handlerPtr})'
  'Tcl_SetNotifier':
    'prefix': 'Tcl_SetNotifier'
    'body': 'Tcl_SetNotifier(${1:Tcl_NotifierProcs* notifierProcPtr})'
  'Tcl_SetObjCmd':
    'prefix': 'Tcl_SetObjCmd'
    'body': 'Tcl_SetObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SetObjErrorCode':
    'prefix': 'Tcl_SetObjErrorCode'
    'body': 'Tcl_SetObjErrorCode(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* errorObjPtr})'
  'Tcl_SetObjLength':
    'prefix': 'Tcl_SetObjLength'
    'body': 'Tcl_SetObjLength(${1:Tcl_Obj* objPtr}, ${2:int length})'
  'Tcl_SetObjResult':
    'prefix': 'Tcl_SetObjResult'
    'body': 'Tcl_SetObjResult(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* resultObjPtr})'
  'Tcl_SetPanicProc':
    'prefix': 'Tcl_SetPanicProc'
    'body': 'Tcl_SetPanicProc(${1:Tcl_PanicProc* panicProc})'
  'Tcl_SetRecursionLimit':
    'prefix': 'Tcl_SetRecursionLimit'
    'body': 'Tcl_SetRecursionLimit(${1:Tcl_Interp* interp}, ${2:int depth})'
  'Tcl_SetResult':
    'prefix': 'Tcl_SetResult'
    'body': 'Tcl_SetResult(${1:Tcl_Interp* interp}, ${2:char* result}, ${3:Tcl_FreeProc* freeProc})'
  'Tcl_SetReturnOptions':
    'prefix': 'Tcl_SetReturnOptions'
    'body': 'Tcl_SetReturnOptions(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* options})'
  'Tcl_SetServiceMode':
    'prefix': 'Tcl_SetServiceMode'
    'body': 'Tcl_SetServiceMode(${1:int mode})'
  'Tcl_SetStartupScript':
    'prefix': 'Tcl_SetStartupScript'
    'body': 'Tcl_SetStartupScript(${1:Tcl_Obj* pathPtr}, ${2:char* encodingName})'
  'Tcl_SetStdChannel':
    'prefix': 'Tcl_SetStdChannel'
    'body': 'Tcl_SetStdChannel(${1:Tcl_Channel channel}, ${2:int type})'
  'Tcl_SetStringObj':
    'prefix': 'Tcl_SetStringObj'
    'body': 'Tcl_SetStringObj(${1:Tcl_Obj* objPtr}, ${2:char* bytes}, ${3:int length})'
  'Tcl_SetSystemEncoding':
    'prefix': 'Tcl_SetSystemEncoding'
    'body': 'Tcl_SetSystemEncoding(${1:Tcl_Interp* interp}, ${2:char* name})'
  'Tcl_SetTimeProc':
    'prefix': 'Tcl_SetTimeProc'
    'body': 'Tcl_SetTimeProc(${1:Tcl_GetTimeProc* getProc}, ${2:Tcl_ScaleTimeProc* scaleProc}, ${3:ClientData clientData})'
  'Tcl_SetTimer':
    'prefix': 'Tcl_SetTimer'
    'body': 'Tcl_SetTimer(${1:Tcl_Time* timePtr})'
  'Tcl_SetUnicodeObj':
    'prefix': 'Tcl_SetUnicodeObj'
    'body': 'Tcl_SetUnicodeObj(${1:Tcl_Obj* objPtr}, ${2:Tcl_UniChar* unicode}, ${3:int numChars})'
  'Tcl_SetVar':
    'prefix': 'Tcl_SetVar'
    'body': 'Tcl_SetVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:char* newValue}, ${4:int flags})'
  'Tcl_SetVar2':
    'prefix': 'Tcl_SetVar2'
    'body': 'Tcl_SetVar2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:char* newValue}, ${5:int flags})'
  'Tcl_SetVar2Ex':
    'prefix': 'Tcl_SetVar2Ex'
    'body': 'Tcl_SetVar2Ex(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:Tcl_Obj* newValuePtr}, ${5:int flags})'
  'Tcl_SetWideIntObj':
    'prefix': 'Tcl_SetWideIntObj'
    'body': 'Tcl_SetWideIntObj(${1:Tcl_Obj* objPtr}, ${2:Tcl_WideInt wideValue})'
  'Tcl_SignalId':
    'prefix': 'Tcl_SignalId'
    'body': 'Tcl_SignalId(${1:int sig})'
  'Tcl_SignalMsg':
    'prefix': 'Tcl_SignalMsg'
    'body': 'Tcl_SignalMsg(${1:int sig})'
  'Tcl_Sleep':
    'prefix': 'Tcl_Sleep'
    'body': 'Tcl_Sleep(${1:int ms})'
  'Tcl_SocketObjCmd':
    'prefix': 'Tcl_SocketObjCmd'
    'body': 'Tcl_SocketObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SourceObjCmd':
    'prefix': 'Tcl_SourceObjCmd'
    'body': 'Tcl_SourceObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SourceRCFile':
    'prefix': 'Tcl_SourceRCFile'
    'body': 'Tcl_SourceRCFile(${1:Tcl_Interp* interp})'
  'Tcl_SpliceChannel':
    'prefix': 'Tcl_SpliceChannel'
    'body': 'Tcl_SpliceChannel(${1:Tcl_Channel channel})'
  'Tcl_SplitList':
    'prefix': 'Tcl_SplitList'
    'body': 'Tcl_SplitList(${1:Tcl_Interp* interp}, ${2:char* listStr}, ${3:int* argcPtr}, ${4:char*** argvPtr})'
  'Tcl_SplitObjCmd':
    'prefix': 'Tcl_SplitObjCmd'
    'body': 'Tcl_SplitObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SplitPath':
    'prefix': 'Tcl_SplitPath'
    'body': 'Tcl_SplitPath(${1:char* path}, ${2:int* argcPtr}, ${3:char*** argvPtr})'
  'Tcl_StackChannel':
    'prefix': 'Tcl_StackChannel'
    'body': 'Tcl_StackChannel(${1:Tcl_Interp* interp}, ${2:Tcl_ChannelType* typePtr}, ${3:ClientData instanceData}, ${4:int mask}, ${5:Tcl_Channel prevChan})'
  'Tcl_Stat':
    'prefix': 'Tcl_Stat'
    'body': 'Tcl_Stat(${1:char* path}, ${2:struct stat* bufPtr})'
  'Tcl_StaticPackage':
    'prefix': 'Tcl_StaticPackage'
    'body': 'Tcl_StaticPackage(${1:Tcl_Interp* interp}, ${2:char* pkgName}, ${3:Tcl_PackageInitProc* initProc}, ${4:Tcl_PackageInitProc* safeInitProc})'
  'Tcl_StringCaseMatch':
    'prefix': 'Tcl_StringCaseMatch'
    'body': 'Tcl_StringCaseMatch(${1:char* str}, ${2:char* pattern}, ${3:int nocase})'
  'Tcl_StringMatch':
    'prefix': 'Tcl_StringMatch'
    'body': 'Tcl_StringMatch(${1:char* str}, ${2:char* pattern})'
  'Tcl_SubstObj':
    'prefix': 'Tcl_SubstObj'
    'body': 'Tcl_SubstObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* objPtr}, ${3:int flags})'
  'Tcl_SubstObjCmd':
    'prefix': 'Tcl_SubstObjCmd'
    'body': 'Tcl_SubstObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_SwitchObjCmd':
    'prefix': 'Tcl_SwitchObjCmd'
    'body': 'Tcl_SwitchObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_TakeBignumFromObj':
    'prefix': 'Tcl_TakeBignumFromObj'
    'body': 'Tcl_TakeBignumFromObj(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* obj}, ${3:mp_int* value})'
  'Tcl_Tell':
    'prefix': 'Tcl_Tell'
    'body': 'Tcl_Tell(${1:Tcl_Channel chan})'
  'Tcl_TellObjCmd':
    'prefix': 'Tcl_TellObjCmd'
    'body': 'Tcl_TellObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_TellOld':
    'prefix': 'Tcl_TellOld'
    'body': 'Tcl_TellOld(${1:Tcl_Channel chan})'
  'Tcl_ThreadAlert':
    'prefix': 'Tcl_ThreadAlert'
    'body': 'Tcl_ThreadAlert(${1:Tcl_ThreadId threadId})'
  'Tcl_ThreadQueueEvent':
    'prefix': 'Tcl_ThreadQueueEvent'
    'body': 'Tcl_ThreadQueueEvent(${1:Tcl_ThreadId threadId}, ${2:Tcl_Event* evPtr}, ${3:Tcl_QueuePosition position})'
  'Tcl_TimeObjCmd':
    'prefix': 'Tcl_TimeObjCmd'
    'body': 'Tcl_TimeObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_TraceCommand':
    'prefix': 'Tcl_TraceCommand'
    'body': 'Tcl_TraceCommand(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_CommandTraceProc* proc}, ${5:ClientData clientData})'
  'Tcl_TraceObjCmd':
    'prefix': 'Tcl_TraceObjCmd'
    'body': 'Tcl_TraceObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_TraceVar':
    'prefix': 'Tcl_TraceVar'
    'body': 'Tcl_TraceVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_VarTraceProc* proc}, ${5:ClientData clientData})'
  'Tcl_TraceVar2':
    'prefix': 'Tcl_TraceVar2'
    'body': 'Tcl_TraceVar2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags}, ${5:Tcl_VarTraceProc* proc}, ${6:ClientData clientData})'
  'Tcl_TranslateFileName':
    'prefix': 'Tcl_TranslateFileName'
    'body': 'Tcl_TranslateFileName(${1:Tcl_Interp* interp}, ${2:char* name}, ${3:Tcl_DString* bufferPtr})'
  'Tcl_TruncateChannel':
    'prefix': 'Tcl_TruncateChannel'
    'body': 'Tcl_TruncateChannel(${1:Tcl_Channel chan}, ${2:Tcl_WideInt length})'
  'Tcl_Ungets':
    'prefix': 'Tcl_Ungets'
    'body': 'Tcl_Ungets(${1:Tcl_Channel chan}, ${2:char* str}, ${3:int len}, ${4:int atHead})'
  'Tcl_UniCharAtIndex':
    'prefix': 'Tcl_UniCharAtIndex'
    'body': 'Tcl_UniCharAtIndex(${1:char* src}, ${2:int index})'
  'Tcl_UniCharCaseMatch':
    'prefix': 'Tcl_UniCharCaseMatch'
    'body': 'Tcl_UniCharCaseMatch(${1:Tcl_UniChar* uniStr}, ${2:Tcl_UniChar* uniPattern}, ${3:int nocase})'
  'Tcl_UniCharIsAlnum':
    'prefix': 'Tcl_UniCharIsAlnum'
    'body': 'Tcl_UniCharIsAlnum(${1:int ch})'
  'Tcl_UniCharIsAlpha':
    'prefix': 'Tcl_UniCharIsAlpha'
    'body': 'Tcl_UniCharIsAlpha(${1:int ch})'
  'Tcl_UniCharIsControl':
    'prefix': 'Tcl_UniCharIsControl'
    'body': 'Tcl_UniCharIsControl(${1:int ch})'
  'Tcl_UniCharIsDigit':
    'prefix': 'Tcl_UniCharIsDigit'
    'body': 'Tcl_UniCharIsDigit(${1:int ch})'
  'Tcl_UniCharIsGraph':
    'prefix': 'Tcl_UniCharIsGraph'
    'body': 'Tcl_UniCharIsGraph(${1:int ch})'
  'Tcl_UniCharIsLower':
    'prefix': 'Tcl_UniCharIsLower'
    'body': 'Tcl_UniCharIsLower(${1:int ch})'
  'Tcl_UniCharIsPrint':
    'prefix': 'Tcl_UniCharIsPrint'
    'body': 'Tcl_UniCharIsPrint(${1:int ch})'
  'Tcl_UniCharIsPunct':
    'prefix': 'Tcl_UniCharIsPunct'
    'body': 'Tcl_UniCharIsPunct(${1:int ch})'
  'Tcl_UniCharIsSpace':
    'prefix': 'Tcl_UniCharIsSpace'
    'body': 'Tcl_UniCharIsSpace(${1:int ch})'
  'Tcl_UniCharIsUpper':
    'prefix': 'Tcl_UniCharIsUpper'
    'body': 'Tcl_UniCharIsUpper(${1:int ch})'
  'Tcl_UniCharIsWordChar':
    'prefix': 'Tcl_UniCharIsWordChar'
    'body': 'Tcl_UniCharIsWordChar(${1:int ch})'
  'Tcl_UniCharLen':
    'prefix': 'Tcl_UniCharLen'
    'body': 'Tcl_UniCharLen(${1:Tcl_UniChar* uniStr})'
  'Tcl_UniCharNcasecmp':
    'prefix': 'Tcl_UniCharNcasecmp'
    'body': 'Tcl_UniCharNcasecmp(${1:Tcl_UniChar* ucs}, ${2:Tcl_UniChar* uct}, ${3:unsigned long numChars})'
  'Tcl_UniCharNcmp':
    'prefix': 'Tcl_UniCharNcmp'
    'body': 'Tcl_UniCharNcmp(${1:Tcl_UniChar* ucs}, ${2:Tcl_UniChar* uct}, ${3:unsigned long numChars})'
  'Tcl_UniCharToLower':
    'prefix': 'Tcl_UniCharToLower'
    'body': 'Tcl_UniCharToLower(${1:int ch})'
  'Tcl_UniCharToTitle':
    'prefix': 'Tcl_UniCharToTitle'
    'body': 'Tcl_UniCharToTitle(${1:int ch})'
  'Tcl_UniCharToUpper':
    'prefix': 'Tcl_UniCharToUpper'
    'body': 'Tcl_UniCharToUpper(${1:int ch})'
  'Tcl_UniCharToUtf':
    'prefix': 'Tcl_UniCharToUtf'
    'body': 'Tcl_UniCharToUtf(${1:int ch}, ${2:char* buf})'
  'Tcl_UniCharToUtfDString':
    'prefix': 'Tcl_UniCharToUtfDString'
    'body': 'Tcl_UniCharToUtfDString(${1:Tcl_UniChar* uniStr}, ${2:int uniLength}, ${3:Tcl_DString* dsPtr})'
  'Tcl_UnlinkVar':
    'prefix': 'Tcl_UnlinkVar'
    'body': 'Tcl_UnlinkVar(${1:Tcl_Interp* interp}, ${2:char* varName})'
  'Tcl_UnloadObjCmd':
    'prefix': 'Tcl_UnloadObjCmd'
    'body': 'Tcl_UnloadObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_UnregisterChannel':
    'prefix': 'Tcl_UnregisterChannel'
    'body': 'Tcl_UnregisterChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'Tcl_UnsetObjCmd':
    'prefix': 'Tcl_UnsetObjCmd'
    'body': 'Tcl_UnsetObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_UnsetVar':
    'prefix': 'Tcl_UnsetVar'
    'body': 'Tcl_UnsetVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags})'
  'Tcl_UnsetVar2':
    'prefix': 'Tcl_UnsetVar2'
    'body': 'Tcl_UnsetVar2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags})'
  'Tcl_UnstackChannel':
    'prefix': 'Tcl_UnstackChannel'
    'body': 'Tcl_UnstackChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Channel chan})'
  'Tcl_UntraceCommand':
    'prefix': 'Tcl_UntraceCommand'
    'body': 'Tcl_UntraceCommand(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_CommandTraceProc* proc}, ${5:ClientData clientData})'
  'Tcl_UntraceVar':
    'prefix': 'Tcl_UntraceVar'
    'body': 'Tcl_UntraceVar(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_VarTraceProc* proc}, ${5:ClientData clientData})'
  'Tcl_UntraceVar2':
    'prefix': 'Tcl_UntraceVar2'
    'body': 'Tcl_UntraceVar2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags}, ${5:Tcl_VarTraceProc* proc}, ${6:ClientData clientData})'
  'Tcl_UpVar':
    'prefix': 'Tcl_UpVar'
    'body': 'Tcl_UpVar(${1:Tcl_Interp* interp}, ${2:char* frameName}, ${3:char* varName}, ${4:char* localName}, ${5:int flags})'
  'Tcl_UpVar2':
    'prefix': 'Tcl_UpVar2'
    'body': 'Tcl_UpVar2(${1:Tcl_Interp* interp}, ${2:char* frameName}, ${3:char* part1}, ${4:char* part2}, ${5:char* localName}, ${6:int flags})'
  'Tcl_UpdateLinkedVar':
    'prefix': 'Tcl_UpdateLinkedVar'
    'body': 'Tcl_UpdateLinkedVar(${1:Tcl_Interp* interp}, ${2:char* varName})'
  'Tcl_UpdateObjCmd':
    'prefix': 'Tcl_UpdateObjCmd'
    'body': 'Tcl_UpdateObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_UplevelObjCmd':
    'prefix': 'Tcl_UplevelObjCmd'
    'body': 'Tcl_UplevelObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_UpvarObjCmd':
    'prefix': 'Tcl_UpvarObjCmd'
    'body': 'Tcl_UpvarObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_UtfAtIndex':
    'prefix': 'Tcl_UtfAtIndex'
    'body': 'Tcl_UtfAtIndex(${1:char* src}, ${2:int index})'
  'Tcl_UtfBackslash':
    'prefix': 'Tcl_UtfBackslash'
    'body': 'Tcl_UtfBackslash(${1:char* src}, ${2:int* readPtr}, ${3:char* dst})'
  'Tcl_UtfCharComplete':
    'prefix': 'Tcl_UtfCharComplete'
    'body': 'Tcl_UtfCharComplete(${1:char* src}, ${2:int length})'
  'Tcl_UtfFindFirst':
    'prefix': 'Tcl_UtfFindFirst'
    'body': 'Tcl_UtfFindFirst(${1:char* src}, ${2:int ch})'
  'Tcl_UtfFindLast':
    'prefix': 'Tcl_UtfFindLast'
    'body': 'Tcl_UtfFindLast(${1:char* src}, ${2:int ch})'
  'Tcl_UtfNcasecmp':
    'prefix': 'Tcl_UtfNcasecmp'
    'body': 'Tcl_UtfNcasecmp(${1:char* s1}, ${2:char* s2}, ${3:unsigned long n})'
  'Tcl_UtfNcmp':
    'prefix': 'Tcl_UtfNcmp'
    'body': 'Tcl_UtfNcmp(${1:char* s1}, ${2:char* s2}, ${3:unsigned long n})'
  'Tcl_UtfNext':
    'prefix': 'Tcl_UtfNext'
    'body': 'Tcl_UtfNext(${1:char* src})'
  'Tcl_UtfPrev':
    'prefix': 'Tcl_UtfPrev'
    'body': 'Tcl_UtfPrev(${1:char* src}, ${2:char* start})'
  'Tcl_UtfToExternal':
    'prefix': 'Tcl_UtfToExternal'
    'body': 'Tcl_UtfToExternal(${1:Tcl_Interp* interp}, ${2:Tcl_Encoding encoding}, ${3:char* src}, ${4:int srcLen}, ${5:int flags}, ${6:Tcl_EncodingState* statePtr}, ${7:char* dst}, ${8:int dstLen}, ${9:int* srcReadPtr}, ${10:int* dstWrotePtr}, ${11:int* dstCharsPtr})'
  'Tcl_UtfToExternalDString':
    'prefix': 'Tcl_UtfToExternalDString'
    'body': 'Tcl_UtfToExternalDString(${1:Tcl_Encoding encoding}, ${2:char* src}, ${3:int srcLen}, ${4:Tcl_DString* dsPtr})'
  'Tcl_UtfToLower':
    'prefix': 'Tcl_UtfToLower'
    'body': 'Tcl_UtfToLower(${1:char* src})'
  'Tcl_UtfToTitle':
    'prefix': 'Tcl_UtfToTitle'
    'body': 'Tcl_UtfToTitle(${1:char* src})'
  'Tcl_UtfToUniChar':
    'prefix': 'Tcl_UtfToUniChar'
    'body': 'Tcl_UtfToUniChar(${1:char* src}, ${2:Tcl_UniChar* chPtr})'
  'Tcl_UtfToUniCharDString':
    'prefix': 'Tcl_UtfToUniCharDString'
    'body': 'Tcl_UtfToUniCharDString(${1:char* src}, ${2:int length}, ${3:Tcl_DString* dsPtr})'
  'Tcl_UtfToUpper':
    'prefix': 'Tcl_UtfToUpper'
    'body': 'Tcl_UtfToUpper(${1:char* src})'
  'Tcl_ValidateAllMemory':
    'prefix': 'Tcl_ValidateAllMemory'
    'body': 'Tcl_ValidateAllMemory(${1:char* file}, ${2:int line})'
  'Tcl_VarEval':
    'prefix': 'Tcl_VarEval'
    'body': 'Tcl_VarEval(${1:Tcl_Interp* interp})'
  'Tcl_VarEvalVA':
    'prefix': 'Tcl_VarEvalVA'
    'body': 'Tcl_VarEvalVA(${1:Tcl_Interp* interp}, ${2:va_list argList})'
  'Tcl_VarTraceInfo':
    'prefix': 'Tcl_VarTraceInfo'
    'body': 'Tcl_VarTraceInfo(${1:Tcl_Interp* interp}, ${2:char* varName}, ${3:int flags}, ${4:Tcl_VarTraceProc* procPtr}, ${5:ClientData prevClientData})'
  'Tcl_VarTraceInfo2':
    'prefix': 'Tcl_VarTraceInfo2'
    'body': 'Tcl_VarTraceInfo2(${1:Tcl_Interp* interp}, ${2:char* part1}, ${3:char* part2}, ${4:int flags}, ${5:Tcl_VarTraceProc* procPtr}, ${6:ClientData prevClientData})'
  'Tcl_VariableObjCmd':
    'prefix': 'Tcl_VariableObjCmd'
    'body': 'Tcl_VariableObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_VwaitObjCmd':
    'prefix': 'Tcl_VwaitObjCmd'
    'body': 'Tcl_VwaitObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_WaitForEvent':
    'prefix': 'Tcl_WaitForEvent'
    'body': 'Tcl_WaitForEvent(${1:Tcl_Time* timePtr})'
  'Tcl_WaitPid':
    'prefix': 'Tcl_WaitPid'
    'body': 'Tcl_WaitPid(${1:Tcl_Pid pid}, ${2:int* statPtr}, ${3:int options})'
  'Tcl_WhileObjCmd':
    'prefix': 'Tcl_WhileObjCmd'
    'body': 'Tcl_WhileObjCmd(${1:ClientData clientData}, ${2:Tcl_Interp* interp}, ${3:int objc}, ${4:Tcl_Obj ** objv})'
  'Tcl_Write':
    'prefix': 'Tcl_Write'
    'body': 'Tcl_Write(${1:Tcl_Channel chan}, ${2:char* s}, ${3:int slen})'
  'Tcl_WriteChars':
    'prefix': 'Tcl_WriteChars'
    'body': 'Tcl_WriteChars(${1:Tcl_Channel chan}, ${2:char* src}, ${3:int srcLen})'
  'Tcl_WriteObj':
    'prefix': 'Tcl_WriteObj'
    'body': 'Tcl_WriteObj(${1:Tcl_Channel chan}, ${2:Tcl_Obj* objPtr})'
  'Tcl_WriteRaw':
    'prefix': 'Tcl_WriteRaw'
    'body': 'Tcl_WriteRaw(${1:Tcl_Channel chan}, ${2:char* src}, ${3:int srcLen})'
  'Tcl_WrongNumArgs':
    'prefix': 'Tcl_WrongNumArgs'
    'body': 'Tcl_WrongNumArgs(${1:Tcl_Interp* interp}, ${2:int objc}, ${3:Tcl_Obj ** objv}, ${4:char* message})'
  'TclpAlloc':
    'prefix': 'TclpAlloc'
    'body': 'TclpAlloc(${1:unsigned int size})'
  'TclpCloseFile':
    'prefix': 'TclpCloseFile'
    'body': 'TclpCloseFile(${1:TclFile file})'
  'TclpCreateCommandChannel':
    'prefix': 'TclpCreateCommandChannel'
    'body': 'TclpCreateCommandChannel(${1:TclFile readFile}, ${2:TclFile writeFile}, ${3:TclFile errorFile}, ${4:int numPids}, ${5:Tcl_Pid* pidPtr})'
  'TclpCreatePipe':
    'prefix': 'TclpCreatePipe'
    'body': 'TclpCreatePipe(${1:TclFile* readPipe}, ${2:TclFile* writePipe})'
  'TclpCreateProcess':
    'prefix': 'TclpCreateProcess'
    'body': 'TclpCreateProcess(${1:Tcl_Interp* interp}, ${2:int argc}, ${3:char** argv}, ${4:TclFile inputFile}, ${5:TclFile outputFile}, ${6:TclFile errorFile}, ${7:Tcl_Pid* pidPtr})'
  'TclpCreateTempFile':
    'prefix': 'TclpCreateTempFile'
    'body': 'TclpCreateTempFile(${1:char* contents})'
  'TclpDeleteFile':
    'prefix': 'TclpDeleteFile'
    'body': 'TclpDeleteFile(${1:char* path})'
  'TclpDlopen':
    'prefix': 'TclpDlopen'
    'body': 'TclpDlopen(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:Tcl_LoadHandle* loadHandle}, ${4:Tcl_FSUnloadFileProc** unloadProcPtr})'
  'TclpFilesystemPathType':
    'prefix': 'TclpFilesystemPathType'
    'body': 'TclpFilesystemPathType(${1:Tcl_Obj* pathPtr})'
  'TclpFinalizeCondition':
    'prefix': 'TclpFinalizeCondition'
    'body': 'TclpFinalizeCondition(${1:Tcl_Condition* condPtr})'
  'TclpFinalizeMutex':
    'prefix': 'TclpFinalizeMutex'
    'body': 'TclpFinalizeMutex(${1:Tcl_Mutex* mutexPtr})'
  'TclpFinalizePipes':
    'prefix': 'TclpFinalizePipes'
    'body': 'TclpFinalizePipes()'
  'TclpFinalizeSockets':
    'prefix': 'TclpFinalizeSockets'
    'body': 'TclpFinalizeSockets()'
  'TclpFinalizeThreadDataThread':
    'prefix': 'TclpFinalizeThreadDataThread'
    'body': 'TclpFinalizeThreadDataThread()'
  'TclpFindExecutable':
    'prefix': 'TclpFindExecutable'
    'body': 'TclpFindExecutable(${1:char* argv0})'
  'TclpFindSymbol':
    'prefix': 'TclpFindSymbol'
    'body': 'TclpFindSymbol(${1:Tcl_Interp* interp}, ${2:Tcl_LoadHandle loadHandle}, ${3:char* symbol})'
  'TclpFindVariable':
    'prefix': 'TclpFindVariable'
    'body': 'TclpFindVariable(${1:char* name}, ${2:int* lengthPtr})'
  'TclpFree':
    'prefix': 'TclpFree'
    'body': 'TclpFree(${1:char* ptr})'
  'TclpGetCStackParams':
    'prefix': 'TclpGetCStackParams'
    'body': 'TclpGetCStackParams(${1:int** stackBoundPtr})'
  'TclpGetClicks':
    'prefix': 'TclpGetClicks'
    'body': 'TclpGetClicks()'
  'TclpGetCwd':
    'prefix': 'TclpGetCwd'
    'body': 'TclpGetCwd(${1:Tcl_Interp* interp}, ${2:Tcl_DString* cwdPtr})'
  'TclpGetDate':
    'prefix': 'TclpGetDate'
    'body': 'TclpGetDate(${1:time_t* time}, ${2:int useGMT})'
  'TclpGetDefaultStdChannel':
    'prefix': 'TclpGetDefaultStdChannel'
    'body': 'TclpGetDefaultStdChannel(${1:int type})'
  'TclpGetGrGid':
    'prefix': 'TclpGetGrGid'
    'body': 'TclpGetGrGid(${1:gid_t gid})'
  'TclpGetGrNam':
    'prefix': 'TclpGetGrNam'
    'body': 'TclpGetGrNam(${1:char* name})'
  'TclpGetHostByAddr':
    'prefix': 'TclpGetHostByAddr'
    'body': 'TclpGetHostByAddr(${1:char* addr}, ${2:int length}, ${3:int type})'
  'TclpGetHostByName':
    'prefix': 'TclpGetHostByName'
    'body': 'TclpGetHostByName(${1:char* name})'
  'TclpGetNativeCwd':
    'prefix': 'TclpGetNativeCwd'
    'body': 'TclpGetNativeCwd(${1:ClientData clientData})'
  'TclpGetNativePathType':
    'prefix': 'TclpGetNativePathType'
    'body': 'TclpGetNativePathType(${1:Tcl_Obj* pathPtr}, ${2:int* driveNameLengthPtr}, ${3:Tcl_Obj** driveNameRef})'
  'TclpGetPwNam':
    'prefix': 'TclpGetPwNam'
    'body': 'TclpGetPwNam(${1:char* name})'
  'TclpGetPwUid':
    'prefix': 'TclpGetPwUid'
    'body': 'TclpGetPwUid(${1:uid_t uid})'
  'TclpGetSeconds':
    'prefix': 'TclpGetSeconds'
    'body': 'TclpGetSeconds()'
  'TclpGetTime':
    'prefix': 'TclpGetTime'
    'body': 'TclpGetTime(${1:Tcl_Time* time})'
  'TclpGetTimeZone':
    'prefix': 'TclpGetTimeZone'
    'body': 'TclpGetTimeZone(${1:unsigned long time})'
  'TclpGetUserHome':
    'prefix': 'TclpGetUserHome'
    'body': 'TclpGetUserHome(${1:char* name}, ${2:Tcl_DString* bufferPtr})'
  'TclpGmtime':
    'prefix': 'TclpGmtime'
    'body': 'TclpGmtime(${1:time_t* clock})'
  'TclpGmtime_unix':
    'prefix': 'TclpGmtime_unix'
    'body': 'TclpGmtime_unix(${1:time_t* clock})'
  'TclpHasSockets':
    'prefix': 'TclpHasSockets'
    'body': 'TclpHasSockets(${1:Tcl_Interp* interp})'
  'TclpInetNtoa':
    'prefix': 'TclpInetNtoa'
    'body': 'TclpInetNtoa(${1:struct in_addr addr})'
  'TclpInitLibraryPath':
    'prefix': 'TclpInitLibraryPath'
    'body': 'TclpInitLibraryPath(${1:char** valuePtr}, ${2:int* lengthPtr}, ${3:Tcl_Encoding* encodingPtr})'
  'TclpInitLock':
    'prefix': 'TclpInitLock'
    'body': 'TclpInitLock()'
  'TclpInitPlatform':
    'prefix': 'TclpInitPlatform'
    'body': 'TclpInitPlatform()'
  'TclpInitUnlock':
    'prefix': 'TclpInitUnlock'
    'body': 'TclpInitUnlock()'
  'TclpLoadFile':
    'prefix': 'TclpLoadFile'
    'body': 'TclpLoadFile(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:char* sym1}, ${4:char* sym2}, ${5:Tcl_PackageInitProc** proc1Ptr}, ${6:Tcl_PackageInitProc** proc2Ptr}, ${7:ClientData* clientDataPtr}, ${8:Tcl_FSUnloadFileProc** unloadProcPtr})'
  'TclpLocaltime':
    'prefix': 'TclpLocaltime'
    'body': 'TclpLocaltime(${1:time_t* clock})'
  'TclpLocaltime_unix':
    'prefix': 'TclpLocaltime_unix'
    'body': 'TclpLocaltime_unix(${1:time_t* clock})'
  'TclpMakeFile':
    'prefix': 'TclpMakeFile'
    'body': 'TclpMakeFile(${1:Tcl_Channel channel}, ${2:int direction})'
  'TclpMasterLock':
    'prefix': 'TclpMasterLock'
    'body': 'TclpMasterLock()'
  'TclpMasterUnlock':
    'prefix': 'TclpMasterUnlock'
    'body': 'TclpMasterUnlock()'
  'TclpMatchFiles':
    'prefix': 'TclpMatchFiles'
    'body': 'TclpMatchFiles(${1:Tcl_Interp* interp}, ${2:char* separators}, ${3:Tcl_DString* dirPtr}, ${4:char* pattern}, ${5:char* tail})'
  'TclpMatchInDirectory':
    'prefix': 'TclpMatchInDirectory'
    'body': 'TclpMatchInDirectory(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* resultPtr}, ${3:Tcl_Obj* pathPtr}, ${4:char* pattern}, ${5:Tcl_GlobTypeData* types})'
  'TclpNativeJoinPath':
    'prefix': 'TclpNativeJoinPath'
    'body': 'TclpNativeJoinPath(${1:Tcl_Obj* prefix}, ${2:char* joining})'
  'TclpNativeSplitPath':
    'prefix': 'TclpNativeSplitPath'
    'body': 'TclpNativeSplitPath(${1:Tcl_Obj* pathPtr}, ${2:int* lenPtr})'
  'TclpNativeToNormalized':
    'prefix': 'TclpNativeToNormalized'
    'body': 'TclpNativeToNormalized(${1:ClientData clientData})'
  'TclpObjAccess':
    'prefix': 'TclpObjAccess'
    'body': 'TclpObjAccess(${1:Tcl_Obj* pathPtr}, ${2:int mode})'
  'TclpObjChdir':
    'prefix': 'TclpObjChdir'
    'body': 'TclpObjChdir(${1:Tcl_Obj* pathPtr})'
  'TclpObjCopyDirectory':
    'prefix': 'TclpObjCopyDirectory'
    'body': 'TclpObjCopyDirectory(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr}, ${3:Tcl_Obj** errorPtr})'
  'TclpObjCopyFile':
    'prefix': 'TclpObjCopyFile'
    'body': 'TclpObjCopyFile(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr})'
  'TclpObjCreateDirectory':
    'prefix': 'TclpObjCreateDirectory'
    'body': 'TclpObjCreateDirectory(${1:Tcl_Obj* pathPtr})'
  'TclpObjDeleteFile':
    'prefix': 'TclpObjDeleteFile'
    'body': 'TclpObjDeleteFile(${1:Tcl_Obj* pathPtr})'
  'TclpObjLink':
    'prefix': 'TclpObjLink'
    'body': 'TclpObjLink(${1:Tcl_Obj* pathPtr}, ${2:Tcl_Obj* toPtr}, ${3:int linkType})'
  'TclpObjListVolumes':
    'prefix': 'TclpObjListVolumes'
    'body': 'TclpObjListVolumes()'
  'TclpObjLstat':
    'prefix': 'TclpObjLstat'
    'body': 'TclpObjLstat(${1:Tcl_Obj* pathPtr}, ${2:Tcl_StatBuf* buf})'
  'TclpObjNormalizePath':
    'prefix': 'TclpObjNormalizePath'
    'body': 'TclpObjNormalizePath(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:int nextCheckpoint})'
  'TclpObjRemoveDirectory':
    'prefix': 'TclpObjRemoveDirectory'
    'body': 'TclpObjRemoveDirectory(${1:Tcl_Obj* pathPtr}, ${2:int recursive}, ${3:Tcl_Obj** errorPtr})'
  'TclpObjRenameFile':
    'prefix': 'TclpObjRenameFile'
    'body': 'TclpObjRenameFile(${1:Tcl_Obj* srcPathPtr}, ${2:Tcl_Obj* destPathPtr})'
  'TclpObjStat':
    'prefix': 'TclpObjStat'
    'body': 'TclpObjStat(${1:Tcl_Obj* pathPtr}, ${2:Tcl_StatBuf* buf})'
  'TclpOpenFile':
    'prefix': 'TclpOpenFile'
    'body': 'TclpOpenFile(${1:char* fname}, ${2:int mode})'
  'TclpOpenFileChannel':
    'prefix': 'TclpOpenFileChannel'
    'body': 'TclpOpenFileChannel(${1:Tcl_Interp* interp}, ${2:Tcl_Obj* pathPtr}, ${3:int mode}, ${4:int permissions})'
  'TclpReaddir':
    'prefix': 'TclpReaddir'
    'body': 'TclpReaddir(${1:DIR* dir})'
  'TclpReadlink':
    'prefix': 'TclpReadlink'
    'body': 'TclpReadlink(${1:char* fileName}, ${2:Tcl_DString* linkPtr})'
  'TclpRealloc':
    'prefix': 'TclpRealloc'
    'body': 'TclpRealloc(${1:char* ptr}, ${2:unsigned int size})'
  'TclpSetInitialEncodings':
    'prefix': 'TclpSetInitialEncodings'
    'body': 'TclpSetInitialEncodings()'
  'TclpSetInterfaces':
    'prefix': 'TclpSetInterfaces'
    'body': 'TclpSetInterfaces()'
  'TclpSetVariables':
    'prefix': 'TclpSetVariables'
    'body': 'TclpSetVariables(${1:Tcl_Interp* interp})'
  'TclpTempFileName':
    'prefix': 'TclpTempFileName'
    'body': 'TclpTempFileName()'
  'TclpThreadCreate':
    'prefix': 'TclpThreadCreate'
    'body': 'TclpThreadCreate(${1:Tcl_ThreadId* idPtr}, ${2:Tcl_ThreadCreateProc* proc}, ${3:ClientData clientData}, ${4:int stackSize}, ${5:int flags})'
  'TclpThreadDataKeyGet':
    'prefix': 'TclpThreadDataKeyGet'
    'body': 'TclpThreadDataKeyGet(${1:Tcl_ThreadDataKey* keyPtr})'
  'TclpThreadDataKeySet':
    'prefix': 'TclpThreadDataKeySet'
    'body': 'TclpThreadDataKeySet(${1:Tcl_ThreadDataKey* keyPtr}, ${2:void* data})'
  'TclpThreadExit':
    'prefix': 'TclpThreadExit'
    'body': 'TclpThreadExit(${1:int status})'
  'TclpThreadGetStackSize':
    'prefix': 'TclpThreadGetStackSize'
    'body': 'TclpThreadGetStackSize()'
  'TclpUnloadFile':
    'prefix': 'TclpUnloadFile'
    'body': 'TclpUnloadFile(${1:Tcl_LoadHandle loadHandle})'
  'TclpUtfNcmp2':
    'prefix': 'TclpUtfNcmp2'
    'body': 'TclpUtfNcmp2(${1:char* s1}, ${2:char* s2}, ${3:unsigned long n})'
  'TclpUtime':
    'prefix': 'TclpUtime'
    'body': 'TclpUtime(${1:Tcl_Obj* pathPtr}, ${2:struct utimbuf* tval})'
  'mp_get_int':
    'prefix': 'mp_get_int'
    'body': 'mp_get_int(${1:mp_int* a})'
  'TclOSlstat (lstat)':
    'prefix': 'TclOSlstat'
    'body': 'TclOSlstat'
  'TclOSopen (open)':
    'prefix': 'TclOSopen'
    'body': 'TclOSopen'
  'TclOSreaddir (readdir)':
    'prefix': 'TclOSreaddir'
    'body': 'TclOSreaddir'
  'TclOSseek (lseek)':
    'prefix': 'TclOSseek'
    'body': 'TclOSseek'
  'TclOSstat (stat)':
    'prefix': 'TclOSstat'
    'body': 'TclOSstat'
  'TclUniCharNcmp (Tcl_UniCharNcmp)':
    'prefix': 'TclUniCharNcmp'
    'body': 'TclUniCharNcmp'
  'Tcl_Ckalloc (Tcl_Alloc)':
    'prefix': 'Tcl_Ckalloc'
    'body': 'Tcl_Ckalloc'
  'Tcl_Ckfree (Tcl_Free)':
    'prefix': 'Tcl_Ckfree'
    'body': 'Tcl_Ckfree'
  'Tcl_Ckrealloc (Tcl_Realloc)':
    'prefix': 'Tcl_Ckrealloc'
    'body': 'Tcl_Ckrealloc'
  'Tcl_DStringTrunc (Tcl_DStringSetLength)':
    'prefix': 'Tcl_DStringTrunc'
    'body': 'Tcl_DStringTrunc'
  'Tcl_Return (Tcl_SetResult)':
    'prefix': 'Tcl_Return'
    'body': 'Tcl_Return'
  'Tcl_TildeSubst (Tcl_TranslateFileName)':
    'prefix': 'Tcl_TildeSubst'
    'body': 'Tcl_TildeSubst'
  'TclpExit (exit)':
    'prefix': 'TclpExit'
    'body': 'TclpExit'
  'bn_reverse (TclBN_reverse)':
    'prefix': 'bn_reverse'
    'body': 'bn_reverse'
  'fast_s_mp_mul_digs (TclBN_fast_s_mp_mul_digs)':
    'prefix': 'fast_s_mp_mul_digs'
    'body': 'fast_s_mp_mul_digs'
  'fast_s_mp_sqr (TclBN_fast_s_mp_sqr)':
    'prefix': 'fast_s_mp_sqr'
    'body': 'fast_s_mp_sqr'
  'mp_add (TclBN_mp_add)':
    'prefix': 'mp_add'
    'body': 'mp_add'
  'mp_add_d (TclBN_mp_add_d)':
    'prefix': 'mp_add_d'
    'body': 'mp_add_d'
  'mp_and (TclBN_mp_and)':
    'prefix': 'mp_and'
    'body': 'mp_and'
  'mp_clamp (TclBN_mp_clamp)':
    'prefix': 'mp_clamp'
    'body': 'mp_clamp'
  'mp_clear (TclBN_mp_clear)':
    'prefix': 'mp_clear'
    'body': 'mp_clear'
  'mp_clear_multi (TclBN_mp_clear_multi)':
    'prefix': 'mp_clear_multi'
    'body': 'mp_clear_multi'
  'mp_cmp (TclBN_mp_cmp)':
    'prefix': 'mp_cmp'
    'body': 'mp_cmp'
  'mp_cmp_d (TclBN_mp_cmp_d)':
    'prefix': 'mp_cmp_d'
    'body': 'mp_cmp_d'
  'mp_cmp_mag (TclBN_mp_cmp_mag)':
    'prefix': 'mp_cmp_mag'
    'body': 'mp_cmp_mag'
  'mp_copy (TclBN_mp_copy)':
    'prefix': 'mp_copy'
    'body': 'mp_copy'
  'mp_count_bits (TclBN_mp_count_bits)':
    'prefix': 'mp_count_bits'
    'body': 'mp_count_bits'
  'mp_div (TclBN_mp_div)':
    'prefix': 'mp_div'
    'body': 'mp_div'
  'mp_div_2 (TclBN_mp_div_2)':
    'prefix': 'mp_div_2'
    'body': 'mp_div_2'
  'mp_div_2d (TclBN_mp_div_2d)':
    'prefix': 'mp_div_2d'
    'body': 'mp_div_2d'
  'mp_div_3 (TclBN_mp_div_3)':
    'prefix': 'mp_div_3'
    'body': 'mp_div_3'
  'mp_div_d (TclBN_mp_div_d)':
    'prefix': 'mp_div_d'
    'body': 'mp_div_d'
  'mp_exch (TclBN_mp_exch)':
    'prefix': 'mp_exch'
    'body': 'mp_exch'
  'mp_expt_d (TclBN_mp_expt_d)':
    'prefix': 'mp_expt_d'
    'body': 'mp_expt_d'
  'mp_grow (TclBN_mp_grow)':
    'prefix': 'mp_grow'
    'body': 'mp_grow'
  'mp_init (TclBN_mp_init)':
    'prefix': 'mp_init'
    'body': 'mp_init'
  'mp_init_copy (TclBN_mp_init_copy)':
    'prefix': 'mp_init_copy'
    'body': 'mp_init_copy'
  'mp_init_multi (TclBN_mp_init_multi)':
    'prefix': 'mp_init_multi'
    'body': 'mp_init_multi'
  'mp_init_set (TclBN_mp_init_set)':
    'prefix': 'mp_init_set'
    'body': 'mp_init_set'
  'mp_init_size (TclBN_mp_init_size)':
    'prefix': 'mp_init_size'
    'body': 'mp_init_size'
  'mp_karatsuba_mul (TclBN_mp_karatsuba_mul)':
    'prefix': 'mp_karatsuba_mul'
    'body': 'mp_karatsuba_mul'
  'mp_karatsuba_sqr (TclBN_mp_karatsuba_sqr)':
    'prefix': 'mp_karatsuba_sqr'
    'body': 'mp_karatsuba_sqr'
  'mp_lshd (TclBN_mp_lshd)':
    'prefix': 'mp_lshd'
    'body': 'mp_lshd'
  'mp_mod (TclBN_mp_mod)':
    'prefix': 'mp_mod'
    'body': 'mp_mod'
  'mp_mod_2d (TclBN_mp_mod_2d)':
    'prefix': 'mp_mod_2d'
    'body': 'mp_mod_2d'
  'mp_mul (TclBN_mp_mul)':
    'prefix': 'mp_mul'
    'body': 'mp_mul'
  'mp_mul_2 (TclBN_mp_mul_2)':
    'prefix': 'mp_mul_2'
    'body': 'mp_mul_2'
  'mp_mul_2d (TclBN_mp_mul_2d)':
    'prefix': 'mp_mul_2d'
    'body': 'mp_mul_2d'
  'mp_mul_d (TclBN_mp_mul_d)':
    'prefix': 'mp_mul_d'
    'body': 'mp_mul_d'
  'mp_neg (TclBN_mp_neg)':
    'prefix': 'mp_neg'
    'body': 'mp_neg'
  'mp_or (TclBN_mp_or)':
    'prefix': 'mp_or'
    'body': 'mp_or'
  'mp_radix_size (TclBN_mp_radix_size)':
    'prefix': 'mp_radix_size'
    'body': 'mp_radix_size'
  'mp_read_radix (TclBN_mp_read_radix)':
    'prefix': 'mp_read_radix'
    'body': 'mp_read_radix'
  'mp_rshd (TclBN_mp_rshd)':
    'prefix': 'mp_rshd'
    'body': 'mp_rshd'
  'mp_set (TclBN_mp_set)':
    'prefix': 'mp_set'
    'body': 'mp_set'
  'mp_shrink (TclBN_mp_shrink)':
    'prefix': 'mp_shrink'
    'body': 'mp_shrink'
  'mp_sqr (TclBN_mp_sqr)':
    'prefix': 'mp_sqr'
    'body': 'mp_sqr'
  'mp_sqrt (TclBN_mp_sqrt)':
    'prefix': 'mp_sqrt'
    'body': 'mp_sqrt'
  'mp_sub (TclBN_mp_sub)':
    'prefix': 'mp_sub'
    'body': 'mp_sub'
  'mp_sub_d (TclBN_mp_sub_d)':
    'prefix': 'mp_sub_d'
    'body': 'mp_sub_d'
  'mp_to_unsigned_bin (TclBN_mp_to_unsigned_bin)':
    'prefix': 'mp_to_unsigned_bin'
    'body': 'mp_to_unsigned_bin'
  'mp_to_unsigned_bin_n (TclBN_mp_to_unsigned_bin_n)':
    'prefix': 'mp_to_unsigned_bin_n'
    'body': 'mp_to_unsigned_bin_n'
  'mp_toom_mul (TclBN_mp_toom_mul)':
    'prefix': 'mp_toom_mul'
    'body': 'mp_toom_mul'
  'mp_toom_sqr (TclBN_mp_toom_sqr)':
    'prefix': 'mp_toom_sqr'
    'body': 'mp_toom_sqr'
  'mp_toradix_n (TclBN_mp_toradix_n)':
    'prefix': 'mp_toradix_n'
    'body': 'mp_toradix_n'
  'mp_unsigned_bin_size (TclBN_mp_unsigned_bin_size)':
    'prefix': 'mp_unsigned_bin_size'
    'body': 'mp_unsigned_bin_size'
  'mp_xor (TclBN_mp_xor)':
    'prefix': 'mp_xor'
    'body': 'mp_xor'
  'mp_zero (TclBN_mp_zero)':
    'prefix': 'mp_zero'
    'body': 'mp_zero'
  'panic (Tcl_Panic)':
    'prefix': 'panic'
    'body': 'panic'
  'panicVA (Tcl_PanicVA)':
    'prefix': 'panicVA'
    'body': 'panicVA'
  's_mp_add (TclBN_s_mp_add)':
    'prefix': 's_mp_add'
    'body': 's_mp_add'
  's_mp_mul_digs (TclBN_s_mp_mul_digs)':
    'prefix': 's_mp_mul_digs'
    'body': 's_mp_mul_digs'
  's_mp_sqr (TclBN_s_mp_sqr)':
    'prefix': 's_mp_sqr'
    'body': 's_mp_sqr'
  's_mp_sub (TclBN_s_mp_sub)':
    'prefix': 's_mp_sub'
    'body': 's_mp_sub'
