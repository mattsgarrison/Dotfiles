'.source.rubymotion':
  'SKErrorDomain (NSString*)':
    'prefix': 'SKErrorDomain'
    'body': 'SKErrorDomain'
  'SKReceiptPropertyIsExpired (NSString*)':
    'prefix': 'SKReceiptPropertyIsExpired'
    'body': 'SKReceiptPropertyIsExpired'
  'SKReceiptPropertyIsRevoked (NSString*)':
    'prefix': 'SKReceiptPropertyIsRevoked'
    'body': 'SKReceiptPropertyIsRevoked'
  'SKReceiptPropertyIsVolumePurchase (NSString*)':
    'prefix': 'SKReceiptPropertyIsVolumePurchase'
    'body': 'SKReceiptPropertyIsVolumePurchase'
  'SKErrorClientInvalid (1)':
    'prefix': 'SKErrorClientInvalid'
    'body': 'SKErrorClientInvalid'
  'SKErrorPaymentCancelled (2)':
    'prefix': 'SKErrorPaymentCancelled'
    'body': 'SKErrorPaymentCancelled'
  'SKErrorPaymentInvalid (3)':
    'prefix': 'SKErrorPaymentInvalid'
    'body': 'SKErrorPaymentInvalid'
  'SKErrorPaymentNotAllowed (4)':
    'prefix': 'SKErrorPaymentNotAllowed'
    'body': 'SKErrorPaymentNotAllowed'
  'SKErrorUnknown (0)':
    'prefix': 'SKErrorUnknown'
    'body': 'SKErrorUnknown'
  'SKPaymentTransactionStateFailed (2)':
    'prefix': 'SKPaymentTransactionStateFailed'
    'body': 'SKPaymentTransactionStateFailed'
  'SKPaymentTransactionStatePurchased (1)':
    'prefix': 'SKPaymentTransactionStatePurchased'
    'body': 'SKPaymentTransactionStatePurchased'
  'SKPaymentTransactionStatePurchasing (0)':
    'prefix': 'SKPaymentTransactionStatePurchasing'
    'body': 'SKPaymentTransactionStatePurchasing'
  'SKPaymentTransactionStateRestored (3)':
    'prefix': 'SKPaymentTransactionStateRestored'
    'body': 'SKPaymentTransactionStateRestored'
  'paymentQueue:removedTransactions:':
    'prefix': 'paymentQueue:removedTransactions:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, removedTransactions:${2:NSArray* transactions})'
  'paymentQueue:restoreCompletedTransactionsFailedWithError:':
    'prefix': 'paymentQueue:restoreCompletedTransactionsFailedWithError:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, restoreCompletedTransactionsFailedWithError:${2:NSError* error})'
  'paymentQueue:updatedDownloads:':
    'prefix': 'paymentQueue:updatedDownloads:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, updatedDownloads:${2:NSArray* downloads})'
  'paymentQueue:updatedTransactions:':
    'prefix': 'paymentQueue:updatedTransactions:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, updatedTransactions:${2:NSArray* transactions})'
  'paymentQueueRestoreCompletedTransactionsFinished:':
    'prefix': 'paymentQueueRestoreCompletedTransactionsFinished:'
    'body': 'paymentQueueRestoreCompletedTransactionsFinished(${1:SKPaymentQueue* queue})'
  'productsRequest:didReceiveResponse:':
    'prefix': 'productsRequest:didReceiveResponse:'
    'body': 'productsRequest(${1:SKProductsRequest* request}, didReceiveResponse:${2:SKProductsResponse* response})'
  'request:didFailWithError:':
    'prefix': 'request:didFailWithError:'
    'body': 'request(${1:SKRequest* request}, didFailWithError:${2:NSError* error})'
  'requestDidFinish:':
    'prefix': 'requestDidFinish:'
    'body': 'requestDidFinish(${1:SKRequest* request})'
  'contentIdentifier':
    'prefix': 'contentIdentifier'
    'body': 'contentIdentifier()'
  'contentLength':
    'prefix': 'contentLength'
    'body': 'contentLength()'
  'contentURL':
    'prefix': 'contentURL'
    'body': 'contentURL()'
  'SKDownload.contentURLForProductID:':
    'prefix': 'contentURLForProductID:'
    'body': 'contentURLForProductID(${1:NSString* productID})'
  'contentVersion':
    'prefix': 'contentVersion'
    'body': 'contentVersion()'
  'SKDownload.deleteContentForProductID:':
    'prefix': 'deleteContentForProductID:'
    'body': 'deleteContentForProductID(${1:NSString* productID})'
  'error':
    'prefix': 'error'
    'body': 'error()'
  'progress':
    'prefix': 'progress'
    'body': 'progress()'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'timeRemaining':
    'prefix': 'timeRemaining'
    'body': 'timeRemaining()'
  'applicationUsername':
    'prefix': 'applicationUsername'
    'body': 'applicationUsername()'
  'productIdentifier':
    'prefix': 'productIdentifier'
    'body': 'productIdentifier()'
  'quantity':
    'prefix': 'quantity'
    'body': 'quantity()'
  'requestData':
    'prefix': 'requestData'
    'body': 'requestData()'
  'setApplicationUsername:':
    'prefix': 'setApplicationUsername:'
    'body': 'setApplicationUsername(${1:NSString* applicationUsername})'
  'setProductIdentifier:':
    'prefix': 'setProductIdentifier:'
    'body': 'setProductIdentifier(${1:NSString* productIdentifier})'
  'setQuantity:':
    'prefix': 'setQuantity:'
    'body': 'setQuantity(${1:NSInteger quantity})'
  'setRequestData:':
    'prefix': 'setRequestData:'
    'body': 'setRequestData(${1:NSData* requestData})'
  'applicationUsername':
    'prefix': 'applicationUsername'
    'body': 'applicationUsername()'
  'SKPayment.paymentWithProduct:':
    'prefix': 'paymentWithProduct:'
    'body': 'paymentWithProduct(${1:SKProduct* product})'
  'productIdentifier':
    'prefix': 'productIdentifier'
    'body': 'productIdentifier()'
  'quantity':
    'prefix': 'quantity'
    'body': 'quantity()'
  'requestData':
    'prefix': 'requestData'
    'body': 'requestData()'
  'addPayment:':
    'prefix': 'addPayment:'
    'body': 'addPayment(${1:SKPayment* payment})'
  'addTransactionObserver:':
    'prefix': 'addTransactionObserver:'
    'body': 'addTransactionObserver(${1:id observer})'
  'SKPaymentQueue.canMakePayments':
    'prefix': 'canMakePayments'
    'body': 'canMakePayments()'
  'cancelDownloads:':
    'prefix': 'cancelDownloads:'
    'body': 'cancelDownloads(${1:NSArray* downloads})'
  'SKPaymentQueue.defaultQueue':
    'prefix': 'defaultQueue'
    'body': 'defaultQueue()'
  'finishTransaction:':
    'prefix': 'finishTransaction:'
    'body': 'finishTransaction(${1:SKPaymentTransaction* transaction})'
  'pauseDownloads:':
    'prefix': 'pauseDownloads:'
    'body': 'pauseDownloads(${1:NSArray* downloads})'
  'removeTransactionObserver:':
    'prefix': 'removeTransactionObserver:'
    'body': 'removeTransactionObserver(${1:id observer})'
  'restoreCompletedTransactions':
    'prefix': 'restoreCompletedTransactions'
    'body': 'restoreCompletedTransactions()'
  'restoreCompletedTransactionsWithApplicationUsername:':
    'prefix': 'restoreCompletedTransactionsWithApplicationUsername:'
    'body': 'restoreCompletedTransactionsWithApplicationUsername(${1:NSString* username})'
  'resumeDownloads:':
    'prefix': 'resumeDownloads:'
    'body': 'resumeDownloads(${1:NSArray* downloads})'
  'startDownloads:':
    'prefix': 'startDownloads:'
    'body': 'startDownloads(${1:NSArray* downloads})'
  'transactions':
    'prefix': 'transactions'
    'body': 'transactions()'
  'downloads':
    'prefix': 'downloads'
    'body': 'downloads()'
  'error':
    'prefix': 'error'
    'body': 'error()'
  'originalTransaction':
    'prefix': 'originalTransaction'
    'body': 'originalTransaction()'
  'payment':
    'prefix': 'payment'
    'body': 'payment()'
  'transactionDate':
    'prefix': 'transactionDate'
    'body': 'transactionDate()'
  'transactionIdentifier':
    'prefix': 'transactionIdentifier'
    'body': 'transactionIdentifier()'
  'transactionState':
    'prefix': 'transactionState'
    'body': 'transactionState()'
  'contentLengths':
    'prefix': 'contentLengths'
    'body': 'contentLengths()'
  'contentVersion':
    'prefix': 'contentVersion'
    'body': 'contentVersion()'
  'downloadable':
    'prefix': 'downloadable'
    'body': 'downloadable()'
  'localizedDescription':
    'prefix': 'localizedDescription'
    'body': 'localizedDescription()'
  'localizedTitle':
    'prefix': 'localizedTitle'
    'body': 'localizedTitle()'
  'price':
    'prefix': 'price'
    'body': 'price()'
  'priceLocale':
    'prefix': 'priceLocale'
    'body': 'priceLocale()'
  'productIdentifier':
    'prefix': 'productIdentifier'
    'body': 'productIdentifier()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithProductIdentifiers:':
    'prefix': 'initWithProductIdentifiers:'
    'body': 'initWithProductIdentifiers(${1:NSSet* productIdentifiers})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'invalidProductIdentifiers':
    'prefix': 'invalidProductIdentifiers'
    'body': 'invalidProductIdentifiers()'
  'products':
    'prefix': 'products'
    'body': 'products()'
  'initWithReceiptProperties:':
    'prefix': 'initWithReceiptProperties:'
    'body': 'initWithReceiptProperties(${1:NSDictionary* properties})'
  'receiptProperties':
    'prefix': 'receiptProperties'
    'body': 'receiptProperties()'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'paymentQueue:removedTransactions:':
    'prefix': 'paymentQueue:removedTransactions:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, removedTransactions:${2:NSArray* transactions})'
  'paymentQueue:restoreCompletedTransactionsFailedWithError:':
    'prefix': 'paymentQueue:restoreCompletedTransactionsFailedWithError:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, restoreCompletedTransactionsFailedWithError:${2:NSError* error})'
  'paymentQueue:updatedDownloads:':
    'prefix': 'paymentQueue:updatedDownloads:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, updatedDownloads:${2:NSArray* downloads})'
  'paymentQueue:updatedTransactions:':
    'prefix': 'paymentQueue:updatedTransactions:'
    'body': 'paymentQueue(${1:SKPaymentQueue* queue}, updatedTransactions:${2:NSArray* transactions})'
  'paymentQueueRestoreCompletedTransactionsFinished:':
    'prefix': 'paymentQueueRestoreCompletedTransactionsFinished:'
    'body': 'paymentQueueRestoreCompletedTransactionsFinished(${1:SKPaymentQueue* queue})'
  'productsRequest:didReceiveResponse:':
    'prefix': 'productsRequest:didReceiveResponse:'
    'body': 'productsRequest(${1:SKProductsRequest* request}, didReceiveResponse:${2:SKProductsResponse* response})'
  'request:didFailWithError:':
    'prefix': 'request:didFailWithError:'
    'body': 'request(${1:SKRequest* request}, didFailWithError:${2:NSError* error})'
  'requestDidFinish:':
    'prefix': 'requestDidFinish:'
    'body': 'requestDidFinish(${1:SKRequest* request})'
