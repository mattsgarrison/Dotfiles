'.source.rubymotion':
  'NSArgumentDomain (NSString*)':
    'prefix': 'NSArgumentDomain'
    'body': 'NSArgumentDomain'
  'NSAssertionHandlerKey (NSString*)':
    'prefix': 'NSAssertionHandlerKey'
    'body': 'NSAssertionHandlerKey'
  'NSAverageKeyValueOperator (NSString*)':
    'prefix': 'NSAverageKeyValueOperator'
    'body': 'NSAverageKeyValueOperator'
  'NSBuddhistCalendar (NSString*)':
    'prefix': 'NSBuddhistCalendar'
    'body': 'NSBuddhistCalendar'
  'NSBundleDidLoadNotification (NSString*)':
    'prefix': 'NSBundleDidLoadNotification'
    'body': 'NSBundleDidLoadNotification'
  'NSCharacterConversionException (NSString*)':
    'prefix': 'NSCharacterConversionException'
    'body': 'NSCharacterConversionException'
  'NSChineseCalendar (NSString*)':
    'prefix': 'NSChineseCalendar'
    'body': 'NSChineseCalendar'
  'NSCocoaErrorDomain (NSString*)':
    'prefix': 'NSCocoaErrorDomain'
    'body': 'NSCocoaErrorDomain'
  'NSCountKeyValueOperator (NSString*)':
    'prefix': 'NSCountKeyValueOperator'
    'body': 'NSCountKeyValueOperator'
  'NSCurrentLocaleDidChangeNotification (NSString*)':
    'prefix': 'NSCurrentLocaleDidChangeNotification'
    'body': 'NSCurrentLocaleDidChangeNotification'
  'NSDecimalNumberDivideByZeroException (NSString*)':
    'prefix': 'NSDecimalNumberDivideByZeroException'
    'body': 'NSDecimalNumberDivideByZeroException'
  'NSDecimalNumberExactnessException (NSString*)':
    'prefix': 'NSDecimalNumberExactnessException'
    'body': 'NSDecimalNumberExactnessException'
  'NSDecimalNumberOverflowException (NSString*)':
    'prefix': 'NSDecimalNumberOverflowException'
    'body': 'NSDecimalNumberOverflowException'
  'NSDecimalNumberUnderflowException (NSString*)':
    'prefix': 'NSDecimalNumberUnderflowException'
    'body': 'NSDecimalNumberUnderflowException'
  'NSDefaultRunLoopMode (NSString*)':
    'prefix': 'NSDefaultRunLoopMode'
    'body': 'NSDefaultRunLoopMode'
  'NSDestinationInvalidException (NSString*)':
    'prefix': 'NSDestinationInvalidException'
    'body': 'NSDestinationInvalidException'
  'NSDidBecomeSingleThreadedNotification (NSString*)':
    'prefix': 'NSDidBecomeSingleThreadedNotification'
    'body': 'NSDidBecomeSingleThreadedNotification'
  'NSDistinctUnionOfArraysKeyValueOperator (NSString*)':
    'prefix': 'NSDistinctUnionOfArraysKeyValueOperator'
    'body': 'NSDistinctUnionOfArraysKeyValueOperator'
  'NSDistinctUnionOfObjectsKeyValueOperator (NSString*)':
    'prefix': 'NSDistinctUnionOfObjectsKeyValueOperator'
    'body': 'NSDistinctUnionOfObjectsKeyValueOperator'
  'NSDistinctUnionOfSetsKeyValueOperator (NSString*)':
    'prefix': 'NSDistinctUnionOfSetsKeyValueOperator'
    'body': 'NSDistinctUnionOfSetsKeyValueOperator'
  'NSErrorFailingURLStringKey (NSString*)':
    'prefix': 'NSErrorFailingURLStringKey'
    'body': 'NSErrorFailingURLStringKey'
  'NSFileAppendOnly (NSString*)':
    'prefix': 'NSFileAppendOnly'
    'body': 'NSFileAppendOnly'
  'NSFileBusy (NSString*)':
    'prefix': 'NSFileBusy'
    'body': 'NSFileBusy'
  'NSFileCreationDate (NSString*)':
    'prefix': 'NSFileCreationDate'
    'body': 'NSFileCreationDate'
  'NSFileDeviceIdentifier (NSString*)':
    'prefix': 'NSFileDeviceIdentifier'
    'body': 'NSFileDeviceIdentifier'
  'NSFileExtensionHidden (NSString*)':
    'prefix': 'NSFileExtensionHidden'
    'body': 'NSFileExtensionHidden'
  'NSFileGroupOwnerAccountID (NSString*)':
    'prefix': 'NSFileGroupOwnerAccountID'
    'body': 'NSFileGroupOwnerAccountID'
  'NSFileGroupOwnerAccountName (NSString*)':
    'prefix': 'NSFileGroupOwnerAccountName'
    'body': 'NSFileGroupOwnerAccountName'
  'NSFileHFSCreatorCode (NSString*)':
    'prefix': 'NSFileHFSCreatorCode'
    'body': 'NSFileHFSCreatorCode'
  'NSFileHFSTypeCode (NSString*)':
    'prefix': 'NSFileHFSTypeCode'
    'body': 'NSFileHFSTypeCode'
  'NSFileHandleConnectionAcceptedNotification (NSString*)':
    'prefix': 'NSFileHandleConnectionAcceptedNotification'
    'body': 'NSFileHandleConnectionAcceptedNotification'
  'NSFileHandleDataAvailableNotification (NSString*)':
    'prefix': 'NSFileHandleDataAvailableNotification'
    'body': 'NSFileHandleDataAvailableNotification'
  'NSFileHandleNotificationDataItem (NSString*)':
    'prefix': 'NSFileHandleNotificationDataItem'
    'body': 'NSFileHandleNotificationDataItem'
  'NSFileHandleNotificationFileHandleItem (NSString*)':
    'prefix': 'NSFileHandleNotificationFileHandleItem'
    'body': 'NSFileHandleNotificationFileHandleItem'
  'NSFileHandleNotificationMonitorModes (NSString*)':
    'prefix': 'NSFileHandleNotificationMonitorModes'
    'body': 'NSFileHandleNotificationMonitorModes'
  'NSFileHandleOperationException (NSString*)':
    'prefix': 'NSFileHandleOperationException'
    'body': 'NSFileHandleOperationException'
  'NSFileHandleReadCompletionNotification (NSString*)':
    'prefix': 'NSFileHandleReadCompletionNotification'
    'body': 'NSFileHandleReadCompletionNotification'
  'NSFileHandleReadToEndOfFileCompletionNotification (NSString*)':
    'prefix': 'NSFileHandleReadToEndOfFileCompletionNotification'
    'body': 'NSFileHandleReadToEndOfFileCompletionNotification'
  'NSFileImmutable (NSString*)':
    'prefix': 'NSFileImmutable'
    'body': 'NSFileImmutable'
  'NSFileModificationDate (NSString*)':
    'prefix': 'NSFileModificationDate'
    'body': 'NSFileModificationDate'
  'NSFileOwnerAccountID (NSString*)':
    'prefix': 'NSFileOwnerAccountID'
    'body': 'NSFileOwnerAccountID'
  'NSFileOwnerAccountName (NSString*)':
    'prefix': 'NSFileOwnerAccountName'
    'body': 'NSFileOwnerAccountName'
  'NSFilePathErrorKey (NSString*)':
    'prefix': 'NSFilePathErrorKey'
    'body': 'NSFilePathErrorKey'
  'NSFilePosixPermissions (NSString*)':
    'prefix': 'NSFilePosixPermissions'
    'body': 'NSFilePosixPermissions'
  'NSFileProtectionComplete (NSString*)':
    'prefix': 'NSFileProtectionComplete'
    'body': 'NSFileProtectionComplete'
  'NSFileProtectionCompleteUnlessOpen (NSString*)':
    'prefix': 'NSFileProtectionCompleteUnlessOpen'
    'body': 'NSFileProtectionCompleteUnlessOpen'
  'NSFileProtectionCompleteUntilFirstUserAuthentication (NSString*)':
    'prefix': 'NSFileProtectionCompleteUntilFirstUserAuthentication'
    'body': 'NSFileProtectionCompleteUntilFirstUserAuthentication'
  'NSFileProtectionKey (NSString*)':
    'prefix': 'NSFileProtectionKey'
    'body': 'NSFileProtectionKey'
  'NSFileProtectionNone (NSString*)':
    'prefix': 'NSFileProtectionNone'
    'body': 'NSFileProtectionNone'
  'NSFileReferenceCount (NSString*)':
    'prefix': 'NSFileReferenceCount'
    'body': 'NSFileReferenceCount'
  'NSFileSize (NSString*)':
    'prefix': 'NSFileSize'
    'body': 'NSFileSize'
  'NSFileSystemFileNumber (NSString*)':
    'prefix': 'NSFileSystemFileNumber'
    'body': 'NSFileSystemFileNumber'
  'NSFileSystemFreeNodes (NSString*)':
    'prefix': 'NSFileSystemFreeNodes'
    'body': 'NSFileSystemFreeNodes'
  'NSFileSystemFreeSize (NSString*)':
    'prefix': 'NSFileSystemFreeSize'
    'body': 'NSFileSystemFreeSize'
  'NSFileSystemNodes (NSString*)':
    'prefix': 'NSFileSystemNodes'
    'body': 'NSFileSystemNodes'
  'NSFileSystemNumber (NSString*)':
    'prefix': 'NSFileSystemNumber'
    'body': 'NSFileSystemNumber'
  'NSFileSystemSize (NSString*)':
    'prefix': 'NSFileSystemSize'
    'body': 'NSFileSystemSize'
  'NSFileType (NSString*)':
    'prefix': 'NSFileType'
    'body': 'NSFileType'
  'NSFileTypeBlockSpecial (NSString*)':
    'prefix': 'NSFileTypeBlockSpecial'
    'body': 'NSFileTypeBlockSpecial'
  'NSFileTypeCharacterSpecial (NSString*)':
    'prefix': 'NSFileTypeCharacterSpecial'
    'body': 'NSFileTypeCharacterSpecial'
  'NSFileTypeDirectory (NSString*)':
    'prefix': 'NSFileTypeDirectory'
    'body': 'NSFileTypeDirectory'
  'NSFileTypeRegular (NSString*)':
    'prefix': 'NSFileTypeRegular'
    'body': 'NSFileTypeRegular'
  'NSFileTypeSocket (NSString*)':
    'prefix': 'NSFileTypeSocket'
    'body': 'NSFileTypeSocket'
  'NSFileTypeSymbolicLink (NSString*)':
    'prefix': 'NSFileTypeSymbolicLink'
    'body': 'NSFileTypeSymbolicLink'
  'NSFileTypeUnknown (NSString*)':
    'prefix': 'NSFileTypeUnknown'
    'body': 'NSFileTypeUnknown'
  'NSFoundationVersionNumber (double)':
    'prefix': 'NSFoundationVersionNumber'
    'body': 'NSFoundationVersionNumber'
  'NSGenericException (NSString*)':
    'prefix': 'NSGenericException'
    'body': 'NSGenericException'
  'NSGlobalDomain (NSString*)':
    'prefix': 'NSGlobalDomain'
    'body': 'NSGlobalDomain'
  'NSGregorianCalendar (NSString*)':
    'prefix': 'NSGregorianCalendar'
    'body': 'NSGregorianCalendar'
  'NSHTTPCookieComment (NSString*)':
    'prefix': 'NSHTTPCookieComment'
    'body': 'NSHTTPCookieComment'
  'NSHTTPCookieCommentURL (NSString*)':
    'prefix': 'NSHTTPCookieCommentURL'
    'body': 'NSHTTPCookieCommentURL'
  'NSHTTPCookieDiscard (NSString*)':
    'prefix': 'NSHTTPCookieDiscard'
    'body': 'NSHTTPCookieDiscard'
  'NSHTTPCookieDomain (NSString*)':
    'prefix': 'NSHTTPCookieDomain'
    'body': 'NSHTTPCookieDomain'
  'NSHTTPCookieExpires (NSString*)':
    'prefix': 'NSHTTPCookieExpires'
    'body': 'NSHTTPCookieExpires'
  'NSHTTPCookieManagerAcceptPolicyChangedNotification (NSString*)':
    'prefix': 'NSHTTPCookieManagerAcceptPolicyChangedNotification'
    'body': 'NSHTTPCookieManagerAcceptPolicyChangedNotification'
  'NSHTTPCookieManagerCookiesChangedNotification (NSString*)':
    'prefix': 'NSHTTPCookieManagerCookiesChangedNotification'
    'body': 'NSHTTPCookieManagerCookiesChangedNotification'
  'NSHTTPCookieMaximumAge (NSString*)':
    'prefix': 'NSHTTPCookieMaximumAge'
    'body': 'NSHTTPCookieMaximumAge'
  'NSHTTPCookieName (NSString*)':
    'prefix': 'NSHTTPCookieName'
    'body': 'NSHTTPCookieName'
  'NSHTTPCookieOriginURL (NSString*)':
    'prefix': 'NSHTTPCookieOriginURL'
    'body': 'NSHTTPCookieOriginURL'
  'NSHTTPCookiePath (NSString*)':
    'prefix': 'NSHTTPCookiePath'
    'body': 'NSHTTPCookiePath'
  'NSHTTPCookiePort (NSString*)':
    'prefix': 'NSHTTPCookiePort'
    'body': 'NSHTTPCookiePort'
  'NSHTTPCookieSecure (NSString*)':
    'prefix': 'NSHTTPCookieSecure'
    'body': 'NSHTTPCookieSecure'
  'NSHTTPCookieValue (NSString*)':
    'prefix': 'NSHTTPCookieValue'
    'body': 'NSHTTPCookieValue'
  'NSHTTPCookieVersion (NSString*)':
    'prefix': 'NSHTTPCookieVersion'
    'body': 'NSHTTPCookieVersion'
  'NSHebrewCalendar (NSString*)':
    'prefix': 'NSHebrewCalendar'
    'body': 'NSHebrewCalendar'
  'NSHelpAnchorErrorKey (NSString*)':
    'prefix': 'NSHelpAnchorErrorKey'
    'body': 'NSHelpAnchorErrorKey'
  'NSISO8601Calendar (NSString*)':
    'prefix': 'NSISO8601Calendar'
    'body': 'NSISO8601Calendar'
  'NSIndianCalendar (NSString*)':
    'prefix': 'NSIndianCalendar'
    'body': 'NSIndianCalendar'
  'NSInternalInconsistencyException (NSString*)':
    'prefix': 'NSInternalInconsistencyException'
    'body': 'NSInternalInconsistencyException'
  'NSInvalidArchiveOperationException (NSString*)':
    'prefix': 'NSInvalidArchiveOperationException'
    'body': 'NSInvalidArchiveOperationException'
  'NSInvalidArgumentException (NSString*)':
    'prefix': 'NSInvalidArgumentException'
    'body': 'NSInvalidArgumentException'
  'NSInvalidReceivePortException (NSString*)':
    'prefix': 'NSInvalidReceivePortException'
    'body': 'NSInvalidReceivePortException'
  'NSInvalidSendPortException (NSString*)':
    'prefix': 'NSInvalidSendPortException'
    'body': 'NSInvalidSendPortException'
  'NSInvalidUnarchiveOperationException (NSString*)':
    'prefix': 'NSInvalidUnarchiveOperationException'
    'body': 'NSInvalidUnarchiveOperationException'
  'NSInvocationOperationCancelledException (NSString*)':
    'prefix': 'NSInvocationOperationCancelledException'
    'body': 'NSInvocationOperationCancelledException'
  'NSInvocationOperationVoidResultException (NSString*)':
    'prefix': 'NSInvocationOperationVoidResultException'
    'body': 'NSInvocationOperationVoidResultException'
  'NSIsNilTransformerName (NSString*)':
    'prefix': 'NSIsNilTransformerName'
    'body': 'NSIsNilTransformerName'
  'NSIsNotNilTransformerName (NSString*)':
    'prefix': 'NSIsNotNilTransformerName'
    'body': 'NSIsNotNilTransformerName'
  'NSIslamicCalendar (NSString*)':
    'prefix': 'NSIslamicCalendar'
    'body': 'NSIslamicCalendar'
  'NSIslamicCivilCalendar (NSString*)':
    'prefix': 'NSIslamicCivilCalendar'
    'body': 'NSIslamicCivilCalendar'
  'NSJapaneseCalendar (NSString*)':
    'prefix': 'NSJapaneseCalendar'
    'body': 'NSJapaneseCalendar'
  'NSKeyValueChangeIndexesKey (NSString*)':
    'prefix': 'NSKeyValueChangeIndexesKey'
    'body': 'NSKeyValueChangeIndexesKey'
  'NSKeyValueChangeKindKey (NSString*)':
    'prefix': 'NSKeyValueChangeKindKey'
    'body': 'NSKeyValueChangeKindKey'
  'NSKeyValueChangeNewKey (NSString*)':
    'prefix': 'NSKeyValueChangeNewKey'
    'body': 'NSKeyValueChangeNewKey'
  'NSKeyValueChangeNotificationIsPriorKey (NSString*)':
    'prefix': 'NSKeyValueChangeNotificationIsPriorKey'
    'body': 'NSKeyValueChangeNotificationIsPriorKey'
  'NSKeyValueChangeOldKey (NSString*)':
    'prefix': 'NSKeyValueChangeOldKey'
    'body': 'NSKeyValueChangeOldKey'
  'NSKeyedArchiveRootObjectKey (NSString*)':
    'prefix': 'NSKeyedArchiveRootObjectKey'
    'body': 'NSKeyedArchiveRootObjectKey'
  'NSKeyedUnarchiveFromDataTransformerName (NSString*)':
    'prefix': 'NSKeyedUnarchiveFromDataTransformerName'
    'body': 'NSKeyedUnarchiveFromDataTransformerName'
  'NSLinguisticTagAdjective (NSString*)':
    'prefix': 'NSLinguisticTagAdjective'
    'body': 'NSLinguisticTagAdjective'
  'NSLinguisticTagAdverb (NSString*)':
    'prefix': 'NSLinguisticTagAdverb'
    'body': 'NSLinguisticTagAdverb'
  'NSLinguisticTagClassifier (NSString*)':
    'prefix': 'NSLinguisticTagClassifier'
    'body': 'NSLinguisticTagClassifier'
  'NSLinguisticTagCloseParenthesis (NSString*)':
    'prefix': 'NSLinguisticTagCloseParenthesis'
    'body': 'NSLinguisticTagCloseParenthesis'
  'NSLinguisticTagCloseQuote (NSString*)':
    'prefix': 'NSLinguisticTagCloseQuote'
    'body': 'NSLinguisticTagCloseQuote'
  'NSLinguisticTagConjunction (NSString*)':
    'prefix': 'NSLinguisticTagConjunction'
    'body': 'NSLinguisticTagConjunction'
  'NSLinguisticTagDash (NSString*)':
    'prefix': 'NSLinguisticTagDash'
    'body': 'NSLinguisticTagDash'
  'NSLinguisticTagDeterminer (NSString*)':
    'prefix': 'NSLinguisticTagDeterminer'
    'body': 'NSLinguisticTagDeterminer'
  'NSLinguisticTagIdiom (NSString*)':
    'prefix': 'NSLinguisticTagIdiom'
    'body': 'NSLinguisticTagIdiom'
  'NSLinguisticTagInterjection (NSString*)':
    'prefix': 'NSLinguisticTagInterjection'
    'body': 'NSLinguisticTagInterjection'
  'NSLinguisticTagNoun (NSString*)':
    'prefix': 'NSLinguisticTagNoun'
    'body': 'NSLinguisticTagNoun'
  'NSLinguisticTagNumber (NSString*)':
    'prefix': 'NSLinguisticTagNumber'
    'body': 'NSLinguisticTagNumber'
  'NSLinguisticTagOpenParenthesis (NSString*)':
    'prefix': 'NSLinguisticTagOpenParenthesis'
    'body': 'NSLinguisticTagOpenParenthesis'
  'NSLinguisticTagOpenQuote (NSString*)':
    'prefix': 'NSLinguisticTagOpenQuote'
    'body': 'NSLinguisticTagOpenQuote'
  'NSLinguisticTagOrganizationName (NSString*)':
    'prefix': 'NSLinguisticTagOrganizationName'
    'body': 'NSLinguisticTagOrganizationName'
  'NSLinguisticTagOther (NSString*)':
    'prefix': 'NSLinguisticTagOther'
    'body': 'NSLinguisticTagOther'
  'NSLinguisticTagOtherPunctuation (NSString*)':
    'prefix': 'NSLinguisticTagOtherPunctuation'
    'body': 'NSLinguisticTagOtherPunctuation'
  'NSLinguisticTagOtherWhitespace (NSString*)':
    'prefix': 'NSLinguisticTagOtherWhitespace'
    'body': 'NSLinguisticTagOtherWhitespace'
  'NSLinguisticTagOtherWord (NSString*)':
    'prefix': 'NSLinguisticTagOtherWord'
    'body': 'NSLinguisticTagOtherWord'
  'NSLinguisticTagParagraphBreak (NSString*)':
    'prefix': 'NSLinguisticTagParagraphBreak'
    'body': 'NSLinguisticTagParagraphBreak'
  'NSLinguisticTagParticle (NSString*)':
    'prefix': 'NSLinguisticTagParticle'
    'body': 'NSLinguisticTagParticle'
  'NSLinguisticTagPersonalName (NSString*)':
    'prefix': 'NSLinguisticTagPersonalName'
    'body': 'NSLinguisticTagPersonalName'
  'NSLinguisticTagPlaceName (NSString*)':
    'prefix': 'NSLinguisticTagPlaceName'
    'body': 'NSLinguisticTagPlaceName'
  'NSLinguisticTagPreposition (NSString*)':
    'prefix': 'NSLinguisticTagPreposition'
    'body': 'NSLinguisticTagPreposition'
  'NSLinguisticTagPronoun (NSString*)':
    'prefix': 'NSLinguisticTagPronoun'
    'body': 'NSLinguisticTagPronoun'
  'NSLinguisticTagPunctuation (NSString*)':
    'prefix': 'NSLinguisticTagPunctuation'
    'body': 'NSLinguisticTagPunctuation'
  'NSLinguisticTagSchemeLanguage (NSString*)':
    'prefix': 'NSLinguisticTagSchemeLanguage'
    'body': 'NSLinguisticTagSchemeLanguage'
  'NSLinguisticTagSchemeLemma (NSString*)':
    'prefix': 'NSLinguisticTagSchemeLemma'
    'body': 'NSLinguisticTagSchemeLemma'
  'NSLinguisticTagSchemeLexicalClass (NSString*)':
    'prefix': 'NSLinguisticTagSchemeLexicalClass'
    'body': 'NSLinguisticTagSchemeLexicalClass'
  'NSLinguisticTagSchemeNameType (NSString*)':
    'prefix': 'NSLinguisticTagSchemeNameType'
    'body': 'NSLinguisticTagSchemeNameType'
  'NSLinguisticTagSchemeNameTypeOrLexicalClass (NSString*)':
    'prefix': 'NSLinguisticTagSchemeNameTypeOrLexicalClass'
    'body': 'NSLinguisticTagSchemeNameTypeOrLexicalClass'
  'NSLinguisticTagSchemeScript (NSString*)':
    'prefix': 'NSLinguisticTagSchemeScript'
    'body': 'NSLinguisticTagSchemeScript'
  'NSLinguisticTagSchemeTokenType (NSString*)':
    'prefix': 'NSLinguisticTagSchemeTokenType'
    'body': 'NSLinguisticTagSchemeTokenType'
  'NSLinguisticTagSentenceTerminator (NSString*)':
    'prefix': 'NSLinguisticTagSentenceTerminator'
    'body': 'NSLinguisticTagSentenceTerminator'
  'NSLinguisticTagVerb (NSString*)':
    'prefix': 'NSLinguisticTagVerb'
    'body': 'NSLinguisticTagVerb'
  'NSLinguisticTagWhitespace (NSString*)':
    'prefix': 'NSLinguisticTagWhitespace'
    'body': 'NSLinguisticTagWhitespace'
  'NSLinguisticTagWord (NSString*)':
    'prefix': 'NSLinguisticTagWord'
    'body': 'NSLinguisticTagWord'
  'NSLinguisticTagWordJoiner (NSString*)':
    'prefix': 'NSLinguisticTagWordJoiner'
    'body': 'NSLinguisticTagWordJoiner'
  'NSLoadedClasses (NSString*)':
    'prefix': 'NSLoadedClasses'
    'body': 'NSLoadedClasses'
  'NSLocaleAlternateQuotationBeginDelimiterKey (NSString*)':
    'prefix': 'NSLocaleAlternateQuotationBeginDelimiterKey'
    'body': 'NSLocaleAlternateQuotationBeginDelimiterKey'
  'NSLocaleAlternateQuotationEndDelimiterKey (NSString*)':
    'prefix': 'NSLocaleAlternateQuotationEndDelimiterKey'
    'body': 'NSLocaleAlternateQuotationEndDelimiterKey'
  'NSLocaleCalendar (NSString*)':
    'prefix': 'NSLocaleCalendar'
    'body': 'NSLocaleCalendar'
  'NSLocaleCollationIdentifier (NSString*)':
    'prefix': 'NSLocaleCollationIdentifier'
    'body': 'NSLocaleCollationIdentifier'
  'NSLocaleCollatorIdentifier (NSString*)':
    'prefix': 'NSLocaleCollatorIdentifier'
    'body': 'NSLocaleCollatorIdentifier'
  'NSLocaleCountryCode (NSString*)':
    'prefix': 'NSLocaleCountryCode'
    'body': 'NSLocaleCountryCode'
  'NSLocaleCurrencyCode (NSString*)':
    'prefix': 'NSLocaleCurrencyCode'
    'body': 'NSLocaleCurrencyCode'
  'NSLocaleCurrencySymbol (NSString*)':
    'prefix': 'NSLocaleCurrencySymbol'
    'body': 'NSLocaleCurrencySymbol'
  'NSLocaleDecimalSeparator (NSString*)':
    'prefix': 'NSLocaleDecimalSeparator'
    'body': 'NSLocaleDecimalSeparator'
  'NSLocaleExemplarCharacterSet (NSString*)':
    'prefix': 'NSLocaleExemplarCharacterSet'
    'body': 'NSLocaleExemplarCharacterSet'
  'NSLocaleGroupingSeparator (NSString*)':
    'prefix': 'NSLocaleGroupingSeparator'
    'body': 'NSLocaleGroupingSeparator'
  'NSLocaleIdentifier (NSString*)':
    'prefix': 'NSLocaleIdentifier'
    'body': 'NSLocaleIdentifier'
  'NSLocaleLanguageCode (NSString*)':
    'prefix': 'NSLocaleLanguageCode'
    'body': 'NSLocaleLanguageCode'
  'NSLocaleMeasurementSystem (NSString*)':
    'prefix': 'NSLocaleMeasurementSystem'
    'body': 'NSLocaleMeasurementSystem'
  'NSLocaleQuotationBeginDelimiterKey (NSString*)':
    'prefix': 'NSLocaleQuotationBeginDelimiterKey'
    'body': 'NSLocaleQuotationBeginDelimiterKey'
  'NSLocaleQuotationEndDelimiterKey (NSString*)':
    'prefix': 'NSLocaleQuotationEndDelimiterKey'
    'body': 'NSLocaleQuotationEndDelimiterKey'
  'NSLocaleScriptCode (NSString*)':
    'prefix': 'NSLocaleScriptCode'
    'body': 'NSLocaleScriptCode'
  'NSLocaleUsesMetricSystem (NSString*)':
    'prefix': 'NSLocaleUsesMetricSystem'
    'body': 'NSLocaleUsesMetricSystem'
  'NSLocaleVariantCode (NSString*)':
    'prefix': 'NSLocaleVariantCode'
    'body': 'NSLocaleVariantCode'
  'NSLocalizedDescriptionKey (NSString*)':
    'prefix': 'NSLocalizedDescriptionKey'
    'body': 'NSLocalizedDescriptionKey'
  'NSLocalizedFailureReasonErrorKey (NSString*)':
    'prefix': 'NSLocalizedFailureReasonErrorKey'
    'body': 'NSLocalizedFailureReasonErrorKey'
  'NSLocalizedRecoveryOptionsErrorKey (NSString*)':
    'prefix': 'NSLocalizedRecoveryOptionsErrorKey'
    'body': 'NSLocalizedRecoveryOptionsErrorKey'
  'NSLocalizedRecoverySuggestionErrorKey (NSString*)':
    'prefix': 'NSLocalizedRecoverySuggestionErrorKey'
    'body': 'NSLocalizedRecoverySuggestionErrorKey'
  'NSMachErrorDomain (NSString*)':
    'prefix': 'NSMachErrorDomain'
    'body': 'NSMachErrorDomain'
  'NSMallocException (NSString*)':
    'prefix': 'NSMallocException'
    'body': 'NSMallocException'
  'NSMaximumKeyValueOperator (NSString*)':
    'prefix': 'NSMaximumKeyValueOperator'
    'body': 'NSMaximumKeyValueOperator'
  'NSMetadataItemDisplayNameKey (NSString*)':
    'prefix': 'NSMetadataItemDisplayNameKey'
    'body': 'NSMetadataItemDisplayNameKey'
  'NSMetadataItemFSContentChangeDateKey (NSString*)':
    'prefix': 'NSMetadataItemFSContentChangeDateKey'
    'body': 'NSMetadataItemFSContentChangeDateKey'
  'NSMetadataItemFSCreationDateKey (NSString*)':
    'prefix': 'NSMetadataItemFSCreationDateKey'
    'body': 'NSMetadataItemFSCreationDateKey'
  'NSMetadataItemFSNameKey (NSString*)':
    'prefix': 'NSMetadataItemFSNameKey'
    'body': 'NSMetadataItemFSNameKey'
  'NSMetadataItemFSSizeKey (NSString*)':
    'prefix': 'NSMetadataItemFSSizeKey'
    'body': 'NSMetadataItemFSSizeKey'
  'NSMetadataItemIsUbiquitousKey (NSString*)':
    'prefix': 'NSMetadataItemIsUbiquitousKey'
    'body': 'NSMetadataItemIsUbiquitousKey'
  'NSMetadataItemPathKey (NSString*)':
    'prefix': 'NSMetadataItemPathKey'
    'body': 'NSMetadataItemPathKey'
  'NSMetadataItemURLKey (NSString*)':
    'prefix': 'NSMetadataItemURLKey'
    'body': 'NSMetadataItemURLKey'
  'NSMetadataQueryDidFinishGatheringNotification (NSString*)':
    'prefix': 'NSMetadataQueryDidFinishGatheringNotification'
    'body': 'NSMetadataQueryDidFinishGatheringNotification'
  'NSMetadataQueryDidStartGatheringNotification (NSString*)':
    'prefix': 'NSMetadataQueryDidStartGatheringNotification'
    'body': 'NSMetadataQueryDidStartGatheringNotification'
  'NSMetadataQueryDidUpdateNotification (NSString*)':
    'prefix': 'NSMetadataQueryDidUpdateNotification'
    'body': 'NSMetadataQueryDidUpdateNotification'
  'NSMetadataQueryGatheringProgressNotification (NSString*)':
    'prefix': 'NSMetadataQueryGatheringProgressNotification'
    'body': 'NSMetadataQueryGatheringProgressNotification'
  'NSMetadataQueryResultContentRelevanceAttribute (NSString*)':
    'prefix': 'NSMetadataQueryResultContentRelevanceAttribute'
    'body': 'NSMetadataQueryResultContentRelevanceAttribute'
  'NSMetadataQueryUbiquitousDataScope (NSString*)':
    'prefix': 'NSMetadataQueryUbiquitousDataScope'
    'body': 'NSMetadataQueryUbiquitousDataScope'
  'NSMetadataQueryUbiquitousDocumentsScope (NSString*)':
    'prefix': 'NSMetadataQueryUbiquitousDocumentsScope'
    'body': 'NSMetadataQueryUbiquitousDocumentsScope'
  'NSMetadataQueryUpdateAddedItemsKey (NSString*)':
    'prefix': 'NSMetadataQueryUpdateAddedItemsKey'
    'body': 'NSMetadataQueryUpdateAddedItemsKey'
  'NSMetadataQueryUpdateChangedItemsKey (NSString*)':
    'prefix': 'NSMetadataQueryUpdateChangedItemsKey'
    'body': 'NSMetadataQueryUpdateChangedItemsKey'
  'NSMetadataQueryUpdateRemovedItemsKey (NSString*)':
    'prefix': 'NSMetadataQueryUpdateRemovedItemsKey'
    'body': 'NSMetadataQueryUpdateRemovedItemsKey'
  'NSMetadataUbiquitousItemDownloadingErrorKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemDownloadingErrorKey'
    'body': 'NSMetadataUbiquitousItemDownloadingErrorKey'
  'NSMetadataUbiquitousItemDownloadingStatusCurrent (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemDownloadingStatusCurrent'
    'body': 'NSMetadataUbiquitousItemDownloadingStatusCurrent'
  'NSMetadataUbiquitousItemDownloadingStatusDownloaded (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemDownloadingStatusDownloaded'
    'body': 'NSMetadataUbiquitousItemDownloadingStatusDownloaded'
  'NSMetadataUbiquitousItemDownloadingStatusKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemDownloadingStatusKey'
    'body': 'NSMetadataUbiquitousItemDownloadingStatusKey'
  'NSMetadataUbiquitousItemDownloadingStatusNotDownloaded (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemDownloadingStatusNotDownloaded'
    'body': 'NSMetadataUbiquitousItemDownloadingStatusNotDownloaded'
  'NSMetadataUbiquitousItemHasUnresolvedConflictsKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemHasUnresolvedConflictsKey'
    'body': 'NSMetadataUbiquitousItemHasUnresolvedConflictsKey'
  'NSMetadataUbiquitousItemIsDownloadedKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemIsDownloadedKey'
    'body': 'NSMetadataUbiquitousItemIsDownloadedKey'
  'NSMetadataUbiquitousItemIsDownloadingKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemIsDownloadingKey'
    'body': 'NSMetadataUbiquitousItemIsDownloadingKey'
  'NSMetadataUbiquitousItemIsUploadedKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemIsUploadedKey'
    'body': 'NSMetadataUbiquitousItemIsUploadedKey'
  'NSMetadataUbiquitousItemIsUploadingKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemIsUploadingKey'
    'body': 'NSMetadataUbiquitousItemIsUploadingKey'
  'NSMetadataUbiquitousItemPercentDownloadedKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemPercentDownloadedKey'
    'body': 'NSMetadataUbiquitousItemPercentDownloadedKey'
  'NSMetadataUbiquitousItemPercentUploadedKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemPercentUploadedKey'
    'body': 'NSMetadataUbiquitousItemPercentUploadedKey'
  'NSMetadataUbiquitousItemUploadingErrorKey (NSString*)':
    'prefix': 'NSMetadataUbiquitousItemUploadingErrorKey'
    'body': 'NSMetadataUbiquitousItemUploadingErrorKey'
  'NSMinimumKeyValueOperator (NSString*)':
    'prefix': 'NSMinimumKeyValueOperator'
    'body': 'NSMinimumKeyValueOperator'
  'NSNegateBooleanTransformerName (NSString*)':
    'prefix': 'NSNegateBooleanTransformerName'
    'body': 'NSNegateBooleanTransformerName'
  'NSNetServicesErrorCode (NSString*)':
    'prefix': 'NSNetServicesErrorCode'
    'body': 'NSNetServicesErrorCode'
  'NSNetServicesErrorDomain (NSString*)':
    'prefix': 'NSNetServicesErrorDomain'
    'body': 'NSNetServicesErrorDomain'
  'NSOSStatusErrorDomain (NSString*)':
    'prefix': 'NSOSStatusErrorDomain'
    'body': 'NSOSStatusErrorDomain'
  'NSObjectInaccessibleException (NSString*)':
    'prefix': 'NSObjectInaccessibleException'
    'body': 'NSObjectInaccessibleException'
  'NSObjectNotAvailableException (NSString*)':
    'prefix': 'NSObjectNotAvailableException'
    'body': 'NSObjectNotAvailableException'
  'NSOldStyleException (NSString*)':
    'prefix': 'NSOldStyleException'
    'body': 'NSOldStyleException'
  'NSPOSIXErrorDomain (NSString*)':
    'prefix': 'NSPOSIXErrorDomain'
    'body': 'NSPOSIXErrorDomain'
  'NSParseErrorException (NSString*)':
    'prefix': 'NSParseErrorException'
    'body': 'NSParseErrorException'
  'NSPersianCalendar (NSString*)':
    'prefix': 'NSPersianCalendar'
    'body': 'NSPersianCalendar'
  'NSPortDidBecomeInvalidNotification (NSString*)':
    'prefix': 'NSPortDidBecomeInvalidNotification'
    'body': 'NSPortDidBecomeInvalidNotification'
  'NSPortReceiveException (NSString*)':
    'prefix': 'NSPortReceiveException'
    'body': 'NSPortReceiveException'
  'NSPortSendException (NSString*)':
    'prefix': 'NSPortSendException'
    'body': 'NSPortSendException'
  'NSPortTimeoutException (NSString*)':
    'prefix': 'NSPortTimeoutException'
    'body': 'NSPortTimeoutException'
  'NSProgressEstimatedTimeRemainingKey (NSString*)':
    'prefix': 'NSProgressEstimatedTimeRemainingKey'
    'body': 'NSProgressEstimatedTimeRemainingKey'
  'NSProgressFileCompletedCountKey (NSString*)':
    'prefix': 'NSProgressFileCompletedCountKey'
    'body': 'NSProgressFileCompletedCountKey'
  'NSProgressFileOperationKindCopying (NSString*)':
    'prefix': 'NSProgressFileOperationKindCopying'
    'body': 'NSProgressFileOperationKindCopying'
  'NSProgressFileOperationKindDecompressingAfterDownloading (NSString*)':
    'prefix': 'NSProgressFileOperationKindDecompressingAfterDownloading'
    'body': 'NSProgressFileOperationKindDecompressingAfterDownloading'
  'NSProgressFileOperationKindDownloading (NSString*)':
    'prefix': 'NSProgressFileOperationKindDownloading'
    'body': 'NSProgressFileOperationKindDownloading'
  'NSProgressFileOperationKindKey (NSString*)':
    'prefix': 'NSProgressFileOperationKindKey'
    'body': 'NSProgressFileOperationKindKey'
  'NSProgressFileOperationKindReceiving (NSString*)':
    'prefix': 'NSProgressFileOperationKindReceiving'
    'body': 'NSProgressFileOperationKindReceiving'
  'NSProgressFileTotalCountKey (NSString*)':
    'prefix': 'NSProgressFileTotalCountKey'
    'body': 'NSProgressFileTotalCountKey'
  'NSProgressFileURLKey (NSString*)':
    'prefix': 'NSProgressFileURLKey'
    'body': 'NSProgressFileURLKey'
  'NSProgressKindFile (NSString*)':
    'prefix': 'NSProgressKindFile'
    'body': 'NSProgressKindFile'
  'NSProgressThroughputKey (NSString*)':
    'prefix': 'NSProgressThroughputKey'
    'body': 'NSProgressThroughputKey'
  'NSRangeException (NSString*)':
    'prefix': 'NSRangeException'
    'body': 'NSRangeException'
  'NSRecoveryAttempterErrorKey (NSString*)':
    'prefix': 'NSRecoveryAttempterErrorKey'
    'body': 'NSRecoveryAttempterErrorKey'
  'NSRegistrationDomain (NSString*)':
    'prefix': 'NSRegistrationDomain'
    'body': 'NSRegistrationDomain'
  'NSRepublicOfChinaCalendar (NSString*)':
    'prefix': 'NSRepublicOfChinaCalendar'
    'body': 'NSRepublicOfChinaCalendar'
  'NSRunLoopCommonModes (NSString*)':
    'prefix': 'NSRunLoopCommonModes'
    'body': 'NSRunLoopCommonModes'
  'NSStreamDataWrittenToMemoryStreamKey (NSString*)':
    'prefix': 'NSStreamDataWrittenToMemoryStreamKey'
    'body': 'NSStreamDataWrittenToMemoryStreamKey'
  'NSStreamFileCurrentOffsetKey (NSString*)':
    'prefix': 'NSStreamFileCurrentOffsetKey'
    'body': 'NSStreamFileCurrentOffsetKey'
  'NSStreamNetworkServiceType (NSString*)':
    'prefix': 'NSStreamNetworkServiceType'
    'body': 'NSStreamNetworkServiceType'
  'NSStreamNetworkServiceTypeBackground (NSString*)':
    'prefix': 'NSStreamNetworkServiceTypeBackground'
    'body': 'NSStreamNetworkServiceTypeBackground'
  'NSStreamNetworkServiceTypeVideo (NSString*)':
    'prefix': 'NSStreamNetworkServiceTypeVideo'
    'body': 'NSStreamNetworkServiceTypeVideo'
  'NSStreamNetworkServiceTypeVoIP (NSString*)':
    'prefix': 'NSStreamNetworkServiceTypeVoIP'
    'body': 'NSStreamNetworkServiceTypeVoIP'
  'NSStreamNetworkServiceTypeVoice (NSString*)':
    'prefix': 'NSStreamNetworkServiceTypeVoice'
    'body': 'NSStreamNetworkServiceTypeVoice'
  'NSStreamSOCKSErrorDomain (NSString*)':
    'prefix': 'NSStreamSOCKSErrorDomain'
    'body': 'NSStreamSOCKSErrorDomain'
  'NSStreamSOCKSProxyConfigurationKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyConfigurationKey'
    'body': 'NSStreamSOCKSProxyConfigurationKey'
  'NSStreamSOCKSProxyHostKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyHostKey'
    'body': 'NSStreamSOCKSProxyHostKey'
  'NSStreamSOCKSProxyPasswordKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyPasswordKey'
    'body': 'NSStreamSOCKSProxyPasswordKey'
  'NSStreamSOCKSProxyPortKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyPortKey'
    'body': 'NSStreamSOCKSProxyPortKey'
  'NSStreamSOCKSProxyUserKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyUserKey'
    'body': 'NSStreamSOCKSProxyUserKey'
  'NSStreamSOCKSProxyVersion4 (NSString*)':
    'prefix': 'NSStreamSOCKSProxyVersion4'
    'body': 'NSStreamSOCKSProxyVersion4'
  'NSStreamSOCKSProxyVersion5 (NSString*)':
    'prefix': 'NSStreamSOCKSProxyVersion5'
    'body': 'NSStreamSOCKSProxyVersion5'
  'NSStreamSOCKSProxyVersionKey (NSString*)':
    'prefix': 'NSStreamSOCKSProxyVersionKey'
    'body': 'NSStreamSOCKSProxyVersionKey'
  'NSStreamSocketSSLErrorDomain (NSString*)':
    'prefix': 'NSStreamSocketSSLErrorDomain'
    'body': 'NSStreamSocketSSLErrorDomain'
  'NSStreamSocketSecurityLevelKey (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelKey'
    'body': 'NSStreamSocketSecurityLevelKey'
  'NSStreamSocketSecurityLevelNegotiatedSSL (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelNegotiatedSSL'
    'body': 'NSStreamSocketSecurityLevelNegotiatedSSL'
  'NSStreamSocketSecurityLevelNone (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelNone'
    'body': 'NSStreamSocketSecurityLevelNone'
  'NSStreamSocketSecurityLevelSSLv2 (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelSSLv2'
    'body': 'NSStreamSocketSecurityLevelSSLv2'
  'NSStreamSocketSecurityLevelSSLv3 (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelSSLv3'
    'body': 'NSStreamSocketSecurityLevelSSLv3'
  'NSStreamSocketSecurityLevelTLSv1 (NSString*)':
    'prefix': 'NSStreamSocketSecurityLevelTLSv1'
    'body': 'NSStreamSocketSecurityLevelTLSv1'
  'NSStringEncodingErrorKey (NSString*)':
    'prefix': 'NSStringEncodingErrorKey'
    'body': 'NSStringEncodingErrorKey'
  'NSSumKeyValueOperator (NSString*)':
    'prefix': 'NSSumKeyValueOperator'
    'body': 'NSSumKeyValueOperator'
  'NSSystemClockDidChangeNotification (NSString*)':
    'prefix': 'NSSystemClockDidChangeNotification'
    'body': 'NSSystemClockDidChangeNotification'
  'NSSystemTimeZoneDidChangeNotification (NSString*)':
    'prefix': 'NSSystemTimeZoneDidChangeNotification'
    'body': 'NSSystemTimeZoneDidChangeNotification'
  'NSTextCheckingAirlineKey (NSString*)':
    'prefix': 'NSTextCheckingAirlineKey'
    'body': 'NSTextCheckingAirlineKey'
  'NSTextCheckingCityKey (NSString*)':
    'prefix': 'NSTextCheckingCityKey'
    'body': 'NSTextCheckingCityKey'
  'NSTextCheckingCountryKey (NSString*)':
    'prefix': 'NSTextCheckingCountryKey'
    'body': 'NSTextCheckingCountryKey'
  'NSTextCheckingFlightKey (NSString*)':
    'prefix': 'NSTextCheckingFlightKey'
    'body': 'NSTextCheckingFlightKey'
  'NSTextCheckingJobTitleKey (NSString*)':
    'prefix': 'NSTextCheckingJobTitleKey'
    'body': 'NSTextCheckingJobTitleKey'
  'NSTextCheckingNameKey (NSString*)':
    'prefix': 'NSTextCheckingNameKey'
    'body': 'NSTextCheckingNameKey'
  'NSTextCheckingOrganizationKey (NSString*)':
    'prefix': 'NSTextCheckingOrganizationKey'
    'body': 'NSTextCheckingOrganizationKey'
  'NSTextCheckingPhoneKey (NSString*)':
    'prefix': 'NSTextCheckingPhoneKey'
    'body': 'NSTextCheckingPhoneKey'
  'NSTextCheckingStateKey (NSString*)':
    'prefix': 'NSTextCheckingStateKey'
    'body': 'NSTextCheckingStateKey'
  'NSTextCheckingStreetKey (NSString*)':
    'prefix': 'NSTextCheckingStreetKey'
    'body': 'NSTextCheckingStreetKey'
  'NSTextCheckingZIPKey (NSString*)':
    'prefix': 'NSTextCheckingZIPKey'
    'body': 'NSTextCheckingZIPKey'
  'NSThreadWillExitNotification (NSString*)':
    'prefix': 'NSThreadWillExitNotification'
    'body': 'NSThreadWillExitNotification'
  'NSURLAttributeModificationDateKey (NSString*)':
    'prefix': 'NSURLAttributeModificationDateKey'
    'body': 'NSURLAttributeModificationDateKey'
  'NSURLAuthenticationMethodClientCertificate (NSString*)':
    'prefix': 'NSURLAuthenticationMethodClientCertificate'
    'body': 'NSURLAuthenticationMethodClientCertificate'
  'NSURLAuthenticationMethodDefault (NSString*)':
    'prefix': 'NSURLAuthenticationMethodDefault'
    'body': 'NSURLAuthenticationMethodDefault'
  'NSURLAuthenticationMethodHTMLForm (NSString*)':
    'prefix': 'NSURLAuthenticationMethodHTMLForm'
    'body': 'NSURLAuthenticationMethodHTMLForm'
  'NSURLAuthenticationMethodHTTPBasic (NSString*)':
    'prefix': 'NSURLAuthenticationMethodHTTPBasic'
    'body': 'NSURLAuthenticationMethodHTTPBasic'
  'NSURLAuthenticationMethodHTTPDigest (NSString*)':
    'prefix': 'NSURLAuthenticationMethodHTTPDigest'
    'body': 'NSURLAuthenticationMethodHTTPDigest'
  'NSURLAuthenticationMethodNTLM (NSString*)':
    'prefix': 'NSURLAuthenticationMethodNTLM'
    'body': 'NSURLAuthenticationMethodNTLM'
  'NSURLAuthenticationMethodNegotiate (NSString*)':
    'prefix': 'NSURLAuthenticationMethodNegotiate'
    'body': 'NSURLAuthenticationMethodNegotiate'
  'NSURLAuthenticationMethodServerTrust (NSString*)':
    'prefix': 'NSURLAuthenticationMethodServerTrust'
    'body': 'NSURLAuthenticationMethodServerTrust'
  'NSURLContentAccessDateKey (NSString*)':
    'prefix': 'NSURLContentAccessDateKey'
    'body': 'NSURLContentAccessDateKey'
  'NSURLContentModificationDateKey (NSString*)':
    'prefix': 'NSURLContentModificationDateKey'
    'body': 'NSURLContentModificationDateKey'
  'NSURLCreationDateKey (NSString*)':
    'prefix': 'NSURLCreationDateKey'
    'body': 'NSURLCreationDateKey'
  'NSURLCredentialStorageChangedNotification (NSString*)':
    'prefix': 'NSURLCredentialStorageChangedNotification'
    'body': 'NSURLCredentialStorageChangedNotification'
  'NSURLCredentialStorageRemoveSynchronizableCredentials (NSString*)':
    'prefix': 'NSURLCredentialStorageRemoveSynchronizableCredentials'
    'body': 'NSURLCredentialStorageRemoveSynchronizableCredentials'
  'NSURLCustomIconKey (NSString*)':
    'prefix': 'NSURLCustomIconKey'
    'body': 'NSURLCustomIconKey'
  'NSURLEffectiveIconKey (NSString*)':
    'prefix': 'NSURLEffectiveIconKey'
    'body': 'NSURLEffectiveIconKey'
  'NSURLErrorBackgroundTaskCancelledReasonKey (NSString*)':
    'prefix': 'NSURLErrorBackgroundTaskCancelledReasonKey'
    'body': 'NSURLErrorBackgroundTaskCancelledReasonKey'
  'NSURLErrorDomain (NSString*)':
    'prefix': 'NSURLErrorDomain'
    'body': 'NSURLErrorDomain'
  'NSURLErrorFailingURLErrorKey (NSString*)':
    'prefix': 'NSURLErrorFailingURLErrorKey'
    'body': 'NSURLErrorFailingURLErrorKey'
  'NSURLErrorFailingURLPeerTrustErrorKey (NSString*)':
    'prefix': 'NSURLErrorFailingURLPeerTrustErrorKey'
    'body': 'NSURLErrorFailingURLPeerTrustErrorKey'
  'NSURLErrorFailingURLStringErrorKey (NSString*)':
    'prefix': 'NSURLErrorFailingURLStringErrorKey'
    'body': 'NSURLErrorFailingURLStringErrorKey'
  'NSURLErrorKey (NSString*)':
    'prefix': 'NSURLErrorKey'
    'body': 'NSURLErrorKey'
  'NSURLFileAllocatedSizeKey (NSString*)':
    'prefix': 'NSURLFileAllocatedSizeKey'
    'body': 'NSURLFileAllocatedSizeKey'
  'NSURLFileResourceIdentifierKey (NSString*)':
    'prefix': 'NSURLFileResourceIdentifierKey'
    'body': 'NSURLFileResourceIdentifierKey'
  'NSURLFileResourceTypeBlockSpecial (NSString*)':
    'prefix': 'NSURLFileResourceTypeBlockSpecial'
    'body': 'NSURLFileResourceTypeBlockSpecial'
  'NSURLFileResourceTypeCharacterSpecial (NSString*)':
    'prefix': 'NSURLFileResourceTypeCharacterSpecial'
    'body': 'NSURLFileResourceTypeCharacterSpecial'
  'NSURLFileResourceTypeDirectory (NSString*)':
    'prefix': 'NSURLFileResourceTypeDirectory'
    'body': 'NSURLFileResourceTypeDirectory'
  'NSURLFileResourceTypeKey (NSString*)':
    'prefix': 'NSURLFileResourceTypeKey'
    'body': 'NSURLFileResourceTypeKey'
  'NSURLFileResourceTypeNamedPipe (NSString*)':
    'prefix': 'NSURLFileResourceTypeNamedPipe'
    'body': 'NSURLFileResourceTypeNamedPipe'
  'NSURLFileResourceTypeRegular (NSString*)':
    'prefix': 'NSURLFileResourceTypeRegular'
    'body': 'NSURLFileResourceTypeRegular'
  'NSURLFileResourceTypeSocket (NSString*)':
    'prefix': 'NSURLFileResourceTypeSocket'
    'body': 'NSURLFileResourceTypeSocket'
  'NSURLFileResourceTypeSymbolicLink (NSString*)':
    'prefix': 'NSURLFileResourceTypeSymbolicLink'
    'body': 'NSURLFileResourceTypeSymbolicLink'
  'NSURLFileResourceTypeUnknown (NSString*)':
    'prefix': 'NSURLFileResourceTypeUnknown'
    'body': 'NSURLFileResourceTypeUnknown'
  'NSURLFileScheme (NSString*)':
    'prefix': 'NSURLFileScheme'
    'body': 'NSURLFileScheme'
  'NSURLFileSecurityKey (NSString*)':
    'prefix': 'NSURLFileSecurityKey'
    'body': 'NSURLFileSecurityKey'
  'NSURLFileSizeKey (NSString*)':
    'prefix': 'NSURLFileSizeKey'
    'body': 'NSURLFileSizeKey'
  'NSURLHasHiddenExtensionKey (NSString*)':
    'prefix': 'NSURLHasHiddenExtensionKey'
    'body': 'NSURLHasHiddenExtensionKey'
  'NSURLIsAliasFileKey (NSString*)':
    'prefix': 'NSURLIsAliasFileKey'
    'body': 'NSURLIsAliasFileKey'
  'NSURLIsDirectoryKey (NSString*)':
    'prefix': 'NSURLIsDirectoryKey'
    'body': 'NSURLIsDirectoryKey'
  'NSURLIsExcludedFromBackupKey (NSString*)':
    'prefix': 'NSURLIsExcludedFromBackupKey'
    'body': 'NSURLIsExcludedFromBackupKey'
  'NSURLIsExecutableKey (NSString*)':
    'prefix': 'NSURLIsExecutableKey'
    'body': 'NSURLIsExecutableKey'
  'NSURLIsHiddenKey (NSString*)':
    'prefix': 'NSURLIsHiddenKey'
    'body': 'NSURLIsHiddenKey'
  'NSURLIsMountTriggerKey (NSString*)':
    'prefix': 'NSURLIsMountTriggerKey'
    'body': 'NSURLIsMountTriggerKey'
  'NSURLIsPackageKey (NSString*)':
    'prefix': 'NSURLIsPackageKey'
    'body': 'NSURLIsPackageKey'
  'NSURLIsReadableKey (NSString*)':
    'prefix': 'NSURLIsReadableKey'
    'body': 'NSURLIsReadableKey'
  'NSURLIsRegularFileKey (NSString*)':
    'prefix': 'NSURLIsRegularFileKey'
    'body': 'NSURLIsRegularFileKey'
  'NSURLIsSymbolicLinkKey (NSString*)':
    'prefix': 'NSURLIsSymbolicLinkKey'
    'body': 'NSURLIsSymbolicLinkKey'
  'NSURLIsSystemImmutableKey (NSString*)':
    'prefix': 'NSURLIsSystemImmutableKey'
    'body': 'NSURLIsSystemImmutableKey'
  'NSURLIsUbiquitousItemKey (NSString*)':
    'prefix': 'NSURLIsUbiquitousItemKey'
    'body': 'NSURLIsUbiquitousItemKey'
  'NSURLIsUserImmutableKey (NSString*)':
    'prefix': 'NSURLIsUserImmutableKey'
    'body': 'NSURLIsUserImmutableKey'
  'NSURLIsVolumeKey (NSString*)':
    'prefix': 'NSURLIsVolumeKey'
    'body': 'NSURLIsVolumeKey'
  'NSURLIsWritableKey (NSString*)':
    'prefix': 'NSURLIsWritableKey'
    'body': 'NSURLIsWritableKey'
  'NSURLKeysOfUnsetValuesKey (NSString*)':
    'prefix': 'NSURLKeysOfUnsetValuesKey'
    'body': 'NSURLKeysOfUnsetValuesKey'
  'NSURLLabelColorKey (NSString*)':
    'prefix': 'NSURLLabelColorKey'
    'body': 'NSURLLabelColorKey'
  'NSURLLabelNumberKey (NSString*)':
    'prefix': 'NSURLLabelNumberKey'
    'body': 'NSURLLabelNumberKey'
  'NSURLLinkCountKey (NSString*)':
    'prefix': 'NSURLLinkCountKey'
    'body': 'NSURLLinkCountKey'
  'NSURLLocalizedLabelKey (NSString*)':
    'prefix': 'NSURLLocalizedLabelKey'
    'body': 'NSURLLocalizedLabelKey'
  'NSURLLocalizedNameKey (NSString*)':
    'prefix': 'NSURLLocalizedNameKey'
    'body': 'NSURLLocalizedNameKey'
  'NSURLLocalizedTypeDescriptionKey (NSString*)':
    'prefix': 'NSURLLocalizedTypeDescriptionKey'
    'body': 'NSURLLocalizedTypeDescriptionKey'
  'NSURLNameKey (NSString*)':
    'prefix': 'NSURLNameKey'
    'body': 'NSURLNameKey'
  'NSURLParentDirectoryURLKey (NSString*)':
    'prefix': 'NSURLParentDirectoryURLKey'
    'body': 'NSURLParentDirectoryURLKey'
  'NSURLPathKey (NSString*)':
    'prefix': 'NSURLPathKey'
    'body': 'NSURLPathKey'
  'NSURLPreferredIOBlockSizeKey (NSString*)':
    'prefix': 'NSURLPreferredIOBlockSizeKey'
    'body': 'NSURLPreferredIOBlockSizeKey'
  'NSURLProtectionSpaceFTP (NSString*)':
    'prefix': 'NSURLProtectionSpaceFTP'
    'body': 'NSURLProtectionSpaceFTP'
  'NSURLProtectionSpaceFTPProxy (NSString*)':
    'prefix': 'NSURLProtectionSpaceFTPProxy'
    'body': 'NSURLProtectionSpaceFTPProxy'
  'NSURLProtectionSpaceHTTP (NSString*)':
    'prefix': 'NSURLProtectionSpaceHTTP'
    'body': 'NSURLProtectionSpaceHTTP'
  'NSURLProtectionSpaceHTTPProxy (NSString*)':
    'prefix': 'NSURLProtectionSpaceHTTPProxy'
    'body': 'NSURLProtectionSpaceHTTPProxy'
  'NSURLProtectionSpaceHTTPS (NSString*)':
    'prefix': 'NSURLProtectionSpaceHTTPS'
    'body': 'NSURLProtectionSpaceHTTPS'
  'NSURLProtectionSpaceHTTPSProxy (NSString*)':
    'prefix': 'NSURLProtectionSpaceHTTPSProxy'
    'body': 'NSURLProtectionSpaceHTTPSProxy'
  'NSURLProtectionSpaceSOCKSProxy (NSString*)':
    'prefix': 'NSURLProtectionSpaceSOCKSProxy'
    'body': 'NSURLProtectionSpaceSOCKSProxy'
  'NSURLSessionDownloadTaskResumeData (NSString*)':
    'prefix': 'NSURLSessionDownloadTaskResumeData'
    'body': 'NSURLSessionDownloadTaskResumeData'
  'NSURLSessionTransferSizeUnknown (int64_t)':
    'prefix': 'NSURLSessionTransferSizeUnknown'
    'body': 'NSURLSessionTransferSizeUnknown'
  'NSURLTotalFileAllocatedSizeKey (NSString*)':
    'prefix': 'NSURLTotalFileAllocatedSizeKey'
    'body': 'NSURLTotalFileAllocatedSizeKey'
  'NSURLTotalFileSizeKey (NSString*)':
    'prefix': 'NSURLTotalFileSizeKey'
    'body': 'NSURLTotalFileSizeKey'
  'NSURLTypeIdentifierKey (NSString*)':
    'prefix': 'NSURLTypeIdentifierKey'
    'body': 'NSURLTypeIdentifierKey'
  'NSURLUbiquitousItemDownloadingErrorKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemDownloadingErrorKey'
    'body': 'NSURLUbiquitousItemDownloadingErrorKey'
  'NSURLUbiquitousItemDownloadingStatusCurrent (NSString*)':
    'prefix': 'NSURLUbiquitousItemDownloadingStatusCurrent'
    'body': 'NSURLUbiquitousItemDownloadingStatusCurrent'
  'NSURLUbiquitousItemDownloadingStatusDownloaded (NSString*)':
    'prefix': 'NSURLUbiquitousItemDownloadingStatusDownloaded'
    'body': 'NSURLUbiquitousItemDownloadingStatusDownloaded'
  'NSURLUbiquitousItemDownloadingStatusKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemDownloadingStatusKey'
    'body': 'NSURLUbiquitousItemDownloadingStatusKey'
  'NSURLUbiquitousItemDownloadingStatusNotDownloaded (NSString*)':
    'prefix': 'NSURLUbiquitousItemDownloadingStatusNotDownloaded'
    'body': 'NSURLUbiquitousItemDownloadingStatusNotDownloaded'
  'NSURLUbiquitousItemHasUnresolvedConflictsKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemHasUnresolvedConflictsKey'
    'body': 'NSURLUbiquitousItemHasUnresolvedConflictsKey'
  'NSURLUbiquitousItemIsDownloadedKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemIsDownloadedKey'
    'body': 'NSURLUbiquitousItemIsDownloadedKey'
  'NSURLUbiquitousItemIsDownloadingKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemIsDownloadingKey'
    'body': 'NSURLUbiquitousItemIsDownloadingKey'
  'NSURLUbiquitousItemIsUploadedKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemIsUploadedKey'
    'body': 'NSURLUbiquitousItemIsUploadedKey'
  'NSURLUbiquitousItemIsUploadingKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemIsUploadingKey'
    'body': 'NSURLUbiquitousItemIsUploadingKey'
  'NSURLUbiquitousItemPercentDownloadedKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemPercentDownloadedKey'
    'body': 'NSURLUbiquitousItemPercentDownloadedKey'
  'NSURLUbiquitousItemPercentUploadedKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemPercentUploadedKey'
    'body': 'NSURLUbiquitousItemPercentUploadedKey'
  'NSURLUbiquitousItemUploadingErrorKey (NSString*)':
    'prefix': 'NSURLUbiquitousItemUploadingErrorKey'
    'body': 'NSURLUbiquitousItemUploadingErrorKey'
  'NSURLVolumeAvailableCapacityKey (NSString*)':
    'prefix': 'NSURLVolumeAvailableCapacityKey'
    'body': 'NSURLVolumeAvailableCapacityKey'
  'NSURLVolumeCreationDateKey (NSString*)':
    'prefix': 'NSURLVolumeCreationDateKey'
    'body': 'NSURLVolumeCreationDateKey'
  'NSURLVolumeIdentifierKey (NSString*)':
    'prefix': 'NSURLVolumeIdentifierKey'
    'body': 'NSURLVolumeIdentifierKey'
  'NSURLVolumeIsAutomountedKey (NSString*)':
    'prefix': 'NSURLVolumeIsAutomountedKey'
    'body': 'NSURLVolumeIsAutomountedKey'
  'NSURLVolumeIsBrowsableKey (NSString*)':
    'prefix': 'NSURLVolumeIsBrowsableKey'
    'body': 'NSURLVolumeIsBrowsableKey'
  'NSURLVolumeIsEjectableKey (NSString*)':
    'prefix': 'NSURLVolumeIsEjectableKey'
    'body': 'NSURLVolumeIsEjectableKey'
  'NSURLVolumeIsInternalKey (NSString*)':
    'prefix': 'NSURLVolumeIsInternalKey'
    'body': 'NSURLVolumeIsInternalKey'
  'NSURLVolumeIsJournalingKey (NSString*)':
    'prefix': 'NSURLVolumeIsJournalingKey'
    'body': 'NSURLVolumeIsJournalingKey'
  'NSURLVolumeIsLocalKey (NSString*)':
    'prefix': 'NSURLVolumeIsLocalKey'
    'body': 'NSURLVolumeIsLocalKey'
  'NSURLVolumeIsReadOnlyKey (NSString*)':
    'prefix': 'NSURLVolumeIsReadOnlyKey'
    'body': 'NSURLVolumeIsReadOnlyKey'
  'NSURLVolumeIsRemovableKey (NSString*)':
    'prefix': 'NSURLVolumeIsRemovableKey'
    'body': 'NSURLVolumeIsRemovableKey'
  'NSURLVolumeLocalizedFormatDescriptionKey (NSString*)':
    'prefix': 'NSURLVolumeLocalizedFormatDescriptionKey'
    'body': 'NSURLVolumeLocalizedFormatDescriptionKey'
  'NSURLVolumeLocalizedNameKey (NSString*)':
    'prefix': 'NSURLVolumeLocalizedNameKey'
    'body': 'NSURLVolumeLocalizedNameKey'
  'NSURLVolumeMaximumFileSizeKey (NSString*)':
    'prefix': 'NSURLVolumeMaximumFileSizeKey'
    'body': 'NSURLVolumeMaximumFileSizeKey'
  'NSURLVolumeNameKey (NSString*)':
    'prefix': 'NSURLVolumeNameKey'
    'body': 'NSURLVolumeNameKey'
  'NSURLVolumeResourceCountKey (NSString*)':
    'prefix': 'NSURLVolumeResourceCountKey'
    'body': 'NSURLVolumeResourceCountKey'
  'NSURLVolumeSupportsAdvisoryFileLockingKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsAdvisoryFileLockingKey'
    'body': 'NSURLVolumeSupportsAdvisoryFileLockingKey'
  'NSURLVolumeSupportsCasePreservedNamesKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsCasePreservedNamesKey'
    'body': 'NSURLVolumeSupportsCasePreservedNamesKey'
  'NSURLVolumeSupportsCaseSensitiveNamesKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsCaseSensitiveNamesKey'
    'body': 'NSURLVolumeSupportsCaseSensitiveNamesKey'
  'NSURLVolumeSupportsExtendedSecurityKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsExtendedSecurityKey'
    'body': 'NSURLVolumeSupportsExtendedSecurityKey'
  'NSURLVolumeSupportsHardLinksKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsHardLinksKey'
    'body': 'NSURLVolumeSupportsHardLinksKey'
  'NSURLVolumeSupportsJournalingKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsJournalingKey'
    'body': 'NSURLVolumeSupportsJournalingKey'
  'NSURLVolumeSupportsPersistentIDsKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsPersistentIDsKey'
    'body': 'NSURLVolumeSupportsPersistentIDsKey'
  'NSURLVolumeSupportsRenamingKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsRenamingKey'
    'body': 'NSURLVolumeSupportsRenamingKey'
  'NSURLVolumeSupportsRootDirectoryDatesKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsRootDirectoryDatesKey'
    'body': 'NSURLVolumeSupportsRootDirectoryDatesKey'
  'NSURLVolumeSupportsSparseFilesKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsSparseFilesKey'
    'body': 'NSURLVolumeSupportsSparseFilesKey'
  'NSURLVolumeSupportsSymbolicLinksKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsSymbolicLinksKey'
    'body': 'NSURLVolumeSupportsSymbolicLinksKey'
  'NSURLVolumeSupportsVolumeSizesKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsVolumeSizesKey'
    'body': 'NSURLVolumeSupportsVolumeSizesKey'
  'NSURLVolumeSupportsZeroRunsKey (NSString*)':
    'prefix': 'NSURLVolumeSupportsZeroRunsKey'
    'body': 'NSURLVolumeSupportsZeroRunsKey'
  'NSURLVolumeTotalCapacityKey (NSString*)':
    'prefix': 'NSURLVolumeTotalCapacityKey'
    'body': 'NSURLVolumeTotalCapacityKey'
  'NSURLVolumeURLForRemountingKey (NSString*)':
    'prefix': 'NSURLVolumeURLForRemountingKey'
    'body': 'NSURLVolumeURLForRemountingKey'
  'NSURLVolumeURLKey (NSString*)':
    'prefix': 'NSURLVolumeURLKey'
    'body': 'NSURLVolumeURLKey'
  'NSURLVolumeUUIDStringKey (NSString*)':
    'prefix': 'NSURLVolumeUUIDStringKey'
    'body': 'NSURLVolumeUUIDStringKey'
  'NSUbiquitousKeyValueStoreChangeReasonKey (NSString*)':
    'prefix': 'NSUbiquitousKeyValueStoreChangeReasonKey'
    'body': 'NSUbiquitousKeyValueStoreChangeReasonKey'
  'NSUbiquitousKeyValueStoreChangedKeysKey (NSString*)':
    'prefix': 'NSUbiquitousKeyValueStoreChangedKeysKey'
    'body': 'NSUbiquitousKeyValueStoreChangedKeysKey'
  'NSUbiquitousKeyValueStoreDidChangeExternallyNotification (NSString*)':
    'prefix': 'NSUbiquitousKeyValueStoreDidChangeExternallyNotification'
    'body': 'NSUbiquitousKeyValueStoreDidChangeExternallyNotification'
  'NSUbiquityIdentityDidChangeNotification (NSString*)':
    'prefix': 'NSUbiquityIdentityDidChangeNotification'
    'body': 'NSUbiquityIdentityDidChangeNotification'
  'NSUnarchiveFromDataTransformerName (NSString*)':
    'prefix': 'NSUnarchiveFromDataTransformerName'
    'body': 'NSUnarchiveFromDataTransformerName'
  'NSUndefinedKeyException (NSString*)':
    'prefix': 'NSUndefinedKeyException'
    'body': 'NSUndefinedKeyException'
  'NSUnderlyingErrorKey (NSString*)':
    'prefix': 'NSUnderlyingErrorKey'
    'body': 'NSUnderlyingErrorKey'
  'NSUndoManagerCheckpointNotification (NSString*)':
    'prefix': 'NSUndoManagerCheckpointNotification'
    'body': 'NSUndoManagerCheckpointNotification'
  'NSUndoManagerDidCloseUndoGroupNotification (NSString*)':
    'prefix': 'NSUndoManagerDidCloseUndoGroupNotification'
    'body': 'NSUndoManagerDidCloseUndoGroupNotification'
  'NSUndoManagerDidOpenUndoGroupNotification (NSString*)':
    'prefix': 'NSUndoManagerDidOpenUndoGroupNotification'
    'body': 'NSUndoManagerDidOpenUndoGroupNotification'
  'NSUndoManagerDidRedoChangeNotification (NSString*)':
    'prefix': 'NSUndoManagerDidRedoChangeNotification'
    'body': 'NSUndoManagerDidRedoChangeNotification'
  'NSUndoManagerDidUndoChangeNotification (NSString*)':
    'prefix': 'NSUndoManagerDidUndoChangeNotification'
    'body': 'NSUndoManagerDidUndoChangeNotification'
  'NSUndoManagerGroupIsDiscardableKey (NSString*)':
    'prefix': 'NSUndoManagerGroupIsDiscardableKey'
    'body': 'NSUndoManagerGroupIsDiscardableKey'
  'NSUndoManagerWillCloseUndoGroupNotification (NSString*)':
    'prefix': 'NSUndoManagerWillCloseUndoGroupNotification'
    'body': 'NSUndoManagerWillCloseUndoGroupNotification'
  'NSUndoManagerWillRedoChangeNotification (NSString*)':
    'prefix': 'NSUndoManagerWillRedoChangeNotification'
    'body': 'NSUndoManagerWillRedoChangeNotification'
  'NSUndoManagerWillUndoChangeNotification (NSString*)':
    'prefix': 'NSUndoManagerWillUndoChangeNotification'
    'body': 'NSUndoManagerWillUndoChangeNotification'
  'NSUnionOfArraysKeyValueOperator (NSString*)':
    'prefix': 'NSUnionOfArraysKeyValueOperator'
    'body': 'NSUnionOfArraysKeyValueOperator'
  'NSUnionOfObjectsKeyValueOperator (NSString*)':
    'prefix': 'NSUnionOfObjectsKeyValueOperator'
    'body': 'NSUnionOfObjectsKeyValueOperator'
  'NSUnionOfSetsKeyValueOperator (NSString*)':
    'prefix': 'NSUnionOfSetsKeyValueOperator'
    'body': 'NSUnionOfSetsKeyValueOperator'
  'NSUserDefaultsDidChangeNotification (NSString*)':
    'prefix': 'NSUserDefaultsDidChangeNotification'
    'body': 'NSUserDefaultsDidChangeNotification'
  'NSWillBecomeMultiThreadedNotification (NSString*)':
    'prefix': 'NSWillBecomeMultiThreadedNotification'
    'body': 'NSWillBecomeMultiThreadedNotification'
  'NSXMLParserErrorDomain (NSString*)':
    'prefix': 'NSXMLParserErrorDomain'
    'body': 'NSXMLParserErrorDomain'
  'NSASCIIStringEncoding (1)':
    'prefix': 'NSASCIIStringEncoding'
    'body': 'NSASCIIStringEncoding'
  'NSActivityAutomaticTerminationDisabled (32768)':
    'prefix': 'NSActivityAutomaticTerminationDisabled'
    'body': 'NSActivityAutomaticTerminationDisabled'
  'NSActivityBackground (255)':
    'prefix': 'NSActivityBackground'
    'body': 'NSActivityBackground'
  'NSActivityIdleDisplaySleepDisabled (1099511627776)':
    'prefix': 'NSActivityIdleDisplaySleepDisabled'
    'body': 'NSActivityIdleDisplaySleepDisabled'
  'NSActivityIdleSystemSleepDisabled (1048576)':
    'prefix': 'NSActivityIdleSystemSleepDisabled'
    'body': 'NSActivityIdleSystemSleepDisabled'
  'NSActivityLatencyCritical (1095216660480)':
    'prefix': 'NSActivityLatencyCritical'
    'body': 'NSActivityLatencyCritical'
  'NSActivitySuddenTerminationDisabled (16384)':
    'prefix': 'NSActivitySuddenTerminationDisabled'
    'body': 'NSActivitySuddenTerminationDisabled'
  'NSActivityUserInitiated (16777215)':
    'prefix': 'NSActivityUserInitiated'
    'body': 'NSActivityUserInitiated'
  'NSActivityUserInitiatedAllowingIdleSystemSleep (15728639)':
    'prefix': 'NSActivityUserInitiatedAllowingIdleSystemSleep'
    'body': 'NSActivityUserInitiatedAllowingIdleSystemSleep'
  'NSAdminApplicationDirectory (4)':
    'prefix': 'NSAdminApplicationDirectory'
    'body': 'NSAdminApplicationDirectory'
  'NSAggregateExpressionType (14)':
    'prefix': 'NSAggregateExpressionType'
    'body': 'NSAggregateExpressionType'
  'NSAllApplicationsDirectory (100)':
    'prefix': 'NSAllApplicationsDirectory'
    'body': 'NSAllApplicationsDirectory'
  'NSAllDomainsMask (65535)':
    'prefix': 'NSAllDomainsMask'
    'body': 'NSAllDomainsMask'
  'NSAllLibrariesDirectory (101)':
    'prefix': 'NSAllLibrariesDirectory'
    'body': 'NSAllLibrariesDirectory'
  'NSAllPredicateModifier (1)':
    'prefix': 'NSAllPredicateModifier'
    'body': 'NSAllPredicateModifier'
  'NSAnchoredSearch (8)':
    'prefix': 'NSAnchoredSearch'
    'body': 'NSAnchoredSearch'
  'NSAndPredicateType (1)':
    'prefix': 'NSAndPredicateType'
    'body': 'NSAndPredicateType'
  'NSAnyKeyExpressionType (15)':
    'prefix': 'NSAnyKeyExpressionType'
    'body': 'NSAnyKeyExpressionType'
  'NSAnyPredicateModifier (2)':
    'prefix': 'NSAnyPredicateModifier'
    'body': 'NSAnyPredicateModifier'
  'NSApplicationDirectory (1)':
    'prefix': 'NSApplicationDirectory'
    'body': 'NSApplicationDirectory'
  'NSApplicationScriptsDirectory (23)':
    'prefix': 'NSApplicationScriptsDirectory'
    'body': 'NSApplicationScriptsDirectory'
  'NSApplicationSupportDirectory (14)':
    'prefix': 'NSApplicationSupportDirectory'
    'body': 'NSApplicationSupportDirectory'
  'NSAtomicWrite (1)':
    'prefix': 'NSAtomicWrite'
    'body': 'NSAtomicWrite'
  'NSAttributedStringEnumerationLongestEffectiveRangeNotRequired (1048576)':
    'prefix': 'NSAttributedStringEnumerationLongestEffectiveRangeNotRequired'
    'body': 'NSAttributedStringEnumerationLongestEffectiveRangeNotRequired'
  'NSAttributedStringEnumerationReverse (2)':
    'prefix': 'NSAttributedStringEnumerationReverse'
    'body': 'NSAttributedStringEnumerationReverse'
  'NSAutosavedInformationDirectory (11)':
    'prefix': 'NSAutosavedInformationDirectory'
    'body': 'NSAutosavedInformationDirectory'
  'NSBackwardsSearch (4)':
    'prefix': 'NSBackwardsSearch'
    'body': 'NSBackwardsSearch'
  'NSBeginsWithPredicateOperatorType (8)':
    'prefix': 'NSBeginsWithPredicateOperatorType'
    'body': 'NSBeginsWithPredicateOperatorType'
  'NSBetweenPredicateOperatorType (100)':
    'prefix': 'NSBetweenPredicateOperatorType'
    'body': 'NSBetweenPredicateOperatorType'
  'NSBinarySearchingFirstEqual (256)':
    'prefix': 'NSBinarySearchingFirstEqual'
    'body': 'NSBinarySearchingFirstEqual'
  'NSBinarySearchingInsertionIndex (1024)':
    'prefix': 'NSBinarySearchingInsertionIndex'
    'body': 'NSBinarySearchingInsertionIndex'
  'NSBinarySearchingLastEqual (512)':
    'prefix': 'NSBinarySearchingLastEqual'
    'body': 'NSBinarySearchingLastEqual'
  'NSBlockExpressionType (19)':
    'prefix': 'NSBlockExpressionType'
    'body': 'NSBlockExpressionType'
  'NSBundleExecutableArchitectureI386 (7)':
    'prefix': 'NSBundleExecutableArchitectureI386'
    'body': 'NSBundleExecutableArchitectureI386'
  'NSBundleExecutableArchitecturePPC (18)':
    'prefix': 'NSBundleExecutableArchitecturePPC'
    'body': 'NSBundleExecutableArchitecturePPC'
  'NSBundleExecutableArchitecturePPC64 (16777234)':
    'prefix': 'NSBundleExecutableArchitecturePPC64'
    'body': 'NSBundleExecutableArchitecturePPC64'
  'NSBundleExecutableArchitectureX86_64 (16777223)':
    'prefix': 'NSBundleExecutableArchitectureX86_64'
    'body': 'NSBundleExecutableArchitectureX86_64'
  'NSByteCountFormatterCountStyleBinary (3)':
    'prefix': 'NSByteCountFormatterCountStyleBinary'
    'body': 'NSByteCountFormatterCountStyleBinary'
  'NSByteCountFormatterCountStyleDecimal (2)':
    'prefix': 'NSByteCountFormatterCountStyleDecimal'
    'body': 'NSByteCountFormatterCountStyleDecimal'
  'NSByteCountFormatterCountStyleFile (0)':
    'prefix': 'NSByteCountFormatterCountStyleFile'
    'body': 'NSByteCountFormatterCountStyleFile'
  'NSByteCountFormatterCountStyleMemory (1)':
    'prefix': 'NSByteCountFormatterCountStyleMemory'
    'body': 'NSByteCountFormatterCountStyleMemory'
  'NSByteCountFormatterUseAll (65535)':
    'prefix': 'NSByteCountFormatterUseAll'
    'body': 'NSByteCountFormatterUseAll'
  'NSByteCountFormatterUseBytes (1)':
    'prefix': 'NSByteCountFormatterUseBytes'
    'body': 'NSByteCountFormatterUseBytes'
  'NSByteCountFormatterUseDefault (0)':
    'prefix': 'NSByteCountFormatterUseDefault'
    'body': 'NSByteCountFormatterUseDefault'
  'NSByteCountFormatterUseEB (64)':
    'prefix': 'NSByteCountFormatterUseEB'
    'body': 'NSByteCountFormatterUseEB'
  'NSByteCountFormatterUseGB (8)':
    'prefix': 'NSByteCountFormatterUseGB'
    'body': 'NSByteCountFormatterUseGB'
  'NSByteCountFormatterUseKB (2)':
    'prefix': 'NSByteCountFormatterUseKB'
    'body': 'NSByteCountFormatterUseKB'
  'NSByteCountFormatterUseMB (4)':
    'prefix': 'NSByteCountFormatterUseMB'
    'body': 'NSByteCountFormatterUseMB'
  'NSByteCountFormatterUsePB (32)':
    'prefix': 'NSByteCountFormatterUsePB'
    'body': 'NSByteCountFormatterUsePB'
  'NSByteCountFormatterUseTB (16)':
    'prefix': 'NSByteCountFormatterUseTB'
    'body': 'NSByteCountFormatterUseTB'
  'NSByteCountFormatterUseYBOrHigher (65280)':
    'prefix': 'NSByteCountFormatterUseYBOrHigher'
    'body': 'NSByteCountFormatterUseYBOrHigher'
  'NSByteCountFormatterUseZB (128)':
    'prefix': 'NSByteCountFormatterUseZB'
    'body': 'NSByteCountFormatterUseZB'
  'NSCachesDirectory (13)':
    'prefix': 'NSCachesDirectory'
    'body': 'NSCachesDirectory'
  'NSCalculationDivideByZero (4)':
    'prefix': 'NSCalculationDivideByZero'
    'body': 'NSCalculationDivideByZero'
  'NSCalculationLossOfPrecision (1)':
    'prefix': 'NSCalculationLossOfPrecision'
    'body': 'NSCalculationLossOfPrecision'
  'NSCalculationNoError (0)':
    'prefix': 'NSCalculationNoError'
    'body': 'NSCalculationNoError'
  'NSCalculationOverflow (3)':
    'prefix': 'NSCalculationOverflow'
    'body': 'NSCalculationOverflow'
  'NSCalculationUnderflow (2)':
    'prefix': 'NSCalculationUnderflow'
    'body': 'NSCalculationUnderflow'
  'NSCalendarCalendarUnit (1048576)':
    'prefix': 'NSCalendarCalendarUnit'
    'body': 'NSCalendarCalendarUnit'
  'NSCalendarMatchFirst (4096)':
    'prefix': 'NSCalendarMatchFirst'
    'body': 'NSCalendarMatchFirst'
  'NSCalendarMatchLast (8192)':
    'prefix': 'NSCalendarMatchLast'
    'body': 'NSCalendarMatchLast'
  'NSCalendarMatchNextTime (1024)':
    'prefix': 'NSCalendarMatchNextTime'
    'body': 'NSCalendarMatchNextTime'
  'NSCalendarMatchNextTimePreservingSmallerUnits (512)':
    'prefix': 'NSCalendarMatchNextTimePreservingSmallerUnits'
    'body': 'NSCalendarMatchNextTimePreservingSmallerUnits'
  'NSCalendarMatchPreviousTimePreservingSmallerUnits (256)':
    'prefix': 'NSCalendarMatchPreviousTimePreservingSmallerUnits'
    'body': 'NSCalendarMatchPreviousTimePreservingSmallerUnits'
  'NSCalendarMatchStrictly (2)':
    'prefix': 'NSCalendarMatchStrictly'
    'body': 'NSCalendarMatchStrictly'
  'NSCalendarSearchBackwards (4)':
    'prefix': 'NSCalendarSearchBackwards'
    'body': 'NSCalendarSearchBackwards'
  'NSCalendarUnitCalendar (1048576)':
    'prefix': 'NSCalendarUnitCalendar'
    'body': 'NSCalendarUnitCalendar'
  'NSCalendarUnitDay (16)':
    'prefix': 'NSCalendarUnitDay'
    'body': 'NSCalendarUnitDay'
  'NSCalendarUnitEra (2)':
    'prefix': 'NSCalendarUnitEra'
    'body': 'NSCalendarUnitEra'
  'NSCalendarUnitHour (32)':
    'prefix': 'NSCalendarUnitHour'
    'body': 'NSCalendarUnitHour'
  'NSCalendarUnitMinute (64)':
    'prefix': 'NSCalendarUnitMinute'
    'body': 'NSCalendarUnitMinute'
  'NSCalendarUnitMonth (8)':
    'prefix': 'NSCalendarUnitMonth'
    'body': 'NSCalendarUnitMonth'
  'NSCalendarUnitNanosecond (32768)':
    'prefix': 'NSCalendarUnitNanosecond'
    'body': 'NSCalendarUnitNanosecond'
  'NSCalendarUnitQuarter (2048)':
    'prefix': 'NSCalendarUnitQuarter'
    'body': 'NSCalendarUnitQuarter'
  'NSCalendarUnitSecond (128)':
    'prefix': 'NSCalendarUnitSecond'
    'body': 'NSCalendarUnitSecond'
  'NSCalendarUnitTimeZone (2097152)':
    'prefix': 'NSCalendarUnitTimeZone'
    'body': 'NSCalendarUnitTimeZone'
  'NSCalendarUnitWeekOfMonth (4096)':
    'prefix': 'NSCalendarUnitWeekOfMonth'
    'body': 'NSCalendarUnitWeekOfMonth'
  'NSCalendarUnitWeekOfYear (8192)':
    'prefix': 'NSCalendarUnitWeekOfYear'
    'body': 'NSCalendarUnitWeekOfYear'
  'NSCalendarUnitWeekday (512)':
    'prefix': 'NSCalendarUnitWeekday'
    'body': 'NSCalendarUnitWeekday'
  'NSCalendarUnitWeekdayOrdinal (1024)':
    'prefix': 'NSCalendarUnitWeekdayOrdinal'
    'body': 'NSCalendarUnitWeekdayOrdinal'
  'NSCalendarUnitYear (4)':
    'prefix': 'NSCalendarUnitYear'
    'body': 'NSCalendarUnitYear'
  'NSCalendarUnitYearForWeekOfYear (16384)':
    'prefix': 'NSCalendarUnitYearForWeekOfYear'
    'body': 'NSCalendarUnitYearForWeekOfYear'
  'NSCalendarWrapComponents (1)':
    'prefix': 'NSCalendarWrapComponents'
    'body': 'NSCalendarWrapComponents'
  'NSCaseInsensitivePredicateOption (1)':
    'prefix': 'NSCaseInsensitivePredicateOption'
    'body': 'NSCaseInsensitivePredicateOption'
  'NSCaseInsensitiveSearch (1)':
    'prefix': 'NSCaseInsensitiveSearch'
    'body': 'NSCaseInsensitiveSearch'
  'NSConstantValueExpressionType (0)':
    'prefix': 'NSConstantValueExpressionType'
    'body': 'NSConstantValueExpressionType'
  'NSContainsPredicateOperatorType (99)':
    'prefix': 'NSContainsPredicateOperatorType'
    'body': 'NSContainsPredicateOperatorType'
  'NSCoreServiceDirectory (10)':
    'prefix': 'NSCoreServiceDirectory'
    'body': 'NSCoreServiceDirectory'
  'NSCustomSelectorPredicateOperatorType (11)':
    'prefix': 'NSCustomSelectorPredicateOperatorType'
    'body': 'NSCustomSelectorPredicateOperatorType'
  'NSDataBase64DecodingIgnoreUnknownCharacters (1)':
    'prefix': 'NSDataBase64DecodingIgnoreUnknownCharacters'
    'body': 'NSDataBase64DecodingIgnoreUnknownCharacters'
  'NSDataBase64Encoding64CharacterLineLength (1)':
    'prefix': 'NSDataBase64Encoding64CharacterLineLength'
    'body': 'NSDataBase64Encoding64CharacterLineLength'
  'NSDataBase64Encoding76CharacterLineLength (2)':
    'prefix': 'NSDataBase64Encoding76CharacterLineLength'
    'body': 'NSDataBase64Encoding76CharacterLineLength'
  'NSDataBase64EncodingEndLineWithCarriageReturn (16)':
    'prefix': 'NSDataBase64EncodingEndLineWithCarriageReturn'
    'body': 'NSDataBase64EncodingEndLineWithCarriageReturn'
  'NSDataBase64EncodingEndLineWithLineFeed (32)':
    'prefix': 'NSDataBase64EncodingEndLineWithLineFeed'
    'body': 'NSDataBase64EncodingEndLineWithLineFeed'
  'NSDataReadingMapped (1)':
    'prefix': 'NSDataReadingMapped'
    'body': 'NSDataReadingMapped'
  'NSDataReadingMappedAlways (8)':
    'prefix': 'NSDataReadingMappedAlways'
    'body': 'NSDataReadingMappedAlways'
  'NSDataReadingMappedIfSafe (1)':
    'prefix': 'NSDataReadingMappedIfSafe'
    'body': 'NSDataReadingMappedIfSafe'
  'NSDataReadingUncached (2)':
    'prefix': 'NSDataReadingUncached'
    'body': 'NSDataReadingUncached'
  'NSDataSearchAnchored (2)':
    'prefix': 'NSDataSearchAnchored'
    'body': 'NSDataSearchAnchored'
  'NSDataSearchBackwards (1)':
    'prefix': 'NSDataSearchBackwards'
    'body': 'NSDataSearchBackwards'
  'NSDataWritingAtomic (1)':
    'prefix': 'NSDataWritingAtomic'
    'body': 'NSDataWritingAtomic'
  'NSDataWritingFileProtectionComplete (536870912)':
    'prefix': 'NSDataWritingFileProtectionComplete'
    'body': 'NSDataWritingFileProtectionComplete'
  'NSDataWritingFileProtectionCompleteUnlessOpen (805306368)':
    'prefix': 'NSDataWritingFileProtectionCompleteUnlessOpen'
    'body': 'NSDataWritingFileProtectionCompleteUnlessOpen'
  'NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication (1073741824)':
    'prefix': 'NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication'
    'body': 'NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication'
  'NSDataWritingFileProtectionMask (4026531840)':
    'prefix': 'NSDataWritingFileProtectionMask'
    'body': 'NSDataWritingFileProtectionMask'
  'NSDataWritingFileProtectionNone (268435456)':
    'prefix': 'NSDataWritingFileProtectionNone'
    'body': 'NSDataWritingFileProtectionNone'
  'NSDataWritingWithoutOverwriting (2)':
    'prefix': 'NSDataWritingWithoutOverwriting'
    'body': 'NSDataWritingWithoutOverwriting'
  'NSDateComponentUndefined (2147483647)':
    'prefix': 'NSDateComponentUndefined'
    'body': 'NSDateComponentUndefined'
  'NSDateFormatterBehavior10_4 (1040)':
    'prefix': 'NSDateFormatterBehavior10_4'
    'body': 'NSDateFormatterBehavior10_4'
  'NSDateFormatterBehaviorDefault (0)':
    'prefix': 'NSDateFormatterBehaviorDefault'
    'body': 'NSDateFormatterBehaviorDefault'
  'NSDateFormatterFullStyle (4)':
    'prefix': 'NSDateFormatterFullStyle'
    'body': 'NSDateFormatterFullStyle'
  'NSDateFormatterLongStyle (3)':
    'prefix': 'NSDateFormatterLongStyle'
    'body': 'NSDateFormatterLongStyle'
  'NSDateFormatterMediumStyle (2)':
    'prefix': 'NSDateFormatterMediumStyle'
    'body': 'NSDateFormatterMediumStyle'
  'NSDateFormatterNoStyle (0)':
    'prefix': 'NSDateFormatterNoStyle'
    'body': 'NSDateFormatterNoStyle'
  'NSDateFormatterShortStyle (1)':
    'prefix': 'NSDateFormatterShortStyle'
    'body': 'NSDateFormatterShortStyle'
  'NSDayCalendarUnit (16)':
    'prefix': 'NSDayCalendarUnit'
    'body': 'NSDayCalendarUnit'
  'NSDecimalMaxSize (8)':
    'prefix': 'NSDecimalMaxSize'
    'body': 'NSDecimalMaxSize'
  'NSDecimalNoScale (32767)':
    'prefix': 'NSDecimalNoScale'
    'body': 'NSDecimalNoScale'
  'NSDemoApplicationDirectory (2)':
    'prefix': 'NSDemoApplicationDirectory'
    'body': 'NSDemoApplicationDirectory'
  'NSDesktopDirectory (12)':
    'prefix': 'NSDesktopDirectory'
    'body': 'NSDesktopDirectory'
  'NSDeveloperApplicationDirectory (3)':
    'prefix': 'NSDeveloperApplicationDirectory'
    'body': 'NSDeveloperApplicationDirectory'
  'NSDeveloperDirectory (6)':
    'prefix': 'NSDeveloperDirectory'
    'body': 'NSDeveloperDirectory'
  'NSDiacriticInsensitivePredicateOption (2)':
    'prefix': 'NSDiacriticInsensitivePredicateOption'
    'body': 'NSDiacriticInsensitivePredicateOption'
  'NSDiacriticInsensitiveSearch (128)':
    'prefix': 'NSDiacriticInsensitiveSearch'
    'body': 'NSDiacriticInsensitiveSearch'
  'NSDirectPredicateModifier (0)':
    'prefix': 'NSDirectPredicateModifier'
    'body': 'NSDirectPredicateModifier'
  'NSDirectoryEnumerationSkipsHiddenFiles (4)':
    'prefix': 'NSDirectoryEnumerationSkipsHiddenFiles'
    'body': 'NSDirectoryEnumerationSkipsHiddenFiles'
  'NSDirectoryEnumerationSkipsPackageDescendants (2)':
    'prefix': 'NSDirectoryEnumerationSkipsPackageDescendants'
    'body': 'NSDirectoryEnumerationSkipsPackageDescendants'
  'NSDirectoryEnumerationSkipsSubdirectoryDescendants (1)':
    'prefix': 'NSDirectoryEnumerationSkipsSubdirectoryDescendants'
    'body': 'NSDirectoryEnumerationSkipsSubdirectoryDescendants'
  'NSDocumentDirectory (9)':
    'prefix': 'NSDocumentDirectory'
    'body': 'NSDocumentDirectory'
  'NSDocumentationDirectory (8)':
    'prefix': 'NSDocumentationDirectory'
    'body': 'NSDocumentationDirectory'
  'NSDownloadsDirectory (15)':
    'prefix': 'NSDownloadsDirectory'
    'body': 'NSDownloadsDirectory'
  'NSEndsWithPredicateOperatorType (9)':
    'prefix': 'NSEndsWithPredicateOperatorType'
    'body': 'NSEndsWithPredicateOperatorType'
  'NSEnumerationConcurrent (1)':
    'prefix': 'NSEnumerationConcurrent'
    'body': 'NSEnumerationConcurrent'
  'NSEnumerationReverse (2)':
    'prefix': 'NSEnumerationReverse'
    'body': 'NSEnumerationReverse'
  'NSEqualToPredicateOperatorType (4)':
    'prefix': 'NSEqualToPredicateOperatorType'
    'body': 'NSEqualToPredicateOperatorType'
  'NSEraCalendarUnit (2)':
    'prefix': 'NSEraCalendarUnit'
    'body': 'NSEraCalendarUnit'
  'NSEvaluatedObjectExpressionType (1)':
    'prefix': 'NSEvaluatedObjectExpressionType'
    'body': 'NSEvaluatedObjectExpressionType'
  'NSExecutableArchitectureMismatchError (3585)':
    'prefix': 'NSExecutableArchitectureMismatchError'
    'body': 'NSExecutableArchitectureMismatchError'
  'NSExecutableErrorMaximum (3839)':
    'prefix': 'NSExecutableErrorMaximum'
    'body': 'NSExecutableErrorMaximum'
  'NSExecutableErrorMinimum (3584)':
    'prefix': 'NSExecutableErrorMinimum'
    'body': 'NSExecutableErrorMinimum'
  'NSExecutableLinkError (3588)':
    'prefix': 'NSExecutableLinkError'
    'body': 'NSExecutableLinkError'
  'NSExecutableLoadError (3587)':
    'prefix': 'NSExecutableLoadError'
    'body': 'NSExecutableLoadError'
  'NSExecutableNotLoadableError (3584)':
    'prefix': 'NSExecutableNotLoadableError'
    'body': 'NSExecutableNotLoadableError'
  'NSExecutableRuntimeMismatchError (3586)':
    'prefix': 'NSExecutableRuntimeMismatchError'
    'body': 'NSExecutableRuntimeMismatchError'
  'NSFeatureUnsupportedError (3328)':
    'prefix': 'NSFeatureUnsupportedError'
    'body': 'NSFeatureUnsupportedError'
  'NSFileCoordinatorReadingResolvesSymbolicLink (2)':
    'prefix': 'NSFileCoordinatorReadingResolvesSymbolicLink'
    'body': 'NSFileCoordinatorReadingResolvesSymbolicLink'
  'NSFileCoordinatorReadingWithoutChanges (1)':
    'prefix': 'NSFileCoordinatorReadingWithoutChanges'
    'body': 'NSFileCoordinatorReadingWithoutChanges'
  'NSFileCoordinatorWritingForDeleting (1)':
    'prefix': 'NSFileCoordinatorWritingForDeleting'
    'body': 'NSFileCoordinatorWritingForDeleting'
  'NSFileCoordinatorWritingForMerging (4)':
    'prefix': 'NSFileCoordinatorWritingForMerging'
    'body': 'NSFileCoordinatorWritingForMerging'
  'NSFileCoordinatorWritingForMoving (2)':
    'prefix': 'NSFileCoordinatorWritingForMoving'
    'body': 'NSFileCoordinatorWritingForMoving'
  'NSFileCoordinatorWritingForReplacing (8)':
    'prefix': 'NSFileCoordinatorWritingForReplacing'
    'body': 'NSFileCoordinatorWritingForReplacing'
  'NSFileErrorMaximum (1023)':
    'prefix': 'NSFileErrorMaximum'
    'body': 'NSFileErrorMaximum'
  'NSFileErrorMinimum (0)':
    'prefix': 'NSFileErrorMinimum'
    'body': 'NSFileErrorMinimum'
  'NSFileLockingError (255)':
    'prefix': 'NSFileLockingError'
    'body': 'NSFileLockingError'
  'NSFileManagerItemReplacementUsingNewMetadataOnly (1)':
    'prefix': 'NSFileManagerItemReplacementUsingNewMetadataOnly'
    'body': 'NSFileManagerItemReplacementUsingNewMetadataOnly'
  'NSFileManagerItemReplacementWithoutDeletingBackupItem (2)':
    'prefix': 'NSFileManagerItemReplacementWithoutDeletingBackupItem'
    'body': 'NSFileManagerItemReplacementWithoutDeletingBackupItem'
  'NSFileNoSuchFileError (4)':
    'prefix': 'NSFileNoSuchFileError'
    'body': 'NSFileNoSuchFileError'
  'NSFileReadCorruptFileError (259)':
    'prefix': 'NSFileReadCorruptFileError'
    'body': 'NSFileReadCorruptFileError'
  'NSFileReadInapplicableStringEncodingError (261)':
    'prefix': 'NSFileReadInapplicableStringEncodingError'
    'body': 'NSFileReadInapplicableStringEncodingError'
  'NSFileReadInvalidFileNameError (258)':
    'prefix': 'NSFileReadInvalidFileNameError'
    'body': 'NSFileReadInvalidFileNameError'
  'NSFileReadNoPermissionError (257)':
    'prefix': 'NSFileReadNoPermissionError'
    'body': 'NSFileReadNoPermissionError'
  'NSFileReadNoSuchFileError (260)':
    'prefix': 'NSFileReadNoSuchFileError'
    'body': 'NSFileReadNoSuchFileError'
  'NSFileReadTooLargeError (263)':
    'prefix': 'NSFileReadTooLargeError'
    'body': 'NSFileReadTooLargeError'
  'NSFileReadUnknownError (256)':
    'prefix': 'NSFileReadUnknownError'
    'body': 'NSFileReadUnknownError'
  'NSFileReadUnknownStringEncodingError (264)':
    'prefix': 'NSFileReadUnknownStringEncodingError'
    'body': 'NSFileReadUnknownStringEncodingError'
  'NSFileReadUnsupportedSchemeError (262)':
    'prefix': 'NSFileReadUnsupportedSchemeError'
    'body': 'NSFileReadUnsupportedSchemeError'
  'NSFileVersionAddingByMoving (1)':
    'prefix': 'NSFileVersionAddingByMoving'
    'body': 'NSFileVersionAddingByMoving'
  'NSFileVersionReplacingByMoving (1)':
    'prefix': 'NSFileVersionReplacingByMoving'
    'body': 'NSFileVersionReplacingByMoving'
  'NSFileWrapperReadingImmediate (1)':
    'prefix': 'NSFileWrapperReadingImmediate'
    'body': 'NSFileWrapperReadingImmediate'
  'NSFileWrapperReadingWithoutMapping (2)':
    'prefix': 'NSFileWrapperReadingWithoutMapping'
    'body': 'NSFileWrapperReadingWithoutMapping'
  'NSFileWrapperWritingAtomic (1)':
    'prefix': 'NSFileWrapperWritingAtomic'
    'body': 'NSFileWrapperWritingAtomic'
  'NSFileWrapperWritingWithNameUpdating (2)':
    'prefix': 'NSFileWrapperWritingWithNameUpdating'
    'body': 'NSFileWrapperWritingWithNameUpdating'
  'NSFileWriteFileExistsError (516)':
    'prefix': 'NSFileWriteFileExistsError'
    'body': 'NSFileWriteFileExistsError'
  'NSFileWriteInapplicableStringEncodingError (517)':
    'prefix': 'NSFileWriteInapplicableStringEncodingError'
    'body': 'NSFileWriteInapplicableStringEncodingError'
  'NSFileWriteInvalidFileNameError (514)':
    'prefix': 'NSFileWriteInvalidFileNameError'
    'body': 'NSFileWriteInvalidFileNameError'
  'NSFileWriteNoPermissionError (513)':
    'prefix': 'NSFileWriteNoPermissionError'
    'body': 'NSFileWriteNoPermissionError'
  'NSFileWriteOutOfSpaceError (640)':
    'prefix': 'NSFileWriteOutOfSpaceError'
    'body': 'NSFileWriteOutOfSpaceError'
  'NSFileWriteUnknownError (512)':
    'prefix': 'NSFileWriteUnknownError'
    'body': 'NSFileWriteUnknownError'
  'NSFileWriteUnsupportedSchemeError (518)':
    'prefix': 'NSFileWriteUnsupportedSchemeError'
    'body': 'NSFileWriteUnsupportedSchemeError'
  'NSFileWriteVolumeReadOnlyError (642)':
    'prefix': 'NSFileWriteVolumeReadOnlyError'
    'body': 'NSFileWriteVolumeReadOnlyError'
  'NSForcedOrderingSearch (512)':
    'prefix': 'NSForcedOrderingSearch'
    'body': 'NSForcedOrderingSearch'
  'NSFormattingError (2048)':
    'prefix': 'NSFormattingError'
    'body': 'NSFormattingError'
  'NSFormattingErrorMaximum (2559)':
    'prefix': 'NSFormattingErrorMaximum'
    'body': 'NSFormattingErrorMaximum'
  'NSFormattingErrorMinimum (2048)':
    'prefix': 'NSFormattingErrorMinimum'
    'body': 'NSFormattingErrorMinimum'
  'NSFoundationVersionNumber10_0 (397.40)':
    'prefix': 'NSFoundationVersionNumber10_0'
    'body': 'NSFoundationVersionNumber10_0'
  'NSFoundationVersionNumber10_1 (425.00)':
    'prefix': 'NSFoundationVersionNumber10_1'
    'body': 'NSFoundationVersionNumber10_1'
  'NSFoundationVersionNumber10_1_1 (425.00)':
    'prefix': 'NSFoundationVersionNumber10_1_1'
    'body': 'NSFoundationVersionNumber10_1_1'
  'NSFoundationVersionNumber10_1_2 (425.00)':
    'prefix': 'NSFoundationVersionNumber10_1_2'
    'body': 'NSFoundationVersionNumber10_1_2'
  'NSFoundationVersionNumber10_1_3 (425.00)':
    'prefix': 'NSFoundationVersionNumber10_1_3'
    'body': 'NSFoundationVersionNumber10_1_3'
  'NSFoundationVersionNumber10_1_4 (425.00)':
    'prefix': 'NSFoundationVersionNumber10_1_4'
    'body': 'NSFoundationVersionNumber10_1_4'
  'NSFoundationVersionNumber10_2 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2'
    'body': 'NSFoundationVersionNumber10_2'
  'NSFoundationVersionNumber10_2_1 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_1'
    'body': 'NSFoundationVersionNumber10_2_1'
  'NSFoundationVersionNumber10_2_2 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_2'
    'body': 'NSFoundationVersionNumber10_2_2'
  'NSFoundationVersionNumber10_2_3 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_3'
    'body': 'NSFoundationVersionNumber10_2_3'
  'NSFoundationVersionNumber10_2_4 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_4'
    'body': 'NSFoundationVersionNumber10_2_4'
  'NSFoundationVersionNumber10_2_5 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_5'
    'body': 'NSFoundationVersionNumber10_2_5'
  'NSFoundationVersionNumber10_2_6 (462.00)':
    'prefix': 'NSFoundationVersionNumber10_2_6'
    'body': 'NSFoundationVersionNumber10_2_6'
  'NSFoundationVersionNumber10_2_7 (462.70)':
    'prefix': 'NSFoundationVersionNumber10_2_7'
    'body': 'NSFoundationVersionNumber10_2_7'
  'NSFoundationVersionNumber10_2_8 (462.70)':
    'prefix': 'NSFoundationVersionNumber10_2_8'
    'body': 'NSFoundationVersionNumber10_2_8'
  'NSFoundationVersionNumber10_3 (500.00)':
    'prefix': 'NSFoundationVersionNumber10_3'
    'body': 'NSFoundationVersionNumber10_3'
  'NSFoundationVersionNumber10_3_1 (500.00)':
    'prefix': 'NSFoundationVersionNumber10_3_1'
    'body': 'NSFoundationVersionNumber10_3_1'
  'NSFoundationVersionNumber10_3_2 (500.30)':
    'prefix': 'NSFoundationVersionNumber10_3_2'
    'body': 'NSFoundationVersionNumber10_3_2'
  'NSFoundationVersionNumber10_3_3 (500.54)':
    'prefix': 'NSFoundationVersionNumber10_3_3'
    'body': 'NSFoundationVersionNumber10_3_3'
  'NSFoundationVersionNumber10_3_4 (500.56)':
    'prefix': 'NSFoundationVersionNumber10_3_4'
    'body': 'NSFoundationVersionNumber10_3_4'
  'NSFoundationVersionNumber10_3_5 (500.56)':
    'prefix': 'NSFoundationVersionNumber10_3_5'
    'body': 'NSFoundationVersionNumber10_3_5'
  'NSFoundationVersionNumber10_3_6 (500.56)':
    'prefix': 'NSFoundationVersionNumber10_3_6'
    'body': 'NSFoundationVersionNumber10_3_6'
  'NSFoundationVersionNumber10_3_7 (500.56)':
    'prefix': 'NSFoundationVersionNumber10_3_7'
    'body': 'NSFoundationVersionNumber10_3_7'
  'NSFoundationVersionNumber10_3_8 (500.56)':
    'prefix': 'NSFoundationVersionNumber10_3_8'
    'body': 'NSFoundationVersionNumber10_3_8'
  'NSFoundationVersionNumber10_3_9 (500.58)':
    'prefix': 'NSFoundationVersionNumber10_3_9'
    'body': 'NSFoundationVersionNumber10_3_9'
  'NSFoundationVersionNumber10_4 (567.00)':
    'prefix': 'NSFoundationVersionNumber10_4'
    'body': 'NSFoundationVersionNumber10_4'
  'NSFoundationVersionNumber10_4_1 (567.00)':
    'prefix': 'NSFoundationVersionNumber10_4_1'
    'body': 'NSFoundationVersionNumber10_4_1'
  'NSFoundationVersionNumber10_4_10 (567.29)':
    'prefix': 'NSFoundationVersionNumber10_4_10'
    'body': 'NSFoundationVersionNumber10_4_10'
  'NSFoundationVersionNumber10_4_11 (567.36)':
    'prefix': 'NSFoundationVersionNumber10_4_11'
    'body': 'NSFoundationVersionNumber10_4_11'
  'NSFoundationVersionNumber10_4_2 (567.12)':
    'prefix': 'NSFoundationVersionNumber10_4_2'
    'body': 'NSFoundationVersionNumber10_4_2'
  'NSFoundationVersionNumber10_4_3 (567.21)':
    'prefix': 'NSFoundationVersionNumber10_4_3'
    'body': 'NSFoundationVersionNumber10_4_3'
  'NSFoundationVersionNumber10_4_4_Intel (567.23)':
    'prefix': 'NSFoundationVersionNumber10_4_4_Intel'
    'body': 'NSFoundationVersionNumber10_4_4_Intel'
  'NSFoundationVersionNumber10_4_4_PowerPC (567.21)':
    'prefix': 'NSFoundationVersionNumber10_4_4_PowerPC'
    'body': 'NSFoundationVersionNumber10_4_4_PowerPC'
  'NSFoundationVersionNumber10_4_5 (567.25)':
    'prefix': 'NSFoundationVersionNumber10_4_5'
    'body': 'NSFoundationVersionNumber10_4_5'
  'NSFoundationVersionNumber10_4_6 (567.26)':
    'prefix': 'NSFoundationVersionNumber10_4_6'
    'body': 'NSFoundationVersionNumber10_4_6'
  'NSFoundationVersionNumber10_4_7 (567.27)':
    'prefix': 'NSFoundationVersionNumber10_4_7'
    'body': 'NSFoundationVersionNumber10_4_7'
  'NSFoundationVersionNumber10_4_8 (567.28)':
    'prefix': 'NSFoundationVersionNumber10_4_8'
    'body': 'NSFoundationVersionNumber10_4_8'
  'NSFoundationVersionNumber10_4_9 (567.29)':
    'prefix': 'NSFoundationVersionNumber10_4_9'
    'body': 'NSFoundationVersionNumber10_4_9'
  'NSFoundationVersionNumber10_5 (677.00)':
    'prefix': 'NSFoundationVersionNumber10_5'
    'body': 'NSFoundationVersionNumber10_5'
  'NSFoundationVersionNumber10_5_1 (677.10)':
    'prefix': 'NSFoundationVersionNumber10_5_1'
    'body': 'NSFoundationVersionNumber10_5_1'
  'NSFoundationVersionNumber10_5_2 (677.15)':
    'prefix': 'NSFoundationVersionNumber10_5_2'
    'body': 'NSFoundationVersionNumber10_5_2'
  'NSFoundationVersionNumber10_5_3 (677.19)':
    'prefix': 'NSFoundationVersionNumber10_5_3'
    'body': 'NSFoundationVersionNumber10_5_3'
  'NSFoundationVersionNumber10_5_4 (677.19)':
    'prefix': 'NSFoundationVersionNumber10_5_4'
    'body': 'NSFoundationVersionNumber10_5_4'
  'NSFoundationVersionNumber10_5_5 (677.21)':
    'prefix': 'NSFoundationVersionNumber10_5_5'
    'body': 'NSFoundationVersionNumber10_5_5'
  'NSFoundationVersionNumber10_5_6 (677.22)':
    'prefix': 'NSFoundationVersionNumber10_5_6'
    'body': 'NSFoundationVersionNumber10_5_6'
  'NSFoundationVersionNumber10_5_7 (677.24)':
    'prefix': 'NSFoundationVersionNumber10_5_7'
    'body': 'NSFoundationVersionNumber10_5_7'
  'NSFoundationVersionNumber10_5_8 (677.26)':
    'prefix': 'NSFoundationVersionNumber10_5_8'
    'body': 'NSFoundationVersionNumber10_5_8'
  'NSFoundationVersionNumber10_6 (751.00)':
    'prefix': 'NSFoundationVersionNumber10_6'
    'body': 'NSFoundationVersionNumber10_6'
  'NSFoundationVersionNumber10_6_1 (751.00)':
    'prefix': 'NSFoundationVersionNumber10_6_1'
    'body': 'NSFoundationVersionNumber10_6_1'
  'NSFoundationVersionNumber10_6_2 (751.14)':
    'prefix': 'NSFoundationVersionNumber10_6_2'
    'body': 'NSFoundationVersionNumber10_6_2'
  'NSFoundationVersionNumber10_6_3 (751.21)':
    'prefix': 'NSFoundationVersionNumber10_6_3'
    'body': 'NSFoundationVersionNumber10_6_3'
  'NSFoundationVersionNumber10_6_4 (751.29)':
    'prefix': 'NSFoundationVersionNumber10_6_4'
    'body': 'NSFoundationVersionNumber10_6_4'
  'NSFoundationVersionNumber10_6_5 (751.42)':
    'prefix': 'NSFoundationVersionNumber10_6_5'
    'body': 'NSFoundationVersionNumber10_6_5'
  'NSFoundationVersionNumber10_6_6 (751.53)':
    'prefix': 'NSFoundationVersionNumber10_6_6'
    'body': 'NSFoundationVersionNumber10_6_6'
  'NSFoundationVersionNumber10_6_7 (751.53)':
    'prefix': 'NSFoundationVersionNumber10_6_7'
    'body': 'NSFoundationVersionNumber10_6_7'
  'NSFoundationVersionNumber10_6_8 (751.62)':
    'prefix': 'NSFoundationVersionNumber10_6_8'
    'body': 'NSFoundationVersionNumber10_6_8'
  'NSFoundationVersionNumber10_7 (833.10)':
    'prefix': 'NSFoundationVersionNumber10_7'
    'body': 'NSFoundationVersionNumber10_7'
  'NSFoundationVersionNumber10_7_1 (833.10)':
    'prefix': 'NSFoundationVersionNumber10_7_1'
    'body': 'NSFoundationVersionNumber10_7_1'
  'NSFoundationVersionNumber10_7_2 (833.20)':
    'prefix': 'NSFoundationVersionNumber10_7_2'
    'body': 'NSFoundationVersionNumber10_7_2'
  'NSFoundationVersionNumber10_7_3 (833.24)':
    'prefix': 'NSFoundationVersionNumber10_7_3'
    'body': 'NSFoundationVersionNumber10_7_3'
  'NSFoundationVersionNumber10_7_4 (833.25)':
    'prefix': 'NSFoundationVersionNumber10_7_4'
    'body': 'NSFoundationVersionNumber10_7_4'
  'NSFoundationVersionNumber10_8 (945.00)':
    'prefix': 'NSFoundationVersionNumber10_8'
    'body': 'NSFoundationVersionNumber10_8'
  'NSFoundationVersionNumber10_8_1 (945.00)':
    'prefix': 'NSFoundationVersionNumber10_8_1'
    'body': 'NSFoundationVersionNumber10_8_1'
  'NSFoundationVersionNumber10_8_2 (945.11)':
    'prefix': 'NSFoundationVersionNumber10_8_2'
    'body': 'NSFoundationVersionNumber10_8_2'
  'NSFoundationVersionNumber10_8_3 (945.16)':
    'prefix': 'NSFoundationVersionNumber10_8_3'
    'body': 'NSFoundationVersionNumber10_8_3'
  'NSFoundationVersionNumber10_8_4 (945.18)':
    'prefix': 'NSFoundationVersionNumber10_8_4'
    'body': 'NSFoundationVersionNumber10_8_4'
  'NSFoundationVersionNumber_iOS_4_0 (751.32)':
    'prefix': 'NSFoundationVersionNumber_iOS_4_0'
    'body': 'NSFoundationVersionNumber_iOS_4_0'
  'NSFoundationVersionNumber_iOS_4_1 (751.37)':
    'prefix': 'NSFoundationVersionNumber_iOS_4_1'
    'body': 'NSFoundationVersionNumber_iOS_4_1'
  'NSFoundationVersionNumber_iOS_4_2 (751.49)':
    'prefix': 'NSFoundationVersionNumber_iOS_4_2'
    'body': 'NSFoundationVersionNumber_iOS_4_2'
  'NSFoundationVersionNumber_iOS_4_3 (751.49)':
    'prefix': 'NSFoundationVersionNumber_iOS_4_3'
    'body': 'NSFoundationVersionNumber_iOS_4_3'
  'NSFoundationVersionNumber_iOS_5_0 (881.00)':
    'prefix': 'NSFoundationVersionNumber_iOS_5_0'
    'body': 'NSFoundationVersionNumber_iOS_5_0'
  'NSFoundationVersionNumber_iOS_5_1 (890.10)':
    'prefix': 'NSFoundationVersionNumber_iOS_5_1'
    'body': 'NSFoundationVersionNumber_iOS_5_1'
  'NSFoundationVersionNumber_iOS_6_0 (993.00)':
    'prefix': 'NSFoundationVersionNumber_iOS_6_0'
    'body': 'NSFoundationVersionNumber_iOS_6_0'
  'NSFoundationVersionNumber_iOS_6_1 (993.00)':
    'prefix': 'NSFoundationVersionNumber_iOS_6_1'
    'body': 'NSFoundationVersionNumber_iOS_6_1'
  'NSFoundationVersionNumber_iPhoneOS_2_0 (678.24)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_2_0'
    'body': 'NSFoundationVersionNumber_iPhoneOS_2_0'
  'NSFoundationVersionNumber_iPhoneOS_2_1 (678.26)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_2_1'
    'body': 'NSFoundationVersionNumber_iPhoneOS_2_1'
  'NSFoundationVersionNumber_iPhoneOS_2_2 (678.29)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_2_2'
    'body': 'NSFoundationVersionNumber_iPhoneOS_2_2'
  'NSFoundationVersionNumber_iPhoneOS_3_0 (678.47)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_3_0'
    'body': 'NSFoundationVersionNumber_iPhoneOS_3_0'
  'NSFoundationVersionNumber_iPhoneOS_3_1 (678.51)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_3_1'
    'body': 'NSFoundationVersionNumber_iPhoneOS_3_1'
  'NSFoundationVersionNumber_iPhoneOS_3_2 (678.60)':
    'prefix': 'NSFoundationVersionNumber_iPhoneOS_3_2'
    'body': 'NSFoundationVersionNumber_iPhoneOS_3_2'
  'NSFoundationVersionWithFileManagerResourceForkSupport (412)':
    'prefix': 'NSFoundationVersionWithFileManagerResourceForkSupport'
    'body': 'NSFoundationVersionWithFileManagerResourceForkSupport'
  'NSFunctionExpressionType (4)':
    'prefix': 'NSFunctionExpressionType'
    'body': 'NSFunctionExpressionType'
  'NSGreaterThanOrEqualToPredicateOperatorType (3)':
    'prefix': 'NSGreaterThanOrEqualToPredicateOperatorType'
    'body': 'NSGreaterThanOrEqualToPredicateOperatorType'
  'NSGreaterThanPredicateOperatorType (2)':
    'prefix': 'NSGreaterThanPredicateOperatorType'
    'body': 'NSGreaterThanPredicateOperatorType'
  'NSHPUXOperatingSystem (4)':
    'prefix': 'NSHPUXOperatingSystem'
    'body': 'NSHPUXOperatingSystem'
  'NSHTTPCookieAcceptPolicyAlways (0)':
    'prefix': 'NSHTTPCookieAcceptPolicyAlways'
    'body': 'NSHTTPCookieAcceptPolicyAlways'
  'NSHTTPCookieAcceptPolicyNever (1)':
    'prefix': 'NSHTTPCookieAcceptPolicyNever'
    'body': 'NSHTTPCookieAcceptPolicyNever'
  'NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain (2)':
    'prefix': 'NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain'
    'body': 'NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain'
  'NSHashTableCopyIn (65536)':
    'prefix': 'NSHashTableCopyIn'
    'body': 'NSHashTableCopyIn'
  'NSHashTableObjectPointerPersonality (512)':
    'prefix': 'NSHashTableObjectPointerPersonality'
    'body': 'NSHashTableObjectPointerPersonality'
  'NSHashTableStrongMemory (0)':
    'prefix': 'NSHashTableStrongMemory'
    'body': 'NSHashTableStrongMemory'
  'NSHashTableWeakMemory (5)':
    'prefix': 'NSHashTableWeakMemory'
    'body': 'NSHashTableWeakMemory'
  'NSHourCalendarUnit (32)':
    'prefix': 'NSHourCalendarUnit'
    'body': 'NSHourCalendarUnit'
  'NSINTEGER_DEFINED (1)':
    'prefix': 'NSINTEGER_DEFINED'
    'body': 'NSINTEGER_DEFINED'
  'NSISO2022JPStringEncoding (21)':
    'prefix': 'NSISO2022JPStringEncoding'
    'body': 'NSISO2022JPStringEncoding'
  'NSISOLatin1StringEncoding (5)':
    'prefix': 'NSISOLatin1StringEncoding'
    'body': 'NSISOLatin1StringEncoding'
  'NSISOLatin2StringEncoding (9)':
    'prefix': 'NSISOLatin2StringEncoding'
    'body': 'NSISOLatin2StringEncoding'
  'NSInPredicateOperatorType (10)':
    'prefix': 'NSInPredicateOperatorType'
    'body': 'NSInPredicateOperatorType'
  'NSInputMethodsDirectory (16)':
    'prefix': 'NSInputMethodsDirectory'
    'body': 'NSInputMethodsDirectory'
  'NSIntegerMax (2147483647)':
    'prefix': 'NSIntegerMax'
    'body': 'NSIntegerMax'
  'NSIntegerMin (-2147483648)':
    'prefix': 'NSIntegerMin'
    'body': 'NSIntegerMin'
  'NSIntersectSetExpressionType (6)':
    'prefix': 'NSIntersectSetExpressionType'
    'body': 'NSIntersectSetExpressionType'
  'NSItemReplacementDirectory (99)':
    'prefix': 'NSItemReplacementDirectory'
    'body': 'NSItemReplacementDirectory'
  'NSJSONReadingAllowFragments (4)':
    'prefix': 'NSJSONReadingAllowFragments'
    'body': 'NSJSONReadingAllowFragments'
  'NSJSONReadingMutableContainers (1)':
    'prefix': 'NSJSONReadingMutableContainers'
    'body': 'NSJSONReadingMutableContainers'
  'NSJSONReadingMutableLeaves (2)':
    'prefix': 'NSJSONReadingMutableLeaves'
    'body': 'NSJSONReadingMutableLeaves'
  'NSJSONWritingPrettyPrinted (1)':
    'prefix': 'NSJSONWritingPrettyPrinted'
    'body': 'NSJSONWritingPrettyPrinted'
  'NSJapaneseEUCStringEncoding (3)':
    'prefix': 'NSJapaneseEUCStringEncoding'
    'body': 'NSJapaneseEUCStringEncoding'
  'NSKeyPathExpressionType (3)':
    'prefix': 'NSKeyPathExpressionType'
    'body': 'NSKeyPathExpressionType'
  'NSKeyValueChangeInsertion (2)':
    'prefix': 'NSKeyValueChangeInsertion'
    'body': 'NSKeyValueChangeInsertion'
  'NSKeyValueChangeRemoval (3)':
    'prefix': 'NSKeyValueChangeRemoval'
    'body': 'NSKeyValueChangeRemoval'
  'NSKeyValueChangeReplacement (4)':
    'prefix': 'NSKeyValueChangeReplacement'
    'body': 'NSKeyValueChangeReplacement'
  'NSKeyValueChangeSetting (1)':
    'prefix': 'NSKeyValueChangeSetting'
    'body': 'NSKeyValueChangeSetting'
  'NSKeyValueIntersectSetMutation (3)':
    'prefix': 'NSKeyValueIntersectSetMutation'
    'body': 'NSKeyValueIntersectSetMutation'
  'NSKeyValueMinusSetMutation (2)':
    'prefix': 'NSKeyValueMinusSetMutation'
    'body': 'NSKeyValueMinusSetMutation'
  'NSKeyValueObservingOptionInitial (4)':
    'prefix': 'NSKeyValueObservingOptionInitial'
    'body': 'NSKeyValueObservingOptionInitial'
  'NSKeyValueObservingOptionNew (1)':
    'prefix': 'NSKeyValueObservingOptionNew'
    'body': 'NSKeyValueObservingOptionNew'
  'NSKeyValueObservingOptionOld (2)':
    'prefix': 'NSKeyValueObservingOptionOld'
    'body': 'NSKeyValueObservingOptionOld'
  'NSKeyValueObservingOptionPrior (8)':
    'prefix': 'NSKeyValueObservingOptionPrior'
    'body': 'NSKeyValueObservingOptionPrior'
  'NSKeyValueSetSetMutation (4)':
    'prefix': 'NSKeyValueSetSetMutation'
    'body': 'NSKeyValueSetSetMutation'
  'NSKeyValueUnionSetMutation (1)':
    'prefix': 'NSKeyValueUnionSetMutation'
    'body': 'NSKeyValueUnionSetMutation'
  'NSKeyValueValidationError (1024)':
    'prefix': 'NSKeyValueValidationError'
    'body': 'NSKeyValueValidationError'
  'NSLessThanOrEqualToPredicateOperatorType (1)':
    'prefix': 'NSLessThanOrEqualToPredicateOperatorType'
    'body': 'NSLessThanOrEqualToPredicateOperatorType'
  'NSLessThanPredicateOperatorType (0)':
    'prefix': 'NSLessThanPredicateOperatorType'
    'body': 'NSLessThanPredicateOperatorType'
  'NSLibraryDirectory (5)':
    'prefix': 'NSLibraryDirectory'
    'body': 'NSLibraryDirectory'
  'NSLikePredicateOperatorType (7)':
    'prefix': 'NSLikePredicateOperatorType'
    'body': 'NSLikePredicateOperatorType'
  'NSLinguisticTaggerJoinNames (16)':
    'prefix': 'NSLinguisticTaggerJoinNames'
    'body': 'NSLinguisticTaggerJoinNames'
  'NSLinguisticTaggerOmitOther (8)':
    'prefix': 'NSLinguisticTaggerOmitOther'
    'body': 'NSLinguisticTaggerOmitOther'
  'NSLinguisticTaggerOmitPunctuation (2)':
    'prefix': 'NSLinguisticTaggerOmitPunctuation'
    'body': 'NSLinguisticTaggerOmitPunctuation'
  'NSLinguisticTaggerOmitWhitespace (4)':
    'prefix': 'NSLinguisticTaggerOmitWhitespace'
    'body': 'NSLinguisticTaggerOmitWhitespace'
  'NSLinguisticTaggerOmitWords (1)':
    'prefix': 'NSLinguisticTaggerOmitWords'
    'body': 'NSLinguisticTaggerOmitWords'
  'NSLiteralSearch (2)':
    'prefix': 'NSLiteralSearch'
    'body': 'NSLiteralSearch'
  'NSLocalDomainMask (2)':
    'prefix': 'NSLocalDomainMask'
    'body': 'NSLocalDomainMask'
  'NSLocaleLanguageDirectionBottomToTop (4)':
    'prefix': 'NSLocaleLanguageDirectionBottomToTop'
    'body': 'NSLocaleLanguageDirectionBottomToTop'
  'NSLocaleLanguageDirectionLeftToRight (1)':
    'prefix': 'NSLocaleLanguageDirectionLeftToRight'
    'body': 'NSLocaleLanguageDirectionLeftToRight'
  'NSLocaleLanguageDirectionRightToLeft (2)':
    'prefix': 'NSLocaleLanguageDirectionRightToLeft'
    'body': 'NSLocaleLanguageDirectionRightToLeft'
  'NSLocaleLanguageDirectionTopToBottom (3)':
    'prefix': 'NSLocaleLanguageDirectionTopToBottom'
    'body': 'NSLocaleLanguageDirectionTopToBottom'
  'NSLocaleLanguageDirectionUnknown (0)':
    'prefix': 'NSLocaleLanguageDirectionUnknown'
    'body': 'NSLocaleLanguageDirectionUnknown'
  'NSMACHOperatingSystem (5)':
    'prefix': 'NSMACHOperatingSystem'
    'body': 'NSMACHOperatingSystem'
  'NSMacOSRomanStringEncoding (30)':
    'prefix': 'NSMacOSRomanStringEncoding'
    'body': 'NSMacOSRomanStringEncoding'
  'NSMachPortDeallocateNone (0)':
    'prefix': 'NSMachPortDeallocateNone'
    'body': 'NSMachPortDeallocateNone'
  'NSMachPortDeallocateReceiveRight (2)':
    'prefix': 'NSMachPortDeallocateReceiveRight'
    'body': 'NSMachPortDeallocateReceiveRight'
  'NSMachPortDeallocateSendRight (1)':
    'prefix': 'NSMachPortDeallocateSendRight'
    'body': 'NSMachPortDeallocateSendRight'
  'NSMapTableCopyIn (65536)':
    'prefix': 'NSMapTableCopyIn'
    'body': 'NSMapTableCopyIn'
  'NSMapTableObjectPointerPersonality (512)':
    'prefix': 'NSMapTableObjectPointerPersonality'
    'body': 'NSMapTableObjectPointerPersonality'
  'NSMapTableStrongMemory (0)':
    'prefix': 'NSMapTableStrongMemory'
    'body': 'NSMapTableStrongMemory'
  'NSMapTableWeakMemory (5)':
    'prefix': 'NSMapTableWeakMemory'
    'body': 'NSMapTableWeakMemory'
  'NSMappedRead (1)':
    'prefix': 'NSMappedRead'
    'body': 'NSMappedRead'
  'NSMatchesPredicateOperatorType (6)':
    'prefix': 'NSMatchesPredicateOperatorType'
    'body': 'NSMatchesPredicateOperatorType'
  'NSMatchingAnchored (4)':
    'prefix': 'NSMatchingAnchored'
    'body': 'NSMatchingAnchored'
  'NSMatchingCompleted (2)':
    'prefix': 'NSMatchingCompleted'
    'body': 'NSMatchingCompleted'
  'NSMatchingHitEnd (4)':
    'prefix': 'NSMatchingHitEnd'
    'body': 'NSMatchingHitEnd'
  'NSMatchingInternalError (16)':
    'prefix': 'NSMatchingInternalError'
    'body': 'NSMatchingInternalError'
  'NSMatchingProgress (1)':
    'prefix': 'NSMatchingProgress'
    'body': 'NSMatchingProgress'
  'NSMatchingReportCompletion (2)':
    'prefix': 'NSMatchingReportCompletion'
    'body': 'NSMatchingReportCompletion'
  'NSMatchingReportProgress (1)':
    'prefix': 'NSMatchingReportProgress'
    'body': 'NSMatchingReportProgress'
  'NSMatchingRequiredEnd (8)':
    'prefix': 'NSMatchingRequiredEnd'
    'body': 'NSMatchingRequiredEnd'
  'NSMatchingWithTransparentBounds (8)':
    'prefix': 'NSMatchingWithTransparentBounds'
    'body': 'NSMatchingWithTransparentBounds'
  'NSMatchingWithoutAnchoringBounds (16)':
    'prefix': 'NSMatchingWithoutAnchoringBounds'
    'body': 'NSMatchingWithoutAnchoringBounds'
  'NSMaximumStringLength (2147483646)':
    'prefix': 'NSMaximumStringLength'
    'body': 'NSMaximumStringLength'
  'NSMinusSetExpressionType (7)':
    'prefix': 'NSMinusSetExpressionType'
    'body': 'NSMinusSetExpressionType'
  'NSMinuteCalendarUnit (64)':
    'prefix': 'NSMinuteCalendarUnit'
    'body': 'NSMinuteCalendarUnit'
  'NSMonthCalendarUnit (8)':
    'prefix': 'NSMonthCalendarUnit'
    'body': 'NSMonthCalendarUnit'
  'NSMoviesDirectory (17)':
    'prefix': 'NSMoviesDirectory'
    'body': 'NSMoviesDirectory'
  'NSMusicDirectory (18)':
    'prefix': 'NSMusicDirectory'
    'body': 'NSMusicDirectory'
  'NSNEXTSTEPStringEncoding (2)':
    'prefix': 'NSNEXTSTEPStringEncoding'
    'body': 'NSNEXTSTEPStringEncoding'
  'NSNetServiceListenForConnections (2)':
    'prefix': 'NSNetServiceListenForConnections'
    'body': 'NSNetServiceListenForConnections'
  'NSNetServiceNoAutoRename (1)':
    'prefix': 'NSNetServiceNoAutoRename'
    'body': 'NSNetServiceNoAutoRename'
  'NSNetServicesActivityInProgress (-72003)':
    'prefix': 'NSNetServicesActivityInProgress'
    'body': 'NSNetServicesActivityInProgress'
  'NSNetServicesBadArgumentError (-72004)':
    'prefix': 'NSNetServicesBadArgumentError'
    'body': 'NSNetServicesBadArgumentError'
  'NSNetServicesCancelledError (-72005)':
    'prefix': 'NSNetServicesCancelledError'
    'body': 'NSNetServicesCancelledError'
  'NSNetServicesCollisionError (-72001)':
    'prefix': 'NSNetServicesCollisionError'
    'body': 'NSNetServicesCollisionError'
  'NSNetServicesInvalidError (-72006)':
    'prefix': 'NSNetServicesInvalidError'
    'body': 'NSNetServicesInvalidError'
  'NSNetServicesNotFoundError (-72002)':
    'prefix': 'NSNetServicesNotFoundError'
    'body': 'NSNetServicesNotFoundError'
  'NSNetServicesTimeoutError (-72007)':
    'prefix': 'NSNetServicesTimeoutError'
    'body': 'NSNetServicesTimeoutError'
  'NSNetServicesUnknownError (-72000)':
    'prefix': 'NSNetServicesUnknownError'
    'body': 'NSNetServicesUnknownError'
  'NSNetworkDomainMask (4)':
    'prefix': 'NSNetworkDomainMask'
    'body': 'NSNetworkDomainMask'
  'NSNonLossyASCIIStringEncoding (7)':
    'prefix': 'NSNonLossyASCIIStringEncoding'
    'body': 'NSNonLossyASCIIStringEncoding'
  'NSNormalizedPredicateOption (4)':
    'prefix': 'NSNormalizedPredicateOption'
    'body': 'NSNormalizedPredicateOption'
  'NSNotEqualToPredicateOperatorType (5)':
    'prefix': 'NSNotEqualToPredicateOperatorType'
    'body': 'NSNotEqualToPredicateOperatorType'
  'NSNotFound (2147483647)':
    'prefix': 'NSNotFound'
    'body': 'NSNotFound'
  'NSNotPredicateType (0)':
    'prefix': 'NSNotPredicateType'
    'body': 'NSNotPredicateType'
  'NSNotificationCoalescingOnName (1)':
    'prefix': 'NSNotificationCoalescingOnName'
    'body': 'NSNotificationCoalescingOnName'
  'NSNotificationCoalescingOnSender (2)':
    'prefix': 'NSNotificationCoalescingOnSender'
    'body': 'NSNotificationCoalescingOnSender'
  'NSNotificationNoCoalescing (0)':
    'prefix': 'NSNotificationNoCoalescing'
    'body': 'NSNotificationNoCoalescing'
  'NSNumberFormatterBehavior10_4 (1040)':
    'prefix': 'NSNumberFormatterBehavior10_4'
    'body': 'NSNumberFormatterBehavior10_4'
  'NSNumberFormatterBehaviorDefault (0)':
    'prefix': 'NSNumberFormatterBehaviorDefault'
    'body': 'NSNumberFormatterBehaviorDefault'
  'NSNumberFormatterCurrencyStyle (2)':
    'prefix': 'NSNumberFormatterCurrencyStyle'
    'body': 'NSNumberFormatterCurrencyStyle'
  'NSNumberFormatterDecimalStyle (1)':
    'prefix': 'NSNumberFormatterDecimalStyle'
    'body': 'NSNumberFormatterDecimalStyle'
  'NSNumberFormatterNoStyle (0)':
    'prefix': 'NSNumberFormatterNoStyle'
    'body': 'NSNumberFormatterNoStyle'
  'NSNumberFormatterPadAfterPrefix (1)':
    'prefix': 'NSNumberFormatterPadAfterPrefix'
    'body': 'NSNumberFormatterPadAfterPrefix'
  'NSNumberFormatterPadAfterSuffix (3)':
    'prefix': 'NSNumberFormatterPadAfterSuffix'
    'body': 'NSNumberFormatterPadAfterSuffix'
  'NSNumberFormatterPadBeforePrefix (0)':
    'prefix': 'NSNumberFormatterPadBeforePrefix'
    'body': 'NSNumberFormatterPadBeforePrefix'
  'NSNumberFormatterPadBeforeSuffix (2)':
    'prefix': 'NSNumberFormatterPadBeforeSuffix'
    'body': 'NSNumberFormatterPadBeforeSuffix'
  'NSNumberFormatterPercentStyle (3)':
    'prefix': 'NSNumberFormatterPercentStyle'
    'body': 'NSNumberFormatterPercentStyle'
  'NSNumberFormatterRoundCeiling (0)':
    'prefix': 'NSNumberFormatterRoundCeiling'
    'body': 'NSNumberFormatterRoundCeiling'
  'NSNumberFormatterRoundDown (2)':
    'prefix': 'NSNumberFormatterRoundDown'
    'body': 'NSNumberFormatterRoundDown'
  'NSNumberFormatterRoundFloor (1)':
    'prefix': 'NSNumberFormatterRoundFloor'
    'body': 'NSNumberFormatterRoundFloor'
  'NSNumberFormatterRoundHalfDown (5)':
    'prefix': 'NSNumberFormatterRoundHalfDown'
    'body': 'NSNumberFormatterRoundHalfDown'
  'NSNumberFormatterRoundHalfEven (4)':
    'prefix': 'NSNumberFormatterRoundHalfEven'
    'body': 'NSNumberFormatterRoundHalfEven'
  'NSNumberFormatterRoundHalfUp (6)':
    'prefix': 'NSNumberFormatterRoundHalfUp'
    'body': 'NSNumberFormatterRoundHalfUp'
  'NSNumberFormatterRoundUp (3)':
    'prefix': 'NSNumberFormatterRoundUp'
    'body': 'NSNumberFormatterRoundUp'
  'NSNumberFormatterScientificStyle (4)':
    'prefix': 'NSNumberFormatterScientificStyle'
    'body': 'NSNumberFormatterScientificStyle'
  'NSNumberFormatterSpellOutStyle (5)':
    'prefix': 'NSNumberFormatterSpellOutStyle'
    'body': 'NSNumberFormatterSpellOutStyle'
  'NSNumericSearch (64)':
    'prefix': 'NSNumericSearch'
    'body': 'NSNumericSearch'
  'NSOSF1OperatingSystem (7)':
    'prefix': 'NSOSF1OperatingSystem'
    'body': 'NSOSF1OperatingSystem'
  'NSOpenStepUnicodeReservedBase (62464)':
    'prefix': 'NSOpenStepUnicodeReservedBase'
    'body': 'NSOpenStepUnicodeReservedBase'
  'NSOperationQueueDefaultMaxConcurrentOperationCount (-1)':
    'prefix': 'NSOperationQueueDefaultMaxConcurrentOperationCount'
    'body': 'NSOperationQueueDefaultMaxConcurrentOperationCount'
  'NSOperationQueuePriorityHigh (4)':
    'prefix': 'NSOperationQueuePriorityHigh'
    'body': 'NSOperationQueuePriorityHigh'
  'NSOperationQueuePriorityLow (-4)':
    'prefix': 'NSOperationQueuePriorityLow'
    'body': 'NSOperationQueuePriorityLow'
  'NSOperationQueuePriorityNormal (0)':
    'prefix': 'NSOperationQueuePriorityNormal'
    'body': 'NSOperationQueuePriorityNormal'
  'NSOperationQueuePriorityVeryHigh (8)':
    'prefix': 'NSOperationQueuePriorityVeryHigh'
    'body': 'NSOperationQueuePriorityVeryHigh'
  'NSOperationQueuePriorityVeryLow (-8)':
    'prefix': 'NSOperationQueuePriorityVeryLow'
    'body': 'NSOperationQueuePriorityVeryLow'
  'NSOrPredicateType (2)':
    'prefix': 'NSOrPredicateType'
    'body': 'NSOrPredicateType'
  'NSOrderedAscending (-1)':
    'prefix': 'NSOrderedAscending'
    'body': 'NSOrderedAscending'
  'NSOrderedDescending (1)':
    'prefix': 'NSOrderedDescending'
    'body': 'NSOrderedDescending'
  'NSOrderedSame (0)':
    'prefix': 'NSOrderedSame'
    'body': 'NSOrderedSame'
  'NSPicturesDirectory (19)':
    'prefix': 'NSPicturesDirectory'
    'body': 'NSPicturesDirectory'
  'NSPointerFunctionsCStringPersonality (768)':
    'prefix': 'NSPointerFunctionsCStringPersonality'
    'body': 'NSPointerFunctionsCStringPersonality'
  'NSPointerFunctionsCopyIn (65536)':
    'prefix': 'NSPointerFunctionsCopyIn'
    'body': 'NSPointerFunctionsCopyIn'
  'NSPointerFunctionsIntegerPersonality (1280)':
    'prefix': 'NSPointerFunctionsIntegerPersonality'
    'body': 'NSPointerFunctionsIntegerPersonality'
  'NSPointerFunctionsMachVirtualMemory (4)':
    'prefix': 'NSPointerFunctionsMachVirtualMemory'
    'body': 'NSPointerFunctionsMachVirtualMemory'
  'NSPointerFunctionsMallocMemory (3)':
    'prefix': 'NSPointerFunctionsMallocMemory'
    'body': 'NSPointerFunctionsMallocMemory'
  'NSPointerFunctionsObjectPersonality (0)':
    'prefix': 'NSPointerFunctionsObjectPersonality'
    'body': 'NSPointerFunctionsObjectPersonality'
  'NSPointerFunctionsObjectPointerPersonality (512)':
    'prefix': 'NSPointerFunctionsObjectPointerPersonality'
    'body': 'NSPointerFunctionsObjectPointerPersonality'
  'NSPointerFunctionsOpaqueMemory (2)':
    'prefix': 'NSPointerFunctionsOpaqueMemory'
    'body': 'NSPointerFunctionsOpaqueMemory'
  'NSPointerFunctionsOpaquePersonality (256)':
    'prefix': 'NSPointerFunctionsOpaquePersonality'
    'body': 'NSPointerFunctionsOpaquePersonality'
  'NSPointerFunctionsStrongMemory (0)':
    'prefix': 'NSPointerFunctionsStrongMemory'
    'body': 'NSPointerFunctionsStrongMemory'
  'NSPointerFunctionsStructPersonality (1024)':
    'prefix': 'NSPointerFunctionsStructPersonality'
    'body': 'NSPointerFunctionsStructPersonality'
  'NSPointerFunctionsWeakMemory (5)':
    'prefix': 'NSPointerFunctionsWeakMemory'
    'body': 'NSPointerFunctionsWeakMemory'
  'NSPostASAP (2)':
    'prefix': 'NSPostASAP'
    'body': 'NSPostASAP'
  'NSPostNow (3)':
    'prefix': 'NSPostNow'
    'body': 'NSPostNow'
  'NSPostWhenIdle (1)':
    'prefix': 'NSPostWhenIdle'
    'body': 'NSPostWhenIdle'
  'NSPreferencePanesDirectory (22)':
    'prefix': 'NSPreferencePanesDirectory'
    'body': 'NSPreferencePanesDirectory'
  'NSPrinterDescriptionDirectory (20)':
    'prefix': 'NSPrinterDescriptionDirectory'
    'body': 'NSPrinterDescriptionDirectory'
  'NSPropertyListBinaryFormat_v1_0 (200)':
    'prefix': 'NSPropertyListBinaryFormat_v1_0'
    'body': 'NSPropertyListBinaryFormat_v1_0'
  'NSPropertyListErrorMaximum (4095)':
    'prefix': 'NSPropertyListErrorMaximum'
    'body': 'NSPropertyListErrorMaximum'
  'NSPropertyListErrorMinimum (3840)':
    'prefix': 'NSPropertyListErrorMinimum'
    'body': 'NSPropertyListErrorMinimum'
  'NSPropertyListImmutable (0)':
    'prefix': 'NSPropertyListImmutable'
    'body': 'NSPropertyListImmutable'
  'NSPropertyListMutableContainers (1)':
    'prefix': 'NSPropertyListMutableContainers'
    'body': 'NSPropertyListMutableContainers'
  'NSPropertyListMutableContainersAndLeaves (2)':
    'prefix': 'NSPropertyListMutableContainersAndLeaves'
    'body': 'NSPropertyListMutableContainersAndLeaves'
  'NSPropertyListOpenStepFormat (1)':
    'prefix': 'NSPropertyListOpenStepFormat'
    'body': 'NSPropertyListOpenStepFormat'
  'NSPropertyListReadCorruptError (3840)':
    'prefix': 'NSPropertyListReadCorruptError'
    'body': 'NSPropertyListReadCorruptError'
  'NSPropertyListReadStreamError (3842)':
    'prefix': 'NSPropertyListReadStreamError'
    'body': 'NSPropertyListReadStreamError'
  'NSPropertyListReadUnknownVersionError (3841)':
    'prefix': 'NSPropertyListReadUnknownVersionError'
    'body': 'NSPropertyListReadUnknownVersionError'
  'NSPropertyListWriteStreamError (3851)':
    'prefix': 'NSPropertyListWriteStreamError'
    'body': 'NSPropertyListWriteStreamError'
  'NSPropertyListXMLFormat_v1_0 (100)':
    'prefix': 'NSPropertyListXMLFormat_v1_0'
    'body': 'NSPropertyListXMLFormat_v1_0'
  'NSProprietaryStringEncoding (65536)':
    'prefix': 'NSProprietaryStringEncoding'
    'body': 'NSProprietaryStringEncoding'
  'NSQuarterCalendarUnit (2048)':
    'prefix': 'NSQuarterCalendarUnit'
    'body': 'NSQuarterCalendarUnit'
  'NSRegularExpressionAllowCommentsAndWhitespace (2)':
    'prefix': 'NSRegularExpressionAllowCommentsAndWhitespace'
    'body': 'NSRegularExpressionAllowCommentsAndWhitespace'
  'NSRegularExpressionAnchorsMatchLines (16)':
    'prefix': 'NSRegularExpressionAnchorsMatchLines'
    'body': 'NSRegularExpressionAnchorsMatchLines'
  'NSRegularExpressionCaseInsensitive (1)':
    'prefix': 'NSRegularExpressionCaseInsensitive'
    'body': 'NSRegularExpressionCaseInsensitive'
  'NSRegularExpressionDotMatchesLineSeparators (8)':
    'prefix': 'NSRegularExpressionDotMatchesLineSeparators'
    'body': 'NSRegularExpressionDotMatchesLineSeparators'
  'NSRegularExpressionIgnoreMetacharacters (4)':
    'prefix': 'NSRegularExpressionIgnoreMetacharacters'
    'body': 'NSRegularExpressionIgnoreMetacharacters'
  'NSRegularExpressionSearch (1024)':
    'prefix': 'NSRegularExpressionSearch'
    'body': 'NSRegularExpressionSearch'
  'NSRegularExpressionUseUnicodeWordBoundaries (64)':
    'prefix': 'NSRegularExpressionUseUnicodeWordBoundaries'
    'body': 'NSRegularExpressionUseUnicodeWordBoundaries'
  'NSRegularExpressionUseUnixLineSeparators (32)':
    'prefix': 'NSRegularExpressionUseUnixLineSeparators'
    'body': 'NSRegularExpressionUseUnixLineSeparators'
  'NSRoundBankers (3)':
    'prefix': 'NSRoundBankers'
    'body': 'NSRoundBankers'
  'NSRoundDown (1)':
    'prefix': 'NSRoundDown'
    'body': 'NSRoundDown'
  'NSRoundPlain (0)':
    'prefix': 'NSRoundPlain'
    'body': 'NSRoundPlain'
  'NSRoundUp (2)':
    'prefix': 'NSRoundUp'
    'body': 'NSRoundUp'
  'NSSecondCalendarUnit (128)':
    'prefix': 'NSSecondCalendarUnit'
    'body': 'NSSecondCalendarUnit'
  'NSSharedPublicDirectory (21)':
    'prefix': 'NSSharedPublicDirectory'
    'body': 'NSSharedPublicDirectory'
  'NSShiftJISStringEncoding (8)':
    'prefix': 'NSShiftJISStringEncoding'
    'body': 'NSShiftJISStringEncoding'
  'NSSolarisOperatingSystem (3)':
    'prefix': 'NSSolarisOperatingSystem'
    'body': 'NSSolarisOperatingSystem'
  'NSSortConcurrent (1)':
    'prefix': 'NSSortConcurrent'
    'body': 'NSSortConcurrent'
  'NSSortStable (16)':
    'prefix': 'NSSortStable'
    'body': 'NSSortStable'
  'NSStreamEventEndEncountered (16)':
    'prefix': 'NSStreamEventEndEncountered'
    'body': 'NSStreamEventEndEncountered'
  'NSStreamEventErrorOccurred (8)':
    'prefix': 'NSStreamEventErrorOccurred'
    'body': 'NSStreamEventErrorOccurred'
  'NSStreamEventHasBytesAvailable (2)':
    'prefix': 'NSStreamEventHasBytesAvailable'
    'body': 'NSStreamEventHasBytesAvailable'
  'NSStreamEventHasSpaceAvailable (4)':
    'prefix': 'NSStreamEventHasSpaceAvailable'
    'body': 'NSStreamEventHasSpaceAvailable'
  'NSStreamEventNone (0)':
    'prefix': 'NSStreamEventNone'
    'body': 'NSStreamEventNone'
  'NSStreamEventOpenCompleted (1)':
    'prefix': 'NSStreamEventOpenCompleted'
    'body': 'NSStreamEventOpenCompleted'
  'NSStreamStatusAtEnd (5)':
    'prefix': 'NSStreamStatusAtEnd'
    'body': 'NSStreamStatusAtEnd'
  'NSStreamStatusClosed (6)':
    'prefix': 'NSStreamStatusClosed'
    'body': 'NSStreamStatusClosed'
  'NSStreamStatusError (7)':
    'prefix': 'NSStreamStatusError'
    'body': 'NSStreamStatusError'
  'NSStreamStatusNotOpen (0)':
    'prefix': 'NSStreamStatusNotOpen'
    'body': 'NSStreamStatusNotOpen'
  'NSStreamStatusOpen (2)':
    'prefix': 'NSStreamStatusOpen'
    'body': 'NSStreamStatusOpen'
  'NSStreamStatusOpening (1)':
    'prefix': 'NSStreamStatusOpening'
    'body': 'NSStreamStatusOpening'
  'NSStreamStatusReading (3)':
    'prefix': 'NSStreamStatusReading'
    'body': 'NSStreamStatusReading'
  'NSStreamStatusWriting (4)':
    'prefix': 'NSStreamStatusWriting'
    'body': 'NSStreamStatusWriting'
  'NSStringEncodingConversionAllowLossy (1)':
    'prefix': 'NSStringEncodingConversionAllowLossy'
    'body': 'NSStringEncodingConversionAllowLossy'
  'NSStringEncodingConversionExternalRepresentation (2)':
    'prefix': 'NSStringEncodingConversionExternalRepresentation'
    'body': 'NSStringEncodingConversionExternalRepresentation'
  'NSStringEnumerationByComposedCharacterSequences (2)':
    'prefix': 'NSStringEnumerationByComposedCharacterSequences'
    'body': 'NSStringEnumerationByComposedCharacterSequences'
  'NSStringEnumerationByLines (0)':
    'prefix': 'NSStringEnumerationByLines'
    'body': 'NSStringEnumerationByLines'
  'NSStringEnumerationByParagraphs (1)':
    'prefix': 'NSStringEnumerationByParagraphs'
    'body': 'NSStringEnumerationByParagraphs'
  'NSStringEnumerationBySentences (4)':
    'prefix': 'NSStringEnumerationBySentences'
    'body': 'NSStringEnumerationBySentences'
  'NSStringEnumerationByWords (3)':
    'prefix': 'NSStringEnumerationByWords'
    'body': 'NSStringEnumerationByWords'
  'NSStringEnumerationLocalized (1024)':
    'prefix': 'NSStringEnumerationLocalized'
    'body': 'NSStringEnumerationLocalized'
  'NSStringEnumerationReverse (256)':
    'prefix': 'NSStringEnumerationReverse'
    'body': 'NSStringEnumerationReverse'
  'NSStringEnumerationSubstringNotRequired (512)':
    'prefix': 'NSStringEnumerationSubstringNotRequired'
    'body': 'NSStringEnumerationSubstringNotRequired'
  'NSSubqueryExpressionType (13)':
    'prefix': 'NSSubqueryExpressionType'
    'body': 'NSSubqueryExpressionType'
  'NSSunOSOperatingSystem (6)':
    'prefix': 'NSSunOSOperatingSystem'
    'body': 'NSSunOSOperatingSystem'
  'NSSymbolStringEncoding (6)':
    'prefix': 'NSSymbolStringEncoding'
    'body': 'NSSymbolStringEncoding'
  'NSSystemDomainMask (8)':
    'prefix': 'NSSystemDomainMask'
    'body': 'NSSystemDomainMask'
  'NSTextCheckingAllCustomTypes (18446744069414584320)':
    'prefix': 'NSTextCheckingAllCustomTypes'
    'body': 'NSTextCheckingAllCustomTypes'
  'NSTextCheckingAllSystemTypes (4294967295)':
    'prefix': 'NSTextCheckingAllSystemTypes'
    'body': 'NSTextCheckingAllSystemTypes'
  'NSTextCheckingAllTypes (18446744073709551615)':
    'prefix': 'NSTextCheckingAllTypes'
    'body': 'NSTextCheckingAllTypes'
  'NSTextCheckingTypeAddress (16)':
    'prefix': 'NSTextCheckingTypeAddress'
    'body': 'NSTextCheckingTypeAddress'
  'NSTextCheckingTypeCorrection (512)':
    'prefix': 'NSTextCheckingTypeCorrection'
    'body': 'NSTextCheckingTypeCorrection'
  'NSTextCheckingTypeDash (128)':
    'prefix': 'NSTextCheckingTypeDash'
    'body': 'NSTextCheckingTypeDash'
  'NSTextCheckingTypeDate (8)':
    'prefix': 'NSTextCheckingTypeDate'
    'body': 'NSTextCheckingTypeDate'
  'NSTextCheckingTypeGrammar (4)':
    'prefix': 'NSTextCheckingTypeGrammar'
    'body': 'NSTextCheckingTypeGrammar'
  'NSTextCheckingTypeLink (32)':
    'prefix': 'NSTextCheckingTypeLink'
    'body': 'NSTextCheckingTypeLink'
  'NSTextCheckingTypeOrthography (1)':
    'prefix': 'NSTextCheckingTypeOrthography'
    'body': 'NSTextCheckingTypeOrthography'
  'NSTextCheckingTypePhoneNumber (2048)':
    'prefix': 'NSTextCheckingTypePhoneNumber'
    'body': 'NSTextCheckingTypePhoneNumber'
  'NSTextCheckingTypeQuote (64)':
    'prefix': 'NSTextCheckingTypeQuote'
    'body': 'NSTextCheckingTypeQuote'
  'NSTextCheckingTypeRegularExpression (1024)':
    'prefix': 'NSTextCheckingTypeRegularExpression'
    'body': 'NSTextCheckingTypeRegularExpression'
  'NSTextCheckingTypeReplacement (256)':
    'prefix': 'NSTextCheckingTypeReplacement'
    'body': 'NSTextCheckingTypeReplacement'
  'NSTextCheckingTypeSpelling (2)':
    'prefix': 'NSTextCheckingTypeSpelling'
    'body': 'NSTextCheckingTypeSpelling'
  'NSTextCheckingTypeTransitInformation (4096)':
    'prefix': 'NSTextCheckingTypeTransitInformation'
    'body': 'NSTextCheckingTypeTransitInformation'
  'NSTimeIntervalSince1970 (978307200.0)':
    'prefix': 'NSTimeIntervalSince1970'
    'body': 'NSTimeIntervalSince1970'
  'NSTimeZoneCalendarUnit (2097152)':
    'prefix': 'NSTimeZoneCalendarUnit'
    'body': 'NSTimeZoneCalendarUnit'
  'NSTimeZoneNameStyleDaylightSaving (2)':
    'prefix': 'NSTimeZoneNameStyleDaylightSaving'
    'body': 'NSTimeZoneNameStyleDaylightSaving'
  'NSTimeZoneNameStyleGeneric (4)':
    'prefix': 'NSTimeZoneNameStyleGeneric'
    'body': 'NSTimeZoneNameStyleGeneric'
  'NSTimeZoneNameStyleShortDaylightSaving (3)':
    'prefix': 'NSTimeZoneNameStyleShortDaylightSaving'
    'body': 'NSTimeZoneNameStyleShortDaylightSaving'
  'NSTimeZoneNameStyleShortGeneric (5)':
    'prefix': 'NSTimeZoneNameStyleShortGeneric'
    'body': 'NSTimeZoneNameStyleShortGeneric'
  'NSTimeZoneNameStyleShortStandard (1)':
    'prefix': 'NSTimeZoneNameStyleShortStandard'
    'body': 'NSTimeZoneNameStyleShortStandard'
  'NSTimeZoneNameStyleStandard (0)':
    'prefix': 'NSTimeZoneNameStyleStandard'
    'body': 'NSTimeZoneNameStyleStandard'
  'NSTrashDirectory (102)':
    'prefix': 'NSTrashDirectory'
    'body': 'NSTrashDirectory'
  'NSUIntegerMax (4294967295)':
    'prefix': 'NSUIntegerMax'
    'body': 'NSUIntegerMax'
  'NSURLBookmarkCreationMinimalBookmark (512)':
    'prefix': 'NSURLBookmarkCreationMinimalBookmark'
    'body': 'NSURLBookmarkCreationMinimalBookmark'
  'NSURLBookmarkCreationPreferFileIDResolution (256)':
    'prefix': 'NSURLBookmarkCreationPreferFileIDResolution'
    'body': 'NSURLBookmarkCreationPreferFileIDResolution'
  'NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess (4096)':
    'prefix': 'NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess'
    'body': 'NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess'
  'NSURLBookmarkCreationSuitableForBookmarkFile (1024)':
    'prefix': 'NSURLBookmarkCreationSuitableForBookmarkFile'
    'body': 'NSURLBookmarkCreationSuitableForBookmarkFile'
  'NSURLBookmarkCreationWithSecurityScope (2048)':
    'prefix': 'NSURLBookmarkCreationWithSecurityScope'
    'body': 'NSURLBookmarkCreationWithSecurityScope'
  'NSURLBookmarkResolutionWithSecurityScope (1024)':
    'prefix': 'NSURLBookmarkResolutionWithSecurityScope'
    'body': 'NSURLBookmarkResolutionWithSecurityScope'
  'NSURLBookmarkResolutionWithoutMounting (512)':
    'prefix': 'NSURLBookmarkResolutionWithoutMounting'
    'body': 'NSURLBookmarkResolutionWithoutMounting'
  'NSURLBookmarkResolutionWithoutUI (256)':
    'prefix': 'NSURLBookmarkResolutionWithoutUI'
    'body': 'NSURLBookmarkResolutionWithoutUI'
  'NSURLCacheStorageAllowed (0)':
    'prefix': 'NSURLCacheStorageAllowed'
    'body': 'NSURLCacheStorageAllowed'
  'NSURLCacheStorageAllowedInMemoryOnly (1)':
    'prefix': 'NSURLCacheStorageAllowedInMemoryOnly'
    'body': 'NSURLCacheStorageAllowedInMemoryOnly'
  'NSURLCacheStorageNotAllowed (2)':
    'prefix': 'NSURLCacheStorageNotAllowed'
    'body': 'NSURLCacheStorageNotAllowed'
  'NSURLCredentialPersistenceForSession (1)':
    'prefix': 'NSURLCredentialPersistenceForSession'
    'body': 'NSURLCredentialPersistenceForSession'
  'NSURLCredentialPersistenceNone (0)':
    'prefix': 'NSURLCredentialPersistenceNone'
    'body': 'NSURLCredentialPersistenceNone'
  'NSURLCredentialPersistencePermanent (2)':
    'prefix': 'NSURLCredentialPersistencePermanent'
    'body': 'NSURLCredentialPersistencePermanent'
  'NSURLCredentialPersistenceSynchronizable (3)':
    'prefix': 'NSURLCredentialPersistenceSynchronizable'
    'body': 'NSURLCredentialPersistenceSynchronizable'
  'NSURLErrorBadServerResponse (-1011)':
    'prefix': 'NSURLErrorBadServerResponse'
    'body': 'NSURLErrorBadServerResponse'
  'NSURLErrorBadURL (-1000)':
    'prefix': 'NSURLErrorBadURL'
    'body': 'NSURLErrorBadURL'
  'NSURLErrorCallIsActive (-1019)':
    'prefix': 'NSURLErrorCallIsActive'
    'body': 'NSURLErrorCallIsActive'
  'NSURLErrorCancelled (-999)':
    'prefix': 'NSURLErrorCancelled'
    'body': 'NSURLErrorCancelled'
  'NSURLErrorCancelledReasonBackgroundUpdatesDisabled (1)':
    'prefix': 'NSURLErrorCancelledReasonBackgroundUpdatesDisabled'
    'body': 'NSURLErrorCancelledReasonBackgroundUpdatesDisabled'
  'NSURLErrorCancelledReasonUserForceQuitApplication (0)':
    'prefix': 'NSURLErrorCancelledReasonUserForceQuitApplication'
    'body': 'NSURLErrorCancelledReasonUserForceQuitApplication'
  'NSURLErrorCannotCloseFile (-3002)':
    'prefix': 'NSURLErrorCannotCloseFile'
    'body': 'NSURLErrorCannotCloseFile'
  'NSURLErrorCannotConnectToHost (-1004)':
    'prefix': 'NSURLErrorCannotConnectToHost'
    'body': 'NSURLErrorCannotConnectToHost'
  'NSURLErrorCannotCreateFile (-3000)':
    'prefix': 'NSURLErrorCannotCreateFile'
    'body': 'NSURLErrorCannotCreateFile'
  'NSURLErrorCannotDecodeContentData (-1016)':
    'prefix': 'NSURLErrorCannotDecodeContentData'
    'body': 'NSURLErrorCannotDecodeContentData'
  'NSURLErrorCannotDecodeRawData (-1015)':
    'prefix': 'NSURLErrorCannotDecodeRawData'
    'body': 'NSURLErrorCannotDecodeRawData'
  'NSURLErrorCannotFindHost (-1003)':
    'prefix': 'NSURLErrorCannotFindHost'
    'body': 'NSURLErrorCannotFindHost'
  'NSURLErrorCannotLoadFromNetwork (-2000)':
    'prefix': 'NSURLErrorCannotLoadFromNetwork'
    'body': 'NSURLErrorCannotLoadFromNetwork'
  'NSURLErrorCannotMoveFile (-3005)':
    'prefix': 'NSURLErrorCannotMoveFile'
    'body': 'NSURLErrorCannotMoveFile'
  'NSURLErrorCannotOpenFile (-3001)':
    'prefix': 'NSURLErrorCannotOpenFile'
    'body': 'NSURLErrorCannotOpenFile'
  'NSURLErrorCannotParseResponse (-1017)':
    'prefix': 'NSURLErrorCannotParseResponse'
    'body': 'NSURLErrorCannotParseResponse'
  'NSURLErrorCannotRemoveFile (-3004)':
    'prefix': 'NSURLErrorCannotRemoveFile'
    'body': 'NSURLErrorCannotRemoveFile'
  'NSURLErrorCannotWriteToFile (-3003)':
    'prefix': 'NSURLErrorCannotWriteToFile'
    'body': 'NSURLErrorCannotWriteToFile'
  'NSURLErrorClientCertificateRejected (-1205)':
    'prefix': 'NSURLErrorClientCertificateRejected'
    'body': 'NSURLErrorClientCertificateRejected'
  'NSURLErrorClientCertificateRequired (-1206)':
    'prefix': 'NSURLErrorClientCertificateRequired'
    'body': 'NSURLErrorClientCertificateRequired'
  'NSURLErrorDNSLookupFailed (-1006)':
    'prefix': 'NSURLErrorDNSLookupFailed'
    'body': 'NSURLErrorDNSLookupFailed'
  'NSURLErrorDataLengthExceedsMaximum (-1103)':
    'prefix': 'NSURLErrorDataLengthExceedsMaximum'
    'body': 'NSURLErrorDataLengthExceedsMaximum'
  'NSURLErrorDataNotAllowed (-1020)':
    'prefix': 'NSURLErrorDataNotAllowed'
    'body': 'NSURLErrorDataNotAllowed'
  'NSURLErrorDownloadDecodingFailedMidStream (-3006)':
    'prefix': 'NSURLErrorDownloadDecodingFailedMidStream'
    'body': 'NSURLErrorDownloadDecodingFailedMidStream'
  'NSURLErrorDownloadDecodingFailedToComplete (-3007)':
    'prefix': 'NSURLErrorDownloadDecodingFailedToComplete'
    'body': 'NSURLErrorDownloadDecodingFailedToComplete'
  'NSURLErrorFileDoesNotExist (-1100)':
    'prefix': 'NSURLErrorFileDoesNotExist'
    'body': 'NSURLErrorFileDoesNotExist'
  'NSURLErrorFileIsDirectory (-1101)':
    'prefix': 'NSURLErrorFileIsDirectory'
    'body': 'NSURLErrorFileIsDirectory'
  'NSURLErrorHTTPTooManyRedirects (-1007)':
    'prefix': 'NSURLErrorHTTPTooManyRedirects'
    'body': 'NSURLErrorHTTPTooManyRedirects'
  'NSURLErrorInternationalRoamingOff (-1018)':
    'prefix': 'NSURLErrorInternationalRoamingOff'
    'body': 'NSURLErrorInternationalRoamingOff'
  'NSURLErrorNetworkConnectionLost (-1005)':
    'prefix': 'NSURLErrorNetworkConnectionLost'
    'body': 'NSURLErrorNetworkConnectionLost'
  'NSURLErrorNoPermissionsToReadFile (-1102)':
    'prefix': 'NSURLErrorNoPermissionsToReadFile'
    'body': 'NSURLErrorNoPermissionsToReadFile'
  'NSURLErrorNotConnectedToInternet (-1009)':
    'prefix': 'NSURLErrorNotConnectedToInternet'
    'body': 'NSURLErrorNotConnectedToInternet'
  'NSURLErrorRedirectToNonExistentLocation (-1010)':
    'prefix': 'NSURLErrorRedirectToNonExistentLocation'
    'body': 'NSURLErrorRedirectToNonExistentLocation'
  'NSURLErrorRequestBodyStreamExhausted (-1021)':
    'prefix': 'NSURLErrorRequestBodyStreamExhausted'
    'body': 'NSURLErrorRequestBodyStreamExhausted'
  'NSURLErrorResourceUnavailable (-1008)':
    'prefix': 'NSURLErrorResourceUnavailable'
    'body': 'NSURLErrorResourceUnavailable'
  'NSURLErrorSecureConnectionFailed (-1200)':
    'prefix': 'NSURLErrorSecureConnectionFailed'
    'body': 'NSURLErrorSecureConnectionFailed'
  'NSURLErrorServerCertificateHasBadDate (-1201)':
    'prefix': 'NSURLErrorServerCertificateHasBadDate'
    'body': 'NSURLErrorServerCertificateHasBadDate'
  'NSURLErrorServerCertificateHasUnknownRoot (-1203)':
    'prefix': 'NSURLErrorServerCertificateHasUnknownRoot'
    'body': 'NSURLErrorServerCertificateHasUnknownRoot'
  'NSURLErrorServerCertificateNotYetValid (-1204)':
    'prefix': 'NSURLErrorServerCertificateNotYetValid'
    'body': 'NSURLErrorServerCertificateNotYetValid'
  'NSURLErrorServerCertificateUntrusted (-1202)':
    'prefix': 'NSURLErrorServerCertificateUntrusted'
    'body': 'NSURLErrorServerCertificateUntrusted'
  'NSURLErrorTimedOut (-1001)':
    'prefix': 'NSURLErrorTimedOut'
    'body': 'NSURLErrorTimedOut'
  'NSURLErrorUnknown (-1)':
    'prefix': 'NSURLErrorUnknown'
    'body': 'NSURLErrorUnknown'
  'NSURLErrorUnsupportedURL (-1002)':
    'prefix': 'NSURLErrorUnsupportedURL'
    'body': 'NSURLErrorUnsupportedURL'
  'NSURLErrorUserAuthenticationRequired (-1013)':
    'prefix': 'NSURLErrorUserAuthenticationRequired'
    'body': 'NSURLErrorUserAuthenticationRequired'
  'NSURLErrorUserCancelledAuthentication (-1012)':
    'prefix': 'NSURLErrorUserCancelledAuthentication'
    'body': 'NSURLErrorUserCancelledAuthentication'
  'NSURLErrorZeroByteResource (-1014)':
    'prefix': 'NSURLErrorZeroByteResource'
    'body': 'NSURLErrorZeroByteResource'
  'NSURLNetworkServiceTypeBackground (3)':
    'prefix': 'NSURLNetworkServiceTypeBackground'
    'body': 'NSURLNetworkServiceTypeBackground'
  'NSURLNetworkServiceTypeDefault (0)':
    'prefix': 'NSURLNetworkServiceTypeDefault'
    'body': 'NSURLNetworkServiceTypeDefault'
  'NSURLNetworkServiceTypeVideo (2)':
    'prefix': 'NSURLNetworkServiceTypeVideo'
    'body': 'NSURLNetworkServiceTypeVideo'
  'NSURLNetworkServiceTypeVoIP (1)':
    'prefix': 'NSURLNetworkServiceTypeVoIP'
    'body': 'NSURLNetworkServiceTypeVoIP'
  'NSURLNetworkServiceTypeVoice (4)':
    'prefix': 'NSURLNetworkServiceTypeVoice'
    'body': 'NSURLNetworkServiceTypeVoice'
  'NSURLRequestReloadIgnoringCacheData (1)':
    'prefix': 'NSURLRequestReloadIgnoringCacheData'
    'body': 'NSURLRequestReloadIgnoringCacheData'
  'NSURLRequestReloadIgnoringLocalAndRemoteCacheData (4)':
    'prefix': 'NSURLRequestReloadIgnoringLocalAndRemoteCacheData'
    'body': 'NSURLRequestReloadIgnoringLocalAndRemoteCacheData'
  'NSURLRequestReloadIgnoringLocalCacheData (1)':
    'prefix': 'NSURLRequestReloadIgnoringLocalCacheData'
    'body': 'NSURLRequestReloadIgnoringLocalCacheData'
  'NSURLRequestReloadRevalidatingCacheData (5)':
    'prefix': 'NSURLRequestReloadRevalidatingCacheData'
    'body': 'NSURLRequestReloadRevalidatingCacheData'
  'NSURLRequestReturnCacheDataDontLoad (3)':
    'prefix': 'NSURLRequestReturnCacheDataDontLoad'
    'body': 'NSURLRequestReturnCacheDataDontLoad'
  'NSURLRequestReturnCacheDataElseLoad (2)':
    'prefix': 'NSURLRequestReturnCacheDataElseLoad'
    'body': 'NSURLRequestReturnCacheDataElseLoad'
  'NSURLRequestUseProtocolCachePolicy (0)':
    'prefix': 'NSURLRequestUseProtocolCachePolicy'
    'body': 'NSURLRequestUseProtocolCachePolicy'
  'NSURLResponseUnknownLength (-1)':
    'prefix': 'NSURLResponseUnknownLength'
    'body': 'NSURLResponseUnknownLength'
  'NSURLSessionAuthChallengeCancelAuthenticationChallenge (2)':
    'prefix': 'NSURLSessionAuthChallengeCancelAuthenticationChallenge'
    'body': 'NSURLSessionAuthChallengeCancelAuthenticationChallenge'
  'NSURLSessionAuthChallengePerformDefaultHandling (1)':
    'prefix': 'NSURLSessionAuthChallengePerformDefaultHandling'
    'body': 'NSURLSessionAuthChallengePerformDefaultHandling'
  'NSURLSessionAuthChallengeRejectProtectionSpace (3)':
    'prefix': 'NSURLSessionAuthChallengeRejectProtectionSpace'
    'body': 'NSURLSessionAuthChallengeRejectProtectionSpace'
  'NSURLSessionAuthChallengeUseCredential (0)':
    'prefix': 'NSURLSessionAuthChallengeUseCredential'
    'body': 'NSURLSessionAuthChallengeUseCredential'
  'NSURLSessionResponseAllow (1)':
    'prefix': 'NSURLSessionResponseAllow'
    'body': 'NSURLSessionResponseAllow'
  'NSURLSessionResponseBecomeDownload (2)':
    'prefix': 'NSURLSessionResponseBecomeDownload'
    'body': 'NSURLSessionResponseBecomeDownload'
  'NSURLSessionResponseCancel (0)':
    'prefix': 'NSURLSessionResponseCancel'
    'body': 'NSURLSessionResponseCancel'
  'NSURLSessionTaskStateCanceling (2)':
    'prefix': 'NSURLSessionTaskStateCanceling'
    'body': 'NSURLSessionTaskStateCanceling'
  'NSURLSessionTaskStateCompleted (3)':
    'prefix': 'NSURLSessionTaskStateCompleted'
    'body': 'NSURLSessionTaskStateCompleted'
  'NSURLSessionTaskStateRunning (0)':
    'prefix': 'NSURLSessionTaskStateRunning'
    'body': 'NSURLSessionTaskStateRunning'
  'NSURLSessionTaskStateSuspended (1)':
    'prefix': 'NSURLSessionTaskStateSuspended'
    'body': 'NSURLSessionTaskStateSuspended'
  'NSUTF16BigEndianStringEncoding (2415919360)':
    'prefix': 'NSUTF16BigEndianStringEncoding'
    'body': 'NSUTF16BigEndianStringEncoding'
  'NSUTF16LittleEndianStringEncoding (2483028224)':
    'prefix': 'NSUTF16LittleEndianStringEncoding'
    'body': 'NSUTF16LittleEndianStringEncoding'
  'NSUTF16StringEncoding (10)':
    'prefix': 'NSUTF16StringEncoding'
    'body': 'NSUTF16StringEncoding'
  'NSUTF32BigEndianStringEncoding (2550137088)':
    'prefix': 'NSUTF32BigEndianStringEncoding'
    'body': 'NSUTF32BigEndianStringEncoding'
  'NSUTF32LittleEndianStringEncoding (2617245952)':
    'prefix': 'NSUTF32LittleEndianStringEncoding'
    'body': 'NSUTF32LittleEndianStringEncoding'
  'NSUTF32StringEncoding (2348810496)':
    'prefix': 'NSUTF32StringEncoding'
    'body': 'NSUTF32StringEncoding'
  'NSUTF8StringEncoding (4)':
    'prefix': 'NSUTF8StringEncoding'
    'body': 'NSUTF8StringEncoding'
  'NSUbiquitousFileErrorMaximum (4607)':
    'prefix': 'NSUbiquitousFileErrorMaximum'
    'body': 'NSUbiquitousFileErrorMaximum'
  'NSUbiquitousFileErrorMinimum (4352)':
    'prefix': 'NSUbiquitousFileErrorMinimum'
    'body': 'NSUbiquitousFileErrorMinimum'
  'NSUbiquitousFileNotUploadedDueToQuotaError (4354)':
    'prefix': 'NSUbiquitousFileNotUploadedDueToQuotaError'
    'body': 'NSUbiquitousFileNotUploadedDueToQuotaError'
  'NSUbiquitousFileUbiquityServerNotAvailable (4355)':
    'prefix': 'NSUbiquitousFileUbiquityServerNotAvailable'
    'body': 'NSUbiquitousFileUbiquityServerNotAvailable'
  'NSUbiquitousFileUnavailableError (4353)':
    'prefix': 'NSUbiquitousFileUnavailableError'
    'body': 'NSUbiquitousFileUnavailableError'
  'NSUbiquitousKeyValueStoreAccountChange (3)':
    'prefix': 'NSUbiquitousKeyValueStoreAccountChange'
    'body': 'NSUbiquitousKeyValueStoreAccountChange'
  'NSUbiquitousKeyValueStoreInitialSyncChange (1)':
    'prefix': 'NSUbiquitousKeyValueStoreInitialSyncChange'
    'body': 'NSUbiquitousKeyValueStoreInitialSyncChange'
  'NSUbiquitousKeyValueStoreQuotaViolationChange (2)':
    'prefix': 'NSUbiquitousKeyValueStoreQuotaViolationChange'
    'body': 'NSUbiquitousKeyValueStoreQuotaViolationChange'
  'NSUbiquitousKeyValueStoreServerChange (0)':
    'prefix': 'NSUbiquitousKeyValueStoreServerChange'
    'body': 'NSUbiquitousKeyValueStoreServerChange'
  'NSUncachedRead (2)':
    'prefix': 'NSUncachedRead'
    'body': 'NSUncachedRead'
  'NSUndefinedDateComponent (2147483647)':
    'prefix': 'NSUndefinedDateComponent'
    'body': 'NSUndefinedDateComponent'
  'NSUndoCloseGroupingRunLoopOrdering (350000)':
    'prefix': 'NSUndoCloseGroupingRunLoopOrdering'
    'body': 'NSUndoCloseGroupingRunLoopOrdering'
  'NSUnicodeStringEncoding (10)':
    'prefix': 'NSUnicodeStringEncoding'
    'body': 'NSUnicodeStringEncoding'
  'NSUnionSetExpressionType (5)':
    'prefix': 'NSUnionSetExpressionType'
    'body': 'NSUnionSetExpressionType'
  'NSUserCancelledError (3072)':
    'prefix': 'NSUserCancelledError'
    'body': 'NSUserCancelledError'
  'NSUserDirectory (7)':
    'prefix': 'NSUserDirectory'
    'body': 'NSUserDirectory'
  'NSUserDomainMask (1)':
    'prefix': 'NSUserDomainMask'
    'body': 'NSUserDomainMask'
  'NSValidationErrorMaximum (2047)':
    'prefix': 'NSValidationErrorMaximum'
    'body': 'NSValidationErrorMaximum'
  'NSValidationErrorMinimum (1024)':
    'prefix': 'NSValidationErrorMinimum'
    'body': 'NSValidationErrorMinimum'
  'NSVariableExpressionType (2)':
    'prefix': 'NSVariableExpressionType'
    'body': 'NSVariableExpressionType'
  'NSVolumeEnumerationProduceFileReferenceURLs (4)':
    'prefix': 'NSVolumeEnumerationProduceFileReferenceURLs'
    'body': 'NSVolumeEnumerationProduceFileReferenceURLs'
  'NSVolumeEnumerationSkipHiddenVolumes (2)':
    'prefix': 'NSVolumeEnumerationSkipHiddenVolumes'
    'body': 'NSVolumeEnumerationSkipHiddenVolumes'
  'NSWeekCalendarUnit (256)':
    'prefix': 'NSWeekCalendarUnit'
    'body': 'NSWeekCalendarUnit'
  'NSWeekOfMonthCalendarUnit (4096)':
    'prefix': 'NSWeekOfMonthCalendarUnit'
    'body': 'NSWeekOfMonthCalendarUnit'
  'NSWeekOfYearCalendarUnit (8192)':
    'prefix': 'NSWeekOfYearCalendarUnit'
    'body': 'NSWeekOfYearCalendarUnit'
  'NSWeekdayCalendarUnit (512)':
    'prefix': 'NSWeekdayCalendarUnit'
    'body': 'NSWeekdayCalendarUnit'
  'NSWeekdayOrdinalCalendarUnit (1024)':
    'prefix': 'NSWeekdayOrdinalCalendarUnit'
    'body': 'NSWeekdayOrdinalCalendarUnit'
  'NSWidthInsensitiveSearch (256)':
    'prefix': 'NSWidthInsensitiveSearch'
    'body': 'NSWidthInsensitiveSearch'
  'NSWindows95OperatingSystem (2)':
    'prefix': 'NSWindows95OperatingSystem'
    'body': 'NSWindows95OperatingSystem'
  'NSWindowsCP1250StringEncoding (15)':
    'prefix': 'NSWindowsCP1250StringEncoding'
    'body': 'NSWindowsCP1250StringEncoding'
  'NSWindowsCP1251StringEncoding (11)':
    'prefix': 'NSWindowsCP1251StringEncoding'
    'body': 'NSWindowsCP1251StringEncoding'
  'NSWindowsCP1252StringEncoding (12)':
    'prefix': 'NSWindowsCP1252StringEncoding'
    'body': 'NSWindowsCP1252StringEncoding'
  'NSWindowsCP1253StringEncoding (13)':
    'prefix': 'NSWindowsCP1253StringEncoding'
    'body': 'NSWindowsCP1253StringEncoding'
  'NSWindowsCP1254StringEncoding (14)':
    'prefix': 'NSWindowsCP1254StringEncoding'
    'body': 'NSWindowsCP1254StringEncoding'
  'NSWindowsNTOperatingSystem (1)':
    'prefix': 'NSWindowsNTOperatingSystem'
    'body': 'NSWindowsNTOperatingSystem'
  'NSWrapCalendarComponents (1)':
    'prefix': 'NSWrapCalendarComponents'
    'body': 'NSWrapCalendarComponents'
  'NSXMLParserAttributeHasNoValueError (41)':
    'prefix': 'NSXMLParserAttributeHasNoValueError'
    'body': 'NSXMLParserAttributeHasNoValueError'
  'NSXMLParserAttributeListNotFinishedError (51)':
    'prefix': 'NSXMLParserAttributeListNotFinishedError'
    'body': 'NSXMLParserAttributeListNotFinishedError'
  'NSXMLParserAttributeListNotStartedError (50)':
    'prefix': 'NSXMLParserAttributeListNotStartedError'
    'body': 'NSXMLParserAttributeListNotStartedError'
  'NSXMLParserAttributeNotFinishedError (40)':
    'prefix': 'NSXMLParserAttributeNotFinishedError'
    'body': 'NSXMLParserAttributeNotFinishedError'
  'NSXMLParserAttributeNotStartedError (39)':
    'prefix': 'NSXMLParserAttributeNotStartedError'
    'body': 'NSXMLParserAttributeNotStartedError'
  'NSXMLParserAttributeRedefinedError (42)':
    'prefix': 'NSXMLParserAttributeRedefinedError'
    'body': 'NSXMLParserAttributeRedefinedError'
  'NSXMLParserCDATANotFinishedError (63)':
    'prefix': 'NSXMLParserCDATANotFinishedError'
    'body': 'NSXMLParserCDATANotFinishedError'
  'NSXMLParserCharacterRefAtEOFError (10)':
    'prefix': 'NSXMLParserCharacterRefAtEOFError'
    'body': 'NSXMLParserCharacterRefAtEOFError'
  'NSXMLParserCharacterRefInDTDError (13)':
    'prefix': 'NSXMLParserCharacterRefInDTDError'
    'body': 'NSXMLParserCharacterRefInDTDError'
  'NSXMLParserCharacterRefInEpilogError (12)':
    'prefix': 'NSXMLParserCharacterRefInEpilogError'
    'body': 'NSXMLParserCharacterRefInEpilogError'
  'NSXMLParserCharacterRefInPrologError (11)':
    'prefix': 'NSXMLParserCharacterRefInPrologError'
    'body': 'NSXMLParserCharacterRefInPrologError'
  'NSXMLParserCommentContainsDoubleHyphenError (80)':
    'prefix': 'NSXMLParserCommentContainsDoubleHyphenError'
    'body': 'NSXMLParserCommentContainsDoubleHyphenError'
  'NSXMLParserCommentNotFinishedError (45)':
    'prefix': 'NSXMLParserCommentNotFinishedError'
    'body': 'NSXMLParserCommentNotFinishedError'
  'NSXMLParserConditionalSectionNotFinishedError (59)':
    'prefix': 'NSXMLParserConditionalSectionNotFinishedError'
    'body': 'NSXMLParserConditionalSectionNotFinishedError'
  'NSXMLParserConditionalSectionNotStartedError (58)':
    'prefix': 'NSXMLParserConditionalSectionNotStartedError'
    'body': 'NSXMLParserConditionalSectionNotStartedError'
  'NSXMLParserDOCTYPEDeclNotFinishedError (61)':
    'prefix': 'NSXMLParserDOCTYPEDeclNotFinishedError'
    'body': 'NSXMLParserDOCTYPEDeclNotFinishedError'
  'NSXMLParserDelegateAbortedParseError (512)':
    'prefix': 'NSXMLParserDelegateAbortedParseError'
    'body': 'NSXMLParserDelegateAbortedParseError'
  'NSXMLParserDocumentStartError (3)':
    'prefix': 'NSXMLParserDocumentStartError'
    'body': 'NSXMLParserDocumentStartError'
  'NSXMLParserElementContentDeclNotFinishedError (55)':
    'prefix': 'NSXMLParserElementContentDeclNotFinishedError'
    'body': 'NSXMLParserElementContentDeclNotFinishedError'
  'NSXMLParserElementContentDeclNotStartedError (54)':
    'prefix': 'NSXMLParserElementContentDeclNotStartedError'
    'body': 'NSXMLParserElementContentDeclNotStartedError'
  'NSXMLParserEmptyDocumentError (4)':
    'prefix': 'NSXMLParserEmptyDocumentError'
    'body': 'NSXMLParserEmptyDocumentError'
  'NSXMLParserEncodingNotSupportedError (32)':
    'prefix': 'NSXMLParserEncodingNotSupportedError'
    'body': 'NSXMLParserEncodingNotSupportedError'
  'NSXMLParserEntityBoundaryError (90)':
    'prefix': 'NSXMLParserEntityBoundaryError'
    'body': 'NSXMLParserEntityBoundaryError'
  'NSXMLParserEntityIsExternalError (29)':
    'prefix': 'NSXMLParserEntityIsExternalError'
    'body': 'NSXMLParserEntityIsExternalError'
  'NSXMLParserEntityIsParameterError (30)':
    'prefix': 'NSXMLParserEntityIsParameterError'
    'body': 'NSXMLParserEntityIsParameterError'
  'NSXMLParserEntityNotFinishedError (37)':
    'prefix': 'NSXMLParserEntityNotFinishedError'
    'body': 'NSXMLParserEntityNotFinishedError'
  'NSXMLParserEntityNotStartedError (36)':
    'prefix': 'NSXMLParserEntityNotStartedError'
    'body': 'NSXMLParserEntityNotStartedError'
  'NSXMLParserEntityRefAtEOFError (14)':
    'prefix': 'NSXMLParserEntityRefAtEOFError'
    'body': 'NSXMLParserEntityRefAtEOFError'
  'NSXMLParserEntityRefInDTDError (17)':
    'prefix': 'NSXMLParserEntityRefInDTDError'
    'body': 'NSXMLParserEntityRefInDTDError'
  'NSXMLParserEntityRefInEpilogError (16)':
    'prefix': 'NSXMLParserEntityRefInEpilogError'
    'body': 'NSXMLParserEntityRefInEpilogError'
  'NSXMLParserEntityRefInPrologError (15)':
    'prefix': 'NSXMLParserEntityRefInPrologError'
    'body': 'NSXMLParserEntityRefInPrologError'
  'NSXMLParserEntityRefLoopError (89)':
    'prefix': 'NSXMLParserEntityRefLoopError'
    'body': 'NSXMLParserEntityRefLoopError'
  'NSXMLParserEntityReferenceMissingSemiError (23)':
    'prefix': 'NSXMLParserEntityReferenceMissingSemiError'
    'body': 'NSXMLParserEntityReferenceMissingSemiError'
  'NSXMLParserEntityReferenceWithoutNameError (22)':
    'prefix': 'NSXMLParserEntityReferenceWithoutNameError'
    'body': 'NSXMLParserEntityReferenceWithoutNameError'
  'NSXMLParserEntityValueRequiredError (84)':
    'prefix': 'NSXMLParserEntityValueRequiredError'
    'body': 'NSXMLParserEntityValueRequiredError'
  'NSXMLParserEqualExpectedError (75)':
    'prefix': 'NSXMLParserEqualExpectedError'
    'body': 'NSXMLParserEqualExpectedError'
  'NSXMLParserExternalStandaloneEntityError (82)':
    'prefix': 'NSXMLParserExternalStandaloneEntityError'
    'body': 'NSXMLParserExternalStandaloneEntityError'
  'NSXMLParserExternalSubsetNotFinishedError (60)':
    'prefix': 'NSXMLParserExternalSubsetNotFinishedError'
    'body': 'NSXMLParserExternalSubsetNotFinishedError'
  'NSXMLParserExtraContentError (86)':
    'prefix': 'NSXMLParserExtraContentError'
    'body': 'NSXMLParserExtraContentError'
  'NSXMLParserGTRequiredError (73)':
    'prefix': 'NSXMLParserGTRequiredError'
    'body': 'NSXMLParserGTRequiredError'
  'NSXMLParserInternalError (1)':
    'prefix': 'NSXMLParserInternalError'
    'body': 'NSXMLParserInternalError'
  'NSXMLParserInvalidCharacterError (9)':
    'prefix': 'NSXMLParserInvalidCharacterError'
    'body': 'NSXMLParserInvalidCharacterError'
  'NSXMLParserInvalidCharacterInEntityError (87)':
    'prefix': 'NSXMLParserInvalidCharacterInEntityError'
    'body': 'NSXMLParserInvalidCharacterInEntityError'
  'NSXMLParserInvalidCharacterRefError (8)':
    'prefix': 'NSXMLParserInvalidCharacterRefError'
    'body': 'NSXMLParserInvalidCharacterRefError'
  'NSXMLParserInvalidConditionalSectionError (83)':
    'prefix': 'NSXMLParserInvalidConditionalSectionError'
    'body': 'NSXMLParserInvalidConditionalSectionError'
  'NSXMLParserInvalidDecimalCharacterRefError (7)':
    'prefix': 'NSXMLParserInvalidDecimalCharacterRefError'
    'body': 'NSXMLParserInvalidDecimalCharacterRefError'
  'NSXMLParserInvalidEncodingError (81)':
    'prefix': 'NSXMLParserInvalidEncodingError'
    'body': 'NSXMLParserInvalidEncodingError'
  'NSXMLParserInvalidEncodingNameError (79)':
    'prefix': 'NSXMLParserInvalidEncodingNameError'
    'body': 'NSXMLParserInvalidEncodingNameError'
  'NSXMLParserInvalidHexCharacterRefError (6)':
    'prefix': 'NSXMLParserInvalidHexCharacterRefError'
    'body': 'NSXMLParserInvalidHexCharacterRefError'
  'NSXMLParserInvalidURIError (91)':
    'prefix': 'NSXMLParserInvalidURIError'
    'body': 'NSXMLParserInvalidURIError'
  'NSXMLParserLTRequiredError (72)':
    'prefix': 'NSXMLParserLTRequiredError'
    'body': 'NSXMLParserLTRequiredError'
  'NSXMLParserLTSlashRequiredError (74)':
    'prefix': 'NSXMLParserLTSlashRequiredError'
    'body': 'NSXMLParserLTSlashRequiredError'
  'NSXMLParserLessThanSymbolInAttributeError (38)':
    'prefix': 'NSXMLParserLessThanSymbolInAttributeError'
    'body': 'NSXMLParserLessThanSymbolInAttributeError'
  'NSXMLParserLiteralNotFinishedError (44)':
    'prefix': 'NSXMLParserLiteralNotFinishedError'
    'body': 'NSXMLParserLiteralNotFinishedError'
  'NSXMLParserLiteralNotStartedError (43)':
    'prefix': 'NSXMLParserLiteralNotStartedError'
    'body': 'NSXMLParserLiteralNotStartedError'
  'NSXMLParserMisplacedCDATAEndStringError (62)':
    'prefix': 'NSXMLParserMisplacedCDATAEndStringError'
    'body': 'NSXMLParserMisplacedCDATAEndStringError'
  'NSXMLParserMisplacedXMLDeclarationError (64)':
    'prefix': 'NSXMLParserMisplacedXMLDeclarationError'
    'body': 'NSXMLParserMisplacedXMLDeclarationError'
  'NSXMLParserMixedContentDeclNotFinishedError (53)':
    'prefix': 'NSXMLParserMixedContentDeclNotFinishedError'
    'body': 'NSXMLParserMixedContentDeclNotFinishedError'
  'NSXMLParserMixedContentDeclNotStartedError (52)':
    'prefix': 'NSXMLParserMixedContentDeclNotStartedError'
    'body': 'NSXMLParserMixedContentDeclNotStartedError'
  'NSXMLParserNAMERequiredError (68)':
    'prefix': 'NSXMLParserNAMERequiredError'
    'body': 'NSXMLParserNAMERequiredError'
  'NSXMLParserNMTOKENRequiredError (67)':
    'prefix': 'NSXMLParserNMTOKENRequiredError'
    'body': 'NSXMLParserNMTOKENRequiredError'
  'NSXMLParserNamespaceDeclarationError (35)':
    'prefix': 'NSXMLParserNamespaceDeclarationError'
    'body': 'NSXMLParserNamespaceDeclarationError'
  'NSXMLParserNoDTDError (94)':
    'prefix': 'NSXMLParserNoDTDError'
    'body': 'NSXMLParserNoDTDError'
  'NSXMLParserNotWellBalancedError (85)':
    'prefix': 'NSXMLParserNotWellBalancedError'
    'body': 'NSXMLParserNotWellBalancedError'
  'NSXMLParserNotationNotFinishedError (49)':
    'prefix': 'NSXMLParserNotationNotFinishedError'
    'body': 'NSXMLParserNotationNotFinishedError'
  'NSXMLParserNotationNotStartedError (48)':
    'prefix': 'NSXMLParserNotationNotStartedError'
    'body': 'NSXMLParserNotationNotStartedError'
  'NSXMLParserOutOfMemoryError (2)':
    'prefix': 'NSXMLParserOutOfMemoryError'
    'body': 'NSXMLParserOutOfMemoryError'
  'NSXMLParserPCDATARequiredError (69)':
    'prefix': 'NSXMLParserPCDATARequiredError'
    'body': 'NSXMLParserPCDATARequiredError'
  'NSXMLParserParsedEntityRefAtEOFError (18)':
    'prefix': 'NSXMLParserParsedEntityRefAtEOFError'
    'body': 'NSXMLParserParsedEntityRefAtEOFError'
  'NSXMLParserParsedEntityRefInEpilogError (20)':
    'prefix': 'NSXMLParserParsedEntityRefInEpilogError'
    'body': 'NSXMLParserParsedEntityRefInEpilogError'
  'NSXMLParserParsedEntityRefInInternalError (88)':
    'prefix': 'NSXMLParserParsedEntityRefInInternalError'
    'body': 'NSXMLParserParsedEntityRefInInternalError'
  'NSXMLParserParsedEntityRefInInternalSubsetError (21)':
    'prefix': 'NSXMLParserParsedEntityRefInInternalSubsetError'
    'body': 'NSXMLParserParsedEntityRefInInternalSubsetError'
  'NSXMLParserParsedEntityRefInPrologError (19)':
    'prefix': 'NSXMLParserParsedEntityRefInPrologError'
    'body': 'NSXMLParserParsedEntityRefInPrologError'
  'NSXMLParserParsedEntityRefMissingSemiError (25)':
    'prefix': 'NSXMLParserParsedEntityRefMissingSemiError'
    'body': 'NSXMLParserParsedEntityRefMissingSemiError'
  'NSXMLParserParsedEntityRefNoNameError (24)':
    'prefix': 'NSXMLParserParsedEntityRefNoNameError'
    'body': 'NSXMLParserParsedEntityRefNoNameError'
  'NSXMLParserPrematureDocumentEndError (5)':
    'prefix': 'NSXMLParserPrematureDocumentEndError'
    'body': 'NSXMLParserPrematureDocumentEndError'
  'NSXMLParserProcessingInstructionNotFinishedError (47)':
    'prefix': 'NSXMLParserProcessingInstructionNotFinishedError'
    'body': 'NSXMLParserProcessingInstructionNotFinishedError'
  'NSXMLParserProcessingInstructionNotStartedError (46)':
    'prefix': 'NSXMLParserProcessingInstructionNotStartedError'
    'body': 'NSXMLParserProcessingInstructionNotStartedError'
  'NSXMLParserPublicIdentifierRequiredError (71)':
    'prefix': 'NSXMLParserPublicIdentifierRequiredError'
    'body': 'NSXMLParserPublicIdentifierRequiredError'
  'NSXMLParserSeparatorRequiredError (66)':
    'prefix': 'NSXMLParserSeparatorRequiredError'
    'body': 'NSXMLParserSeparatorRequiredError'
  'NSXMLParserSpaceRequiredError (65)':
    'prefix': 'NSXMLParserSpaceRequiredError'
    'body': 'NSXMLParserSpaceRequiredError'
  'NSXMLParserStandaloneValueError (78)':
    'prefix': 'NSXMLParserStandaloneValueError'
    'body': 'NSXMLParserStandaloneValueError'
  'NSXMLParserStringNotClosedError (34)':
    'prefix': 'NSXMLParserStringNotClosedError'
    'body': 'NSXMLParserStringNotClosedError'
  'NSXMLParserStringNotStartedError (33)':
    'prefix': 'NSXMLParserStringNotStartedError'
    'body': 'NSXMLParserStringNotStartedError'
  'NSXMLParserTagNameMismatchError (76)':
    'prefix': 'NSXMLParserTagNameMismatchError'
    'body': 'NSXMLParserTagNameMismatchError'
  'NSXMLParserURIFragmentError (92)':
    'prefix': 'NSXMLParserURIFragmentError'
    'body': 'NSXMLParserURIFragmentError'
  'NSXMLParserURIRequiredError (70)':
    'prefix': 'NSXMLParserURIRequiredError'
    'body': 'NSXMLParserURIRequiredError'
  'NSXMLParserUndeclaredEntityError (26)':
    'prefix': 'NSXMLParserUndeclaredEntityError'
    'body': 'NSXMLParserUndeclaredEntityError'
  'NSXMLParserUnfinishedTagError (77)':
    'prefix': 'NSXMLParserUnfinishedTagError'
    'body': 'NSXMLParserUnfinishedTagError'
  'NSXMLParserUnknownEncodingError (31)':
    'prefix': 'NSXMLParserUnknownEncodingError'
    'body': 'NSXMLParserUnknownEncodingError'
  'NSXMLParserUnparsedEntityError (28)':
    'prefix': 'NSXMLParserUnparsedEntityError'
    'body': 'NSXMLParserUnparsedEntityError'
  'NSXMLParserXMLDeclNotFinishedError (57)':
    'prefix': 'NSXMLParserXMLDeclNotFinishedError'
    'body': 'NSXMLParserXMLDeclNotFinishedError'
  'NSXMLParserXMLDeclNotStartedError (56)':
    'prefix': 'NSXMLParserXMLDeclNotStartedError'
    'body': 'NSXMLParserXMLDeclNotStartedError'
  'NSXPCConnectionErrorMaximum (4224)':
    'prefix': 'NSXPCConnectionErrorMaximum'
    'body': 'NSXPCConnectionErrorMaximum'
  'NSXPCConnectionErrorMinimum (4096)':
    'prefix': 'NSXPCConnectionErrorMinimum'
    'body': 'NSXPCConnectionErrorMinimum'
  'NSXPCConnectionInterrupted (4097)':
    'prefix': 'NSXPCConnectionInterrupted'
    'body': 'NSXPCConnectionInterrupted'
  'NSXPCConnectionInvalid (4099)':
    'prefix': 'NSXPCConnectionInvalid'
    'body': 'NSXPCConnectionInvalid'
  'NSXPCConnectionReplyInvalid (4101)':
    'prefix': 'NSXPCConnectionReplyInvalid'
    'body': 'NSXPCConnectionReplyInvalid'
  'NSYearCalendarUnit (4)':
    'prefix': 'NSYearCalendarUnit'
    'body': 'NSYearCalendarUnit'
  'NSYearForWeekOfYearCalendarUnit (16384)':
    'prefix': 'NSYearForWeekOfYearCalendarUnit'
    'body': 'NSYearForWeekOfYearCalendarUnit'
  'NS_BLOCKS_AVAILABLE (1)':
    'prefix': 'NS_BLOCKS_AVAILABLE'
    'body': 'NS_BLOCKS_AVAILABLE'
  'NS_BigEndian (2)':
    'prefix': 'NS_BigEndian'
    'body': 'NS_BigEndian'
  'NS_LittleEndian (1)':
    'prefix': 'NS_LittleEndian'
    'body': 'NS_LittleEndian'
  'NS_UNICHAR_IS_EIGHT_BIT (0)':
    'prefix': 'NS_UNICHAR_IS_EIGHT_BIT'
    'body': 'NS_UNICHAR_IS_EIGHT_BIT'
  'NS_UnknownByteOrder (0)':
    'prefix': 'NS_UnknownByteOrder'
    'body': 'NS_UnknownByteOrder'
  'CFBridgingRelease':
    'prefix': 'CFBridgingRelease'
    'body': 'CFBridgingRelease(${1:CFTypeRef X})'
  'CFBridgingRetain':
    'prefix': 'CFBridgingRetain'
    'body': 'CFBridgingRetain(${1:id X})'
  'NSAllocateMemoryPages':
    'prefix': 'NSAllocateMemoryPages'
    'body': 'NSAllocateMemoryPages(${1:NSUInteger bytes})'
  'NSAllocateObject':
    'prefix': 'NSAllocateObject'
    'body': 'NSAllocateObject(${1:Class aClass}, ${2:NSUInteger extraBytes}, ${3:NSZone* zone})'
  'NSClassFromString':
    'prefix': 'NSClassFromString'
    'body': 'NSClassFromString(${1:NSString* aClassName})'
  'NSConvertHostDoubleToSwapped':
    'prefix': 'NSConvertHostDoubleToSwapped'
    'body': 'NSConvertHostDoubleToSwapped(${1:double x})'
  'NSConvertHostFloatToSwapped':
    'prefix': 'NSConvertHostFloatToSwapped'
    'body': 'NSConvertHostFloatToSwapped(${1:float x})'
  'NSConvertSwappedDoubleToHost':
    'prefix': 'NSConvertSwappedDoubleToHost'
    'body': 'NSConvertSwappedDoubleToHost(${1:NSSwappedDouble x})'
  'NSConvertSwappedFloatToHost':
    'prefix': 'NSConvertSwappedFloatToHost'
    'body': 'NSConvertSwappedFloatToHost(${1:NSSwappedFloat x})'
  'NSCopyMemoryPages':
    'prefix': 'NSCopyMemoryPages'
    'body': 'NSCopyMemoryPages(${1:void* source}, ${2:void* dest}, ${3:NSUInteger bytes})'
  'NSCopyObject':
    'prefix': 'NSCopyObject'
    'body': 'NSCopyObject(${1:id object}, ${2:NSUInteger extraBytes}, ${3:NSZone* zone})'
  'NSCreateZone':
    'prefix': 'NSCreateZone'
    'body': 'NSCreateZone(${1:NSUInteger startSize}, ${2:NSUInteger granularity}, ${3:BOOL canFree})'
  'NSDeallocateMemoryPages':
    'prefix': 'NSDeallocateMemoryPages'
    'body': 'NSDeallocateMemoryPages(${1:void* ptr}, ${2:NSUInteger bytes})'
  'NSDeallocateObject':
    'prefix': 'NSDeallocateObject'
    'body': 'NSDeallocateObject(${1:id object})'
  'NSDecimalAdd':
    'prefix': 'NSDecimalAdd'
    'body': 'NSDecimalAdd(${1:NSDecimal* result}, ${2:NSDecimal* leftOperand}, ${3:NSDecimal* rightOperand}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalCompact':
    'prefix': 'NSDecimalCompact'
    'body': 'NSDecimalCompact(${1:NSDecimal* number})'
  'NSDecimalCompare':
    'prefix': 'NSDecimalCompare'
    'body': 'NSDecimalCompare(${1:NSDecimal* leftOperand}, ${2:NSDecimal* rightOperand})'
  'NSDecimalCopy':
    'prefix': 'NSDecimalCopy'
    'body': 'NSDecimalCopy(${1:NSDecimal* destination}, ${2:NSDecimal* source})'
  'NSDecimalDivide':
    'prefix': 'NSDecimalDivide'
    'body': 'NSDecimalDivide(${1:NSDecimal* result}, ${2:NSDecimal* leftOperand}, ${3:NSDecimal* rightOperand}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalIsNotANumber':
    'prefix': 'NSDecimalIsNotANumber'
    'body': 'NSDecimalIsNotANumber(${1:NSDecimal* dcm})'
  'NSDecimalMultiply':
    'prefix': 'NSDecimalMultiply'
    'body': 'NSDecimalMultiply(${1:NSDecimal* result}, ${2:NSDecimal* leftOperand}, ${3:NSDecimal* rightOperand}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalMultiplyByPowerOf10':
    'prefix': 'NSDecimalMultiplyByPowerOf10'
    'body': 'NSDecimalMultiplyByPowerOf10(${1:NSDecimal* result}, ${2:NSDecimal* number}, ${3:short power}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalNormalize':
    'prefix': 'NSDecimalNormalize'
    'body': 'NSDecimalNormalize(${1:NSDecimal* number1}, ${2:NSDecimal* number2}, ${3:NSRoundingMode roundingMode})'
  'NSDecimalPower':
    'prefix': 'NSDecimalPower'
    'body': 'NSDecimalPower(${1:NSDecimal* result}, ${2:NSDecimal* number}, ${3:NSUInteger power}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalRound':
    'prefix': 'NSDecimalRound'
    'body': 'NSDecimalRound(${1:NSDecimal* result}, ${2:NSDecimal* number}, ${3:NSInteger scale}, ${4:NSRoundingMode roundingMode})'
  'NSDecimalString':
    'prefix': 'NSDecimalString'
    'body': 'NSDecimalString(${1:NSDecimal* dcm}, ${2:id locale})'
  'NSDecimalSubtract':
    'prefix': 'NSDecimalSubtract'
    'body': 'NSDecimalSubtract(${1:NSDecimal* result}, ${2:NSDecimal* leftOperand}, ${3:NSDecimal* rightOperand}, ${4:NSRoundingMode roundingMode})'
  'NSDecrementExtraRefCountWasZero':
    'prefix': 'NSDecrementExtraRefCountWasZero'
    'body': 'NSDecrementExtraRefCountWasZero(${1:id object})'
  'NSDefaultMallocZone':
    'prefix': 'NSDefaultMallocZone'
    'body': 'NSDefaultMallocZone()'
  'NSEqualRanges':
    'prefix': 'NSEqualRanges'
    'body': 'NSEqualRanges(${1:NSRange range1}, ${2:NSRange range2})'
  'NSExtraRefCount':
    'prefix': 'NSExtraRefCount'
    'body': 'NSExtraRefCount(${1:id object})'
  'NSFullUserName':
    'prefix': 'NSFullUserName'
    'body': 'NSFullUserName()'
  'NSGetSizeAndAlignment':
    'prefix': 'NSGetSizeAndAlignment'
    'body': 'NSGetSizeAndAlignment(${1:char* typePtr}, ${2:NSUInteger* sizep}, ${3:NSUInteger* alignp})'
  'NSGetUncaughtExceptionHandler':
    'prefix': 'NSGetUncaughtExceptionHandler'
    'body': 'NSGetUncaughtExceptionHandler()'
  'NSHomeDirectory':
    'prefix': 'NSHomeDirectory'
    'body': 'NSHomeDirectory()'
  'NSHomeDirectoryForUser':
    'prefix': 'NSHomeDirectoryForUser'
    'body': 'NSHomeDirectoryForUser(${1:NSString* userName})'
  'NSHostByteOrder':
    'prefix': 'NSHostByteOrder'
    'body': 'NSHostByteOrder()'
  'NSIncrementExtraRefCount':
    'prefix': 'NSIncrementExtraRefCount'
    'body': 'NSIncrementExtraRefCount(${1:id object})'
  'NSIntersectionRange':
    'prefix': 'NSIntersectionRange'
    'body': 'NSIntersectionRange(${1:NSRange range1}, ${2:NSRange range2})'
  'NSLocationInRange':
    'prefix': 'NSLocationInRange'
    'body': 'NSLocationInRange(${1:NSUInteger loc}, ${2:NSRange range})'
  'NSLog':
    'prefix': 'NSLog'
    'body': 'NSLog(${1:NSString* format})'
  'NSLogPageSize':
    'prefix': 'NSLogPageSize'
    'body': 'NSLogPageSize()'
  'NSLogv':
    'prefix': 'NSLogv'
    'body': 'NSLogv(${1:NSString* format}, ${2:va_list args})'
  'NSMakeCollectable':
    'prefix': 'NSMakeCollectable'
    'body': 'NSMakeCollectable(${1:CFTypeRef cf})'
  'NSMakeRange':
    'prefix': 'NSMakeRange'
    'body': 'NSMakeRange(${1:NSUInteger loc}, ${2:NSUInteger len})'
  'NSMaxRange':
    'prefix': 'NSMaxRange'
    'body': 'NSMaxRange(${1:NSRange range})'
  'NSOpenStepRootDirectory':
    'prefix': 'NSOpenStepRootDirectory'
    'body': 'NSOpenStepRootDirectory()'
  'NSPageSize':
    'prefix': 'NSPageSize'
    'body': 'NSPageSize()'
  'NSProtocolFromString':
    'prefix': 'NSProtocolFromString'
    'body': 'NSProtocolFromString(${1:NSString* namestr})'
  'NSRangeFromString':
    'prefix': 'NSRangeFromString'
    'body': 'NSRangeFromString(${1:NSString* aString})'
  'NSRealMemoryAvailable':
    'prefix': 'NSRealMemoryAvailable'
    'body': 'NSRealMemoryAvailable()'
  'NSRecycleZone':
    'prefix': 'NSRecycleZone'
    'body': 'NSRecycleZone(${1:NSZone* zone})'
  'NSRoundDownToMultipleOfPageSize':
    'prefix': 'NSRoundDownToMultipleOfPageSize'
    'body': 'NSRoundDownToMultipleOfPageSize(${1:NSUInteger bytes})'
  'NSRoundUpToMultipleOfPageSize':
    'prefix': 'NSRoundUpToMultipleOfPageSize'
    'body': 'NSRoundUpToMultipleOfPageSize(${1:NSUInteger bytes})'
  'NSSearchPathForDirectoriesInDomains':
    'prefix': 'NSSearchPathForDirectoriesInDomains'
    'body': 'NSSearchPathForDirectoriesInDomains(${1:NSSearchPathDirectory directory}, ${2:NSSearchPathDomainMask domainMask}, ${3:BOOL expandTilde})'
  'NSSelectorFromString':
    'prefix': 'NSSelectorFromString'
    'body': 'NSSelectorFromString(${1:NSString* aSelectorName})'
  'NSSetUncaughtExceptionHandler':
    'prefix': 'NSSetUncaughtExceptionHandler'
    'body': 'NSSetUncaughtExceptionHandler(${1:NSUncaughtExceptionHandler* })'
  'NSSetZoneName':
    'prefix': 'NSSetZoneName'
    'body': 'NSSetZoneName(${1:NSZone* zone}, ${2:NSString* name})'
  'NSShouldRetainWithZone':
    'prefix': 'NSShouldRetainWithZone'
    'body': 'NSShouldRetainWithZone(${1:id anObject}, ${2:NSZone* requestedZone})'
  'NSStringFromClass':
    'prefix': 'NSStringFromClass'
    'body': 'NSStringFromClass(${1:Class aClass})'
  'NSStringFromProtocol':
    'prefix': 'NSStringFromProtocol'
    'body': 'NSStringFromProtocol(${1:Protocol* proto})'
  'NSStringFromRange':
    'prefix': 'NSStringFromRange'
    'body': 'NSStringFromRange(${1:NSRange range})'
  'NSStringFromSelector':
    'prefix': 'NSStringFromSelector'
    'body': 'NSStringFromSelector(${1:SEL aSelector})'
  'NSSwapBigDoubleToHost':
    'prefix': 'NSSwapBigDoubleToHost'
    'body': 'NSSwapBigDoubleToHost(${1:NSSwappedDouble x})'
  'NSSwapBigFloatToHost':
    'prefix': 'NSSwapBigFloatToHost'
    'body': 'NSSwapBigFloatToHost(${1:NSSwappedFloat x})'
  'NSSwapBigIntToHost':
    'prefix': 'NSSwapBigIntToHost'
    'body': 'NSSwapBigIntToHost(${1:unsigned int x})'
  'NSSwapBigLongLongToHost':
    'prefix': 'NSSwapBigLongLongToHost'
    'body': 'NSSwapBigLongLongToHost(${1:unsigned long long x})'
  'NSSwapBigLongToHost':
    'prefix': 'NSSwapBigLongToHost'
    'body': 'NSSwapBigLongToHost(${1:unsigned long x})'
  'NSSwapBigShortToHost':
    'prefix': 'NSSwapBigShortToHost'
    'body': 'NSSwapBigShortToHost(${1:unsigned short x})'
  'NSSwapDouble':
    'prefix': 'NSSwapDouble'
    'body': 'NSSwapDouble(${1:NSSwappedDouble x})'
  'NSSwapFloat':
    'prefix': 'NSSwapFloat'
    'body': 'NSSwapFloat(${1:NSSwappedFloat x})'
  'NSSwapHostDoubleToBig':
    'prefix': 'NSSwapHostDoubleToBig'
    'body': 'NSSwapHostDoubleToBig(${1:double x})'
  'NSSwapHostDoubleToLittle':
    'prefix': 'NSSwapHostDoubleToLittle'
    'body': 'NSSwapHostDoubleToLittle(${1:double x})'
  'NSSwapHostFloatToBig':
    'prefix': 'NSSwapHostFloatToBig'
    'body': 'NSSwapHostFloatToBig(${1:float x})'
  'NSSwapHostFloatToLittle':
    'prefix': 'NSSwapHostFloatToLittle'
    'body': 'NSSwapHostFloatToLittle(${1:float x})'
  'NSSwapHostIntToBig':
    'prefix': 'NSSwapHostIntToBig'
    'body': 'NSSwapHostIntToBig(${1:unsigned int x})'
  'NSSwapHostIntToLittle':
    'prefix': 'NSSwapHostIntToLittle'
    'body': 'NSSwapHostIntToLittle(${1:unsigned int x})'
  'NSSwapHostLongLongToBig':
    'prefix': 'NSSwapHostLongLongToBig'
    'body': 'NSSwapHostLongLongToBig(${1:unsigned long long x})'
  'NSSwapHostLongLongToLittle':
    'prefix': 'NSSwapHostLongLongToLittle'
    'body': 'NSSwapHostLongLongToLittle(${1:unsigned long long x})'
  'NSSwapHostLongToBig':
    'prefix': 'NSSwapHostLongToBig'
    'body': 'NSSwapHostLongToBig(${1:unsigned long x})'
  'NSSwapHostLongToLittle':
    'prefix': 'NSSwapHostLongToLittle'
    'body': 'NSSwapHostLongToLittle(${1:unsigned long x})'
  'NSSwapHostShortToBig':
    'prefix': 'NSSwapHostShortToBig'
    'body': 'NSSwapHostShortToBig(${1:unsigned short x})'
  'NSSwapHostShortToLittle':
    'prefix': 'NSSwapHostShortToLittle'
    'body': 'NSSwapHostShortToLittle(${1:unsigned short x})'
  'NSSwapInt':
    'prefix': 'NSSwapInt'
    'body': 'NSSwapInt(${1:unsigned int inv})'
  'NSSwapLittleDoubleToHost':
    'prefix': 'NSSwapLittleDoubleToHost'
    'body': 'NSSwapLittleDoubleToHost(${1:NSSwappedDouble x})'
  'NSSwapLittleFloatToHost':
    'prefix': 'NSSwapLittleFloatToHost'
    'body': 'NSSwapLittleFloatToHost(${1:NSSwappedFloat x})'
  'NSSwapLittleIntToHost':
    'prefix': 'NSSwapLittleIntToHost'
    'body': 'NSSwapLittleIntToHost(${1:unsigned int x})'
  'NSSwapLittleLongLongToHost':
    'prefix': 'NSSwapLittleLongLongToHost'
    'body': 'NSSwapLittleLongLongToHost(${1:unsigned long long x})'
  'NSSwapLittleLongToHost':
    'prefix': 'NSSwapLittleLongToHost'
    'body': 'NSSwapLittleLongToHost(${1:unsigned long x})'
  'NSSwapLittleShortToHost':
    'prefix': 'NSSwapLittleShortToHost'
    'body': 'NSSwapLittleShortToHost(${1:unsigned short x})'
  'NSSwapLong':
    'prefix': 'NSSwapLong'
    'body': 'NSSwapLong(${1:unsigned long inv})'
  'NSSwapLongLong':
    'prefix': 'NSSwapLongLong'
    'body': 'NSSwapLongLong(${1:unsigned long long inv})'
  'NSSwapShort':
    'prefix': 'NSSwapShort'
    'body': 'NSSwapShort(${1:unsigned short inv})'
  'NSTemporaryDirectory':
    'prefix': 'NSTemporaryDirectory'
    'body': 'NSTemporaryDirectory()'
  'NSUnionRange':
    'prefix': 'NSUnionRange'
    'body': 'NSUnionRange(${1:NSRange range1}, ${2:NSRange range2})'
  'NSUserName':
    'prefix': 'NSUserName'
    'body': 'NSUserName()'
  'NSZoneCalloc':
    'prefix': 'NSZoneCalloc'
    'body': 'NSZoneCalloc(${1:NSZone* zone}, ${2:NSUInteger numElems}, ${3:NSUInteger byteSize})'
  'NSZoneFree':
    'prefix': 'NSZoneFree'
    'body': 'NSZoneFree(${1:NSZone* zone}, ${2:void* ptr})'
  'NSZoneFromPointer':
    'prefix': 'NSZoneFromPointer'
    'body': 'NSZoneFromPointer(${1:void* ptr})'
  'NSZoneMalloc':
    'prefix': 'NSZoneMalloc'
    'body': 'NSZoneMalloc(${1:NSZone* zone}, ${2:NSUInteger size})'
  'NSZoneName':
    'prefix': 'NSZoneName'
    'body': 'NSZoneName(${1:NSZone* zone})'
  'NSZoneRealloc':
    'prefix': 'NSZoneRealloc'
    'body': 'NSZoneRealloc(${1:NSZone* zone}, ${2:void* ptr}, ${3:NSUInteger size})'
  'addObserver:forKeyPath:options:context:':
    'prefix': 'addObserver:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, options:${3:NSKeyValueObservingOptions options}, context:${4:void* context})'
  'addObserver:toObjectsAtIndexes:forKeyPath:options:context:':
    'prefix': 'addObserver:toObjectsAtIndexes:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, toObjectsAtIndexes:${2:NSIndexSet* indexes}, forKeyPath:${3:NSString* keyPath}, options:${4:NSKeyValueObservingOptions options}, context:${5:void* context})'
  'NSArray.array':
    'prefix': 'array'
    'body': 'NSArray.array()'
  'arrayByAddingObject:':
    'prefix': 'arrayByAddingObject:'
    'body': 'arrayByAddingObject(${1:id anObject})'
  'arrayByAddingObjectsFromArray:':
    'prefix': 'arrayByAddingObjectsFromArray:'
    'body': 'arrayByAddingObjectsFromArray(${1:NSArray* otherArray})'
  'NSArray.arrayWithArray:':
    'prefix': 'arrayWithArray:'
    'body': 'NSArray.arrayWithArray(${1:NSArray* array})'
  'NSArray.arrayWithContentsOfFile:':
    'prefix': 'arrayWithContentsOfFile:'
    'body': 'NSArray.arrayWithContentsOfFile(${1:NSString* path})'
  'NSArray.arrayWithContentsOfURL:':
    'prefix': 'arrayWithContentsOfURL:'
    'body': 'NSArray.arrayWithContentsOfURL(${1:NSURL* url})'
  'NSArray.arrayWithObject:':
    'prefix': 'arrayWithObject:'
    'body': 'NSArray.arrayWithObject(${1:id anObject})'
  'NSArray.arrayWithObjects:':
    'prefix': 'arrayWithObjects:'
    'body': 'NSArray.arrayWithObjects(${1:id firstObj})'
  'NSArray.arrayWithObjects:count:':
    'prefix': 'arrayWithObjects:count:'
    'body': 'NSArray.arrayWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'componentsJoinedByString:':
    'prefix': 'componentsJoinedByString:'
    'body': 'componentsJoinedByString(${1:NSString* separator})'
  'containsObject:':
    'prefix': 'containsObject:'
    'body': 'containsObject(${1:id anObject})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'descriptionWithLocale:indent:':
    'prefix': 'descriptionWithLocale:indent:'
    'body': 'descriptionWithLocale(${1:id locale}, indent:${2:NSUInteger level})'
  'enumerateObjectsAtIndexes:options:usingBlock:':
    'prefix': 'enumerateObjectsAtIndexes:options:usingBlock:'
    'body': 'enumerateObjectsAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, usingBlock:${3:void (^)(id, NSUInteger, BOOL *) block})'
  'enumerateObjectsUsingBlock:':
    'prefix': 'enumerateObjectsUsingBlock:'
    'body': 'enumerateObjectsUsingBlock(${1:void (^)(id, NSUInteger, BOOL *) block})'
  'enumerateObjectsWithOptions:usingBlock:':
    'prefix': 'enumerateObjectsWithOptions:usingBlock:'
    'body': 'enumerateObjectsWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(id, NSUInteger, BOOL *) block})'
  'filteredArrayUsingPredicate:':
    'prefix': 'filteredArrayUsingPredicate:'
    'body': 'filteredArrayUsingPredicate(${1:NSPredicate* predicate})'
  'firstObject':
    'prefix': 'firstObject'
    'body': 'firstObject()'
  'firstObjectCommonWithArray:':
    'prefix': 'firstObjectCommonWithArray:'
    'body': 'firstObjectCommonWithArray(${1:NSArray* otherArray})'
  'getObjects:':
    'prefix': 'getObjects:'
    'body': 'getObjects(${1:id* objects})'
  'getObjects:range:':
    'prefix': 'getObjects:range:'
    'body': 'getObjects(${1:id* objects}, range:${2:NSRange range})'
  'indexOfObject:':
    'prefix': 'indexOfObject:'
    'body': 'indexOfObject(${1:id anObject})'
  'indexOfObject:inRange:':
    'prefix': 'indexOfObject:inRange:'
    'body': 'indexOfObject(${1:id anObject}, inRange:${2:NSRange range})'
  'indexOfObject:inSortedRange:options:usingComparator:':
    'prefix': 'indexOfObject:inSortedRange:options:usingComparator:'
    'body': 'indexOfObject(${1:id obj}, inSortedRange:${2:NSRange r}, options:${3:NSBinarySearchingOptions opts}, usingComparator:${4:NSComparator cmp})'
  'indexOfObjectAtIndexes:options:passingTest:':
    'prefix': 'indexOfObjectAtIndexes:options:passingTest:'
    'body': 'indexOfObjectAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexOfObjectIdenticalTo:':
    'prefix': 'indexOfObjectIdenticalTo:'
    'body': 'indexOfObjectIdenticalTo(${1:id anObject})'
  'indexOfObjectIdenticalTo:inRange:':
    'prefix': 'indexOfObjectIdenticalTo:inRange:'
    'body': 'indexOfObjectIdenticalTo(${1:id anObject}, inRange:${2:NSRange range})'
  'indexOfObjectPassingTest:':
    'prefix': 'indexOfObjectPassingTest:'
    'body': 'indexOfObjectPassingTest(${1:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexOfObjectWithOptions:passingTest:':
    'prefix': 'indexOfObjectWithOptions:passingTest:'
    'body': 'indexOfObjectWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsAtIndexes:options:passingTest:':
    'prefix': 'indexesOfObjectsAtIndexes:options:passingTest:'
    'body': 'indexesOfObjectsAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsPassingTest:':
    'prefix': 'indexesOfObjectsPassingTest:'
    'body': 'indexesOfObjectsPassingTest(${1:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsWithOptions:passingTest:':
    'prefix': 'indexesOfObjectsWithOptions:passingTest:'
    'body': 'indexesOfObjectsWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithArray:':
    'prefix': 'initWithArray:'
    'body': 'initWithArray(${1:NSArray* array})'
  'initWithArray:copyItems:':
    'prefix': 'initWithArray:copyItems:'
    'body': 'initWithArray(${1:NSArray* array}, copyItems:${2:BOOL flag})'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* path})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithObjects:':
    'prefix': 'initWithObjects:'
    'body': 'initWithObjects(${1:id firstObj})'
  'initWithObjects:count:':
    'prefix': 'initWithObjects:count:'
    'body': 'initWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'isEqualToArray:':
    'prefix': 'isEqualToArray:'
    'body': 'isEqualToArray(${1:NSArray* otherArray})'
  'lastObject':
    'prefix': 'lastObject'
    'body': 'lastObject()'
  'makeObjectsPerformSelector:':
    'prefix': 'makeObjectsPerformSelector:'
    'body': 'makeObjectsPerformSelector(${1:SEL aSelector})'
  'makeObjectsPerformSelector:withObject:':
    'prefix': 'makeObjectsPerformSelector:withObject:'
    'body': 'makeObjectsPerformSelector(${1:SEL aSelector}, withObject:${2:id argument})'
  'objectAtIndex:':
    'prefix': 'objectAtIndex:'
    'body': 'objectAtIndex(${1:NSUInteger index})'
  'objectAtIndexedSubscript:':
    'prefix': 'objectAtIndexedSubscript:'
    'body': 'objectAtIndexedSubscript(${1:NSUInteger idx})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'objectsAtIndexes:':
    'prefix': 'objectsAtIndexes:'
    'body': 'objectsAtIndexes(${1:NSIndexSet* indexes})'
  'pathsMatchingExtensions:':
    'prefix': 'pathsMatchingExtensions:'
    'body': 'pathsMatchingExtensions(${1:NSArray* filterTypes})'
  'removeObserver:forKeyPath:':
    'prefix': 'removeObserver:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath})'
  'removeObserver:forKeyPath:context:':
    'prefix': 'removeObserver:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, context:${3:void* context})'
  'removeObserver:fromObjectsAtIndexes:forKeyPath:':
    'prefix': 'removeObserver:fromObjectsAtIndexes:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, fromObjectsAtIndexes:${2:NSIndexSet* indexes}, forKeyPath:${3:NSString* keyPath})'
  'removeObserver:fromObjectsAtIndexes:forKeyPath:context:':
    'prefix': 'removeObserver:fromObjectsAtIndexes:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, fromObjectsAtIndexes:${2:NSIndexSet* indexes}, forKeyPath:${3:NSString* keyPath}, context:${4:void* context})'
  'reverseObjectEnumerator':
    'prefix': 'reverseObjectEnumerator'
    'body': 'reverseObjectEnumerator()'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'sortedArrayHint':
    'prefix': 'sortedArrayHint'
    'body': 'sortedArrayHint()'
  'sortedArrayUsingComparator:':
    'prefix': 'sortedArrayUsingComparator:'
    'body': 'sortedArrayUsingComparator(${1:NSComparator cmptr})'
  'sortedArrayUsingDescriptors:':
    'prefix': 'sortedArrayUsingDescriptors:'
    'body': 'sortedArrayUsingDescriptors(${1:NSArray* sortDescriptors})'
  'sortedArrayUsingFunction:context:':
    'prefix': 'sortedArrayUsingFunction:context:'
    'body': 'sortedArrayUsingFunction(${1:NSInteger (*)(id, id, void *) comparator}, context:${2:void* context})'
  'sortedArrayUsingFunction:context:hint:':
    'prefix': 'sortedArrayUsingFunction:context:hint:'
    'body': 'sortedArrayUsingFunction(${1:NSInteger (*)(id, id, void *) comparator}, context:${2:void* context}, hint:${3:NSData* hint})'
  'sortedArrayUsingSelector:':
    'prefix': 'sortedArrayUsingSelector:'
    'body': 'sortedArrayUsingSelector(${1:SEL comparator})'
  'sortedArrayWithOptions:usingComparator:':
    'prefix': 'sortedArrayWithOptions:usingComparator:'
    'body': 'sortedArrayWithOptions(${1:NSSortOptions opts}, usingComparator:${2:NSComparator cmptr})'
  'subarrayWithRange:':
    'prefix': 'subarrayWithRange:'
    'body': 'subarrayWithRange(${1:NSRange range})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'writeToFile:atomically:':
    'prefix': 'writeToFile:atomically:'
    'body': 'writeToFile(${1:NSString* path}, atomically:${2:BOOL useAuxiliaryFile})'
  'writeToURL:atomically:':
    'prefix': 'writeToURL:atomically:'
    'body': 'writeToURL(${1:NSURL* url}, atomically:${2:BOOL atomically})'
  'NSAssertionHandler.currentHandler':
    'prefix': 'currentHandler'
    'body': 'NSAssertionHandler.currentHandler()'
  'handleFailureInFunction:file:lineNumber:description:':
    'prefix': 'handleFailureInFunction:file:lineNumber:description:'
    'body': 'handleFailureInFunction(${1:NSString* functionName}, file:${2:NSString* fileName}, lineNumber:${3:NSInteger line}, description:${4:NSString* format})'
  'handleFailureInMethod:object:file:lineNumber:description:':
    'prefix': 'handleFailureInMethod:object:file:lineNumber:description:'
    'body': 'handleFailureInMethod(${1:SEL selector}, object:${2:id object}, file:${3:NSString* fileName}, lineNumber:${4:NSInteger line}, description:${5:NSString* format})'
  'attribute:atIndex:effectiveRange:':
    'prefix': 'attribute:atIndex:effectiveRange:'
    'body': 'attribute(${1:NSString* attrName}, atIndex:${2:NSUInteger location}, effectiveRange:${3:NSRangePointer range})'
  'attribute:atIndex:longestEffectiveRange:inRange:':
    'prefix': 'attribute:atIndex:longestEffectiveRange:inRange:'
    'body': 'attribute(${1:NSString* attrName}, atIndex:${2:NSUInteger location}, longestEffectiveRange:${3:NSRangePointer range}, inRange:${4:NSRange rangeLimit})'
  'attributedSubstringFromRange:':
    'prefix': 'attributedSubstringFromRange:'
    'body': 'attributedSubstringFromRange(${1:NSRange range})'
  'attributesAtIndex:effectiveRange:':
    'prefix': 'attributesAtIndex:effectiveRange:'
    'body': 'attributesAtIndex(${1:NSUInteger location}, effectiveRange:${2:NSRangePointer range})'
  'attributesAtIndex:longestEffectiveRange:inRange:':
    'prefix': 'attributesAtIndex:longestEffectiveRange:inRange:'
    'body': 'attributesAtIndex(${1:NSUInteger location}, longestEffectiveRange:${2:NSRangePointer range}, inRange:${3:NSRange rangeLimit})'
  'enumerateAttribute:inRange:options:usingBlock:':
    'prefix': 'enumerateAttribute:inRange:options:usingBlock:'
    'body': 'enumerateAttribute(${1:NSString* attrName}, inRange:${2:NSRange enumerationRange}, options:${3:NSAttributedStringEnumerationOptions opts}, usingBlock:${4:void (^)(id, NSRange, BOOL *) block})'
  'enumerateAttributesInRange:options:usingBlock:':
    'prefix': 'enumerateAttributesInRange:options:usingBlock:'
    'body': 'enumerateAttributesInRange(${1:NSRange enumerationRange}, options:${2:NSAttributedStringEnumerationOptions opts}, usingBlock:${3:void (^)(NSDictionary *, NSRange, BOOL *) block})'
  'initWithAttributedString:':
    'prefix': 'initWithAttributedString:'
    'body': 'initWithAttributedString(${1:NSAttributedString* attrStr})'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* str})'
  'initWithString:attributes:':
    'prefix': 'initWithString:attributes:'
    'body': 'initWithString(${1:NSString* str}, attributes:${2:NSDictionary* attrs})'
  'isEqualToAttributedString:':
    'prefix': 'isEqualToAttributedString:'
    'body': 'isEqualToAttributedString(${1:NSAttributedString* other})'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'NSAutoreleasePool.addObject:':
    'prefix': 'addObject:'
    'body': 'NSAutoreleasePool.addObject(${1:id anObject})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id anObject})'
  'drain':
    'prefix': 'drain'
    'body': 'drain()'
  'addExecutionBlock:':
    'prefix': 'addExecutionBlock:'
    'body': 'addExecutionBlock(${1:void (^)(void) block})'
  'NSBlockOperation.blockOperationWithBlock:':
    'prefix': 'blockOperationWithBlock:'
    'body': 'NSBlockOperation.blockOperationWithBlock(${1:void (^)(void) block})'
  'executionBlocks':
    'prefix': 'executionBlocks'
    'body': 'executionBlocks()'
  'URLForAuxiliaryExecutable:':
    'prefix': 'URLForAuxiliaryExecutable:'
    'body': 'URLForAuxiliaryExecutable(${1:NSString* executableName})'
  'URLForResource:withExtension:':
    'prefix': 'URLForResource:withExtension:'
    'body': 'URLForResource(${1:NSString* name}, withExtension:${2:NSString* ext})'
  'URLForResource:withExtension:subdirectory:':
    'prefix': 'URLForResource:withExtension:subdirectory:'
    'body': 'URLForResource(${1:NSString* name}, withExtension:${2:NSString* ext}, subdirectory:${3:NSString* subpath})'
  'NSBundle.URLForResource:withExtension:subdirectory:inBundleWithURL:':
    'prefix': 'URLForResource:withExtension:subdirectory:inBundleWithURL:'
    'body': 'NSBundle.URLForResource(${1:NSString* name}, withExtension:${2:NSString* ext}, subdirectory:${3:NSString* subpath}, inBundleWithURL:${4:NSURL* bundleURL})'
  'URLForResource:withExtension:subdirectory:localization:':
    'prefix': 'URLForResource:withExtension:subdirectory:localization:'
    'body': 'URLForResource(${1:NSString* name}, withExtension:${2:NSString* ext}, subdirectory:${3:NSString* subpath}, localization:${4:NSString* localizationName})'
  'URLsForResourcesWithExtension:subdirectory:':
    'prefix': 'URLsForResourcesWithExtension:subdirectory:'
    'body': 'URLsForResourcesWithExtension(${1:NSString* ext}, subdirectory:${2:NSString* subpath})'
  'NSBundle.URLsForResourcesWithExtension:subdirectory:inBundleWithURL:':
    'prefix': 'URLsForResourcesWithExtension:subdirectory:inBundleWithURL:'
    'body': 'NSBundle.URLsForResourcesWithExtension(${1:NSString* ext}, subdirectory:${2:NSString* subpath}, inBundleWithURL:${3:NSURL* bundleURL})'
  'URLsForResourcesWithExtension:subdirectory:localization:':
    'prefix': 'URLsForResourcesWithExtension:subdirectory:localization:'
    'body': 'URLsForResourcesWithExtension(${1:NSString* ext}, subdirectory:${2:NSString* subpath}, localization:${3:NSString* localizationName})'
  'NSBundle.allBundles':
    'prefix': 'allBundles'
    'body': 'NSBundle.allBundles()'
  'NSBundle.allFrameworks':
    'prefix': 'allFrameworks'
    'body': 'NSBundle.allFrameworks()'
  'appStoreReceiptURL':
    'prefix': 'appStoreReceiptURL'
    'body': 'appStoreReceiptURL()'
  'builtInPlugInsPath':
    'prefix': 'builtInPlugInsPath'
    'body': 'builtInPlugInsPath()'
  'builtInPlugInsURL':
    'prefix': 'builtInPlugInsURL'
    'body': 'builtInPlugInsURL()'
  'NSBundle.bundleForClass:':
    'prefix': 'bundleForClass:'
    'body': 'NSBundle.bundleForClass(${1:Class aClass})'
  'bundleIdentifier':
    'prefix': 'bundleIdentifier'
    'body': 'bundleIdentifier()'
  'bundlePath':
    'prefix': 'bundlePath'
    'body': 'bundlePath()'
  'bundleURL':
    'prefix': 'bundleURL'
    'body': 'bundleURL()'
  'NSBundle.bundleWithIdentifier:':
    'prefix': 'bundleWithIdentifier:'
    'body': 'NSBundle.bundleWithIdentifier(${1:NSString* identifier})'
  'NSBundle.bundleWithPath:':
    'prefix': 'bundleWithPath:'
    'body': 'NSBundle.bundleWithPath(${1:NSString* path})'
  'NSBundle.bundleWithURL:':
    'prefix': 'bundleWithURL:'
    'body': 'NSBundle.bundleWithURL(${1:NSURL* url})'
  'classNamed:':
    'prefix': 'classNamed:'
    'body': 'classNamed(${1:NSString* className})'
  'developmentLocalization':
    'prefix': 'developmentLocalization'
    'body': 'developmentLocalization()'
  'executableArchitectures':
    'prefix': 'executableArchitectures'
    'body': 'executableArchitectures()'
  'executablePath':
    'prefix': 'executablePath'
    'body': 'executablePath()'
  'executableURL':
    'prefix': 'executableURL'
    'body': 'executableURL()'
  'infoDictionary':
    'prefix': 'infoDictionary'
    'body': 'infoDictionary()'
  'initWithPath:':
    'prefix': 'initWithPath:'
    'body': 'initWithPath(${1:NSString* path})'
  'initWithURL:':
    'prefix': 'initWithURL:'
    'body': 'initWithURL(${1:NSURL* url})'
  'isLoaded':
    'prefix': 'isLoaded'
    'body': 'isLoaded()'
  'load':
    'prefix': 'load'
    'body': 'load()'
  'loadAndReturnError:':
    'prefix': 'loadAndReturnError:'
    'body': 'loadAndReturnError(${1:NSError** error})'
  'localizations':
    'prefix': 'localizations'
    'body': 'localizations()'
  'localizedInfoDictionary':
    'prefix': 'localizedInfoDictionary'
    'body': 'localizedInfoDictionary()'
  'localizedStringForKey:value:table:':
    'prefix': 'localizedStringForKey:value:table:'
    'body': 'localizedStringForKey(${1:NSString* key}, value:${2:NSString* value}, table:${3:NSString* tableName})'
  'NSBundle.mainBundle':
    'prefix': 'mainBundle'
    'body': 'NSBundle.mainBundle()'
  'objectForInfoDictionaryKey:':
    'prefix': 'objectForInfoDictionaryKey:'
    'body': 'objectForInfoDictionaryKey(${1:NSString* key})'
  'pathForAuxiliaryExecutable:':
    'prefix': 'pathForAuxiliaryExecutable:'
    'body': 'pathForAuxiliaryExecutable(${1:NSString* executableName})'
  'pathForResource:ofType:':
    'prefix': 'pathForResource:ofType:'
    'body': 'pathForResource(${1:NSString* name}, ofType:${2:NSString* ext})'
  'NSBundle.pathForResource:ofType:inDirectory:':
    'prefix': 'pathForResource:ofType:inDirectory:'
    'body': 'NSBundle.pathForResource(${1:NSString* name}, ofType:${2:NSString* ext}, inDirectory:${3:NSString* bundlePath})'
  'pathForResource:ofType:inDirectory:':
    'prefix': 'pathForResource:ofType:inDirectory:'
    'body': 'pathForResource(${1:NSString* name}, ofType:${2:NSString* ext}, inDirectory:${3:NSString* subpath})'
  'pathForResource:ofType:inDirectory:forLocalization:':
    'prefix': 'pathForResource:ofType:inDirectory:forLocalization:'
    'body': 'pathForResource(${1:NSString* name}, ofType:${2:NSString* ext}, inDirectory:${3:NSString* subpath}, forLocalization:${4:NSString* localizationName})'
  'NSBundle.pathsForResourcesOfType:inDirectory:':
    'prefix': 'pathsForResourcesOfType:inDirectory:'
    'body': 'NSBundle.pathsForResourcesOfType(${1:NSString* ext}, inDirectory:${2:NSString* bundlePath})'
  'pathsForResourcesOfType:inDirectory:':
    'prefix': 'pathsForResourcesOfType:inDirectory:'
    'body': 'pathsForResourcesOfType(${1:NSString* ext}, inDirectory:${2:NSString* subpath})'
  'pathsForResourcesOfType:inDirectory:forLocalization:':
    'prefix': 'pathsForResourcesOfType:inDirectory:forLocalization:'
    'body': 'pathsForResourcesOfType(${1:NSString* ext}, inDirectory:${2:NSString* subpath}, forLocalization:${3:NSString* localizationName})'
  'preferredLocalizations':
    'prefix': 'preferredLocalizations'
    'body': 'preferredLocalizations()'
  'NSBundle.preferredLocalizationsFromArray:':
    'prefix': 'preferredLocalizationsFromArray:'
    'body': 'NSBundle.preferredLocalizationsFromArray(${1:NSArray* localizationsArray})'
  'NSBundle.preferredLocalizationsFromArray:forPreferences:':
    'prefix': 'preferredLocalizationsFromArray:forPreferences:'
    'body': 'NSBundle.preferredLocalizationsFromArray(${1:NSArray* localizationsArray}, forPreferences:${2:NSArray* preferencesArray})'
  'preflightAndReturnError:':
    'prefix': 'preflightAndReturnError:'
    'body': 'preflightAndReturnError(${1:NSError** error})'
  'principalClass':
    'prefix': 'principalClass'
    'body': 'principalClass()'
  'privateFrameworksPath':
    'prefix': 'privateFrameworksPath'
    'body': 'privateFrameworksPath()'
  'privateFrameworksURL':
    'prefix': 'privateFrameworksURL'
    'body': 'privateFrameworksURL()'
  'resourcePath':
    'prefix': 'resourcePath'
    'body': 'resourcePath()'
  'resourceURL':
    'prefix': 'resourceURL'
    'body': 'resourceURL()'
  'sharedFrameworksPath':
    'prefix': 'sharedFrameworksPath'
    'body': 'sharedFrameworksPath()'
  'sharedFrameworksURL':
    'prefix': 'sharedFrameworksURL'
    'body': 'sharedFrameworksURL()'
  'sharedSupportPath':
    'prefix': 'sharedSupportPath'
    'body': 'sharedSupportPath()'
  'sharedSupportURL':
    'prefix': 'sharedSupportURL'
    'body': 'sharedSupportURL()'
  'unload':
    'prefix': 'unload'
    'body': 'unload()'
  'allowedUnits':
    'prefix': 'allowedUnits'
    'body': 'allowedUnits()'
  'allowsNonnumericFormatting':
    'prefix': 'allowsNonnumericFormatting'
    'body': 'allowsNonnumericFormatting()'
  'countStyle':
    'prefix': 'countStyle'
    'body': 'countStyle()'
  'includesActualByteCount':
    'prefix': 'includesActualByteCount'
    'body': 'includesActualByteCount()'
  'includesCount':
    'prefix': 'includesCount'
    'body': 'includesCount()'
  'includesUnit':
    'prefix': 'includesUnit'
    'body': 'includesUnit()'
  'isAdaptive':
    'prefix': 'isAdaptive'
    'body': 'isAdaptive()'
  'setAdaptive:':
    'prefix': 'setAdaptive:'
    'body': 'setAdaptive(${1:BOOL adaptive})'
  'setAllowedUnits:':
    'prefix': 'setAllowedUnits:'
    'body': 'setAllowedUnits(${1:NSByteCountFormatterUnits allowedUnits})'
  'setAllowsNonnumericFormatting:':
    'prefix': 'setAllowsNonnumericFormatting:'
    'body': 'setAllowsNonnumericFormatting(${1:BOOL allowsNonnumericFormatting})'
  'setCountStyle:':
    'prefix': 'setCountStyle:'
    'body': 'setCountStyle(${1:NSByteCountFormatterCountStyle countStyle})'
  'setIncludesActualByteCount:':
    'prefix': 'setIncludesActualByteCount:'
    'body': 'setIncludesActualByteCount(${1:BOOL includesActualByteCount})'
  'setIncludesCount:':
    'prefix': 'setIncludesCount:'
    'body': 'setIncludesCount(${1:BOOL includesCount})'
  'setIncludesUnit:':
    'prefix': 'setIncludesUnit:'
    'body': 'setIncludesUnit(${1:BOOL includesUnit})'
  'setZeroPadsFractionDigits:':
    'prefix': 'setZeroPadsFractionDigits:'
    'body': 'setZeroPadsFractionDigits(${1:BOOL zeroPadsFractionDigits})'
  'stringFromByteCount:':
    'prefix': 'stringFromByteCount:'
    'body': 'stringFromByteCount(${1:long long byteCount})'
  'NSByteCountFormatter.stringFromByteCount:countStyle:':
    'prefix': 'stringFromByteCount:countStyle:'
    'body': 'NSByteCountFormatter.stringFromByteCount(${1:long long byteCount}, countStyle:${2:NSByteCountFormatterCountStyle countStyle})'
  'zeroPadsFractionDigits':
    'prefix': 'zeroPadsFractionDigits'
    'body': 'zeroPadsFractionDigits()'
  'countLimit':
    'prefix': 'countLimit'
    'body': 'countLimit()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'evictsObjectsWithDiscardedContent':
    'prefix': 'evictsObjectsWithDiscardedContent'
    'body': 'evictsObjectsWithDiscardedContent()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:id key})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObjectForKey:':
    'prefix': 'removeObjectForKey:'
    'body': 'removeObjectForKey(${1:id key})'
  'setCountLimit:':
    'prefix': 'setCountLimit:'
    'body': 'setCountLimit(${1:NSUInteger lim})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id d})'
  'setEvictsObjectsWithDiscardedContent:':
    'prefix': 'setEvictsObjectsWithDiscardedContent:'
    'body': 'setEvictsObjectsWithDiscardedContent(${1:BOOL b})'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'setObject:forKey:':
    'prefix': 'setObject:forKey:'
    'body': 'setObject(${1:id obj}, forKey:${2:id key})'
  'setObject:forKey:cost:':
    'prefix': 'setObject:forKey:cost:'
    'body': 'setObject(${1:id obj}, forKey:${2:id key}, cost:${3:NSUInteger g})'
  'setTotalCostLimit:':
    'prefix': 'setTotalCostLimit:'
    'body': 'setTotalCostLimit(${1:NSUInteger lim})'
  'totalCostLimit':
    'prefix': 'totalCostLimit'
    'body': 'totalCostLimit()'
  'data':
    'prefix': 'data'
    'body': 'data()'
  'initWithResponse:data:':
    'prefix': 'initWithResponse:data:'
    'body': 'initWithResponse(${1:NSURLResponse* response}, data:${2:NSData* data})'
  'initWithResponse:data:userInfo:storagePolicy:':
    'prefix': 'initWithResponse:data:userInfo:storagePolicy:'
    'body': 'initWithResponse(${1:NSURLResponse* response}, data:${2:NSData* data}, userInfo:${3:NSDictionary* userInfo}, storagePolicy:${4:NSURLCacheStoragePolicy storagePolicy})'
  'response':
    'prefix': 'response'
    'body': 'response()'
  'storagePolicy':
    'prefix': 'storagePolicy'
    'body': 'storagePolicy()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'NSCalendar.autoupdatingCurrentCalendar':
    'prefix': 'autoupdatingCurrentCalendar'
    'body': 'NSCalendar.autoupdatingCurrentCalendar()'
  'calendarIdentifier':
    'prefix': 'calendarIdentifier'
    'body': 'calendarIdentifier()'
  'components:fromDate:':
    'prefix': 'components:fromDate:'
    'body': 'components(${1:NSCalendarUnit unitFlags}, fromDate:${2:NSDate* date})'
  'components:fromDate:toDate:options:':
    'prefix': 'components:fromDate:toDate:options:'
    'body': 'components(${1:NSCalendarUnit unitFlags}, fromDate:${2:NSDate* startingDate}, toDate:${3:NSDate* resultDate}, options:${4:NSCalendarOptions opts})'
  'NSCalendar.currentCalendar':
    'prefix': 'currentCalendar'
    'body': 'NSCalendar.currentCalendar()'
  'dateByAddingComponents:toDate:options:':
    'prefix': 'dateByAddingComponents:toDate:options:'
    'body': 'dateByAddingComponents(${1:NSDateComponents* comps}, toDate:${2:NSDate* date}, options:${3:NSCalendarOptions opts})'
  'dateFromComponents:':
    'prefix': 'dateFromComponents:'
    'body': 'dateFromComponents(${1:NSDateComponents* comps})'
  'firstWeekday':
    'prefix': 'firstWeekday'
    'body': 'firstWeekday()'
  'initWithCalendarIdentifier:':
    'prefix': 'initWithCalendarIdentifier:'
    'body': 'initWithCalendarIdentifier(${1:NSString* ident})'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'maximumRangeOfUnit:':
    'prefix': 'maximumRangeOfUnit:'
    'body': 'maximumRangeOfUnit(${1:NSCalendarUnit unit})'
  'minimumDaysInFirstWeek':
    'prefix': 'minimumDaysInFirstWeek'
    'body': 'minimumDaysInFirstWeek()'
  'minimumRangeOfUnit:':
    'prefix': 'minimumRangeOfUnit:'
    'body': 'minimumRangeOfUnit(${1:NSCalendarUnit unit})'
  'ordinalityOfUnit:inUnit:forDate:':
    'prefix': 'ordinalityOfUnit:inUnit:forDate:'
    'body': 'ordinalityOfUnit(${1:NSCalendarUnit smaller}, inUnit:${2:NSCalendarUnit larger}, forDate:${3:NSDate* date})'
  'rangeOfUnit:inUnit:forDate:':
    'prefix': 'rangeOfUnit:inUnit:forDate:'
    'body': 'rangeOfUnit(${1:NSCalendarUnit smaller}, inUnit:${2:NSCalendarUnit larger}, forDate:${3:NSDate* date})'
  'rangeOfUnit:startDate:interval:forDate:':
    'prefix': 'rangeOfUnit:startDate:interval:forDate:'
    'body': 'rangeOfUnit(${1:NSCalendarUnit unit}, startDate:${2:NSDate** datep}, interval:${3:NSTimeInterval* tip}, forDate:${4:NSDate* date})'
  'setFirstWeekday:':
    'prefix': 'setFirstWeekday:'
    'body': 'setFirstWeekday(${1:NSUInteger weekday})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* locale})'
  'setMinimumDaysInFirstWeek:':
    'prefix': 'setMinimumDaysInFirstWeek:'
    'body': 'setMinimumDaysInFirstWeek(${1:NSUInteger mdw})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* tz})'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'NSCharacterSet.URLFragmentAllowedCharacterSet':
    'prefix': 'URLFragmentAllowedCharacterSet'
    'body': 'NSCharacterSet.URLFragmentAllowedCharacterSet()'
  'NSCharacterSet.URLHostAllowedCharacterSet':
    'prefix': 'URLHostAllowedCharacterSet'
    'body': 'NSCharacterSet.URLHostAllowedCharacterSet()'
  'NSCharacterSet.URLPasswordAllowedCharacterSet':
    'prefix': 'URLPasswordAllowedCharacterSet'
    'body': 'NSCharacterSet.URLPasswordAllowedCharacterSet()'
  'NSCharacterSet.URLPathAllowedCharacterSet':
    'prefix': 'URLPathAllowedCharacterSet'
    'body': 'NSCharacterSet.URLPathAllowedCharacterSet()'
  'NSCharacterSet.URLQueryAllowedCharacterSet':
    'prefix': 'URLQueryAllowedCharacterSet'
    'body': 'NSCharacterSet.URLQueryAllowedCharacterSet()'
  'NSCharacterSet.URLUserAllowedCharacterSet':
    'prefix': 'URLUserAllowedCharacterSet'
    'body': 'NSCharacterSet.URLUserAllowedCharacterSet()'
  'NSCharacterSet.alphanumericCharacterSet':
    'prefix': 'alphanumericCharacterSet'
    'body': 'NSCharacterSet.alphanumericCharacterSet()'
  'bitmapRepresentation':
    'prefix': 'bitmapRepresentation'
    'body': 'bitmapRepresentation()'
  'NSCharacterSet.capitalizedLetterCharacterSet':
    'prefix': 'capitalizedLetterCharacterSet'
    'body': 'NSCharacterSet.capitalizedLetterCharacterSet()'
  'characterIsMember:':
    'prefix': 'characterIsMember:'
    'body': 'characterIsMember(${1:unichar aCharacter})'
  'NSCharacterSet.characterSetWithBitmapRepresentation:':
    'prefix': 'characterSetWithBitmapRepresentation:'
    'body': 'NSCharacterSet.characterSetWithBitmapRepresentation(${1:NSData* data})'
  'NSCharacterSet.characterSetWithCharactersInString:':
    'prefix': 'characterSetWithCharactersInString:'
    'body': 'NSCharacterSet.characterSetWithCharactersInString(${1:NSString* aString})'
  'NSCharacterSet.characterSetWithContentsOfFile:':
    'prefix': 'characterSetWithContentsOfFile:'
    'body': 'NSCharacterSet.characterSetWithContentsOfFile(${1:NSString* fName})'
  'NSCharacterSet.characterSetWithRange:':
    'prefix': 'characterSetWithRange:'
    'body': 'NSCharacterSet.characterSetWithRange(${1:NSRange aRange})'
  'NSCharacterSet.controlCharacterSet':
    'prefix': 'controlCharacterSet'
    'body': 'NSCharacterSet.controlCharacterSet()'
  'NSCharacterSet.decimalDigitCharacterSet':
    'prefix': 'decimalDigitCharacterSet'
    'body': 'NSCharacterSet.decimalDigitCharacterSet()'
  'NSCharacterSet.decomposableCharacterSet':
    'prefix': 'decomposableCharacterSet'
    'body': 'NSCharacterSet.decomposableCharacterSet()'
  'hasMemberInPlane:':
    'prefix': 'hasMemberInPlane:'
    'body': 'hasMemberInPlane(${1:uint8_t thePlane})'
  'NSCharacterSet.illegalCharacterSet':
    'prefix': 'illegalCharacterSet'
    'body': 'NSCharacterSet.illegalCharacterSet()'
  'invertedSet':
    'prefix': 'invertedSet'
    'body': 'invertedSet()'
  'isSupersetOfSet:':
    'prefix': 'isSupersetOfSet:'
    'body': 'isSupersetOfSet(${1:NSCharacterSet* theOtherSet})'
  'NSCharacterSet.letterCharacterSet':
    'prefix': 'letterCharacterSet'
    'body': 'NSCharacterSet.letterCharacterSet()'
  'longCharacterIsMember:':
    'prefix': 'longCharacterIsMember:'
    'body': 'longCharacterIsMember(${1:UTF32Char theLongChar})'
  'NSCharacterSet.lowercaseLetterCharacterSet':
    'prefix': 'lowercaseLetterCharacterSet'
    'body': 'NSCharacterSet.lowercaseLetterCharacterSet()'
  'NSCharacterSet.newlineCharacterSet':
    'prefix': 'newlineCharacterSet'
    'body': 'NSCharacterSet.newlineCharacterSet()'
  'NSCharacterSet.nonBaseCharacterSet':
    'prefix': 'nonBaseCharacterSet'
    'body': 'NSCharacterSet.nonBaseCharacterSet()'
  'NSCharacterSet.punctuationCharacterSet':
    'prefix': 'punctuationCharacterSet'
    'body': 'NSCharacterSet.punctuationCharacterSet()'
  'NSCharacterSet.symbolCharacterSet':
    'prefix': 'symbolCharacterSet'
    'body': 'NSCharacterSet.symbolCharacterSet()'
  'NSCharacterSet.uppercaseLetterCharacterSet':
    'prefix': 'uppercaseLetterCharacterSet'
    'body': 'NSCharacterSet.uppercaseLetterCharacterSet()'
  'NSCharacterSet.whitespaceAndNewlineCharacterSet':
    'prefix': 'whitespaceAndNewlineCharacterSet'
    'body': 'NSCharacterSet.whitespaceAndNewlineCharacterSet()'
  'NSCharacterSet.whitespaceCharacterSet':
    'prefix': 'whitespaceCharacterSet'
    'body': 'NSCharacterSet.whitespaceCharacterSet()'
  'allowedClasses':
    'prefix': 'allowedClasses'
    'body': 'allowedClasses()'
  'allowsKeyedCoding':
    'prefix': 'allowsKeyedCoding'
    'body': 'allowsKeyedCoding()'
  'containsValueForKey:':
    'prefix': 'containsValueForKey:'
    'body': 'containsValueForKey(${1:NSString* key})'
  'decodeArrayOfObjCType:count:at:':
    'prefix': 'decodeArrayOfObjCType:count:at:'
    'body': 'decodeArrayOfObjCType(${1:char* itemType}, count:${2:NSUInteger count}, at:${3:void* array})'
  'decodeBoolForKey:':
    'prefix': 'decodeBoolForKey:'
    'body': 'decodeBoolForKey(${1:NSString* key})'
  'decodeBytesForKey:returnedLength:':
    'prefix': 'decodeBytesForKey:returnedLength:'
    'body': 'decodeBytesForKey(${1:NSString* key}, returnedLength:${2:NSUInteger* lengthp})'
  'decodeBytesWithReturnedLength:':
    'prefix': 'decodeBytesWithReturnedLength:'
    'body': 'decodeBytesWithReturnedLength(${1:NSUInteger* lengthp})'
  'decodeDataObject':
    'prefix': 'decodeDataObject'
    'body': 'decodeDataObject()'
  'decodeDoubleForKey:':
    'prefix': 'decodeDoubleForKey:'
    'body': 'decodeDoubleForKey(${1:NSString* key})'
  'decodeFloatForKey:':
    'prefix': 'decodeFloatForKey:'
    'body': 'decodeFloatForKey(${1:NSString* key})'
  'decodeInt32ForKey:':
    'prefix': 'decodeInt32ForKey:'
    'body': 'decodeInt32ForKey(${1:NSString* key})'
  'decodeInt64ForKey:':
    'prefix': 'decodeInt64ForKey:'
    'body': 'decodeInt64ForKey(${1:NSString* key})'
  'decodeIntForKey:':
    'prefix': 'decodeIntForKey:'
    'body': 'decodeIntForKey(${1:NSString* key})'
  'decodeIntegerForKey:':
    'prefix': 'decodeIntegerForKey:'
    'body': 'decodeIntegerForKey(${1:NSString* key})'
  'decodeObject':
    'prefix': 'decodeObject'
    'body': 'decodeObject()'
  'decodeObjectForKey:':
    'prefix': 'decodeObjectForKey:'
    'body': 'decodeObjectForKey(${1:NSString* key})'
  'decodeObjectOfClass:forKey:':
    'prefix': 'decodeObjectOfClass:forKey:'
    'body': 'decodeObjectOfClass(${1:Class aClass}, forKey:${2:NSString* key})'
  'decodeObjectOfClasses:forKey:':
    'prefix': 'decodeObjectOfClasses:forKey:'
    'body': 'decodeObjectOfClasses(${1:NSSet* classes}, forKey:${2:NSString* key})'
  'decodePropertyListForKey:':
    'prefix': 'decodePropertyListForKey:'
    'body': 'decodePropertyListForKey(${1:NSString* key})'
  'decodeValueOfObjCType:at:':
    'prefix': 'decodeValueOfObjCType:at:'
    'body': 'decodeValueOfObjCType(${1:char* type}, at:${2:void* data})'
  'decodeValuesOfObjCTypes:':
    'prefix': 'decodeValuesOfObjCTypes:'
    'body': 'decodeValuesOfObjCTypes(${1:char* types})'
  'encodeArrayOfObjCType:count:at:':
    'prefix': 'encodeArrayOfObjCType:count:at:'
    'body': 'encodeArrayOfObjCType(${1:char* type}, count:${2:NSUInteger count}, at:${3:void* array})'
  'encodeBool:forKey:':
    'prefix': 'encodeBool:forKey:'
    'body': 'encodeBool(${1:BOOL boolv}, forKey:${2:NSString* key})'
  'encodeBycopyObject:':
    'prefix': 'encodeBycopyObject:'
    'body': 'encodeBycopyObject(${1:id anObject})'
  'encodeByrefObject:':
    'prefix': 'encodeByrefObject:'
    'body': 'encodeByrefObject(${1:id anObject})'
  'encodeBytes:length:':
    'prefix': 'encodeBytes:length:'
    'body': 'encodeBytes(${1:void* byteaddr}, length:${2:NSUInteger length})'
  'encodeBytes:length:forKey:':
    'prefix': 'encodeBytes:length:forKey:'
    'body': 'encodeBytes(${1:uint8_t* bytesp}, length:${2:NSUInteger lenv}, forKey:${3:NSString* key})'
  'encodeConditionalObject:':
    'prefix': 'encodeConditionalObject:'
    'body': 'encodeConditionalObject(${1:id object})'
  'encodeConditionalObject:forKey:':
    'prefix': 'encodeConditionalObject:forKey:'
    'body': 'encodeConditionalObject(${1:id objv}, forKey:${2:NSString* key})'
  'encodeDataObject:':
    'prefix': 'encodeDataObject:'
    'body': 'encodeDataObject(${1:NSData* data})'
  'encodeDouble:forKey:':
    'prefix': 'encodeDouble:forKey:'
    'body': 'encodeDouble(${1:double realv}, forKey:${2:NSString* key})'
  'encodeFloat:forKey:':
    'prefix': 'encodeFloat:forKey:'
    'body': 'encodeFloat(${1:float realv}, forKey:${2:NSString* key})'
  'encodeInt32:forKey:':
    'prefix': 'encodeInt32:forKey:'
    'body': 'encodeInt32(${1:int32_t intv}, forKey:${2:NSString* key})'
  'encodeInt64:forKey:':
    'prefix': 'encodeInt64:forKey:'
    'body': 'encodeInt64(${1:int64_t intv}, forKey:${2:NSString* key})'
  'encodeInt:forKey:':
    'prefix': 'encodeInt:forKey:'
    'body': 'encodeInt(${1:int intv}, forKey:${2:NSString* key})'
  'encodeInteger:forKey:':
    'prefix': 'encodeInteger:forKey:'
    'body': 'encodeInteger(${1:NSInteger intv}, forKey:${2:NSString* key})'
  'encodeObject:':
    'prefix': 'encodeObject:'
    'body': 'encodeObject(${1:id object})'
  'encodeObject:forKey:':
    'prefix': 'encodeObject:forKey:'
    'body': 'encodeObject(${1:id objv}, forKey:${2:NSString* key})'
  'encodeRootObject:':
    'prefix': 'encodeRootObject:'
    'body': 'encodeRootObject(${1:id rootObject})'
  'encodeValueOfObjCType:at:':
    'prefix': 'encodeValueOfObjCType:at:'
    'body': 'encodeValueOfObjCType(${1:char* type}, at:${2:void* addr})'
  'encodeValuesOfObjCTypes:':
    'prefix': 'encodeValuesOfObjCTypes:'
    'body': 'encodeValuesOfObjCTypes(${1:char* types})'
  'objectZone':
    'prefix': 'objectZone'
    'body': 'objectZone()'
  'requiresSecureCoding':
    'prefix': 'requiresSecureCoding'
    'body': 'requiresSecureCoding()'
  'setObjectZone:':
    'prefix': 'setObjectZone:'
    'body': 'setObjectZone(${1:NSZone* zone})'
  'systemVersion':
    'prefix': 'systemVersion'
    'body': 'systemVersion()'
  'versionForClassName:':
    'prefix': 'versionForClassName:'
    'body': 'versionForClassName(${1:NSString* className})'
  'comparisonPredicateModifier':
    'prefix': 'comparisonPredicateModifier'
    'body': 'comparisonPredicateModifier()'
  'customSelector':
    'prefix': 'customSelector'
    'body': 'customSelector()'
  'initWithLeftExpression:rightExpression:customSelector:':
    'prefix': 'initWithLeftExpression:rightExpression:customSelector:'
    'body': 'initWithLeftExpression(${1:NSExpression* lhs}, rightExpression:${2:NSExpression* rhs}, customSelector:${3:SEL selector})'
  'initWithLeftExpression:rightExpression:modifier:type:options:':
    'prefix': 'initWithLeftExpression:rightExpression:modifier:type:options:'
    'body': 'initWithLeftExpression(${1:NSExpression* lhs}, rightExpression:${2:NSExpression* rhs}, modifier:${3:NSComparisonPredicateModifier modifier}, type:${4:NSPredicateOperatorType type}, options:${5:NSComparisonPredicateOptions options})'
  'leftExpression':
    'prefix': 'leftExpression'
    'body': 'leftExpression()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'predicateOperatorType':
    'prefix': 'predicateOperatorType'
    'body': 'predicateOperatorType()'
  'NSComparisonPredicate.predicateWithLeftExpression:rightExpression:customSelector:':
    'prefix': 'predicateWithLeftExpression:rightExpression:customSelector:'
    'body': 'NSComparisonPredicate.predicateWithLeftExpression(${1:NSExpression* lhs}, rightExpression:${2:NSExpression* rhs}, customSelector:${3:SEL selector})'
  'NSComparisonPredicate.predicateWithLeftExpression:rightExpression:modifier:type:options:':
    'prefix': 'predicateWithLeftExpression:rightExpression:modifier:type:options:'
    'body': 'NSComparisonPredicate.predicateWithLeftExpression(${1:NSExpression* lhs}, rightExpression:${2:NSExpression* rhs}, modifier:${3:NSComparisonPredicateModifier modifier}, type:${4:NSPredicateOperatorType type}, options:${5:NSComparisonPredicateOptions options})'
  'rightExpression':
    'prefix': 'rightExpression'
    'body': 'rightExpression()'
  'NSCompoundPredicate.andPredicateWithSubpredicates:':
    'prefix': 'andPredicateWithSubpredicates:'
    'body': 'NSCompoundPredicate.andPredicateWithSubpredicates(${1:NSArray* subpredicates})'
  'compoundPredicateType':
    'prefix': 'compoundPredicateType'
    'body': 'compoundPredicateType()'
  'initWithType:subpredicates:':
    'prefix': 'initWithType:subpredicates:'
    'body': 'initWithType(${1:NSCompoundPredicateType type}, subpredicates:${2:NSArray* subpredicates})'
  'NSCompoundPredicate.notPredicateWithSubpredicate:':
    'prefix': 'notPredicateWithSubpredicate:'
    'body': 'NSCompoundPredicate.notPredicateWithSubpredicate(${1:NSPredicate* predicate})'
  'NSCompoundPredicate.orPredicateWithSubpredicates:':
    'prefix': 'orPredicateWithSubpredicates:'
    'body': 'NSCompoundPredicate.orPredicateWithSubpredicates(${1:NSArray* subpredicates})'
  'subpredicates':
    'prefix': 'subpredicates'
    'body': 'subpredicates()'
  'broadcast':
    'prefix': 'broadcast'
    'body': 'broadcast()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'signal':
    'prefix': 'signal'
    'body': 'signal()'
  'wait':
    'prefix': 'wait'
    'body': 'wait()'
  'waitUntilDate:':
    'prefix': 'waitUntilDate:'
    'body': 'waitUntilDate(${1:NSDate* limit})'
  'condition':
    'prefix': 'condition'
    'body': 'condition()'
  'initWithCondition:':
    'prefix': 'initWithCondition:'
    'body': 'initWithCondition(${1:NSInteger condition})'
  'lockBeforeDate:':
    'prefix': 'lockBeforeDate:'
    'body': 'lockBeforeDate(${1:NSDate* limit})'
  'lockWhenCondition:':
    'prefix': 'lockWhenCondition:'
    'body': 'lockWhenCondition(${1:NSInteger condition})'
  'lockWhenCondition:beforeDate:':
    'prefix': 'lockWhenCondition:beforeDate:'
    'body': 'lockWhenCondition(${1:NSInteger condition}, beforeDate:${2:NSDate* limit})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'tryLock':
    'prefix': 'tryLock'
    'body': 'tryLock()'
  'tryLockWhenCondition:':
    'prefix': 'tryLockWhenCondition:'
    'body': 'tryLockWhenCondition(${1:NSInteger condition})'
  'unlockWithCondition:':
    'prefix': 'unlockWithCondition:'
    'body': 'unlockWithCondition(${1:NSInteger condition})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'countForObject:':
    'prefix': 'countForObject:'
    'body': 'countForObject(${1:id object})'
  'initWithArray:':
    'prefix': 'initWithArray:'
    'body': 'initWithArray(${1:NSArray* array})'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger numItems})'
  'initWithSet:':
    'prefix': 'initWithSet:'
    'body': 'initWithSet(${1:NSSet* set})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'base64EncodedDataWithOptions:':
    'prefix': 'base64EncodedDataWithOptions:'
    'body': 'base64EncodedDataWithOptions(${1:NSDataBase64EncodingOptions options})'
  'base64EncodedStringWithOptions:':
    'prefix': 'base64EncodedStringWithOptions:'
    'body': 'base64EncodedStringWithOptions(${1:NSDataBase64EncodingOptions options})'
  'base64Encoding':
    'prefix': 'base64Encoding'
    'body': 'base64Encoding()'
  'bytes':
    'prefix': 'bytes'
    'body': 'bytes()'
  'NSData.data':
    'prefix': 'data'
    'body': 'NSData.data()'
  'NSData.dataWithBytes:length:':
    'prefix': 'dataWithBytes:length:'
    'body': 'NSData.dataWithBytes(${1:void* bytes}, length:${2:NSUInteger length})'
  'NSData.dataWithBytesNoCopy:length:':
    'prefix': 'dataWithBytesNoCopy:length:'
    'body': 'NSData.dataWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger length})'
  'NSData.dataWithBytesNoCopy:length:freeWhenDone:':
    'prefix': 'dataWithBytesNoCopy:length:freeWhenDone:'
    'body': 'NSData.dataWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger length}, freeWhenDone:${3:BOOL b})'
  'NSData.dataWithContentsOfFile:':
    'prefix': 'dataWithContentsOfFile:'
    'body': 'NSData.dataWithContentsOfFile(${1:NSString* path})'
  'NSData.dataWithContentsOfFile:options:error:':
    'prefix': 'dataWithContentsOfFile:options:error:'
    'body': 'NSData.dataWithContentsOfFile(${1:NSString* path}, options:${2:NSDataReadingOptions readOptionsMask}, error:${3:NSError** errorPtr})'
  'NSData.dataWithContentsOfMappedFile:':
    'prefix': 'dataWithContentsOfMappedFile:'
    'body': 'NSData.dataWithContentsOfMappedFile(${1:NSString* path})'
  'NSData.dataWithContentsOfURL:':
    'prefix': 'dataWithContentsOfURL:'
    'body': 'NSData.dataWithContentsOfURL(${1:NSURL* url})'
  'NSData.dataWithContentsOfURL:options:error:':
    'prefix': 'dataWithContentsOfURL:options:error:'
    'body': 'NSData.dataWithContentsOfURL(${1:NSURL* url}, options:${2:NSDataReadingOptions readOptionsMask}, error:${3:NSError** errorPtr})'
  'NSData.dataWithData:':
    'prefix': 'dataWithData:'
    'body': 'NSData.dataWithData(${1:NSData* data})'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'enumerateByteRangesUsingBlock:':
    'prefix': 'enumerateByteRangesUsingBlock:'
    'body': 'enumerateByteRangesUsingBlock(${1:void (^)(void *, NSRange, BOOL *) block})'
  'getBytes:':
    'prefix': 'getBytes:'
    'body': 'getBytes(${1:void* buffer})'
  'getBytes:length:':
    'prefix': 'getBytes:length:'
    'body': 'getBytes(${1:void* buffer}, length:${2:NSUInteger length})'
  'getBytes:range:':
    'prefix': 'getBytes:range:'
    'body': 'getBytes(${1:void* buffer}, range:${2:NSRange range})'
  'initWithBase64EncodedData:options:':
    'prefix': 'initWithBase64EncodedData:options:'
    'body': 'initWithBase64EncodedData(${1:NSData* base64Data}, options:${2:NSDataBase64DecodingOptions options})'
  'initWithBase64EncodedString:options:':
    'prefix': 'initWithBase64EncodedString:options:'
    'body': 'initWithBase64EncodedString(${1:NSString* base64String}, options:${2:NSDataBase64DecodingOptions options})'
  'initWithBase64Encoding:':
    'prefix': 'initWithBase64Encoding:'
    'body': 'initWithBase64Encoding(${1:NSString* base64String})'
  'initWithBytes:length:':
    'prefix': 'initWithBytes:length:'
    'body': 'initWithBytes(${1:void* bytes}, length:${2:NSUInteger length})'
  'initWithBytesNoCopy:length:':
    'prefix': 'initWithBytesNoCopy:length:'
    'body': 'initWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger length})'
  'initWithBytesNoCopy:length:deallocator:':
    'prefix': 'initWithBytesNoCopy:length:deallocator:'
    'body': 'initWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger length}, deallocator:${3:void (^)(void *, NSUInteger) deallocator})'
  'initWithBytesNoCopy:length:freeWhenDone:':
    'prefix': 'initWithBytesNoCopy:length:freeWhenDone:'
    'body': 'initWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger length}, freeWhenDone:${3:BOOL b})'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* path})'
  'initWithContentsOfFile:options:error:':
    'prefix': 'initWithContentsOfFile:options:error:'
    'body': 'initWithContentsOfFile(${1:NSString* path}, options:${2:NSDataReadingOptions readOptionsMask}, error:${3:NSError** errorPtr})'
  'initWithContentsOfMappedFile:':
    'prefix': 'initWithContentsOfMappedFile:'
    'body': 'initWithContentsOfMappedFile(${1:NSString* path})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithContentsOfURL:options:error:':
    'prefix': 'initWithContentsOfURL:options:error:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, options:${2:NSDataReadingOptions readOptionsMask}, error:${3:NSError** errorPtr})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'isEqualToData:':
    'prefix': 'isEqualToData:'
    'body': 'isEqualToData(${1:NSData* other})'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'rangeOfData:options:range:':
    'prefix': 'rangeOfData:options:range:'
    'body': 'rangeOfData(${1:NSData* dataToFind}, options:${2:NSDataSearchOptions mask}, range:${3:NSRange searchRange})'
  'subdataWithRange:':
    'prefix': 'subdataWithRange:'
    'body': 'subdataWithRange(${1:NSRange range})'
  'writeToFile:atomically:':
    'prefix': 'writeToFile:atomically:'
    'body': 'writeToFile(${1:NSString* path}, atomically:${2:BOOL useAuxiliaryFile})'
  'writeToFile:options:error:':
    'prefix': 'writeToFile:options:error:'
    'body': 'writeToFile(${1:NSString* path}, options:${2:NSDataWritingOptions writeOptionsMask}, error:${3:NSError** errorPtr})'
  'writeToURL:atomically:':
    'prefix': 'writeToURL:atomically:'
    'body': 'writeToURL(${1:NSURL* url}, atomically:${2:BOOL atomically})'
  'writeToURL:options:error:':
    'prefix': 'writeToURL:options:error:'
    'body': 'writeToURL(${1:NSURL* url}, options:${2:NSDataWritingOptions writeOptionsMask}, error:${3:NSError** errorPtr})'
  'checkingTypes':
    'prefix': 'checkingTypes'
    'body': 'checkingTypes()'
  'NSDataDetector.dataDetectorWithTypes:error:':
    'prefix': 'dataDetectorWithTypes:error:'
    'body': 'NSDataDetector.dataDetectorWithTypes(${1:NSTextCheckingTypes checkingTypes}, error:${2:NSError** error})'
  'initWithTypes:error:':
    'prefix': 'initWithTypes:error:'
    'body': 'initWithTypes(${1:NSTextCheckingTypes checkingTypes}, error:${2:NSError** error})'
  'addTimeInterval:':
    'prefix': 'addTimeInterval:'
    'body': 'addTimeInterval(${1:NSTimeInterval seconds})'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:NSDate* other})'
  'NSDate.date':
    'prefix': 'date'
    'body': 'NSDate.date()'
  'dateByAddingTimeInterval:':
    'prefix': 'dateByAddingTimeInterval:'
    'body': 'dateByAddingTimeInterval(${1:NSTimeInterval ti})'
  'NSDate.dateWithTimeInterval:sinceDate:':
    'prefix': 'dateWithTimeInterval:sinceDate:'
    'body': 'NSDate.dateWithTimeInterval(${1:NSTimeInterval secsToBeAdded}, sinceDate:${2:NSDate* date})'
  'NSDate.dateWithTimeIntervalSince1970:':
    'prefix': 'dateWithTimeIntervalSince1970:'
    'body': 'NSDate.dateWithTimeIntervalSince1970(${1:NSTimeInterval secs})'
  'NSDate.dateWithTimeIntervalSinceNow:':
    'prefix': 'dateWithTimeIntervalSinceNow:'
    'body': 'NSDate.dateWithTimeIntervalSinceNow(${1:NSTimeInterval secs})'
  'NSDate.dateWithTimeIntervalSinceReferenceDate:':
    'prefix': 'dateWithTimeIntervalSinceReferenceDate:'
    'body': 'NSDate.dateWithTimeIntervalSinceReferenceDate(${1:NSTimeInterval ti})'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'NSDate.distantFuture':
    'prefix': 'distantFuture'
    'body': 'NSDate.distantFuture()'
  'NSDate.distantPast':
    'prefix': 'distantPast'
    'body': 'NSDate.distantPast()'
  'earlierDate:':
    'prefix': 'earlierDate:'
    'body': 'earlierDate(${1:NSDate* anotherDate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithTimeInterval:sinceDate:':
    'prefix': 'initWithTimeInterval:sinceDate:'
    'body': 'initWithTimeInterval(${1:NSTimeInterval secsToBeAdded}, sinceDate:${2:NSDate* date})'
  'initWithTimeIntervalSince1970:':
    'prefix': 'initWithTimeIntervalSince1970:'
    'body': 'initWithTimeIntervalSince1970(${1:NSTimeInterval secs})'
  'initWithTimeIntervalSinceNow:':
    'prefix': 'initWithTimeIntervalSinceNow:'
    'body': 'initWithTimeIntervalSinceNow(${1:NSTimeInterval secs})'
  'initWithTimeIntervalSinceReferenceDate:':
    'prefix': 'initWithTimeIntervalSinceReferenceDate:'
    'body': 'initWithTimeIntervalSinceReferenceDate(${1:NSTimeInterval ti})'
  'isEqualToDate:':
    'prefix': 'isEqualToDate:'
    'body': 'isEqualToDate(${1:NSDate* otherDate})'
  'laterDate:':
    'prefix': 'laterDate:'
    'body': 'laterDate(${1:NSDate* anotherDate})'
  'timeIntervalSince1970':
    'prefix': 'timeIntervalSince1970'
    'body': 'timeIntervalSince1970()'
  'timeIntervalSinceDate:':
    'prefix': 'timeIntervalSinceDate:'
    'body': 'timeIntervalSinceDate(${1:NSDate* anotherDate})'
  'timeIntervalSinceNow':
    'prefix': 'timeIntervalSinceNow'
    'body': 'timeIntervalSinceNow()'
  'NSDate.timeIntervalSinceReferenceDate':
    'prefix': 'timeIntervalSinceReferenceDate'
    'body': 'NSDate.timeIntervalSinceReferenceDate()'
  'timeIntervalSinceReferenceDate':
    'prefix': 'timeIntervalSinceReferenceDate'
    'body': 'timeIntervalSinceReferenceDate()'
  'calendar':
    'prefix': 'calendar'
    'body': 'calendar()'
  'date':
    'prefix': 'date'
    'body': 'date()'
  'day':
    'prefix': 'day'
    'body': 'day()'
  'era':
    'prefix': 'era'
    'body': 'era()'
  'hour':
    'prefix': 'hour'
    'body': 'hour()'
  'isLeapMonth':
    'prefix': 'isLeapMonth'
    'body': 'isLeapMonth()'
  'minute':
    'prefix': 'minute'
    'body': 'minute()'
  'month':
    'prefix': 'month'
    'body': 'month()'
  'quarter':
    'prefix': 'quarter'
    'body': 'quarter()'
  'second':
    'prefix': 'second'
    'body': 'second()'
  'setCalendar:':
    'prefix': 'setCalendar:'
    'body': 'setCalendar(${1:NSCalendar* cal})'
  'setDay:':
    'prefix': 'setDay:'
    'body': 'setDay(${1:NSInteger v})'
  'setEra:':
    'prefix': 'setEra:'
    'body': 'setEra(${1:NSInteger v})'
  'setHour:':
    'prefix': 'setHour:'
    'body': 'setHour(${1:NSInteger v})'
  'setLeapMonth:':
    'prefix': 'setLeapMonth:'
    'body': 'setLeapMonth(${1:BOOL lm})'
  'setMinute:':
    'prefix': 'setMinute:'
    'body': 'setMinute(${1:NSInteger v})'
  'setMonth:':
    'prefix': 'setMonth:'
    'body': 'setMonth(${1:NSInteger v})'
  'setQuarter:':
    'prefix': 'setQuarter:'
    'body': 'setQuarter(${1:NSInteger v})'
  'setSecond:':
    'prefix': 'setSecond:'
    'body': 'setSecond(${1:NSInteger v})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* tz})'
  'setWeek:':
    'prefix': 'setWeek:'
    'body': 'setWeek(${1:NSInteger v})'
  'setWeekOfMonth:':
    'prefix': 'setWeekOfMonth:'
    'body': 'setWeekOfMonth(${1:NSInteger w})'
  'setWeekOfYear:':
    'prefix': 'setWeekOfYear:'
    'body': 'setWeekOfYear(${1:NSInteger w})'
  'setWeekday:':
    'prefix': 'setWeekday:'
    'body': 'setWeekday(${1:NSInteger v})'
  'setWeekdayOrdinal:':
    'prefix': 'setWeekdayOrdinal:'
    'body': 'setWeekdayOrdinal(${1:NSInteger v})'
  'setYear:':
    'prefix': 'setYear:'
    'body': 'setYear(${1:NSInteger v})'
  'setYearForWeekOfYear:':
    'prefix': 'setYearForWeekOfYear:'
    'body': 'setYearForWeekOfYear(${1:NSInteger y})'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'week':
    'prefix': 'week'
    'body': 'week()'
  'weekOfMonth':
    'prefix': 'weekOfMonth'
    'body': 'weekOfMonth()'
  'weekOfYear':
    'prefix': 'weekOfYear'
    'body': 'weekOfYear()'
  'weekday':
    'prefix': 'weekday'
    'body': 'weekday()'
  'weekdayOrdinal':
    'prefix': 'weekdayOrdinal'
    'body': 'weekdayOrdinal()'
  'year':
    'prefix': 'year'
    'body': 'year()'
  'yearForWeekOfYear':
    'prefix': 'yearForWeekOfYear'
    'body': 'yearForWeekOfYear()'
  'AMSymbol':
    'prefix': 'AMSymbol'
    'body': 'AMSymbol()'
  'PMSymbol':
    'prefix': 'PMSymbol'
    'body': 'PMSymbol()'
  'calendar':
    'prefix': 'calendar'
    'body': 'calendar()'
  'dateFormat':
    'prefix': 'dateFormat'
    'body': 'dateFormat()'
  'NSDateFormatter.dateFormatFromTemplate:options:locale:':
    'prefix': 'dateFormatFromTemplate:options:locale:'
    'body': 'NSDateFormatter.dateFormatFromTemplate(${1:NSString* tmplate}, options:${2:NSUInteger opts}, locale:${3:NSLocale* locale})'
  'dateFromString:':
    'prefix': 'dateFromString:'
    'body': 'dateFromString(${1:NSString* string})'
  'dateStyle':
    'prefix': 'dateStyle'
    'body': 'dateStyle()'
  'defaultDate':
    'prefix': 'defaultDate'
    'body': 'defaultDate()'
  'NSDateFormatter.defaultFormatterBehavior':
    'prefix': 'defaultFormatterBehavior'
    'body': 'NSDateFormatter.defaultFormatterBehavior()'
  'doesRelativeDateFormatting':
    'prefix': 'doesRelativeDateFormatting'
    'body': 'doesRelativeDateFormatting()'
  'eraSymbols':
    'prefix': 'eraSymbols'
    'body': 'eraSymbols()'
  'formatterBehavior':
    'prefix': 'formatterBehavior'
    'body': 'formatterBehavior()'
  'generatesCalendarDates':
    'prefix': 'generatesCalendarDates'
    'body': 'generatesCalendarDates()'
  'getObjectValue:forString:range:error:':
    'prefix': 'getObjectValue:forString:range:error:'
    'body': 'getObjectValue(${1:id* obj}, forString:${2:NSString* string}, range:${3:NSRange* rangep}, error:${4:NSError** error})'
  'gregorianStartDate':
    'prefix': 'gregorianStartDate'
    'body': 'gregorianStartDate()'
  'isLenient':
    'prefix': 'isLenient'
    'body': 'isLenient()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'NSDateFormatter.localizedStringFromDate:dateStyle:timeStyle:':
    'prefix': 'localizedStringFromDate:dateStyle:timeStyle:'
    'body': 'NSDateFormatter.localizedStringFromDate(${1:NSDate* date}, dateStyle:${2:NSDateFormatterStyle dstyle}, timeStyle:${3:NSDateFormatterStyle tstyle})'
  'longEraSymbols':
    'prefix': 'longEraSymbols'
    'body': 'longEraSymbols()'
  'monthSymbols':
    'prefix': 'monthSymbols'
    'body': 'monthSymbols()'
  'quarterSymbols':
    'prefix': 'quarterSymbols'
    'body': 'quarterSymbols()'
  'setAMSymbol:':
    'prefix': 'setAMSymbol:'
    'body': 'setAMSymbol(${1:NSString* string})'
  'setCalendar:':
    'prefix': 'setCalendar:'
    'body': 'setCalendar(${1:NSCalendar* calendar})'
  'setDateFormat:':
    'prefix': 'setDateFormat:'
    'body': 'setDateFormat(${1:NSString* string})'
  'setDateStyle:':
    'prefix': 'setDateStyle:'
    'body': 'setDateStyle(${1:NSDateFormatterStyle style})'
  'setDefaultDate:':
    'prefix': 'setDefaultDate:'
    'body': 'setDefaultDate(${1:NSDate* date})'
  'NSDateFormatter.setDefaultFormatterBehavior:':
    'prefix': 'setDefaultFormatterBehavior:'
    'body': 'NSDateFormatter.setDefaultFormatterBehavior(${1:NSDateFormatterBehavior behavior})'
  'setDoesRelativeDateFormatting:':
    'prefix': 'setDoesRelativeDateFormatting:'
    'body': 'setDoesRelativeDateFormatting(${1:BOOL b})'
  'setEraSymbols:':
    'prefix': 'setEraSymbols:'
    'body': 'setEraSymbols(${1:NSArray* array})'
  'setFormatterBehavior:':
    'prefix': 'setFormatterBehavior:'
    'body': 'setFormatterBehavior(${1:NSDateFormatterBehavior behavior})'
  'setGeneratesCalendarDates:':
    'prefix': 'setGeneratesCalendarDates:'
    'body': 'setGeneratesCalendarDates(${1:BOOL b})'
  'setGregorianStartDate:':
    'prefix': 'setGregorianStartDate:'
    'body': 'setGregorianStartDate(${1:NSDate* date})'
  'setLenient:':
    'prefix': 'setLenient:'
    'body': 'setLenient(${1:BOOL b})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* locale})'
  'setLongEraSymbols:':
    'prefix': 'setLongEraSymbols:'
    'body': 'setLongEraSymbols(${1:NSArray* array})'
  'setMonthSymbols:':
    'prefix': 'setMonthSymbols:'
    'body': 'setMonthSymbols(${1:NSArray* array})'
  'setPMSymbol:':
    'prefix': 'setPMSymbol:'
    'body': 'setPMSymbol(${1:NSString* string})'
  'setQuarterSymbols:':
    'prefix': 'setQuarterSymbols:'
    'body': 'setQuarterSymbols(${1:NSArray* array})'
  'setShortMonthSymbols:':
    'prefix': 'setShortMonthSymbols:'
    'body': 'setShortMonthSymbols(${1:NSArray* array})'
  'setShortQuarterSymbols:':
    'prefix': 'setShortQuarterSymbols:'
    'body': 'setShortQuarterSymbols(${1:NSArray* array})'
  'setShortStandaloneMonthSymbols:':
    'prefix': 'setShortStandaloneMonthSymbols:'
    'body': 'setShortStandaloneMonthSymbols(${1:NSArray* array})'
  'setShortStandaloneQuarterSymbols:':
    'prefix': 'setShortStandaloneQuarterSymbols:'
    'body': 'setShortStandaloneQuarterSymbols(${1:NSArray* array})'
  'setShortStandaloneWeekdaySymbols:':
    'prefix': 'setShortStandaloneWeekdaySymbols:'
    'body': 'setShortStandaloneWeekdaySymbols(${1:NSArray* array})'
  'setShortWeekdaySymbols:':
    'prefix': 'setShortWeekdaySymbols:'
    'body': 'setShortWeekdaySymbols(${1:NSArray* array})'
  'setStandaloneMonthSymbols:':
    'prefix': 'setStandaloneMonthSymbols:'
    'body': 'setStandaloneMonthSymbols(${1:NSArray* array})'
  'setStandaloneQuarterSymbols:':
    'prefix': 'setStandaloneQuarterSymbols:'
    'body': 'setStandaloneQuarterSymbols(${1:NSArray* array})'
  'setStandaloneWeekdaySymbols:':
    'prefix': 'setStandaloneWeekdaySymbols:'
    'body': 'setStandaloneWeekdaySymbols(${1:NSArray* array})'
  'setTimeStyle:':
    'prefix': 'setTimeStyle:'
    'body': 'setTimeStyle(${1:NSDateFormatterStyle style})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* tz})'
  'setTwoDigitStartDate:':
    'prefix': 'setTwoDigitStartDate:'
    'body': 'setTwoDigitStartDate(${1:NSDate* date})'
  'setVeryShortMonthSymbols:':
    'prefix': 'setVeryShortMonthSymbols:'
    'body': 'setVeryShortMonthSymbols(${1:NSArray* array})'
  'setVeryShortStandaloneMonthSymbols:':
    'prefix': 'setVeryShortStandaloneMonthSymbols:'
    'body': 'setVeryShortStandaloneMonthSymbols(${1:NSArray* array})'
  'setVeryShortStandaloneWeekdaySymbols:':
    'prefix': 'setVeryShortStandaloneWeekdaySymbols:'
    'body': 'setVeryShortStandaloneWeekdaySymbols(${1:NSArray* array})'
  'setVeryShortWeekdaySymbols:':
    'prefix': 'setVeryShortWeekdaySymbols:'
    'body': 'setVeryShortWeekdaySymbols(${1:NSArray* array})'
  'setWeekdaySymbols:':
    'prefix': 'setWeekdaySymbols:'
    'body': 'setWeekdaySymbols(${1:NSArray* array})'
  'shortMonthSymbols':
    'prefix': 'shortMonthSymbols'
    'body': 'shortMonthSymbols()'
  'shortQuarterSymbols':
    'prefix': 'shortQuarterSymbols'
    'body': 'shortQuarterSymbols()'
  'shortStandaloneMonthSymbols':
    'prefix': 'shortStandaloneMonthSymbols'
    'body': 'shortStandaloneMonthSymbols()'
  'shortStandaloneQuarterSymbols':
    'prefix': 'shortStandaloneQuarterSymbols'
    'body': 'shortStandaloneQuarterSymbols()'
  'shortStandaloneWeekdaySymbols':
    'prefix': 'shortStandaloneWeekdaySymbols'
    'body': 'shortStandaloneWeekdaySymbols()'
  'shortWeekdaySymbols':
    'prefix': 'shortWeekdaySymbols'
    'body': 'shortWeekdaySymbols()'
  'standaloneMonthSymbols':
    'prefix': 'standaloneMonthSymbols'
    'body': 'standaloneMonthSymbols()'
  'standaloneQuarterSymbols':
    'prefix': 'standaloneQuarterSymbols'
    'body': 'standaloneQuarterSymbols()'
  'standaloneWeekdaySymbols':
    'prefix': 'standaloneWeekdaySymbols'
    'body': 'standaloneWeekdaySymbols()'
  'stringFromDate:':
    'prefix': 'stringFromDate:'
    'body': 'stringFromDate(${1:NSDate* date})'
  'timeStyle':
    'prefix': 'timeStyle'
    'body': 'timeStyle()'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'twoDigitStartDate':
    'prefix': 'twoDigitStartDate'
    'body': 'twoDigitStartDate()'
  'veryShortMonthSymbols':
    'prefix': 'veryShortMonthSymbols'
    'body': 'veryShortMonthSymbols()'
  'veryShortStandaloneMonthSymbols':
    'prefix': 'veryShortStandaloneMonthSymbols'
    'body': 'veryShortStandaloneMonthSymbols()'
  'veryShortStandaloneWeekdaySymbols':
    'prefix': 'veryShortStandaloneWeekdaySymbols'
    'body': 'veryShortStandaloneWeekdaySymbols()'
  'veryShortWeekdaySymbols':
    'prefix': 'veryShortWeekdaySymbols'
    'body': 'veryShortWeekdaySymbols()'
  'weekdaySymbols':
    'prefix': 'weekdaySymbols'
    'body': 'weekdaySymbols()'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:NSNumber* decimalNumber})'
  'decimalNumberByAdding:':
    'prefix': 'decimalNumberByAdding:'
    'body': 'decimalNumberByAdding(${1:NSDecimalNumber* decimalNumber})'
  'decimalNumberByAdding:withBehavior:':
    'prefix': 'decimalNumberByAdding:withBehavior:'
    'body': 'decimalNumberByAdding(${1:NSDecimalNumber* decimalNumber}, withBehavior:${2:id behavior})'
  'decimalNumberByDividingBy:':
    'prefix': 'decimalNumberByDividingBy:'
    'body': 'decimalNumberByDividingBy(${1:NSDecimalNumber* decimalNumber})'
  'decimalNumberByDividingBy:withBehavior:':
    'prefix': 'decimalNumberByDividingBy:withBehavior:'
    'body': 'decimalNumberByDividingBy(${1:NSDecimalNumber* decimalNumber}, withBehavior:${2:id behavior})'
  'decimalNumberByMultiplyingBy:':
    'prefix': 'decimalNumberByMultiplyingBy:'
    'body': 'decimalNumberByMultiplyingBy(${1:NSDecimalNumber* decimalNumber})'
  'decimalNumberByMultiplyingBy:withBehavior:':
    'prefix': 'decimalNumberByMultiplyingBy:withBehavior:'
    'body': 'decimalNumberByMultiplyingBy(${1:NSDecimalNumber* decimalNumber}, withBehavior:${2:id behavior})'
  'decimalNumberByMultiplyingByPowerOf10:':
    'prefix': 'decimalNumberByMultiplyingByPowerOf10:'
    'body': 'decimalNumberByMultiplyingByPowerOf10(${1:short power})'
  'decimalNumberByMultiplyingByPowerOf10:withBehavior:':
    'prefix': 'decimalNumberByMultiplyingByPowerOf10:withBehavior:'
    'body': 'decimalNumberByMultiplyingByPowerOf10(${1:short power}, withBehavior:${2:id behavior})'
  'decimalNumberByRaisingToPower:':
    'prefix': 'decimalNumberByRaisingToPower:'
    'body': 'decimalNumberByRaisingToPower(${1:NSUInteger power})'
  'decimalNumberByRaisingToPower:withBehavior:':
    'prefix': 'decimalNumberByRaisingToPower:withBehavior:'
    'body': 'decimalNumberByRaisingToPower(${1:NSUInteger power}, withBehavior:${2:id behavior})'
  'decimalNumberByRoundingAccordingToBehavior:':
    'prefix': 'decimalNumberByRoundingAccordingToBehavior:'
    'body': 'decimalNumberByRoundingAccordingToBehavior(${1:id behavior})'
  'decimalNumberBySubtracting:':
    'prefix': 'decimalNumberBySubtracting:'
    'body': 'decimalNumberBySubtracting(${1:NSDecimalNumber* decimalNumber})'
  'decimalNumberBySubtracting:withBehavior:':
    'prefix': 'decimalNumberBySubtracting:withBehavior:'
    'body': 'decimalNumberBySubtracting(${1:NSDecimalNumber* decimalNumber}, withBehavior:${2:id behavior})'
  'NSDecimalNumber.decimalNumberWithDecimal:':
    'prefix': 'decimalNumberWithDecimal:'
    'body': 'NSDecimalNumber.decimalNumberWithDecimal(${1:NSDecimal dcm})'
  'NSDecimalNumber.decimalNumberWithMantissa:exponent:isNegative:':
    'prefix': 'decimalNumberWithMantissa:exponent:isNegative:'
    'body': 'NSDecimalNumber.decimalNumberWithMantissa(${1:unsigned long long mantissa}, exponent:${2:short exponent}, isNegative:${3:BOOL flag})'
  'NSDecimalNumber.decimalNumberWithString:':
    'prefix': 'decimalNumberWithString:'
    'body': 'NSDecimalNumber.decimalNumberWithString(${1:NSString* numberValue})'
  'NSDecimalNumber.decimalNumberWithString:locale:':
    'prefix': 'decimalNumberWithString:locale:'
    'body': 'NSDecimalNumber.decimalNumberWithString(${1:NSString* numberValue}, locale:${2:id locale})'
  'decimalValue':
    'prefix': 'decimalValue'
    'body': 'decimalValue()'
  'NSDecimalNumber.defaultBehavior':
    'prefix': 'defaultBehavior'
    'body': 'NSDecimalNumber.defaultBehavior()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'initWithDecimal:':
    'prefix': 'initWithDecimal:'
    'body': 'initWithDecimal(${1:NSDecimal dcm})'
  'initWithMantissa:exponent:isNegative:':
    'prefix': 'initWithMantissa:exponent:isNegative:'
    'body': 'initWithMantissa(${1:unsigned long long mantissa}, exponent:${2:short exponent}, isNegative:${3:BOOL flag})'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* numberValue})'
  'initWithString:locale:':
    'prefix': 'initWithString:locale:'
    'body': 'initWithString(${1:NSString* numberValue}, locale:${2:id locale})'
  'NSDecimalNumber.maximumDecimalNumber':
    'prefix': 'maximumDecimalNumber'
    'body': 'NSDecimalNumber.maximumDecimalNumber()'
  'NSDecimalNumber.minimumDecimalNumber':
    'prefix': 'minimumDecimalNumber'
    'body': 'NSDecimalNumber.minimumDecimalNumber()'
  'NSDecimalNumber.notANumber':
    'prefix': 'notANumber'
    'body': 'NSDecimalNumber.notANumber()'
  'objCType':
    'prefix': 'objCType'
    'body': 'objCType()'
  'NSDecimalNumber.one':
    'prefix': 'one'
    'body': 'NSDecimalNumber.one()'
  'NSDecimalNumber.setDefaultBehavior:':
    'prefix': 'setDefaultBehavior:'
    'body': 'NSDecimalNumber.setDefaultBehavior(${1:id behavior})'
  'NSDecimalNumber.zero':
    'prefix': 'zero'
    'body': 'NSDecimalNumber.zero()'
  'NSDecimalNumberHandler.decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:':
    'prefix': 'decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'
    'body': 'NSDecimalNumberHandler.decimalNumberHandlerWithRoundingMode(${1:NSRoundingMode roundingMode}, scale:${2:short scale}, raiseOnExactness:${3:BOOL exact}, raiseOnOverflow:${4:BOOL overflow}, raiseOnUnderflow:${5:BOOL underflow}, raiseOnDivideByZero:${6:BOOL divideByZero})'
  'NSDecimalNumberHandler.defaultDecimalNumberHandler':
    'prefix': 'defaultDecimalNumberHandler'
    'body': 'NSDecimalNumberHandler.defaultDecimalNumberHandler()'
  'initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:':
    'prefix': 'initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'
    'body': 'initWithRoundingMode(${1:NSRoundingMode roundingMode}, scale:${2:short scale}, raiseOnExactness:${3:BOOL exact}, raiseOnOverflow:${4:BOOL overflow}, raiseOnUnderflow:${5:BOOL underflow}, raiseOnDivideByZero:${6:BOOL divideByZero})'
  'allKeys':
    'prefix': 'allKeys'
    'body': 'allKeys()'
  'allKeysForObject:':
    'prefix': 'allKeysForObject:'
    'body': 'allKeysForObject(${1:id anObject})'
  'allValues':
    'prefix': 'allValues'
    'body': 'allValues()'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'descriptionInStringsFileFormat':
    'prefix': 'descriptionInStringsFileFormat'
    'body': 'descriptionInStringsFileFormat()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'descriptionWithLocale:indent:':
    'prefix': 'descriptionWithLocale:indent:'
    'body': 'descriptionWithLocale(${1:id locale}, indent:${2:NSUInteger level})'
  'NSDictionary.dictionary':
    'prefix': 'dictionary'
    'body': 'NSDictionary.dictionary()'
  'NSDictionary.dictionaryWithContentsOfFile:':
    'prefix': 'dictionaryWithContentsOfFile:'
    'body': 'NSDictionary.dictionaryWithContentsOfFile(${1:NSString* path})'
  'NSDictionary.dictionaryWithContentsOfURL:':
    'prefix': 'dictionaryWithContentsOfURL:'
    'body': 'NSDictionary.dictionaryWithContentsOfURL(${1:NSURL* url})'
  'NSDictionary.dictionaryWithDictionary:':
    'prefix': 'dictionaryWithDictionary:'
    'body': 'NSDictionary.dictionaryWithDictionary(${1:NSDictionary* dict})'
  'NSDictionary.dictionaryWithObject:forKey:':
    'prefix': 'dictionaryWithObject:forKey:'
    'body': 'NSDictionary.dictionaryWithObject(${1:id object}, forKey:${2:id key})'
  'NSDictionary.dictionaryWithObjects:forKeys:':
    'prefix': 'dictionaryWithObjects:forKeys:'
    'body': 'NSDictionary.dictionaryWithObjects(${1:NSArray* objects}, forKeys:${2:NSArray* keys})'
  'NSDictionary.dictionaryWithObjects:forKeys:count:':
    'prefix': 'dictionaryWithObjects:forKeys:count:'
    'body': 'NSDictionary.dictionaryWithObjects(${1:id* objects}, forKeys:${2:id* keys}, count:${3:NSUInteger cnt})'
  'NSDictionary.dictionaryWithObjectsAndKeys:':
    'prefix': 'dictionaryWithObjectsAndKeys:'
    'body': 'NSDictionary.dictionaryWithObjectsAndKeys(${1:id firstObject})'
  'enumerateKeysAndObjectsUsingBlock:':
    'prefix': 'enumerateKeysAndObjectsUsingBlock:'
    'body': 'enumerateKeysAndObjectsUsingBlock(${1:void (^)(id, id, BOOL *) block})'
  'enumerateKeysAndObjectsWithOptions:usingBlock:':
    'prefix': 'enumerateKeysAndObjectsWithOptions:usingBlock:'
    'body': 'enumerateKeysAndObjectsWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(id, id, BOOL *) block})'
  'fileCreationDate':
    'prefix': 'fileCreationDate'
    'body': 'fileCreationDate()'
  'fileExtensionHidden':
    'prefix': 'fileExtensionHidden'
    'body': 'fileExtensionHidden()'
  'fileGroupOwnerAccountID':
    'prefix': 'fileGroupOwnerAccountID'
    'body': 'fileGroupOwnerAccountID()'
  'fileGroupOwnerAccountName':
    'prefix': 'fileGroupOwnerAccountName'
    'body': 'fileGroupOwnerAccountName()'
  'fileHFSCreatorCode':
    'prefix': 'fileHFSCreatorCode'
    'body': 'fileHFSCreatorCode()'
  'fileHFSTypeCode':
    'prefix': 'fileHFSTypeCode'
    'body': 'fileHFSTypeCode()'
  'fileIsAppendOnly':
    'prefix': 'fileIsAppendOnly'
    'body': 'fileIsAppendOnly()'
  'fileIsImmutable':
    'prefix': 'fileIsImmutable'
    'body': 'fileIsImmutable()'
  'fileModificationDate':
    'prefix': 'fileModificationDate'
    'body': 'fileModificationDate()'
  'fileOwnerAccountID':
    'prefix': 'fileOwnerAccountID'
    'body': 'fileOwnerAccountID()'
  'fileOwnerAccountName':
    'prefix': 'fileOwnerAccountName'
    'body': 'fileOwnerAccountName()'
  'filePosixPermissions':
    'prefix': 'filePosixPermissions'
    'body': 'filePosixPermissions()'
  'fileSize':
    'prefix': 'fileSize'
    'body': 'fileSize()'
  'fileSystemFileNumber':
    'prefix': 'fileSystemFileNumber'
    'body': 'fileSystemFileNumber()'
  'fileSystemNumber':
    'prefix': 'fileSystemNumber'
    'body': 'fileSystemNumber()'
  'fileType':
    'prefix': 'fileType'
    'body': 'fileType()'
  'getObjects:andKeys:':
    'prefix': 'getObjects:andKeys:'
    'body': 'getObjects(${1:id* objects}, andKeys:${2:id* keys})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* path})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithDictionary:':
    'prefix': 'initWithDictionary:'
    'body': 'initWithDictionary(${1:NSDictionary* otherDictionary})'
  'initWithDictionary:copyItems:':
    'prefix': 'initWithDictionary:copyItems:'
    'body': 'initWithDictionary(${1:NSDictionary* otherDictionary}, copyItems:${2:BOOL flag})'
  'initWithObjects:forKeys:':
    'prefix': 'initWithObjects:forKeys:'
    'body': 'initWithObjects(${1:NSArray* objects}, forKeys:${2:NSArray* keys})'
  'initWithObjects:forKeys:count:':
    'prefix': 'initWithObjects:forKeys:count:'
    'body': 'initWithObjects(${1:id* objects}, forKeys:${2:id* keys}, count:${3:NSUInteger cnt})'
  'initWithObjectsAndKeys:':
    'prefix': 'initWithObjectsAndKeys:'
    'body': 'initWithObjectsAndKeys(${1:id firstObject})'
  'isEqualToDictionary:':
    'prefix': 'isEqualToDictionary:'
    'body': 'isEqualToDictionary(${1:NSDictionary* otherDictionary})'
  'keyEnumerator':
    'prefix': 'keyEnumerator'
    'body': 'KeyEnumerator()'
  'keysOfEntriesPassingTest:':
    'prefix': 'keysOfEntriesPassingTest:'
    'body': 'KeysOfEntriesPassingTest(${1:BOOL (^)(id, id, BOOL *) predicate})'
  'keysOfEntriesWithOptions:passingTest:':
    'prefix': 'keysOfEntriesWithOptions:passingTest:'
    'body': 'KeysOfEntriesWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, id, BOOL *) predicate})'
  'keysSortedByValueUsingComparator:':
    'prefix': 'keysSortedByValueUsingComparator:'
    'body': 'KeysSortedByValueUsingComparator(${1:NSComparator cmptr})'
  'keysSortedByValueUsingSelector:':
    'prefix': 'keysSortedByValueUsingSelector:'
    'body': 'KeysSortedByValueUsingSelector(${1:SEL comparator})'
  'keysSortedByValueWithOptions:usingComparator:':
    'prefix': 'keysSortedByValueWithOptions:usingComparator:'
    'body': 'KeysSortedByValueWithOptions(${1:NSSortOptions opts}, usingComparator:${2:NSComparator cmptr})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:id aKey})'
  'objectForKeyedSubscript:':
    'prefix': 'objectForKeyedSubscript:'
    'body': 'objectForKeyedSubscript(${1:id key})'
  'objectsForKeys:notFoundMarker:':
    'prefix': 'objectsForKeys:notFoundMarker:'
    'body': 'objectsForKeys(${1:NSArray* keys}, notFoundMarker:${2:id marker})'
  'NSDictionary.sharedKeySetForKeys:':
    'prefix': 'sharedKeySetForKeys:'
    'body': 'NSDictionary.sharedKeySetForKeys(${1:NSArray* keys})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'writeToFile:atomically:':
    'prefix': 'writeToFile:atomically:'
    'body': 'writeToFile(${1:NSString* path}, atomically:${2:BOOL useAuxiliaryFile})'
  'writeToURL:atomically:':
    'prefix': 'writeToURL:atomically:'
    'body': 'writeToURL(${1:NSURL* url}, atomically:${2:BOOL atomically})'
  'directoryAttributes':
    'prefix': 'directoryAttributes'
    'body': 'directoryAttributes()'
  'fileAttributes':
    'prefix': 'fileAttributes'
    'body': 'fileAttributes()'
  'level':
    'prefix': 'level'
    'body': 'level()'
  'skipDescendants':
    'prefix': 'skipDescendants'
    'body': 'skipDescendants()'
  'skipDescendents':
    'prefix': 'skipDescendents'
    'body': 'skipDescendents()'
  'allObjects':
    'prefix': 'allObjects'
    'body': 'allObjects()'
  'nextObject':
    'prefix': 'nextObject'
    'body': 'nextObject()'
  'code':
    'prefix': 'code'
    'body': 'code()'
  'domain':
    'prefix': 'domain'
    'body': 'domain()'
  'NSError.errorWithDomain:code:userInfo:':
    'prefix': 'errorWithDomain:code:userInfo:'
    'body': 'NSError.errorWithDomain(${1:NSString* domain}, code:${2:NSInteger code}, userInfo:${3:NSDictionary* dict})'
  'helpAnchor':
    'prefix': 'helpAnchor'
    'body': 'helpAnchor()'
  'initWithDomain:code:userInfo:':
    'prefix': 'initWithDomain:code:userInfo:'
    'body': 'initWithDomain(${1:NSString* domain}, code:${2:NSInteger code}, userInfo:${3:NSDictionary* dict})'
  'localizedDescription':
    'prefix': 'localizedDescription'
    'body': 'localizedDescription()'
  'localizedFailureReason':
    'prefix': 'localizedFailureReason'
    'body': 'localizedFailureReason()'
  'localizedRecoveryOptions':
    'prefix': 'localizedRecoveryOptions'
    'body': 'localizedRecoveryOptions()'
  'localizedRecoverySuggestion':
    'prefix': 'localizedRecoverySuggestion'
    'body': 'localizedRecoverySuggestion()'
  'recoveryAttempter':
    'prefix': 'recoveryAttempter'
    'body': 'recoveryAttempter()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'callStackReturnAddresses':
    'prefix': 'callStackReturnAddresses'
    'body': 'callStackReturnAddresses()'
  'callStackSymbols':
    'prefix': 'callStackSymbols'
    'body': 'callStackSymbols()'
  'NSException.exceptionWithName:reason:userInfo:':
    'prefix': 'exceptionWithName:reason:userInfo:'
    'body': 'NSException.exceptionWithName(${1:NSString* name}, reason:${2:NSString* reason}, userInfo:${3:NSDictionary* userInfo})'
  'initWithName:reason:userInfo:':
    'prefix': 'initWithName:reason:userInfo:'
    'body': 'initWithName(${1:NSString* aName}, reason:${2:NSString* aReason}, userInfo:${3:NSDictionary* aUserInfo})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'raise':
    'prefix': 'raise'
    'body': 'raise()'
  'NSException.raise:format:':
    'prefix': 'raise:format:'
    'body': 'NSException.raise(${1:NSString* name}, format:${2:NSString* format})'
  'NSException.raise:format:arguments:':
    'prefix': 'raise:format:arguments:'
    'body': 'NSException.raise(${1:NSString* name}, format:${2:NSString* format}, arguments:${3:va_list argList})'
  'reason':
    'prefix': 'reason'
    'body': 'reason()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'allowEvaluation':
    'prefix': 'allowEvaluation'
    'body': 'allowEvaluation()'
  'arguments':
    'prefix': 'arguments'
    'body': 'arguments()'
  'collection':
    'prefix': 'collection'
    'body': 'collection()'
  'constantValue':
    'prefix': 'constantValue'
    'body': 'constantValue()'
  'expressionBlock':
    'prefix': 'expressionBlock'
    'body': 'expressionBlock()'
  'NSExpression.expressionForAggregate:':
    'prefix': 'expressionForAggregate:'
    'body': 'NSExpression.expressionForAggregate(${1:NSArray* subexpressions})'
  'NSExpression.expressionForAnyKey':
    'prefix': 'expressionForAnyKey'
    'body': 'NSExpression.expressionForAnyKey()'
  'NSExpression.expressionForBlock:arguments:':
    'prefix': 'expressionForBlock:arguments:'
    'body': 'NSExpression.expressionForBlock(${1:id (^)(id, NSArray *, NSMutableDictionary *) block}, arguments:${2:NSArray* arguments})'
  'NSExpression.expressionForConstantValue:':
    'prefix': 'expressionForConstantValue:'
    'body': 'NSExpression.expressionForConstantValue(${1:id obj})'
  'NSExpression.expressionForEvaluatedObject':
    'prefix': 'expressionForEvaluatedObject'
    'body': 'NSExpression.expressionForEvaluatedObject()'
  'NSExpression.expressionForFunction:arguments:':
    'prefix': 'expressionForFunction:arguments:'
    'body': 'NSExpression.expressionForFunction(${1:NSString* name}, arguments:${2:NSArray* parameters})'
  'NSExpression.expressionForFunction:selectorName:arguments:':
    'prefix': 'expressionForFunction:selectorName:arguments:'
    'body': 'NSExpression.expressionForFunction(${1:NSExpression* target}, selectorName:${2:NSString* name}, arguments:${3:NSArray* parameters})'
  'NSExpression.expressionForIntersectSet:with:':
    'prefix': 'expressionForIntersectSet:with:'
    'body': 'NSExpression.expressionForIntersectSet(${1:NSExpression* left}, with:${2:NSExpression* right})'
  'NSExpression.expressionForKeyPath:':
    'prefix': 'expressionForKeyPath:'
    'body': 'NSExpression.expressionForKeyPath(${1:NSString* keyPath})'
  'NSExpression.expressionForMinusSet:with:':
    'prefix': 'expressionForMinusSet:with:'
    'body': 'NSExpression.expressionForMinusSet(${1:NSExpression* left}, with:${2:NSExpression* right})'
  'NSExpression.expressionForSubquery:usingIteratorVariable:predicate:':
    'prefix': 'expressionForSubquery:usingIteratorVariable:predicate:'
    'body': 'NSExpression.expressionForSubquery(${1:NSExpression* expression}, usingIteratorVariable:${2:NSString* variable}, predicate:${3:id predicate})'
  'NSExpression.expressionForUnionSet:with:':
    'prefix': 'expressionForUnionSet:with:'
    'body': 'NSExpression.expressionForUnionSet(${1:NSExpression* left}, with:${2:NSExpression* right})'
  'NSExpression.expressionForVariable:':
    'prefix': 'expressionForVariable:'
    'body': 'NSExpression.expressionForVariable(${1:NSString* string})'
  'expressionType':
    'prefix': 'expressionType'
    'body': 'expressionType()'
  'expressionValueWithObject:context:':
    'prefix': 'expressionValueWithObject:context:'
    'body': 'expressionValueWithObject(${1:id object}, context:${2:NSMutableDictionary* context})'
  'NSExpression.expressionWithFormat:':
    'prefix': 'expressionWithFormat:'
    'body': 'NSExpression.expressionWithFormat(${1:NSString* expressionFormat})'
  'NSExpression.expressionWithFormat:argumentArray:':
    'prefix': 'expressionWithFormat:argumentArray:'
    'body': 'NSExpression.expressionWithFormat(${1:NSString* expressionFormat}, argumentArray:${2:NSArray* arguments})'
  'NSExpression.expressionWithFormat:arguments:':
    'prefix': 'expressionWithFormat:arguments:'
    'body': 'NSExpression.expressionWithFormat(${1:NSString* expressionFormat}, arguments:${2:va_list argList})'
  'function':
    'prefix': 'function'
    'body': 'function()'
  'initWithExpressionType:':
    'prefix': 'initWithExpressionType:'
    'body': 'initWithExpressionType(${1:NSExpressionType type})'
  'keyPath':
    'prefix': 'keyPath'
    'body': 'KeyPath()'
  'leftExpression':
    'prefix': 'leftExpression'
    'body': 'leftExpression()'
  'operand':
    'prefix': 'operand'
    'body': 'operand()'
  'predicate':
    'prefix': 'predicate'
    'body': 'predicate()'
  'rightExpression':
    'prefix': 'rightExpression'
    'body': 'rightExpression()'
  'variable':
    'prefix': 'variable'
    'body': 'variable()'
  'NSFileCoordinator.addFilePresenter:':
    'prefix': 'addFilePresenter:'
    'body': 'NSFileCoordinator.addFilePresenter(${1:id filePresenter})'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'coordinateReadingItemAtURL:options:error:byAccessor:':
    'prefix': 'coordinateReadingItemAtURL:options:error:byAccessor:'
    'body': 'coordinateReadingItemAtURL(${1:NSURL* url}, options:${2:NSFileCoordinatorReadingOptions options}, error:${3:NSError** outError}, byAccessor:${4:void (^)(NSURL *) reader})'
  'coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:':
    'prefix': 'coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'
    'body': 'coordinateReadingItemAtURL(${1:NSURL* readingURL}, options:${2:NSFileCoordinatorReadingOptions readingOptions}, writingItemAtURL:${3:NSURL* writingURL}, options:${4:NSFileCoordinatorWritingOptions writingOptions}, error:${5:NSError** outError}, byAccessor:${6:void (^)(NSURL *, NSURL *) readerWriter})'
  'coordinateWritingItemAtURL:options:error:byAccessor:':
    'prefix': 'coordinateWritingItemAtURL:options:error:byAccessor:'
    'body': 'coordinateWritingItemAtURL(${1:NSURL* url}, options:${2:NSFileCoordinatorWritingOptions options}, error:${3:NSError** outError}, byAccessor:${4:void (^)(NSURL *) writer})'
  'coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:':
    'prefix': 'coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'
    'body': 'coordinateWritingItemAtURL(${1:NSURL* url1}, options:${2:NSFileCoordinatorWritingOptions options1}, writingItemAtURL:${3:NSURL* url2}, options:${4:NSFileCoordinatorWritingOptions options2}, error:${5:NSError** outError}, byAccessor:${6:void (^)(NSURL *, NSURL *) writer})'
  'NSFileCoordinator.filePresenters':
    'prefix': 'filePresenters'
    'body': 'NSFileCoordinator.filePresenters()'
  'initWithFilePresenter:':
    'prefix': 'initWithFilePresenter:'
    'body': 'initWithFilePresenter(${1:id filePresenterOrNil})'
  'itemAtURL:didMoveToURL:':
    'prefix': 'itemAtURL:didMoveToURL:'
    'body': 'itemAtURL(${1:NSURL* oldURL}, didMoveToURL:${2:NSURL* newURL})'
  'itemAtURL:willMoveToURL:':
    'prefix': 'itemAtURL:willMoveToURL:'
    'body': 'itemAtURL(${1:NSURL* oldURL}, willMoveToURL:${2:NSURL* newURL})'
  'prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:':
    'prefix': 'prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'
    'body': 'prepareForReadingItemsAtURLs(${1:NSArray* readingURLs}, options:${2:NSFileCoordinatorReadingOptions readingOptions}, writingItemsAtURLs:${3:NSArray* writingURLs}, options:${4:NSFileCoordinatorWritingOptions writingOptions}, error:${5:NSError** outError}, byAccessor:${6:void (^)(void (^)(void)) batchAccessor})'
  'NSFileCoordinator.removeFilePresenter:':
    'prefix': 'removeFilePresenter:'
    'body': 'NSFileCoordinator.removeFilePresenter(${1:id filePresenter})'
  'acceptConnectionInBackgroundAndNotify':
    'prefix': 'acceptConnectionInBackgroundAndNotify'
    'body': 'acceptConnectionInBackgroundAndNotify()'
  'acceptConnectionInBackgroundAndNotifyForModes:':
    'prefix': 'acceptConnectionInBackgroundAndNotifyForModes:'
    'body': 'acceptConnectionInBackgroundAndNotifyForModes(${1:NSArray* modes})'
  'availableData':
    'prefix': 'availableData'
    'body': 'availableData()'
  'closeFile':
    'prefix': 'closeFile'
    'body': 'closeFile()'
  'fileDescriptor':
    'prefix': 'fileDescriptor'
    'body': 'fileDescriptor()'
  'NSFileHandle.fileHandleForReadingAtPath:':
    'prefix': 'fileHandleForReadingAtPath:'
    'body': 'NSFileHandle.fileHandleForReadingAtPath(${1:NSString* path})'
  'NSFileHandle.fileHandleForReadingFromURL:error:':
    'prefix': 'fileHandleForReadingFromURL:error:'
    'body': 'NSFileHandle.fileHandleForReadingFromURL(${1:NSURL* url}, error:${2:NSError** error})'
  'NSFileHandle.fileHandleForUpdatingAtPath:':
    'prefix': 'fileHandleForUpdatingAtPath:'
    'body': 'NSFileHandle.fileHandleForUpdatingAtPath(${1:NSString* path})'
  'NSFileHandle.fileHandleForUpdatingURL:error:':
    'prefix': 'fileHandleForUpdatingURL:error:'
    'body': 'NSFileHandle.fileHandleForUpdatingURL(${1:NSURL* url}, error:${2:NSError** error})'
  'NSFileHandle.fileHandleForWritingAtPath:':
    'prefix': 'fileHandleForWritingAtPath:'
    'body': 'NSFileHandle.fileHandleForWritingAtPath(${1:NSString* path})'
  'NSFileHandle.fileHandleForWritingToURL:error:':
    'prefix': 'fileHandleForWritingToURL:error:'
    'body': 'NSFileHandle.fileHandleForWritingToURL(${1:NSURL* url}, error:${2:NSError** error})'
  'NSFileHandle.fileHandleWithNullDevice':
    'prefix': 'fileHandleWithNullDevice'
    'body': 'NSFileHandle.fileHandleWithNullDevice()'
  'NSFileHandle.fileHandleWithStandardError':
    'prefix': 'fileHandleWithStandardError'
    'body': 'NSFileHandle.fileHandleWithStandardError()'
  'NSFileHandle.fileHandleWithStandardInput':
    'prefix': 'fileHandleWithStandardInput'
    'body': 'NSFileHandle.fileHandleWithStandardInput()'
  'NSFileHandle.fileHandleWithStandardOutput':
    'prefix': 'fileHandleWithStandardOutput'
    'body': 'NSFileHandle.fileHandleWithStandardOutput()'
  'initWithFileDescriptor:':
    'prefix': 'initWithFileDescriptor:'
    'body': 'initWithFileDescriptor(${1:int fd})'
  'initWithFileDescriptor:closeOnDealloc:':
    'prefix': 'initWithFileDescriptor:closeOnDealloc:'
    'body': 'initWithFileDescriptor(${1:int fd}, closeOnDealloc:${2:BOOL closeopt})'
  'offsetInFile':
    'prefix': 'offsetInFile'
    'body': 'offsetInFile()'
  'readDataOfLength:':
    'prefix': 'readDataOfLength:'
    'body': 'readDataOfLength(${1:NSUInteger length})'
  'readDataToEndOfFile':
    'prefix': 'readDataToEndOfFile'
    'body': 'readDataToEndOfFile()'
  'readInBackgroundAndNotify':
    'prefix': 'readInBackgroundAndNotify'
    'body': 'readInBackgroundAndNotify()'
  'readInBackgroundAndNotifyForModes:':
    'prefix': 'readInBackgroundAndNotifyForModes:'
    'body': 'readInBackgroundAndNotifyForModes(${1:NSArray* modes})'
  'readToEndOfFileInBackgroundAndNotify':
    'prefix': 'readToEndOfFileInBackgroundAndNotify'
    'body': 'readToEndOfFileInBackgroundAndNotify()'
  'readToEndOfFileInBackgroundAndNotifyForModes:':
    'prefix': 'readToEndOfFileInBackgroundAndNotifyForModes:'
    'body': 'readToEndOfFileInBackgroundAndNotifyForModes(${1:NSArray* modes})'
  'readabilityHandler':
    'prefix': 'readabilityHandler'
    'body': 'readabilityHandler()'
  'seekToEndOfFile':
    'prefix': 'seekToEndOfFile'
    'body': 'seekToEndOfFile()'
  'seekToFileOffset:':
    'prefix': 'seekToFileOffset:'
    'body': 'seekToFileOffset(${1:unsigned long long offset})'
  'setReadabilityHandler:':
    'prefix': 'setReadabilityHandler:'
    'body': 'setReadabilityHandler(${1:void (^)(NSFileHandle *) readabilityHandler})'
  'setWriteabilityHandler:':
    'prefix': 'setWriteabilityHandler:'
    'body': 'setWriteabilityHandler(${1:void (^)(NSFileHandle *) writeabilityHandler})'
  'synchronizeFile':
    'prefix': 'synchronizeFile'
    'body': 'synchronizeFile()'
  'truncateFileAtOffset:':
    'prefix': 'truncateFileAtOffset:'
    'body': 'truncateFileAtOffset(${1:unsigned long long offset})'
  'waitForDataInBackgroundAndNotify':
    'prefix': 'waitForDataInBackgroundAndNotify'
    'body': 'waitForDataInBackgroundAndNotify()'
  'waitForDataInBackgroundAndNotifyForModes:':
    'prefix': 'waitForDataInBackgroundAndNotifyForModes:'
    'body': 'waitForDataInBackgroundAndNotifyForModes(${1:NSArray* modes})'
  'writeData:':
    'prefix': 'writeData:'
    'body': 'writeData(${1:NSData* data})'
  'writeabilityHandler':
    'prefix': 'writeabilityHandler'
    'body': 'writeabilityHandler()'
  'URLForDirectory:inDomain:appropriateForURL:create:error:':
    'prefix': 'URLForDirectory:inDomain:appropriateForURL:create:error:'
    'body': 'URLForDirectory(${1:NSSearchPathDirectory directory}, inDomain:${2:NSSearchPathDomainMask domain}, appropriateForURL:${3:NSURL* url}, create:${4:BOOL shouldCreate}, error:${5:NSError** error})'
  'URLForPublishingUbiquitousItemAtURL:expirationDate:error:':
    'prefix': 'URLForPublishingUbiquitousItemAtURL:expirationDate:error:'
    'body': 'URLForPublishingUbiquitousItemAtURL(${1:NSURL* url}, expirationDate:${2:NSDate** outDate}, error:${3:NSError** error})'
  'URLForUbiquityContainerIdentifier:':
    'prefix': 'URLForUbiquityContainerIdentifier:'
    'body': 'URLForUbiquityContainerIdentifier(${1:NSString* containerIdentifier})'
  'URLsForDirectory:inDomains:':
    'prefix': 'URLsForDirectory:inDomains:'
    'body': 'URLsForDirectory(${1:NSSearchPathDirectory directory}, inDomains:${2:NSSearchPathDomainMask domainMask})'
  'attributesOfFileSystemForPath:error:':
    'prefix': 'attributesOfFileSystemForPath:error:'
    'body': 'attributesOfFileSystemForPath(${1:NSString* path}, error:${2:NSError** error})'
  'attributesOfItemAtPath:error:':
    'prefix': 'attributesOfItemAtPath:error:'
    'body': 'attributesOfItemAtPath(${1:NSString* path}, error:${2:NSError** error})'
  'changeCurrentDirectoryPath:':
    'prefix': 'changeCurrentDirectoryPath:'
    'body': 'changeCurrentDirectoryPath(${1:NSString* path})'
  'changeFileAttributes:atPath:':
    'prefix': 'changeFileAttributes:atPath:'
    'body': 'changeFileAttributes(${1:NSDictionary* attributes}, atPath:${2:NSString* path})'
  'componentsToDisplayForPath:':
    'prefix': 'componentsToDisplayForPath:'
    'body': 'componentsToDisplayForPath(${1:NSString* path})'
  'containerURLForSecurityApplicationGroupIdentifier:':
    'prefix': 'containerURLForSecurityApplicationGroupIdentifier:'
    'body': 'containerURLForSecurityApplicationGroupIdentifier(${1:NSString* groupIdentifier})'
  'contentsAtPath:':
    'prefix': 'contentsAtPath:'
    'body': 'contentsAtPath(${1:NSString* path})'
  'contentsEqualAtPath:andPath:':
    'prefix': 'contentsEqualAtPath:andPath:'
    'body': 'contentsEqualAtPath(${1:NSString* path1}, andPath:${2:NSString* path2})'
  'contentsOfDirectoryAtPath:error:':
    'prefix': 'contentsOfDirectoryAtPath:error:'
    'body': 'contentsOfDirectoryAtPath(${1:NSString* path}, error:${2:NSError** error})'
  'contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:':
    'prefix': 'contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:'
    'body': 'contentsOfDirectoryAtURL(${1:NSURL* url}, includingPropertiesForKeys:${2:NSArray* keys}, options:${3:NSDirectoryEnumerationOptions mask}, error:${4:NSError** error})'
  'copyItemAtPath:toPath:error:':
    'prefix': 'copyItemAtPath:toPath:error:'
    'body': 'copyItemAtPath(${1:NSString* srcPath}, toPath:${2:NSString* dstPath}, error:${3:NSError** error})'
  'copyItemAtURL:toURL:error:':
    'prefix': 'copyItemAtURL:toURL:error:'
    'body': 'copyItemAtURL(${1:NSURL* srcURL}, toURL:${2:NSURL* dstURL}, error:${3:NSError** error})'
  'createDirectoryAtPath:attributes:':
    'prefix': 'createDirectoryAtPath:attributes:'
    'body': 'createDirectoryAtPath(${1:NSString* path}, attributes:${2:NSDictionary* attributes})'
  'createDirectoryAtPath:withIntermediateDirectories:attributes:error:':
    'prefix': 'createDirectoryAtPath:withIntermediateDirectories:attributes:error:'
    'body': 'createDirectoryAtPath(${1:NSString* path}, withIntermediateDirectories:${2:BOOL createIntermediates}, attributes:${3:NSDictionary* attributes}, error:${4:NSError** error})'
  'createDirectoryAtURL:withIntermediateDirectories:attributes:error:':
    'prefix': 'createDirectoryAtURL:withIntermediateDirectories:attributes:error:'
    'body': 'createDirectoryAtURL(${1:NSURL* url}, withIntermediateDirectories:${2:BOOL createIntermediates}, attributes:${3:NSDictionary* attributes}, error:${4:NSError** error})'
  'createFileAtPath:contents:attributes:':
    'prefix': 'createFileAtPath:contents:attributes:'
    'body': 'createFileAtPath(${1:NSString* path}, contents:${2:NSData* data}, attributes:${3:NSDictionary* attr})'
  'createSymbolicLinkAtPath:pathContent:':
    'prefix': 'createSymbolicLinkAtPath:pathContent:'
    'body': 'createSymbolicLinkAtPath(${1:NSString* path}, pathContent:${2:NSString* otherpath})'
  'createSymbolicLinkAtPath:withDestinationPath:error:':
    'prefix': 'createSymbolicLinkAtPath:withDestinationPath:error:'
    'body': 'createSymbolicLinkAtPath(${1:NSString* path}, withDestinationPath:${2:NSString* destPath}, error:${3:NSError** error})'
  'createSymbolicLinkAtURL:withDestinationURL:error:':
    'prefix': 'createSymbolicLinkAtURL:withDestinationURL:error:'
    'body': 'createSymbolicLinkAtURL(${1:NSURL* url}, withDestinationURL:${2:NSURL* destURL}, error:${3:NSError** error})'
  'currentDirectoryPath':
    'prefix': 'currentDirectoryPath'
    'body': 'currentDirectoryPath()'
  'NSFileManager.defaultManager':
    'prefix': 'defaultManager'
    'body': 'NSFileManager.defaultManager()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'destinationOfSymbolicLinkAtPath:error:':
    'prefix': 'destinationOfSymbolicLinkAtPath:error:'
    'body': 'destinationOfSymbolicLinkAtPath(${1:NSString* path}, error:${2:NSError** error})'
  'directoryContentsAtPath:':
    'prefix': 'directoryContentsAtPath:'
    'body': 'directoryContentsAtPath(${1:NSString* path})'
  'displayNameAtPath:':
    'prefix': 'displayNameAtPath:'
    'body': 'displayNameAtPath(${1:NSString* path})'
  'enumeratorAtPath:':
    'prefix': 'enumeratorAtPath:'
    'body': 'enumeratorAtPath(${1:NSString* path})'
  'enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:':
    'prefix': 'enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'
    'body': 'enumeratorAtURL(${1:NSURL* url}, includingPropertiesForKeys:${2:NSArray* keys}, options:${3:NSDirectoryEnumerationOptions mask}, errorHandler:${4:BOOL (^)(NSURL *, NSError *) handler})'
  'evictUbiquitousItemAtURL:error:':
    'prefix': 'evictUbiquitousItemAtURL:error:'
    'body': 'evictUbiquitousItemAtURL(${1:NSURL* url}, error:${2:NSError** error})'
  'fileAttributesAtPath:traverseLink:':
    'prefix': 'fileAttributesAtPath:traverseLink:'
    'body': 'fileAttributesAtPath(${1:NSString* path}, traverseLink:${2:BOOL yorn})'
  'fileExistsAtPath:':
    'prefix': 'fileExistsAtPath:'
    'body': 'fileExistsAtPath(${1:NSString* path})'
  'fileExistsAtPath:isDirectory:':
    'prefix': 'fileExistsAtPath:isDirectory:'
    'body': 'fileExistsAtPath(${1:NSString* path}, isDirectory:${2:BOOL* isDirectory})'
  'fileSystemAttributesAtPath:':
    'prefix': 'fileSystemAttributesAtPath:'
    'body': 'fileSystemAttributesAtPath(${1:NSString* path})'
  'fileSystemRepresentationWithPath:':
    'prefix': 'fileSystemRepresentationWithPath:'
    'body': 'fileSystemRepresentationWithPath(${1:NSString* path})'
  'isDeletableFileAtPath:':
    'prefix': 'isDeletableFileAtPath:'
    'body': 'isDeletableFileAtPath(${1:NSString* path})'
  'isExecutableFileAtPath:':
    'prefix': 'isExecutableFileAtPath:'
    'body': 'isExecutableFileAtPath(${1:NSString* path})'
  'isReadableFileAtPath:':
    'prefix': 'isReadableFileAtPath:'
    'body': 'isReadableFileAtPath(${1:NSString* path})'
  'isUbiquitousItemAtURL:':
    'prefix': 'isUbiquitousItemAtURL:'
    'body': 'isUbiquitousItemAtURL(${1:NSURL* url})'
  'isWritableFileAtPath:':
    'prefix': 'isWritableFileAtPath:'
    'body': 'isWritableFileAtPath(${1:NSString* path})'
  'linkItemAtPath:toPath:error:':
    'prefix': 'linkItemAtPath:toPath:error:'
    'body': 'linkItemAtPath(${1:NSString* srcPath}, toPath:${2:NSString* dstPath}, error:${3:NSError** error})'
  'linkItemAtURL:toURL:error:':
    'prefix': 'linkItemAtURL:toURL:error:'
    'body': 'linkItemAtURL(${1:NSURL* srcURL}, toURL:${2:NSURL* dstURL}, error:${3:NSError** error})'
  'mountedVolumeURLsIncludingResourceValuesForKeys:options:':
    'prefix': 'mountedVolumeURLsIncludingResourceValuesForKeys:options:'
    'body': 'mountedVolumeURLsIncludingResourceValuesForKeys(${1:NSArray* propertyKeys}, options:${2:NSVolumeEnumerationOptions options})'
  'moveItemAtPath:toPath:error:':
    'prefix': 'moveItemAtPath:toPath:error:'
    'body': 'moveItemAtPath(${1:NSString* srcPath}, toPath:${2:NSString* dstPath}, error:${3:NSError** error})'
  'moveItemAtURL:toURL:error:':
    'prefix': 'moveItemAtURL:toURL:error:'
    'body': 'moveItemAtURL(${1:NSURL* srcURL}, toURL:${2:NSURL* dstURL}, error:${3:NSError** error})'
  'pathContentOfSymbolicLinkAtPath:':
    'prefix': 'pathContentOfSymbolicLinkAtPath:'
    'body': 'pathContentOfSymbolicLinkAtPath(${1:NSString* path})'
  'removeItemAtPath:error:':
    'prefix': 'removeItemAtPath:error:'
    'body': 'removeItemAtPath(${1:NSString* path}, error:${2:NSError** error})'
  'removeItemAtURL:error:':
    'prefix': 'removeItemAtURL:error:'
    'body': 'removeItemAtURL(${1:NSURL* URL}, error:${2:NSError** error})'
  'replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:':
    'prefix': 'replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'
    'body': 'replaceItemAtURL(${1:NSURL* originalItemURL}, withItemAtURL:${2:NSURL* newItemURL}, backupItemName:${3:NSString* backupItemName}, options:${4:NSFileManagerItemReplacementOptions options}, resultingItemURL:${5:NSURL** resultingURL}, error:${6:NSError** error})'
  'setAttributes:ofItemAtPath:error:':
    'prefix': 'setAttributes:ofItemAtPath:error:'
    'body': 'setAttributes(${1:NSDictionary* attributes}, ofItemAtPath:${2:NSString* path}, error:${3:NSError** error})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setUbiquitous:itemAtURL:destinationURL:error:':
    'prefix': 'setUbiquitous:itemAtURL:destinationURL:error:'
    'body': 'setUbiquitous(${1:BOOL flag}, itemAtURL:${2:NSURL* url}, destinationURL:${3:NSURL* destinationURL}, error:${4:NSError** error})'
  'startDownloadingUbiquitousItemAtURL:error:':
    'prefix': 'startDownloadingUbiquitousItemAtURL:error:'
    'body': 'startDownloadingUbiquitousItemAtURL(${1:NSURL* url}, error:${2:NSError** error})'
  'stringWithFileSystemRepresentation:length:':
    'prefix': 'stringWithFileSystemRepresentation:length:'
    'body': 'stringWithFileSystemRepresentation(${1:char* str}, length:${2:NSUInteger len})'
  'subpathsAtPath:':
    'prefix': 'subpathsAtPath:'
    'body': 'subpathsAtPath(${1:NSString* path})'
  'subpathsOfDirectoryAtPath:error:':
    'prefix': 'subpathsOfDirectoryAtPath:error:'
    'body': 'subpathsOfDirectoryAtPath(${1:NSString* path}, error:${2:NSError** error})'
  'ubiquityIdentityToken':
    'prefix': 'ubiquityIdentityToken'
    'body': 'ubiquityIdentityToken()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'NSFileVersion.currentVersionOfItemAtURL:':
    'prefix': 'currentVersionOfItemAtURL:'
    'body': 'NSFileVersion.currentVersionOfItemAtURL(${1:NSURL* url})'
  'isConflict':
    'prefix': 'isConflict'
    'body': 'isConflict()'
  'isDiscardable':
    'prefix': 'isDiscardable'
    'body': 'isDiscardable()'
  'isResolved':
    'prefix': 'isResolved'
    'body': 'isResolved()'
  'localizedName':
    'prefix': 'localizedName'
    'body': 'localizedName()'
  'localizedNameOfSavingComputer':
    'prefix': 'localizedNameOfSavingComputer'
    'body': 'localizedNameOfSavingComputer()'
  'modificationDate':
    'prefix': 'modificationDate'
    'body': 'modificationDate()'
  'NSFileVersion.otherVersionsOfItemAtURL:':
    'prefix': 'otherVersionsOfItemAtURL:'
    'body': 'NSFileVersion.otherVersionsOfItemAtURL(${1:NSURL* url})'
  'persistentIdentifier':
    'prefix': 'persistentIdentifier'
    'body': 'persistentIdentifier()'
  'removeAndReturnError:':
    'prefix': 'removeAndReturnError:'
    'body': 'removeAndReturnError(${1:NSError** outError})'
  'NSFileVersion.removeOtherVersionsOfItemAtURL:error:':
    'prefix': 'removeOtherVersionsOfItemAtURL:error:'
    'body': 'NSFileVersion.removeOtherVersionsOfItemAtURL(${1:NSURL* url}, error:${2:NSError** outError})'
  'replaceItemAtURL:options:error:':
    'prefix': 'replaceItemAtURL:options:error:'
    'body': 'replaceItemAtURL(${1:NSURL* url}, options:${2:NSFileVersionReplacingOptions options}, error:${3:NSError** error})'
  'setDiscardable:':
    'prefix': 'setDiscardable:'
    'body': 'setDiscardable(${1:BOOL discardable})'
  'setResolved:':
    'prefix': 'setResolved:'
    'body': 'setResolved(${1:BOOL resolved})'
  'NSFileVersion.unresolvedConflictVersionsOfItemAtURL:':
    'prefix': 'unresolvedConflictVersionsOfItemAtURL:'
    'body': 'NSFileVersion.unresolvedConflictVersionsOfItemAtURL(${1:NSURL* url})'
  'NSFileVersion.versionOfItemAtURL:forPersistentIdentifier:':
    'prefix': 'versionOfItemAtURL:forPersistentIdentifier:'
    'body': 'NSFileVersion.versionOfItemAtURL(${1:NSURL* url}, forPersistentIdentifier:${2:id persistentIdentifier})'
  'addFileWrapper:':
    'prefix': 'addFileWrapper:'
    'body': 'addFileWrapper(${1:NSFileWrapper* child})'
  'addRegularFileWithContents:preferredFilename:':
    'prefix': 'addRegularFileWithContents:preferredFilename:'
    'body': 'addRegularFileWithContents(${1:NSData* data}, preferredFilename:${2:NSString* fileName})'
  'fileAttributes':
    'prefix': 'fileAttributes'
    'body': 'fileAttributes()'
  'fileWrappers':
    'prefix': 'fileWrappers'
    'body': 'fileWrappers()'
  'filename':
    'prefix': 'filename'
    'body': 'filename()'
  'initDirectoryWithFileWrappers:':
    'prefix': 'initDirectoryWithFileWrappers:'
    'body': 'initDirectoryWithFileWrappers(${1:NSDictionary* childrenByPreferredName})'
  'initRegularFileWithContents:':
    'prefix': 'initRegularFileWithContents:'
    'body': 'initRegularFileWithContents(${1:NSData* contents})'
  'initSymbolicLinkWithDestinationURL:':
    'prefix': 'initSymbolicLinkWithDestinationURL:'
    'body': 'initSymbolicLinkWithDestinationURL(${1:NSURL* url})'
  'initWithSerializedRepresentation:':
    'prefix': 'initWithSerializedRepresentation:'
    'body': 'initWithSerializedRepresentation(${1:NSData* serializeRepresentation})'
  'initWithURL:options:error:':
    'prefix': 'initWithURL:options:error:'
    'body': 'initWithURL(${1:NSURL* url}, options:${2:NSFileWrapperReadingOptions options}, error:${3:NSError** outError})'
  'isDirectory':
    'prefix': 'isDirectory'
    'body': 'isDirectory()'
  'isRegularFile':
    'prefix': 'isRegularFile'
    'body': 'isRegularFile()'
  'isSymbolicLink':
    'prefix': 'isSymbolicLink'
    'body': 'isSymbolicLink()'
  'keyForFileWrapper:':
    'prefix': 'keyForFileWrapper:'
    'body': 'KeyForFileWrapper(${1:NSFileWrapper* child})'
  'matchesContentsOfURL:':
    'prefix': 'matchesContentsOfURL:'
    'body': 'matchesContentsOfURL(${1:NSURL* url})'
  'preferredFilename':
    'prefix': 'preferredFilename'
    'body': 'preferredFilename()'
  'readFromURL:options:error:':
    'prefix': 'readFromURL:options:error:'
    'body': 'readFromURL(${1:NSURL* url}, options:${2:NSFileWrapperReadingOptions options}, error:${3:NSError** outError})'
  'regularFileContents':
    'prefix': 'regularFileContents'
    'body': 'regularFileContents()'
  'removeFileWrapper:':
    'prefix': 'removeFileWrapper:'
    'body': 'removeFileWrapper(${1:NSFileWrapper* child})'
  'serializedRepresentation':
    'prefix': 'serializedRepresentation'
    'body': 'serializedRepresentation()'
  'setFileAttributes:':
    'prefix': 'setFileAttributes:'
    'body': 'setFileAttributes(${1:NSDictionary* fileAttributes})'
  'setFilename:':
    'prefix': 'setFilename:'
    'body': 'setFilename(${1:NSString* fileName})'
  'setPreferredFilename:':
    'prefix': 'setPreferredFilename:'
    'body': 'setPreferredFilename(${1:NSString* fileName})'
  'symbolicLinkDestinationURL':
    'prefix': 'symbolicLinkDestinationURL'
    'body': 'symbolicLinkDestinationURL()'
  'writeToURL:options:originalContentsURL:error:':
    'prefix': 'writeToURL:options:originalContentsURL:error:'
    'body': 'writeToURL(${1:NSURL* url}, options:${2:NSFileWrapperWritingOptions options}, originalContentsURL:${3:NSURL* originalContentsURL}, error:${4:NSError** outError})'
  'attributedStringForObjectValue:withDefaultAttributes:':
    'prefix': 'attributedStringForObjectValue:withDefaultAttributes:'
    'body': 'attributedStringForObjectValue(${1:id obj}, withDefaultAttributes:${2:NSDictionary* attrs})'
  'editingStringForObjectValue:':
    'prefix': 'editingStringForObjectValue:'
    'body': 'editingStringForObjectValue(${1:id obj})'
  'getObjectValue:forString:errorDescription:':
    'prefix': 'getObjectValue:forString:errorDescription:'
    'body': 'getObjectValue(${1:id* obj}, forString:${2:NSString* string}, errorDescription:${3:NSString** error})'
  'isPartialStringValid:newEditingString:errorDescription:':
    'prefix': 'isPartialStringValid:newEditingString:errorDescription:'
    'body': 'isPartialStringValid(${1:NSString* partialString}, newEditingString:${2:NSString** newString}, errorDescription:${3:NSString** error})'
  'isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:':
    'prefix': 'isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'
    'body': 'isPartialStringValid(${1:NSString** partialStringPtr}, proposedSelectedRange:${2:NSRangePointer proposedSelRangePtr}, originalString:${3:NSString* origString}, originalSelectedRange:${4:NSRange origSelRange}, errorDescription:${5:NSString** error})'
  'stringForObjectValue:':
    'prefix': 'stringForObjectValue:'
    'body': 'stringForObjectValue(${1:id obj})'
  'comment':
    'prefix': 'comment'
    'body': 'comment()'
  'commentURL':
    'prefix': 'commentURL'
    'body': 'commentURL()'
  'NSHTTPCookie.cookieWithProperties:':
    'prefix': 'cookieWithProperties:'
    'body': 'NSHTTPCookie.cookieWithProperties(${1:NSDictionary* properties})'
  'NSHTTPCookie.cookiesWithResponseHeaderFields:forURL:':
    'prefix': 'cookiesWithResponseHeaderFields:forURL:'
    'body': 'NSHTTPCookie.cookiesWithResponseHeaderFields(${1:NSDictionary* headerFields}, forURL:${2:NSURL* URL})'
  'domain':
    'prefix': 'domain'
    'body': 'domain()'
  'expiresDate':
    'prefix': 'expiresDate'
    'body': 'expiresDate()'
  'initWithProperties:':
    'prefix': 'initWithProperties:'
    'body': 'initWithProperties(${1:NSDictionary* properties})'
  'isHTTPOnly':
    'prefix': 'isHTTPOnly'
    'body': 'isHTTPOnly()'
  'isSecure':
    'prefix': 'isSecure'
    'body': 'isSecure()'
  'isSessionOnly':
    'prefix': 'isSessionOnly'
    'body': 'isSessionOnly()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'path':
    'prefix': 'path'
    'body': 'path()'
  'portList':
    'prefix': 'portList'
    'body': 'portList()'
  'properties':
    'prefix': 'properties'
    'body': 'properties()'
  'NSHTTPCookie.requestHeaderFieldsWithCookies:':
    'prefix': 'requestHeaderFieldsWithCookies:'
    'body': 'NSHTTPCookie.requestHeaderFieldsWithCookies(${1:NSArray* cookies})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'version':
    'prefix': 'version'
    'body': 'version()'
  'cookieAcceptPolicy':
    'prefix': 'cookieAcceptPolicy'
    'body': 'cookieAcceptPolicy()'
  'cookies':
    'prefix': 'cookies'
    'body': 'cookies()'
  'cookiesForURL:':
    'prefix': 'cookiesForURL:'
    'body': 'cookiesForURL(${1:NSURL* URL})'
  'deleteCookie:':
    'prefix': 'deleteCookie:'
    'body': 'deleteCookie(${1:NSHTTPCookie* cookie})'
  'setCookie:':
    'prefix': 'setCookie:'
    'body': 'setCookie(${1:NSHTTPCookie* cookie})'
  'setCookieAcceptPolicy:':
    'prefix': 'setCookieAcceptPolicy:'
    'body': 'setCookieAcceptPolicy(${1:NSHTTPCookieAcceptPolicy cookieAcceptPolicy})'
  'setCookies:forURL:mainDocumentURL:':
    'prefix': 'setCookies:forURL:mainDocumentURL:'
    'body': 'setCookies(${1:NSArray* cookies}, forURL:${2:NSURL* URL}, mainDocumentURL:${3:NSURL* mainDocumentURL})'
  'NSHTTPCookieStorage.sharedHTTPCookieStorage':
    'prefix': 'sharedHTTPCookieStorage'
    'body': 'NSHTTPCookieStorage.sharedHTTPCookieStorage()'
  'sortedCookiesUsingDescriptors:':
    'prefix': 'sortedCookiesUsingDescriptors:'
    'body': 'sortedCookiesUsingDescriptors(${1:NSArray* sortOrder})'
  'allHeaderFields':
    'prefix': 'allHeaderFields'
    'body': 'allHeaderFields()'
  'initWithURL:statusCode:HTTPVersion:headerFields:':
    'prefix': 'initWithURL:statusCode:HTTPVersion:headerFields:'
    'body': 'initWithURL(${1:NSURL* url}, statusCode:${2:NSInteger statusCode}, HTTPVersion:${3:NSString* HTTPVersion}, headerFields:${4:NSDictionary* headerFields})'
  'NSHTTPURLResponse.localizedStringForStatusCode:':
    'prefix': 'localizedStringForStatusCode:'
    'body': 'NSHTTPURLResponse.localizedStringForStatusCode(${1:NSInteger statusCode})'
  'statusCode':
    'prefix': 'statusCode'
    'body': 'statusCode()'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'allObjects':
    'prefix': 'allObjects'
    'body': 'allObjects()'
  'anyObject':
    'prefix': 'anyObject'
    'body': 'anyObject()'
  'containsObject:':
    'prefix': 'containsObject:'
    'body': 'containsObject(${1:id anObject})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'NSHashTable.hashTableWithOptions:':
    'prefix': 'hashTableWithOptions:'
    'body': 'NSHashTable.hashTableWithOptions(${1:NSPointerFunctionsOptions options})'
  'initWithOptions:capacity:':
    'prefix': 'initWithOptions:capacity:'
    'body': 'initWithOptions(${1:NSPointerFunctionsOptions options}, capacity:${2:NSUInteger initialCapacity})'
  'initWithPointerFunctions:capacity:':
    'prefix': 'initWithPointerFunctions:capacity:'
    'body': 'initWithPointerFunctions(${1:NSPointerFunctions* functions}, capacity:${2:NSUInteger initialCapacity})'
  'intersectHashTable:':
    'prefix': 'intersectHashTable:'
    'body': 'intersectHashTable(${1:NSHashTable* other})'
  'intersectsHashTable:':
    'prefix': 'intersectsHashTable:'
    'body': 'intersectsHashTable(${1:NSHashTable* other})'
  'isEqualToHashTable:':
    'prefix': 'isEqualToHashTable:'
    'body': 'isEqualToHashTable(${1:NSHashTable* other})'
  'isSubsetOfHashTable:':
    'prefix': 'isSubsetOfHashTable:'
    'body': 'isSubsetOfHashTable(${1:NSHashTable* other})'
  'member:':
    'prefix': 'member:'
    'body': 'member(${1:id object})'
  'minusHashTable:':
    'prefix': 'minusHashTable:'
    'body': 'minusHashTable(${1:NSHashTable* other})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'pointerFunctions':
    'prefix': 'pointerFunctions'
    'body': 'pointerFunctions()'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'setRepresentation':
    'prefix': 'setRepresentation'
    'body': 'setRepresentation()'
  'unionHashTable:':
    'prefix': 'unionHashTable:'
    'body': 'unionHashTable(${1:NSHashTable* other})'
  'NSHashTable.weakObjectsHashTable':
    'prefix': 'weakObjectsHashTable'
    'body': 'NSHashTable.weakObjectsHashTable()'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:NSIndexPath* otherObject})'
  'getIndexes:':
    'prefix': 'getIndexes:'
    'body': 'getIndexes(${1:NSUInteger* indexes})'
  'indexAtPosition:':
    'prefix': 'indexAtPosition:'
    'body': 'indexAtPosition(${1:NSUInteger position})'
  'indexPathByAddingIndex:':
    'prefix': 'indexPathByAddingIndex:'
    'body': 'indexPathByAddingIndex(${1:NSUInteger index})'
  'indexPathByRemovingLastIndex':
    'prefix': 'indexPathByRemovingLastIndex'
    'body': 'indexPathByRemovingLastIndex()'
  'NSIndexPath.indexPathWithIndex:':
    'prefix': 'indexPathWithIndex:'
    'body': 'NSIndexPath.indexPathWithIndex(${1:NSUInteger index})'
  'NSIndexPath.indexPathWithIndexes:length:':
    'prefix': 'indexPathWithIndexes:length:'
    'body': 'NSIndexPath.indexPathWithIndexes(${1:NSUInteger* indexes}, length:${2:NSUInteger length})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithIndex:':
    'prefix': 'initWithIndex:'
    'body': 'initWithIndex(${1:NSUInteger index})'
  'initWithIndexes:length:':
    'prefix': 'initWithIndexes:length:'
    'body': 'initWithIndexes(${1:NSUInteger* indexes}, length:${2:NSUInteger length})'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'containsIndex:':
    'prefix': 'containsIndex:'
    'body': 'containsIndex(${1:NSUInteger value})'
  'containsIndexes:':
    'prefix': 'containsIndexes:'
    'body': 'containsIndexes(${1:NSIndexSet* indexSet})'
  'containsIndexesInRange:':
    'prefix': 'containsIndexesInRange:'
    'body': 'containsIndexesInRange(${1:NSRange range})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'countOfIndexesInRange:':
    'prefix': 'countOfIndexesInRange:'
    'body': 'countOfIndexesInRange(${1:NSRange range})'
  'enumerateIndexesInRange:options:usingBlock:':
    'prefix': 'enumerateIndexesInRange:options:usingBlock:'
    'body': 'enumerateIndexesInRange(${1:NSRange range}, options:${2:NSEnumerationOptions opts}, usingBlock:${3:void (^)(NSUInteger, BOOL *) block})'
  'enumerateIndexesUsingBlock:':
    'prefix': 'enumerateIndexesUsingBlock:'
    'body': 'enumerateIndexesUsingBlock(${1:void (^)(NSUInteger, BOOL *) block})'
  'enumerateIndexesWithOptions:usingBlock:':
    'prefix': 'enumerateIndexesWithOptions:usingBlock:'
    'body': 'enumerateIndexesWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(NSUInteger, BOOL *) block})'
  'enumerateRangesInRange:options:usingBlock:':
    'prefix': 'enumerateRangesInRange:options:usingBlock:'
    'body': 'enumerateRangesInRange(${1:NSRange range}, options:${2:NSEnumerationOptions opts}, usingBlock:${3:void (^)(NSRange, BOOL *) block})'
  'enumerateRangesUsingBlock:':
    'prefix': 'enumerateRangesUsingBlock:'
    'body': 'enumerateRangesUsingBlock(${1:void (^)(NSRange, BOOL *) block})'
  'enumerateRangesWithOptions:usingBlock:':
    'prefix': 'enumerateRangesWithOptions:usingBlock:'
    'body': 'enumerateRangesWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(NSRange, BOOL *) block})'
  'firstIndex':
    'prefix': 'firstIndex'
    'body': 'firstIndex()'
  'getIndexes:maxCount:inIndexRange:':
    'prefix': 'getIndexes:maxCount:inIndexRange:'
    'body': 'getIndexes(${1:NSUInteger* indexBuffer}, maxCount:${2:NSUInteger bufferSize}, inIndexRange:${3:NSRangePointer range})'
  'indexGreaterThanIndex:':
    'prefix': 'indexGreaterThanIndex:'
    'body': 'indexGreaterThanIndex(${1:NSUInteger value})'
  'indexGreaterThanOrEqualToIndex:':
    'prefix': 'indexGreaterThanOrEqualToIndex:'
    'body': 'indexGreaterThanOrEqualToIndex(${1:NSUInteger value})'
  'indexInRange:options:passingTest:':
    'prefix': 'indexInRange:options:passingTest:'
    'body': 'indexInRange(${1:NSRange range}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'indexLessThanIndex:':
    'prefix': 'indexLessThanIndex:'
    'body': 'indexLessThanIndex(${1:NSUInteger value})'
  'indexLessThanOrEqualToIndex:':
    'prefix': 'indexLessThanOrEqualToIndex:'
    'body': 'indexLessThanOrEqualToIndex(${1:NSUInteger value})'
  'indexPassingTest:':
    'prefix': 'indexPassingTest:'
    'body': 'indexPassingTest(${1:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'NSIndexSet.indexSet':
    'prefix': 'indexSet'
    'body': 'NSIndexSet.indexSet()'
  'NSIndexSet.indexSetWithIndex:':
    'prefix': 'indexSetWithIndex:'
    'body': 'NSIndexSet.indexSetWithIndex(${1:NSUInteger value})'
  'NSIndexSet.indexSetWithIndexesInRange:':
    'prefix': 'indexSetWithIndexesInRange:'
    'body': 'NSIndexSet.indexSetWithIndexesInRange(${1:NSRange range})'
  'indexWithOptions:passingTest:':
    'prefix': 'indexWithOptions:passingTest:'
    'body': 'indexWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'indexesInRange:options:passingTest:':
    'prefix': 'indexesInRange:options:passingTest:'
    'body': 'indexesInRange(${1:NSRange range}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'indexesPassingTest:':
    'prefix': 'indexesPassingTest:'
    'body': 'indexesPassingTest(${1:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'indexesWithOptions:passingTest:':
    'prefix': 'indexesWithOptions:passingTest:'
    'body': 'indexesWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(NSUInteger, BOOL *) predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithIndex:':
    'prefix': 'initWithIndex:'
    'body': 'initWithIndex(${1:NSUInteger value})'
  'initWithIndexSet:':
    'prefix': 'initWithIndexSet:'
    'body': 'initWithIndexSet(${1:NSIndexSet* indexSet})'
  'initWithIndexesInRange:':
    'prefix': 'initWithIndexesInRange:'
    'body': 'initWithIndexesInRange(${1:NSRange range})'
  'intersectsIndexesInRange:':
    'prefix': 'intersectsIndexesInRange:'
    'body': 'intersectsIndexesInRange(${1:NSRange range})'
  'isEqualToIndexSet:':
    'prefix': 'isEqualToIndexSet:'
    'body': 'isEqualToIndexSet(${1:NSIndexSet* indexSet})'
  'lastIndex':
    'prefix': 'lastIndex'
    'body': 'lastIndex()'
  'getBuffer:length:':
    'prefix': 'getBuffer:length:'
    'body': 'getBuffer(${1:uint8_t** buffer}, length:${2:NSUInteger* len})'
  'hasBytesAvailable':
    'prefix': 'hasBytesAvailable'
    'body': 'hasBytesAvailable()'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithFileAtPath:':
    'prefix': 'initWithFileAtPath:'
    'body': 'initWithFileAtPath(${1:NSString* path})'
  'initWithURL:':
    'prefix': 'initWithURL:'
    'body': 'initWithURL(${1:NSURL* url})'
  'NSInputStream.inputStreamWithData:':
    'prefix': 'inputStreamWithData:'
    'body': 'NSInputStream.inputStreamWithData(${1:NSData* data})'
  'NSInputStream.inputStreamWithFileAtPath:':
    'prefix': 'inputStreamWithFileAtPath:'
    'body': 'NSInputStream.inputStreamWithFileAtPath(${1:NSString* path})'
  'NSInputStream.inputStreamWithURL:':
    'prefix': 'inputStreamWithURL:'
    'body': 'NSInputStream.inputStreamWithURL(${1:NSURL* url})'
  'read:maxLength:':
    'prefix': 'read:maxLength:'
    'body': 'read(${1:uint8_t* buffer}, maxLength:${2:NSUInteger len})'
  'argumentsRetained':
    'prefix': 'argumentsRetained'
    'body': 'argumentsRetained()'
  'getArgument:atIndex:':
    'prefix': 'getArgument:atIndex:'
    'body': 'getArgument(${1:void* argumentLocation}, atIndex:${2:NSInteger idx})'
  'getReturnValue:':
    'prefix': 'getReturnValue:'
    'body': 'getReturnValue(${1:void* retLoc})'
  'NSInvocation.invocationWithMethodSignature:':
    'prefix': 'invocationWithMethodSignature:'
    'body': 'NSInvocation.invocationWithMethodSignature(${1:NSMethodSignature* sig})'
  'invoke':
    'prefix': 'invoke'
    'body': 'invoke()'
  'invokeWithTarget:':
    'prefix': 'invokeWithTarget:'
    'body': 'invokeWithTarget(${1:id target})'
  'methodSignature':
    'prefix': 'methodSignature'
    'body': 'methodSignature()'
  'retainArguments':
    'prefix': 'retainArguments'
    'body': 'retainArguments()'
  'selector':
    'prefix': 'selector'
    'body': 'selector()'
  'setArgument:atIndex:':
    'prefix': 'setArgument:atIndex:'
    'body': 'setArgument(${1:void* argumentLocation}, atIndex:${2:NSInteger idx})'
  'setReturnValue:':
    'prefix': 'setReturnValue:'
    'body': 'setReturnValue(${1:void* retLoc})'
  'setSelector:':
    'prefix': 'setSelector:'
    'body': 'setSelector(${1:SEL selector})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id target})'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'initWithInvocation:':
    'prefix': 'initWithInvocation:'
    'body': 'initWithInvocation(${1:NSInvocation* inv})'
  'initWithTarget:selector:object:':
    'prefix': 'initWithTarget:selector:object:'
    'body': 'initWithTarget(${1:id target}, selector:${2:SEL sel}, object:${3:id arg})'
  'invocation':
    'prefix': 'invocation'
    'body': 'invocation()'
  'result':
    'prefix': 'result'
    'body': 'result()'
  'NSJSONSerialization.JSONObjectWithData:options:error:':
    'prefix': 'JSONObjectWithData:options:error:'
    'body': 'NSJSONSerialization.JSONObjectWithData(${1:NSData* data}, options:${2:NSJSONReadingOptions opt}, error:${3:NSError** error})'
  'NSJSONSerialization.JSONObjectWithStream:options:error:':
    'prefix': 'JSONObjectWithStream:options:error:'
    'body': 'NSJSONSerialization.JSONObjectWithStream(${1:NSInputStream* stream}, options:${2:NSJSONReadingOptions opt}, error:${3:NSError** error})'
  'NSJSONSerialization.dataWithJSONObject:options:error:':
    'prefix': 'dataWithJSONObject:options:error:'
    'body': 'NSJSONSerialization.dataWithJSONObject(${1:id obj}, options:${2:NSJSONWritingOptions opt}, error:${3:NSError** error})'
  'NSJSONSerialization.isValidJSONObject:':
    'prefix': 'isValidJSONObject:'
    'body': 'NSJSONSerialization.isValidJSONObject(${1:id obj})'
  'NSJSONSerialization.writeJSONObject:toStream:options:error:':
    'prefix': 'writeJSONObject:toStream:options:error:'
    'body': 'NSJSONSerialization.writeJSONObject(${1:id obj}, toStream:${2:NSOutputStream* stream}, options:${3:NSJSONWritingOptions opt}, error:${4:NSError** error})'
  'NSKeyedArchiver.archiveRootObject:toFile:':
    'prefix': 'archiveRootObject:toFile:'
    'body': 'NSKeyedArchiver.archiveRootObject(${1:id rootObject}, toFile:${2:NSString* path})'
  'NSKeyedArchiver.archivedDataWithRootObject:':
    'prefix': 'archivedDataWithRootObject:'
    'body': 'NSKeyedArchiver.archivedDataWithRootObject(${1:id rootObject})'
  'NSKeyedArchiver.classNameForClass:':
    'prefix': 'classNameForClass:'
    'body': 'NSKeyedArchiver.classNameForClass(${1:Class cls})'
  'classNameForClass:':
    'prefix': 'classNameForClass:'
    'body': 'classNameForClass(${1:Class cls})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'encodeBool:forKey:':
    'prefix': 'encodeBool:forKey:'
    'body': 'encodeBool(${1:BOOL boolv}, forKey:${2:NSString* key})'
  'encodeBytes:length:forKey:':
    'prefix': 'encodeBytes:length:forKey:'
    'body': 'encodeBytes(${1:uint8_t* bytesp}, length:${2:NSUInteger lenv}, forKey:${3:NSString* key})'
  'encodeConditionalObject:forKey:':
    'prefix': 'encodeConditionalObject:forKey:'
    'body': 'encodeConditionalObject(${1:id objv}, forKey:${2:NSString* key})'
  'encodeDouble:forKey:':
    'prefix': 'encodeDouble:forKey:'
    'body': 'encodeDouble(${1:double realv}, forKey:${2:NSString* key})'
  'encodeFloat:forKey:':
    'prefix': 'encodeFloat:forKey:'
    'body': 'encodeFloat(${1:float realv}, forKey:${2:NSString* key})'
  'encodeInt32:forKey:':
    'prefix': 'encodeInt32:forKey:'
    'body': 'encodeInt32(${1:int32_t intv}, forKey:${2:NSString* key})'
  'encodeInt64:forKey:':
    'prefix': 'encodeInt64:forKey:'
    'body': 'encodeInt64(${1:int64_t intv}, forKey:${2:NSString* key})'
  'encodeInt:forKey:':
    'prefix': 'encodeInt:forKey:'
    'body': 'encodeInt(${1:int intv}, forKey:${2:NSString* key})'
  'encodeObject:forKey:':
    'prefix': 'encodeObject:forKey:'
    'body': 'encodeObject(${1:id objv}, forKey:${2:NSString* key})'
  'finishEncoding':
    'prefix': 'finishEncoding'
    'body': 'finishEncoding()'
  'initForWritingWithMutableData:':
    'prefix': 'initForWritingWithMutableData:'
    'body': 'initForWritingWithMutableData(${1:NSMutableData* data})'
  'outputFormat':
    'prefix': 'outputFormat'
    'body': 'outputFormat()'
  'NSKeyedArchiver.setClassName:forClass:':
    'prefix': 'setClassName:forClass:'
    'body': 'NSKeyedArchiver.setClassName(${1:NSString* codedName}, forClass:${2:Class cls})'
  'setClassName:forClass:':
    'prefix': 'setClassName:forClass:'
    'body': 'setClassName(${1:NSString* codedName}, forClass:${2:Class cls})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setOutputFormat:':
    'prefix': 'setOutputFormat:'
    'body': 'setOutputFormat(${1:NSPropertyListFormat format})'
  'setRequiresSecureCoding:':
    'prefix': 'setRequiresSecureCoding:'
    'body': 'setRequiresSecureCoding(${1:BOOL b})'
  'NSKeyedUnarchiver.classForClassName:':
    'prefix': 'classForClassName:'
    'body': 'NSKeyedUnarchiver.classForClassName(${1:NSString* codedName})'
  'classForClassName:':
    'prefix': 'classForClassName:'
    'body': 'classForClassName(${1:NSString* codedName})'
  'containsValueForKey:':
    'prefix': 'containsValueForKey:'
    'body': 'containsValueForKey(${1:NSString* key})'
  'decodeBoolForKey:':
    'prefix': 'decodeBoolForKey:'
    'body': 'decodeBoolForKey(${1:NSString* key})'
  'decodeBytesForKey:returnedLength:':
    'prefix': 'decodeBytesForKey:returnedLength:'
    'body': 'decodeBytesForKey(${1:NSString* key}, returnedLength:${2:NSUInteger* lengthp})'
  'decodeDoubleForKey:':
    'prefix': 'decodeDoubleForKey:'
    'body': 'decodeDoubleForKey(${1:NSString* key})'
  'decodeFloatForKey:':
    'prefix': 'decodeFloatForKey:'
    'body': 'decodeFloatForKey(${1:NSString* key})'
  'decodeInt32ForKey:':
    'prefix': 'decodeInt32ForKey:'
    'body': 'decodeInt32ForKey(${1:NSString* key})'
  'decodeInt64ForKey:':
    'prefix': 'decodeInt64ForKey:'
    'body': 'decodeInt64ForKey(${1:NSString* key})'
  'decodeIntForKey:':
    'prefix': 'decodeIntForKey:'
    'body': 'decodeIntForKey(${1:NSString* key})'
  'decodeObjectForKey:':
    'prefix': 'decodeObjectForKey:'
    'body': 'decodeObjectForKey(${1:NSString* key})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'finishDecoding':
    'prefix': 'finishDecoding'
    'body': 'finishDecoding()'
  'initForReadingWithData:':
    'prefix': 'initForReadingWithData:'
    'body': 'initForReadingWithData(${1:NSData* data})'
  'NSKeyedUnarchiver.setClass:forClassName:':
    'prefix': 'setClass:forClassName:'
    'body': 'NSKeyedUnarchiver.setClass(${1:Class cls}, forClassName:${2:NSString* codedName})'
  'setClass:forClassName:':
    'prefix': 'setClass:forClassName:'
    'body': 'setClass(${1:Class cls}, forClassName:${2:NSString* codedName})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setRequiresSecureCoding:':
    'prefix': 'setRequiresSecureCoding:'
    'body': 'setRequiresSecureCoding(${1:BOOL b})'
  'NSKeyedUnarchiver.unarchiveObjectWithData:':
    'prefix': 'unarchiveObjectWithData:'
    'body': 'NSKeyedUnarchiver.unarchiveObjectWithData(${1:NSData* data})'
  'NSKeyedUnarchiver.unarchiveObjectWithFile:':
    'prefix': 'unarchiveObjectWithFile:'
    'body': 'NSKeyedUnarchiver.unarchiveObjectWithFile(${1:NSString* path})'
  'NSLinguisticTagger.availableTagSchemesForLanguage:':
    'prefix': 'availableTagSchemesForLanguage:'
    'body': 'NSLinguisticTagger.availableTagSchemesForLanguage(${1:NSString* language})'
  'enumerateTagsInRange:scheme:options:usingBlock:':
    'prefix': 'enumerateTagsInRange:scheme:options:usingBlock:'
    'body': 'enumerateTagsInRange(${1:NSRange range}, scheme:${2:NSString* tagScheme}, options:${3:NSLinguisticTaggerOptions opts}, usingBlock:${4:void (^)(NSString *, NSRange, NSRange, BOOL *) block})'
  'initWithTagSchemes:options:':
    'prefix': 'initWithTagSchemes:options:'
    'body': 'initWithTagSchemes(${1:NSArray* tagSchemes}, options:${2:NSUInteger opts})'
  'orthographyAtIndex:effectiveRange:':
    'prefix': 'orthographyAtIndex:effectiveRange:'
    'body': 'orthographyAtIndex(${1:NSUInteger charIndex}, effectiveRange:${2:NSRangePointer effectiveRange})'
  'possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:':
    'prefix': 'possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:'
    'body': 'possibleTagsAtIndex(${1:NSUInteger charIndex}, scheme:${2:NSString* tagScheme}, tokenRange:${3:NSRangePointer tokenRange}, sentenceRange:${4:NSRangePointer sentenceRange}, scores:${5:NSArray** scores})'
  'sentenceRangeForRange:':
    'prefix': 'sentenceRangeForRange:'
    'body': 'sentenceRangeForRange(${1:NSRange range})'
  'setOrthography:range:':
    'prefix': 'setOrthography:range:'
    'body': 'setOrthography(${1:NSOrthography* orthography}, range:${2:NSRange range})'
  'setString:':
    'prefix': 'setString:'
    'body': 'setString(${1:NSString* string})'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'stringEditedInRange:changeInLength:':
    'prefix': 'stringEditedInRange:changeInLength:'
    'body': 'stringEditedInRange(${1:NSRange newRange}, changeInLength:${2:NSInteger delta})'
  'tagAtIndex:scheme:tokenRange:sentenceRange:':
    'prefix': 'tagAtIndex:scheme:tokenRange:sentenceRange:'
    'body': 'tagAtIndex(${1:NSUInteger charIndex}, scheme:${2:NSString* tagScheme}, tokenRange:${3:NSRangePointer tokenRange}, sentenceRange:${4:NSRangePointer sentenceRange})'
  'tagSchemes':
    'prefix': 'tagSchemes'
    'body': 'tagSchemes()'
  'tagsInRange:scheme:options:tokenRanges:':
    'prefix': 'tagsInRange:scheme:options:tokenRanges:'
    'body': 'tagsInRange(${1:NSRange range}, scheme:${2:NSString* tagScheme}, options:${3:NSLinguisticTaggerOptions opts}, tokenRanges:${4:NSArray** tokenRanges})'
  'NSLocale.ISOCountryCodes':
    'prefix': 'ISOCountryCodes'
    'body': 'NSLocale.ISOCountryCodes()'
  'NSLocale.ISOCurrencyCodes':
    'prefix': 'ISOCurrencyCodes'
    'body': 'NSLocale.ISOCurrencyCodes()'
  'NSLocale.ISOLanguageCodes':
    'prefix': 'ISOLanguageCodes'
    'body': 'NSLocale.ISOLanguageCodes()'
  'NSLocale.autoupdatingCurrentLocale':
    'prefix': 'autoupdatingCurrentLocale'
    'body': 'NSLocale.autoupdatingCurrentLocale()'
  'NSLocale.availableLocaleIdentifiers':
    'prefix': 'availableLocaleIdentifiers'
    'body': 'NSLocale.availableLocaleIdentifiers()'
  'NSLocale.canonicalLanguageIdentifierFromString:':
    'prefix': 'canonicalLanguageIdentifierFromString:'
    'body': 'NSLocale.canonicalLanguageIdentifierFromString(${1:NSString* string})'
  'NSLocale.canonicalLocaleIdentifierFromString:':
    'prefix': 'canonicalLocaleIdentifierFromString:'
    'body': 'NSLocale.canonicalLocaleIdentifierFromString(${1:NSString* string})'
  'NSLocale.characterDirectionForLanguage:':
    'prefix': 'characterDirectionForLanguage:'
    'body': 'NSLocale.characterDirectionForLanguage(${1:NSString* isoLangCode})'
  'NSLocale.commonISOCurrencyCodes':
    'prefix': 'commonISOCurrencyCodes'
    'body': 'NSLocale.commonISOCurrencyCodes()'
  'NSLocale.componentsFromLocaleIdentifier:':
    'prefix': 'componentsFromLocaleIdentifier:'
    'body': 'NSLocale.componentsFromLocaleIdentifier(${1:NSString* string})'
  'NSLocale.currentLocale':
    'prefix': 'currentLocale'
    'body': 'NSLocale.currentLocale()'
  'displayNameForKey:value:':
    'prefix': 'displayNameForKey:value:'
    'body': 'displayNameForKey(${1:id key}, value:${2:id value})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithLocaleIdentifier:':
    'prefix': 'initWithLocaleIdentifier:'
    'body': 'initWithLocaleIdentifier(${1:NSString* string})'
  'NSLocale.lineDirectionForLanguage:':
    'prefix': 'lineDirectionForLanguage:'
    'body': 'NSLocale.lineDirectionForLanguage(${1:NSString* isoLangCode})'
  'localeIdentifier':
    'prefix': 'localeIdentifier'
    'body': 'localeIdentifier()'
  'NSLocale.localeIdentifierFromComponents:':
    'prefix': 'localeIdentifierFromComponents:'
    'body': 'NSLocale.localeIdentifierFromComponents(${1:NSDictionary* dict})'
  'NSLocale.localeIdentifierFromWindowsLocaleCode:':
    'prefix': 'localeIdentifierFromWindowsLocaleCode:'
    'body': 'NSLocale.localeIdentifierFromWindowsLocaleCode(${1:uint32_t lcid})'
  'NSLocale.localeWithLocaleIdentifier:':
    'prefix': 'localeWithLocaleIdentifier:'
    'body': 'NSLocale.localeWithLocaleIdentifier(${1:NSString* ident})'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:id key})'
  'NSLocale.preferredLanguages':
    'prefix': 'preferredLanguages'
    'body': 'NSLocale.preferredLanguages()'
  'NSLocale.systemLocale':
    'prefix': 'systemLocale'
    'body': 'NSLocale.systemLocale()'
  'NSLocale.windowsLocaleCodeFromLocaleIdentifier:':
    'prefix': 'windowsLocaleCodeFromLocaleIdentifier:'
    'body': 'NSLocale.windowsLocaleCodeFromLocaleIdentifier(${1:NSString* localeIdentifier})'
  'lockBeforeDate:':
    'prefix': 'lockBeforeDate:'
    'body': 'lockBeforeDate(${1:NSDate* limit})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'tryLock':
    'prefix': 'tryLock'
    'body': 'tryLock()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithMachPort:':
    'prefix': 'initWithMachPort:'
    'body': 'initWithMachPort(${1:uint32_t machPort})'
  'initWithMachPort:options:':
    'prefix': 'initWithMachPort:options:'
    'body': 'initWithMachPort(${1:uint32_t machPort}, options:${2:NSUInteger f})'
  'machPort':
    'prefix': 'machPort'
    'body': 'machPort()'
  'NSMachPort.portWithMachPort:':
    'prefix': 'portWithMachPort:'
    'body': 'NSMachPort.portWithMachPort(${1:uint32_t machPort})'
  'NSMachPort.portWithMachPort:options:':
    'prefix': 'portWithMachPort:options:'
    'body': 'NSMachPort.portWithMachPort(${1:uint32_t machPort}, options:${2:NSUInteger f})'
  'removeFromRunLoop:forMode:':
    'prefix': 'removeFromRunLoop:forMode:'
    'body': 'removeFromRunLoop(${1:NSRunLoop* runLoop}, forMode:${2:NSString* mode})'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* runLoop}, forMode:${2:NSString* mode})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'dictionaryRepresentation':
    'prefix': 'dictionaryRepresentation'
    'body': 'dictionaryRepresentation()'
  'initWithKeyOptions:valueOptions:capacity:':
    'prefix': 'initWithKeyOptions:valueOptions:capacity:'
    'body': 'initWithKeyOptions(${1:NSPointerFunctionsOptions keyOptions}, valueOptions:${2:NSPointerFunctionsOptions valueOptions}, capacity:${3:NSUInteger initialCapacity})'
  'initWithKeyPointerFunctions:valuePointerFunctions:capacity:':
    'prefix': 'initWithKeyPointerFunctions:valuePointerFunctions:capacity:'
    'body': 'initWithKeyPointerFunctions(${1:NSPointerFunctions* keyFunctions}, valuePointerFunctions:${2:NSPointerFunctions* valueFunctions}, capacity:${3:NSUInteger initialCapacity})'
  'keyEnumerator':
    'prefix': 'keyEnumerator'
    'body': 'KeyEnumerator()'
  'keyPointerFunctions':
    'prefix': 'keyPointerFunctions'
    'body': 'KeyPointerFunctions()'
  'NSMapTable.mapTableWithKeyOptions:valueOptions:':
    'prefix': 'mapTableWithKeyOptions:valueOptions:'
    'body': 'NSMapTable.mapTableWithKeyOptions(${1:NSPointerFunctionsOptions keyOptions}, valueOptions:${2:NSPointerFunctionsOptions valueOptions})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:id aKey})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObjectForKey:':
    'prefix': 'removeObjectForKey:'
    'body': 'removeObjectForKey(${1:id aKey})'
  'setObject:forKey:':
    'prefix': 'setObject:forKey:'
    'body': 'setObject(${1:id anObject}, forKey:${2:id aKey})'
  'NSMapTable.strongToStrongObjectsMapTable':
    'prefix': 'strongToStrongObjectsMapTable'
    'body': 'NSMapTable.strongToStrongObjectsMapTable()'
  'NSMapTable.strongToWeakObjectsMapTable':
    'prefix': 'strongToWeakObjectsMapTable'
    'body': 'NSMapTable.strongToWeakObjectsMapTable()'
  'valuePointerFunctions':
    'prefix': 'valuePointerFunctions'
    'body': 'valuePointerFunctions()'
  'NSMapTable.weakToStrongObjectsMapTable':
    'prefix': 'weakToStrongObjectsMapTable'
    'body': 'NSMapTable.weakToStrongObjectsMapTable()'
  'NSMapTable.weakToWeakObjectsMapTable':
    'prefix': 'weakToWeakObjectsMapTable'
    'body': 'NSMapTable.weakToWeakObjectsMapTable()'
  'attributes':
    'prefix': 'attributes'
    'body': 'attributes()'
  'valueForAttribute:':
    'prefix': 'valueForAttribute:'
    'body': 'valueForAttribute(${1:NSString* key})'
  'valuesForAttributes:':
    'prefix': 'valuesForAttributes:'
    'body': 'valuesForAttributes(${1:NSArray* keys})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'disableUpdates':
    'prefix': 'disableUpdates'
    'body': 'disableUpdates()'
  'enableUpdates':
    'prefix': 'enableUpdates'
    'body': 'enableUpdates()'
  'enumerateResultsUsingBlock:':
    'prefix': 'enumerateResultsUsingBlock:'
    'body': 'enumerateResultsUsingBlock(${1:void (^)(id, NSUInteger, BOOL *) block})'
  'enumerateResultsWithOptions:usingBlock:':
    'prefix': 'enumerateResultsWithOptions:usingBlock:'
    'body': 'enumerateResultsWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(id, NSUInteger, BOOL *) block})'
  'groupedResults':
    'prefix': 'groupedResults'
    'body': 'groupedResults()'
  'groupingAttributes':
    'prefix': 'groupingAttributes'
    'body': 'groupingAttributes()'
  'indexOfResult:':
    'prefix': 'indexOfResult:'
    'body': 'indexOfResult(${1:id result})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'isGathering':
    'prefix': 'isGathering'
    'body': 'isGathering()'
  'isStarted':
    'prefix': 'isStarted'
    'body': 'isStarted()'
  'isStopped':
    'prefix': 'isStopped'
    'body': 'isStopped()'
  'notificationBatchingInterval':
    'prefix': 'notificationBatchingInterval'
    'body': 'notificationBatchingInterval()'
  'operationQueue':
    'prefix': 'operationQueue'
    'body': 'operationQueue()'
  'predicate':
    'prefix': 'predicate'
    'body': 'predicate()'
  'resultAtIndex:':
    'prefix': 'resultAtIndex:'
    'body': 'resultAtIndex(${1:NSUInteger idx})'
  'resultCount':
    'prefix': 'resultCount'
    'body': 'resultCount()'
  'results':
    'prefix': 'results'
    'body': 'results()'
  'searchItems':
    'prefix': 'searchItems'
    'body': 'searchItems()'
  'searchScopes':
    'prefix': 'searchScopes'
    'body': 'searchScopes()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setGroupingAttributes:':
    'prefix': 'setGroupingAttributes:'
    'body': 'setGroupingAttributes(${1:NSArray* attrs})'
  'setNotificationBatchingInterval:':
    'prefix': 'setNotificationBatchingInterval:'
    'body': 'setNotificationBatchingInterval(${1:NSTimeInterval ti})'
  'setOperationQueue:':
    'prefix': 'setOperationQueue:'
    'body': 'setOperationQueue(${1:NSOperationQueue* operationQueue})'
  'setPredicate:':
    'prefix': 'setPredicate:'
    'body': 'setPredicate(${1:NSPredicate* predicate})'
  'setSearchItems:':
    'prefix': 'setSearchItems:'
    'body': 'setSearchItems(${1:NSArray* items})'
  'setSearchScopes:':
    'prefix': 'setSearchScopes:'
    'body': 'setSearchScopes(${1:NSArray* scopes})'
  'setSortDescriptors:':
    'prefix': 'setSortDescriptors:'
    'body': 'setSortDescriptors(${1:NSArray* descriptors})'
  'setValueListAttributes:':
    'prefix': 'setValueListAttributes:'
    'body': 'setValueListAttributes(${1:NSArray* attrs})'
  'sortDescriptors':
    'prefix': 'sortDescriptors'
    'body': 'sortDescriptors()'
  'startQuery':
    'prefix': 'startQuery'
    'body': 'startQuery()'
  'stopQuery':
    'prefix': 'stopQuery'
    'body': 'stopQuery()'
  'valueListAttributes':
    'prefix': 'valueListAttributes'
    'body': 'valueListAttributes()'
  'valueLists':
    'prefix': 'valueLists'
    'body': 'valueLists()'
  'valueOfAttribute:forResultAtIndex:':
    'prefix': 'valueOfAttribute:forResultAtIndex:'
    'body': 'valueOfAttribute(${1:NSString* attrName}, forResultAtIndex:${2:NSUInteger idx})'
  'attribute':
    'prefix': 'attribute'
    'body': 'attribute()'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'attribute':
    'prefix': 'attribute'
    'body': 'attribute()'
  'resultAtIndex:':
    'prefix': 'resultAtIndex:'
    'body': 'resultAtIndex(${1:NSUInteger idx})'
  'resultCount':
    'prefix': 'resultCount'
    'body': 'resultCount()'
  'results':
    'prefix': 'results'
    'body': 'results()'
  'subgroups':
    'prefix': 'subgroups'
    'body': 'subgroups()'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'frameLength':
    'prefix': 'frameLength'
    'body': 'frameLength()'
  'getArgumentTypeAtIndex:':
    'prefix': 'getArgumentTypeAtIndex:'
    'body': 'getArgumentTypeAtIndex(${1:NSUInteger idx})'
  'isOneway':
    'prefix': 'isOneway'
    'body': 'isOneway()'
  'methodReturnLength':
    'prefix': 'methodReturnLength'
    'body': 'methodReturnLength()'
  'methodReturnType':
    'prefix': 'methodReturnType'
    'body': 'methodReturnType()'
  'numberOfArguments':
    'prefix': 'numberOfArguments'
    'body': 'numberOfArguments()'
  'NSMethodSignature.signatureWithObjCTypes:':
    'prefix': 'signatureWithObjCTypes:'
    'body': 'NSMethodSignature.signatureWithObjCTypes(${1:char* types})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id anObject})'
  'addObjectsFromArray:':
    'prefix': 'addObjectsFromArray:'
    'body': 'addObjectsFromArray(${1:NSArray* otherArray})'
  'NSMutableArray.arrayWithCapacity:':
    'prefix': 'arrayWithCapacity:'
    'body': 'NSMutableArray.arrayWithCapacity(${1:NSUInteger numItems})'
  'exchangeObjectAtIndex:withObjectAtIndex:':
    'prefix': 'exchangeObjectAtIndex:withObjectAtIndex:'
    'body': 'exchangeObjectAtIndex(${1:NSUInteger idx1}, withObjectAtIndex:${2:NSUInteger idx2})'
  'filterUsingPredicate:':
    'prefix': 'filterUsingPredicate:'
    'body': 'filterUsingPredicate(${1:NSPredicate* predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger numItems})'
  'insertObject:atIndex:':
    'prefix': 'insertObject:atIndex:'
    'body': 'insertObject(${1:id anObject}, atIndex:${2:NSUInteger index})'
  'insertObjects:atIndexes:':
    'prefix': 'insertObjects:atIndexes:'
    'body': 'insertObjects(${1:NSArray* objects}, atIndexes:${2:NSIndexSet* indexes})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeLastObject':
    'prefix': 'removeLastObject'
    'body': 'removeLastObject()'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id anObject})'
  'removeObject:inRange:':
    'prefix': 'removeObject:inRange:'
    'body': 'removeObject(${1:id anObject}, inRange:${2:NSRange range})'
  'removeObjectAtIndex:':
    'prefix': 'removeObjectAtIndex:'
    'body': 'removeObjectAtIndex(${1:NSUInteger index})'
  'removeObjectIdenticalTo:':
    'prefix': 'removeObjectIdenticalTo:'
    'body': 'removeObjectIdenticalTo(${1:id anObject})'
  'removeObjectIdenticalTo:inRange:':
    'prefix': 'removeObjectIdenticalTo:inRange:'
    'body': 'removeObjectIdenticalTo(${1:id anObject}, inRange:${2:NSRange range})'
  'removeObjectsAtIndexes:':
    'prefix': 'removeObjectsAtIndexes:'
    'body': 'removeObjectsAtIndexes(${1:NSIndexSet* indexes})'
  'removeObjectsFromIndices:numIndices:':
    'prefix': 'removeObjectsFromIndices:numIndices:'
    'body': 'removeObjectsFromIndices(${1:NSUInteger* indices}, numIndices:${2:NSUInteger cnt})'
  'removeObjectsInArray:':
    'prefix': 'removeObjectsInArray:'
    'body': 'removeObjectsInArray(${1:NSArray* otherArray})'
  'removeObjectsInRange:':
    'prefix': 'removeObjectsInRange:'
    'body': 'removeObjectsInRange(${1:NSRange range})'
  'replaceObjectAtIndex:withObject:':
    'prefix': 'replaceObjectAtIndex:withObject:'
    'body': 'replaceObjectAtIndex(${1:NSUInteger index}, withObject:${2:id anObject})'
  'replaceObjectsAtIndexes:withObjects:':
    'prefix': 'replaceObjectsAtIndexes:withObjects:'
    'body': 'replaceObjectsAtIndexes(${1:NSIndexSet* indexes}, withObjects:${2:NSArray* objects})'
  'replaceObjectsInRange:withObjectsFromArray:':
    'prefix': 'replaceObjectsInRange:withObjectsFromArray:'
    'body': 'replaceObjectsInRange(${1:NSRange range}, withObjectsFromArray:${2:NSArray* otherArray})'
  'replaceObjectsInRange:withObjectsFromArray:range:':
    'prefix': 'replaceObjectsInRange:withObjectsFromArray:range:'
    'body': 'replaceObjectsInRange(${1:NSRange range}, withObjectsFromArray:${2:NSArray* otherArray}, range:${3:NSRange otherRange})'
  'setArray:':
    'prefix': 'setArray:'
    'body': 'setArray(${1:NSArray* otherArray})'
  'setObject:atIndexedSubscript:':
    'prefix': 'setObject:atIndexedSubscript:'
    'body': 'setObject(${1:id obj}, atIndexedSubscript:${2:NSUInteger idx})'
  'sortUsingComparator:':
    'prefix': 'sortUsingComparator:'
    'body': 'sortUsingComparator(${1:NSComparator cmptr})'
  'sortUsingDescriptors:':
    'prefix': 'sortUsingDescriptors:'
    'body': 'sortUsingDescriptors(${1:NSArray* sortDescriptors})'
  'sortUsingFunction:context:':
    'prefix': 'sortUsingFunction:context:'
    'body': 'sortUsingFunction(${1:NSInteger (*)(id, id, void *) compare}, context:${2:void* context})'
  'sortUsingSelector:':
    'prefix': 'sortUsingSelector:'
    'body': 'sortUsingSelector(${1:SEL comparator})'
  'sortWithOptions:usingComparator:':
    'prefix': 'sortWithOptions:usingComparator:'
    'body': 'sortWithOptions(${1:NSSortOptions opts}, usingComparator:${2:NSComparator cmptr})'
  'addAttribute:value:range:':
    'prefix': 'addAttribute:value:range:'
    'body': 'addAttribute(${1:NSString* name}, value:${2:id value}, range:${3:NSRange range})'
  'addAttributes:range:':
    'prefix': 'addAttributes:range:'
    'body': 'addAttributes(${1:NSDictionary* attrs}, range:${2:NSRange range})'
  'appendAttributedString:':
    'prefix': 'appendAttributedString:'
    'body': 'appendAttributedString(${1:NSAttributedString* attrString})'
  'beginEditing':
    'prefix': 'beginEditing'
    'body': 'beginEditing()'
  'deleteCharactersInRange:':
    'prefix': 'deleteCharactersInRange:'
    'body': 'deleteCharactersInRange(${1:NSRange range})'
  'endEditing':
    'prefix': 'endEditing'
    'body': 'endEditing()'
  'insertAttributedString:atIndex:':
    'prefix': 'insertAttributedString:atIndex:'
    'body': 'insertAttributedString(${1:NSAttributedString* attrString}, atIndex:${2:NSUInteger loc})'
  'mutableString':
    'prefix': 'mutableString'
    'body': 'mutableString()'
  'removeAttribute:range:':
    'prefix': 'removeAttribute:range:'
    'body': 'removeAttribute(${1:NSString* name}, range:${2:NSRange range})'
  'replaceCharactersInRange:withAttributedString:':
    'prefix': 'replaceCharactersInRange:withAttributedString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withAttributedString:${2:NSAttributedString* attrString})'
  'replaceCharactersInRange:withString:':
    'prefix': 'replaceCharactersInRange:withString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withString:${2:NSString* str})'
  'setAttributedString:':
    'prefix': 'setAttributedString:'
    'body': 'setAttributedString(${1:NSAttributedString* attrString})'
  'setAttributes:range:':
    'prefix': 'setAttributes:range:'
    'body': 'setAttributes(${1:NSDictionary* attrs}, range:${2:NSRange range})'
  'addCharactersInRange:':
    'prefix': 'addCharactersInRange:'
    'body': 'addCharactersInRange(${1:NSRange aRange})'
  'addCharactersInString:':
    'prefix': 'addCharactersInString:'
    'body': 'addCharactersInString(${1:NSString* aString})'
  'formIntersectionWithCharacterSet:':
    'prefix': 'formIntersectionWithCharacterSet:'
    'body': 'formIntersectionWithCharacterSet(${1:NSCharacterSet* otherSet})'
  'formUnionWithCharacterSet:':
    'prefix': 'formUnionWithCharacterSet:'
    'body': 'formUnionWithCharacterSet(${1:NSCharacterSet* otherSet})'
  'invert':
    'prefix': 'invert'
    'body': 'invert()'
  'removeCharactersInRange:':
    'prefix': 'removeCharactersInRange:'
    'body': 'removeCharactersInRange(${1:NSRange aRange})'
  'removeCharactersInString:':
    'prefix': 'removeCharactersInString:'
    'body': 'removeCharactersInString(${1:NSString* aString})'
  'appendBytes:length:':
    'prefix': 'appendBytes:length:'
    'body': 'appendBytes(${1:void* bytes}, length:${2:NSUInteger length})'
  'appendData:':
    'prefix': 'appendData:'
    'body': 'appendData(${1:NSData* other})'
  'NSMutableData.dataWithCapacity:':
    'prefix': 'dataWithCapacity:'
    'body': 'NSMutableData.dataWithCapacity(${1:NSUInteger aNumItems})'
  'NSMutableData.dataWithLength:':
    'prefix': 'dataWithLength:'
    'body': 'NSMutableData.dataWithLength(${1:NSUInteger length})'
  'increaseLengthBy:':
    'prefix': 'increaseLengthBy:'
    'body': 'increaseLengthBy(${1:NSUInteger extraLength})'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger capacity})'
  'initWithLength:':
    'prefix': 'initWithLength:'
    'body': 'initWithLength(${1:NSUInteger length})'
  'mutableBytes':
    'prefix': 'mutableBytes'
    'body': 'mutableBytes()'
  'replaceBytesInRange:withBytes:':
    'prefix': 'replaceBytesInRange:withBytes:'
    'body': 'replaceBytesInRange(${1:NSRange range}, withBytes:${2:void* bytes})'
  'replaceBytesInRange:withBytes:length:':
    'prefix': 'replaceBytesInRange:withBytes:length:'
    'body': 'replaceBytesInRange(${1:NSRange range}, withBytes:${2:void* replacementBytes}, length:${3:NSUInteger replacementLength})'
  'resetBytesInRange:':
    'prefix': 'resetBytesInRange:'
    'body': 'resetBytesInRange(${1:NSRange range})'
  'setData:':
    'prefix': 'setData:'
    'body': 'setData(${1:NSData* data})'
  'setLength:':
    'prefix': 'setLength:'
    'body': 'setLength(${1:NSUInteger length})'
  'addEntriesFromDictionary:':
    'prefix': 'addEntriesFromDictionary:'
    'body': 'addEntriesFromDictionary(${1:NSDictionary* otherDictionary})'
  'NSMutableDictionary.dictionaryWithCapacity:':
    'prefix': 'dictionaryWithCapacity:'
    'body': 'NSMutableDictionary.dictionaryWithCapacity(${1:NSUInteger numItems})'
  'NSMutableDictionary.dictionaryWithSharedKeySet:':
    'prefix': 'dictionaryWithSharedKeySet:'
    'body': 'NSMutableDictionary.dictionaryWithSharedKeySet(${1:id keyset})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger numItems})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObjectForKey:':
    'prefix': 'removeObjectForKey:'
    'body': 'removeObjectForKey(${1:id aKey})'
  'removeObjectsForKeys:':
    'prefix': 'removeObjectsForKeys:'
    'body': 'removeObjectsForKeys(${1:NSArray* keyArray})'
  'setDictionary:':
    'prefix': 'setDictionary:'
    'body': 'setDictionary(${1:NSDictionary* otherDictionary})'
  'setObject:forKey:':
    'prefix': 'setObject:forKey:'
    'body': 'setObject(${1:id anObject}, forKey:${2:id aKey})'
  'setObject:forKeyedSubscript:':
    'prefix': 'setObject:forKeyedSubscript:'
    'body': 'setObject(${1:id obj}, forKeyedSubscript:${2:id key})'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'addIndex:':
    'prefix': 'addIndex:'
    'body': 'addIndex(${1:NSUInteger value})'
  'addIndexes:':
    'prefix': 'addIndexes:'
    'body': 'addIndexes(${1:NSIndexSet* indexSet})'
  'addIndexesInRange:':
    'prefix': 'addIndexesInRange:'
    'body': 'addIndexesInRange(${1:NSRange range})'
  'removeAllIndexes':
    'prefix': 'removeAllIndexes'
    'body': 'removeAllIndexes()'
  'removeIndex:':
    'prefix': 'removeIndex:'
    'body': 'removeIndex(${1:NSUInteger value})'
  'removeIndexes:':
    'prefix': 'removeIndexes:'
    'body': 'removeIndexes(${1:NSIndexSet* indexSet})'
  'removeIndexesInRange:':
    'prefix': 'removeIndexesInRange:'
    'body': 'removeIndexesInRange(${1:NSRange range})'
  'shiftIndexesStartingAtIndex:by:':
    'prefix': 'shiftIndexesStartingAtIndex:by:'
    'body': 'shiftIndexesStartingAtIndex(${1:NSUInteger index}, by:${2:NSInteger delta})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'addObjects:count:':
    'prefix': 'addObjects:count:'
    'body': 'addObjects(${1:id* objects}, count:${2:NSUInteger count})'
  'addObjectsFromArray:':
    'prefix': 'addObjectsFromArray:'
    'body': 'addObjectsFromArray(${1:NSArray* array})'
  'exchangeObjectAtIndex:withObjectAtIndex:':
    'prefix': 'exchangeObjectAtIndex:withObjectAtIndex:'
    'body': 'exchangeObjectAtIndex(${1:NSUInteger idx1}, withObjectAtIndex:${2:NSUInteger idx2})'
  'filterUsingPredicate:':
    'prefix': 'filterUsingPredicate:'
    'body': 'filterUsingPredicate(${1:NSPredicate* p})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger numItems})'
  'insertObject:atIndex:':
    'prefix': 'insertObject:atIndex:'
    'body': 'insertObject(${1:id object}, atIndex:${2:NSUInteger idx})'
  'insertObjects:atIndexes:':
    'prefix': 'insertObjects:atIndexes:'
    'body': 'insertObjects(${1:NSArray* objects}, atIndexes:${2:NSIndexSet* indexes})'
  'intersectOrderedSet:':
    'prefix': 'intersectOrderedSet:'
    'body': 'intersectOrderedSet(${1:NSOrderedSet* other})'
  'intersectSet:':
    'prefix': 'intersectSet:'
    'body': 'intersectSet(${1:NSSet* other})'
  'minusOrderedSet:':
    'prefix': 'minusOrderedSet:'
    'body': 'minusOrderedSet(${1:NSOrderedSet* other})'
  'minusSet:':
    'prefix': 'minusSet:'
    'body': 'minusSet(${1:NSSet* other})'
  'moveObjectsAtIndexes:toIndex:':
    'prefix': 'moveObjectsAtIndexes:toIndex:'
    'body': 'moveObjectsAtIndexes(${1:NSIndexSet* indexes}, toIndex:${2:NSUInteger idx})'
  'NSMutableOrderedSet.orderedSetWithCapacity:':
    'prefix': 'orderedSetWithCapacity:'
    'body': 'NSMutableOrderedSet.orderedSetWithCapacity(${1:NSUInteger numItems})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'removeObjectAtIndex:':
    'prefix': 'removeObjectAtIndex:'
    'body': 'removeObjectAtIndex(${1:NSUInteger idx})'
  'removeObjectsAtIndexes:':
    'prefix': 'removeObjectsAtIndexes:'
    'body': 'removeObjectsAtIndexes(${1:NSIndexSet* indexes})'
  'removeObjectsInArray:':
    'prefix': 'removeObjectsInArray:'
    'body': 'removeObjectsInArray(${1:NSArray* array})'
  'removeObjectsInRange:':
    'prefix': 'removeObjectsInRange:'
    'body': 'removeObjectsInRange(${1:NSRange range})'
  'replaceObjectAtIndex:withObject:':
    'prefix': 'replaceObjectAtIndex:withObject:'
    'body': 'replaceObjectAtIndex(${1:NSUInteger idx}, withObject:${2:id object})'
  'replaceObjectsAtIndexes:withObjects:':
    'prefix': 'replaceObjectsAtIndexes:withObjects:'
    'body': 'replaceObjectsAtIndexes(${1:NSIndexSet* indexes}, withObjects:${2:NSArray* objects})'
  'replaceObjectsInRange:withObjects:count:':
    'prefix': 'replaceObjectsInRange:withObjects:count:'
    'body': 'replaceObjectsInRange(${1:NSRange range}, withObjects:${2:id* objects}, count:${3:NSUInteger count})'
  'setObject:atIndex:':
    'prefix': 'setObject:atIndex:'
    'body': 'setObject(${1:id obj}, atIndex:${2:NSUInteger idx})'
  'setObject:atIndexedSubscript:':
    'prefix': 'setObject:atIndexedSubscript:'
    'body': 'setObject(${1:id obj}, atIndexedSubscript:${2:NSUInteger idx})'
  'sortRange:options:usingComparator:':
    'prefix': 'sortRange:options:usingComparator:'
    'body': 'sortRange(${1:NSRange range}, options:${2:NSSortOptions opts}, usingComparator:${3:NSComparator cmptr})'
  'sortUsingComparator:':
    'prefix': 'sortUsingComparator:'
    'body': 'sortUsingComparator(${1:NSComparator cmptr})'
  'sortUsingDescriptors:':
    'prefix': 'sortUsingDescriptors:'
    'body': 'sortUsingDescriptors(${1:NSArray* sortDescriptors})'
  'sortWithOptions:usingComparator:':
    'prefix': 'sortWithOptions:usingComparator:'
    'body': 'sortWithOptions(${1:NSSortOptions opts}, usingComparator:${2:NSComparator cmptr})'
  'unionOrderedSet:':
    'prefix': 'unionOrderedSet:'
    'body': 'unionOrderedSet(${1:NSOrderedSet* other})'
  'unionSet:':
    'prefix': 'unionSet:'
    'body': 'unionSet(${1:NSSet* other})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'addObjectsFromArray:':
    'prefix': 'addObjectsFromArray:'
    'body': 'addObjectsFromArray(${1:NSArray* array})'
  'filterUsingPredicate:':
    'prefix': 'filterUsingPredicate:'
    'body': 'filterUsingPredicate(${1:NSPredicate* predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger numItems})'
  'intersectSet:':
    'prefix': 'intersectSet:'
    'body': 'intersectSet(${1:NSSet* otherSet})'
  'minusSet:':
    'prefix': 'minusSet:'
    'body': 'minusSet(${1:NSSet* otherSet})'
  'removeAllObjects':
    'prefix': 'removeAllObjects'
    'body': 'removeAllObjects()'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'setSet:':
    'prefix': 'setSet:'
    'body': 'setSet(${1:NSSet* otherSet})'
  'NSMutableSet.setWithCapacity:':
    'prefix': 'setWithCapacity:'
    'body': 'NSMutableSet.setWithCapacity(${1:NSUInteger numItems})'
  'unionSet:':
    'prefix': 'unionSet:'
    'body': 'unionSet(${1:NSSet* otherSet})'
  'appendFormat:':
    'prefix': 'appendFormat:'
    'body': 'appendFormat(${1:NSString* format})'
  'appendString:':
    'prefix': 'appendString:'
    'body': 'appendString(${1:NSString* aString})'
  'deleteCharactersInRange:':
    'prefix': 'deleteCharactersInRange:'
    'body': 'deleteCharactersInRange(${1:NSRange range})'
  'initWithCapacity:':
    'prefix': 'initWithCapacity:'
    'body': 'initWithCapacity(${1:NSUInteger capacity})'
  'insertString:atIndex:':
    'prefix': 'insertString:atIndex:'
    'body': 'insertString(${1:NSString* aString}, atIndex:${2:NSUInteger loc})'
  'replaceCharactersInRange:withString:':
    'prefix': 'replaceCharactersInRange:withString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withString:${2:NSString* aString})'
  'replaceOccurrencesOfString:withString:options:range:':
    'prefix': 'replaceOccurrencesOfString:withString:options:range:'
    'body': 'replaceOccurrencesOfString(${1:NSString* target}, withString:${2:NSString* replacement}, options:${3:NSStringCompareOptions options}, range:${4:NSRange searchRange})'
  'setString:':
    'prefix': 'setString:'
    'body': 'setString(${1:NSString* aString})'
  'NSMutableString.stringWithCapacity:':
    'prefix': 'stringWithCapacity:'
    'body': 'NSMutableString.stringWithCapacity(${1:NSUInteger capacity})'
  'addValue:forHTTPHeaderField:':
    'prefix': 'addValue:forHTTPHeaderField:'
    'body': 'addValue(${1:NSString* value}, forHTTPHeaderField:${2:NSString* field})'
  'setAllHTTPHeaderFields:':
    'prefix': 'setAllHTTPHeaderFields:'
    'body': 'setAllHTTPHeaderFields(${1:NSDictionary* headerFields})'
  'setAllowsCellularAccess:':
    'prefix': 'setAllowsCellularAccess:'
    'body': 'setAllowsCellularAccess(${1:BOOL allow})'
  'setCachePolicy:':
    'prefix': 'setCachePolicy:'
    'body': 'setCachePolicy(${1:NSURLRequestCachePolicy policy})'
  'setHTTPBody:':
    'prefix': 'setHTTPBody:'
    'body': 'setHTTPBody(${1:NSData* data})'
  'setHTTPBodyStream:':
    'prefix': 'setHTTPBodyStream:'
    'body': 'setHTTPBodyStream(${1:NSInputStream* inputStream})'
  'setHTTPMethod:':
    'prefix': 'setHTTPMethod:'
    'body': 'setHTTPMethod(${1:NSString* method})'
  'setHTTPShouldHandleCookies:':
    'prefix': 'setHTTPShouldHandleCookies:'
    'body': 'setHTTPShouldHandleCookies(${1:BOOL should})'
  'setHTTPShouldUsePipelining:':
    'prefix': 'setHTTPShouldUsePipelining:'
    'body': 'setHTTPShouldUsePipelining(${1:BOOL shouldUsePipelining})'
  'setMainDocumentURL:':
    'prefix': 'setMainDocumentURL:'
    'body': 'setMainDocumentURL(${1:NSURL* URL})'
  'setNetworkServiceType:':
    'prefix': 'setNetworkServiceType:'
    'body': 'setNetworkServiceType(${1:NSURLRequestNetworkServiceType networkServiceType})'
  'setTimeoutInterval:':
    'prefix': 'setTimeoutInterval:'
    'body': 'setTimeoutInterval(${1:NSTimeInterval seconds})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* URL})'
  'setValue:forHTTPHeaderField:':
    'prefix': 'setValue:forHTTPHeaderField:'
    'body': 'setValue(${1:NSString* value}, forHTTPHeaderField:${2:NSString* field})'
  'TXTRecordData':
    'prefix': 'TXTRecordData'
    'body': 'TXTRecordData()'
  'addresses':
    'prefix': 'addresses'
    'body': 'addresses()'
  'NSNetService.dataFromTXTRecordDictionary:':
    'prefix': 'dataFromTXTRecordDictionary:'
    'body': 'NSNetService.dataFromTXTRecordDictionary(${1:NSDictionary* txtDictionary})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'NSNetService.dictionaryFromTXTRecordData:':
    'prefix': 'dictionaryFromTXTRecordData:'
    'body': 'NSNetService.dictionaryFromTXTRecordData(${1:NSData* txtData})'
  'domain':
    'prefix': 'domain'
    'body': 'domain()'
  'getInputStream:outputStream:':
    'prefix': 'getInputStream:outputStream:'
    'body': 'getInputStream(${1:NSInputStream** inputStream}, outputStream:${2:NSOutputStream** outputStream})'
  'hostName':
    'prefix': 'hostName'
    'body': 'hostName()'
  'includesPeerToPeer':
    'prefix': 'includesPeerToPeer'
    'body': 'includesPeerToPeer()'
  'initWithDomain:type:name:':
    'prefix': 'initWithDomain:type:name:'
    'body': 'initWithDomain(${1:NSString* domain}, type:${2:NSString* type}, name:${3:NSString* name})'
  'initWithDomain:type:name:port:':
    'prefix': 'initWithDomain:type:name:port:'
    'body': 'initWithDomain(${1:NSString* domain}, type:${2:NSString* type}, name:${3:NSString* name}, port:${4:int port})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'port':
    'prefix': 'port'
    'body': 'port()'
  'publish':
    'prefix': 'publish'
    'body': 'publish()'
  'publishWithOptions:':
    'prefix': 'publishWithOptions:'
    'body': 'publishWithOptions(${1:NSNetServiceOptions options})'
  'removeFromRunLoop:forMode:':
    'prefix': 'removeFromRunLoop:forMode:'
    'body': 'removeFromRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'resolve':
    'prefix': 'resolve'
    'body': 'resolve()'
  'resolveWithTimeout:':
    'prefix': 'resolveWithTimeout:'
    'body': 'resolveWithTimeout(${1:NSTimeInterval timeout})'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setIncludesPeerToPeer:':
    'prefix': 'setIncludesPeerToPeer:'
    'body': 'setIncludesPeerToPeer(${1:BOOL includesPeerToPeer})'
  'setTXTRecordData:':
    'prefix': 'setTXTRecordData:'
    'body': 'setTXTRecordData(${1:NSData* recordData})'
  'startMonitoring':
    'prefix': 'startMonitoring'
    'body': 'startMonitoring()'
  'stop':
    'prefix': 'stop'
    'body': 'stop()'
  'stopMonitoring':
    'prefix': 'stopMonitoring'
    'body': 'stopMonitoring()'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'includesPeerToPeer':
    'prefix': 'includesPeerToPeer'
    'body': 'includesPeerToPeer()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'removeFromRunLoop:forMode:':
    'prefix': 'removeFromRunLoop:forMode:'
    'body': 'removeFromRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'searchForBrowsableDomains':
    'prefix': 'searchForBrowsableDomains'
    'body': 'searchForBrowsableDomains()'
  'searchForRegistrationDomains':
    'prefix': 'searchForRegistrationDomains'
    'body': 'searchForRegistrationDomains()'
  'searchForServicesOfType:inDomain:':
    'prefix': 'searchForServicesOfType:inDomain:'
    'body': 'searchForServicesOfType(${1:NSString* type}, inDomain:${2:NSString* domainString})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setIncludesPeerToPeer:':
    'prefix': 'setIncludesPeerToPeer:'
    'body': 'setIncludesPeerToPeer(${1:BOOL includesPeerToPeer})'
  'stop':
    'prefix': 'stop'
    'body': 'stop()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithName:object:userInfo:':
    'prefix': 'initWithName:object:userInfo:'
    'body': 'initWithName(${1:NSString* name}, object:${2:id object}, userInfo:${3:NSDictionary* userInfo})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'NSNotification.notificationWithName:object:':
    'prefix': 'notificationWithName:object:'
    'body': 'NSNotification.notificationWithName(${1:NSString* aName}, object:${2:id anObject})'
  'NSNotification.notificationWithName:object:userInfo:':
    'prefix': 'notificationWithName:object:userInfo:'
    'body': 'NSNotification.notificationWithName(${1:NSString* aName}, object:${2:id anObject}, userInfo:${3:NSDictionary* aUserInfo})'
  'object':
    'prefix': 'object'
    'body': 'object()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'addObserver:selector:name:object:':
    'prefix': 'addObserver:selector:name:object:'
    'body': 'addObserver(${1:id observer}, selector:${2:SEL aSelector}, name:${3:NSString* aName}, object:${4:id anObject})'
  'addObserverForName:object:queue:usingBlock:':
    'prefix': 'addObserverForName:object:queue:usingBlock:'
    'body': 'addObserverForName(${1:NSString* name}, object:${2:id obj}, queue:${3:NSOperationQueue* queue}, usingBlock:${4:void (^)(NSNotification *) block})'
  'NSNotificationCenter.defaultCenter':
    'prefix': 'defaultCenter'
    'body': 'NSNotificationCenter.defaultCenter()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'postNotification:':
    'prefix': 'postNotification:'
    'body': 'postNotification(${1:NSNotification* notification})'
  'postNotificationName:object:':
    'prefix': 'postNotificationName:object:'
    'body': 'postNotificationName(${1:NSString* aName}, object:${2:id anObject})'
  'postNotificationName:object:userInfo:':
    'prefix': 'postNotificationName:object:userInfo:'
    'body': 'postNotificationName(${1:NSString* aName}, object:${2:id anObject}, userInfo:${3:NSDictionary* aUserInfo})'
  'removeObserver:':
    'prefix': 'removeObserver:'
    'body': 'removeObserver(${1:id observer})'
  'removeObserver:name:object:':
    'prefix': 'removeObserver:name:object:'
    'body': 'removeObserver(${1:id observer}, name:${2:NSString* aName}, object:${3:id anObject})'
  'NSNotificationQueue.defaultQueue':
    'prefix': 'defaultQueue'
    'body': 'NSNotificationQueue.defaultQueue()'
  'dequeueNotificationsMatching:coalesceMask:':
    'prefix': 'dequeueNotificationsMatching:coalesceMask:'
    'body': 'dequeueNotificationsMatching(${1:NSNotification* notification}, coalesceMask:${2:NSUInteger coalesceMask})'
  'enqueueNotification:postingStyle:':
    'prefix': 'enqueueNotification:postingStyle:'
    'body': 'enqueueNotification(${1:NSNotification* notification}, postingStyle:${2:NSPostingStyle postingStyle})'
  'enqueueNotification:postingStyle:coalesceMask:forModes:':
    'prefix': 'enqueueNotification:postingStyle:coalesceMask:forModes:'
    'body': 'enqueueNotification(${1:NSNotification* notification}, postingStyle:${2:NSPostingStyle postingStyle}, coalesceMask:${3:NSUInteger coalesceMask}, forModes:${4:NSArray* modes})'
  'initWithNotificationCenter:':
    'prefix': 'initWithNotificationCenter:'
    'body': 'initWithNotificationCenter(${1:NSNotificationCenter* notificationCenter})'
  'NSNull.null':
    'prefix': 'null'
    'body': 'NSNull.null()'
  'boolValue':
    'prefix': 'boolValue'
    'body': 'boolValue()'
  'charValue':
    'prefix': 'charValue'
    'body': 'charValue()'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:NSNumber* otherNumber})'
  'decimalValue':
    'prefix': 'decimalValue'
    'body': 'decimalValue()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'floatValue':
    'prefix': 'floatValue'
    'body': 'floatValue()'
  'initWithBool:':
    'prefix': 'initWithBool:'
    'body': 'initWithBool(${1:BOOL value})'
  'initWithChar:':
    'prefix': 'initWithChar:'
    'body': 'initWithChar(${1:char value})'
  'initWithDouble:':
    'prefix': 'initWithDouble:'
    'body': 'initWithDouble(${1:double value})'
  'initWithFloat:':
    'prefix': 'initWithFloat:'
    'body': 'initWithFloat(${1:float value})'
  'initWithInt:':
    'prefix': 'initWithInt:'
    'body': 'initWithInt(${1:int value})'
  'initWithInteger:':
    'prefix': 'initWithInteger:'
    'body': 'initWithInteger(${1:NSInteger value})'
  'initWithLong:':
    'prefix': 'initWithLong:'
    'body': 'initWithLong(${1:long value})'
  'initWithLongLong:':
    'prefix': 'initWithLongLong:'
    'body': 'initWithLongLong(${1:long long value})'
  'initWithShort:':
    'prefix': 'initWithShort:'
    'body': 'initWithShort(${1:short value})'
  'initWithUnsignedChar:':
    'prefix': 'initWithUnsignedChar:'
    'body': 'initWithUnsignedChar(${1:unsigned char value})'
  'initWithUnsignedInt:':
    'prefix': 'initWithUnsignedInt:'
    'body': 'initWithUnsignedInt(${1:unsigned int value})'
  'initWithUnsignedInteger:':
    'prefix': 'initWithUnsignedInteger:'
    'body': 'initWithUnsignedInteger(${1:NSUInteger value})'
  'initWithUnsignedLong:':
    'prefix': 'initWithUnsignedLong:'
    'body': 'initWithUnsignedLong(${1:unsigned long value})'
  'initWithUnsignedLongLong:':
    'prefix': 'initWithUnsignedLongLong:'
    'body': 'initWithUnsignedLongLong(${1:unsigned long long value})'
  'initWithUnsignedShort:':
    'prefix': 'initWithUnsignedShort:'
    'body': 'initWithUnsignedShort(${1:unsigned short value})'
  'intValue':
    'prefix': 'intValue'
    'body': 'intValue()'
  'integerValue':
    'prefix': 'integerValue'
    'body': 'integerValue()'
  'isEqualToNumber:':
    'prefix': 'isEqualToNumber:'
    'body': 'isEqualToNumber(${1:NSNumber* number})'
  'longLongValue':
    'prefix': 'longLongValue'
    'body': 'longLongValue()'
  'longValue':
    'prefix': 'longValue'
    'body': 'longValue()'
  'NSNumber.numberWithBool:':
    'prefix': 'numberWithBool:'
    'body': 'NSNumber.numberWithBool(${1:BOOL value})'
  'NSNumber.numberWithChar:':
    'prefix': 'numberWithChar:'
    'body': 'NSNumber.numberWithChar(${1:char value})'
  'NSNumber.numberWithDouble:':
    'prefix': 'numberWithDouble:'
    'body': 'NSNumber.numberWithDouble(${1:double value})'
  'NSNumber.numberWithFloat:':
    'prefix': 'numberWithFloat:'
    'body': 'NSNumber.numberWithFloat(${1:float value})'
  'NSNumber.numberWithInt:':
    'prefix': 'numberWithInt:'
    'body': 'NSNumber.numberWithInt(${1:int value})'
  'NSNumber.numberWithInteger:':
    'prefix': 'numberWithInteger:'
    'body': 'NSNumber.numberWithInteger(${1:NSInteger value})'
  'NSNumber.numberWithLong:':
    'prefix': 'numberWithLong:'
    'body': 'NSNumber.numberWithLong(${1:long value})'
  'NSNumber.numberWithLongLong:':
    'prefix': 'numberWithLongLong:'
    'body': 'NSNumber.numberWithLongLong(${1:long long value})'
  'NSNumber.numberWithShort:':
    'prefix': 'numberWithShort:'
    'body': 'NSNumber.numberWithShort(${1:short value})'
  'NSNumber.numberWithUnsignedChar:':
    'prefix': 'numberWithUnsignedChar:'
    'body': 'NSNumber.numberWithUnsignedChar(${1:unsigned char value})'
  'NSNumber.numberWithUnsignedInt:':
    'prefix': 'numberWithUnsignedInt:'
    'body': 'NSNumber.numberWithUnsignedInt(${1:unsigned int value})'
  'NSNumber.numberWithUnsignedInteger:':
    'prefix': 'numberWithUnsignedInteger:'
    'body': 'NSNumber.numberWithUnsignedInteger(${1:NSUInteger value})'
  'NSNumber.numberWithUnsignedLong:':
    'prefix': 'numberWithUnsignedLong:'
    'body': 'NSNumber.numberWithUnsignedLong(${1:unsigned long value})'
  'NSNumber.numberWithUnsignedLongLong:':
    'prefix': 'numberWithUnsignedLongLong:'
    'body': 'NSNumber.numberWithUnsignedLongLong(${1:unsigned long long value})'
  'NSNumber.numberWithUnsignedShort:':
    'prefix': 'numberWithUnsignedShort:'
    'body': 'NSNumber.numberWithUnsignedShort(${1:unsigned short value})'
  'shortValue':
    'prefix': 'shortValue'
    'body': 'shortValue()'
  'stringValue':
    'prefix': 'stringValue'
    'body': 'stringValue()'
  'unsignedCharValue':
    'prefix': 'unsignedCharValue'
    'body': 'unsignedCharValue()'
  'unsignedIntValue':
    'prefix': 'unsignedIntValue'
    'body': 'unsignedIntValue()'
  'unsignedIntegerValue':
    'prefix': 'unsignedIntegerValue'
    'body': 'unsignedIntegerValue()'
  'unsignedLongLongValue':
    'prefix': 'unsignedLongLongValue'
    'body': 'unsignedLongLongValue()'
  'unsignedLongValue':
    'prefix': 'unsignedLongValue'
    'body': 'unsignedLongValue()'
  'unsignedShortValue':
    'prefix': 'unsignedShortValue'
    'body': 'unsignedShortValue()'
  'allowsFloats':
    'prefix': 'allowsFloats'
    'body': 'allowsFloats()'
  'alwaysShowsDecimalSeparator':
    'prefix': 'alwaysShowsDecimalSeparator'
    'body': 'alwaysShowsDecimalSeparator()'
  'currencyCode':
    'prefix': 'currencyCode'
    'body': 'currencyCode()'
  'currencyDecimalSeparator':
    'prefix': 'currencyDecimalSeparator'
    'body': 'currencyDecimalSeparator()'
  'currencyGroupingSeparator':
    'prefix': 'currencyGroupingSeparator'
    'body': 'currencyGroupingSeparator()'
  'currencySymbol':
    'prefix': 'currencySymbol'
    'body': 'currencySymbol()'
  'decimalSeparator':
    'prefix': 'decimalSeparator'
    'body': 'decimalSeparator()'
  'NSNumberFormatter.defaultFormatterBehavior':
    'prefix': 'defaultFormatterBehavior'
    'body': 'NSNumberFormatter.defaultFormatterBehavior()'
  'exponentSymbol':
    'prefix': 'exponentSymbol'
    'body': 'exponentSymbol()'
  'formatWidth':
    'prefix': 'formatWidth'
    'body': 'formatWidth()'
  'formatterBehavior':
    'prefix': 'formatterBehavior'
    'body': 'formatterBehavior()'
  'generatesDecimalNumbers':
    'prefix': 'generatesDecimalNumbers'
    'body': 'generatesDecimalNumbers()'
  'getObjectValue:forString:range:error:':
    'prefix': 'getObjectValue:forString:range:error:'
    'body': 'getObjectValue(${1:id* obj}, forString:${2:NSString* string}, range:${3:NSRange* rangep}, error:${4:NSError** error})'
  'groupingSeparator':
    'prefix': 'groupingSeparator'
    'body': 'groupingSeparator()'
  'groupingSize':
    'prefix': 'groupingSize'
    'body': 'groupingSize()'
  'internationalCurrencySymbol':
    'prefix': 'internationalCurrencySymbol'
    'body': 'internationalCurrencySymbol()'
  'isLenient':
    'prefix': 'isLenient'
    'body': 'isLenient()'
  'isPartialStringValidationEnabled':
    'prefix': 'isPartialStringValidationEnabled'
    'body': 'isPartialStringValidationEnabled()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'NSNumberFormatter.localizedStringFromNumber:numberStyle:':
    'prefix': 'localizedStringFromNumber:numberStyle:'
    'body': 'NSNumberFormatter.localizedStringFromNumber(${1:NSNumber* num}, numberStyle:${2:NSNumberFormatterStyle nstyle})'
  'maximum':
    'prefix': 'maximum'
    'body': 'maximum()'
  'maximumFractionDigits':
    'prefix': 'maximumFractionDigits'
    'body': 'maximumFractionDigits()'
  'maximumIntegerDigits':
    'prefix': 'maximumIntegerDigits'
    'body': 'maximumIntegerDigits()'
  'maximumSignificantDigits':
    'prefix': 'maximumSignificantDigits'
    'body': 'maximumSignificantDigits()'
  'minimum':
    'prefix': 'minimum'
    'body': 'minimum()'
  'minimumFractionDigits':
    'prefix': 'minimumFractionDigits'
    'body': 'minimumFractionDigits()'
  'minimumIntegerDigits':
    'prefix': 'minimumIntegerDigits'
    'body': 'minimumIntegerDigits()'
  'minimumSignificantDigits':
    'prefix': 'minimumSignificantDigits'
    'body': 'minimumSignificantDigits()'
  'minusSign':
    'prefix': 'minusSign'
    'body': 'minusSign()'
  'multiplier':
    'prefix': 'multiplier'
    'body': 'multiplier()'
  'negativeFormat':
    'prefix': 'negativeFormat'
    'body': 'negativeFormat()'
  'negativeInfinitySymbol':
    'prefix': 'negativeInfinitySymbol'
    'body': 'negativeInfinitySymbol()'
  'negativePrefix':
    'prefix': 'negativePrefix'
    'body': 'negativePrefix()'
  'negativeSuffix':
    'prefix': 'negativeSuffix'
    'body': 'negativeSuffix()'
  'nilSymbol':
    'prefix': 'nilSymbol'
    'body': 'nilSymbol()'
  'notANumberSymbol':
    'prefix': 'notANumberSymbol'
    'body': 'notANumberSymbol()'
  'numberFromString:':
    'prefix': 'numberFromString:'
    'body': 'numberFromString(${1:NSString* string})'
  'numberStyle':
    'prefix': 'numberStyle'
    'body': 'numberStyle()'
  'paddingCharacter':
    'prefix': 'paddingCharacter'
    'body': 'paddingCharacter()'
  'paddingPosition':
    'prefix': 'paddingPosition'
    'body': 'paddingPosition()'
  'perMillSymbol':
    'prefix': 'perMillSymbol'
    'body': 'perMillSymbol()'
  'percentSymbol':
    'prefix': 'percentSymbol'
    'body': 'percentSymbol()'
  'plusSign':
    'prefix': 'plusSign'
    'body': 'plusSign()'
  'positiveFormat':
    'prefix': 'positiveFormat'
    'body': 'positiveFormat()'
  'positiveInfinitySymbol':
    'prefix': 'positiveInfinitySymbol'
    'body': 'positiveInfinitySymbol()'
  'positivePrefix':
    'prefix': 'positivePrefix'
    'body': 'positivePrefix()'
  'positiveSuffix':
    'prefix': 'positiveSuffix'
    'body': 'positiveSuffix()'
  'roundingIncrement':
    'prefix': 'roundingIncrement'
    'body': 'roundingIncrement()'
  'roundingMode':
    'prefix': 'roundingMode'
    'body': 'roundingMode()'
  'secondaryGroupingSize':
    'prefix': 'secondaryGroupingSize'
    'body': 'secondaryGroupingSize()'
  'setAllowsFloats:':
    'prefix': 'setAllowsFloats:'
    'body': 'setAllowsFloats(${1:BOOL flag})'
  'setAlwaysShowsDecimalSeparator:':
    'prefix': 'setAlwaysShowsDecimalSeparator:'
    'body': 'setAlwaysShowsDecimalSeparator(${1:BOOL b})'
  'setCurrencyCode:':
    'prefix': 'setCurrencyCode:'
    'body': 'setCurrencyCode(${1:NSString* string})'
  'setCurrencyDecimalSeparator:':
    'prefix': 'setCurrencyDecimalSeparator:'
    'body': 'setCurrencyDecimalSeparator(${1:NSString* string})'
  'setCurrencyGroupingSeparator:':
    'prefix': 'setCurrencyGroupingSeparator:'
    'body': 'setCurrencyGroupingSeparator(${1:NSString* string})'
  'setCurrencySymbol:':
    'prefix': 'setCurrencySymbol:'
    'body': 'setCurrencySymbol(${1:NSString* string})'
  'setDecimalSeparator:':
    'prefix': 'setDecimalSeparator:'
    'body': 'setDecimalSeparator(${1:NSString* string})'
  'NSNumberFormatter.setDefaultFormatterBehavior:':
    'prefix': 'setDefaultFormatterBehavior:'
    'body': 'NSNumberFormatter.setDefaultFormatterBehavior(${1:NSNumberFormatterBehavior behavior})'
  'setExponentSymbol:':
    'prefix': 'setExponentSymbol:'
    'body': 'setExponentSymbol(${1:NSString* string})'
  'setFormatWidth:':
    'prefix': 'setFormatWidth:'
    'body': 'setFormatWidth(${1:NSUInteger number})'
  'setFormatterBehavior:':
    'prefix': 'setFormatterBehavior:'
    'body': 'setFormatterBehavior(${1:NSNumberFormatterBehavior behavior})'
  'setGeneratesDecimalNumbers:':
    'prefix': 'setGeneratesDecimalNumbers:'
    'body': 'setGeneratesDecimalNumbers(${1:BOOL b})'
  'setGroupingSeparator:':
    'prefix': 'setGroupingSeparator:'
    'body': 'setGroupingSeparator(${1:NSString* string})'
  'setGroupingSize:':
    'prefix': 'setGroupingSize:'
    'body': 'setGroupingSize(${1:NSUInteger number})'
  'setInternationalCurrencySymbol:':
    'prefix': 'setInternationalCurrencySymbol:'
    'body': 'setInternationalCurrencySymbol(${1:NSString* string})'
  'setLenient:':
    'prefix': 'setLenient:'
    'body': 'setLenient(${1:BOOL b})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* locale})'
  'setMaximum:':
    'prefix': 'setMaximum:'
    'body': 'setMaximum(${1:NSNumber* number})'
  'setMaximumFractionDigits:':
    'prefix': 'setMaximumFractionDigits:'
    'body': 'setMaximumFractionDigits(${1:NSUInteger number})'
  'setMaximumIntegerDigits:':
    'prefix': 'setMaximumIntegerDigits:'
    'body': 'setMaximumIntegerDigits(${1:NSUInteger number})'
  'setMaximumSignificantDigits:':
    'prefix': 'setMaximumSignificantDigits:'
    'body': 'setMaximumSignificantDigits(${1:NSUInteger number})'
  'setMinimum:':
    'prefix': 'setMinimum:'
    'body': 'setMinimum(${1:NSNumber* number})'
  'setMinimumFractionDigits:':
    'prefix': 'setMinimumFractionDigits:'
    'body': 'setMinimumFractionDigits(${1:NSUInteger number})'
  'setMinimumIntegerDigits:':
    'prefix': 'setMinimumIntegerDigits:'
    'body': 'setMinimumIntegerDigits(${1:NSUInteger number})'
  'setMinimumSignificantDigits:':
    'prefix': 'setMinimumSignificantDigits:'
    'body': 'setMinimumSignificantDigits(${1:NSUInteger number})'
  'setMinusSign:':
    'prefix': 'setMinusSign:'
    'body': 'setMinusSign(${1:NSString* string})'
  'setMultiplier:':
    'prefix': 'setMultiplier:'
    'body': 'setMultiplier(${1:NSNumber* number})'
  'setNegativeFormat:':
    'prefix': 'setNegativeFormat:'
    'body': 'setNegativeFormat(${1:NSString* format})'
  'setNegativeInfinitySymbol:':
    'prefix': 'setNegativeInfinitySymbol:'
    'body': 'setNegativeInfinitySymbol(${1:NSString* string})'
  'setNegativePrefix:':
    'prefix': 'setNegativePrefix:'
    'body': 'setNegativePrefix(${1:NSString* string})'
  'setNegativeSuffix:':
    'prefix': 'setNegativeSuffix:'
    'body': 'setNegativeSuffix(${1:NSString* string})'
  'setNilSymbol:':
    'prefix': 'setNilSymbol:'
    'body': 'setNilSymbol(${1:NSString* string})'
  'setNotANumberSymbol:':
    'prefix': 'setNotANumberSymbol:'
    'body': 'setNotANumberSymbol(${1:NSString* string})'
  'setNumberStyle:':
    'prefix': 'setNumberStyle:'
    'body': 'setNumberStyle(${1:NSNumberFormatterStyle style})'
  'setPaddingCharacter:':
    'prefix': 'setPaddingCharacter:'
    'body': 'setPaddingCharacter(${1:NSString* string})'
  'setPaddingPosition:':
    'prefix': 'setPaddingPosition:'
    'body': 'setPaddingPosition(${1:NSNumberFormatterPadPosition position})'
  'setPartialStringValidationEnabled:':
    'prefix': 'setPartialStringValidationEnabled:'
    'body': 'setPartialStringValidationEnabled(${1:BOOL b})'
  'setPerMillSymbol:':
    'prefix': 'setPerMillSymbol:'
    'body': 'setPerMillSymbol(${1:NSString* string})'
  'setPercentSymbol:':
    'prefix': 'setPercentSymbol:'
    'body': 'setPercentSymbol(${1:NSString* string})'
  'setPlusSign:':
    'prefix': 'setPlusSign:'
    'body': 'setPlusSign(${1:NSString* string})'
  'setPositiveFormat:':
    'prefix': 'setPositiveFormat:'
    'body': 'setPositiveFormat(${1:NSString* format})'
  'setPositiveInfinitySymbol:':
    'prefix': 'setPositiveInfinitySymbol:'
    'body': 'setPositiveInfinitySymbol(${1:NSString* string})'
  'setPositivePrefix:':
    'prefix': 'setPositivePrefix:'
    'body': 'setPositivePrefix(${1:NSString* string})'
  'setPositiveSuffix:':
    'prefix': 'setPositiveSuffix:'
    'body': 'setPositiveSuffix(${1:NSString* string})'
  'setRoundingIncrement:':
    'prefix': 'setRoundingIncrement:'
    'body': 'setRoundingIncrement(${1:NSNumber* number})'
  'setRoundingMode:':
    'prefix': 'setRoundingMode:'
    'body': 'setRoundingMode(${1:NSNumberFormatterRoundingMode mode})'
  'setSecondaryGroupingSize:':
    'prefix': 'setSecondaryGroupingSize:'
    'body': 'setSecondaryGroupingSize(${1:NSUInteger number})'
  'setTextAttributesForNegativeInfinity:':
    'prefix': 'setTextAttributesForNegativeInfinity:'
    'body': 'setTextAttributesForNegativeInfinity(${1:NSDictionary* newAttributes})'
  'setTextAttributesForNegativeValues:':
    'prefix': 'setTextAttributesForNegativeValues:'
    'body': 'setTextAttributesForNegativeValues(${1:NSDictionary* newAttributes})'
  'setTextAttributesForNil:':
    'prefix': 'setTextAttributesForNil:'
    'body': 'setTextAttributesForNil(${1:NSDictionary* newAttributes})'
  'setTextAttributesForNotANumber:':
    'prefix': 'setTextAttributesForNotANumber:'
    'body': 'setTextAttributesForNotANumber(${1:NSDictionary* newAttributes})'
  'setTextAttributesForPositiveInfinity:':
    'prefix': 'setTextAttributesForPositiveInfinity:'
    'body': 'setTextAttributesForPositiveInfinity(${1:NSDictionary* newAttributes})'
  'setTextAttributesForPositiveValues:':
    'prefix': 'setTextAttributesForPositiveValues:'
    'body': 'setTextAttributesForPositiveValues(${1:NSDictionary* newAttributes})'
  'setTextAttributesForZero:':
    'prefix': 'setTextAttributesForZero:'
    'body': 'setTextAttributesForZero(${1:NSDictionary* newAttributes})'
  'setUsesGroupingSeparator:':
    'prefix': 'setUsesGroupingSeparator:'
    'body': 'setUsesGroupingSeparator(${1:BOOL b})'
  'setUsesSignificantDigits:':
    'prefix': 'setUsesSignificantDigits:'
    'body': 'setUsesSignificantDigits(${1:BOOL b})'
  'setZeroSymbol:':
    'prefix': 'setZeroSymbol:'
    'body': 'setZeroSymbol(${1:NSString* string})'
  'stringFromNumber:':
    'prefix': 'stringFromNumber:'
    'body': 'stringFromNumber(${1:NSNumber* number})'
  'textAttributesForNegativeInfinity':
    'prefix': 'textAttributesForNegativeInfinity'
    'body': 'textAttributesForNegativeInfinity()'
  'textAttributesForNegativeValues':
    'prefix': 'textAttributesForNegativeValues'
    'body': 'textAttributesForNegativeValues()'
  'textAttributesForNil':
    'prefix': 'textAttributesForNil'
    'body': 'textAttributesForNil()'
  'textAttributesForNotANumber':
    'prefix': 'textAttributesForNotANumber'
    'body': 'textAttributesForNotANumber()'
  'textAttributesForPositiveInfinity':
    'prefix': 'textAttributesForPositiveInfinity'
    'body': 'textAttributesForPositiveInfinity()'
  'textAttributesForPositiveValues':
    'prefix': 'textAttributesForPositiveValues'
    'body': 'textAttributesForPositiveValues()'
  'textAttributesForZero':
    'prefix': 'textAttributesForZero'
    'body': 'textAttributesForZero()'
  'usesGroupingSeparator':
    'prefix': 'usesGroupingSeparator'
    'body': 'usesGroupingSeparator()'
  'usesSignificantDigits':
    'prefix': 'usesSignificantDigits'
    'body': 'usesSignificantDigits()'
  'zeroSymbol':
    'prefix': 'zeroSymbol'
    'body': 'zeroSymbol()'
  'URLProtocol:cachedResponseIsValid:':
    'prefix': 'URLProtocol:cachedResponseIsValid:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, cachedResponseIsValid:${2:NSCachedURLResponse* cachedResponse})'
  'URLProtocol:didCancelAuthenticationChallenge:':
    'prefix': 'URLProtocol:didCancelAuthenticationChallenge:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didCancelAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'URLProtocol:didFailWithError:':
    'prefix': 'URLProtocol:didFailWithError:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didFailWithError:${2:NSError* error})'
  'URLProtocol:didLoadData:':
    'prefix': 'URLProtocol:didLoadData:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didLoadData:${2:NSData* data})'
  'URLProtocol:didReceiveAuthenticationChallenge:':
    'prefix': 'URLProtocol:didReceiveAuthenticationChallenge:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didReceiveAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'URLProtocol:didReceiveResponse:cacheStoragePolicy:':
    'prefix': 'URLProtocol:didReceiveResponse:cacheStoragePolicy:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didReceiveResponse:${2:NSURLResponse* response}, cacheStoragePolicy:${3:NSURLCacheStoragePolicy policy})'
  'URLProtocol:wasRedirectedToRequest:redirectResponse:':
    'prefix': 'URLProtocol:wasRedirectedToRequest:redirectResponse:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, wasRedirectedToRequest:${2:NSURLRequest* request}, redirectResponse:${3:NSURLResponse* redirectResponse})'
  'URLProtocolDidFinishLoading:':
    'prefix': 'URLProtocolDidFinishLoading:'
    'body': 'URLProtocolDidFinishLoading(${1:NSURLProtocol* protocol})'
  'URLSession:dataTask:didBecomeDownloadTask:':
    'prefix': 'URLSession:dataTask:didBecomeDownloadTask:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didBecomeDownloadTask:${3:NSURLSessionDownloadTask* downloadTask})'
  'URLSession:dataTask:didReceiveData:':
    'prefix': 'URLSession:dataTask:didReceiveData:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didReceiveData:${3:NSData* data})'
  'URLSession:dataTask:didReceiveResponse:completionHandler:':
    'prefix': 'URLSession:dataTask:didReceiveResponse:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didReceiveResponse:${3:NSURLResponse* response}, completionHandler:${4:void (^)(NSURLSessionResponseDisposition) completionHandler})'
  'URLSession:dataTask:willCacheResponse:completionHandler:':
    'prefix': 'URLSession:dataTask:willCacheResponse:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, willCacheResponse:${3:NSCachedURLResponse* proposedResponse}, completionHandler:${4:void (^)(NSCachedURLResponse *) completionHandler})'
  'URLSession:didBecomeInvalidWithError:':
    'prefix': 'URLSession:didBecomeInvalidWithError:'
    'body': 'URLSession(${1:NSURLSession* session}, didBecomeInvalidWithError:${2:NSError* error})'
  'URLSession:didReceiveChallenge:completionHandler:':
    'prefix': 'URLSession:didReceiveChallenge:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, didReceiveChallenge:${2:NSURLAuthenticationChallenge* challenge}, completionHandler:${3:void (^)(NSURLSessionAuthChallengeDisposition, NSURLCredential *) completionHandler})'
  'URLSession:downloadTask:didFinishDownloadingToURL:':
    'prefix': 'URLSession:downloadTask:didFinishDownloadingToURL:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didFinishDownloadingToURL:${3:NSURL* location})'
  'URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:':
    'prefix': 'URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didResumeAtOffset:${3:int64_t fileOffset}, expectedTotalBytes:${4:int64_t expectedTotalBytes})'
  'URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:':
    'prefix': 'URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didWriteData:${3:int64_t bytesWritten}, totalBytesWritten:${4:int64_t totalBytesWritten}, totalBytesExpectedToWrite:${5:int64_t totalBytesExpectedToWrite})'
  'URLSession:task:didCompleteWithError:':
    'prefix': 'URLSession:task:didCompleteWithError:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didCompleteWithError:${3:NSError* error})'
  'URLSession:task:didReceiveChallenge:completionHandler:':
    'prefix': 'URLSession:task:didReceiveChallenge:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didReceiveChallenge:${3:NSURLAuthenticationChallenge* challenge}, completionHandler:${4:void (^)(NSURLSessionAuthChallengeDisposition, NSURLCredential *) completionHandler})'
  'URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:':
    'prefix': 'URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didSendBodyData:${3:int64_t bytesSent}, totalBytesSent:${4:int64_t totalBytesSent}, totalBytesExpectedToSend:${5:int64_t totalBytesExpectedToSend})'
  'URLSession:task:needNewBodyStream:':
    'prefix': 'URLSession:task:needNewBodyStream:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, needNewBodyStream:${3:void (^)(NSInputStream *) completionHandler})'
  'URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:':
    'prefix': 'URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, willPerformHTTPRedirection:${3:NSHTTPURLResponse* response}, newRequest:${4:NSURLRequest* request}, completionHandler:${5:void (^)(NSURLRequest *) completionHandler})'
  'URLSessionDidFinishEventsForBackgroundURLSession:':
    'prefix': 'URLSessionDidFinishEventsForBackgroundURLSession:'
    'body': 'URLSessionDidFinishEventsForBackgroundURLSession(${1:NSURLSession* session})'
  'NSObject.accessInstanceVariablesDirectly':
    'prefix': 'accessInstanceVariablesDirectly'
    'body': 'NSObject.accessInstanceVariablesDirectly()'
  'accommodatePresentedItemDeletionWithCompletionHandler:':
    'prefix': 'accommodatePresentedItemDeletionWithCompletionHandler:'
    'body': 'accommodatePresentedItemDeletionWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'accommodatePresentedSubitemDeletionAtURL:completionHandler:':
    'prefix': 'accommodatePresentedSubitemDeletionAtURL:completionHandler:'
    'body': 'accommodatePresentedSubitemDeletionAtURL(${1:NSURL* url}, completionHandler:${2:void (^)(NSError *) completionHandler})'
  'addObserver:forKeyPath:options:context:':
    'prefix': 'addObserver:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, options:${3:NSKeyValueObservingOptions options}, context:${4:void* context})'
  'NSObject.alloc':
    'prefix': 'alloc'
    'body': 'NSObject.alloc()'
  'NSObject.allocWithZone:':
    'prefix': 'allocWithZone:'
    'body': 'NSObject.allocWithZone(${1:struct _NSZone* zone})'
  'archiver:didEncodeObject:':
    'prefix': 'archiver:didEncodeObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, didEncodeObject:${2:id object})'
  'archiver:willEncodeObject:':
    'prefix': 'archiver:willEncodeObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, willEncodeObject:${2:id object})'
  'archiver:willReplaceObject:withObject:':
    'prefix': 'archiver:willReplaceObject:withObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, willReplaceObject:${2:id object}, withObject:${3:id newObject})'
  'archiverDidFinish:':
    'prefix': 'archiverDidFinish:'
    'body': 'archiverDidFinish(${1:NSKeyedArchiver* archiver})'
  'archiverWillFinish:':
    'prefix': 'archiverWillFinish:'
    'body': 'archiverWillFinish(${1:NSKeyedArchiver* archiver})'
  'attemptRecoveryFromError:optionIndex:':
    'prefix': 'attemptRecoveryFromError:optionIndex:'
    'body': 'attemptRecoveryFromError(${1:NSError* error}, optionIndex:${2:NSUInteger recoveryOptionIndex})'
  'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:':
    'prefix': 'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'
    'body': 'attemptRecoveryFromError(${1:NSError* error}, optionIndex:${2:NSUInteger recoveryOptionIndex}, delegate:${3:id delegate}, didRecoverSelector:${4:SEL didRecoverSelector}, contextInfo:${5:void* contextInfo})'
  'autoContentAccessingProxy':
    'prefix': 'autoContentAccessingProxy'
    'body': 'autoContentAccessingProxy()'
  'NSObject.automaticallyNotifiesObserversForKey:':
    'prefix': 'automaticallyNotifiesObserversForKey:'
    'body': 'NSObject.automaticallyNotifiesObserversForKey(${1:NSString* key})'
  'autorelease':
    'prefix': 'autorelease'
    'body': 'autorelease()'
  'awakeAfterUsingCoder:':
    'prefix': 'awakeAfterUsingCoder:'
    'body': 'awakeAfterUsingCoder(${1:NSCoder* aDecoder})'
  'beginContentAccess':
    'prefix': 'beginContentAccess'
    'body': 'beginContentAccess()'
  'cache:willEvictObject:':
    'prefix': 'cache:willEvictObject:'
    'body': 'cache(${1:NSCache* cache}, willEvictObject:${2:id obj})'
  'cancelAuthenticationChallenge:':
    'prefix': 'cancelAuthenticationChallenge:'
    'body': 'cancelAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'NSObject.cancelPreviousPerformRequestsWithTarget:':
    'prefix': 'cancelPreviousPerformRequestsWithTarget:'
    'body': 'NSObject.cancelPreviousPerformRequestsWithTarget(${1:id aTarget})'
  'NSObject.cancelPreviousPerformRequestsWithTarget:selector:object:':
    'prefix': 'cancelPreviousPerformRequestsWithTarget:selector:object:'
    'body': 'NSObject.cancelPreviousPerformRequestsWithTarget(${1:id aTarget}, selector:${2:SEL aSelector}, object:${3:id anArgument})'
  'NSObject.class':
    'prefix': 'class'
    'body': 'NSObject.class()'
  'class':
    'prefix': 'class'
    'body': 'class()'
  'NSObject.classFallbacksForKeyedArchiver':
    'prefix': 'classFallbacksForKeyedArchiver'
    'body': 'NSObject.classFallbacksForKeyedArchiver()'
  'classForCoder':
    'prefix': 'classForCoder'
    'body': 'classForCoder()'
  'classForKeyedArchiver':
    'prefix': 'classForKeyedArchiver'
    'body': 'classForKeyedArchiver()'
  'NSObject.classForKeyedUnarchiver':
    'prefix': 'classForKeyedUnarchiver'
    'body': 'NSObject.classForKeyedUnarchiver()'
  'NSObject.conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'NSObject.conformsToProtocol(${1:Protocol* protocol})'
  'conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'conformsToProtocol(${1:Protocol* aProtocol})'
  'connection:canAuthenticateAgainstProtectionSpace:':
    'prefix': 'connection:canAuthenticateAgainstProtectionSpace:'
    'body': 'connection(${1:NSURLConnection* connection}, canAuthenticateAgainstProtectionSpace:${2:NSURLProtectionSpace* protectionSpace})'
  'connection:didCancelAuthenticationChallenge:':
    'prefix': 'connection:didCancelAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, didCancelAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connection:didFailWithError:':
    'prefix': 'connection:didFailWithError:'
    'body': 'connection(${1:NSURLConnection* connection}, didFailWithError:${2:NSError* error})'
  'connection:didReceiveAuthenticationChallenge:':
    'prefix': 'connection:didReceiveAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connection:didReceiveData:':
    'prefix': 'connection:didReceiveData:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveData:${2:NSData* data})'
  'connection:didReceiveResponse:':
    'prefix': 'connection:didReceiveResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveResponse:${2:NSURLResponse* response})'
  'connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:':
    'prefix': 'connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'
    'body': 'connection(${1:NSURLConnection* connection}, didSendBodyData:${2:NSInteger bytesWritten}, totalBytesWritten:${3:NSInteger totalBytesWritten}, totalBytesExpectedToWrite:${4:NSInteger totalBytesExpectedToWrite})'
  'connection:didWriteData:totalBytesWritten:expectedTotalBytes:':
    'prefix': 'connection:didWriteData:totalBytesWritten:expectedTotalBytes:'
    'body': 'connection(${1:NSURLConnection* connection}, didWriteData:${2:long long bytesWritten}, totalBytesWritten:${3:long long totalBytesWritten}, expectedTotalBytes:${4:long long expectedTotalBytes})'
  'connection:needNewBodyStream:':
    'prefix': 'connection:needNewBodyStream:'
    'body': 'connection(${1:NSURLConnection* connection}, needNewBodyStream:${2:NSURLRequest* request})'
  'connection:willCacheResponse:':
    'prefix': 'connection:willCacheResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, willCacheResponse:${2:NSCachedURLResponse* cachedResponse})'
  'connection:willSendRequest:redirectResponse:':
    'prefix': 'connection:willSendRequest:redirectResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, willSendRequest:${2:NSURLRequest* request}, redirectResponse:${3:NSURLResponse* response})'
  'connection:willSendRequestForAuthenticationChallenge:':
    'prefix': 'connection:willSendRequestForAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, willSendRequestForAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connectionDidFinishDownloading:destinationURL:':
    'prefix': 'connectionDidFinishDownloading:destinationURL:'
    'body': 'connectionDidFinishDownloading(${1:NSURLConnection* connection}, destinationURL:${2:NSURL* destinationURL})'
  'connectionDidFinishLoading:':
    'prefix': 'connectionDidFinishLoading:'
    'body': 'connectionDidFinishLoading(${1:NSURLConnection* connection})'
  'connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:':
    'prefix': 'connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'
    'body': 'connectionDidResumeDownloading(${1:NSURLConnection* connection}, totalBytesWritten:${2:long long totalBytesWritten}, expectedTotalBytes:${3:long long expectedTotalBytes})'
  'connectionShouldUseCredentialStorage:':
    'prefix': 'connectionShouldUseCredentialStorage:'
    'body': 'connectionShouldUseCredentialStorage(${1:NSURLConnection* connection})'
  'continueWithoutCredentialForAuthenticationChallenge:':
    'prefix': 'continueWithoutCredentialForAuthenticationChallenge:'
    'body': 'continueWithoutCredentialForAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'copy':
    'prefix': 'copy'
    'body': 'copy()'
  'NSObject.copyWithZone:':
    'prefix': 'copyWithZone:'
    'body': 'NSObject.copyWithZone(${1:struct _NSZone* zone})'
  'copyWithZone:':
    'prefix': 'copyWithZone:'
    'body': 'copyWithZone(${1:NSZone* zone})'
  'countByEnumeratingWithState:objects:count:':
    'prefix': 'countByEnumeratingWithState:objects:count:'
    'body': 'countByEnumeratingWithState(${1:NSFastEnumerationState* state}, objects:${2:id* buffer}, count:${3:NSUInteger len})'
  'dealloc':
    'prefix': 'dealloc'
    'body': 'dealloc()'
  'debugDescription':
    'prefix': 'debugDescription'
    'body': 'debugDescription()'
  'NSObject.description':
    'prefix': 'description'
    'body': 'NSObject.description()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'dictionaryWithValuesForKeys:':
    'prefix': 'dictionaryWithValuesForKeys:'
    'body': 'dictionaryWithValuesForKeys(${1:NSArray* keys})'
  'didChange:valuesAtIndexes:forKey:':
    'prefix': 'didChange:valuesAtIndexes:forKey:'
    'body': 'didChange(${1:NSKeyValueChange changeKind}, valuesAtIndexes:${2:NSIndexSet* indexes}, forKey:${3:NSString* key})'
  'didChangeValueForKey:':
    'prefix': 'didChangeValueForKey:'
    'body': 'didChangeValueForKey(${1:NSString* key})'
  'didChangeValueForKey:withSetMutation:usingObjects:':
    'prefix': 'didChangeValueForKey:withSetMutation:usingObjects:'
    'body': 'didChangeValueForKey(${1:NSString* key}, withSetMutation:${2:NSKeyValueSetMutationKind mutationKind}, usingObjects:${3:NSSet* objects})'
  'discardContentIfPossible':
    'prefix': 'discardContentIfPossible'
    'body': 'discardContentIfPossible()'
  'doesNotRecognizeSelector:':
    'prefix': 'doesNotRecognizeSelector:'
    'body': 'doesNotRecognizeSelector(${1:SEL aSelector})'
  'encodeWithCoder:':
    'prefix': 'encodeWithCoder:'
    'body': 'encodeWithCoder(${1:NSCoder* aCoder})'
  'endContentAccess':
    'prefix': 'endContentAccess'
    'body': 'endContentAccess()'
  'exceptionDuringOperation:error:leftOperand:rightOperand:':
    'prefix': 'exceptionDuringOperation:error:leftOperand:rightOperand:'
    'body': 'exceptionDuringOperation(${1:SEL operation}, error:${2:NSCalculationError error}, leftOperand:${3:NSDecimalNumber* leftOperand}, rightOperand:${4:NSDecimalNumber* rightOperand})'
  'fileManager:shouldCopyItemAtPath:toPath:':
    'prefix': 'fileManager:shouldCopyItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldCopyItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldCopyItemAtURL:toURL:':
    'prefix': 'fileManager:shouldCopyItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldCopyItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldLinkItemAtPath:toPath:':
    'prefix': 'fileManager:shouldLinkItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldLinkItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldLinkItemAtURL:toURL:':
    'prefix': 'fileManager:shouldLinkItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldLinkItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldMoveItemAtPath:toPath:':
    'prefix': 'fileManager:shouldMoveItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldMoveItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldMoveItemAtURL:toURL:':
    'prefix': 'fileManager:shouldMoveItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldMoveItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:':
    'prefix': 'fileManager:shouldProceedAfterError:'
    'body': 'fileManager(${1:NSFileManager* fm}, shouldProceedAfterError:${2:NSDictionary* errorInfo})'
  'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, copyingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, copyingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, linkingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, linkingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, movingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:movingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, movingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:removingItemAtPath:':
    'prefix': 'fileManager:shouldProceedAfterError:removingItemAtPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, removingItemAtPath:${3:NSString* path})'
  'fileManager:shouldProceedAfterError:removingItemAtURL:':
    'prefix': 'fileManager:shouldProceedAfterError:removingItemAtURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, removingItemAtURL:${3:NSURL* URL})'
  'fileManager:shouldRemoveItemAtPath:':
    'prefix': 'fileManager:shouldRemoveItemAtPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldRemoveItemAtPath:${2:NSString* path})'
  'fileManager:shouldRemoveItemAtURL:':
    'prefix': 'fileManager:shouldRemoveItemAtURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldRemoveItemAtURL:${2:NSURL* URL})'
  'fileManager:willProcessPath:':
    'prefix': 'fileManager:willProcessPath:'
    'body': 'fileManager(${1:NSFileManager* fm}, willProcessPath:${2:NSString* path})'
  'finalize':
    'prefix': 'finalize'
    'body': 'finalize()'
  'forwardInvocation:':
    'prefix': 'forwardInvocation:'
    'body': 'forwardInvocation(${1:NSInvocation* anInvocation})'
  'forwardingTargetForSelector:':
    'prefix': 'forwardingTargetForSelector:'
    'body': 'forwardingTargetForSelector(${1:SEL aSelector})'
  'handleMachMessage:':
    'prefix': 'handleMachMessage:'
    'body': 'handleMachMessage(${1:void* msg})'
  'handlePortMessage:':
    'prefix': 'handlePortMessage:'
    'body': 'handlePortMessage(${1:NSPortMessage* message})'
  'hash':
    'prefix': 'hash'
    'body': 'hash()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithCoder:':
    'prefix': 'initWithCoder:'
    'body': 'initWithCoder(${1:NSCoder* aDecoder})'
  'NSObject.initialize':
    'prefix': 'initialize'
    'body': 'NSObject.initialize()'
  'NSObject.instanceMethodForSelector:':
    'prefix': 'instanceMethodForSelector:'
    'body': 'NSObject.instanceMethodForSelector(${1:SEL aSelector})'
  'NSObject.instanceMethodSignatureForSelector:':
    'prefix': 'instanceMethodSignatureForSelector:'
    'body': 'NSObject.instanceMethodSignatureForSelector(${1:SEL aSelector})'
  'NSObject.instancesRespondToSelector:':
    'prefix': 'instancesRespondToSelector:'
    'body': 'NSObject.instancesRespondToSelector(${1:SEL aSelector})'
  'isContentDiscarded':
    'prefix': 'isContentDiscarded'
    'body': 'isContentDiscarded()'
  'isEqual:':
    'prefix': 'isEqual:'
    'body': 'isEqual(${1:id object})'
  'isKindOfClass:':
    'prefix': 'isKindOfClass:'
    'body': 'isKindOfClass(${1:Class aClass})'
  'isMemberOfClass:':
    'prefix': 'isMemberOfClass:'
    'body': 'isMemberOfClass(${1:Class aClass})'
  'isProxy':
    'prefix': 'isProxy'
    'body': 'isProxy()'
  'NSObject.isSubclassOfClass:':
    'prefix': 'isSubclassOfClass:'
    'body': 'NSObject.isSubclassOfClass(${1:Class aClass})'
  'NSObject.keyPathsForValuesAffectingValueForKey:':
    'prefix': 'keyPathsForValuesAffectingValueForKey:'
    'body': 'NSObject.keyPathsForValuesAffectingValueForKey(${1:NSString* key})'
  'NSObject.load':
    'prefix': 'load'
    'body': 'NSObject.load()'
  'lock':
    'prefix': 'lock'
    'body': 'lock()'
  'metadataQuery:replacementObjectForResultObject:':
    'prefix': 'metadataQuery:replacementObjectForResultObject:'
    'body': 'metadataQuery(${1:NSMetadataQuery* query}, replacementObjectForResultObject:${2:NSMetadataItem* result})'
  'metadataQuery:replacementValueForAttribute:value:':
    'prefix': 'metadataQuery:replacementValueForAttribute:value:'
    'body': 'metadataQuery(${1:NSMetadataQuery* query}, replacementValueForAttribute:${2:NSString* attrName}, value:${3:id attrValue})'
  'methodForSelector:':
    'prefix': 'methodForSelector:'
    'body': 'methodForSelector(${1:SEL aSelector})'
  'methodSignatureForSelector:':
    'prefix': 'methodSignatureForSelector:'
    'body': 'methodSignatureForSelector(${1:SEL aSelector})'
  'mutableArrayValueForKey:':
    'prefix': 'mutableArrayValueForKey:'
    'body': 'mutableArrayValueForKey(${1:NSString* key})'
  'mutableArrayValueForKeyPath:':
    'prefix': 'mutableArrayValueForKeyPath:'
    'body': 'mutableArrayValueForKeyPath(${1:NSString* keyPath})'
  'mutableCopy':
    'prefix': 'mutableCopy'
    'body': 'mutableCopy()'
  'NSObject.mutableCopyWithZone:':
    'prefix': 'mutableCopyWithZone:'
    'body': 'NSObject.mutableCopyWithZone(${1:struct _NSZone* zone})'
  'mutableCopyWithZone:':
    'prefix': 'mutableCopyWithZone:'
    'body': 'mutableCopyWithZone(${1:NSZone* zone})'
  'mutableOrderedSetValueForKey:':
    'prefix': 'mutableOrderedSetValueForKey:'
    'body': 'mutableOrderedSetValueForKey(${1:NSString* key})'
  'mutableOrderedSetValueForKeyPath:':
    'prefix': 'mutableOrderedSetValueForKeyPath:'
    'body': 'mutableOrderedSetValueForKeyPath(${1:NSString* keyPath})'
  'mutableSetValueForKey:':
    'prefix': 'mutableSetValueForKey:'
    'body': 'mutableSetValueForKey(${1:NSString* key})'
  'mutableSetValueForKeyPath:':
    'prefix': 'mutableSetValueForKeyPath:'
    'body': 'mutableSetValueForKeyPath(${1:NSString* keyPath})'
  'netService:didAcceptConnectionWithInputStream:outputStream:':
    'prefix': 'netService:didAcceptConnectionWithInputStream:outputStream:'
    'body': 'netService(${1:NSNetService* sender}, didAcceptConnectionWithInputStream:${2:NSInputStream* inputStream}, outputStream:${3:NSOutputStream* outputStream})'
  'netService:didNotPublish:':
    'prefix': 'netService:didNotPublish:'
    'body': 'netService(${1:NSNetService* sender}, didNotPublish:${2:NSDictionary* errorDict})'
  'netService:didNotResolve:':
    'prefix': 'netService:didNotResolve:'
    'body': 'netService(${1:NSNetService* sender}, didNotResolve:${2:NSDictionary* errorDict})'
  'netService:didUpdateTXTRecordData:':
    'prefix': 'netService:didUpdateTXTRecordData:'
    'body': 'netService(${1:NSNetService* sender}, didUpdateTXTRecordData:${2:NSData* data})'
  'netServiceBrowser:didFindDomain:moreComing:':
    'prefix': 'netServiceBrowser:didFindDomain:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didFindDomain:${2:NSString* domainString}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didFindService:moreComing:':
    'prefix': 'netServiceBrowser:didFindService:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didFindService:${2:NSNetService* aNetService}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didNotSearch:':
    'prefix': 'netServiceBrowser:didNotSearch:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didNotSearch:${2:NSDictionary* errorDict})'
  'netServiceBrowser:didRemoveDomain:moreComing:':
    'prefix': 'netServiceBrowser:didRemoveDomain:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didRemoveDomain:${2:NSString* domainString}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didRemoveService:moreComing:':
    'prefix': 'netServiceBrowser:didRemoveService:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didRemoveService:${2:NSNetService* aNetService}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowserDidStopSearch:':
    'prefix': 'netServiceBrowserDidStopSearch:'
    'body': 'netServiceBrowserDidStopSearch(${1:NSNetServiceBrowser* aNetServiceBrowser})'
  'netServiceBrowserWillSearch:':
    'prefix': 'netServiceBrowserWillSearch:'
    'body': 'netServiceBrowserWillSearch(${1:NSNetServiceBrowser* aNetServiceBrowser})'
  'netServiceDidPublish:':
    'prefix': 'netServiceDidPublish:'
    'body': 'netServiceDidPublish(${1:NSNetService* sender})'
  'netServiceDidResolveAddress:':
    'prefix': 'netServiceDidResolveAddress:'
    'body': 'netServiceDidResolveAddress(${1:NSNetService* sender})'
  'netServiceDidStop:':
    'prefix': 'netServiceDidStop:'
    'body': 'netServiceDidStop(${1:NSNetService* sender})'
  'netServiceWillPublish:':
    'prefix': 'netServiceWillPublish:'
    'body': 'netServiceWillPublish(${1:NSNetService* sender})'
  'netServiceWillResolve:':
    'prefix': 'netServiceWillResolve:'
    'body': 'netServiceWillResolve(${1:NSNetService* sender})'
  'NSObject.new':
    'prefix': 'new'
    'body': 'NSObject.new()'
  'observationInfo':
    'prefix': 'observationInfo'
    'body': 'observationInfo()'
  'observeValueForKeyPath:ofObject:change:context:':
    'prefix': 'observeValueForKeyPath:ofObject:change:context:'
    'body': 'observeValueForKeyPath(${1:NSString* keyPath}, ofObject:${2:id object}, change:${3:NSDictionary* change}, context:${4:void* context})'
  'parser:didEndElement:namespaceURI:qualifiedName:':
    'prefix': 'parser:didEndElement:namespaceURI:qualifiedName:'
    'body': 'parser(${1:NSXMLParser* parser}, didEndElement:${2:NSString* elementName}, namespaceURI:${3:NSString* namespaceURI}, qualifiedName:${4:NSString* qName})'
  'parser:didEndMappingPrefix:':
    'prefix': 'parser:didEndMappingPrefix:'
    'body': 'parser(${1:NSXMLParser* parser}, didEndMappingPrefix:${2:NSString* prefix})'
  'parser:didStartElement:namespaceURI:qualifiedName:attributes:':
    'prefix': 'parser:didStartElement:namespaceURI:qualifiedName:attributes:'
    'body': 'parser(${1:NSXMLParser* parser}, didStartElement:${2:NSString* elementName}, namespaceURI:${3:NSString* namespaceURI}, qualifiedName:${4:NSString* qName}, attributes:${5:NSDictionary* attributeDict})'
  'parser:didStartMappingPrefix:toURI:':
    'prefix': 'parser:didStartMappingPrefix:toURI:'
    'body': 'parser(${1:NSXMLParser* parser}, didStartMappingPrefix:${2:NSString* prefix}, toURI:${3:NSString* namespaceURI})'
  'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:':
    'prefix': 'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'
    'body': 'parser(${1:NSXMLParser* parser}, foundAttributeDeclarationWithName:${2:NSString* attributeName}, forElement:${3:NSString* elementName}, type:${4:NSString* type}, defaultValue:${5:NSString* defaultValue})'
  'parser:foundCDATA:':
    'prefix': 'parser:foundCDATA:'
    'body': 'parser(${1:NSXMLParser* parser}, foundCDATA:${2:NSData* CDATABlock})'
  'parser:foundCharacters:':
    'prefix': 'parser:foundCharacters:'
    'body': 'parser(${1:NSXMLParser* parser}, foundCharacters:${2:NSString* string})'
  'parser:foundComment:':
    'prefix': 'parser:foundComment:'
    'body': 'parser(${1:NSXMLParser* parser}, foundComment:${2:NSString* comment})'
  'parser:foundElementDeclarationWithName:model:':
    'prefix': 'parser:foundElementDeclarationWithName:model:'
    'body': 'parser(${1:NSXMLParser* parser}, foundElementDeclarationWithName:${2:NSString* elementName}, model:${3:NSString* model})'
  'parser:foundExternalEntityDeclarationWithName:publicID:systemID:':
    'prefix': 'parser:foundExternalEntityDeclarationWithName:publicID:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, foundExternalEntityDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID})'
  'parser:foundIgnorableWhitespace:':
    'prefix': 'parser:foundIgnorableWhitespace:'
    'body': 'parser(${1:NSXMLParser* parser}, foundIgnorableWhitespace:${2:NSString* whitespaceString})'
  'parser:foundInternalEntityDeclarationWithName:value:':
    'prefix': 'parser:foundInternalEntityDeclarationWithName:value:'
    'body': 'parser(${1:NSXMLParser* parser}, foundInternalEntityDeclarationWithName:${2:NSString* name}, value:${3:NSString* value})'
  'parser:foundNotationDeclarationWithName:publicID:systemID:':
    'prefix': 'parser:foundNotationDeclarationWithName:publicID:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, foundNotationDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID})'
  'parser:foundProcessingInstructionWithTarget:data:':
    'prefix': 'parser:foundProcessingInstructionWithTarget:data:'
    'body': 'parser(${1:NSXMLParser* parser}, foundProcessingInstructionWithTarget:${2:NSString* target}, data:${3:NSString* data})'
  'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:':
    'prefix': 'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'
    'body': 'parser(${1:NSXMLParser* parser}, foundUnparsedEntityDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID}, notationName:${5:NSString* notationName})'
  'parser:parseErrorOccurred:':
    'prefix': 'parser:parseErrorOccurred:'
    'body': 'parser(${1:NSXMLParser* parser}, parseErrorOccurred:${2:NSError* parseError})'
  'parser:resolveExternalEntityName:systemID:':
    'prefix': 'parser:resolveExternalEntityName:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, resolveExternalEntityName:${2:NSString* name}, systemID:${3:NSString* systemID})'
  'parser:validationErrorOccurred:':
    'prefix': 'parser:validationErrorOccurred:'
    'body': 'parser(${1:NSXMLParser* parser}, validationErrorOccurred:${2:NSError* validationError})'
  'parserDidEndDocument:':
    'prefix': 'parserDidEndDocument:'
    'body': 'parserDidEndDocument(${1:NSXMLParser* parser})'
  'parserDidStartDocument:':
    'prefix': 'parserDidStartDocument:'
    'body': 'parserDidStartDocument(${1:NSXMLParser* parser})'
  'performDefaultHandlingForAuthenticationChallenge:':
    'prefix': 'performDefaultHandlingForAuthenticationChallenge:'
    'body': 'performDefaultHandlingForAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'performSelector:':
    'prefix': 'performSelector:'
    'body': 'performSelector(${1:SEL aSelector})'
  'performSelector:onThread:withObject:waitUntilDone:':
    'prefix': 'performSelector:onThread:withObject:waitUntilDone:'
    'body': 'performSelector(${1:SEL aSelector}, onThread:${2:NSThread* thr}, withObject:${3:id arg}, waitUntilDone:${4:BOOL wait})'
  'performSelector:onThread:withObject:waitUntilDone:modes:':
    'prefix': 'performSelector:onThread:withObject:waitUntilDone:modes:'
    'body': 'performSelector(${1:SEL aSelector}, onThread:${2:NSThread* thr}, withObject:${3:id arg}, waitUntilDone:${4:BOOL wait}, modes:${5:NSArray* array})'
  'performSelector:withObject:':
    'prefix': 'performSelector:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object})'
  'performSelector:withObject:afterDelay:':
    'prefix': 'performSelector:withObject:afterDelay:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id anArgument}, afterDelay:${3:NSTimeInterval delay})'
  'performSelector:withObject:afterDelay:inModes:':
    'prefix': 'performSelector:withObject:afterDelay:inModes:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id anArgument}, afterDelay:${3:NSTimeInterval delay}, inModes:${4:NSArray* modes})'
  'performSelector:withObject:withObject:':
    'prefix': 'performSelector:withObject:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object1}, withObject:${3:id object2})'
  'performSelectorInBackground:withObject:':
    'prefix': 'performSelectorInBackground:withObject:'
    'body': 'performSelectorInBackground(${1:SEL aSelector}, withObject:${2:id arg})'
  'performSelectorOnMainThread:withObject:waitUntilDone:':
    'prefix': 'performSelectorOnMainThread:withObject:waitUntilDone:'
    'body': 'performSelectorOnMainThread(${1:SEL aSelector}, withObject:${2:id arg}, waitUntilDone:${3:BOOL wait})'
  'performSelectorOnMainThread:withObject:waitUntilDone:modes:':
    'prefix': 'performSelectorOnMainThread:withObject:waitUntilDone:modes:'
    'body': 'performSelectorOnMainThread(${1:SEL aSelector}, withObject:${2:id arg}, waitUntilDone:${3:BOOL wait}, modes:${4:NSArray* array})'
  'presentedItemDidChange':
    'prefix': 'presentedItemDidChange'
    'body': 'presentedItemDidChange()'
  'presentedItemDidGainVersion:':
    'prefix': 'presentedItemDidGainVersion:'
    'body': 'presentedItemDidGainVersion(${1:NSFileVersion* version})'
  'presentedItemDidLoseVersion:':
    'prefix': 'presentedItemDidLoseVersion:'
    'body': 'presentedItemDidLoseVersion(${1:NSFileVersion* version})'
  'presentedItemDidMoveToURL:':
    'prefix': 'presentedItemDidMoveToURL:'
    'body': 'presentedItemDidMoveToURL(${1:NSURL* newURL})'
  'presentedItemDidResolveConflictVersion:':
    'prefix': 'presentedItemDidResolveConflictVersion:'
    'body': 'presentedItemDidResolveConflictVersion(${1:NSFileVersion* version})'
  'presentedItemOperationQueue':
    'prefix': 'presentedItemOperationQueue'
    'body': 'presentedItemOperationQueue()'
  'presentedItemURL':
    'prefix': 'presentedItemURL'
    'body': 'presentedItemURL()'
  'presentedSubitemAtURL:didGainVersion:':
    'prefix': 'presentedSubitemAtURL:didGainVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didGainVersion:${2:NSFileVersion* version})'
  'presentedSubitemAtURL:didLoseVersion:':
    'prefix': 'presentedSubitemAtURL:didLoseVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didLoseVersion:${2:NSFileVersion* version})'
  'presentedSubitemAtURL:didMoveToURL:':
    'prefix': 'presentedSubitemAtURL:didMoveToURL:'
    'body': 'presentedSubitemAtURL(${1:NSURL* oldURL}, didMoveToURL:${2:NSURL* newURL})'
  'presentedSubitemAtURL:didResolveConflictVersion:':
    'prefix': 'presentedSubitemAtURL:didResolveConflictVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didResolveConflictVersion:${2:NSFileVersion* version})'
  'presentedSubitemDidAppearAtURL:':
    'prefix': 'presentedSubitemDidAppearAtURL:'
    'body': 'presentedSubitemDidAppearAtURL(${1:NSURL* url})'
  'presentedSubitemDidChangeAtURL:':
    'prefix': 'presentedSubitemDidChangeAtURL:'
    'body': 'presentedSubitemDidChangeAtURL(${1:NSURL* url})'
  'primaryPresentedItemURL':
    'prefix': 'primaryPresentedItemURL'
    'body': 'primaryPresentedItemURL()'
  'rejectProtectionSpaceAndContinueWithChallenge:':
    'prefix': 'rejectProtectionSpaceAndContinueWithChallenge:'
    'body': 'rejectProtectionSpaceAndContinueWithChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'release':
    'prefix': 'release'
    'body': 'release()'
  'relinquishPresentedItemToReader:':
    'prefix': 'relinquishPresentedItemToReader:'
    'body': 'relinquishPresentedItemToReader(${1:void (^)(void (^)(void)) reader})'
  'relinquishPresentedItemToWriter:':
    'prefix': 'relinquishPresentedItemToWriter:'
    'body': 'relinquishPresentedItemToWriter(${1:void (^)(void (^)(void)) writer})'
  'removeObserver:forKeyPath:':
    'prefix': 'removeObserver:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath})'
  'removeObserver:forKeyPath:context:':
    'prefix': 'removeObserver:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, context:${3:void* context})'
  'replacementObjectForCoder:':
    'prefix': 'replacementObjectForCoder:'
    'body': 'replacementObjectForCoder(${1:NSCoder* aCoder})'
  'replacementObjectForKeyedArchiver:':
    'prefix': 'replacementObjectForKeyedArchiver:'
    'body': 'replacementObjectForKeyedArchiver(${1:NSKeyedArchiver* archiver})'
  'NSObject.resolveClassMethod:':
    'prefix': 'resolveClassMethod:'
    'body': 'NSObject.resolveClassMethod(${1:SEL sel})'
  'NSObject.resolveInstanceMethod:':
    'prefix': 'resolveInstanceMethod:'
    'body': 'NSObject.resolveInstanceMethod(${1:SEL sel})'
  'respondsToSelector:':
    'prefix': 'respondsToSelector:'
    'body': 'respondsToSelector(${1:SEL aSelector})'
  'retain':
    'prefix': 'retain'
    'body': 'retain()'
  'retainCount':
    'prefix': 'retainCount'
    'body': 'retainCount()'
  'roundingMode':
    'prefix': 'roundingMode'
    'body': 'roundingMode()'
  'savePresentedItemChangesWithCompletionHandler:':
    'prefix': 'savePresentedItemChangesWithCompletionHandler:'
    'body': 'savePresentedItemChangesWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'scale':
    'prefix': 'scale'
    'body': 'scale()'
  'self':
    'prefix': 'self'
    'body': 'self()'
  'setNilValueForKey:':
    'prefix': 'setNilValueForKey:'
    'body': 'setNilValueForKey(${1:NSString* key})'
  'setObservationInfo:':
    'prefix': 'setObservationInfo:'
    'body': 'setObservationInfo(${1:void* observationInfo})'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'setValue:forKeyPath:':
    'prefix': 'setValue:forKeyPath:'
    'body': 'setValue(${1:id value}, forKeyPath:${2:NSString* keyPath})'
  'setValue:forUndefinedKey:':
    'prefix': 'setValue:forUndefinedKey:'
    'body': 'setValue(${1:id value}, forUndefinedKey:${2:NSString* key})'
  'setValuesForKeysWithDictionary:':
    'prefix': 'setValuesForKeysWithDictionary:'
    'body': 'setValuesForKeysWithDictionary(${1:NSDictionary* keyedValues})'
  'NSObject.setVersion:':
    'prefix': 'setVersion:'
    'body': 'NSObject.setVersion(${1:NSInteger aVersion})'
  'stream:handleEvent:':
    'prefix': 'stream:handleEvent:'
    'body': 'stream(${1:NSStream* aStream}, handleEvent:${2:NSStreamEvent eventCode})'
  'NSObject.superclass':
    'prefix': 'superclass'
    'body': 'NSObject.superclass()'
  'superclass':
    'prefix': 'superclass'
    'body': 'superclass()'
  'NSObject.supportsSecureCoding':
    'prefix': 'supportsSecureCoding'
    'body': 'NSObject.supportsSecureCoding()'
  'unarchiver:cannotDecodeObjectOfClassName:originalClasses:':
    'prefix': 'unarchiver:cannotDecodeObjectOfClassName:originalClasses:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, cannotDecodeObjectOfClassName:${2:NSString* name}, originalClasses:${3:NSArray* classNames})'
  'unarchiver:didDecodeObject:':
    'prefix': 'unarchiver:didDecodeObject:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, didDecodeObject:${2:id object})'
  'unarchiver:willReplaceObject:withObject:':
    'prefix': 'unarchiver:willReplaceObject:withObject:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, willReplaceObject:${2:id object}, withObject:${3:id newObject})'
  'unarchiverDidFinish:':
    'prefix': 'unarchiverDidFinish:'
    'body': 'unarchiverDidFinish(${1:NSKeyedUnarchiver* unarchiver})'
  'unarchiverWillFinish:':
    'prefix': 'unarchiverWillFinish:'
    'body': 'unarchiverWillFinish(${1:NSKeyedUnarchiver* unarchiver})'
  'unlock':
    'prefix': 'unlock'
    'body': 'unlock()'
  'useCredential:forAuthenticationChallenge:':
    'prefix': 'useCredential:forAuthenticationChallenge:'
    'body': 'useCredential(${1:NSURLCredential* credential}, forAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'validateValue:forKey:error:':
    'prefix': 'validateValue:forKey:error:'
    'body': 'validateValue(${1:id* ioValue}, forKey:${2:NSString* inKey}, error:${3:NSError** outError})'
  'validateValue:forKeyPath:error:':
    'prefix': 'validateValue:forKeyPath:error:'
    'body': 'validateValue(${1:id* ioValue}, forKeyPath:${2:NSString* inKeyPath}, error:${3:NSError** outError})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'valueForKeyPath:':
    'prefix': 'valueForKeyPath:'
    'body': 'valueForKeyPath(${1:NSString* keyPath})'
  'valueForUndefinedKey:':
    'prefix': 'valueForUndefinedKey:'
    'body': 'valueForUndefinedKey(${1:NSString* key})'
  'NSObject.version':
    'prefix': 'version'
    'body': 'NSObject.version()'
  'willChange:valuesAtIndexes:forKey:':
    'prefix': 'willChange:valuesAtIndexes:forKey:'
    'body': 'willChange(${1:NSKeyValueChange changeKind}, valuesAtIndexes:${2:NSIndexSet* indexes}, forKey:${3:NSString* key})'
  'willChangeValueForKey:':
    'prefix': 'willChangeValueForKey:'
    'body': 'willChangeValueForKey(${1:NSString* key})'
  'willChangeValueForKey:withSetMutation:usingObjects:':
    'prefix': 'willChangeValueForKey:withSetMutation:usingObjects:'
    'body': 'willChangeValueForKey(${1:NSString* key}, withSetMutation:${2:NSKeyValueSetMutationKind mutationKind}, usingObjects:${3:NSSet* objects})'
  'zone':
    'prefix': 'zone'
    'body': 'zone()'
  'addDependency:':
    'prefix': 'addDependency:'
    'body': 'addDependency(${1:NSOperation* op})'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'completionBlock':
    'prefix': 'completionBlock'
    'body': 'completionBlock()'
  'dependencies':
    'prefix': 'dependencies'
    'body': 'dependencies()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'isCancelled':
    'prefix': 'isCancelled'
    'body': 'isCancelled()'
  'isConcurrent':
    'prefix': 'isConcurrent'
    'body': 'isConcurrent()'
  'isExecuting':
    'prefix': 'isExecuting'
    'body': 'isExecuting()'
  'isFinished':
    'prefix': 'isFinished'
    'body': 'isFinished()'
  'isReady':
    'prefix': 'isReady'
    'body': 'isReady()'
  'main':
    'prefix': 'main'
    'body': 'main()'
  'queuePriority':
    'prefix': 'queuePriority'
    'body': 'queuePriority()'
  'removeDependency:':
    'prefix': 'removeDependency:'
    'body': 'removeDependency(${1:NSOperation* op})'
  'setCompletionBlock:':
    'prefix': 'setCompletionBlock:'
    'body': 'setCompletionBlock(${1:void (^)(void) block})'
  'setQueuePriority:':
    'prefix': 'setQueuePriority:'
    'body': 'setQueuePriority(${1:NSOperationQueuePriority p})'
  'setThreadPriority:':
    'prefix': 'setThreadPriority:'
    'body': 'setThreadPriority(${1:double p})'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'threadPriority':
    'prefix': 'threadPriority'
    'body': 'threadPriority()'
  'waitUntilFinished':
    'prefix': 'waitUntilFinished'
    'body': 'waitUntilFinished()'
  'addOperation:':
    'prefix': 'addOperation:'
    'body': 'addOperation(${1:NSOperation* op})'
  'addOperationWithBlock:':
    'prefix': 'addOperationWithBlock:'
    'body': 'addOperationWithBlock(${1:void (^)(void) block})'
  'addOperations:waitUntilFinished:':
    'prefix': 'addOperations:waitUntilFinished:'
    'body': 'addOperations(${1:NSArray* ops}, waitUntilFinished:${2:BOOL wait})'
  'cancelAllOperations':
    'prefix': 'cancelAllOperations'
    'body': 'cancelAllOperations()'
  'NSOperationQueue.currentQueue':
    'prefix': 'currentQueue'
    'body': 'NSOperationQueue.currentQueue()'
  'isSuspended':
    'prefix': 'isSuspended'
    'body': 'isSuspended()'
  'NSOperationQueue.mainQueue':
    'prefix': 'mainQueue'
    'body': 'NSOperationQueue.mainQueue()'
  'maxConcurrentOperationCount':
    'prefix': 'maxConcurrentOperationCount'
    'body': 'maxConcurrentOperationCount()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'operationCount':
    'prefix': 'operationCount'
    'body': 'operationCount()'
  'operations':
    'prefix': 'operations'
    'body': 'operations()'
  'setMaxConcurrentOperationCount:':
    'prefix': 'setMaxConcurrentOperationCount:'
    'body': 'setMaxConcurrentOperationCount(${1:NSInteger cnt})'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'setSuspended:':
    'prefix': 'setSuspended:'
    'body': 'setSuspended(${1:BOOL b})'
  'waitUntilAllOperationsAreFinished':
    'prefix': 'waitUntilAllOperationsAreFinished'
    'body': 'waitUntilAllOperationsAreFinished()'
  'addObserver:forKeyPath:options:context:':
    'prefix': 'addObserver:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, options:${3:NSKeyValueObservingOptions options}, context:${4:void* context})'
  'array':
    'prefix': 'array'
    'body': 'array()'
  'containsObject:':
    'prefix': 'containsObject:'
    'body': 'containsObject(${1:id object})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'descriptionWithLocale:indent:':
    'prefix': 'descriptionWithLocale:indent:'
    'body': 'descriptionWithLocale(${1:id locale}, indent:${2:NSUInteger level})'
  'enumerateObjectsAtIndexes:options:usingBlock:':
    'prefix': 'enumerateObjectsAtIndexes:options:usingBlock:'
    'body': 'enumerateObjectsAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, usingBlock:${3:void (^)(id, NSUInteger, BOOL *) block})'
  'enumerateObjectsUsingBlock:':
    'prefix': 'enumerateObjectsUsingBlock:'
    'body': 'enumerateObjectsUsingBlock(${1:void (^)(id, NSUInteger, BOOL *) block})'
  'enumerateObjectsWithOptions:usingBlock:':
    'prefix': 'enumerateObjectsWithOptions:usingBlock:'
    'body': 'enumerateObjectsWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(id, NSUInteger, BOOL *) block})'
  'filteredOrderedSetUsingPredicate:':
    'prefix': 'filteredOrderedSetUsingPredicate:'
    'body': 'filteredOrderedSetUsingPredicate(${1:NSPredicate* p})'
  'firstObject':
    'prefix': 'firstObject'
    'body': 'firstObject()'
  'getObjects:range:':
    'prefix': 'getObjects:range:'
    'body': 'getObjects(${1:id* objects}, range:${2:NSRange range})'
  'indexOfObject:':
    'prefix': 'indexOfObject:'
    'body': 'indexOfObject(${1:id object})'
  'indexOfObject:inSortedRange:options:usingComparator:':
    'prefix': 'indexOfObject:inSortedRange:options:usingComparator:'
    'body': 'indexOfObject(${1:id object}, inSortedRange:${2:NSRange range}, options:${3:NSBinarySearchingOptions opts}, usingComparator:${4:NSComparator cmp})'
  'indexOfObjectAtIndexes:options:passingTest:':
    'prefix': 'indexOfObjectAtIndexes:options:passingTest:'
    'body': 'indexOfObjectAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexOfObjectPassingTest:':
    'prefix': 'indexOfObjectPassingTest:'
    'body': 'indexOfObjectPassingTest(${1:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexOfObjectWithOptions:passingTest:':
    'prefix': 'indexOfObjectWithOptions:passingTest:'
    'body': 'indexOfObjectWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsAtIndexes:options:passingTest:':
    'prefix': 'indexesOfObjectsAtIndexes:options:passingTest:'
    'body': 'indexesOfObjectsAtIndexes(${1:NSIndexSet* s}, options:${2:NSEnumerationOptions opts}, passingTest:${3:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsPassingTest:':
    'prefix': 'indexesOfObjectsPassingTest:'
    'body': 'indexesOfObjectsPassingTest(${1:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'indexesOfObjectsWithOptions:passingTest:':
    'prefix': 'indexesOfObjectsWithOptions:passingTest:'
    'body': 'indexesOfObjectsWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, NSUInteger, BOOL *) predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithArray:':
    'prefix': 'initWithArray:'
    'body': 'initWithArray(${1:NSArray* array})'
  'initWithArray:copyItems:':
    'prefix': 'initWithArray:copyItems:'
    'body': 'initWithArray(${1:NSArray* set}, copyItems:${2:BOOL flag})'
  'initWithArray:range:copyItems:':
    'prefix': 'initWithArray:range:copyItems:'
    'body': 'initWithArray(${1:NSArray* set}, range:${2:NSRange range}, copyItems:${3:BOOL flag})'
  'initWithObject:':
    'prefix': 'initWithObject:'
    'body': 'initWithObject(${1:id object})'
  'initWithObjects:':
    'prefix': 'initWithObjects:'
    'body': 'initWithObjects(${1:id firstObj})'
  'initWithObjects:count:':
    'prefix': 'initWithObjects:count:'
    'body': 'initWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'initWithOrderedSet:':
    'prefix': 'initWithOrderedSet:'
    'body': 'initWithOrderedSet(${1:NSOrderedSet* set})'
  'initWithOrderedSet:copyItems:':
    'prefix': 'initWithOrderedSet:copyItems:'
    'body': 'initWithOrderedSet(${1:NSOrderedSet* set}, copyItems:${2:BOOL flag})'
  'initWithOrderedSet:range:copyItems:':
    'prefix': 'initWithOrderedSet:range:copyItems:'
    'body': 'initWithOrderedSet(${1:NSOrderedSet* set}, range:${2:NSRange range}, copyItems:${3:BOOL flag})'
  'initWithSet:':
    'prefix': 'initWithSet:'
    'body': 'initWithSet(${1:NSSet* set})'
  'initWithSet:copyItems:':
    'prefix': 'initWithSet:copyItems:'
    'body': 'initWithSet(${1:NSSet* set}, copyItems:${2:BOOL flag})'
  'intersectsOrderedSet:':
    'prefix': 'intersectsOrderedSet:'
    'body': 'intersectsOrderedSet(${1:NSOrderedSet* other})'
  'intersectsSet:':
    'prefix': 'intersectsSet:'
    'body': 'intersectsSet(${1:NSSet* set})'
  'isEqualToOrderedSet:':
    'prefix': 'isEqualToOrderedSet:'
    'body': 'isEqualToOrderedSet(${1:NSOrderedSet* other})'
  'isSubsetOfOrderedSet:':
    'prefix': 'isSubsetOfOrderedSet:'
    'body': 'isSubsetOfOrderedSet(${1:NSOrderedSet* other})'
  'isSubsetOfSet:':
    'prefix': 'isSubsetOfSet:'
    'body': 'isSubsetOfSet(${1:NSSet* set})'
  'lastObject':
    'prefix': 'lastObject'
    'body': 'lastObject()'
  'objectAtIndex:':
    'prefix': 'objectAtIndex:'
    'body': 'objectAtIndex(${1:NSUInteger idx})'
  'objectAtIndexedSubscript:':
    'prefix': 'objectAtIndexedSubscript:'
    'body': 'objectAtIndexedSubscript(${1:NSUInteger idx})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'objectsAtIndexes:':
    'prefix': 'objectsAtIndexes:'
    'body': 'objectsAtIndexes(${1:NSIndexSet* indexes})'
  'NSOrderedSet.orderedSet':
    'prefix': 'orderedSet'
    'body': 'NSOrderedSet.orderedSet()'
  'NSOrderedSet.orderedSetWithArray:':
    'prefix': 'orderedSetWithArray:'
    'body': 'NSOrderedSet.orderedSetWithArray(${1:NSArray* array})'
  'NSOrderedSet.orderedSetWithArray:range:copyItems:':
    'prefix': 'orderedSetWithArray:range:copyItems:'
    'body': 'NSOrderedSet.orderedSetWithArray(${1:NSArray* array}, range:${2:NSRange range}, copyItems:${3:BOOL flag})'
  'NSOrderedSet.orderedSetWithObject:':
    'prefix': 'orderedSetWithObject:'
    'body': 'NSOrderedSet.orderedSetWithObject(${1:id object})'
  'NSOrderedSet.orderedSetWithObjects:':
    'prefix': 'orderedSetWithObjects:'
    'body': 'NSOrderedSet.orderedSetWithObjects(${1:id firstObj})'
  'NSOrderedSet.orderedSetWithObjects:count:':
    'prefix': 'orderedSetWithObjects:count:'
    'body': 'NSOrderedSet.orderedSetWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'NSOrderedSet.orderedSetWithOrderedSet:':
    'prefix': 'orderedSetWithOrderedSet:'
    'body': 'NSOrderedSet.orderedSetWithOrderedSet(${1:NSOrderedSet* set})'
  'NSOrderedSet.orderedSetWithOrderedSet:range:copyItems:':
    'prefix': 'orderedSetWithOrderedSet:range:copyItems:'
    'body': 'NSOrderedSet.orderedSetWithOrderedSet(${1:NSOrderedSet* set}, range:${2:NSRange range}, copyItems:${3:BOOL flag})'
  'NSOrderedSet.orderedSetWithSet:':
    'prefix': 'orderedSetWithSet:'
    'body': 'NSOrderedSet.orderedSetWithSet(${1:NSSet* set})'
  'NSOrderedSet.orderedSetWithSet:copyItems:':
    'prefix': 'orderedSetWithSet:copyItems:'
    'body': 'NSOrderedSet.orderedSetWithSet(${1:NSSet* set}, copyItems:${2:BOOL flag})'
  'removeObserver:forKeyPath:':
    'prefix': 'removeObserver:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath})'
  'removeObserver:forKeyPath:context:':
    'prefix': 'removeObserver:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, context:${3:void* context})'
  'reverseObjectEnumerator':
    'prefix': 'reverseObjectEnumerator'
    'body': 'reverseObjectEnumerator()'
  'reversedOrderedSet':
    'prefix': 'reversedOrderedSet'
    'body': 'reversedOrderedSet()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'sortedArrayUsingComparator:':
    'prefix': 'sortedArrayUsingComparator:'
    'body': 'sortedArrayUsingComparator(${1:NSComparator cmptr})'
  'sortedArrayUsingDescriptors:':
    'prefix': 'sortedArrayUsingDescriptors:'
    'body': 'sortedArrayUsingDescriptors(${1:NSArray* sortDescriptors})'
  'sortedArrayWithOptions:usingComparator:':
    'prefix': 'sortedArrayWithOptions:usingComparator:'
    'body': 'sortedArrayWithOptions(${1:NSSortOptions opts}, usingComparator:${2:NSComparator cmptr})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'allLanguages':
    'prefix': 'allLanguages'
    'body': 'allLanguages()'
  'allScripts':
    'prefix': 'allScripts'
    'body': 'allScripts()'
  'dominantLanguage':
    'prefix': 'dominantLanguage'
    'body': 'dominantLanguage()'
  'dominantLanguageForScript:':
    'prefix': 'dominantLanguageForScript:'
    'body': 'dominantLanguageForScript(${1:NSString* script})'
  'dominantScript':
    'prefix': 'dominantScript'
    'body': 'dominantScript()'
  'initWithDominantScript:languageMap:':
    'prefix': 'initWithDominantScript:languageMap:'
    'body': 'initWithDominantScript(${1:NSString* script}, languageMap:${2:NSDictionary* map})'
  'languageMap':
    'prefix': 'languageMap'
    'body': 'languageMap()'
  'languagesForScript:':
    'prefix': 'languagesForScript:'
    'body': 'languagesForScript(${1:NSString* script})'
  'NSOrthography.orthographyWithDominantScript:languageMap:':
    'prefix': 'orthographyWithDominantScript:languageMap:'
    'body': 'NSOrthography.orthographyWithDominantScript(${1:NSString* script}, languageMap:${2:NSDictionary* map})'
  'hasSpaceAvailable':
    'prefix': 'hasSpaceAvailable'
    'body': 'hasSpaceAvailable()'
  'initToBuffer:capacity:':
    'prefix': 'initToBuffer:capacity:'
    'body': 'initToBuffer(${1:uint8_t* buffer}, capacity:${2:NSUInteger capacity})'
  'initToFileAtPath:append:':
    'prefix': 'initToFileAtPath:append:'
    'body': 'initToFileAtPath(${1:NSString* path}, append:${2:BOOL shouldAppend})'
  'initToMemory':
    'prefix': 'initToMemory'
    'body': 'initToMemory()'
  'initWithURL:append:':
    'prefix': 'initWithURL:append:'
    'body': 'initWithURL(${1:NSURL* url}, append:${2:BOOL shouldAppend})'
  'NSOutputStream.outputStreamToBuffer:capacity:':
    'prefix': 'outputStreamToBuffer:capacity:'
    'body': 'NSOutputStream.outputStreamToBuffer(${1:uint8_t* buffer}, capacity:${2:NSUInteger capacity})'
  'NSOutputStream.outputStreamToFileAtPath:append:':
    'prefix': 'outputStreamToFileAtPath:append:'
    'body': 'NSOutputStream.outputStreamToFileAtPath(${1:NSString* path}, append:${2:BOOL shouldAppend})'
  'NSOutputStream.outputStreamToMemory':
    'prefix': 'outputStreamToMemory'
    'body': 'NSOutputStream.outputStreamToMemory()'
  'NSOutputStream.outputStreamWithURL:append:':
    'prefix': 'outputStreamWithURL:append:'
    'body': 'NSOutputStream.outputStreamWithURL(${1:NSURL* url}, append:${2:BOOL shouldAppend})'
  'write:maxLength:':
    'prefix': 'write:maxLength:'
    'body': 'write(${1:uint8_t* buffer}, maxLength:${2:NSUInteger len})'
  'fileHandleForReading':
    'prefix': 'fileHandleForReading'
    'body': 'fileHandleForReading()'
  'fileHandleForWriting':
    'prefix': 'fileHandleForWriting'
    'body': 'fileHandleForWriting()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'NSPipe.pipe':
    'prefix': 'pipe'
    'body': 'NSPipe.pipe()'
  'addPointer:':
    'prefix': 'addPointer:'
    'body': 'addPointer(${1:void* pointer})'
  'allObjects':
    'prefix': 'allObjects'
    'body': 'allObjects()'
  'compact':
    'prefix': 'compact'
    'body': 'compact()'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'initWithOptions:':
    'prefix': 'initWithOptions:'
    'body': 'initWithOptions(${1:NSPointerFunctionsOptions options})'
  'initWithPointerFunctions:':
    'prefix': 'initWithPointerFunctions:'
    'body': 'initWithPointerFunctions(${1:NSPointerFunctions* functions})'
  'insertPointer:atIndex:':
    'prefix': 'insertPointer:atIndex:'
    'body': 'insertPointer(${1:void* item}, atIndex:${2:NSUInteger index})'
  'NSPointerArray.pointerArrayWithOptions:':
    'prefix': 'pointerArrayWithOptions:'
    'body': 'NSPointerArray.pointerArrayWithOptions(${1:NSPointerFunctionsOptions options})'
  'NSPointerArray.pointerArrayWithPointerFunctions:':
    'prefix': 'pointerArrayWithPointerFunctions:'
    'body': 'NSPointerArray.pointerArrayWithPointerFunctions(${1:NSPointerFunctions* functions})'
  'pointerAtIndex:':
    'prefix': 'pointerAtIndex:'
    'body': 'pointerAtIndex(${1:NSUInteger index})'
  'pointerFunctions':
    'prefix': 'pointerFunctions'
    'body': 'pointerFunctions()'
  'removePointerAtIndex:':
    'prefix': 'removePointerAtIndex:'
    'body': 'removePointerAtIndex(${1:NSUInteger index})'
  'replacePointerAtIndex:withPointer:':
    'prefix': 'replacePointerAtIndex:withPointer:'
    'body': 'replacePointerAtIndex(${1:NSUInteger index}, withPointer:${2:void* item})'
  'setCount:':
    'prefix': 'setCount:'
    'body': 'setCount(${1:NSUInteger count})'
  'NSPointerArray.strongObjectsPointerArray':
    'prefix': 'strongObjectsPointerArray'
    'body': 'NSPointerArray.strongObjectsPointerArray()'
  'NSPointerArray.weakObjectsPointerArray':
    'prefix': 'weakObjectsPointerArray'
    'body': 'NSPointerArray.weakObjectsPointerArray()'
  'acquireFunction':
    'prefix': 'acquireFunction'
    'body': 'acquireFunction()'
  'descriptionFunction':
    'prefix': 'descriptionFunction'
    'body': 'descriptionFunction()'
  'hashFunction':
    'prefix': 'hashFunction'
    'body': 'hashFunction()'
  'initWithOptions:':
    'prefix': 'initWithOptions:'
    'body': 'initWithOptions(${1:NSPointerFunctionsOptions options})'
  'isEqualFunction':
    'prefix': 'isEqualFunction'
    'body': 'isEqualFunction()'
  'NSPointerFunctions.pointerFunctionsWithOptions:':
    'prefix': 'pointerFunctionsWithOptions:'
    'body': 'NSPointerFunctions.pointerFunctionsWithOptions(${1:NSPointerFunctionsOptions options})'
  'relinquishFunction':
    'prefix': 'relinquishFunction'
    'body': 'relinquishFunction()'
  'setAcquireFunction:':
    'prefix': 'setAcquireFunction:'
    'body': 'setAcquireFunction(${1:void *(*)(void *, NSUInteger (*)(void *), BOOL) acquireFunction})'
  'setDescriptionFunction:':
    'prefix': 'setDescriptionFunction:'
    'body': 'setDescriptionFunction(${1:NSString *(*)(void *) descriptionFunction})'
  'setHashFunction:':
    'prefix': 'setHashFunction:'
    'body': 'setHashFunction(${1:NSUInteger (*)(void *, NSUInteger (*)(void *)) hashFunction})'
  'setIsEqualFunction:':
    'prefix': 'setIsEqualFunction:'
    'body': 'setIsEqualFunction(${1:BOOL (*)(void *, void *, NSUInteger (*)(void *)) isEqualFunction})'
  'setRelinquishFunction:':
    'prefix': 'setRelinquishFunction:'
    'body': 'setRelinquishFunction(${1:void (*)(void *, NSUInteger (*)(void *)) relinquishFunction})'
  'setSizeFunction:':
    'prefix': 'setSizeFunction:'
    'body': 'setSizeFunction(${1:NSUInteger (*)(void *) sizeFunction})'
  'setUsesStrongWriteBarrier:':
    'prefix': 'setUsesStrongWriteBarrier:'
    'body': 'setUsesStrongWriteBarrier(${1:BOOL usesStrongWriteBarrier})'
  'setUsesWeakReadAndWriteBarriers:':
    'prefix': 'setUsesWeakReadAndWriteBarriers:'
    'body': 'setUsesWeakReadAndWriteBarriers(${1:BOOL usesWeakReadAndWriteBarriers})'
  'sizeFunction':
    'prefix': 'sizeFunction'
    'body': 'sizeFunction()'
  'usesStrongWriteBarrier':
    'prefix': 'usesStrongWriteBarrier'
    'body': 'usesStrongWriteBarrier()'
  'usesWeakReadAndWriteBarriers':
    'prefix': 'usesWeakReadAndWriteBarriers'
    'body': 'usesWeakReadAndWriteBarriers()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'invalidate':
    'prefix': 'invalidate'
    'body': 'invalidate()'
  'isValid':
    'prefix': 'isValid'
    'body': 'isValid()'
  'NSPort.port':
    'prefix': 'port'
    'body': 'NSPort.port()'
  'removeFromRunLoop:forMode:':
    'prefix': 'removeFromRunLoop:forMode:'
    'body': 'removeFromRunLoop(${1:NSRunLoop* runLoop}, forMode:${2:NSString* mode})'
  'reservedSpaceLength':
    'prefix': 'reservedSpaceLength'
    'body': 'reservedSpaceLength()'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* runLoop}, forMode:${2:NSString* mode})'
  'sendBeforeDate:components:from:reserved:':
    'prefix': 'sendBeforeDate:components:from:reserved:'
    'body': 'sendBeforeDate(${1:NSDate* limitDate}, components:${2:NSMutableArray* components}, from:${3:NSPort* receivePort}, reserved:${4:NSUInteger headerSpaceReserved})'
  'sendBeforeDate:msgid:components:from:reserved:':
    'prefix': 'sendBeforeDate:msgid:components:from:reserved:'
    'body': 'sendBeforeDate(${1:NSDate* limitDate}, msgid:${2:NSUInteger msgID}, components:${3:NSMutableArray* components}, from:${4:NSPort* receivePort}, reserved:${5:NSUInteger headerSpaceReserved})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'allowEvaluation':
    'prefix': 'allowEvaluation'
    'body': 'allowEvaluation()'
  'evaluateWithObject:':
    'prefix': 'evaluateWithObject:'
    'body': 'evaluateWithObject(${1:id object})'
  'evaluateWithObject:substitutionVariables:':
    'prefix': 'evaluateWithObject:substitutionVariables:'
    'body': 'evaluateWithObject(${1:id object}, substitutionVariables:${2:NSDictionary* bindings})'
  'predicateFormat':
    'prefix': 'predicateFormat'
    'body': 'predicateFormat()'
  'NSPredicate.predicateWithBlock:':
    'prefix': 'predicateWithBlock:'
    'body': 'NSPredicate.predicateWithBlock(${1:BOOL (^)(id, NSDictionary *) block})'
  'NSPredicate.predicateWithFormat:':
    'prefix': 'predicateWithFormat:'
    'body': 'NSPredicate.predicateWithFormat(${1:NSString* predicateFormat})'
  'NSPredicate.predicateWithFormat:argumentArray:':
    'prefix': 'predicateWithFormat:argumentArray:'
    'body': 'NSPredicate.predicateWithFormat(${1:NSString* predicateFormat}, argumentArray:${2:NSArray* arguments})'
  'NSPredicate.predicateWithFormat:arguments:':
    'prefix': 'predicateWithFormat:arguments:'
    'body': 'NSPredicate.predicateWithFormat(${1:NSString* predicateFormat}, arguments:${2:va_list argList})'
  'predicateWithSubstitutionVariables:':
    'prefix': 'predicateWithSubstitutionVariables:'
    'body': 'predicateWithSubstitutionVariables(${1:NSDictionary* variables})'
  'NSPredicate.predicateWithValue:':
    'prefix': 'predicateWithValue:'
    'body': 'NSPredicate.predicateWithValue(${1:BOOL value})'
  'activeProcessorCount':
    'prefix': 'activeProcessorCount'
    'body': 'activeProcessorCount()'
  'arguments':
    'prefix': 'arguments'
    'body': 'arguments()'
  'beginActivityWithOptions:reason:':
    'prefix': 'beginActivityWithOptions:reason:'
    'body': 'beginActivityWithOptions(${1:NSActivityOptions options}, reason:${2:NSString* reason})'
  'endActivity:':
    'prefix': 'endActivity:'
    'body': 'endActivity(${1:id activity})'
  'environment':
    'prefix': 'environment'
    'body': 'environment()'
  'globallyUniqueString':
    'prefix': 'globallyUniqueString'
    'body': 'globallyUniqueString()'
  'hostName':
    'prefix': 'hostName'
    'body': 'hostName()'
  'operatingSystem':
    'prefix': 'operatingSystem'
    'body': 'operatingSystem()'
  'operatingSystemName':
    'prefix': 'operatingSystemName'
    'body': 'operatingSystemName()'
  'operatingSystemVersionString':
    'prefix': 'operatingSystemVersionString'
    'body': 'operatingSystemVersionString()'
  'performActivityWithOptions:reason:usingBlock:':
    'prefix': 'performActivityWithOptions:reason:usingBlock:'
    'body': 'performActivityWithOptions(${1:NSActivityOptions options}, reason:${2:NSString* reason}, usingBlock:${3:void (^)(void) block})'
  'physicalMemory':
    'prefix': 'physicalMemory'
    'body': 'physicalMemory()'
  'processIdentifier':
    'prefix': 'processIdentifier'
    'body': 'processIdentifier()'
  'NSProcessInfo.processInfo':
    'prefix': 'processInfo'
    'body': 'NSProcessInfo.processInfo()'
  'processName':
    'prefix': 'processName'
    'body': 'processName()'
  'processorCount':
    'prefix': 'processorCount'
    'body': 'processorCount()'
  'setProcessName:':
    'prefix': 'setProcessName:'
    'body': 'setProcessName(${1:NSString* newName})'
  'systemUptime':
    'prefix': 'systemUptime'
    'body': 'systemUptime()'
  'becomeCurrentWithPendingUnitCount:':
    'prefix': 'becomeCurrentWithPendingUnitCount:'
    'body': 'becomeCurrentWithPendingUnitCount(${1:int64_t unitCount})'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'cancellationHandler':
    'prefix': 'cancellationHandler'
    'body': 'cancellationHandler()'
  'completedUnitCount':
    'prefix': 'completedUnitCount'
    'body': 'completedUnitCount()'
  'NSProgress.currentProgress':
    'prefix': 'currentProgress'
    'body': 'NSProgress.currentProgress()'
  'fractionCompleted':
    'prefix': 'fractionCompleted'
    'body': 'fractionCompleted()'
  'initWithParent:userInfo:':
    'prefix': 'initWithParent:userInfo:'
    'body': 'initWithParent(${1:NSProgress* parentProgressOrNil}, userInfo:${2:NSDictionary* userInfoOrNil})'
  'isCancellable':
    'prefix': 'isCancellable'
    'body': 'isCancellable()'
  'isCancelled':
    'prefix': 'isCancelled'
    'body': 'isCancelled()'
  'isIndeterminate':
    'prefix': 'isIndeterminate'
    'body': 'isIndeterminate()'
  'isOld':
    'prefix': 'isOld'
    'body': 'isOld()'
  'isPausable':
    'prefix': 'isPausable'
    'body': 'isPausable()'
  'isPaused':
    'prefix': 'isPaused'
    'body': 'isPaused()'
  'kind':
    'prefix': 'kind'
    'body': 'Kind()'
  'localizedAdditionalDescription':
    'prefix': 'localizedAdditionalDescription'
    'body': 'localizedAdditionalDescription()'
  'localizedDescription':
    'prefix': 'localizedDescription'
    'body': 'localizedDescription()'
  'pause':
    'prefix': 'pause'
    'body': 'pause()'
  'pausingHandler':
    'prefix': 'pausingHandler'
    'body': 'pausingHandler()'
  'NSProgress.progressWithTotalUnitCount:':
    'prefix': 'progressWithTotalUnitCount:'
    'body': 'NSProgress.progressWithTotalUnitCount(${1:int64_t unitCount})'
  'resignCurrent':
    'prefix': 'resignCurrent'
    'body': 'resignCurrent()'
  'setCancellable:':
    'prefix': 'setCancellable:'
    'body': 'setCancellable(${1:BOOL cancellable})'
  'setCancellationHandler:':
    'prefix': 'setCancellationHandler:'
    'body': 'setCancellationHandler(${1:void (^)(void) cancellationHandler})'
  'setCompletedUnitCount:':
    'prefix': 'setCompletedUnitCount:'
    'body': 'setCompletedUnitCount(${1:int64_t completedUnitCount})'
  'setKind:':
    'prefix': 'setKind:'
    'body': 'setKind(${1:NSString* kind})'
  'setLocalizedAdditionalDescription:':
    'prefix': 'setLocalizedAdditionalDescription:'
    'body': 'setLocalizedAdditionalDescription(${1:NSString* localizedAdditionalDescription})'
  'setLocalizedDescription:':
    'prefix': 'setLocalizedDescription:'
    'body': 'setLocalizedDescription(${1:NSString* localizedDescription})'
  'setPausable:':
    'prefix': 'setPausable:'
    'body': 'setPausable(${1:BOOL pausable})'
  'setPausingHandler:':
    'prefix': 'setPausingHandler:'
    'body': 'setPausingHandler(${1:void (^)(void) pausingHandler})'
  'setTotalUnitCount:':
    'prefix': 'setTotalUnitCount:'
    'body': 'setTotalUnitCount(${1:int64_t totalUnitCount})'
  'setUserInfoObject:forKey:':
    'prefix': 'setUserInfoObject:forKey:'
    'body': 'setUserInfoObject(${1:id objectOrNil}, forKey:${2:NSString* key})'
  'totalUnitCount':
    'prefix': 'totalUnitCount'
    'body': 'totalUnitCount()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'NSPropertyListSerialization.dataFromPropertyList:format:errorDescription:':
    'prefix': 'dataFromPropertyList:format:errorDescription:'
    'body': 'NSPropertyListSerialization.dataFromPropertyList(${1:id plist}, format:${2:NSPropertyListFormat format}, errorDescription:${3:NSString** errorString})'
  'NSPropertyListSerialization.dataWithPropertyList:format:options:error:':
    'prefix': 'dataWithPropertyList:format:options:error:'
    'body': 'NSPropertyListSerialization.dataWithPropertyList(${1:id plist}, format:${2:NSPropertyListFormat format}, options:${3:NSPropertyListWriteOptions opt}, error:${4:NSError** error})'
  'NSPropertyListSerialization.propertyList:isValidForFormat:':
    'prefix': 'propertyList:isValidForFormat:'
    'body': 'NSPropertyListSerialization.propertyList(${1:id plist}, isValidForFormat:${2:NSPropertyListFormat format})'
  'NSPropertyListSerialization.propertyListFromData:mutabilityOption:format:errorDescription:':
    'prefix': 'propertyListFromData:mutabilityOption:format:errorDescription:'
    'body': 'NSPropertyListSerialization.propertyListFromData(${1:NSData* data}, mutabilityOption:${2:NSPropertyListMutabilityOptions opt}, format:${3:NSPropertyListFormat* format}, errorDescription:${4:NSString** errorString})'
  'NSPropertyListSerialization.propertyListWithData:options:format:error:':
    'prefix': 'propertyListWithData:options:format:error:'
    'body': 'NSPropertyListSerialization.propertyListWithData(${1:NSData* data}, options:${2:NSPropertyListReadOptions opt}, format:${3:NSPropertyListFormat* format}, error:${4:NSError** error})'
  'NSPropertyListSerialization.propertyListWithStream:options:format:error:':
    'prefix': 'propertyListWithStream:options:format:error:'
    'body': 'NSPropertyListSerialization.propertyListWithStream(${1:NSInputStream* stream}, options:${2:NSPropertyListReadOptions opt}, format:${3:NSPropertyListFormat* format}, error:${4:NSError** error})'
  'NSPropertyListSerialization.writePropertyList:toStream:format:options:error:':
    'prefix': 'writePropertyList:toStream:format:options:error:'
    'body': 'NSPropertyListSerialization.writePropertyList(${1:id plist}, toStream:${2:NSOutputStream* stream}, format:${3:NSPropertyListFormat format}, options:${4:NSPropertyListWriteOptions opt}, error:${5:NSError** error})'
  'NSProxy.alloc':
    'prefix': 'alloc'
    'body': 'NSProxy.alloc()'
  'NSProxy.allocWithZone:':
    'prefix': 'allocWithZone:'
    'body': 'NSProxy.allocWithZone(${1:NSZone* zone})'
  'NSProxy.class':
    'prefix': 'class'
    'body': 'NSProxy.class()'
  'dealloc':
    'prefix': 'dealloc'
    'body': 'dealloc()'
  'debugDescription':
    'prefix': 'debugDescription'
    'body': 'debugDescription()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'finalize':
    'prefix': 'finalize'
    'body': 'finalize()'
  'forwardInvocation:':
    'prefix': 'forwardInvocation:'
    'body': 'forwardInvocation(${1:NSInvocation* invocation})'
  'methodSignatureForSelector:':
    'prefix': 'methodSignatureForSelector:'
    'body': 'methodSignatureForSelector(${1:SEL sel})'
  'NSProxy.respondsToSelector:':
    'prefix': 'respondsToSelector:'
    'body': 'NSProxy.respondsToSelector(${1:SEL aSelector})'
  'lockBeforeDate:':
    'prefix': 'lockBeforeDate:'
    'body': 'lockBeforeDate(${1:NSDate* limit})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'tryLock':
    'prefix': 'tryLock'
    'body': 'tryLock()'
  'enumerateMatchesInString:options:range:usingBlock:':
    'prefix': 'enumerateMatchesInString:options:range:usingBlock:'
    'body': 'enumerateMatchesInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range}, usingBlock:${4:void (^)(NSTextCheckingResult *, NSMatchingFlags, BOOL *) block})'
  'NSRegularExpression.escapedPatternForString:':
    'prefix': 'escapedPatternForString:'
    'body': 'NSRegularExpression.escapedPatternForString(${1:NSString* string})'
  'NSRegularExpression.escapedTemplateForString:':
    'prefix': 'escapedTemplateForString:'
    'body': 'NSRegularExpression.escapedTemplateForString(${1:NSString* string})'
  'firstMatchInString:options:range:':
    'prefix': 'firstMatchInString:options:range:'
    'body': 'firstMatchInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range})'
  'initWithPattern:options:error:':
    'prefix': 'initWithPattern:options:error:'
    'body': 'initWithPattern(${1:NSString* pattern}, options:${2:NSRegularExpressionOptions options}, error:${3:NSError** error})'
  'matchesInString:options:range:':
    'prefix': 'matchesInString:options:range:'
    'body': 'matchesInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range})'
  'numberOfCaptureGroups':
    'prefix': 'numberOfCaptureGroups'
    'body': 'numberOfCaptureGroups()'
  'numberOfMatchesInString:options:range:':
    'prefix': 'numberOfMatchesInString:options:range:'
    'body': 'numberOfMatchesInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range})'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'pattern':
    'prefix': 'pattern'
    'body': 'pattern()'
  'rangeOfFirstMatchInString:options:range:':
    'prefix': 'rangeOfFirstMatchInString:options:range:'
    'body': 'rangeOfFirstMatchInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range})'
  'NSRegularExpression.regularExpressionWithPattern:options:error:':
    'prefix': 'regularExpressionWithPattern:options:error:'
    'body': 'NSRegularExpression.regularExpressionWithPattern(${1:NSString* pattern}, options:${2:NSRegularExpressionOptions options}, error:${3:NSError** error})'
  'replaceMatchesInString:options:range:withTemplate:':
    'prefix': 'replaceMatchesInString:options:range:withTemplate:'
    'body': 'replaceMatchesInString(${1:NSMutableString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range}, withTemplate:${4:NSString* templ})'
  'replacementStringForResult:inString:offset:template:':
    'prefix': 'replacementStringForResult:inString:offset:template:'
    'body': 'replacementStringForResult(${1:NSTextCheckingResult* result}, inString:${2:NSString* string}, offset:${3:NSInteger offset}, template:${4:NSString* templ})'
  'stringByReplacingMatchesInString:options:range:withTemplate:':
    'prefix': 'stringByReplacingMatchesInString:options:range:withTemplate:'
    'body': 'stringByReplacingMatchesInString(${1:NSString* string}, options:${2:NSMatchingOptions options}, range:${3:NSRange range}, withTemplate:${4:NSString* templ})'
  'acceptInputForMode:beforeDate:':
    'prefix': 'acceptInputForMode:beforeDate:'
    'body': 'acceptInputForMode(${1:NSString* mode}, beforeDate:${2:NSDate* limitDate})'
  'addPort:forMode:':
    'prefix': 'addPort:forMode:'
    'body': 'addPort(${1:NSPort* aPort}, forMode:${2:NSString* mode})'
  'addTimer:forMode:':
    'prefix': 'addTimer:forMode:'
    'body': 'addTimer(${1:NSTimer* timer}, forMode:${2:NSString* mode})'
  'cancelPerformSelector:target:argument:':
    'prefix': 'cancelPerformSelector:target:argument:'
    'body': 'cancelPerformSelector(${1:SEL aSelector}, target:${2:id target}, argument:${3:id arg})'
  'cancelPerformSelectorsWithTarget:':
    'prefix': 'cancelPerformSelectorsWithTarget:'
    'body': 'cancelPerformSelectorsWithTarget(${1:id target})'
  'currentMode':
    'prefix': 'currentMode'
    'body': 'currentMode()'
  'NSRunLoop.currentRunLoop':
    'prefix': 'currentRunLoop'
    'body': 'NSRunLoop.currentRunLoop()'
  'getCFRunLoop':
    'prefix': 'getCFRunLoop'
    'body': 'getCFRunLoop()'
  'limitDateForMode:':
    'prefix': 'limitDateForMode:'
    'body': 'limitDateForMode(${1:NSString* mode})'
  'NSRunLoop.mainRunLoop':
    'prefix': 'mainRunLoop'
    'body': 'NSRunLoop.mainRunLoop()'
  'performSelector:target:argument:order:modes:':
    'prefix': 'performSelector:target:argument:order:modes:'
    'body': 'performSelector(${1:SEL aSelector}, target:${2:id target}, argument:${3:id arg}, order:${4:NSUInteger order}, modes:${5:NSArray* modes})'
  'removePort:forMode:':
    'prefix': 'removePort:forMode:'
    'body': 'removePort(${1:NSPort* aPort}, forMode:${2:NSString* mode})'
  'run':
    'prefix': 'run'
    'body': 'run()'
  'runMode:beforeDate:':
    'prefix': 'runMode:beforeDate:'
    'body': 'runMode(${1:NSString* mode}, beforeDate:${2:NSDate* limitDate})'
  'runUntilDate:':
    'prefix': 'runUntilDate:'
    'body': 'runUntilDate(${1:NSDate* limitDate})'
  'caseSensitive':
    'prefix': 'caseSensitive'
    'body': 'caseSensitive()'
  'charactersToBeSkipped':
    'prefix': 'charactersToBeSkipped'
    'body': 'charactersToBeSkipped()'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* string})'
  'isAtEnd':
    'prefix': 'isAtEnd'
    'body': 'isAtEnd()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'NSScanner.localizedScannerWithString:':
    'prefix': 'localizedScannerWithString:'
    'body': 'NSScanner.localizedScannerWithString(${1:NSString* string})'
  'scanCharactersFromSet:intoString:':
    'prefix': 'scanCharactersFromSet:intoString:'
    'body': 'scanCharactersFromSet(${1:NSCharacterSet* set}, intoString:${2:NSString** result})'
  'scanDecimal:':
    'prefix': 'scanDecimal:'
    'body': 'scanDecimal(${1:NSDecimal* dcm})'
  'scanDouble:':
    'prefix': 'scanDouble:'
    'body': 'scanDouble(${1:double* result})'
  'scanFloat:':
    'prefix': 'scanFloat:'
    'body': 'scanFloat(${1:float* result})'
  'scanHexDouble:':
    'prefix': 'scanHexDouble:'
    'body': 'scanHexDouble(${1:double* result})'
  'scanHexFloat:':
    'prefix': 'scanHexFloat:'
    'body': 'scanHexFloat(${1:float* result})'
  'scanHexInt:':
    'prefix': 'scanHexInt:'
    'body': 'scanHexInt(${1:unsigned int* result})'
  'scanHexLongLong:':
    'prefix': 'scanHexLongLong:'
    'body': 'scanHexLongLong(${1:unsigned long long* result})'
  'scanInt:':
    'prefix': 'scanInt:'
    'body': 'scanInt(${1:int* result})'
  'scanInteger:':
    'prefix': 'scanInteger:'
    'body': 'scanInteger(${1:NSInteger* result})'
  'scanLocation':
    'prefix': 'scanLocation'
    'body': 'scanLocation()'
  'scanLongLong:':
    'prefix': 'scanLongLong:'
    'body': 'scanLongLong(${1:long long* result})'
  'scanString:intoString:':
    'prefix': 'scanString:intoString:'
    'body': 'scanString(${1:NSString* string}, intoString:${2:NSString** result})'
  'scanUnsignedLongLong:':
    'prefix': 'scanUnsignedLongLong:'
    'body': 'scanUnsignedLongLong(${1:unsigned long long* result})'
  'scanUpToCharactersFromSet:intoString:':
    'prefix': 'scanUpToCharactersFromSet:intoString:'
    'body': 'scanUpToCharactersFromSet(${1:NSCharacterSet* set}, intoString:${2:NSString** result})'
  'scanUpToString:intoString:':
    'prefix': 'scanUpToString:intoString:'
    'body': 'scanUpToString(${1:NSString* string}, intoString:${2:NSString** result})'
  'NSScanner.scannerWithString:':
    'prefix': 'scannerWithString:'
    'body': 'NSScanner.scannerWithString(${1:NSString* string})'
  'setCaseSensitive:':
    'prefix': 'setCaseSensitive:'
    'body': 'setCaseSensitive(${1:BOOL flag})'
  'setCharactersToBeSkipped:':
    'prefix': 'setCharactersToBeSkipped:'
    'body': 'setCharactersToBeSkipped(${1:NSCharacterSet* set})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:id locale})'
  'setScanLocation:':
    'prefix': 'setScanLocation:'
    'body': 'setScanLocation(${1:NSUInteger pos})'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'addObserver:forKeyPath:options:context:':
    'prefix': 'addObserver:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, options:${3:NSKeyValueObservingOptions options}, context:${4:void* context})'
  'allObjects':
    'prefix': 'allObjects'
    'body': 'allObjects()'
  'anyObject':
    'prefix': 'anyObject'
    'body': 'anyObject()'
  'containsObject:':
    'prefix': 'containsObject:'
    'body': 'containsObject(${1:id anObject})'
  'count':
    'prefix': 'count'
    'body': 'count()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'descriptionWithLocale:':
    'prefix': 'descriptionWithLocale:'
    'body': 'descriptionWithLocale(${1:id locale})'
  'enumerateObjectsUsingBlock:':
    'prefix': 'enumerateObjectsUsingBlock:'
    'body': 'enumerateObjectsUsingBlock(${1:void (^)(id, BOOL *) block})'
  'enumerateObjectsWithOptions:usingBlock:':
    'prefix': 'enumerateObjectsWithOptions:usingBlock:'
    'body': 'enumerateObjectsWithOptions(${1:NSEnumerationOptions opts}, usingBlock:${2:void (^)(id, BOOL *) block})'
  'filteredSetUsingPredicate:':
    'prefix': 'filteredSetUsingPredicate:'
    'body': 'filteredSetUsingPredicate(${1:NSPredicate* predicate})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithArray:':
    'prefix': 'initWithArray:'
    'body': 'initWithArray(${1:NSArray* array})'
  'initWithObjects:':
    'prefix': 'initWithObjects:'
    'body': 'initWithObjects(${1:id firstObj})'
  'initWithObjects:count:':
    'prefix': 'initWithObjects:count:'
    'body': 'initWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'initWithSet:':
    'prefix': 'initWithSet:'
    'body': 'initWithSet(${1:NSSet* set})'
  'initWithSet:copyItems:':
    'prefix': 'initWithSet:copyItems:'
    'body': 'initWithSet(${1:NSSet* set}, copyItems:${2:BOOL flag})'
  'intersectsSet:':
    'prefix': 'intersectsSet:'
    'body': 'intersectsSet(${1:NSSet* otherSet})'
  'isEqualToSet:':
    'prefix': 'isEqualToSet:'
    'body': 'isEqualToSet(${1:NSSet* otherSet})'
  'isSubsetOfSet:':
    'prefix': 'isSubsetOfSet:'
    'body': 'isSubsetOfSet(${1:NSSet* otherSet})'
  'makeObjectsPerformSelector:':
    'prefix': 'makeObjectsPerformSelector:'
    'body': 'makeObjectsPerformSelector(${1:SEL aSelector})'
  'makeObjectsPerformSelector:withObject:':
    'prefix': 'makeObjectsPerformSelector:withObject:'
    'body': 'makeObjectsPerformSelector(${1:SEL aSelector}, withObject:${2:id argument})'
  'member:':
    'prefix': 'member:'
    'body': 'member(${1:id object})'
  'objectEnumerator':
    'prefix': 'objectEnumerator'
    'body': 'objectEnumerator()'
  'objectsPassingTest:':
    'prefix': 'objectsPassingTest:'
    'body': 'objectsPassingTest(${1:BOOL (^)(id, BOOL *) predicate})'
  'objectsWithOptions:passingTest:':
    'prefix': 'objectsWithOptions:passingTest:'
    'body': 'objectsWithOptions(${1:NSEnumerationOptions opts}, passingTest:${2:BOOL (^)(id, BOOL *) predicate})'
  'removeObserver:forKeyPath:':
    'prefix': 'removeObserver:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath})'
  'removeObserver:forKeyPath:context:':
    'prefix': 'removeObserver:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, context:${3:void* context})'
  'NSSet.set':
    'prefix': 'set'
    'body': 'NSSet.set()'
  'setByAddingObject:':
    'prefix': 'setByAddingObject:'
    'body': 'setByAddingObject(${1:id anObject})'
  'setByAddingObjectsFromArray:':
    'prefix': 'setByAddingObjectsFromArray:'
    'body': 'setByAddingObjectsFromArray(${1:NSArray* other})'
  'setByAddingObjectsFromSet:':
    'prefix': 'setByAddingObjectsFromSet:'
    'body': 'setByAddingObjectsFromSet(${1:NSSet* other})'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'NSSet.setWithArray:':
    'prefix': 'setWithArray:'
    'body': 'NSSet.setWithArray(${1:NSArray* array})'
  'NSSet.setWithObject:':
    'prefix': 'setWithObject:'
    'body': 'NSSet.setWithObject(${1:id object})'
  'NSSet.setWithObjects:':
    'prefix': 'setWithObjects:'
    'body': 'NSSet.setWithObjects(${1:id firstObj})'
  'NSSet.setWithObjects:count:':
    'prefix': 'setWithObjects:count:'
    'body': 'NSSet.setWithObjects(${1:id* objects}, count:${2:NSUInteger cnt})'
  'NSSet.setWithSet:':
    'prefix': 'setWithSet:'
    'body': 'NSSet.setWithSet(${1:NSSet* set})'
  'sortedArrayUsingDescriptors:':
    'prefix': 'sortedArrayUsingDescriptors:'
    'body': 'sortedArrayUsingDescriptors(${1:NSArray* sortDescriptors})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'address':
    'prefix': 'address'
    'body': 'address()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initRemoteWithProtocolFamily:socketType:protocol:address:':
    'prefix': 'initRemoteWithProtocolFamily:socketType:protocol:address:'
    'body': 'initRemoteWithProtocolFamily(${1:int family}, socketType:${2:int type}, protocol:${3:int protocol}, address:${4:NSData* address})'
  'initRemoteWithTCPPort:host:':
    'prefix': 'initRemoteWithTCPPort:host:'
    'body': 'initRemoteWithTCPPort(${1:unsigned short port}, host:${2:NSString* hostName})'
  'initWithProtocolFamily:socketType:protocol:address:':
    'prefix': 'initWithProtocolFamily:socketType:protocol:address:'
    'body': 'initWithProtocolFamily(${1:int family}, socketType:${2:int type}, protocol:${3:int protocol}, address:${4:NSData* address})'
  'initWithProtocolFamily:socketType:protocol:socket:':
    'prefix': 'initWithProtocolFamily:socketType:protocol:socket:'
    'body': 'initWithProtocolFamily(${1:int family}, socketType:${2:int type}, protocol:${3:int protocol}, socket:${4:NSSocketNativeHandle sock})'
  'initWithTCPPort:':
    'prefix': 'initWithTCPPort:'
    'body': 'initWithTCPPort(${1:unsigned short port})'
  'protocol':
    'prefix': 'protocol'
    'body': 'protocol()'
  'protocolFamily':
    'prefix': 'protocolFamily'
    'body': 'protocolFamily()'
  'socket':
    'prefix': 'socket'
    'body': 'socket()'
  'socketType':
    'prefix': 'socketType'
    'body': 'socketType()'
  'allowEvaluation':
    'prefix': 'allowEvaluation'
    'body': 'allowEvaluation()'
  'ascending':
    'prefix': 'ascending'
    'body': 'ascending()'
  'comparator':
    'prefix': 'comparator'
    'body': 'comparator()'
  'compareObject:toObject:':
    'prefix': 'compareObject:toObject:'
    'body': 'compareObject(${1:id object1}, toObject:${2:id object2})'
  'initWithKey:ascending:':
    'prefix': 'initWithKey:ascending:'
    'body': 'initWithKey(${1:NSString* key}, ascending:${2:BOOL ascending})'
  'initWithKey:ascending:comparator:':
    'prefix': 'initWithKey:ascending:comparator:'
    'body': 'initWithKey(${1:NSString* key}, ascending:${2:BOOL ascending}, comparator:${3:NSComparator cmptr})'
  'initWithKey:ascending:selector:':
    'prefix': 'initWithKey:ascending:selector:'
    'body': 'initWithKey(${1:NSString* key}, ascending:${2:BOOL ascending}, selector:${3:SEL selector})'
  'key':
    'prefix': 'key'
    'body': 'Key()'
  'reversedSortDescriptor':
    'prefix': 'reversedSortDescriptor'
    'body': 'reversedSortDescriptor()'
  'selector':
    'prefix': 'selector'
    'body': 'selector()'
  'NSSortDescriptor.sortDescriptorWithKey:ascending:':
    'prefix': 'sortDescriptorWithKey:ascending:'
    'body': 'NSSortDescriptor.sortDescriptorWithKey(${1:NSString* key}, ascending:${2:BOOL ascending})'
  'NSSortDescriptor.sortDescriptorWithKey:ascending:comparator:':
    'prefix': 'sortDescriptorWithKey:ascending:comparator:'
    'body': 'NSSortDescriptor.sortDescriptorWithKey(${1:NSString* key}, ascending:${2:BOOL ascending}, comparator:${3:NSComparator cmptr})'
  'NSSortDescriptor.sortDescriptorWithKey:ascending:selector:':
    'prefix': 'sortDescriptorWithKey:ascending:selector:'
    'body': 'NSSortDescriptor.sortDescriptorWithKey(${1:NSString* key}, ascending:${2:BOOL ascending}, selector:${3:SEL selector})'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'open':
    'prefix': 'open'
    'body': 'open()'
  'propertyForKey:':
    'prefix': 'propertyForKey:'
    'body': 'propertyForKey(${1:NSString* key})'
  'removeFromRunLoop:forMode:':
    'prefix': 'removeFromRunLoop:forMode:'
    'body': 'removeFromRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setProperty:forKey:':
    'prefix': 'setProperty:forKey:'
    'body': 'setProperty(${1:id property}, forKey:${2:NSString* key})'
  'streamError':
    'prefix': 'streamError'
    'body': 'streamError()'
  'streamStatus':
    'prefix': 'streamStatus'
    'body': 'streamStatus()'
  'UTF8String':
    'prefix': 'UTF8String'
    'body': 'UTF8String()'
  'NSString.availableStringEncodings':
    'prefix': 'availableStringEncodings'
    'body': 'NSString.availableStringEncodings()'
  'boolValue':
    'prefix': 'boolValue'
    'body': 'boolValue()'
  'cString':
    'prefix': 'cString'
    'body': 'cString()'
  'cStringLength':
    'prefix': 'cStringLength'
    'body': 'cStringLength()'
  'cStringUsingEncoding:':
    'prefix': 'cStringUsingEncoding:'
    'body': 'cStringUsingEncoding(${1:NSStringEncoding encoding})'
  'canBeConvertedToEncoding:':
    'prefix': 'canBeConvertedToEncoding:'
    'body': 'canBeConvertedToEncoding(${1:NSStringEncoding encoding})'
  'capitalizedString':
    'prefix': 'capitalizedString'
    'body': 'capitalizedString()'
  'capitalizedStringWithLocale:':
    'prefix': 'capitalizedStringWithLocale:'
    'body': 'capitalizedStringWithLocale(${1:NSLocale* locale})'
  'caseInsensitiveCompare:':
    'prefix': 'caseInsensitiveCompare:'
    'body': 'caseInsensitiveCompare(${1:NSString* string})'
  'characterAtIndex:':
    'prefix': 'characterAtIndex:'
    'body': 'characterAtIndex(${1:NSUInteger index})'
  'commonPrefixWithString:options:':
    'prefix': 'commonPrefixWithString:options:'
    'body': 'commonPrefixWithString(${1:NSString* aString}, options:${2:NSStringCompareOptions mask})'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:NSString* string})'
  'compare:options:':
    'prefix': 'compare:options:'
    'body': 'compare(${1:NSString* string}, options:${2:NSStringCompareOptions mask})'
  'compare:options:range:':
    'prefix': 'compare:options:range:'
    'body': 'compare(${1:NSString* string}, options:${2:NSStringCompareOptions mask}, range:${3:NSRange compareRange})'
  'compare:options:range:locale:':
    'prefix': 'compare:options:range:locale:'
    'body': 'compare(${1:NSString* string}, options:${2:NSStringCompareOptions mask}, range:${3:NSRange compareRange}, locale:${4:id locale})'
  'completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:':
    'prefix': 'completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'
    'body': 'completePathIntoString(${1:NSString** outputName}, caseSensitive:${2:BOOL flag}, matchesIntoArray:${3:NSArray** outputArray}, filterTypes:${4:NSArray* filterTypes})'
  'componentsSeparatedByCharactersInSet:':
    'prefix': 'componentsSeparatedByCharactersInSet:'
    'body': 'componentsSeparatedByCharactersInSet(${1:NSCharacterSet* separator})'
  'componentsSeparatedByString:':
    'prefix': 'componentsSeparatedByString:'
    'body': 'componentsSeparatedByString(${1:NSString* separator})'
  'dataUsingEncoding:':
    'prefix': 'dataUsingEncoding:'
    'body': 'dataUsingEncoding(${1:NSStringEncoding encoding})'
  'dataUsingEncoding:allowLossyConversion:':
    'prefix': 'dataUsingEncoding:allowLossyConversion:'
    'body': 'dataUsingEncoding(${1:NSStringEncoding encoding}, allowLossyConversion:${2:BOOL lossy})'
  'decomposedStringWithCanonicalMapping':
    'prefix': 'decomposedStringWithCanonicalMapping'
    'body': 'decomposedStringWithCanonicalMapping()'
  'decomposedStringWithCompatibilityMapping':
    'prefix': 'decomposedStringWithCompatibilityMapping'
    'body': 'decomposedStringWithCompatibilityMapping()'
  'NSString.defaultCStringEncoding':
    'prefix': 'defaultCStringEncoding'
    'body': 'NSString.defaultCStringEncoding()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'enumerateLinesUsingBlock:':
    'prefix': 'enumerateLinesUsingBlock:'
    'body': 'enumerateLinesUsingBlock(${1:void (^)(NSString *, BOOL *) block})'
  'enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:':
    'prefix': 'enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'
    'body': 'enumerateLinguisticTagsInRange(${1:NSRange range}, scheme:${2:NSString* tagScheme}, options:${3:NSLinguisticTaggerOptions opts}, orthography:${4:NSOrthography* orthography}, usingBlock:${5:void (^)(NSString *, NSRange, NSRange, BOOL *) block})'
  'enumerateSubstringsInRange:options:usingBlock:':
    'prefix': 'enumerateSubstringsInRange:options:usingBlock:'
    'body': 'enumerateSubstringsInRange(${1:NSRange range}, options:${2:NSStringEnumerationOptions opts}, usingBlock:${3:void (^)(NSString *, NSRange, NSRange, BOOL *) block})'
  'fastestEncoding':
    'prefix': 'fastestEncoding'
    'body': 'fastestEncoding()'
  'fileSystemRepresentation':
    'prefix': 'fileSystemRepresentation'
    'body': 'fileSystemRepresentation()'
  'floatValue':
    'prefix': 'floatValue'
    'body': 'floatValue()'
  'getBytes:maxLength:usedLength:encoding:options:range:remainingRange:':
    'prefix': 'getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'
    'body': 'getBytes(${1:void* buffer}, maxLength:${2:NSUInteger maxBufferCount}, usedLength:${3:NSUInteger* usedBufferCount}, encoding:${4:NSStringEncoding encoding}, options:${5:NSStringEncodingConversionOptions options}, range:${6:NSRange range}, remainingRange:${7:NSRangePointer leftover})'
  'getCString:':
    'prefix': 'getCString:'
    'body': 'getCString(${1:char* bytes})'
  'getCString:maxLength:':
    'prefix': 'getCString:maxLength:'
    'body': 'getCString(${1:char* bytes}, maxLength:${2:NSUInteger maxLength})'
  'getCString:maxLength:encoding:':
    'prefix': 'getCString:maxLength:encoding:'
    'body': 'getCString(${1:char* buffer}, maxLength:${2:NSUInteger maxBufferCount}, encoding:${3:NSStringEncoding encoding})'
  'getCString:maxLength:range:remainingRange:':
    'prefix': 'getCString:maxLength:range:remainingRange:'
    'body': 'getCString(${1:char* bytes}, maxLength:${2:NSUInteger maxLength}, range:${3:NSRange aRange}, remainingRange:${4:NSRangePointer leftoverRange})'
  'getCharacters:':
    'prefix': 'getCharacters:'
    'body': 'getCharacters(${1:unichar* buffer})'
  'getCharacters:range:':
    'prefix': 'getCharacters:range:'
    'body': 'getCharacters(${1:unichar* buffer}, range:${2:NSRange aRange})'
  'getFileSystemRepresentation:maxLength:':
    'prefix': 'getFileSystemRepresentation:maxLength:'
    'body': 'getFileSystemRepresentation(${1:char* cname}, maxLength:${2:NSUInteger max})'
  'getLineStart:end:contentsEnd:forRange:':
    'prefix': 'getLineStart:end:contentsEnd:forRange:'
    'body': 'getLineStart(${1:NSUInteger* startPtr}, end:${2:NSUInteger* lineEndPtr}, contentsEnd:${3:NSUInteger* contentsEndPtr}, forRange:${4:NSRange range})'
  'getParagraphStart:end:contentsEnd:forRange:':
    'prefix': 'getParagraphStart:end:contentsEnd:forRange:'
    'body': 'getParagraphStart(${1:NSUInteger* startPtr}, end:${2:NSUInteger* parEndPtr}, contentsEnd:${3:NSUInteger* contentsEndPtr}, forRange:${4:NSRange range})'
  'hasPrefix:':
    'prefix': 'hasPrefix:'
    'body': 'hasPrefix(${1:NSString* aString})'
  'hasSuffix:':
    'prefix': 'hasSuffix:'
    'body': 'hasSuffix(${1:NSString* aString})'
  'hash':
    'prefix': 'hash'
    'body': 'hash()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithBytes:length:encoding:':
    'prefix': 'initWithBytes:length:encoding:'
    'body': 'initWithBytes(${1:void* bytes}, length:${2:NSUInteger len}, encoding:${3:NSStringEncoding encoding})'
  'initWithBytesNoCopy:length:encoding:freeWhenDone:':
    'prefix': 'initWithBytesNoCopy:length:encoding:freeWhenDone:'
    'body': 'initWithBytesNoCopy(${1:void* bytes}, length:${2:NSUInteger len}, encoding:${3:NSStringEncoding encoding}, freeWhenDone:${4:BOOL freeBuffer})'
  'initWithCString:':
    'prefix': 'initWithCString:'
    'body': 'initWithCString(${1:char* bytes})'
  'initWithCString:encoding:':
    'prefix': 'initWithCString:encoding:'
    'body': 'initWithCString(${1:char* nullTerminatedCString}, encoding:${2:NSStringEncoding encoding})'
  'initWithCString:length:':
    'prefix': 'initWithCString:length:'
    'body': 'initWithCString(${1:char* bytes}, length:${2:NSUInteger length})'
  'initWithCStringNoCopy:length:freeWhenDone:':
    'prefix': 'initWithCStringNoCopy:length:freeWhenDone:'
    'body': 'initWithCStringNoCopy(${1:char* bytes}, length:${2:NSUInteger length}, freeWhenDone:${3:BOOL freeBuffer})'
  'initWithCharacters:length:':
    'prefix': 'initWithCharacters:length:'
    'body': 'initWithCharacters(${1:unichar* characters}, length:${2:NSUInteger length})'
  'initWithCharactersNoCopy:length:freeWhenDone:':
    'prefix': 'initWithCharactersNoCopy:length:freeWhenDone:'
    'body': 'initWithCharactersNoCopy(${1:unichar* characters}, length:${2:NSUInteger length}, freeWhenDone:${3:BOOL freeBuffer})'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* path})'
  'initWithContentsOfFile:encoding:error:':
    'prefix': 'initWithContentsOfFile:encoding:error:'
    'body': 'initWithContentsOfFile(${1:NSString* path}, encoding:${2:NSStringEncoding enc}, error:${3:NSError** error})'
  'initWithContentsOfFile:usedEncoding:error:':
    'prefix': 'initWithContentsOfFile:usedEncoding:error:'
    'body': 'initWithContentsOfFile(${1:NSString* path}, usedEncoding:${2:NSStringEncoding* enc}, error:${3:NSError** error})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithContentsOfURL:encoding:error:':
    'prefix': 'initWithContentsOfURL:encoding:error:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, encoding:${2:NSStringEncoding enc}, error:${3:NSError** error})'
  'initWithContentsOfURL:usedEncoding:error:':
    'prefix': 'initWithContentsOfURL:usedEncoding:error:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, usedEncoding:${2:NSStringEncoding* enc}, error:${3:NSError** error})'
  'initWithData:encoding:':
    'prefix': 'initWithData:encoding:'
    'body': 'initWithData(${1:NSData* data}, encoding:${2:NSStringEncoding encoding})'
  'initWithFormat:':
    'prefix': 'initWithFormat:'
    'body': 'initWithFormat(${1:NSString* format})'
  'initWithFormat:arguments:':
    'prefix': 'initWithFormat:arguments:'
    'body': 'initWithFormat(${1:NSString* format}, arguments:${2:va_list argList})'
  'initWithFormat:locale:':
    'prefix': 'initWithFormat:locale:'
    'body': 'initWithFormat(${1:NSString* format}, locale:${2:id locale})'
  'initWithFormat:locale:arguments:':
    'prefix': 'initWithFormat:locale:arguments:'
    'body': 'initWithFormat(${1:NSString* format}, locale:${2:id locale}, arguments:${3:va_list argList})'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* aString})'
  'initWithUTF8String:':
    'prefix': 'initWithUTF8String:'
    'body': 'initWithUTF8String(${1:char* nullTerminatedCString})'
  'intValue':
    'prefix': 'intValue'
    'body': 'intValue()'
  'integerValue':
    'prefix': 'integerValue'
    'body': 'integerValue()'
  'isAbsolutePath':
    'prefix': 'isAbsolutePath'
    'body': 'isAbsolutePath()'
  'isEqualToString:':
    'prefix': 'isEqualToString:'
    'body': 'isEqualToString(${1:NSString* aString})'
  'lastPathComponent':
    'prefix': 'lastPathComponent'
    'body': 'lastPathComponent()'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'lengthOfBytesUsingEncoding:':
    'prefix': 'lengthOfBytesUsingEncoding:'
    'body': 'lengthOfBytesUsingEncoding(${1:NSStringEncoding enc})'
  'lineRangeForRange:':
    'prefix': 'lineRangeForRange:'
    'body': 'lineRangeForRange(${1:NSRange range})'
  'linguisticTagsInRange:scheme:options:orthography:tokenRanges:':
    'prefix': 'linguisticTagsInRange:scheme:options:orthography:tokenRanges:'
    'body': 'linguisticTagsInRange(${1:NSRange range}, scheme:${2:NSString* tagScheme}, options:${3:NSLinguisticTaggerOptions opts}, orthography:${4:NSOrthography* orthography}, tokenRanges:${5:NSArray** tokenRanges})'
  'localizedCaseInsensitiveCompare:':
    'prefix': 'localizedCaseInsensitiveCompare:'
    'body': 'localizedCaseInsensitiveCompare(${1:NSString* string})'
  'localizedCompare:':
    'prefix': 'localizedCompare:'
    'body': 'localizedCompare(${1:NSString* string})'
  'NSString.localizedNameOfStringEncoding:':
    'prefix': 'localizedNameOfStringEncoding:'
    'body': 'NSString.localizedNameOfStringEncoding(${1:NSStringEncoding encoding})'
  'localizedStandardCompare:':
    'prefix': 'localizedStandardCompare:'
    'body': 'localizedStandardCompare(${1:NSString* string})'
  'NSString.localizedStringWithFormat:':
    'prefix': 'localizedStringWithFormat:'
    'body': 'NSString.localizedStringWithFormat(${1:NSString* format})'
  'longLongValue':
    'prefix': 'longLongValue'
    'body': 'longLongValue()'
  'lossyCString':
    'prefix': 'lossyCString'
    'body': 'lossyCString()'
  'lowercaseString':
    'prefix': 'lowercaseString'
    'body': 'lowercaseString()'
  'lowercaseStringWithLocale:':
    'prefix': 'lowercaseStringWithLocale:'
    'body': 'lowercaseStringWithLocale(${1:NSLocale* locale})'
  'maximumLengthOfBytesUsingEncoding:':
    'prefix': 'maximumLengthOfBytesUsingEncoding:'
    'body': 'maximumLengthOfBytesUsingEncoding(${1:NSStringEncoding enc})'
  'paragraphRangeForRange:':
    'prefix': 'paragraphRangeForRange:'
    'body': 'paragraphRangeForRange(${1:NSRange range})'
  'pathComponents':
    'prefix': 'pathComponents'
    'body': 'pathComponents()'
  'pathExtension':
    'prefix': 'pathExtension'
    'body': 'pathExtension()'
  'NSString.pathWithComponents:':
    'prefix': 'pathWithComponents:'
    'body': 'NSString.pathWithComponents(${1:NSArray* components})'
  'precomposedStringWithCanonicalMapping':
    'prefix': 'precomposedStringWithCanonicalMapping'
    'body': 'precomposedStringWithCanonicalMapping()'
  'precomposedStringWithCompatibilityMapping':
    'prefix': 'precomposedStringWithCompatibilityMapping'
    'body': 'precomposedStringWithCompatibilityMapping()'
  'propertyList':
    'prefix': 'propertyList'
    'body': 'propertyList()'
  'propertyListFromStringsFileFormat':
    'prefix': 'propertyListFromStringsFileFormat'
    'body': 'propertyListFromStringsFileFormat()'
  'rangeOfCharacterFromSet:':
    'prefix': 'rangeOfCharacterFromSet:'
    'body': 'rangeOfCharacterFromSet(${1:NSCharacterSet* aSet})'
  'rangeOfCharacterFromSet:options:':
    'prefix': 'rangeOfCharacterFromSet:options:'
    'body': 'rangeOfCharacterFromSet(${1:NSCharacterSet* aSet}, options:${2:NSStringCompareOptions mask})'
  'rangeOfCharacterFromSet:options:range:':
    'prefix': 'rangeOfCharacterFromSet:options:range:'
    'body': 'rangeOfCharacterFromSet(${1:NSCharacterSet* aSet}, options:${2:NSStringCompareOptions mask}, range:${3:NSRange searchRange})'
  'rangeOfComposedCharacterSequenceAtIndex:':
    'prefix': 'rangeOfComposedCharacterSequenceAtIndex:'
    'body': 'rangeOfComposedCharacterSequenceAtIndex(${1:NSUInteger index})'
  'rangeOfComposedCharacterSequencesForRange:':
    'prefix': 'rangeOfComposedCharacterSequencesForRange:'
    'body': 'rangeOfComposedCharacterSequencesForRange(${1:NSRange range})'
  'rangeOfString:':
    'prefix': 'rangeOfString:'
    'body': 'rangeOfString(${1:NSString* aString})'
  'rangeOfString:options:':
    'prefix': 'rangeOfString:options:'
    'body': 'rangeOfString(${1:NSString* aString}, options:${2:NSStringCompareOptions mask})'
  'rangeOfString:options:range:':
    'prefix': 'rangeOfString:options:range:'
    'body': 'rangeOfString(${1:NSString* aString}, options:${2:NSStringCompareOptions mask}, range:${3:NSRange searchRange})'
  'rangeOfString:options:range:locale:':
    'prefix': 'rangeOfString:options:range:locale:'
    'body': 'rangeOfString(${1:NSString* aString}, options:${2:NSStringCompareOptions mask}, range:${3:NSRange searchRange}, locale:${4:NSLocale* locale})'
  'smallestEncoding':
    'prefix': 'smallestEncoding'
    'body': 'smallestEncoding()'
  'NSString.string':
    'prefix': 'string'
    'body': 'NSString.string()'
  'stringByAbbreviatingWithTildeInPath':
    'prefix': 'stringByAbbreviatingWithTildeInPath'
    'body': 'stringByAbbreviatingWithTildeInPath()'
  'stringByAddingPercentEncodingWithAllowedCharacters:':
    'prefix': 'stringByAddingPercentEncodingWithAllowedCharacters:'
    'body': 'stringByAddingPercentEncodingWithAllowedCharacters(${1:NSCharacterSet* allowedCharacters})'
  'stringByAddingPercentEscapesUsingEncoding:':
    'prefix': 'stringByAddingPercentEscapesUsingEncoding:'
    'body': 'stringByAddingPercentEscapesUsingEncoding(${1:NSStringEncoding enc})'
  'stringByAppendingFormat:':
    'prefix': 'stringByAppendingFormat:'
    'body': 'stringByAppendingFormat(${1:NSString* format})'
  'stringByAppendingPathComponent:':
    'prefix': 'stringByAppendingPathComponent:'
    'body': 'stringByAppendingPathComponent(${1:NSString* str})'
  'stringByAppendingPathExtension:':
    'prefix': 'stringByAppendingPathExtension:'
    'body': 'stringByAppendingPathExtension(${1:NSString* str})'
  'stringByAppendingString:':
    'prefix': 'stringByAppendingString:'
    'body': 'stringByAppendingString(${1:NSString* aString})'
  'stringByDeletingLastPathComponent':
    'prefix': 'stringByDeletingLastPathComponent'
    'body': 'stringByDeletingLastPathComponent()'
  'stringByDeletingPathExtension':
    'prefix': 'stringByDeletingPathExtension'
    'body': 'stringByDeletingPathExtension()'
  'stringByExpandingTildeInPath':
    'prefix': 'stringByExpandingTildeInPath'
    'body': 'stringByExpandingTildeInPath()'
  'stringByFoldingWithOptions:locale:':
    'prefix': 'stringByFoldingWithOptions:locale:'
    'body': 'stringByFoldingWithOptions(${1:NSStringCompareOptions options}, locale:${2:NSLocale* locale})'
  'stringByPaddingToLength:withString:startingAtIndex:':
    'prefix': 'stringByPaddingToLength:withString:startingAtIndex:'
    'body': 'stringByPaddingToLength(${1:NSUInteger newLength}, withString:${2:NSString* padString}, startingAtIndex:${3:NSUInteger padIndex})'
  'stringByRemovingPercentEncoding':
    'prefix': 'stringByRemovingPercentEncoding'
    'body': 'stringByRemovingPercentEncoding()'
  'stringByReplacingCharactersInRange:withString:':
    'prefix': 'stringByReplacingCharactersInRange:withString:'
    'body': 'stringByReplacingCharactersInRange(${1:NSRange range}, withString:${2:NSString* replacement})'
  'stringByReplacingOccurrencesOfString:withString:':
    'prefix': 'stringByReplacingOccurrencesOfString:withString:'
    'body': 'stringByReplacingOccurrencesOfString(${1:NSString* target}, withString:${2:NSString* replacement})'
  'stringByReplacingOccurrencesOfString:withString:options:range:':
    'prefix': 'stringByReplacingOccurrencesOfString:withString:options:range:'
    'body': 'stringByReplacingOccurrencesOfString(${1:NSString* target}, withString:${2:NSString* replacement}, options:${3:NSStringCompareOptions options}, range:${4:NSRange searchRange})'
  'stringByReplacingPercentEscapesUsingEncoding:':
    'prefix': 'stringByReplacingPercentEscapesUsingEncoding:'
    'body': 'stringByReplacingPercentEscapesUsingEncoding(${1:NSStringEncoding enc})'
  'stringByResolvingSymlinksInPath':
    'prefix': 'stringByResolvingSymlinksInPath'
    'body': 'stringByResolvingSymlinksInPath()'
  'stringByStandardizingPath':
    'prefix': 'stringByStandardizingPath'
    'body': 'stringByStandardizingPath()'
  'stringByTrimmingCharactersInSet:':
    'prefix': 'stringByTrimmingCharactersInSet:'
    'body': 'stringByTrimmingCharactersInSet(${1:NSCharacterSet* set})'
  'NSString.stringWithCString:':
    'prefix': 'stringWithCString:'
    'body': 'NSString.stringWithCString(${1:char* bytes})'
  'NSString.stringWithCString:encoding:':
    'prefix': 'stringWithCString:encoding:'
    'body': 'NSString.stringWithCString(${1:char* cString}, encoding:${2:NSStringEncoding enc})'
  'NSString.stringWithCString:length:':
    'prefix': 'stringWithCString:length:'
    'body': 'NSString.stringWithCString(${1:char* bytes}, length:${2:NSUInteger length})'
  'NSString.stringWithCharacters:length:':
    'prefix': 'stringWithCharacters:length:'
    'body': 'NSString.stringWithCharacters(${1:unichar* characters}, length:${2:NSUInteger length})'
  'NSString.stringWithContentsOfFile:':
    'prefix': 'stringWithContentsOfFile:'
    'body': 'NSString.stringWithContentsOfFile(${1:NSString* path})'
  'NSString.stringWithContentsOfFile:encoding:error:':
    'prefix': 'stringWithContentsOfFile:encoding:error:'
    'body': 'NSString.stringWithContentsOfFile(${1:NSString* path}, encoding:${2:NSStringEncoding enc}, error:${3:NSError** error})'
  'NSString.stringWithContentsOfFile:usedEncoding:error:':
    'prefix': 'stringWithContentsOfFile:usedEncoding:error:'
    'body': 'NSString.stringWithContentsOfFile(${1:NSString* path}, usedEncoding:${2:NSStringEncoding* enc}, error:${3:NSError** error})'
  'NSString.stringWithContentsOfURL:':
    'prefix': 'stringWithContentsOfURL:'
    'body': 'NSString.stringWithContentsOfURL(${1:NSURL* url})'
  'NSString.stringWithContentsOfURL:encoding:error:':
    'prefix': 'stringWithContentsOfURL:encoding:error:'
    'body': 'NSString.stringWithContentsOfURL(${1:NSURL* url}, encoding:${2:NSStringEncoding enc}, error:${3:NSError** error})'
  'NSString.stringWithContentsOfURL:usedEncoding:error:':
    'prefix': 'stringWithContentsOfURL:usedEncoding:error:'
    'body': 'NSString.stringWithContentsOfURL(${1:NSURL* url}, usedEncoding:${2:NSStringEncoding* enc}, error:${3:NSError** error})'
  'NSString.stringWithFormat:':
    'prefix': 'stringWithFormat:'
    'body': 'NSString.stringWithFormat(${1:NSString* format})'
  'NSString.stringWithString:':
    'prefix': 'stringWithString:'
    'body': 'NSString.stringWithString(${1:NSString* string})'
  'NSString.stringWithUTF8String:':
    'prefix': 'stringWithUTF8String:'
    'body': 'NSString.stringWithUTF8String(${1:char* nullTerminatedCString})'
  'stringsByAppendingPaths:':
    'prefix': 'stringsByAppendingPaths:'
    'body': 'stringsByAppendingPaths(${1:NSArray* paths})'
  'substringFromIndex:':
    'prefix': 'substringFromIndex:'
    'body': 'substringFromIndex(${1:NSUInteger from})'
  'substringToIndex:':
    'prefix': 'substringToIndex:'
    'body': 'substringToIndex(${1:NSUInteger to})'
  'substringWithRange:':
    'prefix': 'substringWithRange:'
    'body': 'substringWithRange(${1:NSRange range})'
  'uppercaseString':
    'prefix': 'uppercaseString'
    'body': 'uppercaseString()'
  'uppercaseStringWithLocale:':
    'prefix': 'uppercaseStringWithLocale:'
    'body': 'uppercaseStringWithLocale(${1:NSLocale* locale})'
  'writeToFile:atomically:':
    'prefix': 'writeToFile:atomically:'
    'body': 'writeToFile(${1:NSString* path}, atomically:${2:BOOL useAuxiliaryFile})'
  'writeToFile:atomically:encoding:error:':
    'prefix': 'writeToFile:atomically:encoding:error:'
    'body': 'writeToFile(${1:NSString* path}, atomically:${2:BOOL useAuxiliaryFile}, encoding:${3:NSStringEncoding enc}, error:${4:NSError** error})'
  'writeToURL:atomically:':
    'prefix': 'writeToURL:atomically:'
    'body': 'writeToURL(${1:NSURL* url}, atomically:${2:BOOL atomically})'
  'writeToURL:atomically:encoding:error:':
    'prefix': 'writeToURL:atomically:encoding:error:'
    'body': 'writeToURL(${1:NSURL* url}, atomically:${2:BOOL useAuxiliaryFile}, encoding:${3:NSStringEncoding enc}, error:${4:NSError** error})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'NSTextCheckingResult.addressCheckingResultWithRange:components:':
    'prefix': 'addressCheckingResultWithRange:components:'
    'body': 'NSTextCheckingResult.addressCheckingResultWithRange(${1:NSRange range}, components:${2:NSDictionary* components})'
  'addressComponents':
    'prefix': 'addressComponents'
    'body': 'addressComponents()'
  'alternativeStrings':
    'prefix': 'alternativeStrings'
    'body': 'alternativeStrings()'
  'components':
    'prefix': 'components'
    'body': 'components()'
  'NSTextCheckingResult.correctionCheckingResultWithRange:replacementString:':
    'prefix': 'correctionCheckingResultWithRange:replacementString:'
    'body': 'NSTextCheckingResult.correctionCheckingResultWithRange(${1:NSRange range}, replacementString:${2:NSString* replacementString})'
  'NSTextCheckingResult.correctionCheckingResultWithRange:replacementString:alternativeStrings:':
    'prefix': 'correctionCheckingResultWithRange:replacementString:alternativeStrings:'
    'body': 'NSTextCheckingResult.correctionCheckingResultWithRange(${1:NSRange range}, replacementString:${2:NSString* replacementString}, alternativeStrings:${3:NSArray* alternativeStrings})'
  'NSTextCheckingResult.dashCheckingResultWithRange:replacementString:':
    'prefix': 'dashCheckingResultWithRange:replacementString:'
    'body': 'NSTextCheckingResult.dashCheckingResultWithRange(${1:NSRange range}, replacementString:${2:NSString* replacementString})'
  'date':
    'prefix': 'date'
    'body': 'date()'
  'NSTextCheckingResult.dateCheckingResultWithRange:date:':
    'prefix': 'dateCheckingResultWithRange:date:'
    'body': 'NSTextCheckingResult.dateCheckingResultWithRange(${1:NSRange range}, date:${2:NSDate* date})'
  'NSTextCheckingResult.dateCheckingResultWithRange:date:timeZone:duration:':
    'prefix': 'dateCheckingResultWithRange:date:timeZone:duration:'
    'body': 'NSTextCheckingResult.dateCheckingResultWithRange(${1:NSRange range}, date:${2:NSDate* date}, timeZone:${3:NSTimeZone* timeZone}, duration:${4:NSTimeInterval duration})'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'NSTextCheckingResult.grammarCheckingResultWithRange:details:':
    'prefix': 'grammarCheckingResultWithRange:details:'
    'body': 'NSTextCheckingResult.grammarCheckingResultWithRange(${1:NSRange range}, details:${2:NSArray* details})'
  'grammarDetails':
    'prefix': 'grammarDetails'
    'body': 'grammarDetails()'
  'NSTextCheckingResult.linkCheckingResultWithRange:URL:':
    'prefix': 'linkCheckingResultWithRange:URL:'
    'body': 'NSTextCheckingResult.linkCheckingResultWithRange(${1:NSRange range}, URL:${2:NSURL* url})'
  'numberOfRanges':
    'prefix': 'numberOfRanges'
    'body': 'numberOfRanges()'
  'orthography':
    'prefix': 'orthography'
    'body': 'orthography()'
  'NSTextCheckingResult.orthographyCheckingResultWithRange:orthography:':
    'prefix': 'orthographyCheckingResultWithRange:orthography:'
    'body': 'NSTextCheckingResult.orthographyCheckingResultWithRange(${1:NSRange range}, orthography:${2:NSOrthography* orthography})'
  'phoneNumber':
    'prefix': 'phoneNumber'
    'body': 'phoneNumber()'
  'NSTextCheckingResult.phoneNumberCheckingResultWithRange:phoneNumber:':
    'prefix': 'phoneNumberCheckingResultWithRange:phoneNumber:'
    'body': 'NSTextCheckingResult.phoneNumberCheckingResultWithRange(${1:NSRange range}, phoneNumber:${2:NSString* phoneNumber})'
  'NSTextCheckingResult.quoteCheckingResultWithRange:replacementString:':
    'prefix': 'quoteCheckingResultWithRange:replacementString:'
    'body': 'NSTextCheckingResult.quoteCheckingResultWithRange(${1:NSRange range}, replacementString:${2:NSString* replacementString})'
  'range':
    'prefix': 'range'
    'body': 'range()'
  'rangeAtIndex:':
    'prefix': 'rangeAtIndex:'
    'body': 'rangeAtIndex(${1:NSUInteger idx})'
  'regularExpression':
    'prefix': 'regularExpression'
    'body': 'regularExpression()'
  'NSTextCheckingResult.regularExpressionCheckingResultWithRanges:count:regularExpression:':
    'prefix': 'regularExpressionCheckingResultWithRanges:count:regularExpression:'
    'body': 'NSTextCheckingResult.regularExpressionCheckingResultWithRanges(${1:NSRangePointer ranges}, count:${2:NSUInteger count}, regularExpression:${3:NSRegularExpression* regularExpression})'
  'NSTextCheckingResult.replacementCheckingResultWithRange:replacementString:':
    'prefix': 'replacementCheckingResultWithRange:replacementString:'
    'body': 'NSTextCheckingResult.replacementCheckingResultWithRange(${1:NSRange range}, replacementString:${2:NSString* replacementString})'
  'replacementString':
    'prefix': 'replacementString'
    'body': 'replacementString()'
  'resultByAdjustingRangesWithOffset:':
    'prefix': 'resultByAdjustingRangesWithOffset:'
    'body': 'resultByAdjustingRangesWithOffset(${1:NSInteger offset})'
  'resultType':
    'prefix': 'resultType'
    'body': 'resultType()'
  'NSTextCheckingResult.spellCheckingResultWithRange:':
    'prefix': 'spellCheckingResultWithRange:'
    'body': 'NSTextCheckingResult.spellCheckingResultWithRange(${1:NSRange range})'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'NSTextCheckingResult.transitInformationCheckingResultWithRange:components:':
    'prefix': 'transitInformationCheckingResultWithRange:components:'
    'body': 'NSTextCheckingResult.transitInformationCheckingResultWithRange(${1:NSRange range}, components:${2:NSDictionary* components})'
  'NSThread.callStackReturnAddresses':
    'prefix': 'callStackReturnAddresses'
    'body': 'NSThread.callStackReturnAddresses()'
  'NSThread.callStackSymbols':
    'prefix': 'callStackSymbols'
    'body': 'NSThread.callStackSymbols()'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'NSThread.currentThread':
    'prefix': 'currentThread'
    'body': 'NSThread.currentThread()'
  'NSThread.detachNewThreadSelector:toTarget:withObject:':
    'prefix': 'detachNewThreadSelector:toTarget:withObject:'
    'body': 'NSThread.detachNewThreadSelector(${1:SEL selector}, toTarget:${2:id target}, withObject:${3:id argument})'
  'NSThread.exit':
    'prefix': 'exit'
    'body': 'NSThread.exit()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithTarget:selector:object:':
    'prefix': 'initWithTarget:selector:object:'
    'body': 'initWithTarget(${1:id target}, selector:${2:SEL selector}, object:${3:id argument})'
  'isCancelled':
    'prefix': 'isCancelled'
    'body': 'isCancelled()'
  'isExecuting':
    'prefix': 'isExecuting'
    'body': 'isExecuting()'
  'isFinished':
    'prefix': 'isFinished'
    'body': 'isFinished()'
  'NSThread.isMainThread':
    'prefix': 'isMainThread'
    'body': 'NSThread.isMainThread()'
  'isMainThread':
    'prefix': 'isMainThread'
    'body': 'isMainThread()'
  'NSThread.isMultiThreaded':
    'prefix': 'isMultiThreaded'
    'body': 'NSThread.isMultiThreaded()'
  'main':
    'prefix': 'main'
    'body': 'main()'
  'NSThread.mainThread':
    'prefix': 'mainThread'
    'body': 'NSThread.mainThread()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* n})'
  'setStackSize:':
    'prefix': 'setStackSize:'
    'body': 'setStackSize(${1:NSUInteger s})'
  'NSThread.setThreadPriority:':
    'prefix': 'setThreadPriority:'
    'body': 'NSThread.setThreadPriority(${1:double p})'
  'setThreadPriority:':
    'prefix': 'setThreadPriority:'
    'body': 'setThreadPriority(${1:double p})'
  'NSThread.sleepForTimeInterval:':
    'prefix': 'sleepForTimeInterval:'
    'body': 'NSThread.sleepForTimeInterval(${1:NSTimeInterval ti})'
  'NSThread.sleepUntilDate:':
    'prefix': 'sleepUntilDate:'
    'body': 'NSThread.sleepUntilDate(${1:NSDate* date})'
  'stackSize':
    'prefix': 'stackSize'
    'body': 'stackSize()'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'threadDictionary':
    'prefix': 'threadDictionary'
    'body': 'threadDictionary()'
  'NSThread.threadPriority':
    'prefix': 'threadPriority'
    'body': 'NSThread.threadPriority()'
  'threadPriority':
    'prefix': 'threadPriority'
    'body': 'threadPriority()'
  'abbreviation':
    'prefix': 'abbreviation'
    'body': 'abbreviation()'
  'NSTimeZone.abbreviationDictionary':
    'prefix': 'abbreviationDictionary'
    'body': 'NSTimeZone.abbreviationDictionary()'
  'abbreviationForDate:':
    'prefix': 'abbreviationForDate:'
    'body': 'abbreviationForDate(${1:NSDate* aDate})'
  'data':
    'prefix': 'data'
    'body': 'data()'
  'daylightSavingTimeOffset':
    'prefix': 'daylightSavingTimeOffset'
    'body': 'daylightSavingTimeOffset()'
  'daylightSavingTimeOffsetForDate:':
    'prefix': 'daylightSavingTimeOffsetForDate:'
    'body': 'daylightSavingTimeOffsetForDate(${1:NSDate* aDate})'
  'NSTimeZone.defaultTimeZone':
    'prefix': 'defaultTimeZone'
    'body': 'NSTimeZone.defaultTimeZone()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'initWithName:':
    'prefix': 'initWithName:'
    'body': 'initWithName(${1:NSString* tzName})'
  'initWithName:data:':
    'prefix': 'initWithName:data:'
    'body': 'initWithName(${1:NSString* tzName}, data:${2:NSData* aData})'
  'isDaylightSavingTime':
    'prefix': 'isDaylightSavingTime'
    'body': 'isDaylightSavingTime()'
  'isDaylightSavingTimeForDate:':
    'prefix': 'isDaylightSavingTimeForDate:'
    'body': 'isDaylightSavingTimeForDate(${1:NSDate* aDate})'
  'isEqualToTimeZone:':
    'prefix': 'isEqualToTimeZone:'
    'body': 'isEqualToTimeZone(${1:NSTimeZone* aTimeZone})'
  'NSTimeZone.knownTimeZoneNames':
    'prefix': 'knownTimeZoneNames'
    'body': 'NSTimeZone.knownTimeZoneNames()'
  'NSTimeZone.localTimeZone':
    'prefix': 'localTimeZone'
    'body': 'NSTimeZone.localTimeZone()'
  'localizedName:locale:':
    'prefix': 'localizedName:locale:'
    'body': 'localizedName(${1:NSTimeZoneNameStyle style}, locale:${2:NSLocale* locale})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'nextDaylightSavingTimeTransition':
    'prefix': 'nextDaylightSavingTimeTransition'
    'body': 'nextDaylightSavingTimeTransition()'
  'nextDaylightSavingTimeTransitionAfterDate:':
    'prefix': 'nextDaylightSavingTimeTransitionAfterDate:'
    'body': 'nextDaylightSavingTimeTransitionAfterDate(${1:NSDate* aDate})'
  'NSTimeZone.resetSystemTimeZone':
    'prefix': 'resetSystemTimeZone'
    'body': 'NSTimeZone.resetSystemTimeZone()'
  'secondsFromGMT':
    'prefix': 'secondsFromGMT'
    'body': 'secondsFromGMT()'
  'secondsFromGMTForDate:':
    'prefix': 'secondsFromGMTForDate:'
    'body': 'secondsFromGMTForDate(${1:NSDate* aDate})'
  'NSTimeZone.setAbbreviationDictionary:':
    'prefix': 'setAbbreviationDictionary:'
    'body': 'NSTimeZone.setAbbreviationDictionary(${1:NSDictionary* dict})'
  'NSTimeZone.setDefaultTimeZone:':
    'prefix': 'setDefaultTimeZone:'
    'body': 'NSTimeZone.setDefaultTimeZone(${1:NSTimeZone* aTimeZone})'
  'NSTimeZone.systemTimeZone':
    'prefix': 'systemTimeZone'
    'body': 'NSTimeZone.systemTimeZone()'
  'NSTimeZone.timeZoneDataVersion':
    'prefix': 'timeZoneDataVersion'
    'body': 'NSTimeZone.timeZoneDataVersion()'
  'NSTimeZone.timeZoneForSecondsFromGMT:':
    'prefix': 'timeZoneForSecondsFromGMT:'
    'body': 'NSTimeZone.timeZoneForSecondsFromGMT(${1:NSInteger seconds})'
  'NSTimeZone.timeZoneWithAbbreviation:':
    'prefix': 'timeZoneWithAbbreviation:'
    'body': 'NSTimeZone.timeZoneWithAbbreviation(${1:NSString* abbreviation})'
  'NSTimeZone.timeZoneWithName:':
    'prefix': 'timeZoneWithName:'
    'body': 'NSTimeZone.timeZoneWithName(${1:NSString* tzName})'
  'NSTimeZone.timeZoneWithName:data:':
    'prefix': 'timeZoneWithName:data:'
    'body': 'NSTimeZone.timeZoneWithName(${1:NSString* tzName}, data:${2:NSData* aData})'
  'fire':
    'prefix': 'fire'
    'body': 'fire()'
  'fireDate':
    'prefix': 'fireDate'
    'body': 'fireDate()'
  'initWithFireDate:interval:target:selector:userInfo:repeats:':
    'prefix': 'initWithFireDate:interval:target:selector:userInfo:repeats:'
    'body': 'initWithFireDate(${1:NSDate* date}, interval:${2:NSTimeInterval ti}, target:${3:id t}, selector:${4:SEL s}, userInfo:${5:id ui}, repeats:${6:BOOL rep})'
  'invalidate':
    'prefix': 'invalidate'
    'body': 'invalidate()'
  'isValid':
    'prefix': 'isValid'
    'body': 'isValid()'
  'NSTimer.scheduledTimerWithTimeInterval:invocation:repeats:':
    'prefix': 'scheduledTimerWithTimeInterval:invocation:repeats:'
    'body': 'NSTimer.scheduledTimerWithTimeInterval(${1:NSTimeInterval ti}, invocation:${2:NSInvocation* invocation}, repeats:${3:BOOL yesOrNo})'
  'NSTimer.scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:':
    'prefix': 'scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'
    'body': 'NSTimer.scheduledTimerWithTimeInterval(${1:NSTimeInterval ti}, target:${2:id aTarget}, selector:${3:SEL aSelector}, userInfo:${4:id userInfo}, repeats:${5:BOOL yesOrNo})'
  'setFireDate:':
    'prefix': 'setFireDate:'
    'body': 'setFireDate(${1:NSDate* date})'
  'setTolerance:':
    'prefix': 'setTolerance:'
    'body': 'setTolerance(${1:NSTimeInterval tolerance})'
  'timeInterval':
    'prefix': 'timeInterval'
    'body': 'timeInterval()'
  'NSTimer.timerWithTimeInterval:invocation:repeats:':
    'prefix': 'timerWithTimeInterval:invocation:repeats:'
    'body': 'NSTimer.timerWithTimeInterval(${1:NSTimeInterval ti}, invocation:${2:NSInvocation* invocation}, repeats:${3:BOOL yesOrNo})'
  'NSTimer.timerWithTimeInterval:target:selector:userInfo:repeats:':
    'prefix': 'timerWithTimeInterval:target:selector:userInfo:repeats:'
    'body': 'NSTimer.timerWithTimeInterval(${1:NSTimeInterval ti}, target:${2:id aTarget}, selector:${3:SEL aSelector}, userInfo:${4:id userInfo}, repeats:${5:BOOL yesOrNo})'
  'tolerance':
    'prefix': 'tolerance'
    'body': 'tolerance()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'URLByAppendingPathComponent:':
    'prefix': 'URLByAppendingPathComponent:'
    'body': 'URLByAppendingPathComponent(${1:NSString* pathComponent})'
  'URLByAppendingPathComponent:isDirectory:':
    'prefix': 'URLByAppendingPathComponent:isDirectory:'
    'body': 'URLByAppendingPathComponent(${1:NSString* pathComponent}, isDirectory:${2:BOOL isDirectory})'
  'URLByAppendingPathExtension:':
    'prefix': 'URLByAppendingPathExtension:'
    'body': 'URLByAppendingPathExtension(${1:NSString* pathExtension})'
  'URLByDeletingLastPathComponent':
    'prefix': 'URLByDeletingLastPathComponent'
    'body': 'URLByDeletingLastPathComponent()'
  'URLByDeletingPathExtension':
    'prefix': 'URLByDeletingPathExtension'
    'body': 'URLByDeletingPathExtension()'
  'NSURL.URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:':
    'prefix': 'URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'
    'body': 'NSURL.URLByResolvingBookmarkData(${1:NSData* bookmarkData}, options:${2:NSURLBookmarkResolutionOptions options}, relativeToURL:${3:NSURL* relativeURL}, bookmarkDataIsStale:${4:BOOL* isStale}, error:${5:NSError** error})'
  'URLByResolvingSymlinksInPath':
    'prefix': 'URLByResolvingSymlinksInPath'
    'body': 'URLByResolvingSymlinksInPath()'
  'URLByStandardizingPath':
    'prefix': 'URLByStandardizingPath'
    'body': 'URLByStandardizingPath()'
  'NSURL.URLWithString:':
    'prefix': 'URLWithString:'
    'body': 'NSURL.URLWithString(${1:NSString* URLString})'
  'NSURL.URLWithString:relativeToURL:':
    'prefix': 'URLWithString:relativeToURL:'
    'body': 'NSURL.URLWithString(${1:NSString* URLString}, relativeToURL:${2:NSURL* baseURL})'
  'absoluteString':
    'prefix': 'absoluteString'
    'body': 'absoluteString()'
  'absoluteURL':
    'prefix': 'absoluteURL'
    'body': 'absoluteURL()'
  'baseURL':
    'prefix': 'baseURL'
    'body': 'baseURL()'
  'NSURL.bookmarkDataWithContentsOfURL:error:':
    'prefix': 'bookmarkDataWithContentsOfURL:error:'
    'body': 'NSURL.bookmarkDataWithContentsOfURL(${1:NSURL* bookmarkFileURL}, error:${2:NSError** error})'
  'bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:':
    'prefix': 'bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:'
    'body': 'bookmarkDataWithOptions(${1:NSURLBookmarkCreationOptions options}, includingResourceValuesForKeys:${2:NSArray* keys}, relativeToURL:${3:NSURL* relativeURL}, error:${4:NSError** error})'
  'checkResourceIsReachableAndReturnError:':
    'prefix': 'checkResourceIsReachableAndReturnError:'
    'body': 'checkResourceIsReachableAndReturnError(${1:NSError** error})'
  'filePathURL':
    'prefix': 'filePathURL'
    'body': 'filePathURL()'
  'fileReferenceURL':
    'prefix': 'fileReferenceURL'
    'body': 'fileReferenceURL()'
  'fileSystemRepresentation':
    'prefix': 'fileSystemRepresentation'
    'body': 'fileSystemRepresentation()'
  'NSURL.fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:':
    'prefix': 'fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:'
    'body': 'NSURL.fileURLWithFileSystemRepresentation(${1:char* path}, isDirectory:${2:BOOL isDir}, relativeToURL:${3:NSURL* baseURL})'
  'NSURL.fileURLWithPath:':
    'prefix': 'fileURLWithPath:'
    'body': 'NSURL.fileURLWithPath(${1:NSString* path})'
  'NSURL.fileURLWithPath:isDirectory:':
    'prefix': 'fileURLWithPath:isDirectory:'
    'body': 'NSURL.fileURLWithPath(${1:NSString* path}, isDirectory:${2:BOOL isDir})'
  'NSURL.fileURLWithPathComponents:':
    'prefix': 'fileURLWithPathComponents:'
    'body': 'NSURL.fileURLWithPathComponents(${1:NSArray* components})'
  'fragment':
    'prefix': 'fragment'
    'body': 'fragment()'
  'getFileSystemRepresentation:maxLength:':
    'prefix': 'getFileSystemRepresentation:maxLength:'
    'body': 'getFileSystemRepresentation(${1:char* buffer}, maxLength:${2:NSUInteger maxBufferLength})'
  'getResourceValue:forKey:error:':
    'prefix': 'getResourceValue:forKey:error:'
    'body': 'getResourceValue(${1:id* value}, forKey:${2:NSString* key}, error:${3:NSError** error})'
  'host':
    'prefix': 'host'
    'body': 'host()'
  'initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:':
    'prefix': 'initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'
    'body': 'initByResolvingBookmarkData(${1:NSData* bookmarkData}, options:${2:NSURLBookmarkResolutionOptions options}, relativeToURL:${3:NSURL* relativeURL}, bookmarkDataIsStale:${4:BOOL* isStale}, error:${5:NSError** error})'
  'initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:':
    'prefix': 'initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:'
    'body': 'initFileURLWithFileSystemRepresentation(${1:char* path}, isDirectory:${2:BOOL isDir}, relativeToURL:${3:NSURL* baseURL})'
  'initFileURLWithPath:':
    'prefix': 'initFileURLWithPath:'
    'body': 'initFileURLWithPath(${1:NSString* path})'
  'initFileURLWithPath:isDirectory:':
    'prefix': 'initFileURLWithPath:isDirectory:'
    'body': 'initFileURLWithPath(${1:NSString* path}, isDirectory:${2:BOOL isDir})'
  'initWithScheme:host:path:':
    'prefix': 'initWithScheme:host:path:'
    'body': 'initWithScheme(${1:NSString* scheme}, host:${2:NSString* host}, path:${3:NSString* path})'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* URLString})'
  'initWithString:relativeToURL:':
    'prefix': 'initWithString:relativeToURL:'
    'body': 'initWithString(${1:NSString* URLString}, relativeToURL:${2:NSURL* baseURL})'
  'isFileReferenceURL':
    'prefix': 'isFileReferenceURL'
    'body': 'isFileReferenceURL()'
  'isFileURL':
    'prefix': 'isFileURL'
    'body': 'isFileURL()'
  'lastPathComponent':
    'prefix': 'lastPathComponent'
    'body': 'lastPathComponent()'
  'parameterString':
    'prefix': 'parameterString'
    'body': 'parameterString()'
  'password':
    'prefix': 'password'
    'body': 'password()'
  'path':
    'prefix': 'path'
    'body': 'path()'
  'pathComponents':
    'prefix': 'pathComponents'
    'body': 'pathComponents()'
  'pathExtension':
    'prefix': 'pathExtension'
    'body': 'pathExtension()'
  'port':
    'prefix': 'port'
    'body': 'port()'
  'query':
    'prefix': 'query'
    'body': 'query()'
  'relativePath':
    'prefix': 'relativePath'
    'body': 'relativePath()'
  'relativeString':
    'prefix': 'relativeString'
    'body': 'relativeString()'
  'removeAllCachedResourceValues':
    'prefix': 'removeAllCachedResourceValues'
    'body': 'removeAllCachedResourceValues()'
  'removeCachedResourceValueForKey:':
    'prefix': 'removeCachedResourceValueForKey:'
    'body': 'removeCachedResourceValueForKey(${1:NSString* key})'
  'resourceSpecifier':
    'prefix': 'resourceSpecifier'
    'body': 'resourceSpecifier()'
  'resourceValuesForKeys:error:':
    'prefix': 'resourceValuesForKeys:error:'
    'body': 'resourceValuesForKeys(${1:NSArray* keys}, error:${2:NSError** error})'
  'NSURL.resourceValuesForKeys:fromBookmarkData:':
    'prefix': 'resourceValuesForKeys:fromBookmarkData:'
    'body': 'NSURL.resourceValuesForKeys(${1:NSArray* keys}, fromBookmarkData:${2:NSData* bookmarkData})'
  'scheme':
    'prefix': 'scheme'
    'body': 'scheme()'
  'setResourceValue:forKey:error:':
    'prefix': 'setResourceValue:forKey:error:'
    'body': 'setResourceValue(${1:id value}, forKey:${2:NSString* key}, error:${3:NSError** error})'
  'setResourceValues:error:':
    'prefix': 'setResourceValues:error:'
    'body': 'setResourceValues(${1:NSDictionary* keyedValues}, error:${2:NSError** error})'
  'setTemporaryResourceValue:forKey:':
    'prefix': 'setTemporaryResourceValue:forKey:'
    'body': 'setTemporaryResourceValue(${1:id value}, forKey:${2:NSString* key})'
  'standardizedURL':
    'prefix': 'standardizedURL'
    'body': 'standardizedURL()'
  'user':
    'prefix': 'user'
    'body': 'user()'
  'NSURL.writeBookmarkData:toURL:options:error:':
    'prefix': 'writeBookmarkData:toURL:options:error:'
    'body': 'NSURL.writeBookmarkData(${1:NSData* bookmarkData}, toURL:${2:NSURL* bookmarkFileURL}, options:${3:NSURLBookmarkFileCreationOptions options}, error:${4:NSError** error})'
  'error':
    'prefix': 'error'
    'body': 'error()'
  'failureResponse':
    'prefix': 'failureResponse'
    'body': 'failureResponse()'
  'initWithAuthenticationChallenge:sender:':
    'prefix': 'initWithAuthenticationChallenge:sender:'
    'body': 'initWithAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge}, sender:${2:id sender})'
  'initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:':
    'prefix': 'initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'
    'body': 'initWithProtectionSpace(${1:NSURLProtectionSpace* space}, proposedCredential:${2:NSURLCredential* credential}, previousFailureCount:${3:NSInteger previousFailureCount}, failureResponse:${4:NSURLResponse* response}, error:${5:NSError* error}, sender:${6:id sender})'
  'previousFailureCount':
    'prefix': 'previousFailureCount'
    'body': 'previousFailureCount()'
  'proposedCredential':
    'prefix': 'proposedCredential'
    'body': 'proposedCredential()'
  'protectionSpace':
    'prefix': 'protectionSpace'
    'body': 'protectionSpace()'
  'sender':
    'prefix': 'sender'
    'body': 'sender()'
  'cachedResponseForRequest:':
    'prefix': 'cachedResponseForRequest:'
    'body': 'cachedResponseForRequest(${1:NSURLRequest* request})'
  'currentDiskUsage':
    'prefix': 'currentDiskUsage'
    'body': 'currentDiskUsage()'
  'currentMemoryUsage':
    'prefix': 'currentMemoryUsage'
    'body': 'currentMemoryUsage()'
  'diskCapacity':
    'prefix': 'diskCapacity'
    'body': 'diskCapacity()'
  'initWithMemoryCapacity:diskCapacity:diskPath:':
    'prefix': 'initWithMemoryCapacity:diskCapacity:diskPath:'
    'body': 'initWithMemoryCapacity(${1:NSUInteger memoryCapacity}, diskCapacity:${2:NSUInteger diskCapacity}, diskPath:${3:NSString* path})'
  'memoryCapacity':
    'prefix': 'memoryCapacity'
    'body': 'memoryCapacity()'
  'removeAllCachedResponses':
    'prefix': 'removeAllCachedResponses'
    'body': 'removeAllCachedResponses()'
  'removeCachedResponseForRequest:':
    'prefix': 'removeCachedResponseForRequest:'
    'body': 'removeCachedResponseForRequest(${1:NSURLRequest* request})'
  'setDiskCapacity:':
    'prefix': 'setDiskCapacity:'
    'body': 'setDiskCapacity(${1:NSUInteger diskCapacity})'
  'setMemoryCapacity:':
    'prefix': 'setMemoryCapacity:'
    'body': 'setMemoryCapacity(${1:NSUInteger memoryCapacity})'
  'NSURLCache.setSharedURLCache:':
    'prefix': 'setSharedURLCache:'
    'body': 'NSURLCache.setSharedURLCache(${1:NSURLCache* cache})'
  'NSURLCache.sharedURLCache':
    'prefix': 'sharedURLCache'
    'body': 'NSURLCache.sharedURLCache()'
  'storeCachedResponse:forRequest:':
    'prefix': 'storeCachedResponse:forRequest:'
    'body': 'storeCachedResponse(${1:NSCachedURLResponse* cachedResponse}, forRequest:${2:NSURLRequest* request})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'URLRelativeToURL:':
    'prefix': 'URLRelativeToURL:'
    'body': 'URLRelativeToURL(${1:NSURL* baseURL})'
  'NSURLComponents.componentsWithString:':
    'prefix': 'componentsWithString:'
    'body': 'NSURLComponents.componentsWithString(${1:NSString* URLString})'
  'NSURLComponents.componentsWithURL:resolvingAgainstBaseURL:':
    'prefix': 'componentsWithURL:resolvingAgainstBaseURL:'
    'body': 'NSURLComponents.componentsWithURL(${1:NSURL* url}, resolvingAgainstBaseURL:${2:BOOL resolve})'
  'fragment':
    'prefix': 'fragment'
    'body': 'fragment()'
  'host':
    'prefix': 'host'
    'body': 'host()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithString:':
    'prefix': 'initWithString:'
    'body': 'initWithString(${1:NSString* URLString})'
  'initWithURL:resolvingAgainstBaseURL:':
    'prefix': 'initWithURL:resolvingAgainstBaseURL:'
    'body': 'initWithURL(${1:NSURL* url}, resolvingAgainstBaseURL:${2:BOOL resolve})'
  'password':
    'prefix': 'password'
    'body': 'password()'
  'path':
    'prefix': 'path'
    'body': 'path()'
  'percentEncodedFragment':
    'prefix': 'percentEncodedFragment'
    'body': 'percentEncodedFragment()'
  'percentEncodedHost':
    'prefix': 'percentEncodedHost'
    'body': 'percentEncodedHost()'
  'percentEncodedPassword':
    'prefix': 'percentEncodedPassword'
    'body': 'percentEncodedPassword()'
  'percentEncodedPath':
    'prefix': 'percentEncodedPath'
    'body': 'percentEncodedPath()'
  'percentEncodedQuery':
    'prefix': 'percentEncodedQuery'
    'body': 'percentEncodedQuery()'
  'percentEncodedUser':
    'prefix': 'percentEncodedUser'
    'body': 'percentEncodedUser()'
  'port':
    'prefix': 'port'
    'body': 'port()'
  'query':
    'prefix': 'query'
    'body': 'query()'
  'scheme':
    'prefix': 'scheme'
    'body': 'scheme()'
  'setFragment:':
    'prefix': 'setFragment:'
    'body': 'setFragment(${1:NSString* fragment})'
  'setHost:':
    'prefix': 'setHost:'
    'body': 'setHost(${1:NSString* host})'
  'setPassword:':
    'prefix': 'setPassword:'
    'body': 'setPassword(${1:NSString* password})'
  'setPath:':
    'prefix': 'setPath:'
    'body': 'setPath(${1:NSString* path})'
  'setPercentEncodedFragment:':
    'prefix': 'setPercentEncodedFragment:'
    'body': 'setPercentEncodedFragment(${1:NSString* percentEncodedFragment})'
  'setPercentEncodedHost:':
    'prefix': 'setPercentEncodedHost:'
    'body': 'setPercentEncodedHost(${1:NSString* percentEncodedHost})'
  'setPercentEncodedPassword:':
    'prefix': 'setPercentEncodedPassword:'
    'body': 'setPercentEncodedPassword(${1:NSString* percentEncodedPassword})'
  'setPercentEncodedPath:':
    'prefix': 'setPercentEncodedPath:'
    'body': 'setPercentEncodedPath(${1:NSString* percentEncodedPath})'
  'setPercentEncodedQuery:':
    'prefix': 'setPercentEncodedQuery:'
    'body': 'setPercentEncodedQuery(${1:NSString* percentEncodedQuery})'
  'setPercentEncodedUser:':
    'prefix': 'setPercentEncodedUser:'
    'body': 'setPercentEncodedUser(${1:NSString* percentEncodedUser})'
  'setPort:':
    'prefix': 'setPort:'
    'body': 'setPort(${1:NSNumber* port})'
  'setQuery:':
    'prefix': 'setQuery:'
    'body': 'setQuery(${1:NSString* query})'
  'setScheme:':
    'prefix': 'setScheme:'
    'body': 'setScheme(${1:NSString* scheme})'
  'setUser:':
    'prefix': 'setUser:'
    'body': 'setUser(${1:NSString* user})'
  'user':
    'prefix': 'user'
    'body': 'user()'
  'NSURLConnection.canHandleRequest:':
    'prefix': 'canHandleRequest:'
    'body': 'NSURLConnection.canHandleRequest(${1:NSURLRequest* request})'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'NSURLConnection.connectionWithRequest:delegate:':
    'prefix': 'connectionWithRequest:delegate:'
    'body': 'NSURLConnection.connectionWithRequest(${1:NSURLRequest* request}, delegate:${2:id delegate})'
  'currentRequest':
    'prefix': 'currentRequest'
    'body': 'currentRequest()'
  'initWithRequest:delegate:':
    'prefix': 'initWithRequest:delegate:'
    'body': 'initWithRequest(${1:NSURLRequest* request}, delegate:${2:id delegate})'
  'initWithRequest:delegate:startImmediately:':
    'prefix': 'initWithRequest:delegate:startImmediately:'
    'body': 'initWithRequest(${1:NSURLRequest* request}, delegate:${2:id delegate}, startImmediately:${3:BOOL startImmediately})'
  'originalRequest':
    'prefix': 'originalRequest'
    'body': 'originalRequest()'
  'scheduleInRunLoop:forMode:':
    'prefix': 'scheduleInRunLoop:forMode:'
    'body': 'scheduleInRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'NSURLConnection.sendAsynchronousRequest:queue:completionHandler:':
    'prefix': 'sendAsynchronousRequest:queue:completionHandler:'
    'body': 'NSURLConnection.sendAsynchronousRequest(${1:NSURLRequest* request}, queue:${2:NSOperationQueue* queue}, completionHandler:${3:void (^)(NSURLResponse *, NSData *, NSError *) handler})'
  'NSURLConnection.sendSynchronousRequest:returningResponse:error:':
    'prefix': 'sendSynchronousRequest:returningResponse:error:'
    'body': 'NSURLConnection.sendSynchronousRequest(${1:NSURLRequest* request}, returningResponse:${2:NSURLResponse** response}, error:${3:NSError** error})'
  'setDelegateQueue:':
    'prefix': 'setDelegateQueue:'
    'body': 'setDelegateQueue(${1:NSOperationQueue* queue})'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'unscheduleFromRunLoop:forMode:':
    'prefix': 'unscheduleFromRunLoop:forMode:'
    'body': 'unscheduleFromRunLoop(${1:NSRunLoop* aRunLoop}, forMode:${2:NSString* mode})'
  'certificates':
    'prefix': 'certificates'
    'body': 'certificates()'
  'NSURLCredential.credentialForTrust:':
    'prefix': 'credentialForTrust:'
    'body': 'NSURLCredential.credentialForTrust(${1:SecTrustRef trust})'
  'NSURLCredential.credentialWithIdentity:certificates:persistence:':
    'prefix': 'credentialWithIdentity:certificates:persistence:'
    'body': 'NSURLCredential.credentialWithIdentity(${1:SecIdentityRef identity}, certificates:${2:NSArray* certArray}, persistence:${3:NSURLCredentialPersistence persistence})'
  'NSURLCredential.credentialWithUser:password:persistence:':
    'prefix': 'credentialWithUser:password:persistence:'
    'body': 'NSURLCredential.credentialWithUser(${1:NSString* user}, password:${2:NSString* password}, persistence:${3:NSURLCredentialPersistence persistence})'
  'hasPassword':
    'prefix': 'hasPassword'
    'body': 'hasPassword()'
  'identity':
    'prefix': 'identity'
    'body': 'identity()'
  'initWithIdentity:certificates:persistence:':
    'prefix': 'initWithIdentity:certificates:persistence:'
    'body': 'initWithIdentity(${1:SecIdentityRef identity}, certificates:${2:NSArray* certArray}, persistence:${3:NSURLCredentialPersistence persistence})'
  'initWithTrust:':
    'prefix': 'initWithTrust:'
    'body': 'initWithTrust(${1:SecTrustRef trust})'
  'initWithUser:password:persistence:':
    'prefix': 'initWithUser:password:persistence:'
    'body': 'initWithUser(${1:NSString* user}, password:${2:NSString* password}, persistence:${3:NSURLCredentialPersistence persistence})'
  'password':
    'prefix': 'password'
    'body': 'password()'
  'persistence':
    'prefix': 'persistence'
    'body': 'persistence()'
  'user':
    'prefix': 'user'
    'body': 'user()'
  'allCredentials':
    'prefix': 'allCredentials'
    'body': 'allCredentials()'
  'credentialsForProtectionSpace:':
    'prefix': 'credentialsForProtectionSpace:'
    'body': 'credentialsForProtectionSpace(${1:NSURLProtectionSpace* space})'
  'defaultCredentialForProtectionSpace:':
    'prefix': 'defaultCredentialForProtectionSpace:'
    'body': 'defaultCredentialForProtectionSpace(${1:NSURLProtectionSpace* space})'
  'removeCredential:forProtectionSpace:':
    'prefix': 'removeCredential:forProtectionSpace:'
    'body': 'removeCredential(${1:NSURLCredential* credential}, forProtectionSpace:${2:NSURLProtectionSpace* space})'
  'removeCredential:forProtectionSpace:options:':
    'prefix': 'removeCredential:forProtectionSpace:options:'
    'body': 'removeCredential(${1:NSURLCredential* credential}, forProtectionSpace:${2:NSURLProtectionSpace* space}, options:${3:NSDictionary* options})'
  'setCredential:forProtectionSpace:':
    'prefix': 'setCredential:forProtectionSpace:'
    'body': 'setCredential(${1:NSURLCredential* credential}, forProtectionSpace:${2:NSURLProtectionSpace* space})'
  'setDefaultCredential:forProtectionSpace:':
    'prefix': 'setDefaultCredential:forProtectionSpace:'
    'body': 'setDefaultCredential(${1:NSURLCredential* credential}, forProtectionSpace:${2:NSURLProtectionSpace* space})'
  'NSURLCredentialStorage.sharedCredentialStorage':
    'prefix': 'sharedCredentialStorage'
    'body': 'NSURLCredentialStorage.sharedCredentialStorage()'
  'authenticationMethod':
    'prefix': 'authenticationMethod'
    'body': 'authenticationMethod()'
  'distinguishedNames':
    'prefix': 'distinguishedNames'
    'body': 'distinguishedNames()'
  'host':
    'prefix': 'host'
    'body': 'host()'
  'initWithHost:port:protocol:realm:authenticationMethod:':
    'prefix': 'initWithHost:port:protocol:realm:authenticationMethod:'
    'body': 'initWithHost(${1:NSString* host}, port:${2:NSInteger port}, protocol:${3:NSString* protocol}, realm:${4:NSString* realm}, authenticationMethod:${5:NSString* authenticationMethod})'
  'initWithProxyHost:port:type:realm:authenticationMethod:':
    'prefix': 'initWithProxyHost:port:type:realm:authenticationMethod:'
    'body': 'initWithProxyHost(${1:NSString* host}, port:${2:NSInteger port}, type:${3:NSString* type}, realm:${4:NSString* realm}, authenticationMethod:${5:NSString* authenticationMethod})'
  'isProxy':
    'prefix': 'isProxy'
    'body': 'isProxy()'
  'port':
    'prefix': 'port'
    'body': 'port()'
  'protocol':
    'prefix': 'protocol'
    'body': 'protocol()'
  'proxyType':
    'prefix': 'proxyType'
    'body': 'proxyType()'
  'realm':
    'prefix': 'realm'
    'body': 'realm()'
  'receivesCredentialSecurely':
    'prefix': 'receivesCredentialSecurely'
    'body': 'receivesCredentialSecurely()'
  'serverTrust':
    'prefix': 'serverTrust'
    'body': 'serverTrust()'
  'cachedResponse':
    'prefix': 'cachedResponse'
    'body': 'cachedResponse()'
  'NSURLProtocol.canInitWithRequest:':
    'prefix': 'canInitWithRequest:'
    'body': 'NSURLProtocol.canInitWithRequest(${1:NSURLRequest* request})'
  'NSURLProtocol.canonicalRequestForRequest:':
    'prefix': 'canonicalRequestForRequest:'
    'body': 'NSURLProtocol.canonicalRequestForRequest(${1:NSURLRequest* request})'
  'client':
    'prefix': 'client'
    'body': 'client()'
  'initWithRequest:cachedResponse:client:':
    'prefix': 'initWithRequest:cachedResponse:client:'
    'body': 'initWithRequest(${1:NSURLRequest* request}, cachedResponse:${2:NSCachedURLResponse* cachedResponse}, client:${3:id client})'
  'NSURLProtocol.propertyForKey:inRequest:':
    'prefix': 'propertyForKey:inRequest:'
    'body': 'NSURLProtocol.propertyForKey(${1:NSString* key}, inRequest:${2:NSURLRequest* request})'
  'NSURLProtocol.registerClass:':
    'prefix': 'registerClass:'
    'body': 'NSURLProtocol.registerClass(${1:Class protocolClass})'
  'NSURLProtocol.removePropertyForKey:inRequest:':
    'prefix': 'removePropertyForKey:inRequest:'
    'body': 'NSURLProtocol.removePropertyForKey(${1:NSString* key}, inRequest:${2:NSMutableURLRequest* request})'
  'request':
    'prefix': 'request'
    'body': 'request()'
  'NSURLProtocol.requestIsCacheEquivalent:toRequest:':
    'prefix': 'requestIsCacheEquivalent:toRequest:'
    'body': 'NSURLProtocol.requestIsCacheEquivalent(${1:NSURLRequest* a}, toRequest:${2:NSURLRequest* b})'
  'NSURLProtocol.setProperty:forKey:inRequest:':
    'prefix': 'setProperty:forKey:inRequest:'
    'body': 'NSURLProtocol.setProperty(${1:id value}, forKey:${2:NSString* key}, inRequest:${3:NSMutableURLRequest* request})'
  'startLoading':
    'prefix': 'startLoading'
    'body': 'startLoading()'
  'stopLoading':
    'prefix': 'stopLoading'
    'body': 'stopLoading()'
  'NSURLProtocol.unregisterClass:':
    'prefix': 'unregisterClass:'
    'body': 'NSURLProtocol.unregisterClass(${1:Class protocolClass})'
  'HTTPBody':
    'prefix': 'HTTPBody'
    'body': 'HTTPBody()'
  'HTTPBodyStream':
    'prefix': 'HTTPBodyStream'
    'body': 'HTTPBodyStream()'
  'HTTPMethod':
    'prefix': 'HTTPMethod'
    'body': 'HTTPMethod()'
  'HTTPShouldHandleCookies':
    'prefix': 'HTTPShouldHandleCookies'
    'body': 'HTTPShouldHandleCookies()'
  'HTTPShouldUsePipelining':
    'prefix': 'HTTPShouldUsePipelining'
    'body': 'HTTPShouldUsePipelining()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'allHTTPHeaderFields':
    'prefix': 'allHTTPHeaderFields'
    'body': 'allHTTPHeaderFields()'
  'allowsCellularAccess':
    'prefix': 'allowsCellularAccess'
    'body': 'allowsCellularAccess()'
  'cachePolicy':
    'prefix': 'cachePolicy'
    'body': 'cachePolicy()'
  'initWithURL:':
    'prefix': 'initWithURL:'
    'body': 'initWithURL(${1:NSURL* URL})'
  'initWithURL:cachePolicy:timeoutInterval:':
    'prefix': 'initWithURL:cachePolicy:timeoutInterval:'
    'body': 'initWithURL(${1:NSURL* URL}, cachePolicy:${2:NSURLRequestCachePolicy cachePolicy}, timeoutInterval:${3:NSTimeInterval timeoutInterval})'
  'mainDocumentURL':
    'prefix': 'mainDocumentURL'
    'body': 'mainDocumentURL()'
  'networkServiceType':
    'prefix': 'networkServiceType'
    'body': 'networkServiceType()'
  'NSURLRequest.requestWithURL:':
    'prefix': 'requestWithURL:'
    'body': 'NSURLRequest.requestWithURL(${1:NSURL* URL})'
  'NSURLRequest.requestWithURL:cachePolicy:timeoutInterval:':
    'prefix': 'requestWithURL:cachePolicy:timeoutInterval:'
    'body': 'NSURLRequest.requestWithURL(${1:NSURL* URL}, cachePolicy:${2:NSURLRequestCachePolicy cachePolicy}, timeoutInterval:${3:NSTimeInterval timeoutInterval})'
  'NSURLRequest.supportsSecureCoding':
    'prefix': 'supportsSecureCoding'
    'body': 'NSURLRequest.supportsSecureCoding()'
  'timeoutInterval':
    'prefix': 'timeoutInterval'
    'body': 'timeoutInterval()'
  'valueForHTTPHeaderField:':
    'prefix': 'valueForHTTPHeaderField:'
    'body': 'valueForHTTPHeaderField(${1:NSString* field})'
  'MIMEType':
    'prefix': 'MIMEType'
    'body': 'MIMEType()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'expectedContentLength':
    'prefix': 'expectedContentLength'
    'body': 'expectedContentLength()'
  'initWithURL:MIMEType:expectedContentLength:textEncodingName:':
    'prefix': 'initWithURL:MIMEType:expectedContentLength:textEncodingName:'
    'body': 'initWithURL(${1:NSURL* URL}, MIMEType:${2:NSString* MIMEType}, expectedContentLength:${3:NSInteger length}, textEncodingName:${4:NSString* name})'
  'suggestedFilename':
    'prefix': 'suggestedFilename'
    'body': 'suggestedFilename()'
  'textEncodingName':
    'prefix': 'textEncodingName'
    'body': 'textEncodingName()'
  'configuration':
    'prefix': 'configuration'
    'body': 'configuration()'
  'dataTaskWithHTTPGetRequest:':
    'prefix': 'dataTaskWithHTTPGetRequest:'
    'body': 'dataTaskWithHTTPGetRequest(${1:NSURL* url})'
  'dataTaskWithHTTPGetRequest:completionHandler:':
    'prefix': 'dataTaskWithHTTPGetRequest:completionHandler:'
    'body': 'dataTaskWithHTTPGetRequest(${1:NSURL* url}, completionHandler:${2:void (^)(NSData *, NSURLResponse *, NSError *) completionHandler})'
  'dataTaskWithRequest:':
    'prefix': 'dataTaskWithRequest:'
    'body': 'dataTaskWithRequest(${1:NSURLRequest* request})'
  'dataTaskWithRequest:completionHandler:':
    'prefix': 'dataTaskWithRequest:completionHandler:'
    'body': 'dataTaskWithRequest(${1:NSURLRequest* request}, completionHandler:${2:void (^)(NSData *, NSURLResponse *, NSError *) completionHandler})'
  'dataTaskWithURL:':
    'prefix': 'dataTaskWithURL:'
    'body': 'dataTaskWithURL(${1:NSURL* url})'
  'dataTaskWithURL:completionHandler:':
    'prefix': 'dataTaskWithURL:completionHandler:'
    'body': 'dataTaskWithURL(${1:NSURL* url}, completionHandler:${2:void (^)(NSData *, NSURLResponse *, NSError *) completionHandler})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'delegateQueue':
    'prefix': 'delegateQueue'
    'body': 'delegateQueue()'
  'downloadTaskWithRequest:':
    'prefix': 'downloadTaskWithRequest:'
    'body': 'downloadTaskWithRequest(${1:NSURLRequest* request})'
  'downloadTaskWithRequest:completionHandler:':
    'prefix': 'downloadTaskWithRequest:completionHandler:'
    'body': 'downloadTaskWithRequest(${1:NSURLRequest* request}, completionHandler:${2:void (^)(NSURL *, NSURLResponse *, NSError *) completionHandler})'
  'downloadTaskWithResumeData:':
    'prefix': 'downloadTaskWithResumeData:'
    'body': 'downloadTaskWithResumeData(${1:NSData* resumeData})'
  'downloadTaskWithResumeData:completionHandler:':
    'prefix': 'downloadTaskWithResumeData:completionHandler:'
    'body': 'downloadTaskWithResumeData(${1:NSData* resumeData}, completionHandler:${2:void (^)(NSURL *, NSURLResponse *, NSError *) completionHandler})'
  'downloadTaskWithURL:':
    'prefix': 'downloadTaskWithURL:'
    'body': 'downloadTaskWithURL(${1:NSURL* url})'
  'downloadTaskWithURL:completionHandler:':
    'prefix': 'downloadTaskWithURL:completionHandler:'
    'body': 'downloadTaskWithURL(${1:NSURL* url}, completionHandler:${2:void (^)(NSURL *, NSURLResponse *, NSError *) completionHandler})'
  'finishTasksAndInvalidate':
    'prefix': 'finishTasksAndInvalidate'
    'body': 'finishTasksAndInvalidate()'
  'flushWithCompletionHandler:':
    'prefix': 'flushWithCompletionHandler:'
    'body': 'flushWithCompletionHandler(${1:void (^)(void) completionHandler})'
  'getTasksWithCompletionHandler:':
    'prefix': 'getTasksWithCompletionHandler:'
    'body': 'getTasksWithCompletionHandler(${1:void (^)(NSArray *, NSArray *, NSArray *) completionHandler})'
  'invalidateAndCancel':
    'prefix': 'invalidateAndCancel'
    'body': 'invalidateAndCancel()'
  'resetWithCompletionHandler:':
    'prefix': 'resetWithCompletionHandler:'
    'body': 'resetWithCompletionHandler(${1:void (^)(void) completionHandler})'
  'sessionDescription':
    'prefix': 'sessionDescription'
    'body': 'sessionDescription()'
  'NSURLSession.sessionWithConfiguration:':
    'prefix': 'sessionWithConfiguration:'
    'body': 'NSURLSession.sessionWithConfiguration(${1:NSURLSessionConfiguration* configuration})'
  'NSURLSession.sessionWithConfiguration:delegate:delegateQueue:':
    'prefix': 'sessionWithConfiguration:delegate:delegateQueue:'
    'body': 'NSURLSession.sessionWithConfiguration(${1:NSURLSessionConfiguration* configuration}, delegate:${2:id delegate}, delegateQueue:${3:NSOperationQueue* queue})'
  'setSessionDescription:':
    'prefix': 'setSessionDescription:'
    'body': 'setSessionDescription(${1:NSString* sessionDescription})'
  'NSURLSession.sharedSession':
    'prefix': 'sharedSession'
    'body': 'NSURLSession.sharedSession()'
  'uploadTaskWithRequest:fromData:':
    'prefix': 'uploadTaskWithRequest:fromData:'
    'body': 'uploadTaskWithRequest(${1:NSURLRequest* request}, fromData:${2:NSData* bodyData})'
  'uploadTaskWithRequest:fromData:completionHandler:':
    'prefix': 'uploadTaskWithRequest:fromData:completionHandler:'
    'body': 'uploadTaskWithRequest(${1:NSURLRequest* request}, fromData:${2:NSData* bodyData}, completionHandler:${3:void (^)(NSData *, NSURLResponse *, NSError *) completionHandler})'
  'uploadTaskWithRequest:fromFile:':
    'prefix': 'uploadTaskWithRequest:fromFile:'
    'body': 'uploadTaskWithRequest(${1:NSURLRequest* request}, fromFile:${2:NSURL* fileURL})'
  'uploadTaskWithRequest:fromFile:completionHandler:':
    'prefix': 'uploadTaskWithRequest:fromFile:completionHandler:'
    'body': 'uploadTaskWithRequest(${1:NSURLRequest* request}, fromFile:${2:NSURL* fileURL}, completionHandler:${3:void (^)(NSData *, NSURLResponse *, NSError *) completionHandler})'
  'uploadTaskWithStreamedRequest:':
    'prefix': 'uploadTaskWithStreamedRequest:'
    'body': 'uploadTaskWithStreamedRequest(${1:NSURLRequest* request})'
  'HTTPAdditionalHeaders':
    'prefix': 'HTTPAdditionalHeaders'
    'body': 'HTTPAdditionalHeaders()'
  'HTTPCookieAcceptPolicy':
    'prefix': 'HTTPCookieAcceptPolicy'
    'body': 'HTTPCookieAcceptPolicy()'
  'HTTPCookieStorage':
    'prefix': 'HTTPCookieStorage'
    'body': 'HTTPCookieStorage()'
  'HTTPMaximumConnectionsPerHost':
    'prefix': 'HTTPMaximumConnectionsPerHost'
    'body': 'HTTPMaximumConnectionsPerHost()'
  'HTTPShouldSetCookies':
    'prefix': 'HTTPShouldSetCookies'
    'body': 'HTTPShouldSetCookies()'
  'HTTPShouldUsePipelining':
    'prefix': 'HTTPShouldUsePipelining'
    'body': 'HTTPShouldUsePipelining()'
  'TLSMaximumSupportedProtocol':
    'prefix': 'TLSMaximumSupportedProtocol'
    'body': 'TLSMaximumSupportedProtocol()'
  'TLSMinimumSupportedProtocol':
    'prefix': 'TLSMinimumSupportedProtocol'
    'body': 'TLSMinimumSupportedProtocol()'
  'URLCache':
    'prefix': 'URLCache'
    'body': 'URLCache()'
  'URLCredentialStorage':
    'prefix': 'URLCredentialStorage'
    'body': 'URLCredentialStorage()'
  'allowsCellularAccess':
    'prefix': 'allowsCellularAccess'
    'body': 'allowsCellularAccess()'
  'NSURLSessionConfiguration.backgroundSessionConfiguration:':
    'prefix': 'backgroundSessionConfiguration:'
    'body': 'NSURLSessionConfiguration.backgroundSessionConfiguration(${1:NSString* identifier})'
  'connectionProxyDictionary':
    'prefix': 'connectionProxyDictionary'
    'body': 'connectionProxyDictionary()'
  'NSURLSessionConfiguration.defaultSessionConfiguration':
    'prefix': 'defaultSessionConfiguration'
    'body': 'NSURLSessionConfiguration.defaultSessionConfiguration()'
  'NSURLSessionConfiguration.ephemeralSessionConfiguration':
    'prefix': 'ephemeralSessionConfiguration'
    'body': 'NSURLSessionConfiguration.ephemeralSessionConfiguration()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'isDiscretionary':
    'prefix': 'isDiscretionary'
    'body': 'isDiscretionary()'
  'networkServiceType':
    'prefix': 'networkServiceType'
    'body': 'networkServiceType()'
  'protocolClasses':
    'prefix': 'protocolClasses'
    'body': 'protocolClasses()'
  'requestCachePolicy':
    'prefix': 'requestCachePolicy'
    'body': 'requestCachePolicy()'
  'sessionSendsLaunchEvents':
    'prefix': 'sessionSendsLaunchEvents'
    'body': 'sessionSendsLaunchEvents()'
  'setAllowsCellularAccess:':
    'prefix': 'setAllowsCellularAccess:'
    'body': 'setAllowsCellularAccess(${1:BOOL allowsCellularAccess})'
  'setConnectionProxyDictionary:':
    'prefix': 'setConnectionProxyDictionary:'
    'body': 'setConnectionProxyDictionary(${1:NSDictionary* connectionProxyDictionary})'
  'setDiscretionary:':
    'prefix': 'setDiscretionary:'
    'body': 'setDiscretionary(${1:BOOL discretionary})'
  'setHTTPAdditionalHeaders:':
    'prefix': 'setHTTPAdditionalHeaders:'
    'body': 'setHTTPAdditionalHeaders(${1:NSDictionary* HTTPAdditionalHeaders})'
  'setHTTPCookieAcceptPolicy:':
    'prefix': 'setHTTPCookieAcceptPolicy:'
    'body': 'setHTTPCookieAcceptPolicy(${1:NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy})'
  'setHTTPCookieStorage:':
    'prefix': 'setHTTPCookieStorage:'
    'body': 'setHTTPCookieStorage(${1:NSHTTPCookieStorage* HTTPCookieStorage})'
  'setHTTPMaximumConnectionsPerHost:':
    'prefix': 'setHTTPMaximumConnectionsPerHost:'
    'body': 'setHTTPMaximumConnectionsPerHost(${1:NSInteger HTTPMaximumConnectionsPerHost})'
  'setHTTPShouldSetCookies:':
    'prefix': 'setHTTPShouldSetCookies:'
    'body': 'setHTTPShouldSetCookies(${1:BOOL HTTPShouldSetCookies})'
  'setHTTPShouldUsePipelining:':
    'prefix': 'setHTTPShouldUsePipelining:'
    'body': 'setHTTPShouldUsePipelining(${1:BOOL HTTPShouldUsePipelining})'
  'setNetworkServiceType:':
    'prefix': 'setNetworkServiceType:'
    'body': 'setNetworkServiceType(${1:NSURLRequestNetworkServiceType networkServiceType})'
  'setProtocolClasses:':
    'prefix': 'setProtocolClasses:'
    'body': 'setProtocolClasses(${1:NSArray* protocolClasses})'
  'setRequestCachePolicy:':
    'prefix': 'setRequestCachePolicy:'
    'body': 'setRequestCachePolicy(${1:NSURLRequestCachePolicy requestCachePolicy})'
  'setSessionSendsLaunchEvents:':
    'prefix': 'setSessionSendsLaunchEvents:'
    'body': 'setSessionSendsLaunchEvents(${1:BOOL sessionSendsLaunchEvents})'
  'setTLSMaximumSupportedProtocol:':
    'prefix': 'setTLSMaximumSupportedProtocol:'
    'body': 'setTLSMaximumSupportedProtocol(${1:SSLProtocol TLSMaximumSupportedProtocol})'
  'setTLSMinimumSupportedProtocol:':
    'prefix': 'setTLSMinimumSupportedProtocol:'
    'body': 'setTLSMinimumSupportedProtocol(${1:SSLProtocol TLSMinimumSupportedProtocol})'
  'setTimeoutIntervalForRequest:':
    'prefix': 'setTimeoutIntervalForRequest:'
    'body': 'setTimeoutIntervalForRequest(${1:NSTimeInterval timeoutIntervalForRequest})'
  'setTimeoutIntervalForResource:':
    'prefix': 'setTimeoutIntervalForResource:'
    'body': 'setTimeoutIntervalForResource(${1:NSTimeInterval timeoutIntervalForResource})'
  'setURLCache:':
    'prefix': 'setURLCache:'
    'body': 'setURLCache(${1:NSURLCache* URLCache})'
  'setURLCredentialStorage:':
    'prefix': 'setURLCredentialStorage:'
    'body': 'setURLCredentialStorage(${1:NSURLCredentialStorage* URLCredentialStorage})'
  'timeoutIntervalForRequest':
    'prefix': 'timeoutIntervalForRequest'
    'body': 'timeoutIntervalForRequest()'
  'timeoutIntervalForResource':
    'prefix': 'timeoutIntervalForResource'
    'body': 'timeoutIntervalForResource()'
  'cancelByProducingResumeData:':
    'prefix': 'cancelByProducingResumeData:'
    'body': 'cancelByProducingResumeData(${1:void (^)(NSData *) completionHandler})'
  'cancel':
    'prefix': 'cancel'
    'body': 'cancel()'
  'countOfBytesExpectedToReceive':
    'prefix': 'countOfBytesExpectedToReceive'
    'body': 'countOfBytesExpectedToReceive()'
  'countOfBytesExpectedToSend':
    'prefix': 'countOfBytesExpectedToSend'
    'body': 'countOfBytesExpectedToSend()'
  'countOfBytesReceived':
    'prefix': 'countOfBytesReceived'
    'body': 'countOfBytesReceived()'
  'countOfBytesSent':
    'prefix': 'countOfBytesSent'
    'body': 'countOfBytesSent()'
  'currentRequest':
    'prefix': 'currentRequest'
    'body': 'currentRequest()'
  'error':
    'prefix': 'error'
    'body': 'error()'
  'originalRequest':
    'prefix': 'originalRequest'
    'body': 'originalRequest()'
  'response':
    'prefix': 'response'
    'body': 'response()'
  'resume':
    'prefix': 'resume'
    'body': 'resume()'
  'setTaskDescription:':
    'prefix': 'setTaskDescription:'
    'body': 'setTaskDescription(${1:NSString* taskDescription})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'suspend':
    'prefix': 'suspend'
    'body': 'suspend()'
  'taskDescription':
    'prefix': 'taskDescription'
    'body': 'taskDescription()'
  'taskIdentifier':
    'prefix': 'taskIdentifier'
    'body': 'taskIdentifier()'
  'NSUUID.UUID':
    'prefix': 'UUID'
    'body': 'NSUUID.UUID()'
  'UUIDString':
    'prefix': 'UUIDString'
    'body': 'UUIDString()'
  'getUUIDBytes:':
    'prefix': 'getUUIDBytes:'
    'body': 'getUUIDBytes(${1:unsigned char* uuid})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithUUIDBytes:':
    'prefix': 'initWithUUIDBytes:'
    'body': 'initWithUUIDBytes(${1:unsigned char* bytes})'
  'initWithUUIDString:':
    'prefix': 'initWithUUIDString:'
    'body': 'initWithUUIDString(${1:NSString* string})'
  'arrayForKey:':
    'prefix': 'arrayForKey:'
    'body': 'arrayForKey(${1:NSString* aKey})'
  'boolForKey:':
    'prefix': 'boolForKey:'
    'body': 'boolForKey(${1:NSString* aKey})'
  'dataForKey:':
    'prefix': 'dataForKey:'
    'body': 'dataForKey(${1:NSString* aKey})'
  'NSUbiquitousKeyValueStore.defaultStore':
    'prefix': 'defaultStore'
    'body': 'NSUbiquitousKeyValueStore.defaultStore()'
  'dictionaryForKey:':
    'prefix': 'dictionaryForKey:'
    'body': 'dictionaryForKey(${1:NSString* aKey})'
  'dictionaryRepresentation':
    'prefix': 'dictionaryRepresentation'
    'body': 'dictionaryRepresentation()'
  'doubleForKey:':
    'prefix': 'doubleForKey:'
    'body': 'doubleForKey(${1:NSString* aKey})'
  'longLongForKey:':
    'prefix': 'longLongForKey:'
    'body': 'longLongForKey(${1:NSString* aKey})'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:NSString* aKey})'
  'removeObjectForKey:':
    'prefix': 'removeObjectForKey:'
    'body': 'removeObjectForKey(${1:NSString* aKey})'
  'setArray:forKey:':
    'prefix': 'setArray:forKey:'
    'body': 'setArray(${1:NSArray* anArray}, forKey:${2:NSString* aKey})'
  'setBool:forKey:':
    'prefix': 'setBool:forKey:'
    'body': 'setBool(${1:BOOL value}, forKey:${2:NSString* aKey})'
  'setData:forKey:':
    'prefix': 'setData:forKey:'
    'body': 'setData(${1:NSData* aData}, forKey:${2:NSString* aKey})'
  'setDictionary:forKey:':
    'prefix': 'setDictionary:forKey:'
    'body': 'setDictionary(${1:NSDictionary* aDictionary}, forKey:${2:NSString* aKey})'
  'setDouble:forKey:':
    'prefix': 'setDouble:forKey:'
    'body': 'setDouble(${1:double value}, forKey:${2:NSString* aKey})'
  'setLongLong:forKey:':
    'prefix': 'setLongLong:forKey:'
    'body': 'setLongLong(${1:long long value}, forKey:${2:NSString* aKey})'
  'setObject:forKey:':
    'prefix': 'setObject:forKey:'
    'body': 'setObject(${1:id anObject}, forKey:${2:NSString* aKey})'
  'setString:forKey:':
    'prefix': 'setString:forKey:'
    'body': 'setString(${1:NSString* aString}, forKey:${2:NSString* aKey})'
  'stringForKey:':
    'prefix': 'stringForKey:'
    'body': 'stringForKey(${1:NSString* aKey})'
  'synchronize':
    'prefix': 'synchronize'
    'body': 'synchronize()'
  'beginUndoGrouping':
    'prefix': 'beginUndoGrouping'
    'body': 'beginUndoGrouping()'
  'canRedo':
    'prefix': 'canRedo'
    'body': 'canRedo()'
  'canUndo':
    'prefix': 'canUndo'
    'body': 'canUndo()'
  'disableUndoRegistration':
    'prefix': 'disableUndoRegistration'
    'body': 'disableUndoRegistration()'
  'enableUndoRegistration':
    'prefix': 'enableUndoRegistration'
    'body': 'enableUndoRegistration()'
  'endUndoGrouping':
    'prefix': 'endUndoGrouping'
    'body': 'endUndoGrouping()'
  'groupingLevel':
    'prefix': 'groupingLevel'
    'body': 'groupingLevel()'
  'groupsByEvent':
    'prefix': 'groupsByEvent'
    'body': 'groupsByEvent()'
  'isRedoing':
    'prefix': 'isRedoing'
    'body': 'isRedoing()'
  'isUndoRegistrationEnabled':
    'prefix': 'isUndoRegistrationEnabled'
    'body': 'isUndoRegistrationEnabled()'
  'isUndoing':
    'prefix': 'isUndoing'
    'body': 'isUndoing()'
  'levelsOfUndo':
    'prefix': 'levelsOfUndo'
    'body': 'levelsOfUndo()'
  'prepareWithInvocationTarget:':
    'prefix': 'prepareWithInvocationTarget:'
    'body': 'prepareWithInvocationTarget(${1:id target})'
  'redo':
    'prefix': 'redo'
    'body': 'redo()'
  'redoActionIsDiscardable':
    'prefix': 'redoActionIsDiscardable'
    'body': 'redoActionIsDiscardable()'
  'redoActionName':
    'prefix': 'redoActionName'
    'body': 'redoActionName()'
  'redoMenuItemTitle':
    'prefix': 'redoMenuItemTitle'
    'body': 'redoMenuItemTitle()'
  'redoMenuTitleForUndoActionName:':
    'prefix': 'redoMenuTitleForUndoActionName:'
    'body': 'redoMenuTitleForUndoActionName(${1:NSString* actionName})'
  'registerUndoWithTarget:selector:object:':
    'prefix': 'registerUndoWithTarget:selector:object:'
    'body': 'registerUndoWithTarget(${1:id target}, selector:${2:SEL selector}, object:${3:id anObject})'
  'removeAllActions':
    'prefix': 'removeAllActions'
    'body': 'removeAllActions()'
  'removeAllActionsWithTarget:':
    'prefix': 'removeAllActionsWithTarget:'
    'body': 'removeAllActionsWithTarget(${1:id target})'
  'runLoopModes':
    'prefix': 'runLoopModes'
    'body': 'runLoopModes()'
  'setActionIsDiscardable:':
    'prefix': 'setActionIsDiscardable:'
    'body': 'setActionIsDiscardable(${1:BOOL discardable})'
  'setActionName:':
    'prefix': 'setActionName:'
    'body': 'setActionName(${1:NSString* actionName})'
  'setGroupsByEvent:':
    'prefix': 'setGroupsByEvent:'
    'body': 'setGroupsByEvent(${1:BOOL groupsByEvent})'
  'setLevelsOfUndo:':
    'prefix': 'setLevelsOfUndo:'
    'body': 'setLevelsOfUndo(${1:NSUInteger levels})'
  'setRunLoopModes:':
    'prefix': 'setRunLoopModes:'
    'body': 'setRunLoopModes(${1:NSArray* runLoopModes})'
  'undo':
    'prefix': 'undo'
    'body': 'undo()'
  'undoActionIsDiscardable':
    'prefix': 'undoActionIsDiscardable'
    'body': 'undoActionIsDiscardable()'
  'undoActionName':
    'prefix': 'undoActionName'
    'body': 'undoActionName()'
  'undoMenuItemTitle':
    'prefix': 'undoMenuItemTitle'
    'body': 'undoMenuItemTitle()'
  'undoMenuTitleForUndoActionName:':
    'prefix': 'undoMenuTitleForUndoActionName:'
    'body': 'undoMenuTitleForUndoActionName(${1:NSString* actionName})'
  'undoNestedGroup':
    'prefix': 'undoNestedGroup'
    'body': 'undoNestedGroup()'
  'URLForKey:':
    'prefix': 'URLForKey:'
    'body': 'URLForKey(${1:NSString* defaultName})'
  'addSuiteNamed:':
    'prefix': 'addSuiteNamed:'
    'body': 'addSuiteNamed(${1:NSString* suiteName})'
  'arrayForKey:':
    'prefix': 'arrayForKey:'
    'body': 'arrayForKey(${1:NSString* defaultName})'
  'boolForKey:':
    'prefix': 'boolForKey:'
    'body': 'boolForKey(${1:NSString* defaultName})'
  'dataForKey:':
    'prefix': 'dataForKey:'
    'body': 'dataForKey(${1:NSString* defaultName})'
  'dictionaryForKey:':
    'prefix': 'dictionaryForKey:'
    'body': 'dictionaryForKey(${1:NSString* defaultName})'
  'dictionaryRepresentation':
    'prefix': 'dictionaryRepresentation'
    'body': 'dictionaryRepresentation()'
  'doubleForKey:':
    'prefix': 'doubleForKey:'
    'body': 'doubleForKey(${1:NSString* defaultName})'
  'floatForKey:':
    'prefix': 'floatForKey:'
    'body': 'floatForKey(${1:NSString* defaultName})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initWithSuiteName:':
    'prefix': 'initWithSuiteName:'
    'body': 'initWithSuiteName(${1:NSString* suitename})'
  'initWithUser:':
    'prefix': 'initWithUser:'
    'body': 'initWithUser(${1:NSString* username})'
  'integerForKey:':
    'prefix': 'integerForKey:'
    'body': 'integerForKey(${1:NSString* defaultName})'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:NSString* defaultName})'
  'objectIsForcedForKey:':
    'prefix': 'objectIsForcedForKey:'
    'body': 'objectIsForcedForKey(${1:NSString* key})'
  'objectIsForcedForKey:inDomain:':
    'prefix': 'objectIsForcedForKey:inDomain:'
    'body': 'objectIsForcedForKey(${1:NSString* key}, inDomain:${2:NSString* domain})'
  'persistentDomainForName:':
    'prefix': 'persistentDomainForName:'
    'body': 'persistentDomainForName(${1:NSString* domainName})'
  'persistentDomainNames':
    'prefix': 'persistentDomainNames'
    'body': 'persistentDomainNames()'
  'registerDefaults:':
    'prefix': 'registerDefaults:'
    'body': 'registerDefaults(${1:NSDictionary* registrationDictionary})'
  'removeObjectForKey:':
    'prefix': 'removeObjectForKey:'
    'body': 'removeObjectForKey(${1:NSString* defaultName})'
  'removePersistentDomainForName:':
    'prefix': 'removePersistentDomainForName:'
    'body': 'removePersistentDomainForName(${1:NSString* domainName})'
  'removeSuiteNamed:':
    'prefix': 'removeSuiteNamed:'
    'body': 'removeSuiteNamed(${1:NSString* suiteName})'
  'removeVolatileDomainForName:':
    'prefix': 'removeVolatileDomainForName:'
    'body': 'removeVolatileDomainForName(${1:NSString* domainName})'
  'NSUserDefaults.resetStandardUserDefaults':
    'prefix': 'resetStandardUserDefaults'
    'body': 'NSUserDefaults.resetStandardUserDefaults()'
  'setBool:forKey:':
    'prefix': 'setBool:forKey:'
    'body': 'setBool(${1:BOOL value}, forKey:${2:NSString* defaultName})'
  'setDouble:forKey:':
    'prefix': 'setDouble:forKey:'
    'body': 'setDouble(${1:double value}, forKey:${2:NSString* defaultName})'
  'setFloat:forKey:':
    'prefix': 'setFloat:forKey:'
    'body': 'setFloat(${1:float value}, forKey:${2:NSString* defaultName})'
  'setInteger:forKey:':
    'prefix': 'setInteger:forKey:'
    'body': 'setInteger(${1:NSInteger value}, forKey:${2:NSString* defaultName})'
  'setObject:forKey:':
    'prefix': 'setObject:forKey:'
    'body': 'setObject(${1:id value}, forKey:${2:NSString* defaultName})'
  'setPersistentDomain:forName:':
    'prefix': 'setPersistentDomain:forName:'
    'body': 'setPersistentDomain(${1:NSDictionary* domain}, forName:${2:NSString* domainName})'
  'setURL:forKey:':
    'prefix': 'setURL:forKey:'
    'body': 'setURL(${1:NSURL* url}, forKey:${2:NSString* defaultName})'
  'setVolatileDomain:forName:':
    'prefix': 'setVolatileDomain:forName:'
    'body': 'setVolatileDomain(${1:NSDictionary* domain}, forName:${2:NSString* domainName})'
  'NSUserDefaults.standardUserDefaults':
    'prefix': 'standardUserDefaults'
    'body': 'NSUserDefaults.standardUserDefaults()'
  'stringArrayForKey:':
    'prefix': 'stringArrayForKey:'
    'body': 'stringArrayForKey(${1:NSString* defaultName})'
  'stringForKey:':
    'prefix': 'stringForKey:'
    'body': 'stringForKey(${1:NSString* defaultName})'
  'synchronize':
    'prefix': 'synchronize'
    'body': 'synchronize()'
  'volatileDomainForName:':
    'prefix': 'volatileDomainForName:'
    'body': 'volatileDomainForName(${1:NSString* domainName})'
  'volatileDomainNames':
    'prefix': 'volatileDomainNames'
    'body': 'volatileDomainNames()'
  'getValue:':
    'prefix': 'getValue:'
    'body': 'getValue(${1:void* value})'
  'initWithBytes:objCType:':
    'prefix': 'initWithBytes:objCType:'
    'body': 'initWithBytes(${1:void* value}, objCType:${2:char* type})'
  'isEqualToValue:':
    'prefix': 'isEqualToValue:'
    'body': 'isEqualToValue(${1:NSValue* value})'
  'nonretainedObjectValue':
    'prefix': 'nonretainedObjectValue'
    'body': 'nonretainedObjectValue()'
  'objCType':
    'prefix': 'objCType'
    'body': 'objCType()'
  'pointerValue':
    'prefix': 'pointerValue'
    'body': 'pointerValue()'
  'rangeValue':
    'prefix': 'rangeValue'
    'body': 'rangeValue()'
  'NSValue.value:withObjCType:':
    'prefix': 'value:withObjCType:'
    'body': 'NSValue.value(${1:void* value}, withObjCType:${2:char* type})'
  'NSValue.valueWithBytes:objCType:':
    'prefix': 'valueWithBytes:objCType:'
    'body': 'NSValue.valueWithBytes(${1:void* value}, objCType:${2:char* type})'
  'NSValue.valueWithNonretainedObject:':
    'prefix': 'valueWithNonretainedObject:'
    'body': 'NSValue.valueWithNonretainedObject(${1:id anObject})'
  'NSValue.valueWithPointer:':
    'prefix': 'valueWithPointer:'
    'body': 'NSValue.valueWithPointer(${1:void* pointer})'
  'NSValue.valueWithRange:':
    'prefix': 'valueWithRange:'
    'body': 'NSValue.valueWithRange(${1:NSRange range})'
  'NSValueTransformer.allowsReverseTransformation':
    'prefix': 'allowsReverseTransformation'
    'body': 'NSValueTransformer.allowsReverseTransformation()'
  'reverseTransformedValue:':
    'prefix': 'reverseTransformedValue:'
    'body': 'reverseTransformedValue(${1:id value})'
  'NSValueTransformer.setValueTransformer:forName:':
    'prefix': 'setValueTransformer:forName:'
    'body': 'NSValueTransformer.setValueTransformer(${1:NSValueTransformer* transformer}, forName:${2:NSString* name})'
  'transformedValue:':
    'prefix': 'transformedValue:'
    'body': 'transformedValue(${1:id value})'
  'NSValueTransformer.transformedValueClass':
    'prefix': 'transformedValueClass'
    'body': 'NSValueTransformer.transformedValueClass()'
  'NSValueTransformer.valueTransformerForName:':
    'prefix': 'valueTransformerForName:'
    'body': 'NSValueTransformer.valueTransformerForName(${1:NSString* name})'
  'NSValueTransformer.valueTransformerNames':
    'prefix': 'valueTransformerNames'
    'body': 'NSValueTransformer.valueTransformerNames()'
  'abortParsing':
    'prefix': 'abortParsing'
    'body': 'abortParsing()'
  'columnNumber':
    'prefix': 'columnNumber'
    'body': 'columnNumber()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithStream:':
    'prefix': 'initWithStream:'
    'body': 'initWithStream(${1:NSInputStream* stream})'
  'lineNumber':
    'prefix': 'lineNumber'
    'body': 'lineNumber()'
  'parse':
    'prefix': 'parse'
    'body': 'parse()'
  'parserError':
    'prefix': 'parserError'
    'body': 'parserError()'
  'publicID':
    'prefix': 'publicID'
    'body': 'publicID()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setShouldProcessNamespaces:':
    'prefix': 'setShouldProcessNamespaces:'
    'body': 'setShouldProcessNamespaces(${1:BOOL shouldProcessNamespaces})'
  'setShouldReportNamespacePrefixes:':
    'prefix': 'setShouldReportNamespacePrefixes:'
    'body': 'setShouldReportNamespacePrefixes(${1:BOOL shouldReportNamespacePrefixes})'
  'setShouldResolveExternalEntities:':
    'prefix': 'setShouldResolveExternalEntities:'
    'body': 'setShouldResolveExternalEntities(${1:BOOL shouldResolveExternalEntities})'
  'shouldProcessNamespaces':
    'prefix': 'shouldProcessNamespaces'
    'body': 'shouldProcessNamespaces()'
  'shouldReportNamespacePrefixes':
    'prefix': 'shouldReportNamespacePrefixes'
    'body': 'shouldReportNamespacePrefixes()'
  'shouldResolveExternalEntities':
    'prefix': 'shouldResolveExternalEntities'
    'body': 'shouldResolveExternalEntities()'
  'systemID':
    'prefix': 'systemID'
    'body': 'systemID()'
  'cache:willEvictObject:':
    'prefix': 'cache:willEvictObject:'
    'body': 'cache(${1:NSCache* cache}, willEvictObject:${2:id obj})'
  'awakeAfterUsingCoder:':
    'prefix': 'awakeAfterUsingCoder:'
    'body': 'awakeAfterUsingCoder(${1:NSCoder* aDecoder})'
  'classForCoder':
    'prefix': 'classForCoder'
    'body': 'classForCoder()'
  'replacementObjectForCoder:':
    'prefix': 'replacementObjectForCoder:'
    'body': 'replacementObjectForCoder(${1:NSCoder* aCoder})'
  'NSCoderMethods.setVersion:':
    'prefix': 'setVersion:'
    'body': 'NSCoderMethods.setVersion(${1:NSInteger aVersion})'
  'NSCoderMethods.version':
    'prefix': 'version'
    'body': 'NSCoderMethods.version()'
  'encodeWithCoder:':
    'prefix': 'encodeWithCoder:'
    'body': 'encodeWithCoder(${1:NSCoder* aCoder})'
  'initWithCoder:':
    'prefix': 'initWithCoder:'
    'body': 'initWithCoder(${1:NSCoder* aDecoder})'
  'fileManager:shouldProceedAfterError:':
    'prefix': 'fileManager:shouldProceedAfterError:'
    'body': 'fileManager(${1:NSFileManager* fm}, shouldProceedAfterError:${2:NSDictionary* errorInfo})'
  'fileManager:willProcessPath:':
    'prefix': 'fileManager:willProcessPath:'
    'body': 'fileManager(${1:NSFileManager* fm}, willProcessPath:${2:NSString* path})'
  'copyWithZone:':
    'prefix': 'copyWithZone:'
    'body': 'copyWithZone(${1:NSZone* zone})'
  'exceptionDuringOperation:error:leftOperand:rightOperand:':
    'prefix': 'exceptionDuringOperation:error:leftOperand:rightOperand:'
    'body': 'exceptionDuringOperation(${1:SEL operation}, error:${2:NSCalculationError error}, leftOperand:${3:NSDecimalNumber* leftOperand}, rightOperand:${4:NSDecimalNumber* rightOperand})'
  'roundingMode':
    'prefix': 'roundingMode'
    'body': 'roundingMode()'
  'scale':
    'prefix': 'scale'
    'body': 'scale()'
  'NSDelayedPerforming.cancelPreviousPerformRequestsWithTarget:':
    'prefix': 'cancelPreviousPerformRequestsWithTarget:'
    'body': 'NSDelayedPerforming.cancelPreviousPerformRequestsWithTarget(${1:id aTarget})'
  'NSDelayedPerforming.cancelPreviousPerformRequestsWithTarget:selector:object:':
    'prefix': 'cancelPreviousPerformRequestsWithTarget:selector:object:'
    'body': 'NSDelayedPerforming.cancelPreviousPerformRequestsWithTarget(${1:id aTarget}, selector:${2:SEL aSelector}, object:${3:id anArgument})'
  'performSelector:withObject:afterDelay:':
    'prefix': 'performSelector:withObject:afterDelay:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id anArgument}, afterDelay:${3:NSTimeInterval delay})'
  'performSelector:withObject:afterDelay:inModes:':
    'prefix': 'performSelector:withObject:afterDelay:inModes:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id anArgument}, afterDelay:${3:NSTimeInterval delay}, inModes:${4:NSArray* modes})'
  'beginContentAccess':
    'prefix': 'beginContentAccess'
    'body': 'beginContentAccess()'
  'discardContentIfPossible':
    'prefix': 'discardContentIfPossible'
    'body': 'discardContentIfPossible()'
  'endContentAccess':
    'prefix': 'endContentAccess'
    'body': 'endContentAccess()'
  'isContentDiscarded':
    'prefix': 'isContentDiscarded'
    'body': 'isContentDiscarded()'
  'autoContentAccessingProxy':
    'prefix': 'autoContentAccessingProxy'
    'body': 'autoContentAccessingProxy()'
  'attemptRecoveryFromError:optionIndex:':
    'prefix': 'attemptRecoveryFromError:optionIndex:'
    'body': 'attemptRecoveryFromError(${1:NSError* error}, optionIndex:${2:NSUInteger recoveryOptionIndex})'
  'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:':
    'prefix': 'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'
    'body': 'attemptRecoveryFromError(${1:NSError* error}, optionIndex:${2:NSUInteger recoveryOptionIndex}, delegate:${3:id delegate}, didRecoverSelector:${4:SEL didRecoverSelector}, contextInfo:${5:void* contextInfo})'
  'countByEnumeratingWithState:objects:count:':
    'prefix': 'countByEnumeratingWithState:objects:count:'
    'body': 'countByEnumeratingWithState(${1:NSFastEnumerationState* state}, objects:${2:id* buffer}, count:${3:NSUInteger len})'
  'fileManager:shouldCopyItemAtPath:toPath:':
    'prefix': 'fileManager:shouldCopyItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldCopyItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldCopyItemAtURL:toURL:':
    'prefix': 'fileManager:shouldCopyItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldCopyItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldLinkItemAtPath:toPath:':
    'prefix': 'fileManager:shouldLinkItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldLinkItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldLinkItemAtURL:toURL:':
    'prefix': 'fileManager:shouldLinkItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldLinkItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldMoveItemAtPath:toPath:':
    'prefix': 'fileManager:shouldMoveItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldMoveItemAtPath:${2:NSString* srcPath}, toPath:${3:NSString* dstPath})'
  'fileManager:shouldMoveItemAtURL:toURL:':
    'prefix': 'fileManager:shouldMoveItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldMoveItemAtURL:${2:NSURL* srcURL}, toURL:${3:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, copyingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, copyingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, linkingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, linkingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:':
    'prefix': 'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, movingItemAtPath:${3:NSString* srcPath}, toPath:${4:NSString* dstPath})'
  'fileManager:shouldProceedAfterError:movingItemAtURL:toURL:':
    'prefix': 'fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, movingItemAtURL:${3:NSURL* srcURL}, toURL:${4:NSURL* dstURL})'
  'fileManager:shouldProceedAfterError:removingItemAtPath:':
    'prefix': 'fileManager:shouldProceedAfterError:removingItemAtPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, removingItemAtPath:${3:NSString* path})'
  'fileManager:shouldProceedAfterError:removingItemAtURL:':
    'prefix': 'fileManager:shouldProceedAfterError:removingItemAtURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldProceedAfterError:${2:NSError* error}, removingItemAtURL:${3:NSURL* URL})'
  'fileManager:shouldRemoveItemAtPath:':
    'prefix': 'fileManager:shouldRemoveItemAtPath:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldRemoveItemAtPath:${2:NSString* path})'
  'fileManager:shouldRemoveItemAtURL:':
    'prefix': 'fileManager:shouldRemoveItemAtURL:'
    'body': 'fileManager(${1:NSFileManager* fileManager}, shouldRemoveItemAtURL:${2:NSURL* URL})'
  'accommodatePresentedItemDeletionWithCompletionHandler:':
    'prefix': 'accommodatePresentedItemDeletionWithCompletionHandler:'
    'body': 'accommodatePresentedItemDeletionWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'accommodatePresentedSubitemDeletionAtURL:completionHandler:':
    'prefix': 'accommodatePresentedSubitemDeletionAtURL:completionHandler:'
    'body': 'accommodatePresentedSubitemDeletionAtURL(${1:NSURL* url}, completionHandler:${2:void (^)(NSError *) completionHandler})'
  'presentedItemDidChange':
    'prefix': 'presentedItemDidChange'
    'body': 'presentedItemDidChange()'
  'presentedItemDidGainVersion:':
    'prefix': 'presentedItemDidGainVersion:'
    'body': 'presentedItemDidGainVersion(${1:NSFileVersion* version})'
  'presentedItemDidLoseVersion:':
    'prefix': 'presentedItemDidLoseVersion:'
    'body': 'presentedItemDidLoseVersion(${1:NSFileVersion* version})'
  'presentedItemDidMoveToURL:':
    'prefix': 'presentedItemDidMoveToURL:'
    'body': 'presentedItemDidMoveToURL(${1:NSURL* newURL})'
  'presentedItemDidResolveConflictVersion:':
    'prefix': 'presentedItemDidResolveConflictVersion:'
    'body': 'presentedItemDidResolveConflictVersion(${1:NSFileVersion* version})'
  'presentedItemOperationQueue':
    'prefix': 'presentedItemOperationQueue'
    'body': 'presentedItemOperationQueue()'
  'presentedItemURL':
    'prefix': 'presentedItemURL'
    'body': 'presentedItemURL()'
  'presentedSubitemAtURL:didGainVersion:':
    'prefix': 'presentedSubitemAtURL:didGainVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didGainVersion:${2:NSFileVersion* version})'
  'presentedSubitemAtURL:didLoseVersion:':
    'prefix': 'presentedSubitemAtURL:didLoseVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didLoseVersion:${2:NSFileVersion* version})'
  'presentedSubitemAtURL:didMoveToURL:':
    'prefix': 'presentedSubitemAtURL:didMoveToURL:'
    'body': 'presentedSubitemAtURL(${1:NSURL* oldURL}, didMoveToURL:${2:NSURL* newURL})'
  'presentedSubitemAtURL:didResolveConflictVersion:':
    'prefix': 'presentedSubitemAtURL:didResolveConflictVersion:'
    'body': 'presentedSubitemAtURL(${1:NSURL* url}, didResolveConflictVersion:${2:NSFileVersion* version})'
  'presentedSubitemDidAppearAtURL:':
    'prefix': 'presentedSubitemDidAppearAtURL:'
    'body': 'presentedSubitemDidAppearAtURL(${1:NSURL* url})'
  'presentedSubitemDidChangeAtURL:':
    'prefix': 'presentedSubitemDidChangeAtURL:'
    'body': 'presentedSubitemDidChangeAtURL(${1:NSURL* url})'
  'primaryPresentedItemURL':
    'prefix': 'primaryPresentedItemURL'
    'body': 'primaryPresentedItemURL()'
  'relinquishPresentedItemToReader:':
    'prefix': 'relinquishPresentedItemToReader:'
    'body': 'relinquishPresentedItemToReader(${1:void (^)(void (^)(void)) reader})'
  'relinquishPresentedItemToWriter:':
    'prefix': 'relinquishPresentedItemToWriter:'
    'body': 'relinquishPresentedItemToWriter(${1:void (^)(void (^)(void)) writer})'
  'savePresentedItemChangesWithCompletionHandler:':
    'prefix': 'savePresentedItemChangesWithCompletionHandler:'
    'body': 'savePresentedItemChangesWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'NSKeyValueCoding.accessInstanceVariablesDirectly':
    'prefix': 'accessInstanceVariablesDirectly'
    'body': 'NSKeyValueCoding.accessInstanceVariablesDirectly()'
  'dictionaryWithValuesForKeys:':
    'prefix': 'dictionaryWithValuesForKeys:'
    'body': 'dictionaryWithValuesForKeys(${1:NSArray* keys})'
  'mutableArrayValueForKey:':
    'prefix': 'mutableArrayValueForKey:'
    'body': 'mutableArrayValueForKey(${1:NSString* key})'
  'mutableArrayValueForKeyPath:':
    'prefix': 'mutableArrayValueForKeyPath:'
    'body': 'mutableArrayValueForKeyPath(${1:NSString* keyPath})'
  'mutableOrderedSetValueForKey:':
    'prefix': 'mutableOrderedSetValueForKey:'
    'body': 'mutableOrderedSetValueForKey(${1:NSString* key})'
  'mutableOrderedSetValueForKeyPath:':
    'prefix': 'mutableOrderedSetValueForKeyPath:'
    'body': 'mutableOrderedSetValueForKeyPath(${1:NSString* keyPath})'
  'mutableSetValueForKey:':
    'prefix': 'mutableSetValueForKey:'
    'body': 'mutableSetValueForKey(${1:NSString* key})'
  'mutableSetValueForKeyPath:':
    'prefix': 'mutableSetValueForKeyPath:'
    'body': 'mutableSetValueForKeyPath(${1:NSString* keyPath})'
  'setNilValueForKey:':
    'prefix': 'setNilValueForKey:'
    'body': 'setNilValueForKey(${1:NSString* key})'
  'setValue:forKey:':
    'prefix': 'setValue:forKey:'
    'body': 'setValue(${1:id value}, forKey:${2:NSString* key})'
  'setValue:forKeyPath:':
    'prefix': 'setValue:forKeyPath:'
    'body': 'setValue(${1:id value}, forKeyPath:${2:NSString* keyPath})'
  'setValue:forUndefinedKey:':
    'prefix': 'setValue:forUndefinedKey:'
    'body': 'setValue(${1:id value}, forUndefinedKey:${2:NSString* key})'
  'setValuesForKeysWithDictionary:':
    'prefix': 'setValuesForKeysWithDictionary:'
    'body': 'setValuesForKeysWithDictionary(${1:NSDictionary* keyedValues})'
  'validateValue:forKey:error:':
    'prefix': 'validateValue:forKey:error:'
    'body': 'validateValue(${1:id* ioValue}, forKey:${2:NSString* inKey}, error:${3:NSError** outError})'
  'validateValue:forKeyPath:error:':
    'prefix': 'validateValue:forKeyPath:error:'
    'body': 'validateValue(${1:id* ioValue}, forKeyPath:${2:NSString* inKeyPath}, error:${3:NSError** outError})'
  'valueForKey:':
    'prefix': 'valueForKey:'
    'body': 'valueForKey(${1:NSString* key})'
  'valueForKeyPath:':
    'prefix': 'valueForKeyPath:'
    'body': 'valueForKeyPath(${1:NSString* keyPath})'
  'valueForUndefinedKey:':
    'prefix': 'valueForUndefinedKey:'
    'body': 'valueForUndefinedKey(${1:NSString* key})'
  'didChange:valuesAtIndexes:forKey:':
    'prefix': 'didChange:valuesAtIndexes:forKey:'
    'body': 'didChange(${1:NSKeyValueChange changeKind}, valuesAtIndexes:${2:NSIndexSet* indexes}, forKey:${3:NSString* key})'
  'didChangeValueForKey:':
    'prefix': 'didChangeValueForKey:'
    'body': 'didChangeValueForKey(${1:NSString* key})'
  'didChangeValueForKey:withSetMutation:usingObjects:':
    'prefix': 'didChangeValueForKey:withSetMutation:usingObjects:'
    'body': 'didChangeValueForKey(${1:NSString* key}, withSetMutation:${2:NSKeyValueSetMutationKind mutationKind}, usingObjects:${3:NSSet* objects})'
  'willChange:valuesAtIndexes:forKey:':
    'prefix': 'willChange:valuesAtIndexes:forKey:'
    'body': 'willChange(${1:NSKeyValueChange changeKind}, valuesAtIndexes:${2:NSIndexSet* indexes}, forKey:${3:NSString* key})'
  'willChangeValueForKey:':
    'prefix': 'willChangeValueForKey:'
    'body': 'willChangeValueForKey(${1:NSString* key})'
  'willChangeValueForKey:withSetMutation:usingObjects:':
    'prefix': 'willChangeValueForKey:withSetMutation:usingObjects:'
    'body': 'willChangeValueForKey(${1:NSString* key}, withSetMutation:${2:NSKeyValueSetMutationKind mutationKind}, usingObjects:${3:NSSet* objects})'
  'addObserver:forKeyPath:options:context:':
    'prefix': 'addObserver:forKeyPath:options:context:'
    'body': 'addObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, options:${3:NSKeyValueObservingOptions options}, context:${4:void* context})'
  'removeObserver:forKeyPath:':
    'prefix': 'removeObserver:forKeyPath:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath})'
  'removeObserver:forKeyPath:context:':
    'prefix': 'removeObserver:forKeyPath:context:'
    'body': 'removeObserver(${1:NSObject* observer}, forKeyPath:${2:NSString* keyPath}, context:${3:void* context})'
  'observeValueForKeyPath:ofObject:change:context:':
    'prefix': 'observeValueForKeyPath:ofObject:change:context:'
    'body': 'observeValueForKeyPath(${1:NSString* keyPath}, ofObject:${2:id object}, change:${3:NSDictionary* change}, context:${4:void* context})'
  'NSKeyValueObservingCustomization.automaticallyNotifiesObserversForKey:':
    'prefix': 'automaticallyNotifiesObserversForKey:'
    'body': 'NSKeyValueObservingCustomization.automaticallyNotifiesObserversForKey(${1:NSString* key})'
  'NSKeyValueObservingCustomization.keyPathsForValuesAffectingValueForKey:':
    'prefix': 'keyPathsForValuesAffectingValueForKey:'
    'body': 'NSKeyValueObservingCustomization.keyPathsForValuesAffectingValueForKey(${1:NSString* key})'
  'observationInfo':
    'prefix': 'observationInfo'
    'body': 'observationInfo()'
  'setObservationInfo:':
    'prefix': 'setObservationInfo:'
    'body': 'setObservationInfo(${1:void* observationInfo})'
  'archiver:didEncodeObject:':
    'prefix': 'archiver:didEncodeObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, didEncodeObject:${2:id object})'
  'archiver:willEncodeObject:':
    'prefix': 'archiver:willEncodeObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, willEncodeObject:${2:id object})'
  'archiver:willReplaceObject:withObject:':
    'prefix': 'archiver:willReplaceObject:withObject:'
    'body': 'archiver(${1:NSKeyedArchiver* archiver}, willReplaceObject:${2:id object}, withObject:${3:id newObject})'
  'archiverDidFinish:':
    'prefix': 'archiverDidFinish:'
    'body': 'archiverDidFinish(${1:NSKeyedArchiver* archiver})'
  'archiverWillFinish:':
    'prefix': 'archiverWillFinish:'
    'body': 'archiverWillFinish(${1:NSKeyedArchiver* archiver})'
  'NSKeyedArchiverObjectSubstitution.classFallbacksForKeyedArchiver':
    'prefix': 'classFallbacksForKeyedArchiver'
    'body': 'NSKeyedArchiverObjectSubstitution.classFallbacksForKeyedArchiver()'
  'classForKeyedArchiver':
    'prefix': 'classForKeyedArchiver'
    'body': 'classForKeyedArchiver()'
  'replacementObjectForKeyedArchiver:':
    'prefix': 'replacementObjectForKeyedArchiver:'
    'body': 'replacementObjectForKeyedArchiver(${1:NSKeyedArchiver* archiver})'
  'unarchiver:cannotDecodeObjectOfClassName:originalClasses:':
    'prefix': 'unarchiver:cannotDecodeObjectOfClassName:originalClasses:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, cannotDecodeObjectOfClassName:${2:NSString* name}, originalClasses:${3:NSArray* classNames})'
  'unarchiver:didDecodeObject:':
    'prefix': 'unarchiver:didDecodeObject:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, didDecodeObject:${2:id object})'
  'unarchiver:willReplaceObject:withObject:':
    'prefix': 'unarchiver:willReplaceObject:withObject:'
    'body': 'unarchiver(${1:NSKeyedUnarchiver* unarchiver}, willReplaceObject:${2:id object}, withObject:${3:id newObject})'
  'unarchiverDidFinish:':
    'prefix': 'unarchiverDidFinish:'
    'body': 'unarchiverDidFinish(${1:NSKeyedUnarchiver* unarchiver})'
  'unarchiverWillFinish:':
    'prefix': 'unarchiverWillFinish:'
    'body': 'unarchiverWillFinish(${1:NSKeyedUnarchiver* unarchiver})'
  'NSKeyedUnarchiverObjectSubstitution.classForKeyedUnarchiver':
    'prefix': 'classForKeyedUnarchiver'
    'body': 'NSKeyedUnarchiverObjectSubstitution.classForKeyedUnarchiver()'
  'lock':
    'prefix': 'lock'
    'body': 'lock()'
  'unlock':
    'prefix': 'unlock'
    'body': 'unlock()'
  'handleMachMessage:':
    'prefix': 'handleMachMessage:'
    'body': 'handleMachMessage(${1:void* msg})'
  'metadataQuery:replacementObjectForResultObject:':
    'prefix': 'metadataQuery:replacementObjectForResultObject:'
    'body': 'metadataQuery(${1:NSMetadataQuery* query}, replacementObjectForResultObject:${2:NSMetadataItem* result})'
  'metadataQuery:replacementValueForAttribute:value:':
    'prefix': 'metadataQuery:replacementValueForAttribute:value:'
    'body': 'metadataQuery(${1:NSMetadataQuery* query}, replacementValueForAttribute:${2:NSString* attrName}, value:${3:id attrValue})'
  'mutableCopyWithZone:':
    'prefix': 'mutableCopyWithZone:'
    'body': 'mutableCopyWithZone(${1:NSZone* zone})'
  'netServiceBrowser:didFindDomain:moreComing:':
    'prefix': 'netServiceBrowser:didFindDomain:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didFindDomain:${2:NSString* domainString}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didFindService:moreComing:':
    'prefix': 'netServiceBrowser:didFindService:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didFindService:${2:NSNetService* aNetService}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didNotSearch:':
    'prefix': 'netServiceBrowser:didNotSearch:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didNotSearch:${2:NSDictionary* errorDict})'
  'netServiceBrowser:didRemoveDomain:moreComing:':
    'prefix': 'netServiceBrowser:didRemoveDomain:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didRemoveDomain:${2:NSString* domainString}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowser:didRemoveService:moreComing:':
    'prefix': 'netServiceBrowser:didRemoveService:moreComing:'
    'body': 'netServiceBrowser(${1:NSNetServiceBrowser* aNetServiceBrowser}, didRemoveService:${2:NSNetService* aNetService}, moreComing:${3:BOOL moreComing})'
  'netServiceBrowserDidStopSearch:':
    'prefix': 'netServiceBrowserDidStopSearch:'
    'body': 'netServiceBrowserDidStopSearch(${1:NSNetServiceBrowser* aNetServiceBrowser})'
  'netServiceBrowserWillSearch:':
    'prefix': 'netServiceBrowserWillSearch:'
    'body': 'netServiceBrowserWillSearch(${1:NSNetServiceBrowser* aNetServiceBrowser})'
  'netService:didAcceptConnectionWithInputStream:outputStream:':
    'prefix': 'netService:didAcceptConnectionWithInputStream:outputStream:'
    'body': 'netService(${1:NSNetService* sender}, didAcceptConnectionWithInputStream:${2:NSInputStream* inputStream}, outputStream:${3:NSOutputStream* outputStream})'
  'netService:didNotPublish:':
    'prefix': 'netService:didNotPublish:'
    'body': 'netService(${1:NSNetService* sender}, didNotPublish:${2:NSDictionary* errorDict})'
  'netService:didNotResolve:':
    'prefix': 'netService:didNotResolve:'
    'body': 'netService(${1:NSNetService* sender}, didNotResolve:${2:NSDictionary* errorDict})'
  'netService:didUpdateTXTRecordData:':
    'prefix': 'netService:didUpdateTXTRecordData:'
    'body': 'netService(${1:NSNetService* sender}, didUpdateTXTRecordData:${2:NSData* data})'
  'netServiceDidPublish:':
    'prefix': 'netServiceDidPublish:'
    'body': 'netServiceDidPublish(${1:NSNetService* sender})'
  'netServiceDidResolveAddress:':
    'prefix': 'netServiceDidResolveAddress:'
    'body': 'netServiceDidResolveAddress(${1:NSNetService* sender})'
  'netServiceDidStop:':
    'prefix': 'netServiceDidStop:'
    'body': 'netServiceDidStop(${1:NSNetService* sender})'
  'netServiceWillPublish:':
    'prefix': 'netServiceWillPublish:'
    'body': 'netServiceWillPublish(${1:NSNetService* sender})'
  'netServiceWillResolve:':
    'prefix': 'netServiceWillResolve:'
    'body': 'netServiceWillResolve(${1:NSNetService* sender})'
  'autorelease':
    'prefix': 'autorelease'
    'body': 'autorelease()'
  'class':
    'prefix': 'class'
    'body': 'class()'
  'conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'conformsToProtocol(${1:Protocol* aProtocol})'
  'debugDescription':
    'prefix': 'debugDescription'
    'body': 'debugDescription()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'hash':
    'prefix': 'hash'
    'body': 'hash()'
  'isEqual:':
    'prefix': 'isEqual:'
    'body': 'isEqual(${1:id object})'
  'isKindOfClass:':
    'prefix': 'isKindOfClass:'
    'body': 'isKindOfClass(${1:Class aClass})'
  'isMemberOfClass:':
    'prefix': 'isMemberOfClass:'
    'body': 'isMemberOfClass(${1:Class aClass})'
  'isProxy':
    'prefix': 'isProxy'
    'body': 'isProxy()'
  'performSelector:':
    'prefix': 'performSelector:'
    'body': 'performSelector(${1:SEL aSelector})'
  'performSelector:withObject:':
    'prefix': 'performSelector:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object})'
  'performSelector:withObject:withObject:':
    'prefix': 'performSelector:withObject:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object1}, withObject:${3:id object2})'
  'release':
    'prefix': 'release'
    'body': 'release()'
  'respondsToSelector:':
    'prefix': 'respondsToSelector:'
    'body': 'respondsToSelector(${1:SEL aSelector})'
  'retain':
    'prefix': 'retain'
    'body': 'retain()'
  'retainCount':
    'prefix': 'retainCount'
    'body': 'retainCount()'
  'self':
    'prefix': 'self'
    'body': 'self()'
  'superclass':
    'prefix': 'superclass'
    'body': 'superclass()'
  'zone':
    'prefix': 'zone'
    'body': 'zone()'
  'handlePortMessage:':
    'prefix': 'handlePortMessage:'
    'body': 'handlePortMessage(${1:NSPortMessage* message})'
  'NSSecureCoding.supportsSecureCoding':
    'prefix': 'supportsSecureCoding'
    'body': 'NSSecureCoding.supportsSecureCoding()'
  'stream:handleEvent:':
    'prefix': 'stream:handleEvent:'
    'body': 'stream(${1:NSStream* aStream}, handleEvent:${2:NSStreamEvent eventCode})'
  'performSelector:onThread:withObject:waitUntilDone:':
    'prefix': 'performSelector:onThread:withObject:waitUntilDone:'
    'body': 'performSelector(${1:SEL aSelector}, onThread:${2:NSThread* thr}, withObject:${3:id arg}, waitUntilDone:${4:BOOL wait})'
  'performSelector:onThread:withObject:waitUntilDone:modes:':
    'prefix': 'performSelector:onThread:withObject:waitUntilDone:modes:'
    'body': 'performSelector(${1:SEL aSelector}, onThread:${2:NSThread* thr}, withObject:${3:id arg}, waitUntilDone:${4:BOOL wait}, modes:${5:NSArray* array})'
  'performSelectorInBackground:withObject:':
    'prefix': 'performSelectorInBackground:withObject:'
    'body': 'performSelectorInBackground(${1:SEL aSelector}, withObject:${2:id arg})'
  'performSelectorOnMainThread:withObject:waitUntilDone:':
    'prefix': 'performSelectorOnMainThread:withObject:waitUntilDone:'
    'body': 'performSelectorOnMainThread(${1:SEL aSelector}, withObject:${2:id arg}, waitUntilDone:${3:BOOL wait})'
  'performSelectorOnMainThread:withObject:waitUntilDone:modes:':
    'prefix': 'performSelectorOnMainThread:withObject:waitUntilDone:modes:'
    'body': 'performSelectorOnMainThread(${1:SEL aSelector}, withObject:${2:id arg}, waitUntilDone:${3:BOOL wait}, modes:${4:NSArray* array})'
  'cancelAuthenticationChallenge:':
    'prefix': 'cancelAuthenticationChallenge:'
    'body': 'cancelAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'continueWithoutCredentialForAuthenticationChallenge:':
    'prefix': 'continueWithoutCredentialForAuthenticationChallenge:'
    'body': 'continueWithoutCredentialForAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'performDefaultHandlingForAuthenticationChallenge:':
    'prefix': 'performDefaultHandlingForAuthenticationChallenge:'
    'body': 'performDefaultHandlingForAuthenticationChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'rejectProtectionSpaceAndContinueWithChallenge:':
    'prefix': 'rejectProtectionSpaceAndContinueWithChallenge:'
    'body': 'rejectProtectionSpaceAndContinueWithChallenge(${1:NSURLAuthenticationChallenge* challenge})'
  'useCredential:forAuthenticationChallenge:':
    'prefix': 'useCredential:forAuthenticationChallenge:'
    'body': 'useCredential(${1:NSURLCredential* credential}, forAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connection:didReceiveData:':
    'prefix': 'connection:didReceiveData:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveData:${2:NSData* data})'
  'connection:didReceiveResponse:':
    'prefix': 'connection:didReceiveResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveResponse:${2:NSURLResponse* response})'
  'connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:':
    'prefix': 'connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'
    'body': 'connection(${1:NSURLConnection* connection}, didSendBodyData:${2:NSInteger bytesWritten}, totalBytesWritten:${3:NSInteger totalBytesWritten}, totalBytesExpectedToWrite:${4:NSInteger totalBytesExpectedToWrite})'
  'connection:needNewBodyStream:':
    'prefix': 'connection:needNewBodyStream:'
    'body': 'connection(${1:NSURLConnection* connection}, needNewBodyStream:${2:NSURLRequest* request})'
  'connection:willCacheResponse:':
    'prefix': 'connection:willCacheResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, willCacheResponse:${2:NSCachedURLResponse* cachedResponse})'
  'connection:willSendRequest:redirectResponse:':
    'prefix': 'connection:willSendRequest:redirectResponse:'
    'body': 'connection(${1:NSURLConnection* connection}, willSendRequest:${2:NSURLRequest* request}, redirectResponse:${3:NSURLResponse* response})'
  'connectionDidFinishLoading:':
    'prefix': 'connectionDidFinishLoading:'
    'body': 'connectionDidFinishLoading(${1:NSURLConnection* connection})'
  'connection:canAuthenticateAgainstProtectionSpace:':
    'prefix': 'connection:canAuthenticateAgainstProtectionSpace:'
    'body': 'connection(${1:NSURLConnection* connection}, canAuthenticateAgainstProtectionSpace:${2:NSURLProtectionSpace* protectionSpace})'
  'connection:didCancelAuthenticationChallenge:':
    'prefix': 'connection:didCancelAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, didCancelAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connection:didFailWithError:':
    'prefix': 'connection:didFailWithError:'
    'body': 'connection(${1:NSURLConnection* connection}, didFailWithError:${2:NSError* error})'
  'connection:didReceiveAuthenticationChallenge:':
    'prefix': 'connection:didReceiveAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, didReceiveAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connection:willSendRequestForAuthenticationChallenge:':
    'prefix': 'connection:willSendRequestForAuthenticationChallenge:'
    'body': 'connection(${1:NSURLConnection* connection}, willSendRequestForAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'connectionShouldUseCredentialStorage:':
    'prefix': 'connectionShouldUseCredentialStorage:'
    'body': 'connectionShouldUseCredentialStorage(${1:NSURLConnection* connection})'
  'connection:didWriteData:totalBytesWritten:expectedTotalBytes:':
    'prefix': 'connection:didWriteData:totalBytesWritten:expectedTotalBytes:'
    'body': 'connection(${1:NSURLConnection* connection}, didWriteData:${2:long long bytesWritten}, totalBytesWritten:${3:long long totalBytesWritten}, expectedTotalBytes:${4:long long expectedTotalBytes})'
  'connectionDidFinishDownloading:destinationURL:':
    'prefix': 'connectionDidFinishDownloading:destinationURL:'
    'body': 'connectionDidFinishDownloading(${1:NSURLConnection* connection}, destinationURL:${2:NSURL* destinationURL})'
  'connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:':
    'prefix': 'connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'
    'body': 'connectionDidResumeDownloading(${1:NSURLConnection* connection}, totalBytesWritten:${2:long long totalBytesWritten}, expectedTotalBytes:${3:long long expectedTotalBytes})'
  'URLProtocol:cachedResponseIsValid:':
    'prefix': 'URLProtocol:cachedResponseIsValid:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, cachedResponseIsValid:${2:NSCachedURLResponse* cachedResponse})'
  'URLProtocol:didCancelAuthenticationChallenge:':
    'prefix': 'URLProtocol:didCancelAuthenticationChallenge:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didCancelAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'URLProtocol:didFailWithError:':
    'prefix': 'URLProtocol:didFailWithError:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didFailWithError:${2:NSError* error})'
  'URLProtocol:didLoadData:':
    'prefix': 'URLProtocol:didLoadData:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didLoadData:${2:NSData* data})'
  'URLProtocol:didReceiveAuthenticationChallenge:':
    'prefix': 'URLProtocol:didReceiveAuthenticationChallenge:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didReceiveAuthenticationChallenge:${2:NSURLAuthenticationChallenge* challenge})'
  'URLProtocol:didReceiveResponse:cacheStoragePolicy:':
    'prefix': 'URLProtocol:didReceiveResponse:cacheStoragePolicy:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, didReceiveResponse:${2:NSURLResponse* response}, cacheStoragePolicy:${3:NSURLCacheStoragePolicy policy})'
  'URLProtocol:wasRedirectedToRequest:redirectResponse:':
    'prefix': 'URLProtocol:wasRedirectedToRequest:redirectResponse:'
    'body': 'URLProtocol(${1:NSURLProtocol* protocol}, wasRedirectedToRequest:${2:NSURLRequest* request}, redirectResponse:${3:NSURLResponse* redirectResponse})'
  'URLProtocolDidFinishLoading:':
    'prefix': 'URLProtocolDidFinishLoading:'
    'body': 'URLProtocolDidFinishLoading(${1:NSURLProtocol* protocol})'
  'URLSession:dataTask:didBecomeDownloadTask:':
    'prefix': 'URLSession:dataTask:didBecomeDownloadTask:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didBecomeDownloadTask:${3:NSURLSessionDownloadTask* downloadTask})'
  'URLSession:dataTask:didReceiveData:':
    'prefix': 'URLSession:dataTask:didReceiveData:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didReceiveData:${3:NSData* data})'
  'URLSession:dataTask:didReceiveResponse:completionHandler:':
    'prefix': 'URLSession:dataTask:didReceiveResponse:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, didReceiveResponse:${3:NSURLResponse* response}, completionHandler:${4:void (^)(NSURLSessionResponseDisposition) completionHandler})'
  'URLSession:dataTask:willCacheResponse:completionHandler:':
    'prefix': 'URLSession:dataTask:willCacheResponse:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, dataTask:${2:NSURLSessionDataTask* dataTask}, willCacheResponse:${3:NSCachedURLResponse* proposedResponse}, completionHandler:${4:void (^)(NSCachedURLResponse *) completionHandler})'
  'URLSession:didBecomeInvalidWithError:':
    'prefix': 'URLSession:didBecomeInvalidWithError:'
    'body': 'URLSession(${1:NSURLSession* session}, didBecomeInvalidWithError:${2:NSError* error})'
  'URLSession:didReceiveChallenge:completionHandler:':
    'prefix': 'URLSession:didReceiveChallenge:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, didReceiveChallenge:${2:NSURLAuthenticationChallenge* challenge}, completionHandler:${3:void (^)(NSURLSessionAuthChallengeDisposition, NSURLCredential *) completionHandler})'
  'URLSessionDidFinishEventsForBackgroundURLSession:':
    'prefix': 'URLSessionDidFinishEventsForBackgroundURLSession:'
    'body': 'URLSessionDidFinishEventsForBackgroundURLSession(${1:NSURLSession* session})'
  'URLSession:downloadTask:didFinishDownloadingToURL:':
    'prefix': 'URLSession:downloadTask:didFinishDownloadingToURL:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didFinishDownloadingToURL:${3:NSURL* location})'
  'URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:':
    'prefix': 'URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didResumeAtOffset:${3:int64_t fileOffset}, expectedTotalBytes:${4:int64_t expectedTotalBytes})'
  'URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:':
    'prefix': 'URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:'
    'body': 'URLSession(${1:NSURLSession* session}, downloadTask:${2:NSURLSessionDownloadTask* downloadTask}, didWriteData:${3:int64_t bytesWritten}, totalBytesWritten:${4:int64_t totalBytesWritten}, totalBytesExpectedToWrite:${5:int64_t totalBytesExpectedToWrite})'
  'URLSession:task:didCompleteWithError:':
    'prefix': 'URLSession:task:didCompleteWithError:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didCompleteWithError:${3:NSError* error})'
  'URLSession:task:didReceiveChallenge:completionHandler:':
    'prefix': 'URLSession:task:didReceiveChallenge:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didReceiveChallenge:${3:NSURLAuthenticationChallenge* challenge}, completionHandler:${4:void (^)(NSURLSessionAuthChallengeDisposition, NSURLCredential *) completionHandler})'
  'URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:':
    'prefix': 'URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, didSendBodyData:${3:int64_t bytesSent}, totalBytesSent:${4:int64_t totalBytesSent}, totalBytesExpectedToSend:${5:int64_t totalBytesExpectedToSend})'
  'URLSession:task:needNewBodyStream:':
    'prefix': 'URLSession:task:needNewBodyStream:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, needNewBodyStream:${3:void (^)(NSInputStream *) completionHandler})'
  'URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:':
    'prefix': 'URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:'
    'body': 'URLSession(${1:NSURLSession* session}, task:${2:NSURLSessionTask* task}, willPerformHTTPRedirection:${3:NSHTTPURLResponse* response}, newRequest:${4:NSURLRequest* request}, completionHandler:${5:void (^)(NSURLRequest *) completionHandler})'
  'parser:didEndElement:namespaceURI:qualifiedName:':
    'prefix': 'parser:didEndElement:namespaceURI:qualifiedName:'
    'body': 'parser(${1:NSXMLParser* parser}, didEndElement:${2:NSString* elementName}, namespaceURI:${3:NSString* namespaceURI}, qualifiedName:${4:NSString* qName})'
  'parser:didEndMappingPrefix:':
    'prefix': 'parser:didEndMappingPrefix:'
    'body': 'parser(${1:NSXMLParser* parser}, didEndMappingPrefix:${2:NSString* prefix})'
  'parser:didStartElement:namespaceURI:qualifiedName:attributes:':
    'prefix': 'parser:didStartElement:namespaceURI:qualifiedName:attributes:'
    'body': 'parser(${1:NSXMLParser* parser}, didStartElement:${2:NSString* elementName}, namespaceURI:${3:NSString* namespaceURI}, qualifiedName:${4:NSString* qName}, attributes:${5:NSDictionary* attributeDict})'
  'parser:didStartMappingPrefix:toURI:':
    'prefix': 'parser:didStartMappingPrefix:toURI:'
    'body': 'parser(${1:NSXMLParser* parser}, didStartMappingPrefix:${2:NSString* prefix}, toURI:${3:NSString* namespaceURI})'
  'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:':
    'prefix': 'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'
    'body': 'parser(${1:NSXMLParser* parser}, foundAttributeDeclarationWithName:${2:NSString* attributeName}, forElement:${3:NSString* elementName}, type:${4:NSString* type}, defaultValue:${5:NSString* defaultValue})'
  'parser:foundCDATA:':
    'prefix': 'parser:foundCDATA:'
    'body': 'parser(${1:NSXMLParser* parser}, foundCDATA:${2:NSData* CDATABlock})'
  'parser:foundCharacters:':
    'prefix': 'parser:foundCharacters:'
    'body': 'parser(${1:NSXMLParser* parser}, foundCharacters:${2:NSString* string})'
  'parser:foundComment:':
    'prefix': 'parser:foundComment:'
    'body': 'parser(${1:NSXMLParser* parser}, foundComment:${2:NSString* comment})'
  'parser:foundElementDeclarationWithName:model:':
    'prefix': 'parser:foundElementDeclarationWithName:model:'
    'body': 'parser(${1:NSXMLParser* parser}, foundElementDeclarationWithName:${2:NSString* elementName}, model:${3:NSString* model})'
  'parser:foundExternalEntityDeclarationWithName:publicID:systemID:':
    'prefix': 'parser:foundExternalEntityDeclarationWithName:publicID:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, foundExternalEntityDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID})'
  'parser:foundIgnorableWhitespace:':
    'prefix': 'parser:foundIgnorableWhitespace:'
    'body': 'parser(${1:NSXMLParser* parser}, foundIgnorableWhitespace:${2:NSString* whitespaceString})'
  'parser:foundInternalEntityDeclarationWithName:value:':
    'prefix': 'parser:foundInternalEntityDeclarationWithName:value:'
    'body': 'parser(${1:NSXMLParser* parser}, foundInternalEntityDeclarationWithName:${2:NSString* name}, value:${3:NSString* value})'
  'parser:foundNotationDeclarationWithName:publicID:systemID:':
    'prefix': 'parser:foundNotationDeclarationWithName:publicID:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, foundNotationDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID})'
  'parser:foundProcessingInstructionWithTarget:data:':
    'prefix': 'parser:foundProcessingInstructionWithTarget:data:'
    'body': 'parser(${1:NSXMLParser* parser}, foundProcessingInstructionWithTarget:${2:NSString* target}, data:${3:NSString* data})'
  'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:':
    'prefix': 'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'
    'body': 'parser(${1:NSXMLParser* parser}, foundUnparsedEntityDeclarationWithName:${2:NSString* name}, publicID:${3:NSString* publicID}, systemID:${4:NSString* systemID}, notationName:${5:NSString* notationName})'
  'parser:parseErrorOccurred:':
    'prefix': 'parser:parseErrorOccurred:'
    'body': 'parser(${1:NSXMLParser* parser}, parseErrorOccurred:${2:NSError* parseError})'
  'parser:resolveExternalEntityName:systemID:':
    'prefix': 'parser:resolveExternalEntityName:systemID:'
    'body': 'parser(${1:NSXMLParser* parser}, resolveExternalEntityName:${2:NSString* name}, systemID:${3:NSString* systemID})'
  'parser:validationErrorOccurred:':
    'prefix': 'parser:validationErrorOccurred:'
    'body': 'parser(${1:NSXMLParser* parser}, validationErrorOccurred:${2:NSError* validationError})'
  'parserDidEndDocument:':
    'prefix': 'parserDidEndDocument:'
    'body': 'parserDidEndDocument(${1:NSXMLParser* parser})'
  'parserDidStartDocument:':
    'prefix': 'parserDidStartDocument:'
    'body': 'parserDidStartDocument(${1:NSXMLParser* parser})'
  'NSINTEGER_DEFINED (1)':
    'prefix': 'NSINTEGER_DEFINED'
    'body': 'NSINTEGER_DEFINED'
  'NSIntegerMax (2147483647)':
    'prefix': 'NSIntegerMax'
    'body': 'NSIntegerMax'
  'NSIntegerMin (-2147483648)':
    'prefix': 'NSIntegerMin'
    'body': 'NSIntegerMin'
  'NSUIntegerMax (4294967295)':
    'prefix': 'NSUIntegerMax'
    'body': 'NSUIntegerMax'
  'NSObject.alloc':
    'prefix': 'alloc'
    'body': 'NSObject.alloc()'
  'NSObject.allocWithZone:':
    'prefix': 'allocWithZone:'
    'body': 'NSObject.allocWithZone(${1:struct _NSZone* zone})'
  'autorelease':
    'prefix': 'autorelease'
    'body': 'autorelease()'
  'NSObject.class':
    'prefix': 'class'
    'body': 'NSObject.class()'
  'class':
    'prefix': 'class'
    'body': 'class()'
  'NSObject.conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'NSObject.conformsToProtocol(${1:Protocol* protocol})'
  'conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'conformsToProtocol(${1:Protocol* aProtocol})'
  'copy':
    'prefix': 'copy'
    'body': 'copy()'
  'NSObject.copyWithZone:':
    'prefix': 'copyWithZone:'
    'body': 'NSObject.copyWithZone(${1:struct _NSZone* zone})'
  'dealloc':
    'prefix': 'dealloc'
    'body': 'dealloc()'
  'debugDescription':
    'prefix': 'debugDescription'
    'body': 'debugDescription()'
  'NSObject.description':
    'prefix': 'description'
    'body': 'NSObject.description()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'doesNotRecognizeSelector:':
    'prefix': 'doesNotRecognizeSelector:'
    'body': 'doesNotRecognizeSelector(${1:SEL aSelector})'
  'finalize':
    'prefix': 'finalize'
    'body': 'finalize()'
  'forwardInvocation:':
    'prefix': 'forwardInvocation:'
    'body': 'forwardInvocation(${1:NSInvocation* anInvocation})'
  'forwardingTargetForSelector:':
    'prefix': 'forwardingTargetForSelector:'
    'body': 'forwardingTargetForSelector(${1:SEL aSelector})'
  'hash':
    'prefix': 'hash'
    'body': 'hash()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'NSObject.initialize':
    'prefix': 'initialize'
    'body': 'NSObject.initialize()'
  'NSObject.instanceMethodForSelector:':
    'prefix': 'instanceMethodForSelector:'
    'body': 'NSObject.instanceMethodForSelector(${1:SEL aSelector})'
  'NSObject.instanceMethodSignatureForSelector:':
    'prefix': 'instanceMethodSignatureForSelector:'
    'body': 'NSObject.instanceMethodSignatureForSelector(${1:SEL aSelector})'
  'NSObject.instancesRespondToSelector:':
    'prefix': 'instancesRespondToSelector:'
    'body': 'NSObject.instancesRespondToSelector(${1:SEL aSelector})'
  'isEqual:':
    'prefix': 'isEqual:'
    'body': 'isEqual(${1:id object})'
  'isKindOfClass:':
    'prefix': 'isKindOfClass:'
    'body': 'isKindOfClass(${1:Class aClass})'
  'isMemberOfClass:':
    'prefix': 'isMemberOfClass:'
    'body': 'isMemberOfClass(${1:Class aClass})'
  'isProxy':
    'prefix': 'isProxy'
    'body': 'isProxy()'
  'NSObject.isSubclassOfClass:':
    'prefix': 'isSubclassOfClass:'
    'body': 'NSObject.isSubclassOfClass(${1:Class aClass})'
  'NSObject.load':
    'prefix': 'load'
    'body': 'NSObject.load()'
  'methodForSelector:':
    'prefix': 'methodForSelector:'
    'body': 'methodForSelector(${1:SEL aSelector})'
  'methodSignatureForSelector:':
    'prefix': 'methodSignatureForSelector:'
    'body': 'methodSignatureForSelector(${1:SEL aSelector})'
  'mutableCopy':
    'prefix': 'mutableCopy'
    'body': 'mutableCopy()'
  'NSObject.mutableCopyWithZone:':
    'prefix': 'mutableCopyWithZone:'
    'body': 'NSObject.mutableCopyWithZone(${1:struct _NSZone* zone})'
  'NSObject.new':
    'prefix': 'new'
    'body': 'NSObject.new()'
  'performSelector:':
    'prefix': 'performSelector:'
    'body': 'performSelector(${1:SEL aSelector})'
  'performSelector:withObject:':
    'prefix': 'performSelector:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object})'
  'performSelector:withObject:withObject:':
    'prefix': 'performSelector:withObject:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object1}, withObject:${3:id object2})'
  'release':
    'prefix': 'release'
    'body': 'release()'
  'NSObject.resolveClassMethod:':
    'prefix': 'resolveClassMethod:'
    'body': 'NSObject.resolveClassMethod(${1:SEL sel})'
  'NSObject.resolveInstanceMethod:':
    'prefix': 'resolveInstanceMethod:'
    'body': 'NSObject.resolveInstanceMethod(${1:SEL sel})'
  'respondsToSelector:':
    'prefix': 'respondsToSelector:'
    'body': 'respondsToSelector(${1:SEL aSelector})'
  'retain':
    'prefix': 'retain'
    'body': 'retain()'
  'retainCount':
    'prefix': 'retainCount'
    'body': 'retainCount()'
  'self':
    'prefix': 'self'
    'body': 'self()'
  'NSObject.superclass':
    'prefix': 'superclass'
    'body': 'NSObject.superclass()'
  'superclass':
    'prefix': 'superclass'
    'body': 'superclass()'
  'zone':
    'prefix': 'zone'
    'body': 'zone()'
  'autorelease':
    'prefix': 'autorelease'
    'body': 'autorelease()'
  'class':
    'prefix': 'class'
    'body': 'class()'
  'conformsToProtocol:':
    'prefix': 'conformsToProtocol:'
    'body': 'conformsToProtocol(${1:Protocol* aProtocol})'
  'debugDescription':
    'prefix': 'debugDescription'
    'body': 'debugDescription()'
  'description':
    'prefix': 'description'
    'body': 'description()'
  'hash':
    'prefix': 'hash'
    'body': 'hash()'
  'isEqual:':
    'prefix': 'isEqual:'
    'body': 'isEqual(${1:id object})'
  'isKindOfClass:':
    'prefix': 'isKindOfClass:'
    'body': 'isKindOfClass(${1:Class aClass})'
  'isMemberOfClass:':
    'prefix': 'isMemberOfClass:'
    'body': 'isMemberOfClass(${1:Class aClass})'
  'isProxy':
    'prefix': 'isProxy'
    'body': 'isProxy()'
  'performSelector:':
    'prefix': 'performSelector:'
    'body': 'performSelector(${1:SEL aSelector})'
  'performSelector:withObject:':
    'prefix': 'performSelector:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object})'
  'performSelector:withObject:withObject:':
    'prefix': 'performSelector:withObject:withObject:'
    'body': 'performSelector(${1:SEL aSelector}, withObject:${2:id object1}, withObject:${3:id object2})'
  'release':
    'prefix': 'release'
    'body': 'release()'
  'respondsToSelector:':
    'prefix': 'respondsToSelector:'
    'body': 'respondsToSelector(${1:SEL aSelector})'
  'retain':
    'prefix': 'retain'
    'body': 'retain()'
  'retainCount':
    'prefix': 'retainCount'
    'body': 'retainCount()'
  'self':
    'prefix': 'self'
    'body': 'self()'
  'superclass':
    'prefix': 'superclass'
    'body': 'superclass()'
  'zone':
    'prefix': 'zone'
    'body': 'zone()'
