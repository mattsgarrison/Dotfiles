'.source.rubymotion':
  'NSAttachmentAttributeName (NSString*)':
    'prefix': 'NSAttachmentAttributeName'
    'body': 'NSAttachmentAttributeName'
  'NSBackgroundColorAttributeName (NSString*)':
    'prefix': 'NSBackgroundColorAttributeName'
    'body': 'NSBackgroundColorAttributeName'
  'NSBackgroundColorDocumentAttribute (NSString*)':
    'prefix': 'NSBackgroundColorDocumentAttribute'
    'body': 'NSBackgroundColorDocumentAttribute'
  'NSBaselineOffsetAttributeName (NSString*)':
    'prefix': 'NSBaselineOffsetAttributeName'
    'body': 'NSBaselineOffsetAttributeName'
  'NSCharacterEncodingDocumentAttribute (NSString*)':
    'prefix': 'NSCharacterEncodingDocumentAttribute'
    'body': 'NSCharacterEncodingDocumentAttribute'
  'NSDefaultAttributesDocumentAttribute (NSString*)':
    'prefix': 'NSDefaultAttributesDocumentAttribute'
    'body': 'NSDefaultAttributesDocumentAttribute'
  'NSDefaultTabIntervalDocumentAttribute (NSString*)':
    'prefix': 'NSDefaultTabIntervalDocumentAttribute'
    'body': 'NSDefaultTabIntervalDocumentAttribute'
  'NSDocumentTypeDocumentAttribute (NSString*)':
    'prefix': 'NSDocumentTypeDocumentAttribute'
    'body': 'NSDocumentTypeDocumentAttribute'
  'NSExpansionAttributeName (NSString*)':
    'prefix': 'NSExpansionAttributeName'
    'body': 'NSExpansionAttributeName'
  'NSFontAttributeName (NSString*)':
    'prefix': 'NSFontAttributeName'
    'body': 'NSFontAttributeName'
  'NSForegroundColorAttributeName (NSString*)':
    'prefix': 'NSForegroundColorAttributeName'
    'body': 'NSForegroundColorAttributeName'
  'NSHTMLTextDocumentType (NSString*)':
    'prefix': 'NSHTMLTextDocumentType'
    'body': 'NSHTMLTextDocumentType'
  'NSHyphenationFactorDocumentAttribute (NSString*)':
    'prefix': 'NSHyphenationFactorDocumentAttribute'
    'body': 'NSHyphenationFactorDocumentAttribute'
  'NSKernAttributeName (NSString*)':
    'prefix': 'NSKernAttributeName'
    'body': 'NSKernAttributeName'
  'NSLigatureAttributeName (NSString*)':
    'prefix': 'NSLigatureAttributeName'
    'body': 'NSLigatureAttributeName'
  'NSLinkAttributeName (NSString*)':
    'prefix': 'NSLinkAttributeName'
    'body': 'NSLinkAttributeName'
  'NSObliquenessAttributeName (NSString*)':
    'prefix': 'NSObliquenessAttributeName'
    'body': 'NSObliquenessAttributeName'
  'NSPaperMarginDocumentAttribute (NSString*)':
    'prefix': 'NSPaperMarginDocumentAttribute'
    'body': 'NSPaperMarginDocumentAttribute'
  'NSPaperSizeDocumentAttribute (NSString*)':
    'prefix': 'NSPaperSizeDocumentAttribute'
    'body': 'NSPaperSizeDocumentAttribute'
  'NSParagraphStyleAttributeName (NSString*)':
    'prefix': 'NSParagraphStyleAttributeName'
    'body': 'NSParagraphStyleAttributeName'
  'NSPlainTextDocumentType (NSString*)':
    'prefix': 'NSPlainTextDocumentType'
    'body': 'NSPlainTextDocumentType'
  'NSRTFDTextDocumentType (NSString*)':
    'prefix': 'NSRTFDTextDocumentType'
    'body': 'NSRTFDTextDocumentType'
  'NSRTFTextDocumentType (NSString*)':
    'prefix': 'NSRTFTextDocumentType'
    'body': 'NSRTFTextDocumentType'
  'NSReadOnlyDocumentAttribute (NSString*)':
    'prefix': 'NSReadOnlyDocumentAttribute'
    'body': 'NSReadOnlyDocumentAttribute'
  'NSShadowAttributeName (NSString*)':
    'prefix': 'NSShadowAttributeName'
    'body': 'NSShadowAttributeName'
  'NSStrikethroughColorAttributeName (NSString*)':
    'prefix': 'NSStrikethroughColorAttributeName'
    'body': 'NSStrikethroughColorAttributeName'
  'NSStrikethroughStyleAttributeName (NSString*)':
    'prefix': 'NSStrikethroughStyleAttributeName'
    'body': 'NSStrikethroughStyleAttributeName'
  'NSStrokeColorAttributeName (NSString*)':
    'prefix': 'NSStrokeColorAttributeName'
    'body': 'NSStrokeColorAttributeName'
  'NSStrokeWidthAttributeName (NSString*)':
    'prefix': 'NSStrokeWidthAttributeName'
    'body': 'NSStrokeWidthAttributeName'
  'NSTabColumnTerminatorsAttributeName (NSString*)':
    'prefix': 'NSTabColumnTerminatorsAttributeName'
    'body': 'NSTabColumnTerminatorsAttributeName'
  'NSTextEffectAttributeName (NSString*)':
    'prefix': 'NSTextEffectAttributeName'
    'body': 'NSTextEffectAttributeName'
  'NSTextEffectLetterpressStyle (NSString*)':
    'prefix': 'NSTextEffectLetterpressStyle'
    'body': 'NSTextEffectLetterpressStyle'
  'NSTextLayoutSectionOrientation (NSString*)':
    'prefix': 'NSTextLayoutSectionOrientation'
    'body': 'NSTextLayoutSectionOrientation'
  'NSTextLayoutSectionRange (NSString*)':
    'prefix': 'NSTextLayoutSectionRange'
    'body': 'NSTextLayoutSectionRange'
  'NSTextLayoutSectionsAttribute (NSString*)':
    'prefix': 'NSTextLayoutSectionsAttribute'
    'body': 'NSTextLayoutSectionsAttribute'
  'NSTextStorageDidProcessEditingNotification (NSString*)':
    'prefix': 'NSTextStorageDidProcessEditingNotification'
    'body': 'NSTextStorageDidProcessEditingNotification'
  'NSTextStorageWillProcessEditingNotification (NSString*)':
    'prefix': 'NSTextStorageWillProcessEditingNotification'
    'body': 'NSTextStorageWillProcessEditingNotification'
  'NSUnderlineColorAttributeName (NSString*)':
    'prefix': 'NSUnderlineColorAttributeName'
    'body': 'NSUnderlineColorAttributeName'
  'NSUnderlineStyleAttributeName (NSString*)':
    'prefix': 'NSUnderlineStyleAttributeName'
    'body': 'NSUnderlineStyleAttributeName'
  'NSVerticalGlyphFormAttributeName (NSString*)':
    'prefix': 'NSVerticalGlyphFormAttributeName'
    'body': 'NSVerticalGlyphFormAttributeName'
  'NSViewModeDocumentAttribute (NSString*)':
    'prefix': 'NSViewModeDocumentAttribute'
    'body': 'NSViewModeDocumentAttribute'
  'NSViewSizeDocumentAttribute (NSString*)':
    'prefix': 'NSViewSizeDocumentAttribute'
    'body': 'NSViewSizeDocumentAttribute'
  'NSViewZoomDocumentAttribute (NSString*)':
    'prefix': 'NSViewZoomDocumentAttribute'
    'body': 'NSViewZoomDocumentAttribute'
  'NSWritingDirectionAttributeName (NSString*)':
    'prefix': 'NSWritingDirectionAttributeName'
    'body': 'NSWritingDirectionAttributeName'
  'UIAccessibilityAnnouncementDidFinishNotification (NSString*)':
    'prefix': 'UIAccessibilityAnnouncementDidFinishNotification'
    'body': 'UIAccessibilityAnnouncementDidFinishNotification'
  'UIAccessibilityAnnouncementKeyStringValue (NSString*)':
    'prefix': 'UIAccessibilityAnnouncementKeyStringValue'
    'body': 'UIAccessibilityAnnouncementKeyStringValue'
  'UIAccessibilityAnnouncementKeyWasSuccessful (NSString*)':
    'prefix': 'UIAccessibilityAnnouncementKeyWasSuccessful'
    'body': 'UIAccessibilityAnnouncementKeyWasSuccessful'
  'UIAccessibilityAnnouncementNotification (UIAccessibilityNotifications)':
    'prefix': 'UIAccessibilityAnnouncementNotification'
    'body': 'UIAccessibilityAnnouncementNotification'
  'UIAccessibilityClosedCaptioningStatusDidChangeNotification (NSString*)':
    'prefix': 'UIAccessibilityClosedCaptioningStatusDidChangeNotification'
    'body': 'UIAccessibilityClosedCaptioningStatusDidChangeNotification'
  'UIAccessibilityGuidedAccessStatusDidChangeNotification (NSString*)':
    'prefix': 'UIAccessibilityGuidedAccessStatusDidChangeNotification'
    'body': 'UIAccessibilityGuidedAccessStatusDidChangeNotification'
  'UIAccessibilityInvertColorsStatusDidChangeNotification (NSString*)':
    'prefix': 'UIAccessibilityInvertColorsStatusDidChangeNotification'
    'body': 'UIAccessibilityInvertColorsStatusDidChangeNotification'
  'UIAccessibilityLayoutChangedNotification (UIAccessibilityNotifications)':
    'prefix': 'UIAccessibilityLayoutChangedNotification'
    'body': 'UIAccessibilityLayoutChangedNotification'
  'UIAccessibilityMonoAudioStatusDidChangeNotification (NSString*)':
    'prefix': 'UIAccessibilityMonoAudioStatusDidChangeNotification'
    'body': 'UIAccessibilityMonoAudioStatusDidChangeNotification'
  'UIAccessibilityPageScrolledNotification (UIAccessibilityNotifications)':
    'prefix': 'UIAccessibilityPageScrolledNotification'
    'body': 'UIAccessibilityPageScrolledNotification'
  'UIAccessibilityScreenChangedNotification (UIAccessibilityNotifications)':
    'prefix': 'UIAccessibilityScreenChangedNotification'
    'body': 'UIAccessibilityScreenChangedNotification'
  'UIAccessibilitySpeechAttributeLanguage (NSString*)':
    'prefix': 'UIAccessibilitySpeechAttributeLanguage'
    'body': 'UIAccessibilitySpeechAttributeLanguage'
  'UIAccessibilitySpeechAttributePitch (NSString*)':
    'prefix': 'UIAccessibilitySpeechAttributePitch'
    'body': 'UIAccessibilitySpeechAttributePitch'
  'UIAccessibilitySpeechAttributePunctuation (NSString*)':
    'prefix': 'UIAccessibilitySpeechAttributePunctuation'
    'body': 'UIAccessibilitySpeechAttributePunctuation'
  'UIAccessibilityTraitAdjustable (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitAdjustable'
    'body': 'UIAccessibilityTraitAdjustable'
  'UIAccessibilityTraitAllowsDirectInteraction (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitAllowsDirectInteraction'
    'body': 'UIAccessibilityTraitAllowsDirectInteraction'
  'UIAccessibilityTraitButton (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitButton'
    'body': 'UIAccessibilityTraitButton'
  'UIAccessibilityTraitCausesPageTurn (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitCausesPageTurn'
    'body': 'UIAccessibilityTraitCausesPageTurn'
  'UIAccessibilityTraitHeader (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitHeader'
    'body': 'UIAccessibilityTraitHeader'
  'UIAccessibilityTraitImage (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitImage'
    'body': 'UIAccessibilityTraitImage'
  'UIAccessibilityTraitKeyboardKey (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitKeyboardKey'
    'body': 'UIAccessibilityTraitKeyboardKey'
  'UIAccessibilityTraitLink (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitLink'
    'body': 'UIAccessibilityTraitLink'
  'UIAccessibilityTraitNone (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitNone'
    'body': 'UIAccessibilityTraitNone'
  'UIAccessibilityTraitNotEnabled (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitNotEnabled'
    'body': 'UIAccessibilityTraitNotEnabled'
  'UIAccessibilityTraitPlaysSound (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitPlaysSound'
    'body': 'UIAccessibilityTraitPlaysSound'
  'UIAccessibilityTraitSearchField (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitSearchField'
    'body': 'UIAccessibilityTraitSearchField'
  'UIAccessibilityTraitSelected (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitSelected'
    'body': 'UIAccessibilityTraitSelected'
  'UIAccessibilityTraitStartsMediaSession (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitStartsMediaSession'
    'body': 'UIAccessibilityTraitStartsMediaSession'
  'UIAccessibilityTraitStaticText (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitStaticText'
    'body': 'UIAccessibilityTraitStaticText'
  'UIAccessibilityTraitSummaryElement (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitSummaryElement'
    'body': 'UIAccessibilityTraitSummaryElement'
  'UIAccessibilityTraitUpdatesFrequently (UIAccessibilityTraits)':
    'prefix': 'UIAccessibilityTraitUpdatesFrequently'
    'body': 'UIAccessibilityTraitUpdatesFrequently'
  'UIAccessibilityVoiceOverStatusChanged (NSString*)':
    'prefix': 'UIAccessibilityVoiceOverStatusChanged'
    'body': 'UIAccessibilityVoiceOverStatusChanged'
  'UIActivityTypeAddToReadingList (NSString*)':
    'prefix': 'UIActivityTypeAddToReadingList'
    'body': 'UIActivityTypeAddToReadingList'
  'UIActivityTypeAirDrop (NSString*)':
    'prefix': 'UIActivityTypeAirDrop'
    'body': 'UIActivityTypeAirDrop'
  'UIActivityTypeAssignToContact (NSString*)':
    'prefix': 'UIActivityTypeAssignToContact'
    'body': 'UIActivityTypeAssignToContact'
  'UIActivityTypeCopyToPasteboard (NSString*)':
    'prefix': 'UIActivityTypeCopyToPasteboard'
    'body': 'UIActivityTypeCopyToPasteboard'
  'UIActivityTypeMail (NSString*)':
    'prefix': 'UIActivityTypeMail'
    'body': 'UIActivityTypeMail'
  'UIActivityTypeMessage (NSString*)':
    'prefix': 'UIActivityTypeMessage'
    'body': 'UIActivityTypeMessage'
  'UIActivityTypePostToFacebook (NSString*)':
    'prefix': 'UIActivityTypePostToFacebook'
    'body': 'UIActivityTypePostToFacebook'
  'UIActivityTypePostToFlickr (NSString*)':
    'prefix': 'UIActivityTypePostToFlickr'
    'body': 'UIActivityTypePostToFlickr'
  'UIActivityTypePostToTencentWeibo (NSString*)':
    'prefix': 'UIActivityTypePostToTencentWeibo'
    'body': 'UIActivityTypePostToTencentWeibo'
  'UIActivityTypePostToTwitter (NSString*)':
    'prefix': 'UIActivityTypePostToTwitter'
    'body': 'UIActivityTypePostToTwitter'
  'UIActivityTypePostToVimeo (NSString*)':
    'prefix': 'UIActivityTypePostToVimeo'
    'body': 'UIActivityTypePostToVimeo'
  'UIActivityTypePostToWeibo (NSString*)':
    'prefix': 'UIActivityTypePostToWeibo'
    'body': 'UIActivityTypePostToWeibo'
  'UIActivityTypePrint (NSString*)':
    'prefix': 'UIActivityTypePrint'
    'body': 'UIActivityTypePrint'
  'UIActivityTypeSaveToCameraRoll (NSString*)':
    'prefix': 'UIActivityTypeSaveToCameraRoll'
    'body': 'UIActivityTypeSaveToCameraRoll'
  'UIApplicationBackgroundFetchIntervalMinimum (NSTimeInterval)':
    'prefix': 'UIApplicationBackgroundFetchIntervalMinimum'
    'body': 'UIApplicationBackgroundFetchIntervalMinimum'
  'UIApplicationBackgroundFetchIntervalNever (NSTimeInterval)':
    'prefix': 'UIApplicationBackgroundFetchIntervalNever'
    'body': 'UIApplicationBackgroundFetchIntervalNever'
  'UIApplicationBackgroundRefreshStatusDidChangeNotification (NSString*)':
    'prefix': 'UIApplicationBackgroundRefreshStatusDidChangeNotification'
    'body': 'UIApplicationBackgroundRefreshStatusDidChangeNotification'
  'UIApplicationDidBecomeActiveNotification (NSString*)':
    'prefix': 'UIApplicationDidBecomeActiveNotification'
    'body': 'UIApplicationDidBecomeActiveNotification'
  'UIApplicationDidChangeStatusBarFrameNotification (NSString*)':
    'prefix': 'UIApplicationDidChangeStatusBarFrameNotification'
    'body': 'UIApplicationDidChangeStatusBarFrameNotification'
  'UIApplicationDidChangeStatusBarOrientationNotification (NSString*)':
    'prefix': 'UIApplicationDidChangeStatusBarOrientationNotification'
    'body': 'UIApplicationDidChangeStatusBarOrientationNotification'
  'UIApplicationDidEnterBackgroundNotification (NSString*)':
    'prefix': 'UIApplicationDidEnterBackgroundNotification'
    'body': 'UIApplicationDidEnterBackgroundNotification'
  'UIApplicationDidFinishLaunchingNotification (NSString*)':
    'prefix': 'UIApplicationDidFinishLaunchingNotification'
    'body': 'UIApplicationDidFinishLaunchingNotification'
  'UIApplicationDidReceiveMemoryWarningNotification (NSString*)':
    'prefix': 'UIApplicationDidReceiveMemoryWarningNotification'
    'body': 'UIApplicationDidReceiveMemoryWarningNotification'
  'UIApplicationInvalidInterfaceOrientationException (NSString*)':
    'prefix': 'UIApplicationInvalidInterfaceOrientationException'
    'body': 'UIApplicationInvalidInterfaceOrientationException'
  'UIApplicationLaunchOptionsAnnotationKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsAnnotationKey'
    'body': 'UIApplicationLaunchOptionsAnnotationKey'
  'UIApplicationLaunchOptionsBluetoothCentralsKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsBluetoothCentralsKey'
    'body': 'UIApplicationLaunchOptionsBluetoothCentralsKey'
  'UIApplicationLaunchOptionsBluetoothPeripheralsKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsBluetoothPeripheralsKey'
    'body': 'UIApplicationLaunchOptionsBluetoothPeripheralsKey'
  'UIApplicationLaunchOptionsLocalNotificationKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsLocalNotificationKey'
    'body': 'UIApplicationLaunchOptionsLocalNotificationKey'
  'UIApplicationLaunchOptionsLocationKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsLocationKey'
    'body': 'UIApplicationLaunchOptionsLocationKey'
  'UIApplicationLaunchOptionsNewsstandDownloadsKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsNewsstandDownloadsKey'
    'body': 'UIApplicationLaunchOptionsNewsstandDownloadsKey'
  'UIApplicationLaunchOptionsRemoteNotificationKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsRemoteNotificationKey'
    'body': 'UIApplicationLaunchOptionsRemoteNotificationKey'
  'UIApplicationLaunchOptionsSourceApplicationKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsSourceApplicationKey'
    'body': 'UIApplicationLaunchOptionsSourceApplicationKey'
  'UIApplicationLaunchOptionsURLKey (NSString*)':
    'prefix': 'UIApplicationLaunchOptionsURLKey'
    'body': 'UIApplicationLaunchOptionsURLKey'
  'UIApplicationProtectedDataDidBecomeAvailable (NSString*)':
    'prefix': 'UIApplicationProtectedDataDidBecomeAvailable'
    'body': 'UIApplicationProtectedDataDidBecomeAvailable'
  'UIApplicationProtectedDataWillBecomeUnavailable (NSString*)':
    'prefix': 'UIApplicationProtectedDataWillBecomeUnavailable'
    'body': 'UIApplicationProtectedDataWillBecomeUnavailable'
  'UIApplicationSignificantTimeChangeNotification (NSString*)':
    'prefix': 'UIApplicationSignificantTimeChangeNotification'
    'body': 'UIApplicationSignificantTimeChangeNotification'
  'UIApplicationStateRestorationBundleVersionKey (NSString*)':
    'prefix': 'UIApplicationStateRestorationBundleVersionKey'
    'body': 'UIApplicationStateRestorationBundleVersionKey'
  'UIApplicationStateRestorationSystemVersionKey (NSString*)':
    'prefix': 'UIApplicationStateRestorationSystemVersionKey'
    'body': 'UIApplicationStateRestorationSystemVersionKey'
  'UIApplicationStateRestorationTimestampKey (NSString*)':
    'prefix': 'UIApplicationStateRestorationTimestampKey'
    'body': 'UIApplicationStateRestorationTimestampKey'
  'UIApplicationStateRestorationUserInterfaceIdiomKey (NSString*)':
    'prefix': 'UIApplicationStateRestorationUserInterfaceIdiomKey'
    'body': 'UIApplicationStateRestorationUserInterfaceIdiomKey'
  'UIApplicationStatusBarFrameUserInfoKey (NSString*)':
    'prefix': 'UIApplicationStatusBarFrameUserInfoKey'
    'body': 'UIApplicationStatusBarFrameUserInfoKey'
  'UIApplicationStatusBarOrientationUserInfoKey (NSString*)':
    'prefix': 'UIApplicationStatusBarOrientationUserInfoKey'
    'body': 'UIApplicationStatusBarOrientationUserInfoKey'
  'UIApplicationUserDidTakeScreenshotNotification (NSString*)':
    'prefix': 'UIApplicationUserDidTakeScreenshotNotification'
    'body': 'UIApplicationUserDidTakeScreenshotNotification'
  'UIApplicationWillChangeStatusBarFrameNotification (NSString*)':
    'prefix': 'UIApplicationWillChangeStatusBarFrameNotification'
    'body': 'UIApplicationWillChangeStatusBarFrameNotification'
  'UIApplicationWillChangeStatusBarOrientationNotification (NSString*)':
    'prefix': 'UIApplicationWillChangeStatusBarOrientationNotification'
    'body': 'UIApplicationWillChangeStatusBarOrientationNotification'
  'UIApplicationWillEnterForegroundNotification (NSString*)':
    'prefix': 'UIApplicationWillEnterForegroundNotification'
    'body': 'UIApplicationWillEnterForegroundNotification'
  'UIApplicationWillResignActiveNotification (NSString*)':
    'prefix': 'UIApplicationWillResignActiveNotification'
    'body': 'UIApplicationWillResignActiveNotification'
  'UIApplicationWillTerminateNotification (NSString*)':
    'prefix': 'UIApplicationWillTerminateNotification'
    'body': 'UIApplicationWillTerminateNotification'
  'UIBackgroundTaskInvalid (UIBackgroundTaskIdentifier)':
    'prefix': 'UIBackgroundTaskInvalid'
    'body': 'UIBackgroundTaskInvalid'
  'UICollectionElementKindSectionFooter (NSString*)':
    'prefix': 'UICollectionElementKindSectionFooter'
    'body': 'UICollectionElementKindSectionFooter'
  'UICollectionElementKindSectionHeader (NSString*)':
    'prefix': 'UICollectionElementKindSectionHeader'
    'body': 'UICollectionElementKindSectionHeader'
  'UIContentSizeCategoryAccessibilityExtraExtraExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryAccessibilityExtraExtraExtraLarge'
    'body': 'UIContentSizeCategoryAccessibilityExtraExtraExtraLarge'
  'UIContentSizeCategoryAccessibilityExtraExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryAccessibilityExtraExtraLarge'
    'body': 'UIContentSizeCategoryAccessibilityExtraExtraLarge'
  'UIContentSizeCategoryAccessibilityExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryAccessibilityExtraLarge'
    'body': 'UIContentSizeCategoryAccessibilityExtraLarge'
  'UIContentSizeCategoryAccessibilityLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryAccessibilityLarge'
    'body': 'UIContentSizeCategoryAccessibilityLarge'
  'UIContentSizeCategoryAccessibilityMedium (NSString*)':
    'prefix': 'UIContentSizeCategoryAccessibilityMedium'
    'body': 'UIContentSizeCategoryAccessibilityMedium'
  'UIContentSizeCategoryDidChangeNotification (NSString*)':
    'prefix': 'UIContentSizeCategoryDidChangeNotification'
    'body': 'UIContentSizeCategoryDidChangeNotification'
  'UIContentSizeCategoryExtraExtraExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryExtraExtraExtraLarge'
    'body': 'UIContentSizeCategoryExtraExtraExtraLarge'
  'UIContentSizeCategoryExtraExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryExtraExtraLarge'
    'body': 'UIContentSizeCategoryExtraExtraLarge'
  'UIContentSizeCategoryExtraLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryExtraLarge'
    'body': 'UIContentSizeCategoryExtraLarge'
  'UIContentSizeCategoryExtraSmall (NSString*)':
    'prefix': 'UIContentSizeCategoryExtraSmall'
    'body': 'UIContentSizeCategoryExtraSmall'
  'UIContentSizeCategoryLarge (NSString*)':
    'prefix': 'UIContentSizeCategoryLarge'
    'body': 'UIContentSizeCategoryLarge'
  'UIContentSizeCategoryMedium (NSString*)':
    'prefix': 'UIContentSizeCategoryMedium'
    'body': 'UIContentSizeCategoryMedium'
  'UIContentSizeCategoryNewValueKey (NSString*)':
    'prefix': 'UIContentSizeCategoryNewValueKey'
    'body': 'UIContentSizeCategoryNewValueKey'
  'UIContentSizeCategorySmall (NSString*)':
    'prefix': 'UIContentSizeCategorySmall'
    'body': 'UIContentSizeCategorySmall'
  'UIDeviceBatteryLevelDidChangeNotification (NSString*)':
    'prefix': 'UIDeviceBatteryLevelDidChangeNotification'
    'body': 'UIDeviceBatteryLevelDidChangeNotification'
  'UIDeviceBatteryStateDidChangeNotification (NSString*)':
    'prefix': 'UIDeviceBatteryStateDidChangeNotification'
    'body': 'UIDeviceBatteryStateDidChangeNotification'
  'UIDeviceOrientationDidChangeNotification (NSString*)':
    'prefix': 'UIDeviceOrientationDidChangeNotification'
    'body': 'UIDeviceOrientationDidChangeNotification'
  'UIDeviceProximityStateDidChangeNotification (NSString*)':
    'prefix': 'UIDeviceProximityStateDidChangeNotification'
    'body': 'UIDeviceProximityStateDidChangeNotification'
  'UIDocumentStateChangedNotification (NSString*)':
    'prefix': 'UIDocumentStateChangedNotification'
    'body': 'UIDocumentStateChangedNotification'
  'UIEdgeInsetsZero (UIEdgeInsets)':
    'prefix': 'UIEdgeInsetsZero'
    'body': 'UIEdgeInsetsZero'
  'UIFontDescriptorCascadeListAttribute (NSString*)':
    'prefix': 'UIFontDescriptorCascadeListAttribute'
    'body': 'UIFontDescriptorCascadeListAttribute'
  'UIFontDescriptorCharacterSetAttribute (NSString*)':
    'prefix': 'UIFontDescriptorCharacterSetAttribute'
    'body': 'UIFontDescriptorCharacterSetAttribute'
  'UIFontDescriptorFaceAttribute (NSString*)':
    'prefix': 'UIFontDescriptorFaceAttribute'
    'body': 'UIFontDescriptorFaceAttribute'
  'UIFontDescriptorFamilyAttribute (NSString*)':
    'prefix': 'UIFontDescriptorFamilyAttribute'
    'body': 'UIFontDescriptorFamilyAttribute'
  'UIFontDescriptorFeatureSettingsAttribute (NSString*)':
    'prefix': 'UIFontDescriptorFeatureSettingsAttribute'
    'body': 'UIFontDescriptorFeatureSettingsAttribute'
  'UIFontDescriptorFixedAdvanceAttribute (NSString*)':
    'prefix': 'UIFontDescriptorFixedAdvanceAttribute'
    'body': 'UIFontDescriptorFixedAdvanceAttribute'
  'UIFontDescriptorMatrixAttribute (NSString*)':
    'prefix': 'UIFontDescriptorMatrixAttribute'
    'body': 'UIFontDescriptorMatrixAttribute'
  'UIFontDescriptorNameAttribute (NSString*)':
    'prefix': 'UIFontDescriptorNameAttribute'
    'body': 'UIFontDescriptorNameAttribute'
  'UIFontDescriptorSizeAttribute (NSString*)':
    'prefix': 'UIFontDescriptorSizeAttribute'
    'body': 'UIFontDescriptorSizeAttribute'
  'UIFontDescriptorTextStyleAttribute (NSString*)':
    'prefix': 'UIFontDescriptorTextStyleAttribute'
    'body': 'UIFontDescriptorTextStyleAttribute'
  'UIFontDescriptorTraitsAttribute (NSString*)':
    'prefix': 'UIFontDescriptorTraitsAttribute'
    'body': 'UIFontDescriptorTraitsAttribute'
  'UIFontDescriptorVisibleNameAttribute (NSString*)':
    'prefix': 'UIFontDescriptorVisibleNameAttribute'
    'body': 'UIFontDescriptorVisibleNameAttribute'
  'UIFontFeatureSelectorIdentifierKey (NSString*)':
    'prefix': 'UIFontFeatureSelectorIdentifierKey'
    'body': 'UIFontFeatureSelectorIdentifierKey'
  'UIFontFeatureTypeIdentifierKey (NSString*)':
    'prefix': 'UIFontFeatureTypeIdentifierKey'
    'body': 'UIFontFeatureTypeIdentifierKey'
  'UIFontSlantTrait (NSString*)':
    'prefix': 'UIFontSlantTrait'
    'body': 'UIFontSlantTrait'
  'UIFontSymbolicTrait (NSString*)':
    'prefix': 'UIFontSymbolicTrait'
    'body': 'UIFontSymbolicTrait'
  'UIFontTextStyleBody (NSString*)':
    'prefix': 'UIFontTextStyleBody'
    'body': 'UIFontTextStyleBody'
  'UIFontTextStyleCaption1 (NSString*)':
    'prefix': 'UIFontTextStyleCaption1'
    'body': 'UIFontTextStyleCaption1'
  'UIFontTextStyleCaption2 (NSString*)':
    'prefix': 'UIFontTextStyleCaption2'
    'body': 'UIFontTextStyleCaption2'
  'UIFontTextStyleFootnote (NSString*)':
    'prefix': 'UIFontTextStyleFootnote'
    'body': 'UIFontTextStyleFootnote'
  'UIFontTextStyleHeadline (NSString*)':
    'prefix': 'UIFontTextStyleHeadline'
    'body': 'UIFontTextStyleHeadline'
  'UIFontTextStyleSubheadline (NSString*)':
    'prefix': 'UIFontTextStyleSubheadline'
    'body': 'UIFontTextStyleSubheadline'
  'UIFontWeightTrait (NSString*)':
    'prefix': 'UIFontWeightTrait'
    'body': 'UIFontWeightTrait'
  'UIFontWidthTrait (NSString*)':
    'prefix': 'UIFontWidthTrait'
    'body': 'UIFontWidthTrait'
  'UIImagePickerControllerCropRect (NSString*)':
    'prefix': 'UIImagePickerControllerCropRect'
    'body': 'UIImagePickerControllerCropRect'
  'UIImagePickerControllerEditedImage (NSString*)':
    'prefix': 'UIImagePickerControllerEditedImage'
    'body': 'UIImagePickerControllerEditedImage'
  'UIImagePickerControllerMediaMetadata (NSString*)':
    'prefix': 'UIImagePickerControllerMediaMetadata'
    'body': 'UIImagePickerControllerMediaMetadata'
  'UIImagePickerControllerMediaType (NSString*)':
    'prefix': 'UIImagePickerControllerMediaType'
    'body': 'UIImagePickerControllerMediaType'
  'UIImagePickerControllerMediaURL (NSString*)':
    'prefix': 'UIImagePickerControllerMediaURL'
    'body': 'UIImagePickerControllerMediaURL'
  'UIImagePickerControllerOriginalImage (NSString*)':
    'prefix': 'UIImagePickerControllerOriginalImage'
    'body': 'UIImagePickerControllerOriginalImage'
  'UIImagePickerControllerReferenceURL (NSString*)':
    'prefix': 'UIImagePickerControllerReferenceURL'
    'body': 'UIImagePickerControllerReferenceURL'
  'UIKeyInputDownArrow (NSString*)':
    'prefix': 'UIKeyInputDownArrow'
    'body': 'UIKeyInputDownArrow'
  'UIKeyInputEscape (NSString*)':
    'prefix': 'UIKeyInputEscape'
    'body': 'UIKeyInputEscape'
  'UIKeyInputLeftArrow (NSString*)':
    'prefix': 'UIKeyInputLeftArrow'
    'body': 'UIKeyInputLeftArrow'
  'UIKeyInputRightArrow (NSString*)':
    'prefix': 'UIKeyInputRightArrow'
    'body': 'UIKeyInputRightArrow'
  'UIKeyInputUpArrow (NSString*)':
    'prefix': 'UIKeyInputUpArrow'
    'body': 'UIKeyInputUpArrow'
  'UIKeyboardAnimationCurveUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardAnimationCurveUserInfoKey'
    'body': 'UIKeyboardAnimationCurveUserInfoKey'
  'UIKeyboardAnimationDurationUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardAnimationDurationUserInfoKey'
    'body': 'UIKeyboardAnimationDurationUserInfoKey'
  'UIKeyboardBoundsUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardBoundsUserInfoKey'
    'body': 'UIKeyboardBoundsUserInfoKey'
  'UIKeyboardCenterBeginUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardCenterBeginUserInfoKey'
    'body': 'UIKeyboardCenterBeginUserInfoKey'
  'UIKeyboardCenterEndUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardCenterEndUserInfoKey'
    'body': 'UIKeyboardCenterEndUserInfoKey'
  'UIKeyboardDidChangeFrameNotification (NSString*)':
    'prefix': 'UIKeyboardDidChangeFrameNotification'
    'body': 'UIKeyboardDidChangeFrameNotification'
  'UIKeyboardDidHideNotification (NSString*)':
    'prefix': 'UIKeyboardDidHideNotification'
    'body': 'UIKeyboardDidHideNotification'
  'UIKeyboardDidShowNotification (NSString*)':
    'prefix': 'UIKeyboardDidShowNotification'
    'body': 'UIKeyboardDidShowNotification'
  'UIKeyboardFrameBeginUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardFrameBeginUserInfoKey'
    'body': 'UIKeyboardFrameBeginUserInfoKey'
  'UIKeyboardFrameEndUserInfoKey (NSString*)':
    'prefix': 'UIKeyboardFrameEndUserInfoKey'
    'body': 'UIKeyboardFrameEndUserInfoKey'
  'UIKeyboardWillChangeFrameNotification (NSString*)':
    'prefix': 'UIKeyboardWillChangeFrameNotification'
    'body': 'UIKeyboardWillChangeFrameNotification'
  'UIKeyboardWillHideNotification (NSString*)':
    'prefix': 'UIKeyboardWillHideNotification'
    'body': 'UIKeyboardWillHideNotification'
  'UIKeyboardWillShowNotification (NSString*)':
    'prefix': 'UIKeyboardWillShowNotification'
    'body': 'UIKeyboardWillShowNotification'
  'UILayoutFittingCompressedSize (CGSize)':
    'prefix': 'UILayoutFittingCompressedSize'
    'body': 'UILayoutFittingCompressedSize'
  'UILayoutFittingExpandedSize (CGSize)':
    'prefix': 'UILayoutFittingExpandedSize'
    'body': 'UILayoutFittingExpandedSize'
  'UILocalNotificationDefaultSoundName (NSString*)':
    'prefix': 'UILocalNotificationDefaultSoundName'
    'body': 'UILocalNotificationDefaultSoundName'
  'UIMenuControllerDidHideMenuNotification (NSString*)':
    'prefix': 'UIMenuControllerDidHideMenuNotification'
    'body': 'UIMenuControllerDidHideMenuNotification'
  'UIMenuControllerDidShowMenuNotification (NSString*)':
    'prefix': 'UIMenuControllerDidShowMenuNotification'
    'body': 'UIMenuControllerDidShowMenuNotification'
  'UIMenuControllerMenuFrameDidChangeNotification (NSString*)':
    'prefix': 'UIMenuControllerMenuFrameDidChangeNotification'
    'body': 'UIMenuControllerMenuFrameDidChangeNotification'
  'UIMenuControllerWillHideMenuNotification (NSString*)':
    'prefix': 'UIMenuControllerWillHideMenuNotification'
    'body': 'UIMenuControllerWillHideMenuNotification'
  'UIMenuControllerWillShowMenuNotification (NSString*)':
    'prefix': 'UIMenuControllerWillShowMenuNotification'
    'body': 'UIMenuControllerWillShowMenuNotification'
  'UIMinimumKeepAliveTimeout (NSTimeInterval)':
    'prefix': 'UIMinimumKeepAliveTimeout'
    'body': 'UIMinimumKeepAliveTimeout'
  'UINavigationControllerHideShowBarDuration (CGFloat)':
    'prefix': 'UINavigationControllerHideShowBarDuration'
    'body': 'UINavigationControllerHideShowBarDuration'
  'UINibExternalObjects (NSString*)':
    'prefix': 'UINibExternalObjects'
    'body': 'UINibExternalObjects'
  'UINibProxiedObjectsKey (NSString*)':
    'prefix': 'UINibProxiedObjectsKey'
    'body': 'UINibProxiedObjectsKey'
  'UIOffsetZero (UIOffset)':
    'prefix': 'UIOffsetZero'
    'body': 'UIOffsetZero'
  'UIPageViewControllerOptionInterPageSpacingKey (NSString*)':
    'prefix': 'UIPageViewControllerOptionInterPageSpacingKey'
    'body': 'UIPageViewControllerOptionInterPageSpacingKey'
  'UIPageViewControllerOptionSpineLocationKey (NSString*)':
    'prefix': 'UIPageViewControllerOptionSpineLocationKey'
    'body': 'UIPageViewControllerOptionSpineLocationKey'
  'UIPasteboardChangedNotification (NSString*)':
    'prefix': 'UIPasteboardChangedNotification'
    'body': 'UIPasteboardChangedNotification'
  'UIPasteboardChangedTypesAddedKey (NSString*)':
    'prefix': 'UIPasteboardChangedTypesAddedKey'
    'body': 'UIPasteboardChangedTypesAddedKey'
  'UIPasteboardChangedTypesRemovedKey (NSString*)':
    'prefix': 'UIPasteboardChangedTypesRemovedKey'
    'body': 'UIPasteboardChangedTypesRemovedKey'
  'UIPasteboardNameFind (NSString*)':
    'prefix': 'UIPasteboardNameFind'
    'body': 'UIPasteboardNameFind'
  'UIPasteboardNameGeneral (NSString*)':
    'prefix': 'UIPasteboardNameGeneral'
    'body': 'UIPasteboardNameGeneral'
  'UIPasteboardRemovedNotification (NSString*)':
    'prefix': 'UIPasteboardRemovedNotification'
    'body': 'UIPasteboardRemovedNotification'
  'UIPasteboardTypeListColor (NSArray*)':
    'prefix': 'UIPasteboardTypeListColor'
    'body': 'UIPasteboardTypeListColor'
  'UIPasteboardTypeListImage (NSArray*)':
    'prefix': 'UIPasteboardTypeListImage'
    'body': 'UIPasteboardTypeListImage'
  'UIPasteboardTypeListString (NSArray*)':
    'prefix': 'UIPasteboardTypeListString'
    'body': 'UIPasteboardTypeListString'
  'UIPasteboardTypeListURL (NSArray*)':
    'prefix': 'UIPasteboardTypeListURL'
    'body': 'UIPasteboardTypeListURL'
  'UIPrintErrorDomain (NSString*)':
    'prefix': 'UIPrintErrorDomain'
    'body': 'UIPrintErrorDomain'
  'UIScreenBrightnessDidChangeNotification (NSString*)':
    'prefix': 'UIScreenBrightnessDidChangeNotification'
    'body': 'UIScreenBrightnessDidChangeNotification'
  'UIScreenDidConnectNotification (NSString*)':
    'prefix': 'UIScreenDidConnectNotification'
    'body': 'UIScreenDidConnectNotification'
  'UIScreenDidDisconnectNotification (NSString*)':
    'prefix': 'UIScreenDidDisconnectNotification'
    'body': 'UIScreenDidDisconnectNotification'
  'UIScreenModeDidChangeNotification (NSString*)':
    'prefix': 'UIScreenModeDidChangeNotification'
    'body': 'UIScreenModeDidChangeNotification'
  'UIScrollViewDecelerationRateFast (CGFloat)':
    'prefix': 'UIScrollViewDecelerationRateFast'
    'body': 'UIScrollViewDecelerationRateFast'
  'UIScrollViewDecelerationRateNormal (CGFloat)':
    'prefix': 'UIScrollViewDecelerationRateNormal'
    'body': 'UIScrollViewDecelerationRateNormal'
  'UIStateRestorationViewControllerStoryboardKey (NSString*)':
    'prefix': 'UIStateRestorationViewControllerStoryboardKey'
    'body': 'UIStateRestorationViewControllerStoryboardKey'
  'UITableViewAutomaticDimension (CGFloat)':
    'prefix': 'UITableViewAutomaticDimension'
    'body': 'UITableViewAutomaticDimension'
  'UITableViewIndexSearch (NSString*)':
    'prefix': 'UITableViewIndexSearch'
    'body': 'UITableViewIndexSearch'
  'UITableViewSelectionDidChangeNotification (NSString*)':
    'prefix': 'UITableViewSelectionDidChangeNotification'
    'body': 'UITableViewSelectionDidChangeNotification'
  'UITextAttributeFont (NSString*)':
    'prefix': 'UITextAttributeFont'
    'body': 'UITextAttributeFont'
  'UITextAttributeTextColor (NSString*)':
    'prefix': 'UITextAttributeTextColor'
    'body': 'UITextAttributeTextColor'
  'UITextAttributeTextShadowColor (NSString*)':
    'prefix': 'UITextAttributeTextShadowColor'
    'body': 'UITextAttributeTextShadowColor'
  'UITextAttributeTextShadowOffset (NSString*)':
    'prefix': 'UITextAttributeTextShadowOffset'
    'body': 'UITextAttributeTextShadowOffset'
  'UITextFieldTextDidBeginEditingNotification (NSString*)':
    'prefix': 'UITextFieldTextDidBeginEditingNotification'
    'body': 'UITextFieldTextDidBeginEditingNotification'
  'UITextFieldTextDidChangeNotification (NSString*)':
    'prefix': 'UITextFieldTextDidChangeNotification'
    'body': 'UITextFieldTextDidChangeNotification'
  'UITextFieldTextDidEndEditingNotification (NSString*)':
    'prefix': 'UITextFieldTextDidEndEditingNotification'
    'body': 'UITextFieldTextDidEndEditingNotification'
  'UITextInputCurrentInputModeDidChangeNotification (NSString*)':
    'prefix': 'UITextInputCurrentInputModeDidChangeNotification'
    'body': 'UITextInputCurrentInputModeDidChangeNotification'
  'UITextInputTextBackgroundColorKey (NSString*)':
    'prefix': 'UITextInputTextBackgroundColorKey'
    'body': 'UITextInputTextBackgroundColorKey'
  'UITextInputTextColorKey (NSString*)':
    'prefix': 'UITextInputTextColorKey'
    'body': 'UITextInputTextColorKey'
  'UITextInputTextFontKey (NSString*)':
    'prefix': 'UITextInputTextFontKey'
    'body': 'UITextInputTextFontKey'
  'UITextViewTextDidBeginEditingNotification (NSString*)':
    'prefix': 'UITextViewTextDidBeginEditingNotification'
    'body': 'UITextViewTextDidBeginEditingNotification'
  'UITextViewTextDidChangeNotification (NSString*)':
    'prefix': 'UITextViewTextDidChangeNotification'
    'body': 'UITextViewTextDidChangeNotification'
  'UITextViewTextDidEndEditingNotification (NSString*)':
    'prefix': 'UITextViewTextDidEndEditingNotification'
    'body': 'UITextViewTextDidEndEditingNotification'
  'UITrackingRunLoopMode (NSString*)':
    'prefix': 'UITrackingRunLoopMode'
    'body': 'UITrackingRunLoopMode'
  'UITransitionContextFromViewControllerKey (NSString*)':
    'prefix': 'UITransitionContextFromViewControllerKey'
    'body': 'UITransitionContextFromViewControllerKey'
  'UITransitionContextToViewControllerKey (NSString*)':
    'prefix': 'UITransitionContextToViewControllerKey'
    'body': 'UITransitionContextToViewControllerKey'
  'UIViewControllerHierarchyInconsistencyException (NSString*)':
    'prefix': 'UIViewControllerHierarchyInconsistencyException'
    'body': 'UIViewControllerHierarchyInconsistencyException'
  'UIViewNoIntrinsicMetric (CGFloat)':
    'prefix': 'UIViewNoIntrinsicMetric'
    'body': 'UIViewNoIntrinsicMetric'
  'UIWindowDidBecomeHiddenNotification (NSString*)':
    'prefix': 'UIWindowDidBecomeHiddenNotification'
    'body': 'UIWindowDidBecomeHiddenNotification'
  'UIWindowDidBecomeKeyNotification (NSString*)':
    'prefix': 'UIWindowDidBecomeKeyNotification'
    'body': 'UIWindowDidBecomeKeyNotification'
  'UIWindowDidBecomeVisibleNotification (NSString*)':
    'prefix': 'UIWindowDidBecomeVisibleNotification'
    'body': 'UIWindowDidBecomeVisibleNotification'
  'UIWindowDidResignKeyNotification (NSString*)':
    'prefix': 'UIWindowDidResignKeyNotification'
    'body': 'UIWindowDidResignKeyNotification'
  'UIWindowLevelAlert (UIWindowLevel)':
    'prefix': 'UIWindowLevelAlert'
    'body': 'UIWindowLevelAlert'
  'UIWindowLevelNormal (UIWindowLevel)':
    'prefix': 'UIWindowLevelNormal'
    'body': 'UIWindowLevelNormal'
  'UIWindowLevelStatusBar (UIWindowLevel)':
    'prefix': 'UIWindowLevelStatusBar'
    'body': 'UIWindowLevelStatusBar'
  'NSAttachmentCharacter (65532)':
    'prefix': 'NSAttachmentCharacter'
    'body': 'NSAttachmentCharacter'
  'NSControlCharacterContainerBreakAction (32)':
    'prefix': 'NSControlCharacterContainerBreakAction'
    'body': 'NSControlCharacterContainerBreakAction'
  'NSControlCharacterHorizontalTabAction (4)':
    'prefix': 'NSControlCharacterHorizontalTabAction'
    'body': 'NSControlCharacterHorizontalTabAction'
  'NSControlCharacterLineBreakAction (8)':
    'prefix': 'NSControlCharacterLineBreakAction'
    'body': 'NSControlCharacterLineBreakAction'
  'NSControlCharacterParagraphBreakAction (16)':
    'prefix': 'NSControlCharacterParagraphBreakAction'
    'body': 'NSControlCharacterParagraphBreakAction'
  'NSControlCharacterWhitespaceAction (2)':
    'prefix': 'NSControlCharacterWhitespaceAction'
    'body': 'NSControlCharacterWhitespaceAction'
  'NSControlCharacterZeroAdvancementAction (1)':
    'prefix': 'NSControlCharacterZeroAdvancementAction'
    'body': 'NSControlCharacterZeroAdvancementAction'
  'NSGlyphPropertyControlCharacter (2)':
    'prefix': 'NSGlyphPropertyControlCharacter'
    'body': 'NSGlyphPropertyControlCharacter'
  'NSGlyphPropertyElastic (4)':
    'prefix': 'NSGlyphPropertyElastic'
    'body': 'NSGlyphPropertyElastic'
  'NSGlyphPropertyNonBaseCharacter (8)':
    'prefix': 'NSGlyphPropertyNonBaseCharacter'
    'body': 'NSGlyphPropertyNonBaseCharacter'
  'NSGlyphPropertyNull (1)':
    'prefix': 'NSGlyphPropertyNull'
    'body': 'NSGlyphPropertyNull'
  'NSLayoutAttributeBaseline (11)':
    'prefix': 'NSLayoutAttributeBaseline'
    'body': 'NSLayoutAttributeBaseline'
  'NSLayoutAttributeBottom (4)':
    'prefix': 'NSLayoutAttributeBottom'
    'body': 'NSLayoutAttributeBottom'
  'NSLayoutAttributeCenterX (9)':
    'prefix': 'NSLayoutAttributeCenterX'
    'body': 'NSLayoutAttributeCenterX'
  'NSLayoutAttributeCenterY (10)':
    'prefix': 'NSLayoutAttributeCenterY'
    'body': 'NSLayoutAttributeCenterY'
  'NSLayoutAttributeHeight (8)':
    'prefix': 'NSLayoutAttributeHeight'
    'body': 'NSLayoutAttributeHeight'
  'NSLayoutAttributeLeading (5)':
    'prefix': 'NSLayoutAttributeLeading'
    'body': 'NSLayoutAttributeLeading'
  'NSLayoutAttributeLeft (1)':
    'prefix': 'NSLayoutAttributeLeft'
    'body': 'NSLayoutAttributeLeft'
  'NSLayoutAttributeNotAnAttribute (0)':
    'prefix': 'NSLayoutAttributeNotAnAttribute'
    'body': 'NSLayoutAttributeNotAnAttribute'
  'NSLayoutAttributeRight (2)':
    'prefix': 'NSLayoutAttributeRight'
    'body': 'NSLayoutAttributeRight'
  'NSLayoutAttributeTop (3)':
    'prefix': 'NSLayoutAttributeTop'
    'body': 'NSLayoutAttributeTop'
  'NSLayoutAttributeTrailing (6)':
    'prefix': 'NSLayoutAttributeTrailing'
    'body': 'NSLayoutAttributeTrailing'
  'NSLayoutAttributeWidth (7)':
    'prefix': 'NSLayoutAttributeWidth'
    'body': 'NSLayoutAttributeWidth'
  'NSLayoutFormatAlignAllBaseline (2048)':
    'prefix': 'NSLayoutFormatAlignAllBaseline'
    'body': 'NSLayoutFormatAlignAllBaseline'
  'NSLayoutFormatAlignAllBottom (16)':
    'prefix': 'NSLayoutFormatAlignAllBottom'
    'body': 'NSLayoutFormatAlignAllBottom'
  'NSLayoutFormatAlignAllCenterX (512)':
    'prefix': 'NSLayoutFormatAlignAllCenterX'
    'body': 'NSLayoutFormatAlignAllCenterX'
  'NSLayoutFormatAlignAllCenterY (1024)':
    'prefix': 'NSLayoutFormatAlignAllCenterY'
    'body': 'NSLayoutFormatAlignAllCenterY'
  'NSLayoutFormatAlignAllLeading (32)':
    'prefix': 'NSLayoutFormatAlignAllLeading'
    'body': 'NSLayoutFormatAlignAllLeading'
  'NSLayoutFormatAlignAllLeft (2)':
    'prefix': 'NSLayoutFormatAlignAllLeft'
    'body': 'NSLayoutFormatAlignAllLeft'
  'NSLayoutFormatAlignAllRight (4)':
    'prefix': 'NSLayoutFormatAlignAllRight'
    'body': 'NSLayoutFormatAlignAllRight'
  'NSLayoutFormatAlignAllTop (8)':
    'prefix': 'NSLayoutFormatAlignAllTop'
    'body': 'NSLayoutFormatAlignAllTop'
  'NSLayoutFormatAlignAllTrailing (64)':
    'prefix': 'NSLayoutFormatAlignAllTrailing'
    'body': 'NSLayoutFormatAlignAllTrailing'
  'NSLayoutFormatAlignmentMask (65535)':
    'prefix': 'NSLayoutFormatAlignmentMask'
    'body': 'NSLayoutFormatAlignmentMask'
  'NSLayoutFormatDirectionLeadingToTrailing (0)':
    'prefix': 'NSLayoutFormatDirectionLeadingToTrailing'
    'body': 'NSLayoutFormatDirectionLeadingToTrailing'
  'NSLayoutFormatDirectionLeftToRight (65536)':
    'prefix': 'NSLayoutFormatDirectionLeftToRight'
    'body': 'NSLayoutFormatDirectionLeftToRight'
  'NSLayoutFormatDirectionMask (196608)':
    'prefix': 'NSLayoutFormatDirectionMask'
    'body': 'NSLayoutFormatDirectionMask'
  'NSLayoutFormatDirectionRightToLeft (131072)':
    'prefix': 'NSLayoutFormatDirectionRightToLeft'
    'body': 'NSLayoutFormatDirectionRightToLeft'
  'NSLayoutRelationEqual (0)':
    'prefix': 'NSLayoutRelationEqual'
    'body': 'NSLayoutRelationEqual'
  'NSLayoutRelationGreaterThanOrEqual (1)':
    'prefix': 'NSLayoutRelationGreaterThanOrEqual'
    'body': 'NSLayoutRelationGreaterThanOrEqual'
  'NSLayoutRelationLessThanOrEqual (-1)':
    'prefix': 'NSLayoutRelationLessThanOrEqual'
    'body': 'NSLayoutRelationLessThanOrEqual'
  'NSLineBreakByCharWrapping (1)':
    'prefix': 'NSLineBreakByCharWrapping'
    'body': 'NSLineBreakByCharWrapping'
  'NSLineBreakByClipping (2)':
    'prefix': 'NSLineBreakByClipping'
    'body': 'NSLineBreakByClipping'
  'NSLineBreakByTruncatingHead (3)':
    'prefix': 'NSLineBreakByTruncatingHead'
    'body': 'NSLineBreakByTruncatingHead'
  'NSLineBreakByTruncatingMiddle (5)':
    'prefix': 'NSLineBreakByTruncatingMiddle'
    'body': 'NSLineBreakByTruncatingMiddle'
  'NSLineBreakByTruncatingTail (4)':
    'prefix': 'NSLineBreakByTruncatingTail'
    'body': 'NSLineBreakByTruncatingTail'
  'NSLineBreakByWordWrapping (0)':
    'prefix': 'NSLineBreakByWordWrapping'
    'body': 'NSLineBreakByWordWrapping'
  'NSStringDrawingTruncatesLastVisibleLine (32)':
    'prefix': 'NSStringDrawingTruncatesLastVisibleLine'
    'body': 'NSStringDrawingTruncatesLastVisibleLine'
  'NSStringDrawingUsesDeviceMetrics (8)':
    'prefix': 'NSStringDrawingUsesDeviceMetrics'
    'body': 'NSStringDrawingUsesDeviceMetrics'
  'NSStringDrawingUsesFontLeading (2)':
    'prefix': 'NSStringDrawingUsesFontLeading'
    'body': 'NSStringDrawingUsesFontLeading'
  'NSStringDrawingUsesLineFragmentOrigin (1)':
    'prefix': 'NSStringDrawingUsesLineFragmentOrigin'
    'body': 'NSStringDrawingUsesLineFragmentOrigin'
  'NSTextAlignmentCenter (1)':
    'prefix': 'NSTextAlignmentCenter'
    'body': 'NSTextAlignmentCenter'
  'NSTextAlignmentJustified (3)':
    'prefix': 'NSTextAlignmentJustified'
    'body': 'NSTextAlignmentJustified'
  'NSTextAlignmentLeft (0)':
    'prefix': 'NSTextAlignmentLeft'
    'body': 'NSTextAlignmentLeft'
  'NSTextAlignmentNatural (4)':
    'prefix': 'NSTextAlignmentNatural'
    'body': 'NSTextAlignmentNatural'
  'NSTextAlignmentRight (2)':
    'prefix': 'NSTextAlignmentRight'
    'body': 'NSTextAlignmentRight'
  'NSTextLayoutOrientationHorizontal (0)':
    'prefix': 'NSTextLayoutOrientationHorizontal'
    'body': 'NSTextLayoutOrientationHorizontal'
  'NSTextLayoutOrientationVertical (1)':
    'prefix': 'NSTextLayoutOrientationVertical'
    'body': 'NSTextLayoutOrientationVertical'
  'NSTextStorageEditedAttributes (1)':
    'prefix': 'NSTextStorageEditedAttributes'
    'body': 'NSTextStorageEditedAttributes'
  'NSTextStorageEditedCharacters (2)':
    'prefix': 'NSTextStorageEditedCharacters'
    'body': 'NSTextStorageEditedCharacters'
  'NSTextWritingDirectionEmbedding (0)':
    'prefix': 'NSTextWritingDirectionEmbedding'
    'body': 'NSTextWritingDirectionEmbedding'
  'NSTextWritingDirectionOverride (2)':
    'prefix': 'NSTextWritingDirectionOverride'
    'body': 'NSTextWritingDirectionOverride'
  'NSUnderlineByWord (32768)':
    'prefix': 'NSUnderlineByWord'
    'body': 'NSUnderlineByWord'
  'NSUnderlinePatternDash (512)':
    'prefix': 'NSUnderlinePatternDash'
    'body': 'NSUnderlinePatternDash'
  'NSUnderlinePatternDashDot (768)':
    'prefix': 'NSUnderlinePatternDashDot'
    'body': 'NSUnderlinePatternDashDot'
  'NSUnderlinePatternDashDotDot (1024)':
    'prefix': 'NSUnderlinePatternDashDotDot'
    'body': 'NSUnderlinePatternDashDotDot'
  'NSUnderlinePatternDot (256)':
    'prefix': 'NSUnderlinePatternDot'
    'body': 'NSUnderlinePatternDot'
  'NSUnderlinePatternSolid (0)':
    'prefix': 'NSUnderlinePatternSolid'
    'body': 'NSUnderlinePatternSolid'
  'NSUnderlineStyleDouble (9)':
    'prefix': 'NSUnderlineStyleDouble'
    'body': 'NSUnderlineStyleDouble'
  'NSUnderlineStyleNone (0)':
    'prefix': 'NSUnderlineStyleNone'
    'body': 'NSUnderlineStyleNone'
  'NSUnderlineStyleSingle (1)':
    'prefix': 'NSUnderlineStyleSingle'
    'body': 'NSUnderlineStyleSingle'
  'NSUnderlineStyleThick (2)':
    'prefix': 'NSUnderlineStyleThick'
    'body': 'NSUnderlineStyleThick'
  'NSWritingDirectionLeftToRight (0)':
    'prefix': 'NSWritingDirectionLeftToRight'
    'body': 'NSWritingDirectionLeftToRight'
  'NSWritingDirectionNatural (-1)':
    'prefix': 'NSWritingDirectionNatural'
    'body': 'NSWritingDirectionNatural'
  'NSWritingDirectionRightToLeft (1)':
    'prefix': 'NSWritingDirectionRightToLeft'
    'body': 'NSWritingDirectionRightToLeft'
  'UIAccessibilityScrollDirectionDown (4)':
    'prefix': 'UIAccessibilityScrollDirectionDown'
    'body': 'UIAccessibilityScrollDirectionDown'
  'UIAccessibilityScrollDirectionLeft (2)':
    'prefix': 'UIAccessibilityScrollDirectionLeft'
    'body': 'UIAccessibilityScrollDirectionLeft'
  'UIAccessibilityScrollDirectionNext (5)':
    'prefix': 'UIAccessibilityScrollDirectionNext'
    'body': 'UIAccessibilityScrollDirectionNext'
  'UIAccessibilityScrollDirectionPrevious (6)':
    'prefix': 'UIAccessibilityScrollDirectionPrevious'
    'body': 'UIAccessibilityScrollDirectionPrevious'
  'UIAccessibilityScrollDirectionRight (1)':
    'prefix': 'UIAccessibilityScrollDirectionRight'
    'body': 'UIAccessibilityScrollDirectionRight'
  'UIAccessibilityScrollDirectionUp (3)':
    'prefix': 'UIAccessibilityScrollDirectionUp'
    'body': 'UIAccessibilityScrollDirectionUp'
  'UIAccessibilityZoomTypeInsertionPoint (0)':
    'prefix': 'UIAccessibilityZoomTypeInsertionPoint'
    'body': 'UIAccessibilityZoomTypeInsertionPoint'
  'UIActionSheetStyleAutomatic (-1)':
    'prefix': 'UIActionSheetStyleAutomatic'
    'body': 'UIActionSheetStyleAutomatic'
  'UIActionSheetStyleBlackOpaque (1)':
    'prefix': 'UIActionSheetStyleBlackOpaque'
    'body': 'UIActionSheetStyleBlackOpaque'
  'UIActionSheetStyleBlackTranslucent (2)':
    'prefix': 'UIActionSheetStyleBlackTranslucent'
    'body': 'UIActionSheetStyleBlackTranslucent'
  'UIActionSheetStyleDefault (0)':
    'prefix': 'UIActionSheetStyleDefault'
    'body': 'UIActionSheetStyleDefault'
  'UIActivityCategoryAction (0)':
    'prefix': 'UIActivityCategoryAction'
    'body': 'UIActivityCategoryAction'
  'UIActivityCategoryShare (1)':
    'prefix': 'UIActivityCategoryShare'
    'body': 'UIActivityCategoryShare'
  'UIActivityIndicatorViewStyleGray (2)':
    'prefix': 'UIActivityIndicatorViewStyleGray'
    'body': 'UIActivityIndicatorViewStyleGray'
  'UIActivityIndicatorViewStyleWhite (1)':
    'prefix': 'UIActivityIndicatorViewStyleWhite'
    'body': 'UIActivityIndicatorViewStyleWhite'
  'UIActivityIndicatorViewStyleWhiteLarge (0)':
    'prefix': 'UIActivityIndicatorViewStyleWhiteLarge'
    'body': 'UIActivityIndicatorViewStyleWhiteLarge'
  'UIAlertViewStyleDefault (0)':
    'prefix': 'UIAlertViewStyleDefault'
    'body': 'UIAlertViewStyleDefault'
  'UIAlertViewStyleLoginAndPasswordInput (3)':
    'prefix': 'UIAlertViewStyleLoginAndPasswordInput'
    'body': 'UIAlertViewStyleLoginAndPasswordInput'
  'UIAlertViewStylePlainTextInput (2)':
    'prefix': 'UIAlertViewStylePlainTextInput'
    'body': 'UIAlertViewStylePlainTextInput'
  'UIAlertViewStyleSecureTextInput (1)':
    'prefix': 'UIAlertViewStyleSecureTextInput'
    'body': 'UIAlertViewStyleSecureTextInput'
  'UIApplicationStateActive (0)':
    'prefix': 'UIApplicationStateActive'
    'body': 'UIApplicationStateActive'
  'UIApplicationStateBackground (2)':
    'prefix': 'UIApplicationStateBackground'
    'body': 'UIApplicationStateBackground'
  'UIApplicationStateInactive (1)':
    'prefix': 'UIApplicationStateInactive'
    'body': 'UIApplicationStateInactive'
  'UIAttachmentBehaviorTypeAnchor (1)':
    'prefix': 'UIAttachmentBehaviorTypeAnchor'
    'body': 'UIAttachmentBehaviorTypeAnchor'
  'UIAttachmentBehaviorTypeItems (0)':
    'prefix': 'UIAttachmentBehaviorTypeItems'
    'body': 'UIAttachmentBehaviorTypeItems'
  'UIBackgroundFetchResultFailed (2)':
    'prefix': 'UIBackgroundFetchResultFailed'
    'body': 'UIBackgroundFetchResultFailed'
  'UIBackgroundFetchResultNewData (0)':
    'prefix': 'UIBackgroundFetchResultNewData'
    'body': 'UIBackgroundFetchResultNewData'
  'UIBackgroundFetchResultNoData (1)':
    'prefix': 'UIBackgroundFetchResultNoData'
    'body': 'UIBackgroundFetchResultNoData'
  'UIBackgroundRefreshStatusAvailable (2)':
    'prefix': 'UIBackgroundRefreshStatusAvailable'
    'body': 'UIBackgroundRefreshStatusAvailable'
  'UIBackgroundRefreshStatusDenied (1)':
    'prefix': 'UIBackgroundRefreshStatusDenied'
    'body': 'UIBackgroundRefreshStatusDenied'
  'UIBackgroundRefreshStatusRestricted (0)':
    'prefix': 'UIBackgroundRefreshStatusRestricted'
    'body': 'UIBackgroundRefreshStatusRestricted'
  'UIBarButtonItemStyleBordered (1)':
    'prefix': 'UIBarButtonItemStyleBordered'
    'body': 'UIBarButtonItemStyleBordered'
  'UIBarButtonItemStyleDone (2)':
    'prefix': 'UIBarButtonItemStyleDone'
    'body': 'UIBarButtonItemStyleDone'
  'UIBarButtonItemStylePlain (0)':
    'prefix': 'UIBarButtonItemStylePlain'
    'body': 'UIBarButtonItemStylePlain'
  'UIBarButtonSystemItemAction (9)':
    'prefix': 'UIBarButtonSystemItemAction'
    'body': 'UIBarButtonSystemItemAction'
  'UIBarButtonSystemItemAdd (4)':
    'prefix': 'UIBarButtonSystemItemAdd'
    'body': 'UIBarButtonSystemItemAdd'
  'UIBarButtonSystemItemBookmarks (11)':
    'prefix': 'UIBarButtonSystemItemBookmarks'
    'body': 'UIBarButtonSystemItemBookmarks'
  'UIBarButtonSystemItemCamera (15)':
    'prefix': 'UIBarButtonSystemItemCamera'
    'body': 'UIBarButtonSystemItemCamera'
  'UIBarButtonSystemItemCancel (1)':
    'prefix': 'UIBarButtonSystemItemCancel'
    'body': 'UIBarButtonSystemItemCancel'
  'UIBarButtonSystemItemCompose (7)':
    'prefix': 'UIBarButtonSystemItemCompose'
    'body': 'UIBarButtonSystemItemCompose'
  'UIBarButtonSystemItemDone (0)':
    'prefix': 'UIBarButtonSystemItemDone'
    'body': 'UIBarButtonSystemItemDone'
  'UIBarButtonSystemItemEdit (2)':
    'prefix': 'UIBarButtonSystemItemEdit'
    'body': 'UIBarButtonSystemItemEdit'
  'UIBarButtonSystemItemFastForward (20)':
    'prefix': 'UIBarButtonSystemItemFastForward'
    'body': 'UIBarButtonSystemItemFastForward'
  'UIBarButtonSystemItemFixedSpace (6)':
    'prefix': 'UIBarButtonSystemItemFixedSpace'
    'body': 'UIBarButtonSystemItemFixedSpace'
  'UIBarButtonSystemItemFlexibleSpace (5)':
    'prefix': 'UIBarButtonSystemItemFlexibleSpace'
    'body': 'UIBarButtonSystemItemFlexibleSpace'
  'UIBarButtonSystemItemOrganize (10)':
    'prefix': 'UIBarButtonSystemItemOrganize'
    'body': 'UIBarButtonSystemItemOrganize'
  'UIBarButtonSystemItemPageCurl (23)':
    'prefix': 'UIBarButtonSystemItemPageCurl'
    'body': 'UIBarButtonSystemItemPageCurl'
  'UIBarButtonSystemItemPause (18)':
    'prefix': 'UIBarButtonSystemItemPause'
    'body': 'UIBarButtonSystemItemPause'
  'UIBarButtonSystemItemPlay (17)':
    'prefix': 'UIBarButtonSystemItemPlay'
    'body': 'UIBarButtonSystemItemPlay'
  'UIBarButtonSystemItemRedo (22)':
    'prefix': 'UIBarButtonSystemItemRedo'
    'body': 'UIBarButtonSystemItemRedo'
  'UIBarButtonSystemItemRefresh (13)':
    'prefix': 'UIBarButtonSystemItemRefresh'
    'body': 'UIBarButtonSystemItemRefresh'
  'UIBarButtonSystemItemReply (8)':
    'prefix': 'UIBarButtonSystemItemReply'
    'body': 'UIBarButtonSystemItemReply'
  'UIBarButtonSystemItemRewind (19)':
    'prefix': 'UIBarButtonSystemItemRewind'
    'body': 'UIBarButtonSystemItemRewind'
  'UIBarButtonSystemItemSave (3)':
    'prefix': 'UIBarButtonSystemItemSave'
    'body': 'UIBarButtonSystemItemSave'
  'UIBarButtonSystemItemSearch (12)':
    'prefix': 'UIBarButtonSystemItemSearch'
    'body': 'UIBarButtonSystemItemSearch'
  'UIBarButtonSystemItemStop (14)':
    'prefix': 'UIBarButtonSystemItemStop'
    'body': 'UIBarButtonSystemItemStop'
  'UIBarButtonSystemItemTrash (16)':
    'prefix': 'UIBarButtonSystemItemTrash'
    'body': 'UIBarButtonSystemItemTrash'
  'UIBarButtonSystemItemUndo (21)':
    'prefix': 'UIBarButtonSystemItemUndo'
    'body': 'UIBarButtonSystemItemUndo'
  'UIBarMetricsDefault (0)':
    'prefix': 'UIBarMetricsDefault'
    'body': 'UIBarMetricsDefault'
  'UIBarMetricsDefaultPrompt (101)':
    'prefix': 'UIBarMetricsDefaultPrompt'
    'body': 'UIBarMetricsDefaultPrompt'
  'UIBarMetricsLandscapePhone (1)':
    'prefix': 'UIBarMetricsLandscapePhone'
    'body': 'UIBarMetricsLandscapePhone'
  'UIBarMetricsLandscapePhonePrompt (102)':
    'prefix': 'UIBarMetricsLandscapePhonePrompt'
    'body': 'UIBarMetricsLandscapePhonePrompt'
  'UIBarPositionAny (0)':
    'prefix': 'UIBarPositionAny'
    'body': 'UIBarPositionAny'
  'UIBarPositionBottom (1)':
    'prefix': 'UIBarPositionBottom'
    'body': 'UIBarPositionBottom'
  'UIBarPositionTop (2)':
    'prefix': 'UIBarPositionTop'
    'body': 'UIBarPositionTop'
  'UIBarPositionTopAttached (3)':
    'prefix': 'UIBarPositionTopAttached'
    'body': 'UIBarPositionTopAttached'
  'UIBarStyleBlack (1)':
    'prefix': 'UIBarStyleBlack'
    'body': 'UIBarStyleBlack'
  'UIBarStyleBlackOpaque (1)':
    'prefix': 'UIBarStyleBlackOpaque'
    'body': 'UIBarStyleBlackOpaque'
  'UIBarStyleBlackTranslucent (2)':
    'prefix': 'UIBarStyleBlackTranslucent'
    'body': 'UIBarStyleBlackTranslucent'
  'UIBarStyleDefault (0)':
    'prefix': 'UIBarStyleDefault'
    'body': 'UIBarStyleDefault'
  'UIBaselineAdjustmentAlignBaselines (0)':
    'prefix': 'UIBaselineAdjustmentAlignBaselines'
    'body': 'UIBaselineAdjustmentAlignBaselines'
  'UIBaselineAdjustmentAlignCenters (1)':
    'prefix': 'UIBaselineAdjustmentAlignCenters'
    'body': 'UIBaselineAdjustmentAlignCenters'
  'UIBaselineAdjustmentNone (2)':
    'prefix': 'UIBaselineAdjustmentNone'
    'body': 'UIBaselineAdjustmentNone'
  'UIButtonTypeContactAdd (5)':
    'prefix': 'UIButtonTypeContactAdd'
    'body': 'UIButtonTypeContactAdd'
  'UIButtonTypeCustom (0)':
    'prefix': 'UIButtonTypeCustom'
    'body': 'UIButtonTypeCustom'
  'UIButtonTypeDetailDisclosure (2)':
    'prefix': 'UIButtonTypeDetailDisclosure'
    'body': 'UIButtonTypeDetailDisclosure'
  'UIButtonTypeInfoDark (4)':
    'prefix': 'UIButtonTypeInfoDark'
    'body': 'UIButtonTypeInfoDark'
  'UIButtonTypeInfoLight (3)':
    'prefix': 'UIButtonTypeInfoLight'
    'body': 'UIButtonTypeInfoLight'
  'UIButtonTypeRoundedRect (1)':
    'prefix': 'UIButtonTypeRoundedRect'
    'body': 'UIButtonTypeRoundedRect'
  'UIButtonTypeSystem (1)':
    'prefix': 'UIButtonTypeSystem'
    'body': 'UIButtonTypeSystem'
  'UICollectionElementCategoryCell (0)':
    'prefix': 'UICollectionElementCategoryCell'
    'body': 'UICollectionElementCategoryCell'
  'UICollectionElementCategoryDecorationView (2)':
    'prefix': 'UICollectionElementCategoryDecorationView'
    'body': 'UICollectionElementCategoryDecorationView'
  'UICollectionElementCategorySupplementaryView (1)':
    'prefix': 'UICollectionElementCategorySupplementaryView'
    'body': 'UICollectionElementCategorySupplementaryView'
  'UICollectionUpdateActionDelete (1)':
    'prefix': 'UICollectionUpdateActionDelete'
    'body': 'UICollectionUpdateActionDelete'
  'UICollectionUpdateActionInsert (0)':
    'prefix': 'UICollectionUpdateActionInsert'
    'body': 'UICollectionUpdateActionInsert'
  'UICollectionUpdateActionMove (3)':
    'prefix': 'UICollectionUpdateActionMove'
    'body': 'UICollectionUpdateActionMove'
  'UICollectionUpdateActionNone (4)':
    'prefix': 'UICollectionUpdateActionNone'
    'body': 'UICollectionUpdateActionNone'
  'UICollectionUpdateActionReload (2)':
    'prefix': 'UICollectionUpdateActionReload'
    'body': 'UICollectionUpdateActionReload'
  'UICollectionViewScrollDirectionHorizontal (1)':
    'prefix': 'UICollectionViewScrollDirectionHorizontal'
    'body': 'UICollectionViewScrollDirectionHorizontal'
  'UICollectionViewScrollDirectionVertical (0)':
    'prefix': 'UICollectionViewScrollDirectionVertical'
    'body': 'UICollectionViewScrollDirectionVertical'
  'UICollectionViewScrollPositionBottom (4)':
    'prefix': 'UICollectionViewScrollPositionBottom'
    'body': 'UICollectionViewScrollPositionBottom'
  'UICollectionViewScrollPositionCenteredHorizontally (16)':
    'prefix': 'UICollectionViewScrollPositionCenteredHorizontally'
    'body': 'UICollectionViewScrollPositionCenteredHorizontally'
  'UICollectionViewScrollPositionCenteredVertically (2)':
    'prefix': 'UICollectionViewScrollPositionCenteredVertically'
    'body': 'UICollectionViewScrollPositionCenteredVertically'
  'UICollectionViewScrollPositionLeft (8)':
    'prefix': 'UICollectionViewScrollPositionLeft'
    'body': 'UICollectionViewScrollPositionLeft'
  'UICollectionViewScrollPositionNone (0)':
    'prefix': 'UICollectionViewScrollPositionNone'
    'body': 'UICollectionViewScrollPositionNone'
  'UICollectionViewScrollPositionRight (32)':
    'prefix': 'UICollectionViewScrollPositionRight'
    'body': 'UICollectionViewScrollPositionRight'
  'UICollectionViewScrollPositionTop (1)':
    'prefix': 'UICollectionViewScrollPositionTop'
    'body': 'UICollectionViewScrollPositionTop'
  'UICollisionBehaviorModeBoundaries (2)':
    'prefix': 'UICollisionBehaviorModeBoundaries'
    'body': 'UICollisionBehaviorModeBoundaries'
  'UICollisionBehaviorModeEverything (4294967295)':
    'prefix': 'UICollisionBehaviorModeEverything'
    'body': 'UICollisionBehaviorModeEverything'
  'UICollisionBehaviorModeItems (1)':
    'prefix': 'UICollisionBehaviorModeItems'
    'body': 'UICollisionBehaviorModeItems'
  'UIControlContentHorizontalAlignmentCenter (0)':
    'prefix': 'UIControlContentHorizontalAlignmentCenter'
    'body': 'UIControlContentHorizontalAlignmentCenter'
  'UIControlContentHorizontalAlignmentFill (3)':
    'prefix': 'UIControlContentHorizontalAlignmentFill'
    'body': 'UIControlContentHorizontalAlignmentFill'
  'UIControlContentHorizontalAlignmentLeft (1)':
    'prefix': 'UIControlContentHorizontalAlignmentLeft'
    'body': 'UIControlContentHorizontalAlignmentLeft'
  'UIControlContentHorizontalAlignmentRight (2)':
    'prefix': 'UIControlContentHorizontalAlignmentRight'
    'body': 'UIControlContentHorizontalAlignmentRight'
  'UIControlContentVerticalAlignmentBottom (2)':
    'prefix': 'UIControlContentVerticalAlignmentBottom'
    'body': 'UIControlContentVerticalAlignmentBottom'
  'UIControlContentVerticalAlignmentCenter (0)':
    'prefix': 'UIControlContentVerticalAlignmentCenter'
    'body': 'UIControlContentVerticalAlignmentCenter'
  'UIControlContentVerticalAlignmentFill (3)':
    'prefix': 'UIControlContentVerticalAlignmentFill'
    'body': 'UIControlContentVerticalAlignmentFill'
  'UIControlContentVerticalAlignmentTop (1)':
    'prefix': 'UIControlContentVerticalAlignmentTop'
    'body': 'UIControlContentVerticalAlignmentTop'
  'UIControlEventAllEditingEvents (983040)':
    'prefix': 'UIControlEventAllEditingEvents'
    'body': 'UIControlEventAllEditingEvents'
  'UIControlEventAllEvents (4294967295)':
    'prefix': 'UIControlEventAllEvents'
    'body': 'UIControlEventAllEvents'
  'UIControlEventAllTouchEvents (4095)':
    'prefix': 'UIControlEventAllTouchEvents'
    'body': 'UIControlEventAllTouchEvents'
  'UIControlEventApplicationReserved (251658240)':
    'prefix': 'UIControlEventApplicationReserved'
    'body': 'UIControlEventApplicationReserved'
  'UIControlEventEditingChanged (131072)':
    'prefix': 'UIControlEventEditingChanged'
    'body': 'UIControlEventEditingChanged'
  'UIControlEventEditingDidBegin (65536)':
    'prefix': 'UIControlEventEditingDidBegin'
    'body': 'UIControlEventEditingDidBegin'
  'UIControlEventEditingDidEnd (262144)':
    'prefix': 'UIControlEventEditingDidEnd'
    'body': 'UIControlEventEditingDidEnd'
  'UIControlEventEditingDidEndOnExit (524288)':
    'prefix': 'UIControlEventEditingDidEndOnExit'
    'body': 'UIControlEventEditingDidEndOnExit'
  'UIControlEventSystemReserved (4026531840)':
    'prefix': 'UIControlEventSystemReserved'
    'body': 'UIControlEventSystemReserved'
  'UIControlEventTouchCancel (256)':
    'prefix': 'UIControlEventTouchCancel'
    'body': 'UIControlEventTouchCancel'
  'UIControlEventTouchDown (1)':
    'prefix': 'UIControlEventTouchDown'
    'body': 'UIControlEventTouchDown'
  'UIControlEventTouchDownRepeat (2)':
    'prefix': 'UIControlEventTouchDownRepeat'
    'body': 'UIControlEventTouchDownRepeat'
  'UIControlEventTouchDragEnter (16)':
    'prefix': 'UIControlEventTouchDragEnter'
    'body': 'UIControlEventTouchDragEnter'
  'UIControlEventTouchDragExit (32)':
    'prefix': 'UIControlEventTouchDragExit'
    'body': 'UIControlEventTouchDragExit'
  'UIControlEventTouchDragInside (4)':
    'prefix': 'UIControlEventTouchDragInside'
    'body': 'UIControlEventTouchDragInside'
  'UIControlEventTouchDragOutside (8)':
    'prefix': 'UIControlEventTouchDragOutside'
    'body': 'UIControlEventTouchDragOutside'
  'UIControlEventTouchUpInside (64)':
    'prefix': 'UIControlEventTouchUpInside'
    'body': 'UIControlEventTouchUpInside'
  'UIControlEventTouchUpOutside (128)':
    'prefix': 'UIControlEventTouchUpOutside'
    'body': 'UIControlEventTouchUpOutside'
  'UIControlEventValueChanged (4096)':
    'prefix': 'UIControlEventValueChanged'
    'body': 'UIControlEventValueChanged'
  'UIControlStateApplication (16711680)':
    'prefix': 'UIControlStateApplication'
    'body': 'UIControlStateApplication'
  'UIControlStateDisabled (2)':
    'prefix': 'UIControlStateDisabled'
    'body': 'UIControlStateDisabled'
  'UIControlStateHighlighted (1)':
    'prefix': 'UIControlStateHighlighted'
    'body': 'UIControlStateHighlighted'
  'UIControlStateNormal (0)':
    'prefix': 'UIControlStateNormal'
    'body': 'UIControlStateNormal'
  'UIControlStateReserved (4278190080)':
    'prefix': 'UIControlStateReserved'
    'body': 'UIControlStateReserved'
  'UIControlStateSelected (4)':
    'prefix': 'UIControlStateSelected'
    'body': 'UIControlStateSelected'
  'UIDataDetectorTypeAddress (4)':
    'prefix': 'UIDataDetectorTypeAddress'
    'body': 'UIDataDetectorTypeAddress'
  'UIDataDetectorTypeAll (4294967295)':
    'prefix': 'UIDataDetectorTypeAll'
    'body': 'UIDataDetectorTypeAll'
  'UIDataDetectorTypeCalendarEvent (8)':
    'prefix': 'UIDataDetectorTypeCalendarEvent'
    'body': 'UIDataDetectorTypeCalendarEvent'
  'UIDataDetectorTypeLink (2)':
    'prefix': 'UIDataDetectorTypeLink'
    'body': 'UIDataDetectorTypeLink'
  'UIDataDetectorTypeNone (0)':
    'prefix': 'UIDataDetectorTypeNone'
    'body': 'UIDataDetectorTypeNone'
  'UIDataDetectorTypePhoneNumber (1)':
    'prefix': 'UIDataDetectorTypePhoneNumber'
    'body': 'UIDataDetectorTypePhoneNumber'
  'UIDatePickerModeCountDownTimer (3)':
    'prefix': 'UIDatePickerModeCountDownTimer'
    'body': 'UIDatePickerModeCountDownTimer'
  'UIDatePickerModeDate (1)':
    'prefix': 'UIDatePickerModeDate'
    'body': 'UIDatePickerModeDate'
  'UIDatePickerModeDateAndTime (2)':
    'prefix': 'UIDatePickerModeDateAndTime'
    'body': 'UIDatePickerModeDateAndTime'
  'UIDatePickerModeTime (0)':
    'prefix': 'UIDatePickerModeTime'
    'body': 'UIDatePickerModeTime'
  'UIDeviceBatteryStateCharging (2)':
    'prefix': 'UIDeviceBatteryStateCharging'
    'body': 'UIDeviceBatteryStateCharging'
  'UIDeviceBatteryStateFull (3)':
    'prefix': 'UIDeviceBatteryStateFull'
    'body': 'UIDeviceBatteryStateFull'
  'UIDeviceBatteryStateUnknown (0)':
    'prefix': 'UIDeviceBatteryStateUnknown'
    'body': 'UIDeviceBatteryStateUnknown'
  'UIDeviceBatteryStateUnplugged (1)':
    'prefix': 'UIDeviceBatteryStateUnplugged'
    'body': 'UIDeviceBatteryStateUnplugged'
  'UIDeviceOrientationFaceDown (6)':
    'prefix': 'UIDeviceOrientationFaceDown'
    'body': 'UIDeviceOrientationFaceDown'
  'UIDeviceOrientationFaceUp (5)':
    'prefix': 'UIDeviceOrientationFaceUp'
    'body': 'UIDeviceOrientationFaceUp'
  'UIDeviceOrientationLandscapeLeft (3)':
    'prefix': 'UIDeviceOrientationLandscapeLeft'
    'body': 'UIDeviceOrientationLandscapeLeft'
  'UIDeviceOrientationLandscapeRight (4)':
    'prefix': 'UIDeviceOrientationLandscapeRight'
    'body': 'UIDeviceOrientationLandscapeRight'
  'UIDeviceOrientationPortrait (1)':
    'prefix': 'UIDeviceOrientationPortrait'
    'body': 'UIDeviceOrientationPortrait'
  'UIDeviceOrientationPortraitUpsideDown (2)':
    'prefix': 'UIDeviceOrientationPortraitUpsideDown'
    'body': 'UIDeviceOrientationPortraitUpsideDown'
  'UIDeviceOrientationUnknown (0)':
    'prefix': 'UIDeviceOrientationUnknown'
    'body': 'UIDeviceOrientationUnknown'
  'UIDocumentChangeCleared (3)':
    'prefix': 'UIDocumentChangeCleared'
    'body': 'UIDocumentChangeCleared'
  'UIDocumentChangeDone (0)':
    'prefix': 'UIDocumentChangeDone'
    'body': 'UIDocumentChangeDone'
  'UIDocumentChangeRedone (2)':
    'prefix': 'UIDocumentChangeRedone'
    'body': 'UIDocumentChangeRedone'
  'UIDocumentChangeUndone (1)':
    'prefix': 'UIDocumentChangeUndone'
    'body': 'UIDocumentChangeUndone'
  'UIDocumentSaveForCreating (0)':
    'prefix': 'UIDocumentSaveForCreating'
    'body': 'UIDocumentSaveForCreating'
  'UIDocumentSaveForOverwriting (1)':
    'prefix': 'UIDocumentSaveForOverwriting'
    'body': 'UIDocumentSaveForOverwriting'
  'UIDocumentStateClosed (1)':
    'prefix': 'UIDocumentStateClosed'
    'body': 'UIDocumentStateClosed'
  'UIDocumentStateEditingDisabled (8)':
    'prefix': 'UIDocumentStateEditingDisabled'
    'body': 'UIDocumentStateEditingDisabled'
  'UIDocumentStateInConflict (2)':
    'prefix': 'UIDocumentStateInConflict'
    'body': 'UIDocumentStateInConflict'
  'UIDocumentStateNormal (0)':
    'prefix': 'UIDocumentStateNormal'
    'body': 'UIDocumentStateNormal'
  'UIDocumentStateSavingError (4)':
    'prefix': 'UIDocumentStateSavingError'
    'body': 'UIDocumentStateSavingError'
  'UIEventSubtypeMotionShake (1)':
    'prefix': 'UIEventSubtypeMotionShake'
    'body': 'UIEventSubtypeMotionShake'
  'UIEventSubtypeNone (0)':
    'prefix': 'UIEventSubtypeNone'
    'body': 'UIEventSubtypeNone'
  'UIEventSubtypeRemoteControlBeginSeekingBackward (106)':
    'prefix': 'UIEventSubtypeRemoteControlBeginSeekingBackward'
    'body': 'UIEventSubtypeRemoteControlBeginSeekingBackward'
  'UIEventSubtypeRemoteControlBeginSeekingForward (108)':
    'prefix': 'UIEventSubtypeRemoteControlBeginSeekingForward'
    'body': 'UIEventSubtypeRemoteControlBeginSeekingForward'
  'UIEventSubtypeRemoteControlEndSeekingBackward (107)':
    'prefix': 'UIEventSubtypeRemoteControlEndSeekingBackward'
    'body': 'UIEventSubtypeRemoteControlEndSeekingBackward'
  'UIEventSubtypeRemoteControlEndSeekingForward (109)':
    'prefix': 'UIEventSubtypeRemoteControlEndSeekingForward'
    'body': 'UIEventSubtypeRemoteControlEndSeekingForward'
  'UIEventSubtypeRemoteControlNextTrack (104)':
    'prefix': 'UIEventSubtypeRemoteControlNextTrack'
    'body': 'UIEventSubtypeRemoteControlNextTrack'
  'UIEventSubtypeRemoteControlPause (101)':
    'prefix': 'UIEventSubtypeRemoteControlPause'
    'body': 'UIEventSubtypeRemoteControlPause'
  'UIEventSubtypeRemoteControlPlay (100)':
    'prefix': 'UIEventSubtypeRemoteControlPlay'
    'body': 'UIEventSubtypeRemoteControlPlay'
  'UIEventSubtypeRemoteControlPreviousTrack (105)':
    'prefix': 'UIEventSubtypeRemoteControlPreviousTrack'
    'body': 'UIEventSubtypeRemoteControlPreviousTrack'
  'UIEventSubtypeRemoteControlStop (102)':
    'prefix': 'UIEventSubtypeRemoteControlStop'
    'body': 'UIEventSubtypeRemoteControlStop'
  'UIEventSubtypeRemoteControlTogglePlayPause (103)':
    'prefix': 'UIEventSubtypeRemoteControlTogglePlayPause'
    'body': 'UIEventSubtypeRemoteControlTogglePlayPause'
  'UIEventTypeMotion (1)':
    'prefix': 'UIEventTypeMotion'
    'body': 'UIEventTypeMotion'
  'UIEventTypeRemoteControl (2)':
    'prefix': 'UIEventTypeRemoteControl'
    'body': 'UIEventTypeRemoteControl'
  'UIEventTypeTouches (0)':
    'prefix': 'UIEventTypeTouches'
    'body': 'UIEventTypeTouches'
  'UIFontDescriptorClassClarendonSerifs (1073741824)':
    'prefix': 'UIFontDescriptorClassClarendonSerifs'
    'body': 'UIFontDescriptorClassClarendonSerifs'
  'UIFontDescriptorClassFreeformSerifs (1879048192)':
    'prefix': 'UIFontDescriptorClassFreeformSerifs'
    'body': 'UIFontDescriptorClassFreeformSerifs'
  'UIFontDescriptorClassMask (4026531840)':
    'prefix': 'UIFontDescriptorClassMask'
    'body': 'UIFontDescriptorClassMask'
  'UIFontDescriptorClassModernSerifs (805306368)':
    'prefix': 'UIFontDescriptorClassModernSerifs'
    'body': 'UIFontDescriptorClassModernSerifs'
  'UIFontDescriptorClassOldStyleSerifs (268435456)':
    'prefix': 'UIFontDescriptorClassOldStyleSerifs'
    'body': 'UIFontDescriptorClassOldStyleSerifs'
  'UIFontDescriptorClassOrnamentals (2415919104)':
    'prefix': 'UIFontDescriptorClassOrnamentals'
    'body': 'UIFontDescriptorClassOrnamentals'
  'UIFontDescriptorClassSansSerif (2147483648)':
    'prefix': 'UIFontDescriptorClassSansSerif'
    'body': 'UIFontDescriptorClassSansSerif'
  'UIFontDescriptorClassScripts (2684354560)':
    'prefix': 'UIFontDescriptorClassScripts'
    'body': 'UIFontDescriptorClassScripts'
  'UIFontDescriptorClassSlabSerifs (1342177280)':
    'prefix': 'UIFontDescriptorClassSlabSerifs'
    'body': 'UIFontDescriptorClassSlabSerifs'
  'UIFontDescriptorClassSymbolic (3221225472)':
    'prefix': 'UIFontDescriptorClassSymbolic'
    'body': 'UIFontDescriptorClassSymbolic'
  'UIFontDescriptorClassTransitionalSerifs (536870912)':
    'prefix': 'UIFontDescriptorClassTransitionalSerifs'
    'body': 'UIFontDescriptorClassTransitionalSerifs'
  'UIFontDescriptorClassUnknown (0)':
    'prefix': 'UIFontDescriptorClassUnknown'
    'body': 'UIFontDescriptorClassUnknown'
  'UIFontDescriptorTraitBold (2)':
    'prefix': 'UIFontDescriptorTraitBold'
    'body': 'UIFontDescriptorTraitBold'
  'UIFontDescriptorTraitCondensed (64)':
    'prefix': 'UIFontDescriptorTraitCondensed'
    'body': 'UIFontDescriptorTraitCondensed'
  'UIFontDescriptorTraitExpanded (32)':
    'prefix': 'UIFontDescriptorTraitExpanded'
    'body': 'UIFontDescriptorTraitExpanded'
  'UIFontDescriptorTraitItalic (1)':
    'prefix': 'UIFontDescriptorTraitItalic'
    'body': 'UIFontDescriptorTraitItalic'
  'UIFontDescriptorTraitLooseLeading (65536)':
    'prefix': 'UIFontDescriptorTraitLooseLeading'
    'body': 'UIFontDescriptorTraitLooseLeading'
  'UIFontDescriptorTraitMonoSpace (1024)':
    'prefix': 'UIFontDescriptorTraitMonoSpace'
    'body': 'UIFontDescriptorTraitMonoSpace'
  'UIFontDescriptorTraitTightLeading (32768)':
    'prefix': 'UIFontDescriptorTraitTightLeading'
    'body': 'UIFontDescriptorTraitTightLeading'
  'UIFontDescriptorTraitUIOptimized (4096)':
    'prefix': 'UIFontDescriptorTraitUIOptimized'
    'body': 'UIFontDescriptorTraitUIOptimized'
  'UIFontDescriptorTraitVertical (2048)':
    'prefix': 'UIFontDescriptorTraitVertical'
    'body': 'UIFontDescriptorTraitVertical'
  'UIGestureRecognizerStateBegan (1)':
    'prefix': 'UIGestureRecognizerStateBegan'
    'body': 'UIGestureRecognizerStateBegan'
  'UIGestureRecognizerStateCancelled (4)':
    'prefix': 'UIGestureRecognizerStateCancelled'
    'body': 'UIGestureRecognizerStateCancelled'
  'UIGestureRecognizerStateChanged (2)':
    'prefix': 'UIGestureRecognizerStateChanged'
    'body': 'UIGestureRecognizerStateChanged'
  'UIGestureRecognizerStateEnded (3)':
    'prefix': 'UIGestureRecognizerStateEnded'
    'body': 'UIGestureRecognizerStateEnded'
  'UIGestureRecognizerStateFailed (5)':
    'prefix': 'UIGestureRecognizerStateFailed'
    'body': 'UIGestureRecognizerStateFailed'
  'UIGestureRecognizerStatePossible (0)':
    'prefix': 'UIGestureRecognizerStatePossible'
    'body': 'UIGestureRecognizerStatePossible'
  'UIGestureRecognizerStateRecognized (3)':
    'prefix': 'UIGestureRecognizerStateRecognized'
    'body': 'UIGestureRecognizerStateRecognized'
  'UIGuidedAccessRestrictionStateAllow (0)':
    'prefix': 'UIGuidedAccessRestrictionStateAllow'
    'body': 'UIGuidedAccessRestrictionStateAllow'
  'UIGuidedAccessRestrictionStateDeny (1)':
    'prefix': 'UIGuidedAccessRestrictionStateDeny'
    'body': 'UIGuidedAccessRestrictionStateDeny'
  'UIImageOrientationDown (1)':
    'prefix': 'UIImageOrientationDown'
    'body': 'UIImageOrientationDown'
  'UIImageOrientationDownMirrored (5)':
    'prefix': 'UIImageOrientationDownMirrored'
    'body': 'UIImageOrientationDownMirrored'
  'UIImageOrientationLeft (2)':
    'prefix': 'UIImageOrientationLeft'
    'body': 'UIImageOrientationLeft'
  'UIImageOrientationLeftMirrored (6)':
    'prefix': 'UIImageOrientationLeftMirrored'
    'body': 'UIImageOrientationLeftMirrored'
  'UIImageOrientationRight (3)':
    'prefix': 'UIImageOrientationRight'
    'body': 'UIImageOrientationRight'
  'UIImageOrientationRightMirrored (7)':
    'prefix': 'UIImageOrientationRightMirrored'
    'body': 'UIImageOrientationRightMirrored'
  'UIImageOrientationUp (0)':
    'prefix': 'UIImageOrientationUp'
    'body': 'UIImageOrientationUp'
  'UIImageOrientationUpMirrored (4)':
    'prefix': 'UIImageOrientationUpMirrored'
    'body': 'UIImageOrientationUpMirrored'
  'UIImagePickerControllerCameraCaptureModePhoto (0)':
    'prefix': 'UIImagePickerControllerCameraCaptureModePhoto'
    'body': 'UIImagePickerControllerCameraCaptureModePhoto'
  'UIImagePickerControllerCameraCaptureModeVideo (1)':
    'prefix': 'UIImagePickerControllerCameraCaptureModeVideo'
    'body': 'UIImagePickerControllerCameraCaptureModeVideo'
  'UIImagePickerControllerCameraDeviceFront (1)':
    'prefix': 'UIImagePickerControllerCameraDeviceFront'
    'body': 'UIImagePickerControllerCameraDeviceFront'
  'UIImagePickerControllerCameraDeviceRear (0)':
    'prefix': 'UIImagePickerControllerCameraDeviceRear'
    'body': 'UIImagePickerControllerCameraDeviceRear'
  'UIImagePickerControllerCameraFlashModeAuto (0)':
    'prefix': 'UIImagePickerControllerCameraFlashModeAuto'
    'body': 'UIImagePickerControllerCameraFlashModeAuto'
  'UIImagePickerControllerCameraFlashModeOff (-1)':
    'prefix': 'UIImagePickerControllerCameraFlashModeOff'
    'body': 'UIImagePickerControllerCameraFlashModeOff'
  'UIImagePickerControllerCameraFlashModeOn (1)':
    'prefix': 'UIImagePickerControllerCameraFlashModeOn'
    'body': 'UIImagePickerControllerCameraFlashModeOn'
  'UIImagePickerControllerQualityType640x480 (3)':
    'prefix': 'UIImagePickerControllerQualityType640x480'
    'body': 'UIImagePickerControllerQualityType640x480'
  'UIImagePickerControllerQualityTypeHigh (0)':
    'prefix': 'UIImagePickerControllerQualityTypeHigh'
    'body': 'UIImagePickerControllerQualityTypeHigh'
  'UIImagePickerControllerQualityTypeIFrame1280x720 (4)':
    'prefix': 'UIImagePickerControllerQualityTypeIFrame1280x720'
    'body': 'UIImagePickerControllerQualityTypeIFrame1280x720'
  'UIImagePickerControllerQualityTypeIFrame960x540 (5)':
    'prefix': 'UIImagePickerControllerQualityTypeIFrame960x540'
    'body': 'UIImagePickerControllerQualityTypeIFrame960x540'
  'UIImagePickerControllerQualityTypeLow (2)':
    'prefix': 'UIImagePickerControllerQualityTypeLow'
    'body': 'UIImagePickerControllerQualityTypeLow'
  'UIImagePickerControllerQualityTypeMedium (1)':
    'prefix': 'UIImagePickerControllerQualityTypeMedium'
    'body': 'UIImagePickerControllerQualityTypeMedium'
  'UIImagePickerControllerSourceTypeCamera (1)':
    'prefix': 'UIImagePickerControllerSourceTypeCamera'
    'body': 'UIImagePickerControllerSourceTypeCamera'
  'UIImagePickerControllerSourceTypePhotoLibrary (0)':
    'prefix': 'UIImagePickerControllerSourceTypePhotoLibrary'
    'body': 'UIImagePickerControllerSourceTypePhotoLibrary'
  'UIImagePickerControllerSourceTypeSavedPhotosAlbum (2)':
    'prefix': 'UIImagePickerControllerSourceTypeSavedPhotosAlbum'
    'body': 'UIImagePickerControllerSourceTypeSavedPhotosAlbum'
  'UIImageRenderingModeAlwaysOriginal (1)':
    'prefix': 'UIImageRenderingModeAlwaysOriginal'
    'body': 'UIImageRenderingModeAlwaysOriginal'
  'UIImageRenderingModeAlwaysTemplate (2)':
    'prefix': 'UIImageRenderingModeAlwaysTemplate'
    'body': 'UIImageRenderingModeAlwaysTemplate'
  'UIImageRenderingModeAutomatic (0)':
    'prefix': 'UIImageRenderingModeAutomatic'
    'body': 'UIImageRenderingModeAutomatic'
  'UIImageResizingModeStretch (1)':
    'prefix': 'UIImageResizingModeStretch'
    'body': 'UIImageResizingModeStretch'
  'UIImageResizingModeTile (0)':
    'prefix': 'UIImageResizingModeTile'
    'body': 'UIImageResizingModeTile'
  'UIInputViewStyleDefault (0)':
    'prefix': 'UIInputViewStyleDefault'
    'body': 'UIInputViewStyleDefault'
  'UIInputViewStyleKeyboard (1)':
    'prefix': 'UIInputViewStyleKeyboard'
    'body': 'UIInputViewStyleKeyboard'
  'UIInterfaceOrientationLandscapeLeft (4)':
    'prefix': 'UIInterfaceOrientationLandscapeLeft'
    'body': 'UIInterfaceOrientationLandscapeLeft'
  'UIInterfaceOrientationLandscapeRight (3)':
    'prefix': 'UIInterfaceOrientationLandscapeRight'
    'body': 'UIInterfaceOrientationLandscapeRight'
  'UIInterfaceOrientationMaskAll (30)':
    'prefix': 'UIInterfaceOrientationMaskAll'
    'body': 'UIInterfaceOrientationMaskAll'
  'UIInterfaceOrientationMaskAllButUpsideDown (26)':
    'prefix': 'UIInterfaceOrientationMaskAllButUpsideDown'
    'body': 'UIInterfaceOrientationMaskAllButUpsideDown'
  'UIInterfaceOrientationMaskLandscape (24)':
    'prefix': 'UIInterfaceOrientationMaskLandscape'
    'body': 'UIInterfaceOrientationMaskLandscape'
  'UIInterfaceOrientationMaskLandscapeLeft (16)':
    'prefix': 'UIInterfaceOrientationMaskLandscapeLeft'
    'body': 'UIInterfaceOrientationMaskLandscapeLeft'
  'UIInterfaceOrientationMaskLandscapeRight (8)':
    'prefix': 'UIInterfaceOrientationMaskLandscapeRight'
    'body': 'UIInterfaceOrientationMaskLandscapeRight'
  'UIInterfaceOrientationMaskPortrait (2)':
    'prefix': 'UIInterfaceOrientationMaskPortrait'
    'body': 'UIInterfaceOrientationMaskPortrait'
  'UIInterfaceOrientationMaskPortraitUpsideDown (4)':
    'prefix': 'UIInterfaceOrientationMaskPortraitUpsideDown'
    'body': 'UIInterfaceOrientationMaskPortraitUpsideDown'
  'UIInterfaceOrientationPortrait (1)':
    'prefix': 'UIInterfaceOrientationPortrait'
    'body': 'UIInterfaceOrientationPortrait'
  'UIInterfaceOrientationPortraitUpsideDown (2)':
    'prefix': 'UIInterfaceOrientationPortraitUpsideDown'
    'body': 'UIInterfaceOrientationPortraitUpsideDown'
  'UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis (0)':
    'prefix': 'UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis'
    'body': 'UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis'
  'UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis (1)':
    'prefix': 'UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis'
    'body': 'UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis'
  'UIKeyModifierAlphaShift (65536)':
    'prefix': 'UIKeyModifierAlphaShift'
    'body': 'UIKeyModifierAlphaShift'
  'UIKeyModifierAlternate (524288)':
    'prefix': 'UIKeyModifierAlternate'
    'body': 'UIKeyModifierAlternate'
  'UIKeyModifierCommand (1048576)':
    'prefix': 'UIKeyModifierCommand'
    'body': 'UIKeyModifierCommand'
  'UIKeyModifierControl (262144)':
    'prefix': 'UIKeyModifierControl'
    'body': 'UIKeyModifierControl'
  'UIKeyModifierNumericPad (2097152)':
    'prefix': 'UIKeyModifierNumericPad'
    'body': 'UIKeyModifierNumericPad'
  'UIKeyModifierShift (131072)':
    'prefix': 'UIKeyModifierShift'
    'body': 'UIKeyModifierShift'
  'UIKeyboardAppearanceAlert (1)':
    'prefix': 'UIKeyboardAppearanceAlert'
    'body': 'UIKeyboardAppearanceAlert'
  'UIKeyboardAppearanceDark (1)':
    'prefix': 'UIKeyboardAppearanceDark'
    'body': 'UIKeyboardAppearanceDark'
  'UIKeyboardAppearanceDefault (0)':
    'prefix': 'UIKeyboardAppearanceDefault'
    'body': 'UIKeyboardAppearanceDefault'
  'UIKeyboardAppearanceLight (2)':
    'prefix': 'UIKeyboardAppearanceLight'
    'body': 'UIKeyboardAppearanceLight'
  'UIKeyboardTypeASCIICapable (1)':
    'prefix': 'UIKeyboardTypeASCIICapable'
    'body': 'UIKeyboardTypeASCIICapable'
  'UIKeyboardTypeAlphabet (1)':
    'prefix': 'UIKeyboardTypeAlphabet'
    'body': 'UIKeyboardTypeAlphabet'
  'UIKeyboardTypeDecimalPad (8)':
    'prefix': 'UIKeyboardTypeDecimalPad'
    'body': 'UIKeyboardTypeDecimalPad'
  'UIKeyboardTypeDefault (0)':
    'prefix': 'UIKeyboardTypeDefault'
    'body': 'UIKeyboardTypeDefault'
  'UIKeyboardTypeEmailAddress (7)':
    'prefix': 'UIKeyboardTypeEmailAddress'
    'body': 'UIKeyboardTypeEmailAddress'
  'UIKeyboardTypeNamePhonePad (6)':
    'prefix': 'UIKeyboardTypeNamePhonePad'
    'body': 'UIKeyboardTypeNamePhonePad'
  'UIKeyboardTypeNumberPad (4)':
    'prefix': 'UIKeyboardTypeNumberPad'
    'body': 'UIKeyboardTypeNumberPad'
  'UIKeyboardTypeNumbersAndPunctuation (2)':
    'prefix': 'UIKeyboardTypeNumbersAndPunctuation'
    'body': 'UIKeyboardTypeNumbersAndPunctuation'
  'UIKeyboardTypePhonePad (5)':
    'prefix': 'UIKeyboardTypePhonePad'
    'body': 'UIKeyboardTypePhonePad'
  'UIKeyboardTypeTwitter (9)':
    'prefix': 'UIKeyboardTypeTwitter'
    'body': 'UIKeyboardTypeTwitter'
  'UIKeyboardTypeURL (3)':
    'prefix': 'UIKeyboardTypeURL'
    'body': 'UIKeyboardTypeURL'
  'UIKeyboardTypeWebSearch (10)':
    'prefix': 'UIKeyboardTypeWebSearch'
    'body': 'UIKeyboardTypeWebSearch'
  'UILayoutConstraintAxisHorizontal (0)':
    'prefix': 'UILayoutConstraintAxisHorizontal'
    'body': 'UILayoutConstraintAxisHorizontal'
  'UILayoutConstraintAxisVertical (1)':
    'prefix': 'UILayoutConstraintAxisVertical'
    'body': 'UILayoutConstraintAxisVertical'
  'UILayoutPriorityDefaultHigh (750)':
    'prefix': 'UILayoutPriorityDefaultHigh'
    'body': 'UILayoutPriorityDefaultHigh'
  'UILayoutPriorityDefaultLow (250)':
    'prefix': 'UILayoutPriorityDefaultLow'
    'body': 'UILayoutPriorityDefaultLow'
  'UILayoutPriorityFittingSizeLevel (50)':
    'prefix': 'UILayoutPriorityFittingSizeLevel'
    'body': 'UILayoutPriorityFittingSizeLevel'
  'UILayoutPriorityRequired (1000)':
    'prefix': 'UILayoutPriorityRequired'
    'body': 'UILayoutPriorityRequired'
  'UILineBreakModeCharacterWrap (1)':
    'prefix': 'UILineBreakModeCharacterWrap'
    'body': 'UILineBreakModeCharacterWrap'
  'UILineBreakModeClip (2)':
    'prefix': 'UILineBreakModeClip'
    'body': 'UILineBreakModeClip'
  'UILineBreakModeHeadTruncation (3)':
    'prefix': 'UILineBreakModeHeadTruncation'
    'body': 'UILineBreakModeHeadTruncation'
  'UILineBreakModeMiddleTruncation (5)':
    'prefix': 'UILineBreakModeMiddleTruncation'
    'body': 'UILineBreakModeMiddleTruncation'
  'UILineBreakModeTailTruncation (4)':
    'prefix': 'UILineBreakModeTailTruncation'
    'body': 'UILineBreakModeTailTruncation'
  'UILineBreakModeWordWrap (0)':
    'prefix': 'UILineBreakModeWordWrap'
    'body': 'UILineBreakModeWordWrap'
  'UIMenuControllerArrowDefault (0)':
    'prefix': 'UIMenuControllerArrowDefault'
    'body': 'UIMenuControllerArrowDefault'
  'UIMenuControllerArrowDown (2)':
    'prefix': 'UIMenuControllerArrowDown'
    'body': 'UIMenuControllerArrowDown'
  'UIMenuControllerArrowLeft (3)':
    'prefix': 'UIMenuControllerArrowLeft'
    'body': 'UIMenuControllerArrowLeft'
  'UIMenuControllerArrowRight (4)':
    'prefix': 'UIMenuControllerArrowRight'
    'body': 'UIMenuControllerArrowRight'
  'UIMenuControllerArrowUp (1)':
    'prefix': 'UIMenuControllerArrowUp'
    'body': 'UIMenuControllerArrowUp'
  'UIModalPresentationCurrentContext (3)':
    'prefix': 'UIModalPresentationCurrentContext'
    'body': 'UIModalPresentationCurrentContext'
  'UIModalPresentationCustom (4)':
    'prefix': 'UIModalPresentationCustom'
    'body': 'UIModalPresentationCustom'
  'UIModalPresentationFormSheet (2)':
    'prefix': 'UIModalPresentationFormSheet'
    'body': 'UIModalPresentationFormSheet'
  'UIModalPresentationFullScreen (0)':
    'prefix': 'UIModalPresentationFullScreen'
    'body': 'UIModalPresentationFullScreen'
  'UIModalPresentationNone (-1)':
    'prefix': 'UIModalPresentationNone'
    'body': 'UIModalPresentationNone'
  'UIModalPresentationPageSheet (1)':
    'prefix': 'UIModalPresentationPageSheet'
    'body': 'UIModalPresentationPageSheet'
  'UIModalTransitionStyleCoverVertical (0)':
    'prefix': 'UIModalTransitionStyleCoverVertical'
    'body': 'UIModalTransitionStyleCoverVertical'
  'UIModalTransitionStyleCrossDissolve (2)':
    'prefix': 'UIModalTransitionStyleCrossDissolve'
    'body': 'UIModalTransitionStyleCrossDissolve'
  'UIModalTransitionStyleFlipHorizontal (1)':
    'prefix': 'UIModalTransitionStyleFlipHorizontal'
    'body': 'UIModalTransitionStyleFlipHorizontal'
  'UIModalTransitionStylePartialCurl (3)':
    'prefix': 'UIModalTransitionStylePartialCurl'
    'body': 'UIModalTransitionStylePartialCurl'
  'UINavigationControllerOperationNone (0)':
    'prefix': 'UINavigationControllerOperationNone'
    'body': 'UINavigationControllerOperationNone'
  'UINavigationControllerOperationPop (2)':
    'prefix': 'UINavigationControllerOperationPop'
    'body': 'UINavigationControllerOperationPop'
  'UINavigationControllerOperationPush (1)':
    'prefix': 'UINavigationControllerOperationPush'
    'body': 'UINavigationControllerOperationPush'
  'UIPageViewControllerNavigationDirectionForward (0)':
    'prefix': 'UIPageViewControllerNavigationDirectionForward'
    'body': 'UIPageViewControllerNavigationDirectionForward'
  'UIPageViewControllerNavigationDirectionReverse (1)':
    'prefix': 'UIPageViewControllerNavigationDirectionReverse'
    'body': 'UIPageViewControllerNavigationDirectionReverse'
  'UIPageViewControllerNavigationOrientationHorizontal (0)':
    'prefix': 'UIPageViewControllerNavigationOrientationHorizontal'
    'body': 'UIPageViewControllerNavigationOrientationHorizontal'
  'UIPageViewControllerNavigationOrientationVertical (1)':
    'prefix': 'UIPageViewControllerNavigationOrientationVertical'
    'body': 'UIPageViewControllerNavigationOrientationVertical'
  'UIPageViewControllerSpineLocationMax (3)':
    'prefix': 'UIPageViewControllerSpineLocationMax'
    'body': 'UIPageViewControllerSpineLocationMax'
  'UIPageViewControllerSpineLocationMid (2)':
    'prefix': 'UIPageViewControllerSpineLocationMid'
    'body': 'UIPageViewControllerSpineLocationMid'
  'UIPageViewControllerSpineLocationMin (1)':
    'prefix': 'UIPageViewControllerSpineLocationMin'
    'body': 'UIPageViewControllerSpineLocationMin'
  'UIPageViewControllerSpineLocationNone (0)':
    'prefix': 'UIPageViewControllerSpineLocationNone'
    'body': 'UIPageViewControllerSpineLocationNone'
  'UIPageViewControllerTransitionStylePageCurl (0)':
    'prefix': 'UIPageViewControllerTransitionStylePageCurl'
    'body': 'UIPageViewControllerTransitionStylePageCurl'
  'UIPageViewControllerTransitionStyleScroll (1)':
    'prefix': 'UIPageViewControllerTransitionStyleScroll'
    'body': 'UIPageViewControllerTransitionStyleScroll'
  'UIPopoverArrowDirectionAny (15)':
    'prefix': 'UIPopoverArrowDirectionAny'
    'body': 'UIPopoverArrowDirectionAny'
  'UIPopoverArrowDirectionDown (2)':
    'prefix': 'UIPopoverArrowDirectionDown'
    'body': 'UIPopoverArrowDirectionDown'
  'UIPopoverArrowDirectionLeft (4)':
    'prefix': 'UIPopoverArrowDirectionLeft'
    'body': 'UIPopoverArrowDirectionLeft'
  'UIPopoverArrowDirectionRight (8)':
    'prefix': 'UIPopoverArrowDirectionRight'
    'body': 'UIPopoverArrowDirectionRight'
  'UIPopoverArrowDirectionUnknown (4294967295)':
    'prefix': 'UIPopoverArrowDirectionUnknown'
    'body': 'UIPopoverArrowDirectionUnknown'
  'UIPopoverArrowDirectionUp (1)':
    'prefix': 'UIPopoverArrowDirectionUp'
    'body': 'UIPopoverArrowDirectionUp'
  'UIPrintInfoDuplexLongEdge (1)':
    'prefix': 'UIPrintInfoDuplexLongEdge'
    'body': 'UIPrintInfoDuplexLongEdge'
  'UIPrintInfoDuplexNone (0)':
    'prefix': 'UIPrintInfoDuplexNone'
    'body': 'UIPrintInfoDuplexNone'
  'UIPrintInfoDuplexShortEdge (2)':
    'prefix': 'UIPrintInfoDuplexShortEdge'
    'body': 'UIPrintInfoDuplexShortEdge'
  'UIPrintInfoOrientationLandscape (1)':
    'prefix': 'UIPrintInfoOrientationLandscape'
    'body': 'UIPrintInfoOrientationLandscape'
  'UIPrintInfoOrientationPortrait (0)':
    'prefix': 'UIPrintInfoOrientationPortrait'
    'body': 'UIPrintInfoOrientationPortrait'
  'UIPrintInfoOutputGeneral (0)':
    'prefix': 'UIPrintInfoOutputGeneral'
    'body': 'UIPrintInfoOutputGeneral'
  'UIPrintInfoOutputGrayscale (2)':
    'prefix': 'UIPrintInfoOutputGrayscale'
    'body': 'UIPrintInfoOutputGrayscale'
  'UIPrintInfoOutputPhoto (1)':
    'prefix': 'UIPrintInfoOutputPhoto'
    'body': 'UIPrintInfoOutputPhoto'
  'UIPrintInfoOutputPhotoGrayscale (3)':
    'prefix': 'UIPrintInfoOutputPhotoGrayscale'
    'body': 'UIPrintInfoOutputPhotoGrayscale'
  'UIPrintJobFailedError (4)':
    'prefix': 'UIPrintJobFailedError'
    'body': 'UIPrintJobFailedError'
  'UIPrintNoContentError (2)':
    'prefix': 'UIPrintNoContentError'
    'body': 'UIPrintNoContentError'
  'UIPrintUnknownImageFormatError (3)':
    'prefix': 'UIPrintUnknownImageFormatError'
    'body': 'UIPrintUnknownImageFormatError'
  'UIPrintingNotAvailableError (1)':
    'prefix': 'UIPrintingNotAvailableError'
    'body': 'UIPrintingNotAvailableError'
  'UIProgressViewStyleBar (1)':
    'prefix': 'UIProgressViewStyleBar'
    'body': 'UIProgressViewStyleBar'
  'UIProgressViewStyleDefault (0)':
    'prefix': 'UIProgressViewStyleDefault'
    'body': 'UIProgressViewStyleDefault'
  'UIPushBehaviorModeContinuous (0)':
    'prefix': 'UIPushBehaviorModeContinuous'
    'body': 'UIPushBehaviorModeContinuous'
  'UIPushBehaviorModeInstantaneous (1)':
    'prefix': 'UIPushBehaviorModeInstantaneous'
    'body': 'UIPushBehaviorModeInstantaneous'
  'UIRectCornerAllCorners (4294967295)':
    'prefix': 'UIRectCornerAllCorners'
    'body': 'UIRectCornerAllCorners'
  'UIRectCornerBottomLeft (4)':
    'prefix': 'UIRectCornerBottomLeft'
    'body': 'UIRectCornerBottomLeft'
  'UIRectCornerBottomRight (8)':
    'prefix': 'UIRectCornerBottomRight'
    'body': 'UIRectCornerBottomRight'
  'UIRectCornerTopLeft (1)':
    'prefix': 'UIRectCornerTopLeft'
    'body': 'UIRectCornerTopLeft'
  'UIRectCornerTopRight (2)':
    'prefix': 'UIRectCornerTopRight'
    'body': 'UIRectCornerTopRight'
  'UIRectEdgeAll (15)':
    'prefix': 'UIRectEdgeAll'
    'body': 'UIRectEdgeAll'
  'UIRectEdgeBottom (4)':
    'prefix': 'UIRectEdgeBottom'
    'body': 'UIRectEdgeBottom'
  'UIRectEdgeLeft (2)':
    'prefix': 'UIRectEdgeLeft'
    'body': 'UIRectEdgeLeft'
  'UIRectEdgeNone (0)':
    'prefix': 'UIRectEdgeNone'
    'body': 'UIRectEdgeNone'
  'UIRectEdgeRight (8)':
    'prefix': 'UIRectEdgeRight'
    'body': 'UIRectEdgeRight'
  'UIRectEdgeTop (1)':
    'prefix': 'UIRectEdgeTop'
    'body': 'UIRectEdgeTop'
  'UIRemoteNotificationTypeAlert (4)':
    'prefix': 'UIRemoteNotificationTypeAlert'
    'body': 'UIRemoteNotificationTypeAlert'
  'UIRemoteNotificationTypeBadge (1)':
    'prefix': 'UIRemoteNotificationTypeBadge'
    'body': 'UIRemoteNotificationTypeBadge'
  'UIRemoteNotificationTypeNewsstandContentAvailability (8)':
    'prefix': 'UIRemoteNotificationTypeNewsstandContentAvailability'
    'body': 'UIRemoteNotificationTypeNewsstandContentAvailability'
  'UIRemoteNotificationTypeNone (0)':
    'prefix': 'UIRemoteNotificationTypeNone'
    'body': 'UIRemoteNotificationTypeNone'
  'UIRemoteNotificationTypeSound (2)':
    'prefix': 'UIRemoteNotificationTypeSound'
    'body': 'UIRemoteNotificationTypeSound'
  'UIReturnKeyDefault (0)':
    'prefix': 'UIReturnKeyDefault'
    'body': 'UIReturnKeyDefault'
  'UIReturnKeyDone (9)':
    'prefix': 'UIReturnKeyDone'
    'body': 'UIReturnKeyDone'
  'UIReturnKeyEmergencyCall (10)':
    'prefix': 'UIReturnKeyEmergencyCall'
    'body': 'UIReturnKeyEmergencyCall'
  'UIReturnKeyGo (1)':
    'prefix': 'UIReturnKeyGo'
    'body': 'UIReturnKeyGo'
  'UIReturnKeyGoogle (2)':
    'prefix': 'UIReturnKeyGoogle'
    'body': 'UIReturnKeyGoogle'
  'UIReturnKeyJoin (3)':
    'prefix': 'UIReturnKeyJoin'
    'body': 'UIReturnKeyJoin'
  'UIReturnKeyNext (4)':
    'prefix': 'UIReturnKeyNext'
    'body': 'UIReturnKeyNext'
  'UIReturnKeyRoute (5)':
    'prefix': 'UIReturnKeyRoute'
    'body': 'UIReturnKeyRoute'
  'UIReturnKeySearch (6)':
    'prefix': 'UIReturnKeySearch'
    'body': 'UIReturnKeySearch'
  'UIReturnKeySend (7)':
    'prefix': 'UIReturnKeySend'
    'body': 'UIReturnKeySend'
  'UIReturnKeyYahoo (8)':
    'prefix': 'UIReturnKeyYahoo'
    'body': 'UIReturnKeyYahoo'
  'UIScreenOverscanCompensationInsetApplicationFrame (2)':
    'prefix': 'UIScreenOverscanCompensationInsetApplicationFrame'
    'body': 'UIScreenOverscanCompensationInsetApplicationFrame'
  'UIScreenOverscanCompensationInsetBounds (1)':
    'prefix': 'UIScreenOverscanCompensationInsetBounds'
    'body': 'UIScreenOverscanCompensationInsetBounds'
  'UIScreenOverscanCompensationScale (0)':
    'prefix': 'UIScreenOverscanCompensationScale'
    'body': 'UIScreenOverscanCompensationScale'
  'UIScrollViewIndicatorStyleBlack (1)':
    'prefix': 'UIScrollViewIndicatorStyleBlack'
    'body': 'UIScrollViewIndicatorStyleBlack'
  'UIScrollViewIndicatorStyleDefault (0)':
    'prefix': 'UIScrollViewIndicatorStyleDefault'
    'body': 'UIScrollViewIndicatorStyleDefault'
  'UIScrollViewIndicatorStyleWhite (2)':
    'prefix': 'UIScrollViewIndicatorStyleWhite'
    'body': 'UIScrollViewIndicatorStyleWhite'
  'UIScrollViewKeyboardDismissModeInteractive (2)':
    'prefix': 'UIScrollViewKeyboardDismissModeInteractive'
    'body': 'UIScrollViewKeyboardDismissModeInteractive'
  'UIScrollViewKeyboardDismissModeNone (0)':
    'prefix': 'UIScrollViewKeyboardDismissModeNone'
    'body': 'UIScrollViewKeyboardDismissModeNone'
  'UIScrollViewKeyboardDismissModeOnDrag (1)':
    'prefix': 'UIScrollViewKeyboardDismissModeOnDrag'
    'body': 'UIScrollViewKeyboardDismissModeOnDrag'
  'UISearchBarIconBookmark (2)':
    'prefix': 'UISearchBarIconBookmark'
    'body': 'UISearchBarIconBookmark'
  'UISearchBarIconClear (1)':
    'prefix': 'UISearchBarIconClear'
    'body': 'UISearchBarIconClear'
  'UISearchBarIconResultsList (3)':
    'prefix': 'UISearchBarIconResultsList'
    'body': 'UISearchBarIconResultsList'
  'UISearchBarIconSearch (0)':
    'prefix': 'UISearchBarIconSearch'
    'body': 'UISearchBarIconSearch'
  'UISearchBarStyleDefault (0)':
    'prefix': 'UISearchBarStyleDefault'
    'body': 'UISearchBarStyleDefault'
  'UISearchBarStyleMinimal (2)':
    'prefix': 'UISearchBarStyleMinimal'
    'body': 'UISearchBarStyleMinimal'
  'UISearchBarStyleProminent (1)':
    'prefix': 'UISearchBarStyleProminent'
    'body': 'UISearchBarStyleProminent'
  'UISegmentedControlNoSegment (-1)':
    'prefix': 'UISegmentedControlNoSegment'
    'body': 'UISegmentedControlNoSegment'
  'UISegmentedControlSegmentAlone (4)':
    'prefix': 'UISegmentedControlSegmentAlone'
    'body': 'UISegmentedControlSegmentAlone'
  'UISegmentedControlSegmentAny (0)':
    'prefix': 'UISegmentedControlSegmentAny'
    'body': 'UISegmentedControlSegmentAny'
  'UISegmentedControlSegmentCenter (2)':
    'prefix': 'UISegmentedControlSegmentCenter'
    'body': 'UISegmentedControlSegmentCenter'
  'UISegmentedControlSegmentLeft (1)':
    'prefix': 'UISegmentedControlSegmentLeft'
    'body': 'UISegmentedControlSegmentLeft'
  'UISegmentedControlSegmentRight (3)':
    'prefix': 'UISegmentedControlSegmentRight'
    'body': 'UISegmentedControlSegmentRight'
  'UISegmentedControlStyleBar (2)':
    'prefix': 'UISegmentedControlStyleBar'
    'body': 'UISegmentedControlStyleBar'
  'UISegmentedControlStyleBezeled (3)':
    'prefix': 'UISegmentedControlStyleBezeled'
    'body': 'UISegmentedControlStyleBezeled'
  'UISegmentedControlStyleBordered (1)':
    'prefix': 'UISegmentedControlStyleBordered'
    'body': 'UISegmentedControlStyleBordered'
  'UISegmentedControlStylePlain (0)':
    'prefix': 'UISegmentedControlStylePlain'
    'body': 'UISegmentedControlStylePlain'
  'UIStatusBarAnimationFade (1)':
    'prefix': 'UIStatusBarAnimationFade'
    'body': 'UIStatusBarAnimationFade'
  'UIStatusBarAnimationNone (0)':
    'prefix': 'UIStatusBarAnimationNone'
    'body': 'UIStatusBarAnimationNone'
  'UIStatusBarAnimationSlide (2)':
    'prefix': 'UIStatusBarAnimationSlide'
    'body': 'UIStatusBarAnimationSlide'
  'UIStatusBarStyleBlackOpaque (2)':
    'prefix': 'UIStatusBarStyleBlackOpaque'
    'body': 'UIStatusBarStyleBlackOpaque'
  'UIStatusBarStyleBlackTranslucent (1)':
    'prefix': 'UIStatusBarStyleBlackTranslucent'
    'body': 'UIStatusBarStyleBlackTranslucent'
  'UIStatusBarStyleDefault (0)':
    'prefix': 'UIStatusBarStyleDefault'
    'body': 'UIStatusBarStyleDefault'
  'UIStatusBarStyleLightContent (1)':
    'prefix': 'UIStatusBarStyleLightContent'
    'body': 'UIStatusBarStyleLightContent'
  'UISwipeGestureRecognizerDirectionDown (8)':
    'prefix': 'UISwipeGestureRecognizerDirectionDown'
    'body': 'UISwipeGestureRecognizerDirectionDown'
  'UISwipeGestureRecognizerDirectionLeft (2)':
    'prefix': 'UISwipeGestureRecognizerDirectionLeft'
    'body': 'UISwipeGestureRecognizerDirectionLeft'
  'UISwipeGestureRecognizerDirectionRight (1)':
    'prefix': 'UISwipeGestureRecognizerDirectionRight'
    'body': 'UISwipeGestureRecognizerDirectionRight'
  'UISwipeGestureRecognizerDirectionUp (4)':
    'prefix': 'UISwipeGestureRecognizerDirectionUp'
    'body': 'UISwipeGestureRecognizerDirectionUp'
  'UISystemAnimationDelete (0)':
    'prefix': 'UISystemAnimationDelete'
    'body': 'UISystemAnimationDelete'
  'UITabBarItemPositioningAutomatic (0)':
    'prefix': 'UITabBarItemPositioningAutomatic'
    'body': 'UITabBarItemPositioningAutomatic'
  'UITabBarItemPositioningCentered (2)':
    'prefix': 'UITabBarItemPositioningCentered'
    'body': 'UITabBarItemPositioningCentered'
  'UITabBarItemPositioningFill (1)':
    'prefix': 'UITabBarItemPositioningFill'
    'body': 'UITabBarItemPositioningFill'
  'UITabBarSystemItemBookmarks (7)':
    'prefix': 'UITabBarSystemItemBookmarks'
    'body': 'UITabBarSystemItemBookmarks'
  'UITabBarSystemItemContacts (5)':
    'prefix': 'UITabBarSystemItemContacts'
    'body': 'UITabBarSystemItemContacts'
  'UITabBarSystemItemDownloads (9)':
    'prefix': 'UITabBarSystemItemDownloads'
    'body': 'UITabBarSystemItemDownloads'
  'UITabBarSystemItemFavorites (1)':
    'prefix': 'UITabBarSystemItemFavorites'
    'body': 'UITabBarSystemItemFavorites'
  'UITabBarSystemItemFeatured (2)':
    'prefix': 'UITabBarSystemItemFeatured'
    'body': 'UITabBarSystemItemFeatured'
  'UITabBarSystemItemHistory (6)':
    'prefix': 'UITabBarSystemItemHistory'
    'body': 'UITabBarSystemItemHistory'
  'UITabBarSystemItemMore (0)':
    'prefix': 'UITabBarSystemItemMore'
    'body': 'UITabBarSystemItemMore'
  'UITabBarSystemItemMostRecent (10)':
    'prefix': 'UITabBarSystemItemMostRecent'
    'body': 'UITabBarSystemItemMostRecent'
  'UITabBarSystemItemMostViewed (11)':
    'prefix': 'UITabBarSystemItemMostViewed'
    'body': 'UITabBarSystemItemMostViewed'
  'UITabBarSystemItemRecents (4)':
    'prefix': 'UITabBarSystemItemRecents'
    'body': 'UITabBarSystemItemRecents'
  'UITabBarSystemItemSearch (8)':
    'prefix': 'UITabBarSystemItemSearch'
    'body': 'UITabBarSystemItemSearch'
  'UITabBarSystemItemTopRated (3)':
    'prefix': 'UITabBarSystemItemTopRated'
    'body': 'UITabBarSystemItemTopRated'
  'UITableViewCellAccessoryCheckmark (3)':
    'prefix': 'UITableViewCellAccessoryCheckmark'
    'body': 'UITableViewCellAccessoryCheckmark'
  'UITableViewCellAccessoryDetailButton (4)':
    'prefix': 'UITableViewCellAccessoryDetailButton'
    'body': 'UITableViewCellAccessoryDetailButton'
  'UITableViewCellAccessoryDetailDisclosureButton (2)':
    'prefix': 'UITableViewCellAccessoryDetailDisclosureButton'
    'body': 'UITableViewCellAccessoryDetailDisclosureButton'
  'UITableViewCellAccessoryDisclosureIndicator (1)':
    'prefix': 'UITableViewCellAccessoryDisclosureIndicator'
    'body': 'UITableViewCellAccessoryDisclosureIndicator'
  'UITableViewCellAccessoryNone (0)':
    'prefix': 'UITableViewCellAccessoryNone'
    'body': 'UITableViewCellAccessoryNone'
  'UITableViewCellEditingStyleDelete (1)':
    'prefix': 'UITableViewCellEditingStyleDelete'
    'body': 'UITableViewCellEditingStyleDelete'
  'UITableViewCellEditingStyleInsert (2)':
    'prefix': 'UITableViewCellEditingStyleInsert'
    'body': 'UITableViewCellEditingStyleInsert'
  'UITableViewCellEditingStyleNone (0)':
    'prefix': 'UITableViewCellEditingStyleNone'
    'body': 'UITableViewCellEditingStyleNone'
  'UITableViewCellSelectionStyleBlue (1)':
    'prefix': 'UITableViewCellSelectionStyleBlue'
    'body': 'UITableViewCellSelectionStyleBlue'
  'UITableViewCellSelectionStyleDefault (3)':
    'prefix': 'UITableViewCellSelectionStyleDefault'
    'body': 'UITableViewCellSelectionStyleDefault'
  'UITableViewCellSelectionStyleGray (2)':
    'prefix': 'UITableViewCellSelectionStyleGray'
    'body': 'UITableViewCellSelectionStyleGray'
  'UITableViewCellSelectionStyleNone (0)':
    'prefix': 'UITableViewCellSelectionStyleNone'
    'body': 'UITableViewCellSelectionStyleNone'
  'UITableViewCellSeparatorStyleNone (0)':
    'prefix': 'UITableViewCellSeparatorStyleNone'
    'body': 'UITableViewCellSeparatorStyleNone'
  'UITableViewCellSeparatorStyleSingleLine (1)':
    'prefix': 'UITableViewCellSeparatorStyleSingleLine'
    'body': 'UITableViewCellSeparatorStyleSingleLine'
  'UITableViewCellSeparatorStyleSingleLineEtched (2)':
    'prefix': 'UITableViewCellSeparatorStyleSingleLineEtched'
    'body': 'UITableViewCellSeparatorStyleSingleLineEtched'
  'UITableViewCellStateDefaultMask (0)':
    'prefix': 'UITableViewCellStateDefaultMask'
    'body': 'UITableViewCellStateDefaultMask'
  'UITableViewCellStateEditingMask (1)':
    'prefix': 'UITableViewCellStateEditingMask'
    'body': 'UITableViewCellStateEditingMask'
  'UITableViewCellStateShowingDeleteConfirmationMask (2)':
    'prefix': 'UITableViewCellStateShowingDeleteConfirmationMask'
    'body': 'UITableViewCellStateShowingDeleteConfirmationMask'
  'UITableViewCellStateShowingEditControlMask (1)':
    'prefix': 'UITableViewCellStateShowingEditControlMask'
    'body': 'UITableViewCellStateShowingEditControlMask'
  'UITableViewCellStyleDefault (0)':
    'prefix': 'UITableViewCellStyleDefault'
    'body': 'UITableViewCellStyleDefault'
  'UITableViewCellStyleSubtitle (3)':
    'prefix': 'UITableViewCellStyleSubtitle'
    'body': 'UITableViewCellStyleSubtitle'
  'UITableViewCellStyleValue1 (1)':
    'prefix': 'UITableViewCellStyleValue1'
    'body': 'UITableViewCellStyleValue1'
  'UITableViewCellStyleValue2 (2)':
    'prefix': 'UITableViewCellStyleValue2'
    'body': 'UITableViewCellStyleValue2'
  'UITableViewRowAnimationAutomatic (100)':
    'prefix': 'UITableViewRowAnimationAutomatic'
    'body': 'UITableViewRowAnimationAutomatic'
  'UITableViewRowAnimationBottom (4)':
    'prefix': 'UITableViewRowAnimationBottom'
    'body': 'UITableViewRowAnimationBottom'
  'UITableViewRowAnimationFade (0)':
    'prefix': 'UITableViewRowAnimationFade'
    'body': 'UITableViewRowAnimationFade'
  'UITableViewRowAnimationLeft (2)':
    'prefix': 'UITableViewRowAnimationLeft'
    'body': 'UITableViewRowAnimationLeft'
  'UITableViewRowAnimationMiddle (6)':
    'prefix': 'UITableViewRowAnimationMiddle'
    'body': 'UITableViewRowAnimationMiddle'
  'UITableViewRowAnimationNone (5)':
    'prefix': 'UITableViewRowAnimationNone'
    'body': 'UITableViewRowAnimationNone'
  'UITableViewRowAnimationRight (1)':
    'prefix': 'UITableViewRowAnimationRight'
    'body': 'UITableViewRowAnimationRight'
  'UITableViewRowAnimationTop (3)':
    'prefix': 'UITableViewRowAnimationTop'
    'body': 'UITableViewRowAnimationTop'
  'UITableViewScrollPositionBottom (3)':
    'prefix': 'UITableViewScrollPositionBottom'
    'body': 'UITableViewScrollPositionBottom'
  'UITableViewScrollPositionMiddle (2)':
    'prefix': 'UITableViewScrollPositionMiddle'
    'body': 'UITableViewScrollPositionMiddle'
  'UITableViewScrollPositionNone (0)':
    'prefix': 'UITableViewScrollPositionNone'
    'body': 'UITableViewScrollPositionNone'
  'UITableViewScrollPositionTop (1)':
    'prefix': 'UITableViewScrollPositionTop'
    'body': 'UITableViewScrollPositionTop'
  'UITableViewStyleGrouped (1)':
    'prefix': 'UITableViewStyleGrouped'
    'body': 'UITableViewStyleGrouped'
  'UITableViewStylePlain (0)':
    'prefix': 'UITableViewStylePlain'
    'body': 'UITableViewStylePlain'
  'UITextAlignmentCenter (1)':
    'prefix': 'UITextAlignmentCenter'
    'body': 'UITextAlignmentCenter'
  'UITextAlignmentLeft (0)':
    'prefix': 'UITextAlignmentLeft'
    'body': 'UITextAlignmentLeft'
  'UITextAlignmentRight (2)':
    'prefix': 'UITextAlignmentRight'
    'body': 'UITextAlignmentRight'
  'UITextAutocapitalizationTypeAllCharacters (3)':
    'prefix': 'UITextAutocapitalizationTypeAllCharacters'
    'body': 'UITextAutocapitalizationTypeAllCharacters'
  'UITextAutocapitalizationTypeNone (0)':
    'prefix': 'UITextAutocapitalizationTypeNone'
    'body': 'UITextAutocapitalizationTypeNone'
  'UITextAutocapitalizationTypeSentences (2)':
    'prefix': 'UITextAutocapitalizationTypeSentences'
    'body': 'UITextAutocapitalizationTypeSentences'
  'UITextAutocapitalizationTypeWords (1)':
    'prefix': 'UITextAutocapitalizationTypeWords'
    'body': 'UITextAutocapitalizationTypeWords'
  'UITextAutocorrectionTypeDefault (0)':
    'prefix': 'UITextAutocorrectionTypeDefault'
    'body': 'UITextAutocorrectionTypeDefault'
  'UITextAutocorrectionTypeNo (1)':
    'prefix': 'UITextAutocorrectionTypeNo'
    'body': 'UITextAutocorrectionTypeNo'
  'UITextAutocorrectionTypeYes (2)':
    'prefix': 'UITextAutocorrectionTypeYes'
    'body': 'UITextAutocorrectionTypeYes'
  'UITextBorderStyleBezel (2)':
    'prefix': 'UITextBorderStyleBezel'
    'body': 'UITextBorderStyleBezel'
  'UITextBorderStyleLine (1)':
    'prefix': 'UITextBorderStyleLine'
    'body': 'UITextBorderStyleLine'
  'UITextBorderStyleNone (0)':
    'prefix': 'UITextBorderStyleNone'
    'body': 'UITextBorderStyleNone'
  'UITextBorderStyleRoundedRect (3)':
    'prefix': 'UITextBorderStyleRoundedRect'
    'body': 'UITextBorderStyleRoundedRect'
  'UITextFieldViewModeAlways (3)':
    'prefix': 'UITextFieldViewModeAlways'
    'body': 'UITextFieldViewModeAlways'
  'UITextFieldViewModeNever (0)':
    'prefix': 'UITextFieldViewModeNever'
    'body': 'UITextFieldViewModeNever'
  'UITextFieldViewModeUnlessEditing (2)':
    'prefix': 'UITextFieldViewModeUnlessEditing'
    'body': 'UITextFieldViewModeUnlessEditing'
  'UITextFieldViewModeWhileEditing (1)':
    'prefix': 'UITextFieldViewModeWhileEditing'
    'body': 'UITextFieldViewModeWhileEditing'
  'UITextGranularityCharacter (0)':
    'prefix': 'UITextGranularityCharacter'
    'body': 'UITextGranularityCharacter'
  'UITextGranularityDocument (5)':
    'prefix': 'UITextGranularityDocument'
    'body': 'UITextGranularityDocument'
  'UITextGranularityLine (4)':
    'prefix': 'UITextGranularityLine'
    'body': 'UITextGranularityLine'
  'UITextGranularityParagraph (3)':
    'prefix': 'UITextGranularityParagraph'
    'body': 'UITextGranularityParagraph'
  'UITextGranularitySentence (2)':
    'prefix': 'UITextGranularitySentence'
    'body': 'UITextGranularitySentence'
  'UITextGranularityWord (1)':
    'prefix': 'UITextGranularityWord'
    'body': 'UITextGranularityWord'
  'UITextLayoutDirectionDown (5)':
    'prefix': 'UITextLayoutDirectionDown'
    'body': 'UITextLayoutDirectionDown'
  'UITextLayoutDirectionLeft (3)':
    'prefix': 'UITextLayoutDirectionLeft'
    'body': 'UITextLayoutDirectionLeft'
  'UITextLayoutDirectionRight (2)':
    'prefix': 'UITextLayoutDirectionRight'
    'body': 'UITextLayoutDirectionRight'
  'UITextLayoutDirectionUp (4)':
    'prefix': 'UITextLayoutDirectionUp'
    'body': 'UITextLayoutDirectionUp'
  'UITextSpellCheckingTypeDefault (0)':
    'prefix': 'UITextSpellCheckingTypeDefault'
    'body': 'UITextSpellCheckingTypeDefault'
  'UITextSpellCheckingTypeNo (1)':
    'prefix': 'UITextSpellCheckingTypeNo'
    'body': 'UITextSpellCheckingTypeNo'
  'UITextSpellCheckingTypeYes (2)':
    'prefix': 'UITextSpellCheckingTypeYes'
    'body': 'UITextSpellCheckingTypeYes'
  'UITextStorageDirectionBackward (1)':
    'prefix': 'UITextStorageDirectionBackward'
    'body': 'UITextStorageDirectionBackward'
  'UITextStorageDirectionForward (0)':
    'prefix': 'UITextStorageDirectionForward'
    'body': 'UITextStorageDirectionForward'
  'UITextWritingDirectionLeftToRight (0)':
    'prefix': 'UITextWritingDirectionLeftToRight'
    'body': 'UITextWritingDirectionLeftToRight'
  'UITextWritingDirectionNatural (-1)':
    'prefix': 'UITextWritingDirectionNatural'
    'body': 'UITextWritingDirectionNatural'
  'UITextWritingDirectionRightToLeft (1)':
    'prefix': 'UITextWritingDirectionRightToLeft'
    'body': 'UITextWritingDirectionRightToLeft'
  'UIToolbarPositionAny (0)':
    'prefix': 'UIToolbarPositionAny'
    'body': 'UIToolbarPositionAny'
  'UIToolbarPositionBottom (1)':
    'prefix': 'UIToolbarPositionBottom'
    'body': 'UIToolbarPositionBottom'
  'UIToolbarPositionTop (2)':
    'prefix': 'UIToolbarPositionTop'
    'body': 'UIToolbarPositionTop'
  'UITouchPhaseBegan (0)':
    'prefix': 'UITouchPhaseBegan'
    'body': 'UITouchPhaseBegan'
  'UITouchPhaseCancelled (4)':
    'prefix': 'UITouchPhaseCancelled'
    'body': 'UITouchPhaseCancelled'
  'UITouchPhaseEnded (3)':
    'prefix': 'UITouchPhaseEnded'
    'body': 'UITouchPhaseEnded'
  'UITouchPhaseMoved (1)':
    'prefix': 'UITouchPhaseMoved'
    'body': 'UITouchPhaseMoved'
  'UITouchPhaseStationary (2)':
    'prefix': 'UITouchPhaseStationary'
    'body': 'UITouchPhaseStationary'
  'UIUserInterfaceIdiomPad (1)':
    'prefix': 'UIUserInterfaceIdiomPad'
    'body': 'UIUserInterfaceIdiomPad'
  'UIUserInterfaceIdiomPhone (0)':
    'prefix': 'UIUserInterfaceIdiomPhone'
    'body': 'UIUserInterfaceIdiomPhone'
  'UIUserInterfaceLayoutDirectionLeftToRight (0)':
    'prefix': 'UIUserInterfaceLayoutDirectionLeftToRight'
    'body': 'UIUserInterfaceLayoutDirectionLeftToRight'
  'UIUserInterfaceLayoutDirectionRightToLeft (1)':
    'prefix': 'UIUserInterfaceLayoutDirectionRightToLeft'
    'body': 'UIUserInterfaceLayoutDirectionRightToLeft'
  'UIViewAnimationCurveEaseIn (1)':
    'prefix': 'UIViewAnimationCurveEaseIn'
    'body': 'UIViewAnimationCurveEaseIn'
  'UIViewAnimationCurveEaseInOut (0)':
    'prefix': 'UIViewAnimationCurveEaseInOut'
    'body': 'UIViewAnimationCurveEaseInOut'
  'UIViewAnimationCurveEaseOut (2)':
    'prefix': 'UIViewAnimationCurveEaseOut'
    'body': 'UIViewAnimationCurveEaseOut'
  'UIViewAnimationCurveLinear (3)':
    'prefix': 'UIViewAnimationCurveLinear'
    'body': 'UIViewAnimationCurveLinear'
  'UIViewAnimationOptionAllowAnimatedContent (128)':
    'prefix': 'UIViewAnimationOptionAllowAnimatedContent'
    'body': 'UIViewAnimationOptionAllowAnimatedContent'
  'UIViewAnimationOptionAllowUserInteraction (2)':
    'prefix': 'UIViewAnimationOptionAllowUserInteraction'
    'body': 'UIViewAnimationOptionAllowUserInteraction'
  'UIViewAnimationOptionAutoreverse (16)':
    'prefix': 'UIViewAnimationOptionAutoreverse'
    'body': 'UIViewAnimationOptionAutoreverse'
  'UIViewAnimationOptionBeginFromCurrentState (4)':
    'prefix': 'UIViewAnimationOptionBeginFromCurrentState'
    'body': 'UIViewAnimationOptionBeginFromCurrentState'
  'UIViewAnimationOptionCurveEaseIn (65536)':
    'prefix': 'UIViewAnimationOptionCurveEaseIn'
    'body': 'UIViewAnimationOptionCurveEaseIn'
  'UIViewAnimationOptionCurveEaseInOut (0)':
    'prefix': 'UIViewAnimationOptionCurveEaseInOut'
    'body': 'UIViewAnimationOptionCurveEaseInOut'
  'UIViewAnimationOptionCurveEaseOut (131072)':
    'prefix': 'UIViewAnimationOptionCurveEaseOut'
    'body': 'UIViewAnimationOptionCurveEaseOut'
  'UIViewAnimationOptionCurveLinear (196608)':
    'prefix': 'UIViewAnimationOptionCurveLinear'
    'body': 'UIViewAnimationOptionCurveLinear'
  'UIViewAnimationOptionLayoutSubviews (1)':
    'prefix': 'UIViewAnimationOptionLayoutSubviews'
    'body': 'UIViewAnimationOptionLayoutSubviews'
  'UIViewAnimationOptionOverrideInheritedCurve (64)':
    'prefix': 'UIViewAnimationOptionOverrideInheritedCurve'
    'body': 'UIViewAnimationOptionOverrideInheritedCurve'
  'UIViewAnimationOptionOverrideInheritedDuration (32)':
    'prefix': 'UIViewAnimationOptionOverrideInheritedDuration'
    'body': 'UIViewAnimationOptionOverrideInheritedDuration'
  'UIViewAnimationOptionOverrideInheritedOptions (512)':
    'prefix': 'UIViewAnimationOptionOverrideInheritedOptions'
    'body': 'UIViewAnimationOptionOverrideInheritedOptions'
  'UIViewAnimationOptionRepeat (8)':
    'prefix': 'UIViewAnimationOptionRepeat'
    'body': 'UIViewAnimationOptionRepeat'
  'UIViewAnimationOptionShowHideTransitionViews (256)':
    'prefix': 'UIViewAnimationOptionShowHideTransitionViews'
    'body': 'UIViewAnimationOptionShowHideTransitionViews'
  'UIViewAnimationOptionTransitionCrossDissolve (5242880)':
    'prefix': 'UIViewAnimationOptionTransitionCrossDissolve'
    'body': 'UIViewAnimationOptionTransitionCrossDissolve'
  'UIViewAnimationOptionTransitionCurlDown (4194304)':
    'prefix': 'UIViewAnimationOptionTransitionCurlDown'
    'body': 'UIViewAnimationOptionTransitionCurlDown'
  'UIViewAnimationOptionTransitionCurlUp (3145728)':
    'prefix': 'UIViewAnimationOptionTransitionCurlUp'
    'body': 'UIViewAnimationOptionTransitionCurlUp'
  'UIViewAnimationOptionTransitionFlipFromBottom (7340032)':
    'prefix': 'UIViewAnimationOptionTransitionFlipFromBottom'
    'body': 'UIViewAnimationOptionTransitionFlipFromBottom'
  'UIViewAnimationOptionTransitionFlipFromLeft (1048576)':
    'prefix': 'UIViewAnimationOptionTransitionFlipFromLeft'
    'body': 'UIViewAnimationOptionTransitionFlipFromLeft'
  'UIViewAnimationOptionTransitionFlipFromRight (2097152)':
    'prefix': 'UIViewAnimationOptionTransitionFlipFromRight'
    'body': 'UIViewAnimationOptionTransitionFlipFromRight'
  'UIViewAnimationOptionTransitionFlipFromTop (6291456)':
    'prefix': 'UIViewAnimationOptionTransitionFlipFromTop'
    'body': 'UIViewAnimationOptionTransitionFlipFromTop'
  'UIViewAnimationOptionTransitionNone (0)':
    'prefix': 'UIViewAnimationOptionTransitionNone'
    'body': 'UIViewAnimationOptionTransitionNone'
  'UIViewAnimationTransitionCurlDown (4)':
    'prefix': 'UIViewAnimationTransitionCurlDown'
    'body': 'UIViewAnimationTransitionCurlDown'
  'UIViewAnimationTransitionCurlUp (3)':
    'prefix': 'UIViewAnimationTransitionCurlUp'
    'body': 'UIViewAnimationTransitionCurlUp'
  'UIViewAnimationTransitionFlipFromLeft (1)':
    'prefix': 'UIViewAnimationTransitionFlipFromLeft'
    'body': 'UIViewAnimationTransitionFlipFromLeft'
  'UIViewAnimationTransitionFlipFromRight (2)':
    'prefix': 'UIViewAnimationTransitionFlipFromRight'
    'body': 'UIViewAnimationTransitionFlipFromRight'
  'UIViewAnimationTransitionNone (0)':
    'prefix': 'UIViewAnimationTransitionNone'
    'body': 'UIViewAnimationTransitionNone'
  'UIViewAutoresizingFlexibleBottomMargin (32)':
    'prefix': 'UIViewAutoresizingFlexibleBottomMargin'
    'body': 'UIViewAutoresizingFlexibleBottomMargin'
  'UIViewAutoresizingFlexibleHeight (16)':
    'prefix': 'UIViewAutoresizingFlexibleHeight'
    'body': 'UIViewAutoresizingFlexibleHeight'
  'UIViewAutoresizingFlexibleLeftMargin (1)':
    'prefix': 'UIViewAutoresizingFlexibleLeftMargin'
    'body': 'UIViewAutoresizingFlexibleLeftMargin'
  'UIViewAutoresizingFlexibleRightMargin (4)':
    'prefix': 'UIViewAutoresizingFlexibleRightMargin'
    'body': 'UIViewAutoresizingFlexibleRightMargin'
  'UIViewAutoresizingFlexibleTopMargin (8)':
    'prefix': 'UIViewAutoresizingFlexibleTopMargin'
    'body': 'UIViewAutoresizingFlexibleTopMargin'
  'UIViewAutoresizingFlexibleWidth (2)':
    'prefix': 'UIViewAutoresizingFlexibleWidth'
    'body': 'UIViewAutoresizingFlexibleWidth'
  'UIViewAutoresizingNone (0)':
    'prefix': 'UIViewAutoresizingNone'
    'body': 'UIViewAutoresizingNone'
  'UIViewContentModeBottom (6)':
    'prefix': 'UIViewContentModeBottom'
    'body': 'UIViewContentModeBottom'
  'UIViewContentModeBottomLeft (11)':
    'prefix': 'UIViewContentModeBottomLeft'
    'body': 'UIViewContentModeBottomLeft'
  'UIViewContentModeBottomRight (12)':
    'prefix': 'UIViewContentModeBottomRight'
    'body': 'UIViewContentModeBottomRight'
  'UIViewContentModeCenter (4)':
    'prefix': 'UIViewContentModeCenter'
    'body': 'UIViewContentModeCenter'
  'UIViewContentModeLeft (7)':
    'prefix': 'UIViewContentModeLeft'
    'body': 'UIViewContentModeLeft'
  'UIViewContentModeRedraw (3)':
    'prefix': 'UIViewContentModeRedraw'
    'body': 'UIViewContentModeRedraw'
  'UIViewContentModeRight (8)':
    'prefix': 'UIViewContentModeRight'
    'body': 'UIViewContentModeRight'
  'UIViewContentModeScaleAspectFill (2)':
    'prefix': 'UIViewContentModeScaleAspectFill'
    'body': 'UIViewContentModeScaleAspectFill'
  'UIViewContentModeScaleAspectFit (1)':
    'prefix': 'UIViewContentModeScaleAspectFit'
    'body': 'UIViewContentModeScaleAspectFit'
  'UIViewContentModeScaleToFill (0)':
    'prefix': 'UIViewContentModeScaleToFill'
    'body': 'UIViewContentModeScaleToFill'
  'UIViewContentModeTop (5)':
    'prefix': 'UIViewContentModeTop'
    'body': 'UIViewContentModeTop'
  'UIViewContentModeTopLeft (9)':
    'prefix': 'UIViewContentModeTopLeft'
    'body': 'UIViewContentModeTopLeft'
  'UIViewContentModeTopRight (10)':
    'prefix': 'UIViewContentModeTopRight'
    'body': 'UIViewContentModeTopRight'
  'UIViewKeyframeAnimationOptionAllowUserInteraction (2)':
    'prefix': 'UIViewKeyframeAnimationOptionAllowUserInteraction'
    'body': 'UIViewKeyframeAnimationOptionAllowUserInteraction'
  'UIViewKeyframeAnimationOptionAutoreverse (16)':
    'prefix': 'UIViewKeyframeAnimationOptionAutoreverse'
    'body': 'UIViewKeyframeAnimationOptionAutoreverse'
  'UIViewKeyframeAnimationOptionBeginFromCurrentState (4)':
    'prefix': 'UIViewKeyframeAnimationOptionBeginFromCurrentState'
    'body': 'UIViewKeyframeAnimationOptionBeginFromCurrentState'
  'UIViewKeyframeAnimationOptionCalculationModeCubic (3072)':
    'prefix': 'UIViewKeyframeAnimationOptionCalculationModeCubic'
    'body': 'UIViewKeyframeAnimationOptionCalculationModeCubic'
  'UIViewKeyframeAnimationOptionCalculationModeCubicPaced (4096)':
    'prefix': 'UIViewKeyframeAnimationOptionCalculationModeCubicPaced'
    'body': 'UIViewKeyframeAnimationOptionCalculationModeCubicPaced'
  'UIViewKeyframeAnimationOptionCalculationModeDiscrete (1024)':
    'prefix': 'UIViewKeyframeAnimationOptionCalculationModeDiscrete'
    'body': 'UIViewKeyframeAnimationOptionCalculationModeDiscrete'
  'UIViewKeyframeAnimationOptionCalculationModeLinear (0)':
    'prefix': 'UIViewKeyframeAnimationOptionCalculationModeLinear'
    'body': 'UIViewKeyframeAnimationOptionCalculationModeLinear'
  'UIViewKeyframeAnimationOptionCalculationModePaced (2048)':
    'prefix': 'UIViewKeyframeAnimationOptionCalculationModePaced'
    'body': 'UIViewKeyframeAnimationOptionCalculationModePaced'
  'UIViewKeyframeAnimationOptionLayoutSubviews (1)':
    'prefix': 'UIViewKeyframeAnimationOptionLayoutSubviews'
    'body': 'UIViewKeyframeAnimationOptionLayoutSubviews'
  'UIViewKeyframeAnimationOptionOverrideInheritedDuration (32)':
    'prefix': 'UIViewKeyframeAnimationOptionOverrideInheritedDuration'
    'body': 'UIViewKeyframeAnimationOptionOverrideInheritedDuration'
  'UIViewKeyframeAnimationOptionOverrideInheritedOptions (512)':
    'prefix': 'UIViewKeyframeAnimationOptionOverrideInheritedOptions'
    'body': 'UIViewKeyframeAnimationOptionOverrideInheritedOptions'
  'UIViewKeyframeAnimationOptionRepeat (8)':
    'prefix': 'UIViewKeyframeAnimationOptionRepeat'
    'body': 'UIViewKeyframeAnimationOptionRepeat'
  'UIViewTintAdjustmentModeAutomatic (0)':
    'prefix': 'UIViewTintAdjustmentModeAutomatic'
    'body': 'UIViewTintAdjustmentModeAutomatic'
  'UIViewTintAdjustmentModeDimmed (2)':
    'prefix': 'UIViewTintAdjustmentModeDimmed'
    'body': 'UIViewTintAdjustmentModeDimmed'
  'UIViewTintAdjustmentModeNormal (1)':
    'prefix': 'UIViewTintAdjustmentModeNormal'
    'body': 'UIViewTintAdjustmentModeNormal'
  'UIWebPaginationBreakingModeColumn (1)':
    'prefix': 'UIWebPaginationBreakingModeColumn'
    'body': 'UIWebPaginationBreakingModeColumn'
  'UIWebPaginationBreakingModePage (0)':
    'prefix': 'UIWebPaginationBreakingModePage'
    'body': 'UIWebPaginationBreakingModePage'
  'UIWebPaginationModeBottomToTop (3)':
    'prefix': 'UIWebPaginationModeBottomToTop'
    'body': 'UIWebPaginationModeBottomToTop'
  'UIWebPaginationModeLeftToRight (1)':
    'prefix': 'UIWebPaginationModeLeftToRight'
    'body': 'UIWebPaginationModeLeftToRight'
  'UIWebPaginationModeRightToLeft (4)':
    'prefix': 'UIWebPaginationModeRightToLeft'
    'body': 'UIWebPaginationModeRightToLeft'
  'UIWebPaginationModeTopToBottom (2)':
    'prefix': 'UIWebPaginationModeTopToBottom'
    'body': 'UIWebPaginationModeTopToBottom'
  'UIWebPaginationModeUnpaginated (0)':
    'prefix': 'UIWebPaginationModeUnpaginated'
    'body': 'UIWebPaginationModeUnpaginated'
  'UIWebViewNavigationTypeBackForward (2)':
    'prefix': 'UIWebViewNavigationTypeBackForward'
    'body': 'UIWebViewNavigationTypeBackForward'
  'UIWebViewNavigationTypeFormResubmitted (4)':
    'prefix': 'UIWebViewNavigationTypeFormResubmitted'
    'body': 'UIWebViewNavigationTypeFormResubmitted'
  'UIWebViewNavigationTypeFormSubmitted (1)':
    'prefix': 'UIWebViewNavigationTypeFormSubmitted'
    'body': 'UIWebViewNavigationTypeFormSubmitted'
  'UIWebViewNavigationTypeLinkClicked (0)':
    'prefix': 'UIWebViewNavigationTypeLinkClicked'
    'body': 'UIWebViewNavigationTypeLinkClicked'
  'UIWebViewNavigationTypeOther (5)':
    'prefix': 'UIWebViewNavigationTypeOther'
    'body': 'UIWebViewNavigationTypeOther'
  'UIWebViewNavigationTypeReload (3)':
    'prefix': 'UIWebViewNavigationTypeReload'
    'body': 'UIWebViewNavigationTypeReload'
  'CGAffineTransformFromString':
    'prefix': 'CGAffineTransformFromString'
    'body': 'CGAffineTransformFromString(${1:NSString* string})'
  'CGPointFromString':
    'prefix': 'CGPointFromString'
    'body': 'CGPointFromString(${1:NSString* string})'
  'CGRectFromString':
    'prefix': 'CGRectFromString'
    'body': 'CGRectFromString(${1:NSString* string})'
  'CGSizeFromString':
    'prefix': 'CGSizeFromString'
    'body': 'CGSizeFromString(${1:NSString* string})'
  'NSStringFromCGAffineTransform':
    'prefix': 'NSStringFromCGAffineTransform'
    'body': 'NSStringFromCGAffineTransform(${1:CGAffineTransform transform})'
  'NSStringFromCGPoint':
    'prefix': 'NSStringFromCGPoint'
    'body': 'NSStringFromCGPoint(${1:CGPoint point})'
  'NSStringFromCGRect':
    'prefix': 'NSStringFromCGRect'
    'body': 'NSStringFromCGRect(${1:CGRect rect})'
  'NSStringFromCGSize':
    'prefix': 'NSStringFromCGSize'
    'body': 'NSStringFromCGSize(${1:CGSize size})'
  'NSStringFromUIEdgeInsets':
    'prefix': 'NSStringFromUIEdgeInsets'
    'body': 'NSStringFromUIEdgeInsets(${1:UIEdgeInsets insets})'
  'NSStringFromUIOffset':
    'prefix': 'NSStringFromUIOffset'
    'body': 'NSStringFromUIOffset(${1:UIOffset offset})'
  'NSTextAlignmentFromCTTextAlignment':
    'prefix': 'NSTextAlignmentFromCTTextAlignment'
    'body': 'NSTextAlignmentFromCTTextAlignment(${1:CTTextAlignment ctTextAlignment})'
  'NSTextAlignmentToCTTextAlignment':
    'prefix': 'NSTextAlignmentToCTTextAlignment'
    'body': 'NSTextAlignmentToCTTextAlignment(${1:NSTextAlignment nsTextAlignment})'
  'UIAccessibilityConvertFrameToScreenCoordinates':
    'prefix': 'UIAccessibilityConvertFrameToScreenCoordinates'
    'body': 'UIAccessibilityConvertFrameToScreenCoordinates(${1:CGRect rect}, ${2:UIView* view})'
  'UIAccessibilityConvertPathToScreenCoordinates':
    'prefix': 'UIAccessibilityConvertPathToScreenCoordinates'
    'body': 'UIAccessibilityConvertPathToScreenCoordinates(${1:UIBezierPath* path}, ${2:UIView* view})'
  'UIAccessibilityIsClosedCaptioningEnabled':
    'prefix': 'UIAccessibilityIsClosedCaptioningEnabled'
    'body': 'UIAccessibilityIsClosedCaptioningEnabled()'
  'UIAccessibilityIsGuidedAccessEnabled':
    'prefix': 'UIAccessibilityIsGuidedAccessEnabled'
    'body': 'UIAccessibilityIsGuidedAccessEnabled()'
  'UIAccessibilityIsInvertColorsEnabled':
    'prefix': 'UIAccessibilityIsInvertColorsEnabled'
    'body': 'UIAccessibilityIsInvertColorsEnabled()'
  'UIAccessibilityIsMonoAudioEnabled':
    'prefix': 'UIAccessibilityIsMonoAudioEnabled'
    'body': 'UIAccessibilityIsMonoAudioEnabled()'
  'UIAccessibilityIsVoiceOverRunning':
    'prefix': 'UIAccessibilityIsVoiceOverRunning'
    'body': 'UIAccessibilityIsVoiceOverRunning()'
  'UIAccessibilityPostNotification':
    'prefix': 'UIAccessibilityPostNotification'
    'body': 'UIAccessibilityPostNotification(${1:UIAccessibilityNotifications notification}, ${2:id argument})'
  'UIAccessibilityRegisterGestureConflictWithZoom':
    'prefix': 'UIAccessibilityRegisterGestureConflictWithZoom'
    'body': 'UIAccessibilityRegisterGestureConflictWithZoom()'
  'UIAccessibilityRequestGuidedAccessSession':
    'prefix': 'UIAccessibilityRequestGuidedAccessSession'
    'body': 'UIAccessibilityRequestGuidedAccessSession(${1:BOOL enable}, ${2:void (^)(BOOL) completionHandler})'
  'UIAccessibilityZoomFocusChanged':
    'prefix': 'UIAccessibilityZoomFocusChanged'
    'body': 'UIAccessibilityZoomFocusChanged(${1:UIAccessibilityZoomType type}, ${2:CGRect frame}, ${3:UIView* view})'
  'UIApplicationMain':
    'prefix': 'UIApplicationMain'
    'body': 'UIApplicationMain(${1:int argc}, ${2:char** argv}, ${3:NSString* principalClassName}, ${4:NSString* delegateClassName})'
  'UIEdgeInsetsEqualToEdgeInsets':
    'prefix': 'UIEdgeInsetsEqualToEdgeInsets'
    'body': 'UIEdgeInsetsEqualToEdgeInsets(${1:UIEdgeInsets insets1}, ${2:UIEdgeInsets insets2})'
  'UIEdgeInsetsFromString':
    'prefix': 'UIEdgeInsetsFromString'
    'body': 'UIEdgeInsetsFromString(${1:NSString* string})'
  'UIEdgeInsetsInsetRect':
    'prefix': 'UIEdgeInsetsInsetRect'
    'body': 'UIEdgeInsetsInsetRect(${1:CGRect rect}, ${2:UIEdgeInsets insets})'
  'UIEdgeInsetsMake':
    'prefix': 'UIEdgeInsetsMake'
    'body': 'UIEdgeInsetsMake(${1:CGFloat top}, ${2:CGFloat left}, ${3:CGFloat bottom}, ${4:CGFloat right})'
  'UIGraphicsAddPDFContextDestinationAtPoint':
    'prefix': 'UIGraphicsAddPDFContextDestinationAtPoint'
    'body': 'UIGraphicsAddPDFContextDestinationAtPoint(${1:NSString* name}, ${2:CGPoint point})'
  'UIGraphicsBeginImageContext':
    'prefix': 'UIGraphicsBeginImageContext'
    'body': 'UIGraphicsBeginImageContext(${1:CGSize size})'
  'UIGraphicsBeginImageContextWithOptions':
    'prefix': 'UIGraphicsBeginImageContextWithOptions'
    'body': 'UIGraphicsBeginImageContextWithOptions(${1:CGSize size}, ${2:BOOL opaque}, ${3:CGFloat scale})'
  'UIGraphicsBeginPDFContextToData':
    'prefix': 'UIGraphicsBeginPDFContextToData'
    'body': 'UIGraphicsBeginPDFContextToData(${1:NSMutableData* data}, ${2:CGRect bounds}, ${3:NSDictionary* documentInfo})'
  'UIGraphicsBeginPDFContextToFile':
    'prefix': 'UIGraphicsBeginPDFContextToFile'
    'body': 'UIGraphicsBeginPDFContextToFile(${1:NSString* path}, ${2:CGRect bounds}, ${3:NSDictionary* documentInfo})'
  'UIGraphicsBeginPDFPage':
    'prefix': 'UIGraphicsBeginPDFPage'
    'body': 'UIGraphicsBeginPDFPage()'
  'UIGraphicsBeginPDFPageWithInfo':
    'prefix': 'UIGraphicsBeginPDFPageWithInfo'
    'body': 'UIGraphicsBeginPDFPageWithInfo(${1:CGRect bounds}, ${2:NSDictionary* pageInfo})'
  'UIGraphicsEndImageContext':
    'prefix': 'UIGraphicsEndImageContext'
    'body': 'UIGraphicsEndImageContext()'
  'UIGraphicsEndPDFContext':
    'prefix': 'UIGraphicsEndPDFContext'
    'body': 'UIGraphicsEndPDFContext()'
  'UIGraphicsGetCurrentContext':
    'prefix': 'UIGraphicsGetCurrentContext'
    'body': 'UIGraphicsGetCurrentContext()'
  'UIGraphicsGetImageFromCurrentImageContext':
    'prefix': 'UIGraphicsGetImageFromCurrentImageContext'
    'body': 'UIGraphicsGetImageFromCurrentImageContext()'
  'UIGraphicsGetPDFContextBounds':
    'prefix': 'UIGraphicsGetPDFContextBounds'
    'body': 'UIGraphicsGetPDFContextBounds()'
  'UIGraphicsPopContext':
    'prefix': 'UIGraphicsPopContext'
    'body': 'UIGraphicsPopContext()'
  'UIGraphicsPushContext':
    'prefix': 'UIGraphicsPushContext'
    'body': 'UIGraphicsPushContext(${1:CGContextRef context})'
  'UIGraphicsSetPDFContextDestinationForRect':
    'prefix': 'UIGraphicsSetPDFContextDestinationForRect'
    'body': 'UIGraphicsSetPDFContextDestinationForRect(${1:NSString* name}, ${2:CGRect rect})'
  'UIGraphicsSetPDFContextURLForRect':
    'prefix': 'UIGraphicsSetPDFContextURLForRect'
    'body': 'UIGraphicsSetPDFContextURLForRect(${1:NSURL* url}, ${2:CGRect rect})'
  'UIGuidedAccessRestrictionStateForIdentifier':
    'prefix': 'UIGuidedAccessRestrictionStateForIdentifier'
    'body': 'UIGuidedAccessRestrictionStateForIdentifier(${1:NSString* restrictionIdentifier})'
  'UIImageJPEGRepresentation':
    'prefix': 'UIImageJPEGRepresentation'
    'body': 'UIImageJPEGRepresentation(${1:UIImage* image}, ${2:CGFloat compressionQuality})'
  'UIImagePNGRepresentation':
    'prefix': 'UIImagePNGRepresentation'
    'body': 'UIImagePNGRepresentation(${1:UIImage* image})'
  'UIImageWriteToSavedPhotosAlbum':
    'prefix': 'UIImageWriteToSavedPhotosAlbum'
    'body': 'UIImageWriteToSavedPhotosAlbum(${1:UIImage* image}, ${2:id completionTarget}, ${3:SEL completionSelector}, ${4:void* contextInfo})'
  'UIOffsetEqualToOffset':
    'prefix': 'UIOffsetEqualToOffset'
    'body': 'UIOffsetEqualToOffset(${1:UIOffset offset1}, ${2:UIOffset offset2})'
  'UIOffsetFromString':
    'prefix': 'UIOffsetFromString'
    'body': 'UIOffsetFromString(${1:NSString* string})'
  'UIOffsetMake':
    'prefix': 'UIOffsetMake'
    'body': 'UIOffsetMake(${1:CGFloat horizontal}, ${2:CGFloat vertical})'
  'UIRectClip':
    'prefix': 'UIRectClip'
    'body': 'UIRectClip(${1:CGRect rect})'
  'UIRectFill':
    'prefix': 'UIRectFill'
    'body': 'UIRectFill(${1:CGRect rect})'
  'UIRectFillUsingBlendMode':
    'prefix': 'UIRectFillUsingBlendMode'
    'body': 'UIRectFillUsingBlendMode(${1:CGRect rect}, ${2:CGBlendMode blendMode})'
  'UIRectFrame':
    'prefix': 'UIRectFrame'
    'body': 'UIRectFrame(${1:CGRect rect})'
  'UIRectFrameUsingBlendMode':
    'prefix': 'UIRectFrameUsingBlendMode'
    'body': 'UIRectFrameUsingBlendMode(${1:CGRect rect}, ${2:CGBlendMode blendMode})'
  'UISaveVideoAtPathToSavedPhotosAlbum':
    'prefix': 'UISaveVideoAtPathToSavedPhotosAlbum'
    'body': 'UISaveVideoAtPathToSavedPhotosAlbum(${1:NSString* videoPath}, ${2:id completionTarget}, ${3:SEL completionSelector}, ${4:void* contextInfo})'
  'UIVideoAtPathIsCompatibleWithSavedPhotosAlbum':
    'prefix': 'UIVideoAtPathIsCompatibleWithSavedPhotosAlbum'
    'body': 'UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(${1:NSString* videoPath})'
  'initWithColor:':
    'prefix': 'initWithColor:'
    'body': 'initWithColor(${1:UIColor* color})'
  'initWithImage:':
    'prefix': 'initWithImage:'
    'body': 'initWithImage(${1:UIImage* image})'
  'initWithImage:options:':
    'prefix': 'initWithImage:options:'
    'body': 'initWithImage(${1:UIImage* image}, options:${2:NSDictionary* options})'
  'NSAttributedString.attributedStringWithAttachment:':
    'prefix': 'attributedStringWithAttachment:'
    'body': 'NSAttributedString.attributedStringWithAttachment(${1:NSTextAttachment* attachment})'
  'boundingRectWithSize:options:context:':
    'prefix': 'boundingRectWithSize:options:context:'
    'body': 'boundingRectWithSize(${1:CGSize size}, options:${2:NSStringDrawingOptions options}, context:${3:NSStringDrawingContext* context})'
  'dataFromRange:documentAttributes:error:':
    'prefix': 'dataFromRange:documentAttributes:error:'
    'body': 'dataFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict}, error:${3:NSError** error})'
  'drawAtPoint:':
    'prefix': 'drawAtPoint:'
    'body': 'drawAtPoint(${1:CGPoint point})'
  'drawInRect:':
    'prefix': 'drawInRect:'
    'body': 'drawInRect(${1:CGRect rect})'
  'drawWithRect:options:context:':
    'prefix': 'drawWithRect:options:context:'
    'body': 'drawWithRect(${1:CGRect rect}, options:${2:NSStringDrawingOptions options}, context:${3:NSStringDrawingContext* context})'
  'fileWrapperFromRange:documentAttributes:error:':
    'prefix': 'fileWrapperFromRange:documentAttributes:error:'
    'body': 'fileWrapperFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict}, error:${3:NSError** error})'
  'initWithData:options:documentAttributes:error:':
    'prefix': 'initWithData:options:documentAttributes:error:'
    'body': 'initWithData(${1:NSData* data}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'initWithFileURL:options:documentAttributes:error:':
    'prefix': 'initWithFileURL:options:documentAttributes:error:'
    'body': 'initWithFileURL(${1:NSURL* url}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'loadNibNamed:owner:options:':
    'prefix': 'loadNibNamed:owner:options:'
    'body': 'loadNibNamed(${1:NSString* name}, owner:${2:id owner}, options:${3:NSDictionary* options})'
  'decodeCGAffineTransformForKey:':
    'prefix': 'decodeCGAffineTransformForKey:'
    'body': 'decodeCGAffineTransformForKey(${1:NSString* key})'
  'decodeCGPointForKey:':
    'prefix': 'decodeCGPointForKey:'
    'body': 'decodeCGPointForKey(${1:NSString* key})'
  'decodeCGRectForKey:':
    'prefix': 'decodeCGRectForKey:'
    'body': 'decodeCGRectForKey(${1:NSString* key})'
  'decodeCGSizeForKey:':
    'prefix': 'decodeCGSizeForKey:'
    'body': 'decodeCGSizeForKey(${1:NSString* key})'
  'decodeUIEdgeInsetsForKey:':
    'prefix': 'decodeUIEdgeInsetsForKey:'
    'body': 'decodeUIEdgeInsetsForKey(${1:NSString* key})'
  'decodeUIOffsetForKey:':
    'prefix': 'decodeUIOffsetForKey:'
    'body': 'decodeUIOffsetForKey(${1:NSString* key})'
  'encodeCGAffineTransform:forKey:':
    'prefix': 'encodeCGAffineTransform:forKey:'
    'body': 'encodeCGAffineTransform(${1:CGAffineTransform transform}, forKey:${2:NSString* key})'
  'encodeCGPoint:forKey:':
    'prefix': 'encodeCGPoint:forKey:'
    'body': 'encodeCGPoint(${1:CGPoint point}, forKey:${2:NSString* key})'
  'encodeCGRect:forKey:':
    'prefix': 'encodeCGRect:forKey:'
    'body': 'encodeCGRect(${1:CGRect rect}, forKey:${2:NSString* key})'
  'encodeCGSize:forKey:':
    'prefix': 'encodeCGSize:forKey:'
    'body': 'encodeCGSize(${1:CGSize size}, forKey:${2:NSString* key})'
  'encodeUIEdgeInsets:forKey:':
    'prefix': 'encodeUIEdgeInsets:forKey:'
    'body': 'encodeUIEdgeInsets(${1:UIEdgeInsets insets}, forKey:${2:NSString* key})'
  'encodeUIOffset:forKey:':
    'prefix': 'encodeUIOffset:forKey:'
    'body': 'encodeUIOffset(${1:UIOffset offset}, forKey:${2:NSString* key})'
  'NSIndexPath.indexPathForItem:inSection:':
    'prefix': 'indexPathForItem:inSection:'
    'body': 'NSIndexPath.indexPathForItem(${1:NSInteger item}, inSection:${2:NSInteger section})'
  'NSIndexPath.indexPathForRow:inSection:':
    'prefix': 'indexPathForRow:inSection:'
    'body': 'NSIndexPath.indexPathForRow(${1:NSInteger row}, inSection:${2:NSInteger section})'
  'item':
    'prefix': 'item'
    'body': 'item()'
  'row':
    'prefix': 'row'
    'body': 'row()'
  'section':
    'prefix': 'section'
    'body': 'section()'
  'constant':
    'prefix': 'constant'
    'body': 'constant()'
  'NSLayoutConstraint.constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:':
    'prefix': 'constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'
    'body': 'NSLayoutConstraint.constraintWithItem(${1:id view1}, attribute:${2:NSLayoutAttribute attr1}, relatedBy:${3:NSLayoutRelation relation}, toItem:${4:id view2}, attribute:${5:NSLayoutAttribute attr2}, multiplier:${6:CGFloat multiplier}, constant:${7:CGFloat c})'
  'NSLayoutConstraint.constraintsWithVisualFormat:options:metrics:views:':
    'prefix': 'constraintsWithVisualFormat:options:metrics:views:'
    'body': 'NSLayoutConstraint.constraintsWithVisualFormat(${1:NSString* format}, options:${2:NSLayoutFormatOptions opts}, metrics:${3:NSDictionary* metrics}, views:${4:NSDictionary* views})'
  'firstAttribute':
    'prefix': 'firstAttribute'
    'body': 'firstAttribute()'
  'firstItem':
    'prefix': 'firstItem'
    'body': 'firstItem()'
  'multiplier':
    'prefix': 'multiplier'
    'body': 'multiplier()'
  'priority':
    'prefix': 'priority'
    'body': 'priority()'
  'relation':
    'prefix': 'relation'
    'body': 'relation()'
  'secondAttribute':
    'prefix': 'secondAttribute'
    'body': 'secondAttribute()'
  'secondItem':
    'prefix': 'secondItem'
    'body': 'secondItem()'
  'setConstant:':
    'prefix': 'setConstant:'
    'body': 'setConstant(${1:CGFloat constant})'
  'setPriority:':
    'prefix': 'setPriority:'
    'body': 'setPriority(${1:UILayoutPriority priority})'
  'setShouldBeArchived:':
    'prefix': 'setShouldBeArchived:'
    'body': 'setShouldBeArchived(${1:BOOL shouldBeArchived})'
  'shouldBeArchived':
    'prefix': 'shouldBeArchived'
    'body': 'shouldBeArchived()'
  'addTextContainer:':
    'prefix': 'addTextContainer:'
    'body': 'addTextContainer(${1:NSTextContainer* container})'
  'allowsNonContiguousLayout':
    'prefix': 'allowsNonContiguousLayout'
    'body': 'allowsNonContiguousLayout()'
  'attachmentSizeForGlyphAtIndex:':
    'prefix': 'attachmentSizeForGlyphAtIndex:'
    'body': 'attachmentSizeForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'boundingRectForGlyphRange:inTextContainer:':
    'prefix': 'boundingRectForGlyphRange:inTextContainer:'
    'body': 'boundingRectForGlyphRange(${1:NSRange glyphRange}, inTextContainer:${2:NSTextContainer* container})'
  'characterIndexForGlyphAtIndex:':
    'prefix': 'characterIndexForGlyphAtIndex:'
    'body': 'characterIndexForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:':
    'prefix': 'characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'
    'body': 'characterIndexForPoint(${1:CGPoint point}, inTextContainer:${2:NSTextContainer* container}, fractionOfDistanceBetweenInsertionPoints:${3:CGFloat* partialFraction})'
  'characterRangeForGlyphRange:actualGlyphRange:':
    'prefix': 'characterRangeForGlyphRange:actualGlyphRange:'
    'body': 'characterRangeForGlyphRange(${1:NSRange glyphRange}, actualGlyphRange:${2:NSRangePointer actualGlyphRange})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawBackgroundForGlyphRange:atPoint:':
    'prefix': 'drawBackgroundForGlyphRange:atPoint:'
    'body': 'drawBackgroundForGlyphRange(${1:NSRange glyphsToShow}, atPoint:${2:CGPoint origin})'
  'drawGlyphsForGlyphRange:atPoint:':
    'prefix': 'drawGlyphsForGlyphRange:atPoint:'
    'body': 'drawGlyphsForGlyphRange(${1:NSRange glyphsToShow}, atPoint:${2:CGPoint origin})'
  'drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'drawStrikethroughForGlyphRange(${1:NSRange glyphRange}, strikethroughType:${2:NSUnderlineStyle strikethroughVal}, baselineOffset:${3:CGFloat baselineOffset}, lineFragmentRect:${4:CGRect lineRect}, lineFragmentGlyphRange:${5:NSRange lineGlyphRange}, containerOrigin:${6:CGPoint containerOrigin})'
  'drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'drawUnderlineForGlyphRange(${1:NSRange glyphRange}, underlineType:${2:NSUnderlineStyle underlineVal}, baselineOffset:${3:CGFloat baselineOffset}, lineFragmentRect:${4:CGRect lineRect}, lineFragmentGlyphRange:${5:NSRange lineGlyphRange}, containerOrigin:${6:CGPoint containerOrigin})'
  'drawsOutsideLineFragmentForGlyphAtIndex:':
    'prefix': 'drawsOutsideLineFragmentForGlyphAtIndex:'
    'body': 'drawsOutsideLineFragmentForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'ensureGlyphsForCharacterRange:':
    'prefix': 'ensureGlyphsForCharacterRange:'
    'body': 'ensureGlyphsForCharacterRange(${1:NSRange charRange})'
  'ensureGlyphsForGlyphRange:':
    'prefix': 'ensureGlyphsForGlyphRange:'
    'body': 'ensureGlyphsForGlyphRange(${1:NSRange glyphRange})'
  'ensureLayoutForBoundingRect:inTextContainer:':
    'prefix': 'ensureLayoutForBoundingRect:inTextContainer:'
    'body': 'ensureLayoutForBoundingRect(${1:CGRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'ensureLayoutForCharacterRange:':
    'prefix': 'ensureLayoutForCharacterRange:'
    'body': 'ensureLayoutForCharacterRange(${1:NSRange charRange})'
  'ensureLayoutForGlyphRange:':
    'prefix': 'ensureLayoutForGlyphRange:'
    'body': 'ensureLayoutForGlyphRange(${1:NSRange glyphRange})'
  'ensureLayoutForTextContainer:':
    'prefix': 'ensureLayoutForTextContainer:'
    'body': 'ensureLayoutForTextContainer(${1:NSTextContainer* container})'
  'enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:':
    'prefix': 'enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:'
    'body': 'enumerateEnclosingRectsForGlyphRange(${1:NSRange glyphRange}, withinSelectedGlyphRange:${2:NSRange selectedRange}, inTextContainer:${3:NSTextContainer* textContainer}, usingBlock:${4:void (^)(CGRect, BOOL *) block})'
  'enumerateLineFragmentsForGlyphRange:usingBlock:':
    'prefix': 'enumerateLineFragmentsForGlyphRange:usingBlock:'
    'body': 'enumerateLineFragmentsForGlyphRange(${1:NSRange glyphRange}, usingBlock:${2:void (^)(CGRect, CGRect, NSTextContainer *, NSRange, BOOL *) block})'
  'extraLineFragmentRect':
    'prefix': 'extraLineFragmentRect'
    'body': 'extraLineFragmentRect()'
  'extraLineFragmentTextContainer':
    'prefix': 'extraLineFragmentTextContainer'
    'body': 'extraLineFragmentTextContainer()'
  'extraLineFragmentUsedRect':
    'prefix': 'extraLineFragmentUsedRect'
    'body': 'extraLineFragmentUsedRect()'
  'fillBackgroundRectArray:count:forCharacterRange:color:':
    'prefix': 'fillBackgroundRectArray:count:forCharacterRange:color:'
    'body': 'fillBackgroundRectArray(${1:CGRect* rectArray}, count:${2:NSUInteger rectCount}, forCharacterRange:${3:NSRange charRange}, color:${4:UIColor* color})'
  'firstUnlaidCharacterIndex':
    'prefix': 'firstUnlaidCharacterIndex'
    'body': 'firstUnlaidCharacterIndex()'
  'firstUnlaidGlyphIndex':
    'prefix': 'firstUnlaidGlyphIndex'
    'body': 'firstUnlaidGlyphIndex()'
  'fractionOfDistanceThroughGlyphForPoint:inTextContainer:':
    'prefix': 'fractionOfDistanceThroughGlyphForPoint:inTextContainer:'
    'body': 'fractionOfDistanceThroughGlyphForPoint(${1:CGPoint point}, inTextContainer:${2:NSTextContainer* container})'
  'getFirstUnlaidCharacterIndex:glyphIndex:':
    'prefix': 'getFirstUnlaidCharacterIndex:glyphIndex:'
    'body': 'getFirstUnlaidCharacterIndex(${1:NSUInteger* charIndex}, glyphIndex:${2:NSUInteger* glyphIndex})'
  'getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:':
    'prefix': 'getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:'
    'body': 'getGlyphsInRange(${1:NSRange glyphRange}, glyphs:${2:CGGlyph* glyphBuffer}, properties:${3:NSGlyphProperty* props}, characterIndexes:${4:NSUInteger* charIndexBuffer}, bidiLevels:${5:unsigned char* bidiLevelBuffer})'
  'getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:':
    'prefix': 'getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'
    'body': 'getLineFragmentInsertionPointsForCharacterAtIndex(${1:NSUInteger charIndex}, alternatePositions:${2:BOOL aFlag}, inDisplayOrder:${3:BOOL dFlag}, positions:${4:CGFloat* positions}, characterIndexes:${5:NSUInteger* charIndexes})'
  'glyphAtIndex:':
    'prefix': 'glyphAtIndex:'
    'body': 'glyphAtIndex(${1:NSUInteger glyphIndex})'
  'glyphAtIndex:isValidIndex:':
    'prefix': 'glyphAtIndex:isValidIndex:'
    'body': 'glyphAtIndex(${1:NSUInteger glyphIndex}, isValidIndex:${2:BOOL* isValidIndex})'
  'glyphIndexForCharacterAtIndex:':
    'prefix': 'glyphIndexForCharacterAtIndex:'
    'body': 'glyphIndexForCharacterAtIndex(${1:NSUInteger charIndex})'
  'glyphIndexForPoint:inTextContainer:':
    'prefix': 'glyphIndexForPoint:inTextContainer:'
    'body': 'glyphIndexForPoint(${1:CGPoint point}, inTextContainer:${2:NSTextContainer* container})'
  'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:':
    'prefix': 'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'
    'body': 'glyphIndexForPoint(${1:CGPoint point}, inTextContainer:${2:NSTextContainer* container}, fractionOfDistanceThroughGlyph:${3:CGFloat* partialFraction})'
  'glyphRangeForBoundingRect:inTextContainer:':
    'prefix': 'glyphRangeForBoundingRect:inTextContainer:'
    'body': 'glyphRangeForBoundingRect(${1:CGRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:':
    'prefix': 'glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'
    'body': 'glyphRangeForBoundingRectWithoutAdditionalLayout(${1:CGRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'glyphRangeForCharacterRange:actualCharacterRange:':
    'prefix': 'glyphRangeForCharacterRange:actualCharacterRange:'
    'body': 'glyphRangeForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'glyphRangeForTextContainer:':
    'prefix': 'glyphRangeForTextContainer:'
    'body': 'glyphRangeForTextContainer(${1:NSTextContainer* container})'
  'hasNonContiguousLayout':
    'prefix': 'hasNonContiguousLayout'
    'body': 'hasNonContiguousLayout()'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'insertTextContainer:atIndex:':
    'prefix': 'insertTextContainer:atIndex:'
    'body': 'insertTextContainer(${1:NSTextContainer* container}, atIndex:${2:NSUInteger index})'
  'invalidateDisplayForCharacterRange:':
    'prefix': 'invalidateDisplayForCharacterRange:'
    'body': 'invalidateDisplayForCharacterRange(${1:NSRange charRange})'
  'invalidateDisplayForGlyphRange:':
    'prefix': 'invalidateDisplayForGlyphRange:'
    'body': 'invalidateDisplayForGlyphRange(${1:NSRange glyphRange})'
  'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:':
    'prefix': 'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'
    'body': 'invalidateGlyphsForCharacterRange(${1:NSRange charRange}, changeInLength:${2:NSInteger delta}, actualCharacterRange:${3:NSRangePointer actualCharRange})'
  'invalidateLayoutForCharacterRange:actualCharacterRange:':
    'prefix': 'invalidateLayoutForCharacterRange:actualCharacterRange:'
    'body': 'invalidateLayoutForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'isValidGlyphIndex:':
    'prefix': 'isValidGlyphIndex:'
    'body': 'isValidGlyphIndex(${1:NSUInteger glyphIndex})'
  'lineFragmentRectForGlyphAtIndex:effectiveRange:':
    'prefix': 'lineFragmentRectForGlyphAtIndex:effectiveRange:'
    'body': 'lineFragmentRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:':
    'prefix': 'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'
    'body': 'lineFragmentUsedRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'locationForGlyphAtIndex:':
    'prefix': 'locationForGlyphAtIndex:'
    'body': 'locationForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'notShownAttributeForGlyphAtIndex:':
    'prefix': 'notShownAttributeForGlyphAtIndex:'
    'body': 'notShownAttributeForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'numberOfGlyphs':
    'prefix': 'numberOfGlyphs'
    'body': 'numberOfGlyphs()'
  'processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:':
    'prefix': 'processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:'
    'body': 'processEditingForTextStorage(${1:NSTextStorage* textStorage}, edited:${2:NSTextStorageEditActions editMask}, range:${3:NSRange newCharRange}, changeInLength:${4:NSInteger delta}, invalidatedRange:${5:NSRange invalidatedCharRange})'
  'propertyForGlyphAtIndex:':
    'prefix': 'propertyForGlyphAtIndex:'
    'body': 'propertyForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'rangeOfNominallySpacedGlyphsContainingIndex:':
    'prefix': 'rangeOfNominallySpacedGlyphsContainingIndex:'
    'body': 'rangeOfNominallySpacedGlyphsContainingIndex(${1:NSUInteger glyphIndex})'
  'removeTextContainerAtIndex:':
    'prefix': 'removeTextContainerAtIndex:'
    'body': 'removeTextContainerAtIndex(${1:NSUInteger index})'
  'setAllowsNonContiguousLayout:':
    'prefix': 'setAllowsNonContiguousLayout:'
    'body': 'setAllowsNonContiguousLayout(${1:BOOL allowsNonContiguousLayout})'
  'setAttachmentSize:forGlyphRange:':
    'prefix': 'setAttachmentSize:forGlyphRange:'
    'body': 'setAttachmentSize(${1:CGSize attachmentSize}, forGlyphRange:${2:NSRange glyphRange})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDrawsOutsideLineFragment:forGlyphAtIndex:':
    'prefix': 'setDrawsOutsideLineFragment:forGlyphAtIndex:'
    'body': 'setDrawsOutsideLineFragment(${1:BOOL flag}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'setExtraLineFragmentRect:usedRect:textContainer:':
    'prefix': 'setExtraLineFragmentRect:usedRect:textContainer:'
    'body': 'setExtraLineFragmentRect(${1:CGRect fragmentRect}, usedRect:${2:CGRect usedRect}, textContainer:${3:NSTextContainer* container})'
  'setGlyphs:properties:characterIndexes:font:forGlyphRange:':
    'prefix': 'setGlyphs:properties:characterIndexes:font:forGlyphRange:'
    'body': 'setGlyphs(${1:CGGlyph* glyphs}, properties:${2:NSGlyphProperty* props}, characterIndexes:${3:NSUInteger* charIndexes}, font:${4:UIFont* aFont}, forGlyphRange:${5:NSRange glyphRange})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:CGFloat hyphenationFactor})'
  'setLineFragmentRect:forGlyphRange:usedRect:':
    'prefix': 'setLineFragmentRect:forGlyphRange:usedRect:'
    'body': 'setLineFragmentRect(${1:CGRect fragmentRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:CGRect usedRect})'
  'setLocation:forStartOfGlyphRange:':
    'prefix': 'setLocation:forStartOfGlyphRange:'
    'body': 'setLocation(${1:CGPoint location}, forStartOfGlyphRange:${2:NSRange glyphRange})'
  'setNotShownAttribute:forGlyphAtIndex:':
    'prefix': 'setNotShownAttribute:forGlyphAtIndex:'
    'body': 'setNotShownAttribute(${1:BOOL flag}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'setShowsControlCharacters:':
    'prefix': 'setShowsControlCharacters:'
    'body': 'setShowsControlCharacters(${1:BOOL showsControlCharacters})'
  'setShowsInvisibleCharacters:':
    'prefix': 'setShowsInvisibleCharacters:'
    'body': 'setShowsInvisibleCharacters(${1:BOOL showsInvisibleCharacters})'
  'setTextContainer:forGlyphRange:':
    'prefix': 'setTextContainer:forGlyphRange:'
    'body': 'setTextContainer(${1:NSTextContainer* container}, forGlyphRange:${2:NSRange glyphRange})'
  'setTextStorage:':
    'prefix': 'setTextStorage:'
    'body': 'setTextStorage(${1:NSTextStorage* textStorage})'
  'setUsesFontLeading:':
    'prefix': 'setUsesFontLeading:'
    'body': 'setUsesFontLeading(${1:BOOL usesFontLeading})'
  'showCGGlyphs:positions:count:font:matrix:attributes:inContext:':
    'prefix': 'showCGGlyphs:positions:count:font:matrix:attributes:inContext:'
    'body': 'showCGGlyphs(${1:CGGlyph* glyphs}, positions:${2:CGPoint* positions}, count:${3:NSUInteger glyphCount}, font:${4:UIFont* font}, matrix:${5:CGAffineTransform textMatrix}, attributes:${6:NSDictionary* attributes}, inContext:${7:CGContextRef graphicsContext})'
  'showsControlCharacters':
    'prefix': 'showsControlCharacters'
    'body': 'showsControlCharacters()'
  'showsInvisibleCharacters':
    'prefix': 'showsInvisibleCharacters'
    'body': 'showsInvisibleCharacters()'
  'strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'strikethroughGlyphRange(${1:NSRange glyphRange}, strikethroughType:${2:NSUnderlineStyle strikethroughVal}, lineFragmentRect:${3:CGRect lineRect}, lineFragmentGlyphRange:${4:NSRange lineGlyphRange}, containerOrigin:${5:CGPoint containerOrigin})'
  'textContainerChangedGeometry:':
    'prefix': 'textContainerChangedGeometry:'
    'body': 'textContainerChangedGeometry(${1:NSTextContainer* container})'
  'textContainerForGlyphAtIndex:effectiveRange:':
    'prefix': 'textContainerForGlyphAtIndex:effectiveRange:'
    'body': 'textContainerForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'textContainers':
    'prefix': 'textContainers'
    'body': 'textContainers()'
  'textStorage':
    'prefix': 'textStorage'
    'body': 'textStorage()'
  'truncatedGlyphRangeInLineFragmentForGlyphAtIndex:':
    'prefix': 'truncatedGlyphRangeInLineFragmentForGlyphAtIndex:'
    'body': 'truncatedGlyphRangeInLineFragmentForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'underlineGlyphRange(${1:NSRange glyphRange}, underlineType:${2:NSUnderlineStyle underlineVal}, lineFragmentRect:${3:CGRect lineRect}, lineFragmentGlyphRange:${4:NSRange lineGlyphRange}, containerOrigin:${5:CGPoint containerOrigin})'
  'usedRectForTextContainer:':
    'prefix': 'usedRectForTextContainer:'
    'body': 'usedRectForTextContainer(${1:NSTextContainer* container})'
  'usesFontLeading':
    'prefix': 'usesFontLeading'
    'body': 'usesFontLeading()'
  'fixAttributesInRange:':
    'prefix': 'fixAttributesInRange:'
    'body': 'fixAttributesInRange(${1:NSRange range})'
  'readFromData:options:documentAttributes:error:':
    'prefix': 'readFromData:options:documentAttributes:error:'
    'body': 'readFromData(${1:NSData* data}, options:${2:NSDictionary* opts}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'readFromFileURL:options:documentAttributes:error:':
    'prefix': 'readFromFileURL:options:documentAttributes:error:'
    'body': 'readFromFileURL(${1:NSURL* url}, options:${2:NSDictionary* opts}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'defaultTabInterval':
    'prefix': 'defaultTabInterval'
    'body': 'defaultTabInterval()'
  'firstLineHeadIndent':
    'prefix': 'firstLineHeadIndent'
    'body': 'firstLineHeadIndent()'
  'headIndent':
    'prefix': 'headIndent'
    'body': 'headIndent()'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'lineHeightMultiple':
    'prefix': 'lineHeightMultiple'
    'body': 'lineHeightMultiple()'
  'lineSpacing':
    'prefix': 'lineSpacing'
    'body': 'lineSpacing()'
  'maximumLineHeight':
    'prefix': 'maximumLineHeight'
    'body': 'maximumLineHeight()'
  'minimumLineHeight':
    'prefix': 'minimumLineHeight'
    'body': 'minimumLineHeight()'
  'paragraphSpacing':
    'prefix': 'paragraphSpacing'
    'body': 'paragraphSpacing()'
  'paragraphSpacingBefore':
    'prefix': 'paragraphSpacingBefore'
    'body': 'paragraphSpacingBefore()'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSTextAlignment alignment})'
  'setBaseWritingDirection:':
    'prefix': 'setBaseWritingDirection:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection baseWritingDirection})'
  'setDefaultTabInterval:':
    'prefix': 'setDefaultTabInterval:'
    'body': 'setDefaultTabInterval(${1:CGFloat defaultTabInterval})'
  'setFirstLineHeadIndent:':
    'prefix': 'setFirstLineHeadIndent:'
    'body': 'setFirstLineHeadIndent(${1:CGFloat firstLineHeadIndent})'
  'setHeadIndent:':
    'prefix': 'setHeadIndent:'
    'body': 'setHeadIndent(${1:CGFloat headIndent})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:float hyphenationFactor})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode lineBreakMode})'
  'setLineHeightMultiple:':
    'prefix': 'setLineHeightMultiple:'
    'body': 'setLineHeightMultiple(${1:CGFloat lineHeightMultiple})'
  'setLineSpacing:':
    'prefix': 'setLineSpacing:'
    'body': 'setLineSpacing(${1:CGFloat lineSpacing})'
  'setMaximumLineHeight:':
    'prefix': 'setMaximumLineHeight:'
    'body': 'setMaximumLineHeight(${1:CGFloat maximumLineHeight})'
  'setMinimumLineHeight:':
    'prefix': 'setMinimumLineHeight:'
    'body': 'setMinimumLineHeight(${1:CGFloat minimumLineHeight})'
  'setParagraphSpacing:':
    'prefix': 'setParagraphSpacing:'
    'body': 'setParagraphSpacing(${1:CGFloat paragraphSpacing})'
  'setParagraphSpacingBefore:':
    'prefix': 'setParagraphSpacingBefore:'
    'body': 'setParagraphSpacingBefore(${1:CGFloat paragraphSpacingBefore})'
  'setTabStops:':
    'prefix': 'setTabStops:'
    'body': 'setTabStops(${1:NSArray* tabStops})'
  'setTailIndent:':
    'prefix': 'setTailIndent:'
    'body': 'setTailIndent(${1:CGFloat tailIndent})'
  'tabStops':
    'prefix': 'tabStops'
    'body': 'tabStops()'
  'tailIndent':
    'prefix': 'tailIndent'
    'body': 'tailIndent()'
  'accelerometer:didAccelerate:':
    'prefix': 'accelerometer:didAccelerate:'
    'body': 'accelerometer(${1:UIAccelerometer* accelerometer}, didAccelerate:${2:UIAcceleration* acceleration})'
  'accessibilityActivate':
    'prefix': 'accessibilityActivate'
    'body': 'accessibilityActivate()'
  'accessibilityActivationPoint':
    'prefix': 'accessibilityActivationPoint'
    'body': 'accessibilityActivationPoint()'
  'accessibilityContentForLineNumber:':
    'prefix': 'accessibilityContentForLineNumber:'
    'body': 'accessibilityContentForLineNumber(${1:NSInteger lineNumber})'
  'accessibilityDecrement':
    'prefix': 'accessibilityDecrement'
    'body': 'accessibilityDecrement()'
  'accessibilityElementAtIndex:':
    'prefix': 'accessibilityElementAtIndex:'
    'body': 'accessibilityElementAtIndex(${1:NSInteger index})'
  'accessibilityElementCount':
    'prefix': 'accessibilityElementCount'
    'body': 'accessibilityElementCount()'
  'accessibilityElementDidBecomeFocused':
    'prefix': 'accessibilityElementDidBecomeFocused'
    'body': 'accessibilityElementDidBecomeFocused()'
  'accessibilityElementDidLoseFocus':
    'prefix': 'accessibilityElementDidLoseFocus'
    'body': 'accessibilityElementDidLoseFocus()'
  'accessibilityElementIsFocused':
    'prefix': 'accessibilityElementIsFocused'
    'body': 'accessibilityElementIsFocused()'
  'accessibilityElementsHidden':
    'prefix': 'accessibilityElementsHidden'
    'body': 'accessibilityElementsHidden()'
  'accessibilityFrame':
    'prefix': 'accessibilityFrame'
    'body': 'accessibilityFrame()'
  'accessibilityFrameForLineNumber:':
    'prefix': 'accessibilityFrameForLineNumber:'
    'body': 'accessibilityFrameForLineNumber(${1:NSInteger lineNumber})'
  'accessibilityHint':
    'prefix': 'accessibilityHint'
    'body': 'accessibilityHint()'
  'accessibilityIdentifier':
    'prefix': 'accessibilityIdentifier'
    'body': 'accessibilityIdentifier()'
  'accessibilityIncrement':
    'prefix': 'accessibilityIncrement'
    'body': 'accessibilityIncrement()'
  'accessibilityLabel':
    'prefix': 'accessibilityLabel'
    'body': 'accessibilityLabel()'
  'accessibilityLanguage':
    'prefix': 'accessibilityLanguage'
    'body': 'accessibilityLanguage()'
  'accessibilityLineNumberForPoint:':
    'prefix': 'accessibilityLineNumberForPoint:'
    'body': 'accessibilityLineNumberForPoint(${1:CGPoint point})'
  'accessibilityPageContent':
    'prefix': 'accessibilityPageContent'
    'body': 'accessibilityPageContent()'
  'accessibilityPath':
    'prefix': 'accessibilityPath'
    'body': 'accessibilityPath()'
  'accessibilityPerformEscape':
    'prefix': 'accessibilityPerformEscape'
    'body': 'accessibilityPerformEscape()'
  'accessibilityPerformMagicTap':
    'prefix': 'accessibilityPerformMagicTap'
    'body': 'accessibilityPerformMagicTap()'
  'accessibilityScroll:':
    'prefix': 'accessibilityScroll:'
    'body': 'accessibilityScroll(${1:UIAccessibilityScrollDirection direction})'
  'accessibilityScrollStatusForScrollView:':
    'prefix': 'accessibilityScrollStatusForScrollView:'
    'body': 'accessibilityScrollStatusForScrollView(${1:UIScrollView* scrollView})'
  'accessibilityTraits':
    'prefix': 'accessibilityTraits'
    'body': 'accessibilityTraits()'
  'accessibilityValue':
    'prefix': 'accessibilityValue'
    'body': 'accessibilityValue()'
  'accessibilityViewIsModal':
    'prefix': 'accessibilityViewIsModal'
    'body': 'accessibilityViewIsModal()'
  'actionSheet:clickedButtonAtIndex:':
    'prefix': 'actionSheet:clickedButtonAtIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, clickedButtonAtIndex:${2:NSInteger buttonIndex})'
  'actionSheet:didDismissWithButtonIndex:':
    'prefix': 'actionSheet:didDismissWithButtonIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, didDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'actionSheet:willDismissWithButtonIndex:':
    'prefix': 'actionSheet:willDismissWithButtonIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, willDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'actionSheetCancel:':
    'prefix': 'actionSheetCancel:'
    'body': 'actionSheetCancel(${1:UIActionSheet* actionSheet})'
  'activityViewController:dataTypeIdentifierForActivityType:':
    'prefix': 'activityViewController:dataTypeIdentifierForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, dataTypeIdentifierForActivityType:${2:NSString* activityType})'
  'activityViewController:itemForActivityType:':
    'prefix': 'activityViewController:itemForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, itemForActivityType:${2:NSString* activityType})'
  'activityViewController:subjectForActivityType:':
    'prefix': 'activityViewController:subjectForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, subjectForActivityType:${2:NSString* activityType})'
  'activityViewController:thumbnailImageForActivityType:suggestedSize:':
    'prefix': 'activityViewController:thumbnailImageForActivityType:suggestedSize:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, thumbnailImageForActivityType:${2:NSString* activityType}, suggestedSize:${3:CGSize size})'
  'activityViewControllerPlaceholderItem:':
    'prefix': 'activityViewControllerPlaceholderItem:'
    'body': 'activityViewControllerPlaceholderItem(${1:UIActivityViewController* activityViewController})'
  'alertView:clickedButtonAtIndex:':
    'prefix': 'alertView:clickedButtonAtIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, clickedButtonAtIndex:${2:NSInteger buttonIndex})'
  'alertView:didDismissWithButtonIndex:':
    'prefix': 'alertView:didDismissWithButtonIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, didDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'alertView:willDismissWithButtonIndex:':
    'prefix': 'alertView:willDismissWithButtonIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, willDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'alertViewCancel:':
    'prefix': 'alertViewCancel:'
    'body': 'alertViewCancel(${1:UIAlertView* alertView})'
  'alertViewShouldEnableFirstOtherButton:':
    'prefix': 'alertViewShouldEnableFirstOtherButton:'
    'body': 'alertViewShouldEnableFirstOtherButton(${1:UIAlertView* alertView})'
  'animateAlongsideTransition:completion:':
    'prefix': 'animateAlongsideTransition:completion:'
    'body': 'animateAlongsideTransition(${1:void (^)(id) animation}, completion:${2:void (^)(id) completion})'
  'animateAlongsideTransitionInView:animation:completion:':
    'prefix': 'animateAlongsideTransitionInView:animation:completion:'
    'body': 'animateAlongsideTransitionInView(${1:UIView* view}, animation:${2:void (^)(id) animation}, completion:${3:void (^)(id) completion})'
  'animateTransition:':
    'prefix': 'animateTransition:'
    'body': 'animateTransition(${1:id transitionContext})'
  'animationControllerForDismissedController:':
    'prefix': 'animationControllerForDismissedController:'
    'body': 'animationControllerForDismissedController(${1:UIViewController* dismissed})'
  'animationControllerForPresentedController:presentingController:sourceController:':
    'prefix': 'animationControllerForPresentedController:presentingController:sourceController:'
    'body': 'animationControllerForPresentedController(${1:UIViewController* presented}, presentingController:${2:UIViewController* presenting}, sourceController:${3:UIViewController* source})'
  'animationEnded:':
    'prefix': 'animationEnded:'
    'body': 'animationEnded(${1:BOOL transitionCompleted})'
  'NSObject.appearance':
    'prefix': 'appearance'
    'body': 'NSObject.appearance()'
  'NSObject.appearanceWhenContainedIn:':
    'prefix': 'appearanceWhenContainedIn:'
    'body': 'NSObject.appearanceWhenContainedIn(${1:Class* ContainerClass})'
  'application:didChangeStatusBarFrame:':
    'prefix': 'application:didChangeStatusBarFrame:'
    'body': 'application(${1:UIApplication* application}, didChangeStatusBarFrame:${2:CGRect oldStatusBarFrame})'
  'application:didChangeStatusBarOrientation:':
    'prefix': 'application:didChangeStatusBarOrientation:'
    'body': 'application(${1:UIApplication* application}, didChangeStatusBarOrientation:${2:UIInterfaceOrientation oldStatusBarOrientation})'
  'application:didDecodeRestorableStateWithCoder:':
    'prefix': 'application:didDecodeRestorableStateWithCoder:'
    'body': 'application(${1:UIApplication* application}, didDecodeRestorableStateWithCoder:${2:NSCoder* coder})'
  'application:didFailToRegisterForRemoteNotificationsWithError:':
    'prefix': 'application:didFailToRegisterForRemoteNotificationsWithError:'
    'body': 'application(${1:UIApplication* application}, didFailToRegisterForRemoteNotificationsWithError:${2:NSError* error})'
  'application:didFinishLaunchingWithOptions:':
    'prefix': 'application:didFinishLaunchingWithOptions:'
    'body': 'application(${1:UIApplication* application}, didFinishLaunchingWithOptions:${2:NSDictionary* launchOptions})'
  'application:didReceiveLocalNotification:':
    'prefix': 'application:didReceiveLocalNotification:'
    'body': 'application(${1:UIApplication* application}, didReceiveLocalNotification:${2:UILocalNotification* notification})'
  'application:didReceiveRemoteNotification:':
    'prefix': 'application:didReceiveRemoteNotification:'
    'body': 'application(${1:UIApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo})'
  'application:didReceiveRemoteNotification:fetchCompletionHandler:':
    'prefix': 'application:didReceiveRemoteNotification:fetchCompletionHandler:'
    'body': 'application(${1:UIApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo}, fetchCompletionHandler:${3:void (^)(UIBackgroundFetchResult) completionHandler})'
  'application:didRegisterForRemoteNotificationsWithDeviceToken:':
    'prefix': 'application:didRegisterForRemoteNotificationsWithDeviceToken:'
    'body': 'application(${1:UIApplication* application}, didRegisterForRemoteNotificationsWithDeviceToken:${2:NSData* deviceToken})'
  'application:handleEventsForBackgroundURLSession:completionHandler:':
    'prefix': 'application:handleEventsForBackgroundURLSession:completionHandler:'
    'body': 'application(${1:UIApplication* application}, handleEventsForBackgroundURLSession:${2:NSString* identifier}, completionHandler:${3:void (^)() completionHandler})'
  'application:handleOpenURL:':
    'prefix': 'application:handleOpenURL:'
    'body': 'application(${1:UIApplication* application}, handleOpenURL:${2:NSURL* url})'
  'application:openURL:sourceApplication:annotation:':
    'prefix': 'application:openURL:sourceApplication:annotation:'
    'body': 'application(${1:UIApplication* application}, openURL:${2:NSURL* url}, sourceApplication:${3:NSString* sourceApplication}, annotation:${4:id annotation})'
  'application:performFetchWithCompletionHandler:':
    'prefix': 'application:performFetchWithCompletionHandler:'
    'body': 'application(${1:UIApplication* application}, performFetchWithCompletionHandler:${2:void (^)(UIBackgroundFetchResult) completionHandler})'
  'application:shouldRestoreApplicationState:':
    'prefix': 'application:shouldRestoreApplicationState:'
    'body': 'application(${1:UIApplication* application}, shouldRestoreApplicationState:${2:NSCoder* coder})'
  'application:shouldSaveApplicationState:':
    'prefix': 'application:shouldSaveApplicationState:'
    'body': 'application(${1:UIApplication* application}, shouldSaveApplicationState:${2:NSCoder* coder})'
  'application:supportedInterfaceOrientationsForWindow:':
    'prefix': 'application:supportedInterfaceOrientationsForWindow:'
    'body': 'application(${1:UIApplication* application}, supportedInterfaceOrientationsForWindow:${2:UIWindow* window})'
  'application:viewControllerWithRestorationIdentifierPath:coder:':
    'prefix': 'application:viewControllerWithRestorationIdentifierPath:coder:'
    'body': 'application(${1:UIApplication* application}, viewControllerWithRestorationIdentifierPath:${2:NSArray* identifierComponents}, coder:${3:NSCoder* coder})'
  'application:willChangeStatusBarFrame:':
    'prefix': 'application:willChangeStatusBarFrame:'
    'body': 'application(${1:UIApplication* application}, willChangeStatusBarFrame:${2:CGRect newStatusBarFrame})'
  'application:willChangeStatusBarOrientation:duration:':
    'prefix': 'application:willChangeStatusBarOrientation:duration:'
    'body': 'application(${1:UIApplication* application}, willChangeStatusBarOrientation:${2:UIInterfaceOrientation newStatusBarOrientation}, duration:${3:NSTimeInterval duration})'
  'application:willEncodeRestorableStateWithCoder:':
    'prefix': 'application:willEncodeRestorableStateWithCoder:'
    'body': 'application(${1:UIApplication* application}, willEncodeRestorableStateWithCoder:${2:NSCoder* coder})'
  'application:willFinishLaunchingWithOptions:':
    'prefix': 'application:willFinishLaunchingWithOptions:'
    'body': 'application(${1:UIApplication* application}, willFinishLaunchingWithOptions:${2:NSDictionary* launchOptions})'
  'applicationDidBecomeActive:':
    'prefix': 'applicationDidBecomeActive:'
    'body': 'applicationDidBecomeActive(${1:UIApplication* application})'
  'applicationDidEnterBackground:':
    'prefix': 'applicationDidEnterBackground:'
    'body': 'applicationDidEnterBackground(${1:UIApplication* application})'
  'applicationDidFinishLaunching:':
    'prefix': 'applicationDidFinishLaunching:'
    'body': 'applicationDidFinishLaunching(${1:UIApplication* application})'
  'applicationDidReceiveMemoryWarning:':
    'prefix': 'applicationDidReceiveMemoryWarning:'
    'body': 'applicationDidReceiveMemoryWarning(${1:UIApplication* application})'
  'applicationFinishedRestoringState':
    'prefix': 'applicationFinishedRestoringState'
    'body': 'applicationFinishedRestoringState()'
  'applicationProtectedDataDidBecomeAvailable:':
    'prefix': 'applicationProtectedDataDidBecomeAvailable:'
    'body': 'applicationProtectedDataDidBecomeAvailable(${1:UIApplication* application})'
  'applicationProtectedDataWillBecomeUnavailable:':
    'prefix': 'applicationProtectedDataWillBecomeUnavailable:'
    'body': 'applicationProtectedDataWillBecomeUnavailable(${1:UIApplication* application})'
  'applicationSignificantTimeChange:':
    'prefix': 'applicationSignificantTimeChange:'
    'body': 'applicationSignificantTimeChange(${1:UIApplication* application})'
  'applicationWillEnterForeground:':
    'prefix': 'applicationWillEnterForeground:'
    'body': 'applicationWillEnterForeground(${1:UIApplication* application})'
  'applicationWillResignActive:':
    'prefix': 'applicationWillResignActive:'
    'body': 'applicationWillResignActive(${1:UIApplication* application})'
  'applicationWillTerminate:':
    'prefix': 'applicationWillTerminate:'
    'body': 'applicationWillTerminate(${1:UIApplication* application})'
  'attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'attachmentBoundsForTextContainer(${1:NSTextContainer* textContainer}, proposedLineFragment:${2:CGRect lineFrag}, glyphPosition:${3:CGPoint position}, characterIndex:${4:NSUInteger charIndex})'
  'autocapitalizationType':
    'prefix': 'autocapitalizationType'
    'body': 'autocapitalizationType()'
  'autocorrectionType':
    'prefix': 'autocorrectionType'
    'body': 'autocorrectionType()'
  'awakeFromNib':
    'prefix': 'awakeFromNib'
    'body': 'awakeFromNib()'
  'barPosition':
    'prefix': 'barPosition'
    'body': 'barPosition()'
  'baseWritingDirectionForPosition:inDirection:':
    'prefix': 'baseWritingDirectionForPosition:inDirection:'
    'body': 'baseWritingDirectionForPosition(${1:UITextPosition* position}, inDirection:${2:UITextStorageDirection direction})'
  'beginningOfDocument':
    'prefix': 'beginningOfDocument'
    'body': 'beginningOfDocument()'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'cancelInteractiveTransition':
    'prefix': 'cancelInteractiveTransition'
    'body': 'cancelInteractiveTransition()'
  'caretRectForPosition:':
    'prefix': 'caretRectForPosition:'
    'body': 'caretRectForPosition(${1:UITextPosition* position})'
  'center':
    'prefix': 'center'
    'body': 'center()'
  'characterOffsetOfPosition:withinRange:':
    'prefix': 'characterOffsetOfPosition:withinRange:'
    'body': 'characterOffsetOfPosition(${1:UITextPosition* position}, withinRange:${2:UITextRange* range})'
  'characterRangeAtPoint:':
    'prefix': 'characterRangeAtPoint:'
    'body': 'characterRangeAtPoint(${1:CGPoint point})'
  'characterRangeByExtendingPosition:inDirection:':
    'prefix': 'characterRangeByExtendingPosition:inDirection:'
    'body': 'characterRangeByExtendingPosition(${1:UITextPosition* position}, inDirection:${2:UITextLayoutDirection direction})'
  'closestPositionToPoint:':
    'prefix': 'closestPositionToPoint:'
    'body': 'closestPositionToPoint(${1:CGPoint point})'
  'closestPositionToPoint:withinRange:':
    'prefix': 'closestPositionToPoint:withinRange:'
    'body': 'closestPositionToPoint(${1:CGPoint point}, withinRange:${2:UITextRange* range})'
  'collectionView:canPerformAction:forItemAtIndexPath:withSender:':
    'prefix': 'collectionView:canPerformAction:forItemAtIndexPath:withSender:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, canPerformAction:${2:SEL action}, forItemAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'collectionView:cellForItemAtIndexPath:':
    'prefix': 'collectionView:cellForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, cellForItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didDeselectItemAtIndexPath:':
    'prefix': 'collectionView:didDeselectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didDeselectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didEndDisplayingCell:forItemAtIndexPath:':
    'prefix': 'collectionView:didEndDisplayingCell:forItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didEndDisplayingCell:${2:UICollectionViewCell* cell}, forItemAtIndexPath:${3:NSIndexPath* indexPath})'
  'collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:':
    'prefix': 'collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didEndDisplayingSupplementaryView:${2:UICollectionReusableView* view}, forElementOfKind:${3:NSString* elementKind}, atIndexPath:${4:NSIndexPath* indexPath})'
  'collectionView:didHighlightItemAtIndexPath:':
    'prefix': 'collectionView:didHighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didHighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didSelectItemAtIndexPath:':
    'prefix': 'collectionView:didSelectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didSelectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didUnhighlightItemAtIndexPath:':
    'prefix': 'collectionView:didUnhighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didUnhighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:layout:insetForSectionAtIndex:':
    'prefix': 'collectionView:layout:insetForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, insetForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:minimumInteritemSpacingForSectionAtIndex:':
    'prefix': 'collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, minimumInteritemSpacingForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:minimumLineSpacingForSectionAtIndex:':
    'prefix': 'collectionView:layout:minimumLineSpacingForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, minimumLineSpacingForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:referenceSizeForFooterInSection:':
    'prefix': 'collectionView:layout:referenceSizeForFooterInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, referenceSizeForFooterInSection:${3:NSInteger section})'
  'collectionView:layout:referenceSizeForHeaderInSection:':
    'prefix': 'collectionView:layout:referenceSizeForHeaderInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, referenceSizeForHeaderInSection:${3:NSInteger section})'
  'collectionView:layout:sizeForItemAtIndexPath:':
    'prefix': 'collectionView:layout:sizeForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, sizeForItemAtIndexPath:${3:NSIndexPath* indexPath})'
  'collectionView:numberOfItemsInSection:':
    'prefix': 'collectionView:numberOfItemsInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, numberOfItemsInSection:${2:NSInteger section})'
  'collectionView:performAction:forItemAtIndexPath:withSender:':
    'prefix': 'collectionView:performAction:forItemAtIndexPath:withSender:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, performAction:${2:SEL action}, forItemAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'collectionView:shouldDeselectItemAtIndexPath:':
    'prefix': 'collectionView:shouldDeselectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldDeselectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldHighlightItemAtIndexPath:':
    'prefix': 'collectionView:shouldHighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldHighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldSelectItemAtIndexPath:':
    'prefix': 'collectionView:shouldSelectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldSelectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldShowMenuForItemAtIndexPath:':
    'prefix': 'collectionView:shouldShowMenuForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldShowMenuForItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:transitionLayoutForOldLayout:newLayout:':
    'prefix': 'collectionView:transitionLayoutForOldLayout:newLayout:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, transitionLayoutForOldLayout:${2:UICollectionViewLayout* fromLayout}, newLayout:${3:UICollectionViewLayout* toLayout})'
  'collectionView:viewForSupplementaryElementOfKind:atIndexPath:':
    'prefix': 'collectionView:viewForSupplementaryElementOfKind:atIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, viewForSupplementaryElementOfKind:${2:NSString* kind}, atIndexPath:${3:NSIndexPath* indexPath})'
  'collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:':
    'prefix': 'collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, beganContactForItem:${2:id item}, withBoundaryIdentifier:${3:id identifier}, atPoint:${4:CGPoint p})'
  'collisionBehavior:beganContactForItem:withItem:atPoint:':
    'prefix': 'collisionBehavior:beganContactForItem:withItem:atPoint:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, beganContactForItem:${2:id item1}, withItem:${3:id item2}, atPoint:${4:CGPoint p})'
  'collisionBehavior:endedContactForItem:withBoundaryIdentifier:':
    'prefix': 'collisionBehavior:endedContactForItem:withBoundaryIdentifier:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, endedContactForItem:${2:id item}, withBoundaryIdentifier:${3:id identifier})'
  'collisionBehavior:endedContactForItem:withItem:':
    'prefix': 'collisionBehavior:endedContactForItem:withItem:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, endedContactForItem:${2:id item1}, withItem:${3:id item2})'
  'comparePosition:toPosition:':
    'prefix': 'comparePosition:toPosition:'
    'body': 'comparePosition(${1:UITextPosition* position}, toPosition:${2:UITextPosition* other})'
  'completeTransition:':
    'prefix': 'completeTransition:'
    'body': 'completeTransition(${1:BOOL didComplete})'
  'completionCurve':
    'prefix': 'completionCurve'
    'body': 'completionCurve()'
  'completionSpeed':
    'prefix': 'completionSpeed'
    'body': 'completionSpeed()'
  'completionVelocity':
    'prefix': 'completionVelocity'
    'body': 'completionVelocity()'
  'containerView':
    'prefix': 'containerView'
    'body': 'containerView()'
  'copy:':
    'prefix': 'copy:'
    'body': 'copy(${1:id sender})'
  'cut:':
    'prefix': 'cut:'
    'body': 'cut(${1:id sender})'
  'decodeRestorableStateWithCoder:':
    'prefix': 'decodeRestorableStateWithCoder:'
    'body': 'decodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'decreaseSize:':
    'prefix': 'decreaseSize:'
    'body': 'decreaseSize(${1:id sender})'
  'delete:':
    'prefix': 'delete:'
    'body': 'delete(${1:id sender})'
  'deleteBackward':
    'prefix': 'deleteBackward'
    'body': 'deleteBackward()'
  'detailTextForGuidedAccessRestrictionWithIdentifier:':
    'prefix': 'detailTextForGuidedAccessRestrictionWithIdentifier:'
    'body': 'detailTextForGuidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier})'
  'dictationRecognitionFailed':
    'prefix': 'dictationRecognitionFailed'
    'body': 'dictationRecognitionFailed()'
  'dictationRecordingDidEnd':
    'prefix': 'dictationRecordingDidEnd'
    'body': 'dictationRecordingDidEnd()'
  'didPresentActionSheet:':
    'prefix': 'didPresentActionSheet:'
    'body': 'didPresentActionSheet(${1:UIActionSheet* actionSheet})'
  'didPresentAlertView:':
    'prefix': 'didPresentAlertView:'
    'body': 'didPresentAlertView(${1:UIAlertView* alertView})'
  'documentInteractionController:canPerformAction:':
    'prefix': 'documentInteractionController:canPerformAction:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, canPerformAction:${2:SEL action})'
  'documentInteractionController:didEndSendingToApplication:':
    'prefix': 'documentInteractionController:didEndSendingToApplication:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, didEndSendingToApplication:${2:NSString* application})'
  'documentInteractionController:performAction:':
    'prefix': 'documentInteractionController:performAction:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, performAction:${2:SEL action})'
  'documentInteractionController:willBeginSendingToApplication:':
    'prefix': 'documentInteractionController:willBeginSendingToApplication:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, willBeginSendingToApplication:${2:NSString* application})'
  'documentInteractionControllerDidDismissOpenInMenu:':
    'prefix': 'documentInteractionControllerDidDismissOpenInMenu:'
    'body': 'documentInteractionControllerDidDismissOpenInMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerDidDismissOptionsMenu:':
    'prefix': 'documentInteractionControllerDidDismissOptionsMenu:'
    'body': 'documentInteractionControllerDidDismissOptionsMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerDidEndPreview:':
    'prefix': 'documentInteractionControllerDidEndPreview:'
    'body': 'documentInteractionControllerDidEndPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerRectForPreview:':
    'prefix': 'documentInteractionControllerRectForPreview:'
    'body': 'documentInteractionControllerRectForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerViewControllerForPreview:':
    'prefix': 'documentInteractionControllerViewControllerForPreview:'
    'body': 'documentInteractionControllerViewControllerForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerViewForPreview:':
    'prefix': 'documentInteractionControllerViewForPreview:'
    'body': 'documentInteractionControllerViewForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillBeginPreview:':
    'prefix': 'documentInteractionControllerWillBeginPreview:'
    'body': 'documentInteractionControllerWillBeginPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillPresentOpenInMenu:':
    'prefix': 'documentInteractionControllerWillPresentOpenInMenu:'
    'body': 'documentInteractionControllerWillPresentOpenInMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillPresentOptionsMenu:':
    'prefix': 'documentInteractionControllerWillPresentOptionsMenu:'
    'body': 'documentInteractionControllerWillPresentOptionsMenu(${1:UIDocumentInteractionController* controller})'
  'dynamicAnimatorDidPause:':
    'prefix': 'dynamicAnimatorDidPause:'
    'body': 'dynamicAnimatorDidPause(${1:UIDynamicAnimator* animator})'
  'dynamicAnimatorWillResume:':
    'prefix': 'dynamicAnimatorWillResume:'
    'body': 'dynamicAnimatorWillResume(${1:UIDynamicAnimator* animator})'
  'enableInputClicksWhenVisible':
    'prefix': 'enableInputClicksWhenVisible'
    'body': 'enableInputClicksWhenVisible()'
  'enablesReturnKeyAutomatically':
    'prefix': 'enablesReturnKeyAutomatically'
    'body': 'enablesReturnKeyAutomatically()'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'endOfDocument':
    'prefix': 'endOfDocument'
    'body': 'endOfDocument()'
  'finalFrameForViewController:':
    'prefix': 'finalFrameForViewController:'
    'body': 'finalFrameForViewController(${1:UIViewController* vc})'
  'finishInteractiveTransition':
    'prefix': 'finishInteractiveTransition'
    'body': 'finishInteractiveTransition()'
  'firstRectForRange:':
    'prefix': 'firstRectForRange:'
    'body': 'firstRectForRange(${1:UITextRange* range})'
  'frameForDictationResultPlaceholder:':
    'prefix': 'frameForDictationResultPlaceholder:'
    'body': 'frameForDictationResultPlaceholder(${1:id placeholder})'
  'gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldBeRequiredToFailByGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizer:shouldReceiveTouch:':
    'prefix': 'gestureRecognizer:shouldReceiveTouch:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldReceiveTouch:${2:UITouch* touch})'
  'gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldRecognizeSimultaneouslyWithGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizer:shouldRequireFailureOfGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldRequireFailureOfGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizerShouldBegin:':
    'prefix': 'gestureRecognizerShouldBegin:'
    'body': 'gestureRecognizerShouldBegin(${1:UIGestureRecognizer* gestureRecognizer})'
  'guidedAccessRestrictionIdentifiers':
    'prefix': 'guidedAccessRestrictionIdentifiers'
    'body': 'guidedAccessRestrictionIdentifiers()'
  'guidedAccessRestrictionWithIdentifier:didChangeState:':
    'prefix': 'guidedAccessRestrictionWithIdentifier:didChangeState:'
    'body': 'guidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier}, didChangeState:${2:UIGuidedAccessRestrictionState newRestrictionState})'
  'hasText':
    'prefix': 'hasText'
    'body': 'hasText()'
  'imageForBounds:textContainer:characterIndex:':
    'prefix': 'imageForBounds:textContainer:characterIndex:'
    'body': 'imageForBounds(${1:CGRect imageBounds}, textContainer:${2:NSTextContainer* textContainer}, characterIndex:${3:NSUInteger charIndex})'
  'imagePickerController:didFinishPickingImage:editingInfo:':
    'prefix': 'imagePickerController:didFinishPickingImage:editingInfo:'
    'body': 'imagePickerController(${1:UIImagePickerController* picker}, didFinishPickingImage:${2:UIImage* image}, editingInfo:${3:NSDictionary* editingInfo})'
  'imagePickerController:didFinishPickingMediaWithInfo:':
    'prefix': 'imagePickerController:didFinishPickingMediaWithInfo:'
    'body': 'imagePickerController(${1:UIImagePickerController* picker}, didFinishPickingMediaWithInfo:${2:NSDictionary* info})'
  'imagePickerControllerDidCancel:':
    'prefix': 'imagePickerControllerDidCancel:'
    'body': 'imagePickerControllerDidCancel(${1:UIImagePickerController* picker})'
  'increaseSize:':
    'prefix': 'increaseSize:'
    'body': 'increaseSize(${1:id sender})'
  'indexOfAccessibilityElement:':
    'prefix': 'indexOfAccessibilityElement:'
    'body': 'indexOfAccessibilityElement(${1:id element})'
  'indexPathForElementWithModelIdentifier:inView:':
    'prefix': 'indexPathForElementWithModelIdentifier:inView:'
    'body': 'indexPathForElementWithModelIdentifier(${1:NSString* identifier}, inView:${2:UIView* view})'
  'initialFrameForViewController:':
    'prefix': 'initialFrameForViewController:'
    'body': 'initialFrameForViewController(${1:UIViewController* vc})'
  'initiallyInteractive':
    'prefix': 'initiallyInteractive'
    'body': 'initiallyInteractive()'
  'inputDelegate':
    'prefix': 'inputDelegate'
    'body': 'inputDelegate()'
  'insertDictationResult:':
    'prefix': 'insertDictationResult:'
    'body': 'insertDictationResult(${1:NSArray* dictationResult})'
  'insertDictationResultPlaceholder':
    'prefix': 'insertDictationResultPlaceholder'
    'body': 'insertDictationResultPlaceholder()'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:NSString* text})'
  'interactionControllerForDismissal:':
    'prefix': 'interactionControllerForDismissal:'
    'body': 'interactionControllerForDismissal(${1:id animator})'
  'interactionControllerForPresentation:':
    'prefix': 'interactionControllerForPresentation:'
    'body': 'interactionControllerForPresentation(${1:id animator})'
  'isAccessibilityElement':
    'prefix': 'isAccessibilityElement'
    'body': 'isAccessibilityElement()'
  'isAnimated':
    'prefix': 'isAnimated'
    'body': 'isAnimated()'
  'isCancelled':
    'prefix': 'isCancelled'
    'body': 'isCancelled()'
  'isInteractive':
    'prefix': 'isInteractive'
    'body': 'isInteractive()'
  'isPosition:atBoundary:inDirection:':
    'prefix': 'isPosition:atBoundary:inDirection:'
    'body': 'isPosition(${1:UITextPosition* position}, atBoundary:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'isPosition:withinTextUnit:inDirection:':
    'prefix': 'isPosition:withinTextUnit:inDirection:'
    'body': 'isPosition(${1:UITextPosition* position}, withinTextUnit:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'isSecureTextEntry':
    'prefix': 'isSecureTextEntry'
    'body': 'isSecureTextEntry()'
  'keyboardAppearance':
    'prefix': 'keyboardAppearance'
    'body': 'KeyboardAppearance()'
  'keyboardType':
    'prefix': 'keyboardType'
    'body': 'KeyboardType()'
  'layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, boundingBoxForControlGlyphAtIndex:${2:NSUInteger glyphIndex}, forTextContainer:${3:NSTextContainer* textContainer}, proposedLineFragment:${4:CGRect proposedRect}, glyphPosition:${5:CGPoint glyphPosition}, characterIndex:${6:NSUInteger charIndex})'
  'layoutManager:didCompleteLayoutForTextContainer:atEnd:':
    'prefix': 'layoutManager:didCompleteLayoutForTextContainer:atEnd:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, didCompleteLayoutForTextContainer:${2:NSTextContainer* textContainer}, atEnd:${3:BOOL layoutFinishedFlag})'
  'layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, lineSpacingAfterGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, paragraphSpacingAfterGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, paragraphSpacingBeforeGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:':
    'prefix': 'layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldBreakLineByHyphenatingBeforeCharacterAtIndex:${2:NSUInteger charIndex})'
  'layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:':
    'prefix': 'layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldBreakLineByWordBeforeCharacterAtIndex:${2:NSUInteger charIndex})'
  'layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:':
    'prefix': 'layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldGenerateGlyphs:${2:CGGlyph* glyphs}, properties:${3:NSGlyphProperty* props}, characterIndexes:${4:NSUInteger* charIndexes}, font:${5:UIFont* aFont}, forGlyphRange:${6:NSRange glyphRange})'
  'layoutManager:shouldUseAction:forControlCharacterAtIndex:':
    'prefix': 'layoutManager:shouldUseAction:forControlCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldUseAction:${2:NSControlCharacterAction action}, forControlCharacterAtIndex:${3:NSUInteger charIndex})'
  'layoutManager:textContainer:didChangeGeometryFromSize:':
    'prefix': 'layoutManager:textContainer:didChangeGeometryFromSize:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, textContainer:${2:NSTextContainer* textContainer}, didChangeGeometryFromSize:${3:CGSize oldSize})'
  'layoutManagerDidInvalidateLayout:':
    'prefix': 'layoutManagerDidInvalidateLayout:'
    'body': 'layoutManagerDidInvalidateLayout(${1:NSLayoutManager* sender})'
  'layoutOrientation':
    'prefix': 'layoutOrientation'
    'body': 'layoutOrientation()'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'makeTextWritingDirectionLeftToRight:':
    'prefix': 'makeTextWritingDirectionLeftToRight:'
    'body': 'makeTextWritingDirectionLeftToRight(${1:id sender})'
  'makeTextWritingDirectionRightToLeft:':
    'prefix': 'makeTextWritingDirectionRightToLeft:'
    'body': 'makeTextWritingDirectionRightToLeft(${1:id sender})'
  'markedTextRange':
    'prefix': 'markedTextRange'
    'body': 'markedTextRange()'
  'markedTextStyle':
    'prefix': 'markedTextStyle'
    'body': 'markedTextStyle()'
  'modelIdentifierForElementAtIndexPath:inView:':
    'prefix': 'modelIdentifierForElementAtIndexPath:inView:'
    'body': 'modelIdentifierForElementAtIndexPath(${1:NSIndexPath* idx}, inView:${2:UIView* view})'
  'navigationBar:didPopItem:':
    'prefix': 'navigationBar:didPopItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, didPopItem:${2:UINavigationItem* item})'
  'navigationBar:didPushItem:':
    'prefix': 'navigationBar:didPushItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, didPushItem:${2:UINavigationItem* item})'
  'navigationBar:shouldPopItem:':
    'prefix': 'navigationBar:shouldPopItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, shouldPopItem:${2:UINavigationItem* item})'
  'navigationBar:shouldPushItem:':
    'prefix': 'navigationBar:shouldPushItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, shouldPushItem:${2:UINavigationItem* item})'
  'navigationController:animationControllerForOperation:fromViewController:toViewController:':
    'prefix': 'navigationController:animationControllerForOperation:fromViewController:toViewController:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, animationControllerForOperation:${2:UINavigationControllerOperation operation}, fromViewController:${3:UIViewController* fromVC}, toViewController:${4:UIViewController* toVC})'
  'navigationController:didShowViewController:animated:':
    'prefix': 'navigationController:didShowViewController:animated:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, didShowViewController:${2:UIViewController* viewController}, animated:${3:BOOL animated})'
  'navigationController:interactionControllerForAnimationController:':
    'prefix': 'navigationController:interactionControllerForAnimationController:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, interactionControllerForAnimationController:${2:id animationController})'
  'navigationController:willShowViewController:animated:':
    'prefix': 'navigationController:willShowViewController:animated:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, willShowViewController:${2:UIViewController* viewController}, animated:${3:BOOL animated})'
  'navigationControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'navigationControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'navigationControllerPreferredInterfaceOrientationForPresentation(${1:UINavigationController* navigationController})'
  'navigationControllerSupportedInterfaceOrientations:':
    'prefix': 'navigationControllerSupportedInterfaceOrientations:'
    'body': 'navigationControllerSupportedInterfaceOrientations(${1:UINavigationController* navigationController})'
  'notifyWhenInteractionEndsUsingBlock:':
    'prefix': 'notifyWhenInteractionEndsUsingBlock:'
    'body': 'notifyWhenInteractionEndsUsingBlock(${1:void (^)(id) handler})'
  'numberOfComponentsInPickerView:':
    'prefix': 'numberOfComponentsInPickerView:'
    'body': 'numberOfComponentsInPickerView(${1:UIPickerView* pickerView})'
  'numberOfSectionsInCollectionView:':
    'prefix': 'numberOfSectionsInCollectionView:'
    'body': 'numberOfSectionsInCollectionView(${1:UICollectionView* collectionView})'
  'numberOfSectionsInTableView:':
    'prefix': 'numberOfSectionsInTableView:'
    'body': 'numberOfSectionsInTableView(${1:UITableView* tableView})'
  'objectRestorationClass':
    'prefix': 'objectRestorationClass'
    'body': 'objectRestorationClass()'
  'NSObject.objectWithRestorationIdentifierPath:coder:':
    'prefix': 'objectWithRestorationIdentifierPath:coder:'
    'body': 'NSObject.objectWithRestorationIdentifierPath(${1:NSArray* identifierComponents}, coder:${2:NSCoder* coder})'
  'offsetFromPosition:toPosition:':
    'prefix': 'offsetFromPosition:toPosition:'
    'body': 'offsetFromPosition(${1:UITextPosition* from}, toPosition:${2:UITextPosition* toPosition})'
  'pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:':
    'prefix': 'pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, didFinishAnimating:${2:BOOL finished}, previousViewControllers:${3:NSArray* previousViewControllers}, transitionCompleted:${4:BOOL completed})'
  'pageViewController:spineLocationForInterfaceOrientation:':
    'prefix': 'pageViewController:spineLocationForInterfaceOrientation:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, spineLocationForInterfaceOrientation:${2:UIInterfaceOrientation orientation})'
  'pageViewController:viewControllerAfterViewController:':
    'prefix': 'pageViewController:viewControllerAfterViewController:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, viewControllerAfterViewController:${2:UIViewController* viewController})'
  'pageViewController:viewControllerBeforeViewController:':
    'prefix': 'pageViewController:viewControllerBeforeViewController:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, viewControllerBeforeViewController:${2:UIViewController* viewController})'
  'pageViewController:willTransitionToViewControllers:':
    'prefix': 'pageViewController:willTransitionToViewControllers:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, willTransitionToViewControllers:${2:NSArray* pendingViewControllers})'
  'pageViewControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'pageViewControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'pageViewControllerPreferredInterfaceOrientationForPresentation(${1:UIPageViewController* pageViewController})'
  'pageViewControllerSupportedInterfaceOrientations:':
    'prefix': 'pageViewControllerSupportedInterfaceOrientations:'
    'body': 'pageViewControllerSupportedInterfaceOrientations(${1:UIPageViewController* pageViewController})'
  'paste:':
    'prefix': 'paste:'
    'body': 'paste(${1:id sender})'
  'percentComplete':
    'prefix': 'percentComplete'
    'body': 'percentComplete()'
  'pickerView:accessibilityHintForComponent:':
    'prefix': 'pickerView:accessibilityHintForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, accessibilityHintForComponent:${2:NSInteger component})'
  'pickerView:accessibilityLabelForComponent:':
    'prefix': 'pickerView:accessibilityLabelForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, accessibilityLabelForComponent:${2:NSInteger component})'
  'pickerView:attributedTitleForRow:forComponent:':
    'prefix': 'pickerView:attributedTitleForRow:forComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, attributedTitleForRow:${2:NSInteger row}, forComponent:${3:NSInteger component})'
  'pickerView:didSelectRow:inComponent:':
    'prefix': 'pickerView:didSelectRow:inComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, didSelectRow:${2:NSInteger row}, inComponent:${3:NSInteger component})'
  'pickerView:numberOfRowsInComponent:':
    'prefix': 'pickerView:numberOfRowsInComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, numberOfRowsInComponent:${2:NSInteger component})'
  'pickerView:rowHeightForComponent:':
    'prefix': 'pickerView:rowHeightForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, rowHeightForComponent:${2:NSInteger component})'
  'pickerView:titleForRow:forComponent:':
    'prefix': 'pickerView:titleForRow:forComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, titleForRow:${2:NSInteger row}, forComponent:${3:NSInteger component})'
  'pickerView:viewForRow:forComponent:reusingView:':
    'prefix': 'pickerView:viewForRow:forComponent:reusingView:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, viewForRow:${2:NSInteger row}, forComponent:${3:NSInteger component}, reusingView:${4:UIView* view})'
  'pickerView:widthForComponent:':
    'prefix': 'pickerView:widthForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, widthForComponent:${2:NSInteger component})'
  'popoverController:willRepositionPopoverToRect:inView:':
    'prefix': 'popoverController:willRepositionPopoverToRect:inView:'
    'body': 'popoverController(${1:UIPopoverController* popoverController}, willRepositionPopoverToRect:${2:CGRect* rect}, inView:${3:UIView** view})'
  'popoverControllerDidDismissPopover:':
    'prefix': 'popoverControllerDidDismissPopover:'
    'body': 'popoverControllerDidDismissPopover(${1:UIPopoverController* popoverController})'
  'popoverControllerShouldDismissPopover:':
    'prefix': 'popoverControllerShouldDismissPopover:'
    'body': 'popoverControllerShouldDismissPopover(${1:UIPopoverController* popoverController})'
  'positionForBar:':
    'prefix': 'positionForBar:'
    'body': 'positionForBar(${1:id bar})'
  'positionFromPosition:inDirection:offset:':
    'prefix': 'positionFromPosition:inDirection:offset:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, inDirection:${2:UITextLayoutDirection direction}, offset:${3:NSInteger offset})'
  'positionFromPosition:offset:':
    'prefix': 'positionFromPosition:offset:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, offset:${2:NSInteger offset})'
  'positionFromPosition:toBoundary:inDirection:':
    'prefix': 'positionFromPosition:toBoundary:inDirection:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, toBoundary:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'positionWithinRange:atCharacterOffset:':
    'prefix': 'positionWithinRange:atCharacterOffset:'
    'body': 'positionWithinRange(${1:UITextRange* range}, atCharacterOffset:${2:NSInteger offset})'
  'positionWithinRange:farthestInDirection:':
    'prefix': 'positionWithinRange:farthestInDirection:'
    'body': 'positionWithinRange(${1:UITextRange* range}, farthestInDirection:${2:UITextLayoutDirection direction})'
  'presentationCountForPageViewController:':
    'prefix': 'presentationCountForPageViewController:'
    'body': 'presentationCountForPageViewController(${1:UIPageViewController* pageViewController})'
  'presentationIndexForPageViewController:':
    'prefix': 'presentationIndexForPageViewController:'
    'body': 'presentationIndexForPageViewController(${1:UIPageViewController* pageViewController})'
  'presentationStyle':
    'prefix': 'presentationStyle'
    'body': 'presentationStyle()'
  'printInteractionController:choosePaper:':
    'prefix': 'printInteractionController:choosePaper:'
    'body': 'printInteractionController(${1:UIPrintInteractionController* printInteractionController}, choosePaper:${2:NSArray* paperList})'
  'printInteractionController:cutLengthForPaper:':
    'prefix': 'printInteractionController:cutLengthForPaper:'
    'body': 'printInteractionController(${1:UIPrintInteractionController* printInteractionController}, cutLengthForPaper:${2:UIPrintPaper* paper})'
  'printInteractionControllerDidDismissPrinterOptions:':
    'prefix': 'printInteractionControllerDidDismissPrinterOptions:'
    'body': 'printInteractionControllerDidDismissPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerDidFinishJob:':
    'prefix': 'printInteractionControllerDidFinishJob:'
    'body': 'printInteractionControllerDidFinishJob(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerDidPresentPrinterOptions:':
    'prefix': 'printInteractionControllerDidPresentPrinterOptions:'
    'body': 'printInteractionControllerDidPresentPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerParentViewController:':
    'prefix': 'printInteractionControllerParentViewController:'
    'body': 'printInteractionControllerParentViewController(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillDismissPrinterOptions:':
    'prefix': 'printInteractionControllerWillDismissPrinterOptions:'
    'body': 'printInteractionControllerWillDismissPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillPresentPrinterOptions:':
    'prefix': 'printInteractionControllerWillPresentPrinterOptions:'
    'body': 'printInteractionControllerWillPresentPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillStartJob:':
    'prefix': 'printInteractionControllerWillStartJob:'
    'body': 'printInteractionControllerWillStartJob(${1:UIPrintInteractionController* printInteractionController})'
  'rangeEnclosingPosition:withGranularity:inDirection:':
    'prefix': 'rangeEnclosingPosition:withGranularity:inDirection:'
    'body': 'rangeEnclosingPosition(${1:UITextPosition* position}, withGranularity:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'removeDictationResultPlaceholder:willInsertResult:':
    'prefix': 'removeDictationResultPlaceholder:willInsertResult:'
    'body': 'removeDictationResultPlaceholder(${1:id placeholder}, willInsertResult:${2:BOOL willInsertResult})'
  'replaceRange:withText:':
    'prefix': 'replaceRange:withText:'
    'body': 'replaceRange(${1:UITextRange* range}, withText:${2:NSString* text})'
  'restorationParent':
    'prefix': 'restorationParent'
    'body': 'restorationParent()'
  'returnKeyType':
    'prefix': 'returnKeyType'
    'body': 'returnKeyType()'
  'scrollViewDidEndDecelerating:':
    'prefix': 'scrollViewDidEndDecelerating:'
    'body': 'scrollViewDidEndDecelerating(${1:UIScrollView* scrollView})'
  'scrollViewDidEndDragging:willDecelerate:':
    'prefix': 'scrollViewDidEndDragging:willDecelerate:'
    'body': 'scrollViewDidEndDragging(${1:UIScrollView* scrollView}, willDecelerate:${2:BOOL decelerate})'
  'scrollViewDidEndScrollingAnimation:':
    'prefix': 'scrollViewDidEndScrollingAnimation:'
    'body': 'scrollViewDidEndScrollingAnimation(${1:UIScrollView* scrollView})'
  'scrollViewDidEndZooming:withView:atScale:':
    'prefix': 'scrollViewDidEndZooming:withView:atScale:'
    'body': 'scrollViewDidEndZooming(${1:UIScrollView* scrollView}, withView:${2:UIView* view}, atScale:${3:CGFloat scale})'
  'scrollViewDidScroll:':
    'prefix': 'scrollViewDidScroll:'
    'body': 'scrollViewDidScroll(${1:UIScrollView* scrollView})'
  'scrollViewDidScrollToTop:':
    'prefix': 'scrollViewDidScrollToTop:'
    'body': 'scrollViewDidScrollToTop(${1:UIScrollView* scrollView})'
  'scrollViewDidZoom:':
    'prefix': 'scrollViewDidZoom:'
    'body': 'scrollViewDidZoom(${1:UIScrollView* scrollView})'
  'scrollViewShouldScrollToTop:':
    'prefix': 'scrollViewShouldScrollToTop:'
    'body': 'scrollViewShouldScrollToTop(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginDecelerating:':
    'prefix': 'scrollViewWillBeginDecelerating:'
    'body': 'scrollViewWillBeginDecelerating(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginDragging:':
    'prefix': 'scrollViewWillBeginDragging:'
    'body': 'scrollViewWillBeginDragging(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginZooming:withView:':
    'prefix': 'scrollViewWillBeginZooming:withView:'
    'body': 'scrollViewWillBeginZooming(${1:UIScrollView* scrollView}, withView:${2:UIView* view})'
  'scrollViewWillEndDragging:withVelocity:targetContentOffset:':
    'prefix': 'scrollViewWillEndDragging:withVelocity:targetContentOffset:'
    'body': 'scrollViewWillEndDragging(${1:UIScrollView* scrollView}, withVelocity:${2:CGPoint velocity}, targetContentOffset:${3:CGPoint* targetContentOffset})'
  'searchBar:selectedScopeButtonIndexDidChange:':
    'prefix': 'searchBar:selectedScopeButtonIndexDidChange:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, selectedScopeButtonIndexDidChange:${2:NSInteger selectedScope})'
  'searchBar:shouldChangeTextInRange:replacementText:':
    'prefix': 'searchBar:shouldChangeTextInRange:replacementText:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, shouldChangeTextInRange:${2:NSRange range}, replacementText:${3:NSString* text})'
  'searchBar:textDidChange:':
    'prefix': 'searchBar:textDidChange:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, textDidChange:${2:NSString* searchText})'
  'searchBarBookmarkButtonClicked:':
    'prefix': 'searchBarBookmarkButtonClicked:'
    'body': 'searchBarBookmarkButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarCancelButtonClicked:':
    'prefix': 'searchBarCancelButtonClicked:'
    'body': 'searchBarCancelButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarResultsListButtonClicked:':
    'prefix': 'searchBarResultsListButtonClicked:'
    'body': 'searchBarResultsListButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarSearchButtonClicked:':
    'prefix': 'searchBarSearchButtonClicked:'
    'body': 'searchBarSearchButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarShouldBeginEditing:':
    'prefix': 'searchBarShouldBeginEditing:'
    'body': 'searchBarShouldBeginEditing(${1:UISearchBar* searchBar})'
  'searchBarShouldEndEditing:':
    'prefix': 'searchBarShouldEndEditing:'
    'body': 'searchBarShouldEndEditing(${1:UISearchBar* searchBar})'
  'searchBarTextDidBeginEditing:':
    'prefix': 'searchBarTextDidBeginEditing:'
    'body': 'searchBarTextDidBeginEditing(${1:UISearchBar* searchBar})'
  'searchBarTextDidEndEditing:':
    'prefix': 'searchBarTextDidEndEditing:'
    'body': 'searchBarTextDidEndEditing(${1:UISearchBar* searchBar})'
  'searchDisplayController:didHideSearchResultsTableView:':
    'prefix': 'searchDisplayController:didHideSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didHideSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:didLoadSearchResultsTableView:':
    'prefix': 'searchDisplayController:didLoadSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didLoadSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:didShowSearchResultsTableView:':
    'prefix': 'searchDisplayController:didShowSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didShowSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:shouldReloadTableForSearchScope:':
    'prefix': 'searchDisplayController:shouldReloadTableForSearchScope:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, shouldReloadTableForSearchScope:${2:NSInteger searchOption})'
  'searchDisplayController:shouldReloadTableForSearchString:':
    'prefix': 'searchDisplayController:shouldReloadTableForSearchString:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, shouldReloadTableForSearchString:${2:NSString* searchString})'
  'searchDisplayController:willHideSearchResultsTableView:':
    'prefix': 'searchDisplayController:willHideSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willHideSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:willShowSearchResultsTableView:':
    'prefix': 'searchDisplayController:willShowSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willShowSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:willUnloadSearchResultsTableView:':
    'prefix': 'searchDisplayController:willUnloadSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willUnloadSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayControllerDidBeginSearch:':
    'prefix': 'searchDisplayControllerDidBeginSearch:'
    'body': 'searchDisplayControllerDidBeginSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerDidEndSearch:':
    'prefix': 'searchDisplayControllerDidEndSearch:'
    'body': 'searchDisplayControllerDidEndSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerWillBeginSearch:':
    'prefix': 'searchDisplayControllerWillBeginSearch:'
    'body': 'searchDisplayControllerWillBeginSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerWillEndSearch:':
    'prefix': 'searchDisplayControllerWillEndSearch:'
    'body': 'searchDisplayControllerWillEndSearch(${1:UISearchDisplayController* controller})'
  'sectionIndexTitlesForTableView:':
    'prefix': 'sectionIndexTitlesForTableView:'
    'body': 'sectionIndexTitlesForTableView(${1:UITableView* tableView})'
  'select:':
    'prefix': 'select:'
    'body': 'select(${1:id sender})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectedTextRange':
    'prefix': 'selectedTextRange'
    'body': 'selectedTextRange()'
  'selectionAffinity':
    'prefix': 'selectionAffinity'
    'body': 'selectionAffinity()'
  'selectionDidChange:':
    'prefix': 'selectionDidChange:'
    'body': 'selectionDidChange(${1:id textInput})'
  'selectionRectsForRange:':
    'prefix': 'selectionRectsForRange:'
    'body': 'selectionRectsForRange(${1:UITextRange* range})'
  'selectionWillChange:':
    'prefix': 'selectionWillChange:'
    'body': 'selectionWillChange(${1:id textInput})'
  'setAccessibilityActivationPoint:':
    'prefix': 'setAccessibilityActivationPoint:'
    'body': 'setAccessibilityActivationPoint(${1:CGPoint accessibilityActivationPoint})'
  'setAccessibilityElementsHidden:':
    'prefix': 'setAccessibilityElementsHidden:'
    'body': 'setAccessibilityElementsHidden(${1:BOOL accessibilityElementsHidden})'
  'setAccessibilityFrame:':
    'prefix': 'setAccessibilityFrame:'
    'body': 'setAccessibilityFrame(${1:CGRect accessibilityFrame})'
  'setAccessibilityHint:':
    'prefix': 'setAccessibilityHint:'
    'body': 'setAccessibilityHint(${1:NSString* accessibilityHint})'
  'setAccessibilityIdentifier:':
    'prefix': 'setAccessibilityIdentifier:'
    'body': 'setAccessibilityIdentifier(${1:NSString* accessibilityIdentifier})'
  'setAccessibilityLabel:':
    'prefix': 'setAccessibilityLabel:'
    'body': 'setAccessibilityLabel(${1:NSString* accessibilityLabel})'
  'setAccessibilityLanguage:':
    'prefix': 'setAccessibilityLanguage:'
    'body': 'setAccessibilityLanguage(${1:NSString* accessibilityLanguage})'
  'setAccessibilityPath:':
    'prefix': 'setAccessibilityPath:'
    'body': 'setAccessibilityPath(${1:UIBezierPath* accessibilityPath})'
  'setAccessibilityTraits:':
    'prefix': 'setAccessibilityTraits:'
    'body': 'setAccessibilityTraits(${1:UIAccessibilityTraits accessibilityTraits})'
  'setAccessibilityValue:':
    'prefix': 'setAccessibilityValue:'
    'body': 'setAccessibilityValue(${1:NSString* accessibilityValue})'
  'setAccessibilityViewIsModal:':
    'prefix': 'setAccessibilityViewIsModal:'
    'body': 'setAccessibilityViewIsModal(${1:BOOL accessibilityViewIsModal})'
  'setAutocapitalizationType:':
    'prefix': 'setAutocapitalizationType:'
    'body': 'setAutocapitalizationType(${1:UITextAutocapitalizationType autocapitalizationType})'
  'setAutocorrectionType:':
    'prefix': 'setAutocorrectionType:'
    'body': 'setAutocorrectionType(${1:UITextAutocorrectionType autocorrectionType})'
  'setBaseWritingDirection:forRange:':
    'prefix': 'setBaseWritingDirection:forRange:'
    'body': 'setBaseWritingDirection(${1:UITextWritingDirection writingDirection}, forRange:${2:UITextRange* range})'
  'setCenter:':
    'prefix': 'setCenter:'
    'body': 'setCenter(${1:CGPoint center})'
  'setEnablesReturnKeyAutomatically:':
    'prefix': 'setEnablesReturnKeyAutomatically:'
    'body': 'setEnablesReturnKeyAutomatically(${1:BOOL enablesReturnKeyAutomatically})'
  'setInputDelegate:':
    'prefix': 'setInputDelegate:'
    'body': 'setInputDelegate(${1:id inputDelegate})'
  'setIsAccessibilityElement:':
    'prefix': 'setIsAccessibilityElement:'
    'body': 'setIsAccessibilityElement(${1:BOOL isAccessibilityElement})'
  'setKeyboardAppearance:':
    'prefix': 'setKeyboardAppearance:'
    'body': 'setKeyboardAppearance(${1:UIKeyboardAppearance keyboardAppearance})'
  'setKeyboardType:':
    'prefix': 'setKeyboardType:'
    'body': 'setKeyboardType(${1:UIKeyboardType keyboardType})'
  'setLayoutOrientation:':
    'prefix': 'setLayoutOrientation:'
    'body': 'setLayoutOrientation(${1:NSTextLayoutOrientation layoutOrientation})'
  'setMarkedText:selectedRange:':
    'prefix': 'setMarkedText:selectedRange:'
    'body': 'setMarkedText(${1:NSString* markedText}, selectedRange:${2:NSRange selectedRange})'
  'setMarkedTextStyle:':
    'prefix': 'setMarkedTextStyle:'
    'body': 'setMarkedTextStyle(${1:NSDictionary* markedTextStyle})'
  'setReturnKeyType:':
    'prefix': 'setReturnKeyType:'
    'body': 'setReturnKeyType(${1:UIReturnKeyType returnKeyType})'
  'setSecureTextEntry:':
    'prefix': 'setSecureTextEntry:'
    'body': 'setSecureTextEntry(${1:BOOL secureTextEntry})'
  'setSelectedTextRange:':
    'prefix': 'setSelectedTextRange:'
    'body': 'setSelectedTextRange(${1:UITextRange* selectedTextRange})'
  'setSelectionAffinity:':
    'prefix': 'setSelectionAffinity:'
    'body': 'setSelectionAffinity(${1:UITextStorageDirection selectionAffinity})'
  'setShouldGroupAccessibilityChildren:':
    'prefix': 'setShouldGroupAccessibilityChildren:'
    'body': 'setShouldGroupAccessibilityChildren(${1:BOOL shouldGroupAccessibilityChildren})'
  'setSpellCheckingType:':
    'prefix': 'setSpellCheckingType:'
    'body': 'setSpellCheckingType(${1:UITextSpellCheckingType spellCheckingType})'
  'setTransform:':
    'prefix': 'setTransform:'
    'body': 'setTransform(${1:CGAffineTransform transform})'
  'setWindow:':
    'prefix': 'setWindow:'
    'body': 'setWindow(${1:UIWindow* window})'
  'shouldChangeTextInRange:replacementText:':
    'prefix': 'shouldChangeTextInRange:replacementText:'
    'body': 'shouldChangeTextInRange(${1:UITextRange* range}, replacementText:${2:NSString* text})'
  'shouldGroupAccessibilityChildren':
    'prefix': 'shouldGroupAccessibilityChildren'
    'body': 'shouldGroupAccessibilityChildren()'
  'spellCheckingType':
    'prefix': 'spellCheckingType'
    'body': 'spellCheckingType()'
  'splitViewController:popoverController:willPresentViewController:':
    'prefix': 'splitViewController:popoverController:willPresentViewController:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, popoverController:${2:UIPopoverController* pc}, willPresentViewController:${3:UIViewController* aViewController})'
  'splitViewController:shouldHideViewController:inOrientation:':
    'prefix': 'splitViewController:shouldHideViewController:inOrientation:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, shouldHideViewController:${2:UIViewController* vc}, inOrientation:${3:UIInterfaceOrientation orientation})'
  'splitViewController:willHideViewController:withBarButtonItem:forPopoverController:':
    'prefix': 'splitViewController:willHideViewController:withBarButtonItem:forPopoverController:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, willHideViewController:${2:UIViewController* aViewController}, withBarButtonItem:${3:UIBarButtonItem* barButtonItem}, forPopoverController:${4:UIPopoverController* pc})'
  'splitViewController:willShowViewController:invalidatingBarButtonItem:':
    'prefix': 'splitViewController:willShowViewController:invalidatingBarButtonItem:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, willShowViewController:${2:UIViewController* aViewController}, invalidatingBarButtonItem:${3:UIBarButtonItem* barButtonItem})'
  'splitViewControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'splitViewControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'splitViewControllerPreferredInterfaceOrientationForPresentation(${1:UISplitViewController* splitViewController})'
  'splitViewControllerSupportedInterfaceOrientations:':
    'prefix': 'splitViewControllerSupportedInterfaceOrientations:'
    'body': 'splitViewControllerSupportedInterfaceOrientations(${1:UISplitViewController* splitViewController})'
  'startInteractiveTransition:':
    'prefix': 'startInteractiveTransition:'
    'body': 'startInteractiveTransition(${1:id transitionContext})'
  'tabBar:didBeginCustomizingItems:':
    'prefix': 'tabBar:didBeginCustomizingItems:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didBeginCustomizingItems:${2:NSArray* items})'
  'tabBar:didEndCustomizingItems:changed:':
    'prefix': 'tabBar:didEndCustomizingItems:changed:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didEndCustomizingItems:${2:NSArray* items}, changed:${3:BOOL changed})'
  'tabBar:didSelectItem:':
    'prefix': 'tabBar:didSelectItem:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didSelectItem:${2:UITabBarItem* item})'
  'tabBar:willBeginCustomizingItems:':
    'prefix': 'tabBar:willBeginCustomizingItems:'
    'body': 'tabBar(${1:UITabBar* tabBar}, willBeginCustomizingItems:${2:NSArray* items})'
  'tabBar:willEndCustomizingItems:changed:':
    'prefix': 'tabBar:willEndCustomizingItems:changed:'
    'body': 'tabBar(${1:UITabBar* tabBar}, willEndCustomizingItems:${2:NSArray* items}, changed:${3:BOOL changed})'
  'tabBarController:animationControllerForTransitionFromViewController:toViewController:':
    'prefix': 'tabBarController:animationControllerForTransitionFromViewController:toViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, animationControllerForTransitionFromViewController:${2:UIViewController* fromVC}, toViewController:${3:UIViewController* toVC})'
  'tabBarController:didEndCustomizingViewControllers:changed:':
    'prefix': 'tabBarController:didEndCustomizingViewControllers:changed:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, didEndCustomizingViewControllers:${2:NSArray* viewControllers}, changed:${3:BOOL changed})'
  'tabBarController:didSelectViewController:':
    'prefix': 'tabBarController:didSelectViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, didSelectViewController:${2:UIViewController* viewController})'
  'tabBarController:interactionControllerForAnimationController:':
    'prefix': 'tabBarController:interactionControllerForAnimationController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, interactionControllerForAnimationController:${2:id animationController})'
  'tabBarController:shouldSelectViewController:':
    'prefix': 'tabBarController:shouldSelectViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, shouldSelectViewController:${2:UIViewController* viewController})'
  'tabBarController:willBeginCustomizingViewControllers:':
    'prefix': 'tabBarController:willBeginCustomizingViewControllers:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, willBeginCustomizingViewControllers:${2:NSArray* viewControllers})'
  'tabBarController:willEndCustomizingViewControllers:changed:':
    'prefix': 'tabBarController:willEndCustomizingViewControllers:changed:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, willEndCustomizingViewControllers:${2:NSArray* viewControllers}, changed:${3:BOOL changed})'
  'tabBarControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'tabBarControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'tabBarControllerPreferredInterfaceOrientationForPresentation(${1:UITabBarController* tabBarController})'
  'tabBarControllerSupportedInterfaceOrientations:':
    'prefix': 'tabBarControllerSupportedInterfaceOrientations:'
    'body': 'tabBarControllerSupportedInterfaceOrientations(${1:UITabBarController* tabBarController})'
  'tableView:accessoryButtonTappedForRowWithIndexPath:':
    'prefix': 'tableView:accessoryButtonTappedForRowWithIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, accessoryButtonTappedForRowWithIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:accessoryTypeForRowWithIndexPath:':
    'prefix': 'tableView:accessoryTypeForRowWithIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, accessoryTypeForRowWithIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:canEditRowAtIndexPath:':
    'prefix': 'tableView:canEditRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, canEditRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:canMoveRowAtIndexPath:':
    'prefix': 'tableView:canMoveRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, canMoveRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:canPerformAction:forRowAtIndexPath:withSender:':
    'prefix': 'tableView:canPerformAction:forRowAtIndexPath:withSender:'
    'body': 'tableView(${1:UITableView* tableView}, canPerformAction:${2:SEL action}, forRowAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'tableView:cellForRowAtIndexPath:':
    'prefix': 'tableView:cellForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, cellForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:commitEditingStyle:forRowAtIndexPath:':
    'prefix': 'tableView:commitEditingStyle:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, commitEditingStyle:${2:UITableViewCellEditingStyle editingStyle}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:didDeselectRowAtIndexPath:':
    'prefix': 'tableView:didDeselectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didDeselectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didEndDisplayingCell:forRowAtIndexPath:':
    'prefix': 'tableView:didEndDisplayingCell:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingCell:${2:UITableViewCell* cell}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:didEndDisplayingFooterView:forSection:':
    'prefix': 'tableView:didEndDisplayingFooterView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingFooterView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:didEndDisplayingHeaderView:forSection:':
    'prefix': 'tableView:didEndDisplayingHeaderView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingHeaderView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:didEndEditingRowAtIndexPath:':
    'prefix': 'tableView:didEndEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didEndEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didHighlightRowAtIndexPath:':
    'prefix': 'tableView:didHighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didHighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didSelectRowAtIndexPath:':
    'prefix': 'tableView:didSelectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didSelectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didUnhighlightRowAtIndexPath:':
    'prefix': 'tableView:didUnhighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didUnhighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:editingStyleForRowAtIndexPath:':
    'prefix': 'tableView:editingStyleForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, editingStyleForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:estimatedHeightForFooterInSection:':
    'prefix': 'tableView:estimatedHeightForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForFooterInSection:${2:NSInteger section})'
  'tableView:estimatedHeightForHeaderInSection:':
    'prefix': 'tableView:estimatedHeightForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForHeaderInSection:${2:NSInteger section})'
  'tableView:estimatedHeightForRowAtIndexPath:':
    'prefix': 'tableView:estimatedHeightForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:heightForFooterInSection:':
    'prefix': 'tableView:heightForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, heightForFooterInSection:${2:NSInteger section})'
  'tableView:heightForHeaderInSection:':
    'prefix': 'tableView:heightForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, heightForHeaderInSection:${2:NSInteger section})'
  'tableView:heightForRowAtIndexPath:':
    'prefix': 'tableView:heightForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, heightForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:indentationLevelForRowAtIndexPath:':
    'prefix': 'tableView:indentationLevelForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, indentationLevelForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:moveRowAtIndexPath:toIndexPath:':
    'prefix': 'tableView:moveRowAtIndexPath:toIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, moveRowAtIndexPath:${2:NSIndexPath* sourceIndexPath}, toIndexPath:${3:NSIndexPath* destinationIndexPath})'
  'tableView:numberOfRowsInSection:':
    'prefix': 'tableView:numberOfRowsInSection:'
    'body': 'tableView(${1:UITableView* tableView}, numberOfRowsInSection:${2:NSInteger section})'
  'tableView:performAction:forRowAtIndexPath:withSender:':
    'prefix': 'tableView:performAction:forRowAtIndexPath:withSender:'
    'body': 'tableView(${1:UITableView* tableView}, performAction:${2:SEL action}, forRowAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'tableView:sectionForSectionIndexTitle:atIndex:':
    'prefix': 'tableView:sectionForSectionIndexTitle:atIndex:'
    'body': 'tableView(${1:UITableView* tableView}, sectionForSectionIndexTitle:${2:NSString* title}, atIndex:${3:NSInteger index})'
  'tableView:shouldHighlightRowAtIndexPath:':
    'prefix': 'tableView:shouldHighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldHighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:shouldIndentWhileEditingRowAtIndexPath:':
    'prefix': 'tableView:shouldIndentWhileEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldIndentWhileEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:shouldShowMenuForRowAtIndexPath:':
    'prefix': 'tableView:shouldShowMenuForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldShowMenuForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:':
    'prefix': 'tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, targetIndexPathForMoveFromRowAtIndexPath:${2:NSIndexPath* sourceIndexPath}, toProposedIndexPath:${3:NSIndexPath* proposedDestinationIndexPath})'
  'tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:':
    'prefix': 'tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, titleForDeleteConfirmationButtonForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:titleForFooterInSection:':
    'prefix': 'tableView:titleForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, titleForFooterInSection:${2:NSInteger section})'
  'tableView:titleForHeaderInSection:':
    'prefix': 'tableView:titleForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, titleForHeaderInSection:${2:NSInteger section})'
  'tableView:viewForFooterInSection:':
    'prefix': 'tableView:viewForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, viewForFooterInSection:${2:NSInteger section})'
  'tableView:viewForHeaderInSection:':
    'prefix': 'tableView:viewForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, viewForHeaderInSection:${2:NSInteger section})'
  'tableView:willBeginEditingRowAtIndexPath:':
    'prefix': 'tableView:willBeginEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willBeginEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:willDeselectRowAtIndexPath:':
    'prefix': 'tableView:willDeselectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willDeselectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:willDisplayCell:forRowAtIndexPath:':
    'prefix': 'tableView:willDisplayCell:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayCell:${2:UITableViewCell* cell}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:willDisplayFooterView:forSection:':
    'prefix': 'tableView:willDisplayFooterView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayFooterView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:willDisplayHeaderView:forSection:':
    'prefix': 'tableView:willDisplayHeaderView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayHeaderView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:willSelectRowAtIndexPath:':
    'prefix': 'tableView:willSelectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willSelectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:id textInput})'
  'textField:shouldChangeCharactersInRange:replacementString:':
    'prefix': 'textField:shouldChangeCharactersInRange:replacementString:'
    'body': 'textField(${1:UITextField* textField}, shouldChangeCharactersInRange:${2:NSRange range}, replacementString:${3:NSString* string})'
  'textFieldDidBeginEditing:':
    'prefix': 'textFieldDidBeginEditing:'
    'body': 'textFieldDidBeginEditing(${1:UITextField* textField})'
  'textFieldDidEndEditing:':
    'prefix': 'textFieldDidEndEditing:'
    'body': 'textFieldDidEndEditing(${1:UITextField* textField})'
  'textFieldShouldBeginEditing:':
    'prefix': 'textFieldShouldBeginEditing:'
    'body': 'textFieldShouldBeginEditing(${1:UITextField* textField})'
  'textFieldShouldClear:':
    'prefix': 'textFieldShouldClear:'
    'body': 'textFieldShouldClear(${1:UITextField* textField})'
  'textFieldShouldEndEditing:':
    'prefix': 'textFieldShouldEndEditing:'
    'body': 'textFieldShouldEndEditing(${1:UITextField* textField})'
  'textFieldShouldReturn:':
    'prefix': 'textFieldShouldReturn:'
    'body': 'textFieldShouldReturn(${1:UITextField* textField})'
  'textForGuidedAccessRestrictionWithIdentifier:':
    'prefix': 'textForGuidedAccessRestrictionWithIdentifier:'
    'body': 'textForGuidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier})'
  'textInRange:':
    'prefix': 'textInRange:'
    'body': 'textInRange(${1:UITextRange* range})'
  'textInputView':
    'prefix': 'textInputView'
    'body': 'textInputView()'
  'textRangeFromPosition:toPosition:':
    'prefix': 'textRangeFromPosition:toPosition:'
    'body': 'textRangeFromPosition(${1:UITextPosition* fromPosition}, toPosition:${2:UITextPosition* toPosition})'
  'textStorage:didProcessEditing:range:changeInLength:':
    'prefix': 'textStorage:didProcessEditing:range:changeInLength:'
    'body': 'textStorage(${1:NSTextStorage* textStorage}, didProcessEditing:${2:NSTextStorageEditActions editedMask}, range:${3:NSRange editedRange}, changeInLength:${4:NSInteger delta})'
  'textStorage:willProcessEditing:range:changeInLength:':
    'prefix': 'textStorage:willProcessEditing:range:changeInLength:'
    'body': 'textStorage(${1:NSTextStorage* textStorage}, willProcessEditing:${2:NSTextStorageEditActions editedMask}, range:${3:NSRange editedRange}, changeInLength:${4:NSInteger delta})'
  'textStylingAtPosition:inDirection:':
    'prefix': 'textStylingAtPosition:inDirection:'
    'body': 'textStylingAtPosition(${1:UITextPosition* position}, inDirection:${2:UITextStorageDirection direction})'
  'textView:shouldChangeTextInRange:replacementText:':
    'prefix': 'textView:shouldChangeTextInRange:replacementText:'
    'body': 'textView(${1:UITextView* textView}, shouldChangeTextInRange:${2:NSRange range}, replacementText:${3:NSString* text})'
  'textView:shouldInteractWithTextAttachment:inRange:':
    'prefix': 'textView:shouldInteractWithTextAttachment:inRange:'
    'body': 'textView(${1:UITextView* textView}, shouldInteractWithTextAttachment:${2:NSTextAttachment* textAttachment}, inRange:${3:NSRange characterRange})'
  'textView:shouldInteractWithURL:inRange:':
    'prefix': 'textView:shouldInteractWithURL:inRange:'
    'body': 'textView(${1:UITextView* textView}, shouldInteractWithURL:${2:NSURL* URL}, inRange:${3:NSRange characterRange})'
  'textViewDidBeginEditing:':
    'prefix': 'textViewDidBeginEditing:'
    'body': 'textViewDidBeginEditing(${1:UITextView* textView})'
  'textViewDidChange:':
    'prefix': 'textViewDidChange:'
    'body': 'textViewDidChange(${1:UITextView* textView})'
  'textViewDidChangeSelection:':
    'prefix': 'textViewDidChangeSelection:'
    'body': 'textViewDidChangeSelection(${1:UITextView* textView})'
  'textViewDidEndEditing:':
    'prefix': 'textViewDidEndEditing:'
    'body': 'textViewDidEndEditing(${1:UITextView* textView})'
  'textViewShouldBeginEditing:':
    'prefix': 'textViewShouldBeginEditing:'
    'body': 'textViewShouldBeginEditing(${1:UITextView* textView})'
  'textViewShouldEndEditing:':
    'prefix': 'textViewShouldEndEditing:'
    'body': 'textViewShouldEndEditing(${1:UITextView* textView})'
  'textWillChange:':
    'prefix': 'textWillChange:'
    'body': 'textWillChange(${1:id textInput})'
  'toggleBoldface:':
    'prefix': 'toggleBoldface:'
    'body': 'toggleBoldface(${1:id sender})'
  'toggleItalics:':
    'prefix': 'toggleItalics:'
    'body': 'toggleItalics(${1:id sender})'
  'toggleUnderline:':
    'prefix': 'toggleUnderline:'
    'body': 'toggleUnderline(${1:id sender})'
  'tokenizer':
    'prefix': 'tokenizer'
    'body': 'tokenizer()'
  'transform':
    'prefix': 'transform'
    'body': 'transform()'
  'transitionDuration':
    'prefix': 'transitionDuration'
    'body': 'transitionDuration()'
  'transitionDuration:':
    'prefix': 'transitionDuration:'
    'body': 'transitionDuration(${1:id transitionContext})'
  'transitionWasCancelled':
    'prefix': 'transitionWasCancelled'
    'body': 'transitionWasCancelled()'
  'unmarkText':
    'prefix': 'unmarkText'
    'body': 'unmarkText()'
  'updateInteractiveTransition:':
    'prefix': 'updateInteractiveTransition:'
    'body': 'updateInteractiveTransition(${1:CGFloat percentComplete})'
  'videoEditorController:didFailWithError:':
    'prefix': 'videoEditorController:didFailWithError:'
    'body': 'videoEditorController(${1:UIVideoEditorController* editor}, didFailWithError:${2:NSError* error})'
  'videoEditorController:didSaveEditedVideoToPath:':
    'prefix': 'videoEditorController:didSaveEditedVideoToPath:'
    'body': 'videoEditorController(${1:UIVideoEditorController* editor}, didSaveEditedVideoToPath:${2:NSString* editedVideoPath})'
  'videoEditorControllerDidCancel:':
    'prefix': 'videoEditorControllerDidCancel:'
    'body': 'videoEditorControllerDidCancel(${1:UIVideoEditorController* editor})'
  'viewControllerForKey:':
    'prefix': 'viewControllerForKey:'
    'body': 'viewControllerForKey(${1:NSString* key})'
  'NSObject.viewControllerWithRestorationIdentifierPath:coder:':
    'prefix': 'viewControllerWithRestorationIdentifierPath:coder:'
    'body': 'NSObject.viewControllerWithRestorationIdentifierPath(${1:NSArray* identifierComponents}, coder:${2:NSCoder* coder})'
  'viewForZoomingInScrollView:':
    'prefix': 'viewForZoomingInScrollView:'
    'body': 'viewForZoomingInScrollView(${1:UIScrollView* scrollView})'
  'webView:didFailLoadWithError:':
    'prefix': 'webView:didFailLoadWithError:'
    'body': 'webView(${1:UIWebView* webView}, didFailLoadWithError:${2:NSError* error})'
  'webView:shouldStartLoadWithRequest:navigationType:':
    'prefix': 'webView:shouldStartLoadWithRequest:navigationType:'
    'body': 'webView(${1:UIWebView* webView}, shouldStartLoadWithRequest:${2:NSURLRequest* request}, navigationType:${3:UIWebViewNavigationType navigationType})'
  'webViewDidFinishLoad:':
    'prefix': 'webViewDidFinishLoad:'
    'body': 'webViewDidFinishLoad(${1:UIWebView* webView})'
  'webViewDidStartLoad:':
    'prefix': 'webViewDidStartLoad:'
    'body': 'webViewDidStartLoad(${1:UIWebView* webView})'
  'willPresentActionSheet:':
    'prefix': 'willPresentActionSheet:'
    'body': 'willPresentActionSheet(${1:UIActionSheet* actionSheet})'
  'willPresentAlertView:':
    'prefix': 'willPresentAlertView:'
    'body': 'willPresentAlertView(${1:UIAlertView* alertView})'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'NSParagraphStyle.defaultParagraphStyle':
    'prefix': 'defaultParagraphStyle'
    'body': 'NSParagraphStyle.defaultParagraphStyle()'
  'defaultTabInterval':
    'prefix': 'defaultTabInterval'
    'body': 'defaultTabInterval()'
  'NSParagraphStyle.defaultWritingDirectionForLanguage:':
    'prefix': 'defaultWritingDirectionForLanguage:'
    'body': 'NSParagraphStyle.defaultWritingDirectionForLanguage(${1:NSString* languageName})'
  'firstLineHeadIndent':
    'prefix': 'firstLineHeadIndent'
    'body': 'firstLineHeadIndent()'
  'headIndent':
    'prefix': 'headIndent'
    'body': 'headIndent()'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'lineHeightMultiple':
    'prefix': 'lineHeightMultiple'
    'body': 'lineHeightMultiple()'
  'lineSpacing':
    'prefix': 'lineSpacing'
    'body': 'lineSpacing()'
  'maximumLineHeight':
    'prefix': 'maximumLineHeight'
    'body': 'maximumLineHeight()'
  'minimumLineHeight':
    'prefix': 'minimumLineHeight'
    'body': 'minimumLineHeight()'
  'paragraphSpacing':
    'prefix': 'paragraphSpacing'
    'body': 'paragraphSpacing()'
  'paragraphSpacingBefore':
    'prefix': 'paragraphSpacingBefore'
    'body': 'paragraphSpacingBefore()'
  'tabStops':
    'prefix': 'tabStops'
    'body': 'tabStops()'
  'tailIndent':
    'prefix': 'tailIndent'
    'body': 'tailIndent()'
  'setShadowBlurRadius:':
    'prefix': 'setShadowBlurRadius:'
    'body': 'setShadowBlurRadius(${1:CGFloat shadowBlurRadius})'
  'setShadowColor:':
    'prefix': 'setShadowColor:'
    'body': 'setShadowColor(${1:id shadowColor})'
  'setShadowOffset:':
    'prefix': 'setShadowOffset:'
    'body': 'setShadowOffset(${1:CGSize shadowOffset})'
  'shadowBlurRadius':
    'prefix': 'shadowBlurRadius'
    'body': 'shadowBlurRadius()'
  'shadowColor':
    'prefix': 'shadowColor'
    'body': 'shadowColor()'
  'shadowOffset':
    'prefix': 'shadowOffset'
    'body': 'shadowOffset()'
  'boundingRectWithSize:options:attributes:context:':
    'prefix': 'boundingRectWithSize:options:attributes:context:'
    'body': 'boundingRectWithSize(${1:CGSize size}, options:${2:NSStringDrawingOptions options}, attributes:${3:NSDictionary* attributes}, context:${4:NSStringDrawingContext* context})'
  'drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:':
    'prefix': 'drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:'
    'body': 'drawAtPoint(${1:CGPoint point}, forWidth:${2:CGFloat width}, withFont:${3:UIFont* font}, fontSize:${4:CGFloat fontSize}, lineBreakMode:${5:NSLineBreakMode lineBreakMode}, baselineAdjustment:${6:UIBaselineAdjustment baselineAdjustment})'
  'drawAtPoint:forWidth:withFont:lineBreakMode:':
    'prefix': 'drawAtPoint:forWidth:withFont:lineBreakMode:'
    'body': 'drawAtPoint(${1:CGPoint point}, forWidth:${2:CGFloat width}, withFont:${3:UIFont* font}, lineBreakMode:${4:NSLineBreakMode lineBreakMode})'
  'drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:':
    'prefix': 'drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:'
    'body': 'drawAtPoint(${1:CGPoint point}, forWidth:${2:CGFloat width}, withFont:${3:UIFont* font}, minFontSize:${4:CGFloat minFontSize}, actualFontSize:${5:CGFloat* actualFontSize}, lineBreakMode:${6:NSLineBreakMode lineBreakMode}, baselineAdjustment:${7:UIBaselineAdjustment baselineAdjustment})'
  'drawAtPoint:withAttributes:':
    'prefix': 'drawAtPoint:withAttributes:'
    'body': 'drawAtPoint(${1:CGPoint point}, withAttributes:${2:NSDictionary* attrs})'
  'drawAtPoint:withFont:':
    'prefix': 'drawAtPoint:withFont:'
    'body': 'drawAtPoint(${1:CGPoint point}, withFont:${2:UIFont* font})'
  'drawInRect:withAttributes:':
    'prefix': 'drawInRect:withAttributes:'
    'body': 'drawInRect(${1:CGRect rect}, withAttributes:${2:NSDictionary* attrs})'
  'drawInRect:withFont:':
    'prefix': 'drawInRect:withFont:'
    'body': 'drawInRect(${1:CGRect rect}, withFont:${2:UIFont* font})'
  'drawInRect:withFont:lineBreakMode:':
    'prefix': 'drawInRect:withFont:lineBreakMode:'
    'body': 'drawInRect(${1:CGRect rect}, withFont:${2:UIFont* font}, lineBreakMode:${3:NSLineBreakMode lineBreakMode})'
  'drawInRect:withFont:lineBreakMode:alignment:':
    'prefix': 'drawInRect:withFont:lineBreakMode:alignment:'
    'body': 'drawInRect(${1:CGRect rect}, withFont:${2:UIFont* font}, lineBreakMode:${3:NSLineBreakMode lineBreakMode}, alignment:${4:NSTextAlignment alignment})'
  'drawWithRect:options:attributes:context:':
    'prefix': 'drawWithRect:options:attributes:context:'
    'body': 'drawWithRect(${1:CGRect rect}, options:${2:NSStringDrawingOptions options}, attributes:${3:NSDictionary* attributes}, context:${4:NSStringDrawingContext* context})'
  'sizeWithAttributes:':
    'prefix': 'sizeWithAttributes:'
    'body': 'sizeWithAttributes(${1:NSDictionary* attrs})'
  'sizeWithFont:':
    'prefix': 'sizeWithFont:'
    'body': 'sizeWithFont(${1:UIFont* font})'
  'sizeWithFont:constrainedToSize:':
    'prefix': 'sizeWithFont:constrainedToSize:'
    'body': 'sizeWithFont(${1:UIFont* font}, constrainedToSize:${2:CGSize size})'
  'sizeWithFont:constrainedToSize:lineBreakMode:':
    'prefix': 'sizeWithFont:constrainedToSize:lineBreakMode:'
    'body': 'sizeWithFont(${1:UIFont* font}, constrainedToSize:${2:CGSize size}, lineBreakMode:${3:NSLineBreakMode lineBreakMode})'
  'sizeWithFont:forWidth:lineBreakMode:':
    'prefix': 'sizeWithFont:forWidth:lineBreakMode:'
    'body': 'sizeWithFont(${1:UIFont* font}, forWidth:${2:CGFloat width}, lineBreakMode:${3:NSLineBreakMode lineBreakMode})'
  'sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:':
    'prefix': 'sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:'
    'body': 'sizeWithFont(${1:UIFont* font}, minFontSize:${2:CGFloat minFontSize}, actualFontSize:${3:CGFloat* actualFontSize}, forWidth:${4:CGFloat width}, lineBreakMode:${5:NSLineBreakMode lineBreakMode})'
  'actualScaleFactor':
    'prefix': 'actualScaleFactor'
    'body': 'actualScaleFactor()'
  'actualTrackingAdjustment':
    'prefix': 'actualTrackingAdjustment'
    'body': 'actualTrackingAdjustment()'
  'minimumScaleFactor':
    'prefix': 'minimumScaleFactor'
    'body': 'minimumScaleFactor()'
  'minimumTrackingAdjustment':
    'prefix': 'minimumTrackingAdjustment'
    'body': 'minimumTrackingAdjustment()'
  'setMinimumScaleFactor:':
    'prefix': 'setMinimumScaleFactor:'
    'body': 'setMinimumScaleFactor(${1:CGFloat minimumScaleFactor})'
  'setMinimumTrackingAdjustment:':
    'prefix': 'setMinimumTrackingAdjustment:'
    'body': 'setMinimumTrackingAdjustment(${1:CGFloat minimumTrackingAdjustment})'
  'totalBounds':
    'prefix': 'totalBounds'
    'body': 'totalBounds()'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'contents':
    'prefix': 'contents'
    'body': 'contents()'
  'fileType':
    'prefix': 'fileType'
    'body': 'fileType()'
  'fileWrapper':
    'prefix': 'fileWrapper'
    'body': 'fileWrapper()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithData:ofType:':
    'prefix': 'initWithData:ofType:'
    'body': 'initWithData(${1:NSData* contentData}, ofType:${2:NSString* uti})'
  'setBounds:':
    'prefix': 'setBounds:'
    'body': 'setBounds(${1:CGRect bounds})'
  'setContents:':
    'prefix': 'setContents:'
    'body': 'setContents(${1:NSData* contents})'
  'setFileType:':
    'prefix': 'setFileType:'
    'body': 'setFileType(${1:NSString* fileType})'
  'setFileWrapper:':
    'prefix': 'setFileWrapper:'
    'body': 'setFileWrapper(${1:NSFileWrapper* fileWrapper})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:UIImage* image})'
  'exclusionPaths':
    'prefix': 'exclusionPaths'
    'body': 'exclusionPaths()'
  'heightTracksTextView':
    'prefix': 'heightTracksTextView'
    'body': 'heightTracksTextView()'
  'initWithSize:':
    'prefix': 'initWithSize:'
    'body': 'initWithSize(${1:CGSize size})'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'lineFragmentPadding':
    'prefix': 'lineFragmentPadding'
    'body': 'lineFragmentPadding()'
  'lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:':
    'prefix': 'lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:'
    'body': 'lineFragmentRectForProposedRect(${1:CGRect proposedRect}, atIndex:${2:NSUInteger characterIndex}, writingDirection:${3:NSWritingDirection baseWritingDirection}, remainingRect:${4:CGRect* remainingRect})'
  'maximumNumberOfLines':
    'prefix': 'maximumNumberOfLines'
    'body': 'maximumNumberOfLines()'
  'setExclusionPaths:':
    'prefix': 'setExclusionPaths:'
    'body': 'setExclusionPaths(${1:NSArray* exclusionPaths})'
  'setHeightTracksTextView:':
    'prefix': 'setHeightTracksTextView:'
    'body': 'setHeightTracksTextView(${1:BOOL heightTracksTextView})'
  'setLayoutManager:':
    'prefix': 'setLayoutManager:'
    'body': 'setLayoutManager(${1:NSLayoutManager* layoutManager})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode lineBreakMode})'
  'setLineFragmentPadding:':
    'prefix': 'setLineFragmentPadding:'
    'body': 'setLineFragmentPadding(${1:CGFloat lineFragmentPadding})'
  'setMaximumNumberOfLines:':
    'prefix': 'setMaximumNumberOfLines:'
    'body': 'setMaximumNumberOfLines(${1:NSUInteger maximumNumberOfLines})'
  'setSize:':
    'prefix': 'setSize:'
    'body': 'setSize(${1:CGSize size})'
  'setWidthTracksTextView:':
    'prefix': 'setWidthTracksTextView:'
    'body': 'setWidthTracksTextView(${1:BOOL widthTracksTextView})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'widthTracksTextView':
    'prefix': 'widthTracksTextView'
    'body': 'widthTracksTextView()'
  'addLayoutManager:':
    'prefix': 'addLayoutManager:'
    'body': 'addLayoutManager(${1:NSLayoutManager* aLayoutManager})'
  'changeInLength':
    'prefix': 'changeInLength'
    'body': 'changeInLength()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'edited:range:changeInLength:':
    'prefix': 'edited:range:changeInLength:'
    'body': 'edited(${1:NSTextStorageEditActions editedMask}, range:${2:NSRange editedRange}, changeInLength:${3:NSInteger delta})'
  'editedMask':
    'prefix': 'editedMask'
    'body': 'editedMask()'
  'editedRange':
    'prefix': 'editedRange'
    'body': 'editedRange()'
  'ensureAttributesAreFixedInRange:':
    'prefix': 'ensureAttributesAreFixedInRange:'
    'body': 'ensureAttributesAreFixedInRange(${1:NSRange range})'
  'fixesAttributesLazily':
    'prefix': 'fixesAttributesLazily'
    'body': 'fixesAttributesLazily()'
  'invalidateAttributesInRange:':
    'prefix': 'invalidateAttributesInRange:'
    'body': 'invalidateAttributesInRange(${1:NSRange range})'
  'layoutManagers':
    'prefix': 'layoutManagers'
    'body': 'layoutManagers()'
  'processEditing':
    'prefix': 'processEditing'
    'body': 'processEditing()'
  'removeLayoutManager:':
    'prefix': 'removeLayoutManager:'
    'body': 'removeLayoutManager(${1:NSLayoutManager* aLayoutManager})'
  'setChangeInLength:':
    'prefix': 'setChangeInLength:'
    'body': 'setChangeInLength(${1:NSInteger changeInLength})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setEditedMask:':
    'prefix': 'setEditedMask:'
    'body': 'setEditedMask(${1:NSTextStorageEditActions editedMask})'
  'setEditedRange:':
    'prefix': 'setEditedRange:'
    'body': 'setEditedRange(${1:NSRange editedRange})'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'NSTextTab.columnTerminatorsForLocale:':
    'prefix': 'columnTerminatorsForLocale:'
    'body': 'NSTextTab.columnTerminatorsForLocale(${1:NSLocale* aLocale})'
  'initWithTextAlignment:location:options:':
    'prefix': 'initWithTextAlignment:location:options:'
    'body': 'initWithTextAlignment(${1:NSTextAlignment alignment}, location:${2:CGFloat loc}, options:${3:NSDictionary* options})'
  'location':
    'prefix': 'location'
    'body': 'location()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'CGAffineTransformValue':
    'prefix': 'CGAffineTransformValue'
    'body': 'CGAffineTransformValue()'
  'CGPointValue':
    'prefix': 'CGPointValue'
    'body': 'CGPointValue()'
  'CGRectValue':
    'prefix': 'CGRectValue'
    'body': 'CGRectValue()'
  'CGSizeValue':
    'prefix': 'CGSizeValue'
    'body': 'CGSizeValue()'
  'UIEdgeInsetsValue':
    'prefix': 'UIEdgeInsetsValue'
    'body': 'UIEdgeInsetsValue()'
  'UIOffsetValue':
    'prefix': 'UIOffsetValue'
    'body': 'UIOffsetValue()'
  'NSValue.valueWithCGAffineTransform:':
    'prefix': 'valueWithCGAffineTransform:'
    'body': 'NSValue.valueWithCGAffineTransform(${1:CGAffineTransform transform})'
  'NSValue.valueWithCGPoint:':
    'prefix': 'valueWithCGPoint:'
    'body': 'NSValue.valueWithCGPoint(${1:CGPoint point})'
  'NSValue.valueWithCGRect:':
    'prefix': 'valueWithCGRect:'
    'body': 'NSValue.valueWithCGRect(${1:CGRect rect})'
  'NSValue.valueWithCGSize:':
    'prefix': 'valueWithCGSize:'
    'body': 'NSValue.valueWithCGSize(${1:CGSize size})'
  'NSValue.valueWithUIEdgeInsets:':
    'prefix': 'valueWithUIEdgeInsets:'
    'body': 'NSValue.valueWithUIEdgeInsets(${1:UIEdgeInsets insets})'
  'NSValue.valueWithUIOffset:':
    'prefix': 'valueWithUIOffset:'
    'body': 'NSValue.valueWithUIOffset(${1:UIOffset insets})'
  'timestamp':
    'prefix': 'timestamp'
    'body': 'timestamp()'
  'x':
    'prefix': 'x'
    'body': 'x()'
  'y':
    'prefix': 'y'
    'body': 'y()'
  'z':
    'prefix': 'z'
    'body': 'z()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setUpdateInterval:':
    'prefix': 'setUpdateInterval:'
    'body': 'setUpdateInterval(${1:NSTimeInterval updateInterval})'
  'UIAccelerometer.sharedAccelerometer':
    'prefix': 'sharedAccelerometer'
    'body': 'UIAccelerometer.sharedAccelerometer()'
  'updateInterval':
    'prefix': 'updateInterval'
    'body': 'updateInterval()'
  'accessibilityContainer':
    'prefix': 'accessibilityContainer'
    'body': 'accessibilityContainer()'
  'accessibilityFrame':
    'prefix': 'accessibilityFrame'
    'body': 'accessibilityFrame()'
  'accessibilityHint':
    'prefix': 'accessibilityHint'
    'body': 'accessibilityHint()'
  'accessibilityLabel':
    'prefix': 'accessibilityLabel'
    'body': 'accessibilityLabel()'
  'accessibilityTraits':
    'prefix': 'accessibilityTraits'
    'body': 'accessibilityTraits()'
  'accessibilityValue':
    'prefix': 'accessibilityValue'
    'body': 'accessibilityValue()'
  'initWithAccessibilityContainer:':
    'prefix': 'initWithAccessibilityContainer:'
    'body': 'initWithAccessibilityContainer(${1:id container})'
  'isAccessibilityElement':
    'prefix': 'isAccessibilityElement'
    'body': 'isAccessibilityElement()'
  'setAccessibilityContainer:':
    'prefix': 'setAccessibilityContainer:'
    'body': 'setAccessibilityContainer(${1:id accessibilityContainer})'
  'setAccessibilityFrame:':
    'prefix': 'setAccessibilityFrame:'
    'body': 'setAccessibilityFrame(${1:CGRect accessibilityFrame})'
  'setAccessibilityHint:':
    'prefix': 'setAccessibilityHint:'
    'body': 'setAccessibilityHint(${1:NSString* accessibilityHint})'
  'setAccessibilityLabel:':
    'prefix': 'setAccessibilityLabel:'
    'body': 'setAccessibilityLabel(${1:NSString* accessibilityLabel})'
  'setAccessibilityTraits:':
    'prefix': 'setAccessibilityTraits:'
    'body': 'setAccessibilityTraits(${1:UIAccessibilityTraits accessibilityTraits})'
  'setAccessibilityValue:':
    'prefix': 'setAccessibilityValue:'
    'body': 'setAccessibilityValue(${1:NSString* accessibilityValue})'
  'setIsAccessibilityElement:':
    'prefix': 'setIsAccessibilityElement:'
    'body': 'setIsAccessibilityElement(${1:BOOL isAccessibilityElement})'
  'actionSheetStyle':
    'prefix': 'actionSheetStyle'
    'body': 'actionSheetStyle()'
  'addButtonWithTitle:':
    'prefix': 'addButtonWithTitle:'
    'body': 'addButtonWithTitle(${1:NSString* title})'
  'buttonTitleAtIndex:':
    'prefix': 'buttonTitleAtIndex:'
    'body': 'buttonTitleAtIndex(${1:NSInteger buttonIndex})'
  'cancelButtonIndex':
    'prefix': 'cancelButtonIndex'
    'body': 'cancelButtonIndex()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'destructiveButtonIndex':
    'prefix': 'destructiveButtonIndex'
    'body': 'destructiveButtonIndex()'
  'dismissWithClickedButtonIndex:animated:':
    'prefix': 'dismissWithClickedButtonIndex:animated:'
    'body': 'dismissWithClickedButtonIndex(${1:NSInteger buttonIndex}, animated:${2:BOOL animated})'
  'firstOtherButtonIndex':
    'prefix': 'firstOtherButtonIndex'
    'body': 'firstOtherButtonIndex()'
  'initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:':
    'prefix': 'initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:'
    'body': 'initWithTitle(${1:NSString* title}, delegate:${2:id delegate}, cancelButtonTitle:${3:NSString* cancelButtonTitle}, destructiveButtonTitle:${4:NSString* destructiveButtonTitle}, otherButtonTitles:${5:NSString* otherButtonTitles})'
  'isVisible':
    'prefix': 'isVisible'
    'body': 'isVisible()'
  'numberOfButtons':
    'prefix': 'numberOfButtons'
    'body': 'numberOfButtons()'
  'setActionSheetStyle:':
    'prefix': 'setActionSheetStyle:'
    'body': 'setActionSheetStyle(${1:UIActionSheetStyle actionSheetStyle})'
  'setCancelButtonIndex:':
    'prefix': 'setCancelButtonIndex:'
    'body': 'setCancelButtonIndex(${1:NSInteger cancelButtonIndex})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDestructiveButtonIndex:':
    'prefix': 'setDestructiveButtonIndex:'
    'body': 'setDestructiveButtonIndex(${1:NSInteger destructiveButtonIndex})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'showFromBarButtonItem:animated:':
    'prefix': 'showFromBarButtonItem:animated:'
    'body': 'showFromBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated})'
  'showFromRect:inView:animated:':
    'prefix': 'showFromRect:inView:animated:'
    'body': 'showFromRect(${1:CGRect rect}, inView:${2:UIView* view}, animated:${3:BOOL animated})'
  'showFromTabBar:':
    'prefix': 'showFromTabBar:'
    'body': 'showFromTabBar(${1:UITabBar* view})'
  'showFromToolbar:':
    'prefix': 'showFromToolbar:'
    'body': 'showFromToolbar(${1:UIToolbar* view})'
  'showInView:':
    'prefix': 'showInView:'
    'body': 'showInView(${1:UIView* view})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'UIActivity.activityCategory':
    'prefix': 'activityCategory'
    'body': 'UIActivity.activityCategory()'
  'activityDidFinish:':
    'prefix': 'activityDidFinish:'
    'body': 'activityDidFinish(${1:BOOL completed})'
  'activityImage':
    'prefix': 'activityImage'
    'body': 'activityImage()'
  'activityTitle':
    'prefix': 'activityTitle'
    'body': 'activityTitle()'
  'activityType':
    'prefix': 'activityType'
    'body': 'activityType()'
  'activityViewController':
    'prefix': 'activityViewController'
    'body': 'activityViewController()'
  'canPerformWithActivityItems:':
    'prefix': 'canPerformWithActivityItems:'
    'body': 'canPerformWithActivityItems(${1:NSArray* activityItems})'
  'performActivity':
    'prefix': 'performActivity'
    'body': 'performActivity()'
  'prepareWithActivityItems:':
    'prefix': 'prepareWithActivityItems:'
    'body': 'prepareWithActivityItems(${1:NSArray* activityItems})'
  'activityIndicatorViewStyle':
    'prefix': 'activityIndicatorViewStyle'
    'body': 'activityIndicatorViewStyle()'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'hidesWhenStopped':
    'prefix': 'hidesWhenStopped'
    'body': 'hidesWhenStopped()'
  'initWithActivityIndicatorStyle:':
    'prefix': 'initWithActivityIndicatorStyle:'
    'body': 'initWithActivityIndicatorStyle(${1:UIActivityIndicatorViewStyle style})'
  'isAnimating':
    'prefix': 'isAnimating'
    'body': 'isAnimating()'
  'setActivityIndicatorViewStyle:':
    'prefix': 'setActivityIndicatorViewStyle:'
    'body': 'setActivityIndicatorViewStyle(${1:UIActivityIndicatorViewStyle activityIndicatorViewStyle})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:UIColor* color})'
  'setHidesWhenStopped:':
    'prefix': 'setHidesWhenStopped:'
    'body': 'setHidesWhenStopped(${1:BOOL hidesWhenStopped})'
  'startAnimating':
    'prefix': 'startAnimating'
    'body': 'startAnimating()'
  'stopAnimating':
    'prefix': 'stopAnimating'
    'body': 'stopAnimating()'
  'activityType':
    'prefix': 'activityType'
    'body': 'activityType()'
  'initWithPlaceholderItem:':
    'prefix': 'initWithPlaceholderItem:'
    'body': 'initWithPlaceholderItem(${1:id placeholderItem})'
  'item':
    'prefix': 'item'
    'body': 'item()'
  'placeholderItem':
    'prefix': 'placeholderItem'
    'body': 'placeholderItem()'
  'completionHandler':
    'prefix': 'completionHandler'
    'body': 'completionHandler()'
  'excludedActivityTypes':
    'prefix': 'excludedActivityTypes'
    'body': 'excludedActivityTypes()'
  'initWithActivityItems:applicationActivities:':
    'prefix': 'initWithActivityItems:applicationActivities:'
    'body': 'initWithActivityItems(${1:NSArray* activityItems}, applicationActivities:${2:NSArray* applicationActivities})'
  'setCompletionHandler:':
    'prefix': 'setCompletionHandler:'
    'body': 'setCompletionHandler(${1:UIActivityViewControllerCompletionHandler completionHandler})'
  'setExcludedActivityTypes:':
    'prefix': 'setExcludedActivityTypes:'
    'body': 'setExcludedActivityTypes(${1:NSArray* excludedActivityTypes})'
  'addButtonWithTitle:':
    'prefix': 'addButtonWithTitle:'
    'body': 'addButtonWithTitle(${1:NSString* title})'
  'alertViewStyle':
    'prefix': 'alertViewStyle'
    'body': 'alertViewStyle()'
  'buttonTitleAtIndex:':
    'prefix': 'buttonTitleAtIndex:'
    'body': 'buttonTitleAtIndex(${1:NSInteger buttonIndex})'
  'cancelButtonIndex':
    'prefix': 'cancelButtonIndex'
    'body': 'cancelButtonIndex()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dismissWithClickedButtonIndex:animated:':
    'prefix': 'dismissWithClickedButtonIndex:animated:'
    'body': 'dismissWithClickedButtonIndex(${1:NSInteger buttonIndex}, animated:${2:BOOL animated})'
  'firstOtherButtonIndex':
    'prefix': 'firstOtherButtonIndex'
    'body': 'firstOtherButtonIndex()'
  'initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:':
    'prefix': 'initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:'
    'body': 'initWithTitle(${1:NSString* title}, message:${2:NSString* message}, delegate:${3:id delegate}, cancelButtonTitle:${4:NSString* cancelButtonTitle}, otherButtonTitles:${5:NSString* otherButtonTitles})'
  'isVisible':
    'prefix': 'isVisible'
    'body': 'isVisible()'
  'message':
    'prefix': 'message'
    'body': 'message()'
  'numberOfButtons':
    'prefix': 'numberOfButtons'
    'body': 'numberOfButtons()'
  'setAlertViewStyle:':
    'prefix': 'setAlertViewStyle:'
    'body': 'setAlertViewStyle(${1:UIAlertViewStyle alertViewStyle})'
  'setCancelButtonIndex:':
    'prefix': 'setCancelButtonIndex:'
    'body': 'setCancelButtonIndex(${1:NSInteger cancelButtonIndex})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setMessage:':
    'prefix': 'setMessage:'
    'body': 'setMessage(${1:NSString* message})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'show':
    'prefix': 'show'
    'body': 'show()'
  'textFieldAtIndex:':
    'prefix': 'textFieldAtIndex:'
    'body': 'textFieldAtIndex(${1:NSInteger textFieldIndex})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'applicationIconBadgeNumber':
    'prefix': 'applicationIconBadgeNumber'
    'body': 'applicationIconBadgeNumber()'
  'applicationState':
    'prefix': 'applicationState'
    'body': 'applicationState()'
  'applicationSupportsShakeToEdit':
    'prefix': 'applicationSupportsShakeToEdit'
    'body': 'applicationSupportsShakeToEdit()'
  'backgroundRefreshStatus':
    'prefix': 'backgroundRefreshStatus'
    'body': 'backgroundRefreshStatus()'
  'backgroundTimeRemaining':
    'prefix': 'backgroundTimeRemaining'
    'body': 'backgroundTimeRemaining()'
  'beginBackgroundTaskWithExpirationHandler:':
    'prefix': 'beginBackgroundTaskWithExpirationHandler:'
    'body': 'beginBackgroundTaskWithExpirationHandler(${1:void (^)(void) handler})'
  'beginBackgroundTaskWithName:expirationHandler:':
    'prefix': 'beginBackgroundTaskWithName:expirationHandler:'
    'body': 'beginBackgroundTaskWithName(${1:NSString* taskName}, expirationHandler:${2:void (^)(void) handler})'
  'beginIgnoringInteractionEvents':
    'prefix': 'beginIgnoringInteractionEvents'
    'body': 'beginIgnoringInteractionEvents()'
  'beginReceivingRemoteControlEvents':
    'prefix': 'beginReceivingRemoteControlEvents'
    'body': 'beginReceivingRemoteControlEvents()'
  'canOpenURL:':
    'prefix': 'canOpenURL:'
    'body': 'canOpenURL(${1:NSURL* url})'
  'cancelAllLocalNotifications':
    'prefix': 'cancelAllLocalNotifications'
    'body': 'cancelAllLocalNotifications()'
  'cancelLocalNotification:':
    'prefix': 'cancelLocalNotification:'
    'body': 'cancelLocalNotification(${1:UILocalNotification* notification})'
  'clearKeepAliveTimeout':
    'prefix': 'clearKeepAliveTimeout'
    'body': 'clearKeepAliveTimeout()'
  'completeStateRestoration':
    'prefix': 'completeStateRestoration'
    'body': 'completeStateRestoration()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'enabledRemoteNotificationTypes':
    'prefix': 'enabledRemoteNotificationTypes'
    'body': 'enabledRemoteNotificationTypes()'
  'endBackgroundTask:':
    'prefix': 'endBackgroundTask:'
    'body': 'endBackgroundTask(${1:UIBackgroundTaskIdentifier identifier})'
  'endIgnoringInteractionEvents':
    'prefix': 'endIgnoringInteractionEvents'
    'body': 'endIgnoringInteractionEvents()'
  'endReceivingRemoteControlEvents':
    'prefix': 'endReceivingRemoteControlEvents'
    'body': 'endReceivingRemoteControlEvents()'
  'extendStateRestoration':
    'prefix': 'extendStateRestoration'
    'body': 'extendStateRestoration()'
  'ignoreSnapshotOnNextApplicationLaunch':
    'prefix': 'ignoreSnapshotOnNextApplicationLaunch'
    'body': 'ignoreSnapshotOnNextApplicationLaunch()'
  'isIdleTimerDisabled':
    'prefix': 'isIdleTimerDisabled'
    'body': 'isIdleTimerDisabled()'
  'isIgnoringInteractionEvents':
    'prefix': 'isIgnoringInteractionEvents'
    'body': 'isIgnoringInteractionEvents()'
  'isNetworkActivityIndicatorVisible':
    'prefix': 'isNetworkActivityIndicatorVisible'
    'body': 'isNetworkActivityIndicatorVisible()'
  'isProtectedDataAvailable':
    'prefix': 'isProtectedDataAvailable'
    'body': 'isProtectedDataAvailable()'
  'isProximitySensingEnabled':
    'prefix': 'isProximitySensingEnabled'
    'body': 'isProximitySensingEnabled()'
  'isStatusBarHidden':
    'prefix': 'isStatusBarHidden'
    'body': 'isStatusBarHidden()'
  'keyWindow':
    'prefix': 'keyWindow'
    'body': 'KeyWindow()'
  'openURL:':
    'prefix': 'openURL:'
    'body': 'openURL(${1:NSURL* url})'
  'preferredContentSizeCategory':
    'prefix': 'preferredContentSizeCategory'
    'body': 'preferredContentSizeCategory()'
  'presentLocalNotificationNow:':
    'prefix': 'presentLocalNotificationNow:'
    'body': 'presentLocalNotificationNow(${1:UILocalNotification* notification})'
  'registerForRemoteNotificationTypes:':
    'prefix': 'registerForRemoteNotificationTypes:'
    'body': 'registerForRemoteNotificationTypes(${1:UIRemoteNotificationType types})'
  'UIApplication.registerObjectForStateRestoration:restorationIdentifier:':
    'prefix': 'registerObjectForStateRestoration:restorationIdentifier:'
    'body': 'UIApplication.registerObjectForStateRestoration(${1:id object}, restorationIdentifier:${2:NSString* restorationIdentifier})'
  'scheduleLocalNotification:':
    'prefix': 'scheduleLocalNotification:'
    'body': 'scheduleLocalNotification(${1:UILocalNotification* notification})'
  'scheduledLocalNotifications':
    'prefix': 'scheduledLocalNotifications'
    'body': 'scheduledLocalNotifications()'
  'sendAction:to:from:forEvent:':
    'prefix': 'sendAction:to:from:forEvent:'
    'body': 'sendAction(${1:SEL action}, to:${2:id target}, from:${3:id sender}, forEvent:${4:UIEvent* event})'
  'sendEvent:':
    'prefix': 'sendEvent:'
    'body': 'sendEvent(${1:UIEvent* event})'
  'setApplicationIconBadgeNumber:':
    'prefix': 'setApplicationIconBadgeNumber:'
    'body': 'setApplicationIconBadgeNumber(${1:NSInteger applicationIconBadgeNumber})'
  'setApplicationSupportsShakeToEdit:':
    'prefix': 'setApplicationSupportsShakeToEdit:'
    'body': 'setApplicationSupportsShakeToEdit(${1:BOOL applicationSupportsShakeToEdit})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setIdleTimerDisabled:':
    'prefix': 'setIdleTimerDisabled:'
    'body': 'setIdleTimerDisabled(${1:BOOL idleTimerDisabled})'
  'setKeepAliveTimeout:handler:':
    'prefix': 'setKeepAliveTimeout:handler:'
    'body': 'setKeepAliveTimeout(${1:NSTimeInterval timeout}, handler:${2:void (^)(void) keepAliveHandler})'
  'setMinimumBackgroundFetchInterval:':
    'prefix': 'setMinimumBackgroundFetchInterval:'
    'body': 'setMinimumBackgroundFetchInterval(${1:NSTimeInterval minimumBackgroundFetchInterval})'
  'setNetworkActivityIndicatorVisible:':
    'prefix': 'setNetworkActivityIndicatorVisible:'
    'body': 'setNetworkActivityIndicatorVisible(${1:BOOL networkActivityIndicatorVisible})'
  'setNewsstandIconImage:':
    'prefix': 'setNewsstandIconImage:'
    'body': 'setNewsstandIconImage(${1:UIImage* image})'
  'setProximitySensingEnabled:':
    'prefix': 'setProximitySensingEnabled:'
    'body': 'setProximitySensingEnabled(${1:BOOL proximitySensingEnabled})'
  'setScheduledLocalNotifications:':
    'prefix': 'setScheduledLocalNotifications:'
    'body': 'setScheduledLocalNotifications(${1:NSArray* scheduledLocalNotifications})'
  'setStatusBarHidden:':
    'prefix': 'setStatusBarHidden:'
    'body': 'setStatusBarHidden(${1:BOOL statusBarHidden})'
  'setStatusBarHidden:animated:':
    'prefix': 'setStatusBarHidden:animated:'
    'body': 'setStatusBarHidden(${1:BOOL hidden}, animated:${2:BOOL animated})'
  'setStatusBarHidden:withAnimation:':
    'prefix': 'setStatusBarHidden:withAnimation:'
    'body': 'setStatusBarHidden(${1:BOOL hidden}, withAnimation:${2:UIStatusBarAnimation animation})'
  'setStatusBarOrientation:':
    'prefix': 'setStatusBarOrientation:'
    'body': 'setStatusBarOrientation(${1:UIInterfaceOrientation statusBarOrientation})'
  'setStatusBarOrientation:animated:':
    'prefix': 'setStatusBarOrientation:animated:'
    'body': 'setStatusBarOrientation(${1:UIInterfaceOrientation interfaceOrientation}, animated:${2:BOOL animated})'
  'setStatusBarStyle:':
    'prefix': 'setStatusBarStyle:'
    'body': 'setStatusBarStyle(${1:UIStatusBarStyle statusBarStyle})'
  'setStatusBarStyle:animated:':
    'prefix': 'setStatusBarStyle:animated:'
    'body': 'setStatusBarStyle(${1:UIStatusBarStyle statusBarStyle}, animated:${2:BOOL animated})'
  'UIApplication.sharedApplication':
    'prefix': 'sharedApplication'
    'body': 'UIApplication.sharedApplication()'
  'statusBarFrame':
    'prefix': 'statusBarFrame'
    'body': 'statusBarFrame()'
  'statusBarOrientation':
    'prefix': 'statusBarOrientation'
    'body': 'statusBarOrientation()'
  'statusBarOrientationAnimationDuration':
    'prefix': 'statusBarOrientationAnimationDuration'
    'body': 'statusBarOrientationAnimationDuration()'
  'statusBarStyle':
    'prefix': 'statusBarStyle'
    'body': 'statusBarStyle()'
  'supportedInterfaceOrientationsForWindow:':
    'prefix': 'supportedInterfaceOrientationsForWindow:'
    'body': 'supportedInterfaceOrientationsForWindow(${1:UIWindow* window})'
  'unregisterForRemoteNotifications':
    'prefix': 'unregisterForRemoteNotifications'
    'body': 'unregisterForRemoteNotifications()'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'windows':
    'prefix': 'windows'
    'body': 'windows()'
  'anchorPoint':
    'prefix': 'anchorPoint'
    'body': 'anchorPoint()'
  'attachedBehaviorType':
    'prefix': 'attachedBehaviorType'
    'body': 'attachedBehaviorType()'
  'damping':
    'prefix': 'damping'
    'body': 'damping()'
  'frequency':
    'prefix': 'frequency'
    'body': 'frequency()'
  'initWithItem:attachedToAnchor:':
    'prefix': 'initWithItem:attachedToAnchor:'
    'body': 'initWithItem(${1:id item}, attachedToAnchor:${2:CGPoint point})'
  'initWithItem:attachedToItem:':
    'prefix': 'initWithItem:attachedToItem:'
    'body': 'initWithItem(${1:id item1}, attachedToItem:${2:id item2})'
  'initWithItem:offsetFromCenter:attachedToAnchor:':
    'prefix': 'initWithItem:offsetFromCenter:attachedToAnchor:'
    'body': 'initWithItem(${1:id item}, offsetFromCenter:${2:UIOffset offset}, attachedToAnchor:${3:CGPoint point})'
  'initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:':
    'prefix': 'initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:'
    'body': 'initWithItem(${1:id item1}, offsetFromCenter:${2:UIOffset offset1}, attachedToItem:${3:id item2}, offsetFromCenter:${4:UIOffset offset2})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'setAnchorPoint:':
    'prefix': 'setAnchorPoint:'
    'body': 'setAnchorPoint(${1:CGPoint anchorPoint})'
  'setDamping:':
    'prefix': 'setDamping:'
    'body': 'setDamping(${1:CGFloat damping})'
  'setFrequency:':
    'prefix': 'setFrequency:'
    'body': 'setFrequency(${1:CGFloat frequency})'
  'setLength:':
    'prefix': 'setLength:'
    'body': 'setLength(${1:CGFloat length})'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'backButtonBackgroundImageForState:barMetrics:':
    'prefix': 'backButtonBackgroundImageForState:barMetrics:'
    'body': 'backButtonBackgroundImageForState(${1:UIControlState state}, barMetrics:${2:UIBarMetrics barMetrics})'
  'backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:':
    'prefix': 'backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:'
    'body': 'backButtonBackgroundVerticalPositionAdjustmentForBarMetrics(${1:UIBarMetrics barMetrics})'
  'backButtonTitlePositionAdjustmentForBarMetrics:':
    'prefix': 'backButtonTitlePositionAdjustmentForBarMetrics:'
    'body': 'backButtonTitlePositionAdjustmentForBarMetrics(${1:UIBarMetrics barMetrics})'
  'backgroundImageForState:barMetrics:':
    'prefix': 'backgroundImageForState:barMetrics:'
    'body': 'backgroundImageForState(${1:UIControlState state}, barMetrics:${2:UIBarMetrics barMetrics})'
  'backgroundImageForState:style:barMetrics:':
    'prefix': 'backgroundImageForState:style:barMetrics:'
    'body': 'backgroundImageForState(${1:UIControlState state}, style:${2:UIBarButtonItemStyle style}, barMetrics:${3:UIBarMetrics barMetrics})'
  'backgroundVerticalPositionAdjustmentForBarMetrics:':
    'prefix': 'backgroundVerticalPositionAdjustmentForBarMetrics:'
    'body': 'backgroundVerticalPositionAdjustmentForBarMetrics(${1:UIBarMetrics barMetrics})'
  'customView':
    'prefix': 'customView'
    'body': 'customView()'
  'initWithBarButtonSystemItem:target:action:':
    'prefix': 'initWithBarButtonSystemItem:target:action:'
    'body': 'initWithBarButtonSystemItem(${1:UIBarButtonSystemItem systemItem}, target:${2:id target}, action:${3:SEL action})'
  'initWithCustomView:':
    'prefix': 'initWithCustomView:'
    'body': 'initWithCustomView(${1:UIView* customView})'
  'initWithImage:landscapeImagePhone:style:target:action:':
    'prefix': 'initWithImage:landscapeImagePhone:style:target:action:'
    'body': 'initWithImage(${1:UIImage* image}, landscapeImagePhone:${2:UIImage* landscapeImagePhone}, style:${3:UIBarButtonItemStyle style}, target:${4:id target}, action:${5:SEL action})'
  'initWithImage:style:target:action:':
    'prefix': 'initWithImage:style:target:action:'
    'body': 'initWithImage(${1:UIImage* image}, style:${2:UIBarButtonItemStyle style}, target:${3:id target}, action:${4:SEL action})'
  'initWithTitle:style:target:action:':
    'prefix': 'initWithTitle:style:target:action:'
    'body': 'initWithTitle(${1:NSString* title}, style:${2:UIBarButtonItemStyle style}, target:${3:id target}, action:${4:SEL action})'
  'possibleTitles':
    'prefix': 'possibleTitles'
    'body': 'possibleTitles()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL action})'
  'setBackButtonBackgroundImage:forState:barMetrics:':
    'prefix': 'setBackButtonBackgroundImage:forState:barMetrics:'
    'body': 'setBackButtonBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:':
    'prefix': 'setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:'
    'body': 'setBackButtonBackgroundVerticalPositionAdjustment(${1:CGFloat adjustment}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setBackButtonTitlePositionAdjustment:forBarMetrics:':
    'prefix': 'setBackButtonTitlePositionAdjustment:forBarMetrics:'
    'body': 'setBackButtonTitlePositionAdjustment(${1:UIOffset adjustment}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setBackgroundImage:forState:barMetrics:':
    'prefix': 'setBackgroundImage:forState:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setBackgroundImage:forState:style:barMetrics:':
    'prefix': 'setBackgroundImage:forState:style:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state}, style:${3:UIBarButtonItemStyle style}, barMetrics:${4:UIBarMetrics barMetrics})'
  'setBackgroundVerticalPositionAdjustment:forBarMetrics:':
    'prefix': 'setBackgroundVerticalPositionAdjustment:forBarMetrics:'
    'body': 'setBackgroundVerticalPositionAdjustment(${1:CGFloat adjustment}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setCustomView:':
    'prefix': 'setCustomView:'
    'body': 'setCustomView(${1:UIView* customView})'
  'setPossibleTitles:':
    'prefix': 'setPossibleTitles:'
    'body': 'setPossibleTitles(${1:NSSet* possibleTitles})'
  'setStyle:':
    'prefix': 'setStyle:'
    'body': 'setStyle(${1:UIBarButtonItemStyle style})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id target})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTitlePositionAdjustment:forBarMetrics:':
    'prefix': 'setTitlePositionAdjustment:forBarMetrics:'
    'body': 'setTitlePositionAdjustment(${1:UIOffset adjustment}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setWidth:':
    'prefix': 'setWidth:'
    'body': 'setWidth(${1:CGFloat width})'
  'style':
    'prefix': 'style'
    'body': 'style()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'titlePositionAdjustmentForBarMetrics:':
    'prefix': 'titlePositionAdjustmentForBarMetrics:'
    'body': 'titlePositionAdjustmentForBarMetrics(${1:UIBarMetrics barMetrics})'
  'width':
    'prefix': 'width'
    'body': 'width()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imageInsets':
    'prefix': 'imageInsets'
    'body': 'imageInsets()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'landscapeImagePhone':
    'prefix': 'landscapeImagePhone'
    'body': 'landscapeImagePhone()'
  'landscapeImagePhoneInsets':
    'prefix': 'landscapeImagePhoneInsets'
    'body': 'landscapeImagePhoneInsets()'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:UIImage* image})'
  'setImageInsets:':
    'prefix': 'setImageInsets:'
    'body': 'setImageInsets(${1:UIEdgeInsets imageInsets})'
  'setLandscapeImagePhone:':
    'prefix': 'setLandscapeImagePhone:'
    'body': 'setLandscapeImagePhone(${1:UIImage* landscapeImagePhone})'
  'setLandscapeImagePhoneInsets:':
    'prefix': 'setLandscapeImagePhoneInsets:'
    'body': 'setLandscapeImagePhoneInsets(${1:UIEdgeInsets landscapeImagePhoneInsets})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger tag})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setTitleTextAttributes:forState:':
    'prefix': 'setTitleTextAttributes:forState:'
    'body': 'setTitleTextAttributes(${1:NSDictionary* attributes}, forState:${2:UIControlState state})'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleTextAttributesForState:':
    'prefix': 'titleTextAttributesForState:'
    'body': 'titleTextAttributesForState(${1:UIControlState state})'
  'CGPath':
    'prefix': 'CGPath'
    'body': 'CGPath()'
  'addArcWithCenter:radius:startAngle:endAngle:clockwise:':
    'prefix': 'addArcWithCenter:radius:startAngle:endAngle:clockwise:'
    'body': 'addArcWithCenter(${1:CGPoint center}, radius:${2:CGFloat radius}, startAngle:${3:CGFloat startAngle}, endAngle:${4:CGFloat endAngle}, clockwise:${5:BOOL clockwise})'
  'addClip':
    'prefix': 'addClip'
    'body': 'addClip()'
  'addCurveToPoint:controlPoint1:controlPoint2:':
    'prefix': 'addCurveToPoint:controlPoint1:controlPoint2:'
    'body': 'addCurveToPoint(${1:CGPoint endPoint}, controlPoint1:${2:CGPoint controlPoint1}, controlPoint2:${3:CGPoint controlPoint2})'
  'addLineToPoint:':
    'prefix': 'addLineToPoint:'
    'body': 'addLineToPoint(${1:CGPoint point})'
  'addQuadCurveToPoint:controlPoint:':
    'prefix': 'addQuadCurveToPoint:controlPoint:'
    'body': 'addQuadCurveToPoint(${1:CGPoint endPoint}, controlPoint:${2:CGPoint controlPoint})'
  'appendPath:':
    'prefix': 'appendPath:'
    'body': 'appendPath(${1:UIBezierPath* bezierPath})'
  'applyTransform:':
    'prefix': 'applyTransform:'
    'body': 'applyTransform(${1:CGAffineTransform transform})'
  'UIBezierPath.bezierPath':
    'prefix': 'bezierPath'
    'body': 'UIBezierPath.bezierPath()'
  'bezierPathByReversingPath':
    'prefix': 'bezierPathByReversingPath'
    'body': 'bezierPathByReversingPath()'
  'UIBezierPath.bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:':
    'prefix': 'bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:'
    'body': 'UIBezierPath.bezierPathWithArcCenter(${1:CGPoint center}, radius:${2:CGFloat radius}, startAngle:${3:CGFloat startAngle}, endAngle:${4:CGFloat endAngle}, clockwise:${5:BOOL clockwise})'
  'UIBezierPath.bezierPathWithCGPath:':
    'prefix': 'bezierPathWithCGPath:'
    'body': 'UIBezierPath.bezierPathWithCGPath(${1:CGPathRef CGPath})'
  'UIBezierPath.bezierPathWithOvalInRect:':
    'prefix': 'bezierPathWithOvalInRect:'
    'body': 'UIBezierPath.bezierPathWithOvalInRect(${1:CGRect rect})'
  'UIBezierPath.bezierPathWithRect:':
    'prefix': 'bezierPathWithRect:'
    'body': 'UIBezierPath.bezierPathWithRect(${1:CGRect rect})'
  'UIBezierPath.bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:':
    'prefix': 'bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:'
    'body': 'UIBezierPath.bezierPathWithRoundedRect(${1:CGRect rect}, byRoundingCorners:${2:UIRectCorner corners}, cornerRadii:${3:CGSize cornerRadii})'
  'UIBezierPath.bezierPathWithRoundedRect:cornerRadius:':
    'prefix': 'bezierPathWithRoundedRect:cornerRadius:'
    'body': 'UIBezierPath.bezierPathWithRoundedRect(${1:CGRect rect}, cornerRadius:${2:CGFloat cornerRadius})'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'closePath':
    'prefix': 'closePath'
    'body': 'closePath()'
  'containsPoint:':
    'prefix': 'containsPoint:'
    'body': 'containsPoint(${1:CGPoint point})'
  'currentPoint':
    'prefix': 'currentPoint'
    'body': 'currentPoint()'
  'fill':
    'prefix': 'fill'
    'body': 'fill()'
  'fillWithBlendMode:alpha:':
    'prefix': 'fillWithBlendMode:alpha:'
    'body': 'fillWithBlendMode(${1:CGBlendMode blendMode}, alpha:${2:CGFloat alpha})'
  'flatness':
    'prefix': 'flatness'
    'body': 'flatness()'
  'getLineDash:count:phase:':
    'prefix': 'getLineDash:count:phase:'
    'body': 'getLineDash(${1:CGFloat* pattern}, count:${2:NSInteger* count}, phase:${3:CGFloat* phase})'
  'isEmpty':
    'prefix': 'isEmpty'
    'body': 'isEmpty()'
  'lineCapStyle':
    'prefix': 'lineCapStyle'
    'body': 'lineCapStyle()'
  'lineJoinStyle':
    'prefix': 'lineJoinStyle'
    'body': 'lineJoinStyle()'
  'lineWidth':
    'prefix': 'lineWidth'
    'body': 'lineWidth()'
  'miterLimit':
    'prefix': 'miterLimit'
    'body': 'miterLimit()'
  'moveToPoint:':
    'prefix': 'moveToPoint:'
    'body': 'moveToPoint(${1:CGPoint point})'
  'removeAllPoints':
    'prefix': 'removeAllPoints'
    'body': 'removeAllPoints()'
  'setCGPath:':
    'prefix': 'setCGPath:'
    'body': 'setCGPath(${1:CGPathRef CGPath})'
  'setFlatness:':
    'prefix': 'setFlatness:'
    'body': 'setFlatness(${1:CGFloat flatness})'
  'setLineCapStyle:':
    'prefix': 'setLineCapStyle:'
    'body': 'setLineCapStyle(${1:CGLineCap lineCapStyle})'
  'setLineDash:count:phase:':
    'prefix': 'setLineDash:count:phase:'
    'body': 'setLineDash(${1:CGFloat* pattern}, count:${2:NSInteger count}, phase:${3:CGFloat phase})'
  'setLineJoinStyle:':
    'prefix': 'setLineJoinStyle:'
    'body': 'setLineJoinStyle(${1:CGLineJoin lineJoinStyle})'
  'setLineWidth:':
    'prefix': 'setLineWidth:'
    'body': 'setLineWidth(${1:CGFloat lineWidth})'
  'setMiterLimit:':
    'prefix': 'setMiterLimit:'
    'body': 'setMiterLimit(${1:CGFloat miterLimit})'
  'setUsesEvenOddFillRule:':
    'prefix': 'setUsesEvenOddFillRule:'
    'body': 'setUsesEvenOddFillRule(${1:BOOL usesEvenOddFillRule})'
  'stroke':
    'prefix': 'stroke'
    'body': 'stroke()'
  'strokeWithBlendMode:alpha:':
    'prefix': 'strokeWithBlendMode:alpha:'
    'body': 'strokeWithBlendMode(${1:CGBlendMode blendMode}, alpha:${2:CGFloat alpha})'
  'usesEvenOddFillRule':
    'prefix': 'usesEvenOddFillRule'
    'body': 'usesEvenOddFillRule()'
  'adjustsImageWhenDisabled':
    'prefix': 'adjustsImageWhenDisabled'
    'body': 'adjustsImageWhenDisabled()'
  'adjustsImageWhenHighlighted':
    'prefix': 'adjustsImageWhenHighlighted'
    'body': 'adjustsImageWhenHighlighted()'
  'attributedTitleForState:':
    'prefix': 'attributedTitleForState:'
    'body': 'attributedTitleForState(${1:UIControlState state})'
  'backgroundImageForState:':
    'prefix': 'backgroundImageForState:'
    'body': 'backgroundImageForState(${1:UIControlState state})'
  'backgroundRectForBounds:':
    'prefix': 'backgroundRectForBounds:'
    'body': 'backgroundRectForBounds(${1:CGRect bounds})'
  'buttonType':
    'prefix': 'buttonType'
    'body': 'buttonType()'
  'UIButton.buttonWithType:':
    'prefix': 'buttonWithType:'
    'body': 'UIButton.buttonWithType(${1:UIButtonType buttonType})'
  'contentEdgeInsets':
    'prefix': 'contentEdgeInsets'
    'body': 'contentEdgeInsets()'
  'contentRectForBounds:':
    'prefix': 'contentRectForBounds:'
    'body': 'contentRectForBounds(${1:CGRect bounds})'
  'currentAttributedTitle':
    'prefix': 'currentAttributedTitle'
    'body': 'currentAttributedTitle()'
  'currentBackgroundImage':
    'prefix': 'currentBackgroundImage'
    'body': 'currentBackgroundImage()'
  'currentImage':
    'prefix': 'currentImage'
    'body': 'currentImage()'
  'currentTitle':
    'prefix': 'currentTitle'
    'body': 'currentTitle()'
  'currentTitleColor':
    'prefix': 'currentTitleColor'
    'body': 'currentTitleColor()'
  'currentTitleShadowColor':
    'prefix': 'currentTitleShadowColor'
    'body': 'currentTitleShadowColor()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'imageEdgeInsets':
    'prefix': 'imageEdgeInsets'
    'body': 'imageEdgeInsets()'
  'imageForState:':
    'prefix': 'imageForState:'
    'body': 'imageForState(${1:UIControlState state})'
  'imageRectForContentRect:':
    'prefix': 'imageRectForContentRect:'
    'body': 'imageRectForContentRect(${1:CGRect contentRect})'
  'imageView':
    'prefix': 'imageView'
    'body': 'imageView()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'reversesTitleShadowWhenHighlighted':
    'prefix': 'reversesTitleShadowWhenHighlighted'
    'body': 'reversesTitleShadowWhenHighlighted()'
  'setAdjustsImageWhenDisabled:':
    'prefix': 'setAdjustsImageWhenDisabled:'
    'body': 'setAdjustsImageWhenDisabled(${1:BOOL adjustsImageWhenDisabled})'
  'setAdjustsImageWhenHighlighted:':
    'prefix': 'setAdjustsImageWhenHighlighted:'
    'body': 'setAdjustsImageWhenHighlighted(${1:BOOL adjustsImageWhenHighlighted})'
  'setAttributedTitle:forState:':
    'prefix': 'setAttributedTitle:forState:'
    'body': 'setAttributedTitle(${1:NSAttributedString* title}, forState:${2:UIControlState state})'
  'setBackgroundImage:forState:':
    'prefix': 'setBackgroundImage:forState:'
    'body': 'setBackgroundImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setContentEdgeInsets:':
    'prefix': 'setContentEdgeInsets:'
    'body': 'setContentEdgeInsets(${1:UIEdgeInsets contentEdgeInsets})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setImage:forState:':
    'prefix': 'setImage:forState:'
    'body': 'setImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setImageEdgeInsets:':
    'prefix': 'setImageEdgeInsets:'
    'body': 'setImageEdgeInsets(${1:UIEdgeInsets imageEdgeInsets})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode lineBreakMode})'
  'setReversesTitleShadowWhenHighlighted:':
    'prefix': 'setReversesTitleShadowWhenHighlighted:'
    'body': 'setReversesTitleShadowWhenHighlighted(${1:BOOL reversesTitleShadowWhenHighlighted})'
  'setShowsTouchWhenHighlighted:':
    'prefix': 'setShowsTouchWhenHighlighted:'
    'body': 'setShowsTouchWhenHighlighted(${1:BOOL showsTouchWhenHighlighted})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTitle:forState:':
    'prefix': 'setTitle:forState:'
    'body': 'setTitle(${1:NSString* title}, forState:${2:UIControlState state})'
  'setTitleColor:forState:':
    'prefix': 'setTitleColor:forState:'
    'body': 'setTitleColor(${1:UIColor* color}, forState:${2:UIControlState state})'
  'setTitleEdgeInsets:':
    'prefix': 'setTitleEdgeInsets:'
    'body': 'setTitleEdgeInsets(${1:UIEdgeInsets titleEdgeInsets})'
  'setTitleShadowColor:forState:':
    'prefix': 'setTitleShadowColor:forState:'
    'body': 'setTitleShadowColor(${1:UIColor* color}, forState:${2:UIControlState state})'
  'setTitleShadowOffset:':
    'prefix': 'setTitleShadowOffset:'
    'body': 'setTitleShadowOffset(${1:CGSize titleShadowOffset})'
  'showsTouchWhenHighlighted':
    'prefix': 'showsTouchWhenHighlighted'
    'body': 'showsTouchWhenHighlighted()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'titleColorForState:':
    'prefix': 'titleColorForState:'
    'body': 'titleColorForState(${1:UIControlState state})'
  'titleEdgeInsets':
    'prefix': 'titleEdgeInsets'
    'body': 'titleEdgeInsets()'
  'titleForState:':
    'prefix': 'titleForState:'
    'body': 'titleForState(${1:UIControlState state})'
  'titleLabel':
    'prefix': 'titleLabel'
    'body': 'titleLabel()'
  'titleRectForContentRect:':
    'prefix': 'titleRectForContentRect:'
    'body': 'titleRectForContentRect(${1:CGRect contentRect})'
  'titleShadowColorForState:':
    'prefix': 'titleShadowColorForState:'
    'body': 'titleShadowColorForState(${1:UIControlState state})'
  'titleShadowOffset':
    'prefix': 'titleShadowOffset'
    'body': 'titleShadowOffset()'
  'applyLayoutAttributes:':
    'prefix': 'applyLayoutAttributes:'
    'body': 'applyLayoutAttributes(${1:UICollectionViewLayoutAttributes* layoutAttributes})'
  'didTransitionFromLayout:toLayout:':
    'prefix': 'didTransitionFromLayout:toLayout:'
    'body': 'didTransitionFromLayout(${1:UICollectionViewLayout* oldLayout}, toLayout:${2:UICollectionViewLayout* newLayout})'
  'prepareForReuse':
    'prefix': 'prepareForReuse'
    'body': 'prepareForReuse()'
  'reuseIdentifier':
    'prefix': 'reuseIdentifier'
    'body': 'reuseIdentifier()'
  'willTransitionFromLayout:toLayout:':
    'prefix': 'willTransitionFromLayout:toLayout:'
    'body': 'willTransitionFromLayout(${1:UICollectionViewLayout* oldLayout}, toLayout:${2:UICollectionViewLayout* newLayout})'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'allowsSelection':
    'prefix': 'allowsSelection'
    'body': 'allowsSelection()'
  'backgroundView':
    'prefix': 'backgroundView'
    'body': 'backgroundView()'
  'cancelInteractiveTransition':
    'prefix': 'cancelInteractiveTransition'
    'body': 'cancelInteractiveTransition()'
  'cellForItemAtIndexPath:':
    'prefix': 'cellForItemAtIndexPath:'
    'body': 'cellForItemAtIndexPath(${1:NSIndexPath* indexPath})'
  'collectionViewLayout':
    'prefix': 'collectionViewLayout'
    'body': 'collectionViewLayout()'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deleteItemsAtIndexPaths:':
    'prefix': 'deleteItemsAtIndexPaths:'
    'body': 'deleteItemsAtIndexPaths(${1:NSArray* indexPaths})'
  'deleteSections:':
    'prefix': 'deleteSections:'
    'body': 'deleteSections(${1:NSIndexSet* sections})'
  'dequeueReusableCellWithReuseIdentifier:forIndexPath:':
    'prefix': 'dequeueReusableCellWithReuseIdentifier:forIndexPath:'
    'body': 'dequeueReusableCellWithReuseIdentifier(${1:NSString* identifier}, forIndexPath:${2:NSIndexPath* indexPath})'
  'dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:':
    'prefix': 'dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:'
    'body': 'dequeueReusableSupplementaryViewOfKind(${1:NSString* elementKind}, withReuseIdentifier:${2:NSString* identifier}, forIndexPath:${3:NSIndexPath* indexPath})'
  'deselectItemAtIndexPath:animated:':
    'prefix': 'deselectItemAtIndexPath:animated:'
    'body': 'deselectItemAtIndexPath(${1:NSIndexPath* indexPath}, animated:${2:BOOL animated})'
  'finishInteractiveTransition':
    'prefix': 'finishInteractiveTransition'
    'body': 'finishInteractiveTransition()'
  'indexPathForCell:':
    'prefix': 'indexPathForCell:'
    'body': 'indexPathForCell(${1:UICollectionViewCell* cell})'
  'indexPathForItemAtPoint:':
    'prefix': 'indexPathForItemAtPoint:'
    'body': 'indexPathForItemAtPoint(${1:CGPoint point})'
  'indexPathsForSelectedItems':
    'prefix': 'indexPathsForSelectedItems'
    'body': 'indexPathsForSelectedItems()'
  'indexPathsForVisibleItems':
    'prefix': 'indexPathsForVisibleItems'
    'body': 'indexPathsForVisibleItems()'
  'initWithFrame:collectionViewLayout:':
    'prefix': 'initWithFrame:collectionViewLayout:'
    'body': 'initWithFrame(${1:CGRect frame}, collectionViewLayout:${2:UICollectionViewLayout* layout})'
  'insertItemsAtIndexPaths:':
    'prefix': 'insertItemsAtIndexPaths:'
    'body': 'insertItemsAtIndexPaths(${1:NSArray* indexPaths})'
  'insertSections:':
    'prefix': 'insertSections:'
    'body': 'insertSections(${1:NSIndexSet* sections})'
  'layoutAttributesForItemAtIndexPath:':
    'prefix': 'layoutAttributesForItemAtIndexPath:'
    'body': 'layoutAttributesForItemAtIndexPath(${1:NSIndexPath* indexPath})'
  'layoutAttributesForSupplementaryElementOfKind:atIndexPath:':
    'prefix': 'layoutAttributesForSupplementaryElementOfKind:atIndexPath:'
    'body': 'layoutAttributesForSupplementaryElementOfKind(${1:NSString* kind}, atIndexPath:${2:NSIndexPath* indexPath})'
  'moveItemAtIndexPath:toIndexPath:':
    'prefix': 'moveItemAtIndexPath:toIndexPath:'
    'body': 'moveItemAtIndexPath(${1:NSIndexPath* indexPath}, toIndexPath:${2:NSIndexPath* newIndexPath})'
  'moveSection:toSection:':
    'prefix': 'moveSection:toSection:'
    'body': 'moveSection(${1:NSInteger section}, toSection:${2:NSInteger newSection})'
  'numberOfItemsInSection:':
    'prefix': 'numberOfItemsInSection:'
    'body': 'numberOfItemsInSection(${1:NSInteger section})'
  'numberOfSections':
    'prefix': 'numberOfSections'
    'body': 'numberOfSections()'
  'performBatchUpdates:completion:':
    'prefix': 'performBatchUpdates:completion:'
    'body': 'performBatchUpdates(${1:void (^)(void) updates}, completion:${2:void (^)(BOOL) completion})'
  'registerClass:forCellWithReuseIdentifier:':
    'prefix': 'registerClass:forCellWithReuseIdentifier:'
    'body': 'registerClass(${1:Class cellClass}, forCellWithReuseIdentifier:${2:NSString* identifier})'
  'registerClass:forSupplementaryViewOfKind:withReuseIdentifier:':
    'prefix': 'registerClass:forSupplementaryViewOfKind:withReuseIdentifier:'
    'body': 'registerClass(${1:Class viewClass}, forSupplementaryViewOfKind:${2:NSString* elementKind}, withReuseIdentifier:${3:NSString* identifier})'
  'registerNib:forCellWithReuseIdentifier:':
    'prefix': 'registerNib:forCellWithReuseIdentifier:'
    'body': 'registerNib(${1:UINib* nib}, forCellWithReuseIdentifier:${2:NSString* identifier})'
  'registerNib:forSupplementaryViewOfKind:withReuseIdentifier:':
    'prefix': 'registerNib:forSupplementaryViewOfKind:withReuseIdentifier:'
    'body': 'registerNib(${1:UINib* nib}, forSupplementaryViewOfKind:${2:NSString* kind}, withReuseIdentifier:${3:NSString* identifier})'
  'reloadData':
    'prefix': 'reloadData'
    'body': 'reloadData()'
  'reloadItemsAtIndexPaths:':
    'prefix': 'reloadItemsAtIndexPaths:'
    'body': 'reloadItemsAtIndexPaths(${1:NSArray* indexPaths})'
  'reloadSections:':
    'prefix': 'reloadSections:'
    'body': 'reloadSections(${1:NSIndexSet* sections})'
  'scrollToItemAtIndexPath:atScrollPosition:animated:':
    'prefix': 'scrollToItemAtIndexPath:atScrollPosition:animated:'
    'body': 'scrollToItemAtIndexPath(${1:NSIndexPath* indexPath}, atScrollPosition:${2:UICollectionViewScrollPosition scrollPosition}, animated:${3:BOOL animated})'
  'selectItemAtIndexPath:animated:scrollPosition:':
    'prefix': 'selectItemAtIndexPath:animated:scrollPosition:'
    'body': 'selectItemAtIndexPath(${1:NSIndexPath* indexPath}, animated:${2:BOOL animated}, scrollPosition:${3:UICollectionViewScrollPosition scrollPosition})'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL allowsMultipleSelection})'
  'setAllowsSelection:':
    'prefix': 'setAllowsSelection:'
    'body': 'setAllowsSelection(${1:BOOL allowsSelection})'
  'setBackgroundView:':
    'prefix': 'setBackgroundView:'
    'body': 'setBackgroundView(${1:UIView* backgroundView})'
  'setCollectionViewLayout:':
    'prefix': 'setCollectionViewLayout:'
    'body': 'setCollectionViewLayout(${1:UICollectionViewLayout* collectionViewLayout})'
  'setCollectionViewLayout:animated:':
    'prefix': 'setCollectionViewLayout:animated:'
    'body': 'setCollectionViewLayout(${1:UICollectionViewLayout* layout}, animated:${2:BOOL animated})'
  'setCollectionViewLayout:animated:completion:':
    'prefix': 'setCollectionViewLayout:animated:completion:'
    'body': 'setCollectionViewLayout(${1:UICollectionViewLayout* layout}, animated:${2:BOOL animated}, completion:${3:void (^)(BOOL) completion})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id dataSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'startInteractiveTransitionToCollectionViewLayout:completion:':
    'prefix': 'startInteractiveTransitionToCollectionViewLayout:completion:'
    'body': 'startInteractiveTransitionToCollectionViewLayout(${1:UICollectionViewLayout* layout}, completion:${2:UICollectionViewLayoutInteractiveTransitionCompletion completion})'
  'visibleCells':
    'prefix': 'visibleCells'
    'body': 'visibleCells()'
  'backgroundView':
    'prefix': 'backgroundView'
    'body': 'backgroundView()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isSelected':
    'prefix': 'isSelected'
    'body': 'isSelected()'
  'selectedBackgroundView':
    'prefix': 'selectedBackgroundView'
    'body': 'selectedBackgroundView()'
  'setBackgroundView:':
    'prefix': 'setBackgroundView:'
    'body': 'setBackgroundView(${1:UIView* backgroundView})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL highlighted})'
  'setSelected:':
    'prefix': 'setSelected:'
    'body': 'setSelected(${1:BOOL selected})'
  'setSelectedBackgroundView:':
    'prefix': 'setSelectedBackgroundView:'
    'body': 'setSelectedBackgroundView(${1:UIView* selectedBackgroundView})'
  'clearsSelectionOnViewWillAppear':
    'prefix': 'clearsSelectionOnViewWillAppear'
    'body': 'clearsSelectionOnViewWillAppear()'
  'collectionView':
    'prefix': 'collectionView'
    'body': 'collectionView()'
  'collectionViewLayout':
    'prefix': 'collectionViewLayout'
    'body': 'collectionViewLayout()'
  'initWithCollectionViewLayout:':
    'prefix': 'initWithCollectionViewLayout:'
    'body': 'initWithCollectionViewLayout(${1:UICollectionViewLayout* layout})'
  'setClearsSelectionOnViewWillAppear:':
    'prefix': 'setClearsSelectionOnViewWillAppear:'
    'body': 'setClearsSelectionOnViewWillAppear(${1:BOOL clearsSelectionOnViewWillAppear})'
  'setCollectionView:':
    'prefix': 'setCollectionView:'
    'body': 'setCollectionView(${1:UICollectionView* collectionView})'
  'setUseLayoutToLayoutNavigationTransitions:':
    'prefix': 'setUseLayoutToLayoutNavigationTransitions:'
    'body': 'setUseLayoutToLayoutNavigationTransitions(${1:BOOL useLayoutToLayoutNavigationTransitions})'
  'useLayoutToLayoutNavigationTransitions':
    'prefix': 'useLayoutToLayoutNavigationTransitions'
    'body': 'useLayoutToLayoutNavigationTransitions()'
  'footerReferenceSize':
    'prefix': 'footerReferenceSize'
    'body': 'footerReferenceSize()'
  'headerReferenceSize':
    'prefix': 'headerReferenceSize'
    'body': 'headerReferenceSize()'
  'itemSize':
    'prefix': 'itemSize'
    'body': 'itemSize()'
  'minimumInteritemSpacing':
    'prefix': 'minimumInteritemSpacing'
    'body': 'minimumInteritemSpacing()'
  'minimumLineSpacing':
    'prefix': 'minimumLineSpacing'
    'body': 'minimumLineSpacing()'
  'scrollDirection':
    'prefix': 'scrollDirection'
    'body': 'scrollDirection()'
  'sectionInset':
    'prefix': 'sectionInset'
    'body': 'sectionInset()'
  'setFooterReferenceSize:':
    'prefix': 'setFooterReferenceSize:'
    'body': 'setFooterReferenceSize(${1:CGSize footerReferenceSize})'
  'setHeaderReferenceSize:':
    'prefix': 'setHeaderReferenceSize:'
    'body': 'setHeaderReferenceSize(${1:CGSize headerReferenceSize})'
  'setItemSize:':
    'prefix': 'setItemSize:'
    'body': 'setItemSize(${1:CGSize itemSize})'
  'setMinimumInteritemSpacing:':
    'prefix': 'setMinimumInteritemSpacing:'
    'body': 'setMinimumInteritemSpacing(${1:CGFloat minimumInteritemSpacing})'
  'setMinimumLineSpacing:':
    'prefix': 'setMinimumLineSpacing:'
    'body': 'setMinimumLineSpacing(${1:CGFloat minimumLineSpacing})'
  'setScrollDirection:':
    'prefix': 'setScrollDirection:'
    'body': 'setScrollDirection(${1:UICollectionViewScrollDirection scrollDirection})'
  'setSectionInset:':
    'prefix': 'setSectionInset:'
    'body': 'setSectionInset(${1:UIEdgeInsets sectionInset})'
  'invalidateFlowLayoutAttributes':
    'prefix': 'invalidateFlowLayoutAttributes'
    'body': 'invalidateFlowLayoutAttributes()'
  'invalidateFlowLayoutDelegateMetrics':
    'prefix': 'invalidateFlowLayoutDelegateMetrics'
    'body': 'invalidateFlowLayoutDelegateMetrics()'
  'setInvalidateFlowLayoutAttributes:':
    'prefix': 'setInvalidateFlowLayoutAttributes:'
    'body': 'setInvalidateFlowLayoutAttributes(${1:BOOL invalidateFlowLayoutAttributes})'
  'setInvalidateFlowLayoutDelegateMetrics:':
    'prefix': 'setInvalidateFlowLayoutDelegateMetrics:'
    'body': 'setInvalidateFlowLayoutDelegateMetrics(${1:BOOL invalidateFlowLayoutDelegateMetrics})'
  'collectionView':
    'prefix': 'collectionView'
    'body': 'collectionView()'
  'collectionViewContentSize':
    'prefix': 'collectionViewContentSize'
    'body': 'collectionViewContentSize()'
  'finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:':
    'prefix': 'finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:'
    'body': 'finalLayoutAttributesForDisappearingDecorationElementOfKind(${1:NSString* elementKind}, atIndexPath:${2:NSIndexPath* decorationIndexPath})'
  'finalLayoutAttributesForDisappearingItemAtIndexPath:':
    'prefix': 'finalLayoutAttributesForDisappearingItemAtIndexPath:'
    'body': 'finalLayoutAttributesForDisappearingItemAtIndexPath(${1:NSIndexPath* itemIndexPath})'
  'finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:':
    'prefix': 'finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:'
    'body': 'finalLayoutAttributesForDisappearingSupplementaryElementOfKind(${1:NSString* elementKind}, atIndexPath:${2:NSIndexPath* elementIndexPath})'
  'finalizeAnimatedBoundsChange':
    'prefix': 'finalizeAnimatedBoundsChange'
    'body': 'finalizeAnimatedBoundsChange()'
  'finalizeCollectionViewUpdates':
    'prefix': 'finalizeCollectionViewUpdates'
    'body': 'finalizeCollectionViewUpdates()'
  'finalizeLayoutTransition':
    'prefix': 'finalizeLayoutTransition'
    'body': 'finalizeLayoutTransition()'
  'indexPathsToDeleteForDecorationViewOfKind:':
    'prefix': 'indexPathsToDeleteForDecorationViewOfKind:'
    'body': 'indexPathsToDeleteForDecorationViewOfKind(${1:NSString* kind})'
  'indexPathsToDeleteForSupplementaryViewOfKind:':
    'prefix': 'indexPathsToDeleteForSupplementaryViewOfKind:'
    'body': 'indexPathsToDeleteForSupplementaryViewOfKind(${1:NSString* kind})'
  'indexPathsToInsertForDecorationViewOfKind:':
    'prefix': 'indexPathsToInsertForDecorationViewOfKind:'
    'body': 'indexPathsToInsertForDecorationViewOfKind(${1:NSString* kind})'
  'indexPathsToInsertForSupplementaryViewOfKind:':
    'prefix': 'indexPathsToInsertForSupplementaryViewOfKind:'
    'body': 'indexPathsToInsertForSupplementaryViewOfKind(${1:NSString* kind})'
  'initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:':
    'prefix': 'initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:'
    'body': 'initialLayoutAttributesForAppearingDecorationElementOfKind(${1:NSString* elementKind}, atIndexPath:${2:NSIndexPath* decorationIndexPath})'
  'initialLayoutAttributesForAppearingItemAtIndexPath:':
    'prefix': 'initialLayoutAttributesForAppearingItemAtIndexPath:'
    'body': 'initialLayoutAttributesForAppearingItemAtIndexPath(${1:NSIndexPath* itemIndexPath})'
  'initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:':
    'prefix': 'initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:'
    'body': 'initialLayoutAttributesForAppearingSupplementaryElementOfKind(${1:NSString* elementKind}, atIndexPath:${2:NSIndexPath* elementIndexPath})'
  'invalidateLayout':
    'prefix': 'invalidateLayout'
    'body': 'invalidateLayout()'
  'invalidateLayoutWithContext:':
    'prefix': 'invalidateLayoutWithContext:'
    'body': 'invalidateLayoutWithContext(${1:UICollectionViewLayoutInvalidationContext* context})'
  'UICollectionViewLayout.invalidationContextClass':
    'prefix': 'invalidationContextClass'
    'body': 'UICollectionViewLayout.invalidationContextClass()'
  'invalidationContextForBoundsChange:':
    'prefix': 'invalidationContextForBoundsChange:'
    'body': 'invalidationContextForBoundsChange(${1:CGRect newBounds})'
  'UICollectionViewLayout.layoutAttributesClass':
    'prefix': 'layoutAttributesClass'
    'body': 'UICollectionViewLayout.layoutAttributesClass()'
  'layoutAttributesForDecorationViewOfKind:atIndexPath:':
    'prefix': 'layoutAttributesForDecorationViewOfKind:atIndexPath:'
    'body': 'layoutAttributesForDecorationViewOfKind(${1:NSString* decorationViewKind}, atIndexPath:${2:NSIndexPath* indexPath})'
  'layoutAttributesForElementsInRect:':
    'prefix': 'layoutAttributesForElementsInRect:'
    'body': 'layoutAttributesForElementsInRect(${1:CGRect rect})'
  'layoutAttributesForItemAtIndexPath:':
    'prefix': 'layoutAttributesForItemAtIndexPath:'
    'body': 'layoutAttributesForItemAtIndexPath(${1:NSIndexPath* indexPath})'
  'layoutAttributesForSupplementaryViewOfKind:atIndexPath:':
    'prefix': 'layoutAttributesForSupplementaryViewOfKind:atIndexPath:'
    'body': 'layoutAttributesForSupplementaryViewOfKind(${1:NSString* kind}, atIndexPath:${2:NSIndexPath* indexPath})'
  'prepareForAnimatedBoundsChange:':
    'prefix': 'prepareForAnimatedBoundsChange:'
    'body': 'prepareForAnimatedBoundsChange(${1:CGRect oldBounds})'
  'prepareForCollectionViewUpdates:':
    'prefix': 'prepareForCollectionViewUpdates:'
    'body': 'prepareForCollectionViewUpdates(${1:NSArray* updateItems})'
  'prepareForTransitionFromLayout:':
    'prefix': 'prepareForTransitionFromLayout:'
    'body': 'prepareForTransitionFromLayout(${1:UICollectionViewLayout* oldLayout})'
  'prepareForTransitionToLayout:':
    'prefix': 'prepareForTransitionToLayout:'
    'body': 'prepareForTransitionToLayout(${1:UICollectionViewLayout* newLayout})'
  'prepareLayout':
    'prefix': 'prepareLayout'
    'body': 'prepareLayout()'
  'registerClass:forDecorationViewOfKind:':
    'prefix': 'registerClass:forDecorationViewOfKind:'
    'body': 'registerClass(${1:Class viewClass}, forDecorationViewOfKind:${2:NSString* decorationViewKind})'
  'registerNib:forDecorationViewOfKind:':
    'prefix': 'registerNib:forDecorationViewOfKind:'
    'body': 'registerNib(${1:UINib* nib}, forDecorationViewOfKind:${2:NSString* decorationViewKind})'
  'shouldInvalidateLayoutForBoundsChange:':
    'prefix': 'shouldInvalidateLayoutForBoundsChange:'
    'body': 'shouldInvalidateLayoutForBoundsChange(${1:CGRect newBounds})'
  'targetContentOffsetForProposedContentOffset:':
    'prefix': 'targetContentOffsetForProposedContentOffset:'
    'body': 'targetContentOffsetForProposedContentOffset(${1:CGPoint proposedContentOffset})'
  'targetContentOffsetForProposedContentOffset:withScrollingVelocity:':
    'prefix': 'targetContentOffsetForProposedContentOffset:withScrollingVelocity:'
    'body': 'targetContentOffsetForProposedContentOffset(${1:CGPoint proposedContentOffset}, withScrollingVelocity:${2:CGPoint velocity})'
  'alpha':
    'prefix': 'alpha'
    'body': 'alpha()'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'center':
    'prefix': 'center'
    'body': 'center()'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'indexPath':
    'prefix': 'indexPath'
    'body': 'indexPath()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'UICollectionViewLayoutAttributes.layoutAttributesForCellWithIndexPath:':
    'prefix': 'layoutAttributesForCellWithIndexPath:'
    'body': 'UICollectionViewLayoutAttributes.layoutAttributesForCellWithIndexPath(${1:NSIndexPath* indexPath})'
  'UICollectionViewLayoutAttributes.layoutAttributesForDecorationViewOfKind:withIndexPath:':
    'prefix': 'layoutAttributesForDecorationViewOfKind:withIndexPath:'
    'body': 'UICollectionViewLayoutAttributes.layoutAttributesForDecorationViewOfKind(${1:NSString* decorationViewKind}, withIndexPath:${2:NSIndexPath* indexPath})'
  'UICollectionViewLayoutAttributes.layoutAttributesForSupplementaryViewOfKind:withIndexPath:':
    'prefix': 'layoutAttributesForSupplementaryViewOfKind:withIndexPath:'
    'body': 'UICollectionViewLayoutAttributes.layoutAttributesForSupplementaryViewOfKind(${1:NSString* elementKind}, withIndexPath:${2:NSIndexPath* indexPath})'
  'representedElementCategory':
    'prefix': 'representedElementCategory'
    'body': 'representedElementCategory()'
  'representedElementKind':
    'prefix': 'representedElementKind'
    'body': 'representedElementKind()'
  'setAlpha:':
    'prefix': 'setAlpha:'
    'body': 'setAlpha(${1:CGFloat alpha})'
  'setBounds:':
    'prefix': 'setBounds:'
    'body': 'setBounds(${1:CGRect bounds})'
  'setCenter:':
    'prefix': 'setCenter:'
    'body': 'setCenter(${1:CGPoint center})'
  'setFrame:':
    'prefix': 'setFrame:'
    'body': 'setFrame(${1:CGRect frame})'
  'setHidden:':
    'prefix': 'setHidden:'
    'body': 'setHidden(${1:BOOL hidden})'
  'setIndexPath:':
    'prefix': 'setIndexPath:'
    'body': 'setIndexPath(${1:NSIndexPath* indexPath})'
  'setSize:':
    'prefix': 'setSize:'
    'body': 'setSize(${1:CGSize size})'
  'setTransform3D:':
    'prefix': 'setTransform3D:'
    'body': 'setTransform3D(${1:CATransform3D transform3D})'
  'setTransform:':
    'prefix': 'setTransform:'
    'body': 'setTransform(${1:CGAffineTransform transform})'
  'setZIndex:':
    'prefix': 'setZIndex:'
    'body': 'setZIndex(${1:NSInteger zIndex})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'transform':
    'prefix': 'transform'
    'body': 'transform()'
  'transform3D':
    'prefix': 'transform3D'
    'body': 'transform3D()'
  'zIndex':
    'prefix': 'zIndex'
    'body': 'zIndex()'
  'invalidateDataSourceCounts':
    'prefix': 'invalidateDataSourceCounts'
    'body': 'invalidateDataSourceCounts()'
  'invalidateEverything':
    'prefix': 'invalidateEverything'
    'body': 'invalidateEverything()'
  'currentLayout':
    'prefix': 'currentLayout'
    'body': 'currentLayout()'
  'initWithCurrentLayout:nextLayout:':
    'prefix': 'initWithCurrentLayout:nextLayout:'
    'body': 'initWithCurrentLayout(${1:UICollectionViewLayout* currentLayout}, nextLayout:${2:UICollectionViewLayout* newLayout})'
  'nextLayout':
    'prefix': 'nextLayout'
    'body': 'nextLayout()'
  'setTransitionProgress:':
    'prefix': 'setTransitionProgress:'
    'body': 'setTransitionProgress(${1:CGFloat transitionProgress})'
  'transitionProgress':
    'prefix': 'transitionProgress'
    'body': 'transitionProgress()'
  'updateValue:forAnimatedKey:':
    'prefix': 'updateValue:forAnimatedKey:'
    'body': 'updateValue(${1:CGFloat value}, forAnimatedKey:${2:NSString* key})'
  'valueForAnimatedKey:':
    'prefix': 'valueForAnimatedKey:'
    'body': 'valueForAnimatedKey(${1:NSString* key})'
  'indexPathAfterUpdate':
    'prefix': 'indexPathAfterUpdate'
    'body': 'indexPathAfterUpdate()'
  'indexPathBeforeUpdate':
    'prefix': 'indexPathBeforeUpdate'
    'body': 'indexPathBeforeUpdate()'
  'updateAction':
    'prefix': 'updateAction'
    'body': 'updateAction()'
  'addBoundaryWithIdentifier:forPath:':
    'prefix': 'addBoundaryWithIdentifier:forPath:'
    'body': 'addBoundaryWithIdentifier(${1:id identifier}, forPath:${2:UIBezierPath* bezierPath})'
  'addBoundaryWithIdentifier:fromPoint:toPoint:':
    'prefix': 'addBoundaryWithIdentifier:fromPoint:toPoint:'
    'body': 'addBoundaryWithIdentifier(${1:id identifier}, fromPoint:${2:CGPoint p1}, toPoint:${3:CGPoint p2})'
  'addItem:':
    'prefix': 'addItem:'
    'body': 'addItem(${1:id item})'
  'boundaryIdentifiers':
    'prefix': 'boundaryIdentifiers'
    'body': 'boundaryIdentifiers()'
  'boundaryWithIdentifier:':
    'prefix': 'boundaryWithIdentifier:'
    'body': 'boundaryWithIdentifier(${1:id identifier})'
  'collisionDelegate':
    'prefix': 'collisionDelegate'
    'body': 'collisionDelegate()'
  'collisionMode':
    'prefix': 'collisionMode'
    'body': 'collisionMode()'
  'initWithItems:':
    'prefix': 'initWithItems:'
    'body': 'initWithItems(${1:NSArray* items})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'removeAllBoundaries':
    'prefix': 'removeAllBoundaries'
    'body': 'removeAllBoundaries()'
  'removeBoundaryWithIdentifier:':
    'prefix': 'removeBoundaryWithIdentifier:'
    'body': 'removeBoundaryWithIdentifier(${1:id identifier})'
  'removeItem:':
    'prefix': 'removeItem:'
    'body': 'removeItem(${1:id item})'
  'setCollisionDelegate:':
    'prefix': 'setCollisionDelegate:'
    'body': 'setCollisionDelegate(${1:id collisionDelegate})'
  'setCollisionMode:':
    'prefix': 'setCollisionMode:'
    'body': 'setCollisionMode(${1:UICollisionBehaviorMode collisionMode})'
  'setTranslatesReferenceBoundsIntoBoundary:':
    'prefix': 'setTranslatesReferenceBoundsIntoBoundary:'
    'body': 'setTranslatesReferenceBoundsIntoBoundary(${1:BOOL translatesReferenceBoundsIntoBoundary})'
  'setTranslatesReferenceBoundsIntoBoundaryWithInsets:':
    'prefix': 'setTranslatesReferenceBoundsIntoBoundaryWithInsets:'
    'body': 'setTranslatesReferenceBoundsIntoBoundaryWithInsets(${1:UIEdgeInsets insets})'
  'translatesReferenceBoundsIntoBoundary':
    'prefix': 'translatesReferenceBoundsIntoBoundary'
    'body': 'translatesReferenceBoundsIntoBoundary()'
  'CGColor':
    'prefix': 'CGColor'
    'body': 'CGColor()'
  'CIColor':
    'prefix': 'CIColor'
    'body': 'CIColor()'
  'UIColor.blackColor':
    'prefix': 'blackColor'
    'body': 'UIColor.blackColor()'
  'UIColor.blueColor':
    'prefix': 'blueColor'
    'body': 'UIColor.blueColor()'
  'UIColor.brownColor':
    'prefix': 'brownColor'
    'body': 'UIColor.brownColor()'
  'UIColor.clearColor':
    'prefix': 'clearColor'
    'body': 'UIColor.clearColor()'
  'colorWithAlphaComponent:':
    'prefix': 'colorWithAlphaComponent:'
    'body': 'colorWithAlphaComponent(${1:CGFloat alpha})'
  'UIColor.colorWithCGColor:':
    'prefix': 'colorWithCGColor:'
    'body': 'UIColor.colorWithCGColor(${1:CGColorRef cgColor})'
  'UIColor.colorWithCIColor:':
    'prefix': 'colorWithCIColor:'
    'body': 'UIColor.colorWithCIColor(${1:CIColor* ciColor})'
  'UIColor.colorWithHue:saturation:brightness:alpha:':
    'prefix': 'colorWithHue:saturation:brightness:alpha:'
    'body': 'UIColor.colorWithHue(${1:CGFloat hue}, saturation:${2:CGFloat saturation}, brightness:${3:CGFloat brightness}, alpha:${4:CGFloat alpha})'
  'UIColor.colorWithPatternImage:':
    'prefix': 'colorWithPatternImage:'
    'body': 'UIColor.colorWithPatternImage(${1:UIImage* image})'
  'UIColor.colorWithRed:green:blue:alpha:':
    'prefix': 'colorWithRed:green:blue:alpha:'
    'body': 'UIColor.colorWithRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'UIColor.colorWithWhite:alpha:':
    'prefix': 'colorWithWhite:alpha:'
    'body': 'UIColor.colorWithWhite(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'UIColor.cyanColor':
    'prefix': 'cyanColor'
    'body': 'UIColor.cyanColor()'
  'UIColor.darkGrayColor':
    'prefix': 'darkGrayColor'
    'body': 'UIColor.darkGrayColor()'
  'UIColor.darkTextColor':
    'prefix': 'darkTextColor'
    'body': 'UIColor.darkTextColor()'
  'getHue:saturation:brightness:alpha:':
    'prefix': 'getHue:saturation:brightness:alpha:'
    'body': 'getHue(${1:CGFloat* hue}, saturation:${2:CGFloat* saturation}, brightness:${3:CGFloat* brightness}, alpha:${4:CGFloat* alpha})'
  'getRed:green:blue:alpha:':
    'prefix': 'getRed:green:blue:alpha:'
    'body': 'getRed(${1:CGFloat* red}, green:${2:CGFloat* green}, blue:${3:CGFloat* blue}, alpha:${4:CGFloat* alpha})'
  'getWhite:alpha:':
    'prefix': 'getWhite:alpha:'
    'body': 'getWhite(${1:CGFloat* white}, alpha:${2:CGFloat* alpha})'
  'UIColor.grayColor':
    'prefix': 'grayColor'
    'body': 'UIColor.grayColor()'
  'UIColor.greenColor':
    'prefix': 'greenColor'
    'body': 'UIColor.greenColor()'
  'UIColor.groupTableViewBackgroundColor':
    'prefix': 'groupTableViewBackgroundColor'
    'body': 'UIColor.groupTableViewBackgroundColor()'
  'initWithCGColor:':
    'prefix': 'initWithCGColor:'
    'body': 'initWithCGColor(${1:CGColorRef cgColor})'
  'initWithCIColor:':
    'prefix': 'initWithCIColor:'
    'body': 'initWithCIColor(${1:CIColor* ciColor})'
  'initWithHue:saturation:brightness:alpha:':
    'prefix': 'initWithHue:saturation:brightness:alpha:'
    'body': 'initWithHue(${1:CGFloat hue}, saturation:${2:CGFloat saturation}, brightness:${3:CGFloat brightness}, alpha:${4:CGFloat alpha})'
  'initWithPatternImage:':
    'prefix': 'initWithPatternImage:'
    'body': 'initWithPatternImage(${1:UIImage* image})'
  'initWithRed:green:blue:alpha:':
    'prefix': 'initWithRed:green:blue:alpha:'
    'body': 'initWithRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'initWithWhite:alpha:':
    'prefix': 'initWithWhite:alpha:'
    'body': 'initWithWhite(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'UIColor.lightGrayColor':
    'prefix': 'lightGrayColor'
    'body': 'UIColor.lightGrayColor()'
  'UIColor.lightTextColor':
    'prefix': 'lightTextColor'
    'body': 'UIColor.lightTextColor()'
  'UIColor.magentaColor':
    'prefix': 'magentaColor'
    'body': 'UIColor.magentaColor()'
  'UIColor.orangeColor':
    'prefix': 'orangeColor'
    'body': 'UIColor.orangeColor()'
  'UIColor.purpleColor':
    'prefix': 'purpleColor'
    'body': 'UIColor.purpleColor()'
  'UIColor.redColor':
    'prefix': 'redColor'
    'body': 'UIColor.redColor()'
  'UIColor.scrollViewTexturedBackgroundColor':
    'prefix': 'scrollViewTexturedBackgroundColor'
    'body': 'UIColor.scrollViewTexturedBackgroundColor()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setFill':
    'prefix': 'setFill'
    'body': 'setFill()'
  'setStroke':
    'prefix': 'setStroke'
    'body': 'setStroke()'
  'UIColor.underPageBackgroundColor':
    'prefix': 'underPageBackgroundColor'
    'body': 'UIColor.underPageBackgroundColor()'
  'UIColor.viewFlipsideBackgroundColor':
    'prefix': 'viewFlipsideBackgroundColor'
    'body': 'UIColor.viewFlipsideBackgroundColor()'
  'UIColor.whiteColor':
    'prefix': 'whiteColor'
    'body': 'UIColor.whiteColor()'
  'UIColor.yellowColor':
    'prefix': 'yellowColor'
    'body': 'UIColor.yellowColor()'
  'actionsForTarget:forControlEvent:':
    'prefix': 'actionsForTarget:forControlEvent:'
    'body': 'actionsForTarget(${1:id target}, forControlEvent:${2:UIControlEvents controlEvent})'
  'addTarget:action:forControlEvents:':
    'prefix': 'addTarget:action:forControlEvents:'
    'body': 'addTarget(${1:id target}, action:${2:SEL action}, forControlEvents:${3:UIControlEvents controlEvents})'
  'allControlEvents':
    'prefix': 'allControlEvents'
    'body': 'allControlEvents()'
  'allTargets':
    'prefix': 'allTargets'
    'body': 'allTargets()'
  'beginTrackingWithTouch:withEvent:':
    'prefix': 'beginTrackingWithTouch:withEvent:'
    'body': 'beginTrackingWithTouch(${1:UITouch* touch}, withEvent:${2:UIEvent* event})'
  'cancelTrackingWithEvent:':
    'prefix': 'cancelTrackingWithEvent:'
    'body': 'cancelTrackingWithEvent(${1:UIEvent* event})'
  'contentHorizontalAlignment':
    'prefix': 'contentHorizontalAlignment'
    'body': 'contentHorizontalAlignment()'
  'contentVerticalAlignment':
    'prefix': 'contentVerticalAlignment'
    'body': 'contentVerticalAlignment()'
  'continueTrackingWithTouch:withEvent:':
    'prefix': 'continueTrackingWithTouch:withEvent:'
    'body': 'continueTrackingWithTouch(${1:UITouch* touch}, withEvent:${2:UIEvent* event})'
  'endTrackingWithTouch:withEvent:':
    'prefix': 'endTrackingWithTouch:withEvent:'
    'body': 'endTrackingWithTouch(${1:UITouch* touch}, withEvent:${2:UIEvent* event})'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isSelected':
    'prefix': 'isSelected'
    'body': 'isSelected()'
  'isTouchInside':
    'prefix': 'isTouchInside'
    'body': 'isTouchInside()'
  'isTracking':
    'prefix': 'isTracking'
    'body': 'isTracking()'
  'removeTarget:action:forControlEvents:':
    'prefix': 'removeTarget:action:forControlEvents:'
    'body': 'removeTarget(${1:id target}, action:${2:SEL action}, forControlEvents:${3:UIControlEvents controlEvents})'
  'sendAction:to:forEvent:':
    'prefix': 'sendAction:to:forEvent:'
    'body': 'sendAction(${1:SEL action}, to:${2:id target}, forEvent:${3:UIEvent* event})'
  'sendActionsForControlEvents:':
    'prefix': 'sendActionsForControlEvents:'
    'body': 'sendActionsForControlEvents(${1:UIControlEvents controlEvents})'
  'setContentHorizontalAlignment:':
    'prefix': 'setContentHorizontalAlignment:'
    'body': 'setContentHorizontalAlignment(${1:UIControlContentHorizontalAlignment contentHorizontalAlignment})'
  'setContentVerticalAlignment:':
    'prefix': 'setContentVerticalAlignment:'
    'body': 'setContentVerticalAlignment(${1:UIControlContentVerticalAlignment contentVerticalAlignment})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL highlighted})'
  'setSelected:':
    'prefix': 'setSelected:'
    'body': 'setSelected(${1:BOOL selected})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'calendar':
    'prefix': 'calendar'
    'body': 'calendar()'
  'countDownDuration':
    'prefix': 'countDownDuration'
    'body': 'countDownDuration()'
  'date':
    'prefix': 'date'
    'body': 'date()'
  'datePickerMode':
    'prefix': 'datePickerMode'
    'body': 'datePickerMode()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'maximumDate':
    'prefix': 'maximumDate'
    'body': 'maximumDate()'
  'minimumDate':
    'prefix': 'minimumDate'
    'body': 'minimumDate()'
  'minuteInterval':
    'prefix': 'minuteInterval'
    'body': 'minuteInterval()'
  'setCalendar:':
    'prefix': 'setCalendar:'
    'body': 'setCalendar(${1:NSCalendar* calendar})'
  'setCountDownDuration:':
    'prefix': 'setCountDownDuration:'
    'body': 'setCountDownDuration(${1:NSTimeInterval countDownDuration})'
  'setDate:':
    'prefix': 'setDate:'
    'body': 'setDate(${1:NSDate* date})'
  'setDate:animated:':
    'prefix': 'setDate:animated:'
    'body': 'setDate(${1:NSDate* date}, animated:${2:BOOL animated})'
  'setDatePickerMode:':
    'prefix': 'setDatePickerMode:'
    'body': 'setDatePickerMode(${1:UIDatePickerMode datePickerMode})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* locale})'
  'setMaximumDate:':
    'prefix': 'setMaximumDate:'
    'body': 'setMaximumDate(${1:NSDate* maximumDate})'
  'setMinimumDate:':
    'prefix': 'setMinimumDate:'
    'body': 'setMinimumDate(${1:NSDate* minimumDate})'
  'setMinuteInterval:':
    'prefix': 'setMinuteInterval:'
    'body': 'setMinuteInterval(${1:NSInteger minuteInterval})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* timeZone})'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'batteryLevel':
    'prefix': 'batteryLevel'
    'body': 'batteryLevel()'
  'batteryState':
    'prefix': 'batteryState'
    'body': 'batteryState()'
  'beginGeneratingDeviceOrientationNotifications':
    'prefix': 'beginGeneratingDeviceOrientationNotifications'
    'body': 'beginGeneratingDeviceOrientationNotifications()'
  'UIDevice.currentDevice':
    'prefix': 'currentDevice'
    'body': 'UIDevice.currentDevice()'
  'endGeneratingDeviceOrientationNotifications':
    'prefix': 'endGeneratingDeviceOrientationNotifications'
    'body': 'endGeneratingDeviceOrientationNotifications()'
  'identifierForVendor':
    'prefix': 'identifierForVendor'
    'body': 'identifierForVendor()'
  'isBatteryMonitoringEnabled':
    'prefix': 'isBatteryMonitoringEnabled'
    'body': 'isBatteryMonitoringEnabled()'
  'isGeneratingDeviceOrientationNotifications':
    'prefix': 'isGeneratingDeviceOrientationNotifications'
    'body': 'isGeneratingDeviceOrientationNotifications()'
  'isMultitaskingSupported':
    'prefix': 'isMultitaskingSupported'
    'body': 'isMultitaskingSupported()'
  'isProximityMonitoringEnabled':
    'prefix': 'isProximityMonitoringEnabled'
    'body': 'isProximityMonitoringEnabled()'
  'localizedModel':
    'prefix': 'localizedModel'
    'body': 'localizedModel()'
  'model':
    'prefix': 'model'
    'body': 'model()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'playInputClick':
    'prefix': 'playInputClick'
    'body': 'playInputClick()'
  'proximityState':
    'prefix': 'proximityState'
    'body': 'proximityState()'
  'setBatteryMonitoringEnabled:':
    'prefix': 'setBatteryMonitoringEnabled:'
    'body': 'setBatteryMonitoringEnabled(${1:BOOL batteryMonitoringEnabled})'
  'setProximityMonitoringEnabled:':
    'prefix': 'setProximityMonitoringEnabled:'
    'body': 'setProximityMonitoringEnabled(${1:BOOL proximityMonitoringEnabled})'
  'systemName':
    'prefix': 'systemName'
    'body': 'systemName()'
  'systemVersion':
    'prefix': 'systemVersion'
    'body': 'systemVersion()'
  'userInterfaceIdiom':
    'prefix': 'userInterfaceIdiom'
    'body': 'userInterfaceIdiom()'
  'alternativeInterpretations':
    'prefix': 'alternativeInterpretations'
    'body': 'alternativeInterpretations()'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'autosaveWithCompletionHandler:':
    'prefix': 'autosaveWithCompletionHandler:'
    'body': 'autosaveWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'changeCountTokenForSaveOperation:':
    'prefix': 'changeCountTokenForSaveOperation:'
    'body': 'changeCountTokenForSaveOperation(${1:UIDocumentSaveOperation saveOperation})'
  'closeWithCompletionHandler:':
    'prefix': 'closeWithCompletionHandler:'
    'body': 'closeWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'contentsForType:error:':
    'prefix': 'contentsForType:error:'
    'body': 'contentsForType(${1:NSString* typeName}, error:${2:NSError** outError})'
  'disableEditing':
    'prefix': 'disableEditing'
    'body': 'disableEditing()'
  'documentState':
    'prefix': 'documentState'
    'body': 'documentState()'
  'enableEditing':
    'prefix': 'enableEditing'
    'body': 'enableEditing()'
  'fileAttributesToWriteToURL:forSaveOperation:error:':
    'prefix': 'fileAttributesToWriteToURL:forSaveOperation:error:'
    'body': 'fileAttributesToWriteToURL(${1:NSURL* url}, forSaveOperation:${2:UIDocumentSaveOperation saveOperation}, error:${3:NSError** outError})'
  'fileModificationDate':
    'prefix': 'fileModificationDate'
    'body': 'fileModificationDate()'
  'fileNameExtensionForType:saveOperation:':
    'prefix': 'fileNameExtensionForType:saveOperation:'
    'body': 'fileNameExtensionForType(${1:NSString* typeName}, saveOperation:${2:UIDocumentSaveOperation saveOperation})'
  'fileType':
    'prefix': 'fileType'
    'body': 'fileType()'
  'fileURL':
    'prefix': 'fileURL'
    'body': 'fileURL()'
  'finishedHandlingError:recovered:':
    'prefix': 'finishedHandlingError:recovered:'
    'body': 'finishedHandlingError(${1:NSError* error}, recovered:${2:BOOL recovered})'
  'handleError:userInteractionPermitted:':
    'prefix': 'handleError:userInteractionPermitted:'
    'body': 'handleError(${1:NSError* error}, userInteractionPermitted:${2:BOOL userInteractionPermitted})'
  'hasUnsavedChanges':
    'prefix': 'hasUnsavedChanges'
    'body': 'hasUnsavedChanges()'
  'initWithFileURL:':
    'prefix': 'initWithFileURL:'
    'body': 'initWithFileURL(${1:NSURL* url})'
  'loadFromContents:ofType:error:':
    'prefix': 'loadFromContents:ofType:error:'
    'body': 'loadFromContents(${1:id contents}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'localizedName':
    'prefix': 'localizedName'
    'body': 'localizedName()'
  'openWithCompletionHandler:':
    'prefix': 'openWithCompletionHandler:'
    'body': 'openWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'performAsynchronousFileAccessUsingBlock:':
    'prefix': 'performAsynchronousFileAccessUsingBlock:'
    'body': 'performAsynchronousFileAccessUsingBlock(${1:void (^)(void) block})'
  'readFromURL:error:':
    'prefix': 'readFromURL:error:'
    'body': 'readFromURL(${1:NSURL* url}, error:${2:NSError** outError})'
  'revertToContentsOfURL:completionHandler:':
    'prefix': 'revertToContentsOfURL:completionHandler:'
    'body': 'revertToContentsOfURL(${1:NSURL* url}, completionHandler:${2:void (^)(BOOL) completionHandler})'
  'saveToURL:forSaveOperation:completionHandler:':
    'prefix': 'saveToURL:forSaveOperation:completionHandler:'
    'body': 'saveToURL(${1:NSURL* url}, forSaveOperation:${2:UIDocumentSaveOperation saveOperation}, completionHandler:${3:void (^)(BOOL) completionHandler})'
  'savingFileType':
    'prefix': 'savingFileType'
    'body': 'savingFileType()'
  'setFileModificationDate:':
    'prefix': 'setFileModificationDate:'
    'body': 'setFileModificationDate(${1:NSDate* fileModificationDate})'
  'setUndoManager:':
    'prefix': 'setUndoManager:'
    'body': 'setUndoManager(${1:NSUndoManager* undoManager})'
  'undoManager':
    'prefix': 'undoManager'
    'body': 'undoManager()'
  'updateChangeCount:':
    'prefix': 'updateChangeCount:'
    'body': 'updateChangeCount(${1:UIDocumentChangeKind change})'
  'updateChangeCountWithToken:forSaveOperation:':
    'prefix': 'updateChangeCountWithToken:forSaveOperation:'
    'body': 'updateChangeCountWithToken(${1:id changeCountToken}, forSaveOperation:${2:UIDocumentSaveOperation saveOperation})'
  'userInteractionNoLongerPermittedForError:':
    'prefix': 'userInteractionNoLongerPermittedForError:'
    'body': 'userInteractionNoLongerPermittedForError(${1:NSError* error})'
  'writeContents:andAttributes:safelyToURL:forSaveOperation:error:':
    'prefix': 'writeContents:andAttributes:safelyToURL:forSaveOperation:error:'
    'body': 'writeContents(${1:id contents}, andAttributes:${2:NSDictionary* additionalFileAttributes}, safelyToURL:${3:NSURL* url}, forSaveOperation:${4:UIDocumentSaveOperation saveOperation}, error:${5:NSError** outError})'
  'writeContents:toURL:forSaveOperation:originalContentsURL:error:':
    'prefix': 'writeContents:toURL:forSaveOperation:originalContentsURL:error:'
    'body': 'writeContents(${1:id contents}, toURL:${2:NSURL* url}, forSaveOperation:${3:UIDocumentSaveOperation saveOperation}, originalContentsURL:${4:NSURL* originalContentsURL}, error:${5:NSError** outError})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'UTI':
    'prefix': 'UTI'
    'body': 'UTI()'
  'annotation':
    'prefix': 'annotation'
    'body': 'annotation()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dismissMenuAnimated:':
    'prefix': 'dismissMenuAnimated:'
    'body': 'dismissMenuAnimated(${1:BOOL animated})'
  'dismissPreviewAnimated:':
    'prefix': 'dismissPreviewAnimated:'
    'body': 'dismissPreviewAnimated(${1:BOOL animated})'
  'gestureRecognizers':
    'prefix': 'gestureRecognizers'
    'body': 'gestureRecognizers()'
  'icons':
    'prefix': 'icons'
    'body': 'icons()'
  'UIDocumentInteractionController.interactionControllerWithURL:':
    'prefix': 'interactionControllerWithURL:'
    'body': 'UIDocumentInteractionController.interactionControllerWithURL(${1:NSURL* url})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'presentOpenInMenuFromBarButtonItem:animated:':
    'prefix': 'presentOpenInMenuFromBarButtonItem:animated:'
    'body': 'presentOpenInMenuFromBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated})'
  'presentOpenInMenuFromRect:inView:animated:':
    'prefix': 'presentOpenInMenuFromRect:inView:animated:'
    'body': 'presentOpenInMenuFromRect(${1:CGRect rect}, inView:${2:UIView* view}, animated:${3:BOOL animated})'
  'presentOptionsMenuFromBarButtonItem:animated:':
    'prefix': 'presentOptionsMenuFromBarButtonItem:animated:'
    'body': 'presentOptionsMenuFromBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated})'
  'presentOptionsMenuFromRect:inView:animated:':
    'prefix': 'presentOptionsMenuFromRect:inView:animated:'
    'body': 'presentOptionsMenuFromRect(${1:CGRect rect}, inView:${2:UIView* view}, animated:${3:BOOL animated})'
  'presentPreviewAnimated:':
    'prefix': 'presentPreviewAnimated:'
    'body': 'presentPreviewAnimated(${1:BOOL animated})'
  'setAnnotation:':
    'prefix': 'setAnnotation:'
    'body': 'setAnnotation(${1:id annotation})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* name})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* URL})'
  'setUTI:':
    'prefix': 'setUTI:'
    'body': 'setUTI(${1:NSString* UTI})'
  'addBehavior:':
    'prefix': 'addBehavior:'
    'body': 'addBehavior(${1:UIDynamicBehavior* behavior})'
  'behaviors':
    'prefix': 'behaviors'
    'body': 'behaviors()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'elapsedTime':
    'prefix': 'elapsedTime'
    'body': 'elapsedTime()'
  'initWithCollectionViewLayout:':
    'prefix': 'initWithCollectionViewLayout:'
    'body': 'initWithCollectionViewLayout(${1:UICollectionViewLayout* layout})'
  'initWithReferenceView:':
    'prefix': 'initWithReferenceView:'
    'body': 'initWithReferenceView(${1:UIView* view})'
  'isRunning':
    'prefix': 'isRunning'
    'body': 'isRunning()'
  'itemsInRect:':
    'prefix': 'itemsInRect:'
    'body': 'itemsInRect(${1:CGRect rect})'
  'layoutAttributesForCellAtIndexPath:':
    'prefix': 'layoutAttributesForCellAtIndexPath:'
    'body': 'layoutAttributesForCellAtIndexPath(${1:NSIndexPath* indexPath})'
  'layoutAttributesForDecorationViewOfKind:atIndexPath:':
    'prefix': 'layoutAttributesForDecorationViewOfKind:atIndexPath:'
    'body': 'layoutAttributesForDecorationViewOfKind(${1:NSString* decorationViewKind}, atIndexPath:${2:NSIndexPath* indexPath})'
  'layoutAttributesForSupplementaryViewOfKind:atIndexPath:':
    'prefix': 'layoutAttributesForSupplementaryViewOfKind:atIndexPath:'
    'body': 'layoutAttributesForSupplementaryViewOfKind(${1:NSString* kind}, atIndexPath:${2:NSIndexPath* indexPath})'
  'referenceView':
    'prefix': 'referenceView'
    'body': 'referenceView()'
  'removeAllBehaviors':
    'prefix': 'removeAllBehaviors'
    'body': 'removeAllBehaviors()'
  'removeBehavior:':
    'prefix': 'removeBehavior:'
    'body': 'removeBehavior(${1:UIDynamicBehavior* behavior})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'updateItemUsingCurrentState:':
    'prefix': 'updateItemUsingCurrentState:'
    'body': 'updateItemUsingCurrentState(${1:id item})'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'addChildBehavior:':
    'prefix': 'addChildBehavior:'
    'body': 'addChildBehavior(${1:UIDynamicBehavior* behavior})'
  'childBehaviors':
    'prefix': 'childBehaviors'
    'body': 'childBehaviors()'
  'dynamicAnimator':
    'prefix': 'dynamicAnimator'
    'body': 'dynamicAnimator()'
  'removeChildBehavior:':
    'prefix': 'removeChildBehavior:'
    'body': 'removeChildBehavior(${1:UIDynamicBehavior* behavior})'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:void (^)(void) action})'
  'willMoveToAnimator:':
    'prefix': 'willMoveToAnimator:'
    'body': 'willMoveToAnimator(${1:UIDynamicAnimator* dynamicAnimator})'
  'addAngularVelocity:forItem:':
    'prefix': 'addAngularVelocity:forItem:'
    'body': 'addAngularVelocity(${1:CGFloat velocity}, forItem:${2:id item})'
  'addItem:':
    'prefix': 'addItem:'
    'body': 'addItem(${1:id item})'
  'addLinearVelocity:forItem:':
    'prefix': 'addLinearVelocity:forItem:'
    'body': 'addLinearVelocity(${1:CGPoint velocity}, forItem:${2:id item})'
  'allowsRotation':
    'prefix': 'allowsRotation'
    'body': 'allowsRotation()'
  'angularResistance':
    'prefix': 'angularResistance'
    'body': 'angularResistance()'
  'angularVelocityForItem:':
    'prefix': 'angularVelocityForItem:'
    'body': 'angularVelocityForItem(${1:id item})'
  'density':
    'prefix': 'density'
    'body': 'density()'
  'elasticity':
    'prefix': 'elasticity'
    'body': 'elasticity()'
  'friction':
    'prefix': 'friction'
    'body': 'friction()'
  'initWithItems:':
    'prefix': 'initWithItems:'
    'body': 'initWithItems(${1:NSArray* items})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'linearVelocityForItem:':
    'prefix': 'linearVelocityForItem:'
    'body': 'linearVelocityForItem(${1:id item})'
  'removeItem:':
    'prefix': 'removeItem:'
    'body': 'removeItem(${1:id item})'
  'resistance':
    'prefix': 'resistance'
    'body': 'resistance()'
  'setAllowsRotation:':
    'prefix': 'setAllowsRotation:'
    'body': 'setAllowsRotation(${1:BOOL allowsRotation})'
  'setAngularResistance:':
    'prefix': 'setAngularResistance:'
    'body': 'setAngularResistance(${1:CGFloat angularResistance})'
  'setDensity:':
    'prefix': 'setDensity:'
    'body': 'setDensity(${1:CGFloat density})'
  'setElasticity:':
    'prefix': 'setElasticity:'
    'body': 'setElasticity(${1:CGFloat elasticity})'
  'setFriction:':
    'prefix': 'setFriction:'
    'body': 'setFriction(${1:CGFloat friction})'
  'setResistance:':
    'prefix': 'setResistance:'
    'body': 'setResistance(${1:CGFloat resistance})'
  'allTouches':
    'prefix': 'allTouches'
    'body': 'allTouches()'
  'subtype':
    'prefix': 'subtype'
    'body': 'subtype()'
  'timestamp':
    'prefix': 'timestamp'
    'body': 'timestamp()'
  'touchesForGestureRecognizer:':
    'prefix': 'touchesForGestureRecognizer:'
    'body': 'touchesForGestureRecognizer(${1:UIGestureRecognizer* gesture})'
  'touchesForView:':
    'prefix': 'touchesForView:'
    'body': 'touchesForView(${1:UIView* view})'
  'touchesForWindow:':
    'prefix': 'touchesForWindow:'
    'body': 'touchesForWindow(${1:UIWindow* window})'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'ascender':
    'prefix': 'ascender'
    'body': 'ascender()'
  'UIFont.boldSystemFontOfSize:':
    'prefix': 'boldSystemFontOfSize:'
    'body': 'UIFont.boldSystemFontOfSize(${1:CGFloat fontSize})'
  'UIFont.buttonFontSize':
    'prefix': 'buttonFontSize'
    'body': 'UIFont.buttonFontSize()'
  'capHeight':
    'prefix': 'capHeight'
    'body': 'capHeight()'
  'descender':
    'prefix': 'descender'
    'body': 'descender()'
  'familyName':
    'prefix': 'familyName'
    'body': 'familyName()'
  'UIFont.familyNames':
    'prefix': 'familyNames'
    'body': 'UIFont.familyNames()'
  'fontDescriptor':
    'prefix': 'fontDescriptor'
    'body': 'fontDescriptor()'
  'fontName':
    'prefix': 'fontName'
    'body': 'fontName()'
  'UIFont.fontNamesForFamilyName:':
    'prefix': 'fontNamesForFamilyName:'
    'body': 'UIFont.fontNamesForFamilyName(${1:NSString* familyName})'
  'UIFont.fontWithDescriptor:size:':
    'prefix': 'fontWithDescriptor:size:'
    'body': 'UIFont.fontWithDescriptor(${1:UIFontDescriptor* descriptor}, size:${2:CGFloat pointSize})'
  'UIFont.fontWithName:size:':
    'prefix': 'fontWithName:size:'
    'body': 'UIFont.fontWithName(${1:NSString* fontName}, size:${2:CGFloat fontSize})'
  'fontWithSize:':
    'prefix': 'fontWithSize:'
    'body': 'fontWithSize(${1:CGFloat fontSize})'
  'UIFont.italicSystemFontOfSize:':
    'prefix': 'italicSystemFontOfSize:'
    'body': 'UIFont.italicSystemFontOfSize(${1:CGFloat fontSize})'
  'UIFont.labelFontSize':
    'prefix': 'labelFontSize'
    'body': 'UIFont.labelFontSize()'
  'leading':
    'prefix': 'leading'
    'body': 'leading()'
  'lineHeight':
    'prefix': 'lineHeight'
    'body': 'lineHeight()'
  'pointSize':
    'prefix': 'pointSize'
    'body': 'pointSize()'
  'UIFont.preferredFontForTextStyle:':
    'prefix': 'preferredFontForTextStyle:'
    'body': 'UIFont.preferredFontForTextStyle(${1:NSString* style})'
  'UIFont.smallSystemFontSize':
    'prefix': 'smallSystemFontSize'
    'body': 'UIFont.smallSystemFontSize()'
  'UIFont.systemFontOfSize:':
    'prefix': 'systemFontOfSize:'
    'body': 'UIFont.systemFontOfSize(${1:CGFloat fontSize})'
  'UIFont.systemFontSize':
    'prefix': 'systemFontSize'
    'body': 'UIFont.systemFontSize()'
  'xHeight':
    'prefix': 'xHeight'
    'body': 'xHeight()'
  'fontAttributes':
    'prefix': 'fontAttributes'
    'body': 'fontAttributes()'
  'fontDescriptorByAddingAttributes:':
    'prefix': 'fontDescriptorByAddingAttributes:'
    'body': 'fontDescriptorByAddingAttributes(${1:NSDictionary* attributes})'
  'fontDescriptorWithFace:':
    'prefix': 'fontDescriptorWithFace:'
    'body': 'fontDescriptorWithFace(${1:NSString* newFace})'
  'fontDescriptorWithFamily:':
    'prefix': 'fontDescriptorWithFamily:'
    'body': 'fontDescriptorWithFamily(${1:NSString* newFamily})'
  'UIFontDescriptor.fontDescriptorWithFontAttributes:':
    'prefix': 'fontDescriptorWithFontAttributes:'
    'body': 'UIFontDescriptor.fontDescriptorWithFontAttributes(${1:NSDictionary* attributes})'
  'fontDescriptorWithMatrix:':
    'prefix': 'fontDescriptorWithMatrix:'
    'body': 'fontDescriptorWithMatrix(${1:CGAffineTransform matrix})'
  'UIFontDescriptor.fontDescriptorWithName:matrix:':
    'prefix': 'fontDescriptorWithName:matrix:'
    'body': 'UIFontDescriptor.fontDescriptorWithName(${1:NSString* fontName}, matrix:${2:CGAffineTransform matrix})'
  'UIFontDescriptor.fontDescriptorWithName:size:':
    'prefix': 'fontDescriptorWithName:size:'
    'body': 'UIFontDescriptor.fontDescriptorWithName(${1:NSString* fontName}, size:${2:CGFloat size})'
  'fontDescriptorWithSize:':
    'prefix': 'fontDescriptorWithSize:'
    'body': 'fontDescriptorWithSize(${1:CGFloat newPointSize})'
  'fontDescriptorWithSymbolicTraits:':
    'prefix': 'fontDescriptorWithSymbolicTraits:'
    'body': 'fontDescriptorWithSymbolicTraits(${1:UIFontDescriptorSymbolicTraits symbolicTraits})'
  'initWithFontAttributes:':
    'prefix': 'initWithFontAttributes:'
    'body': 'initWithFontAttributes(${1:NSDictionary* attributes})'
  'matchingFontDescriptorsWithMandatoryKeys:':
    'prefix': 'matchingFontDescriptorsWithMandatoryKeys:'
    'body': 'matchingFontDescriptorsWithMandatoryKeys(${1:NSSet* mandatoryKeys})'
  'matrix':
    'prefix': 'matrix'
    'body': 'matrix()'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:NSString* anAttribute})'
  'pointSize':
    'prefix': 'pointSize'
    'body': 'pointSize()'
  'postscriptName':
    'prefix': 'postscriptName'
    'body': 'postscriptName()'
  'UIFontDescriptor.preferredFontDescriptorWithTextStyle:':
    'prefix': 'preferredFontDescriptorWithTextStyle:'
    'body': 'UIFontDescriptor.preferredFontDescriptorWithTextStyle(${1:NSString* style})'
  'symbolicTraits':
    'prefix': 'symbolicTraits'
    'body': 'symbolicTraits()'
  'addTarget:action:':
    'prefix': 'addTarget:action:'
    'body': 'addTarget(${1:id target}, action:${2:SEL action})'
  'canBePreventedByGestureRecognizer:':
    'prefix': 'canBePreventedByGestureRecognizer:'
    'body': 'canBePreventedByGestureRecognizer(${1:UIGestureRecognizer* preventingGestureRecognizer})'
  'canPreventGestureRecognizer:':
    'prefix': 'canPreventGestureRecognizer:'
    'body': 'canPreventGestureRecognizer(${1:UIGestureRecognizer* preventedGestureRecognizer})'
  'cancelsTouchesInView':
    'prefix': 'cancelsTouchesInView'
    'body': 'cancelsTouchesInView()'
  'delaysTouchesBegan':
    'prefix': 'delaysTouchesBegan'
    'body': 'delaysTouchesBegan()'
  'delaysTouchesEnded':
    'prefix': 'delaysTouchesEnded'
    'body': 'delaysTouchesEnded()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'ignoreTouch:forEvent:':
    'prefix': 'ignoreTouch:forEvent:'
    'body': 'ignoreTouch(${1:UITouch* touch}, forEvent:${2:UIEvent* event})'
  'initWithTarget:action:':
    'prefix': 'initWithTarget:action:'
    'body': 'initWithTarget(${1:id target}, action:${2:SEL action})'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'locationInView:':
    'prefix': 'locationInView:'
    'body': 'locationInView(${1:UIView* view})'
  'locationOfTouch:inView:':
    'prefix': 'locationOfTouch:inView:'
    'body': 'locationOfTouch(${1:NSUInteger touchIndex}, inView:${2:UIView* view})'
  'numberOfTouches':
    'prefix': 'numberOfTouches'
    'body': 'numberOfTouches()'
  'removeTarget:action:':
    'prefix': 'removeTarget:action:'
    'body': 'removeTarget(${1:id target}, action:${2:SEL action})'
  'requireGestureRecognizerToFail:':
    'prefix': 'requireGestureRecognizerToFail:'
    'body': 'requireGestureRecognizerToFail(${1:UIGestureRecognizer* otherGestureRecognizer})'
  'reset':
    'prefix': 'reset'
    'body': 'reset()'
  'setCancelsTouchesInView:':
    'prefix': 'setCancelsTouchesInView:'
    'body': 'setCancelsTouchesInView(${1:BOOL cancelsTouchesInView})'
  'setDelaysTouchesBegan:':
    'prefix': 'setDelaysTouchesBegan:'
    'body': 'setDelaysTouchesBegan(${1:BOOL delaysTouchesBegan})'
  'setDelaysTouchesEnded:':
    'prefix': 'setDelaysTouchesEnded:'
    'body': 'setDelaysTouchesEnded(${1:BOOL delaysTouchesEnded})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setState:':
    'prefix': 'setState:'
    'body': 'setState(${1:UIGestureRecognizerState state})'
  'shouldBeRequiredToFailByGestureRecognizer:':
    'prefix': 'shouldBeRequiredToFailByGestureRecognizer:'
    'body': 'shouldBeRequiredToFailByGestureRecognizer(${1:UIGestureRecognizer* otherGestureRecognizer})'
  'shouldRequireFailureOfGestureRecognizer:':
    'prefix': 'shouldRequireFailureOfGestureRecognizer:'
    'body': 'shouldRequireFailureOfGestureRecognizer(${1:UIGestureRecognizer* otherGestureRecognizer})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'touchesBegan:withEvent:':
    'prefix': 'touchesBegan:withEvent:'
    'body': 'touchesBegan(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesCancelled:withEvent:':
    'prefix': 'touchesCancelled:withEvent:'
    'body': 'touchesCancelled(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesEnded:withEvent:':
    'prefix': 'touchesEnded:withEvent:'
    'body': 'touchesEnded(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesMoved:withEvent:':
    'prefix': 'touchesMoved:withEvent:'
    'body': 'touchesMoved(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'addItem:':
    'prefix': 'addItem:'
    'body': 'addItem(${1:id item})'
  'angle':
    'prefix': 'angle'
    'body': 'angle()'
  'gravityDirection':
    'prefix': 'gravityDirection'
    'body': 'gravityDirection()'
  'initWithItems:':
    'prefix': 'initWithItems:'
    'body': 'initWithItems(${1:NSArray* items})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'magnitude':
    'prefix': 'magnitude'
    'body': 'magnitude()'
  'removeItem:':
    'prefix': 'removeItem:'
    'body': 'removeItem(${1:id item})'
  'setAngle:':
    'prefix': 'setAngle:'
    'body': 'setAngle(${1:CGFloat angle})'
  'setAngle:magnitude:':
    'prefix': 'setAngle:magnitude:'
    'body': 'setAngle(${1:CGFloat angle}, magnitude:${2:CGFloat magnitude})'
  'setGravityDirection:':
    'prefix': 'setGravityDirection:'
    'body': 'setGravityDirection(${1:CGVector gravityDirection})'
  'setMagnitude:':
    'prefix': 'setMagnitude:'
    'body': 'setMagnitude(${1:CGFloat magnitude})'
  'CGImage':
    'prefix': 'CGImage'
    'body': 'CGImage()'
  'CIImage':
    'prefix': 'CIImage'
    'body': 'CIImage()'
  'alignmentRectInsets':
    'prefix': 'alignmentRectInsets'
    'body': 'alignmentRectInsets()'
  'UIImage.animatedImageNamed:duration:':
    'prefix': 'animatedImageNamed:duration:'
    'body': 'UIImage.animatedImageNamed(${1:NSString* name}, duration:${2:NSTimeInterval duration})'
  'UIImage.animatedImageWithImages:duration:':
    'prefix': 'animatedImageWithImages:duration:'
    'body': 'UIImage.animatedImageWithImages(${1:NSArray* images}, duration:${2:NSTimeInterval duration})'
  'UIImage.animatedResizableImageNamed:capInsets:duration:':
    'prefix': 'animatedResizableImageNamed:capInsets:duration:'
    'body': 'UIImage.animatedResizableImageNamed(${1:NSString* name}, capInsets:${2:UIEdgeInsets capInsets}, duration:${3:NSTimeInterval duration})'
  'UIImage.animatedResizableImageNamed:capInsets:resizingMode:duration:':
    'prefix': 'animatedResizableImageNamed:capInsets:resizingMode:duration:'
    'body': 'UIImage.animatedResizableImageNamed(${1:NSString* name}, capInsets:${2:UIEdgeInsets capInsets}, resizingMode:${3:UIImageResizingMode resizingMode}, duration:${4:NSTimeInterval duration})'
  'capInsets':
    'prefix': 'capInsets'
    'body': 'capInsets()'
  'drawAsPatternInRect:':
    'prefix': 'drawAsPatternInRect:'
    'body': 'drawAsPatternInRect(${1:CGRect rect})'
  'drawAtPoint:':
    'prefix': 'drawAtPoint:'
    'body': 'drawAtPoint(${1:CGPoint point})'
  'drawAtPoint:blendMode:alpha:':
    'prefix': 'drawAtPoint:blendMode:alpha:'
    'body': 'drawAtPoint(${1:CGPoint point}, blendMode:${2:CGBlendMode blendMode}, alpha:${3:CGFloat alpha})'
  'drawInRect:':
    'prefix': 'drawInRect:'
    'body': 'drawInRect(${1:CGRect rect})'
  'drawInRect:blendMode:alpha:':
    'prefix': 'drawInRect:blendMode:alpha:'
    'body': 'drawInRect(${1:CGRect rect}, blendMode:${2:CGBlendMode blendMode}, alpha:${3:CGFloat alpha})'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'UIImage.imageNamed:':
    'prefix': 'imageNamed:'
    'body': 'UIImage.imageNamed(${1:NSString* name})'
  'imageOrientation':
    'prefix': 'imageOrientation'
    'body': 'imageOrientation()'
  'imageWithAlignmentRectInsets:':
    'prefix': 'imageWithAlignmentRectInsets:'
    'body': 'imageWithAlignmentRectInsets(${1:UIEdgeInsets alignmentInsets})'
  'UIImage.imageWithCGImage:':
    'prefix': 'imageWithCGImage:'
    'body': 'UIImage.imageWithCGImage(${1:CGImageRef cgImage})'
  'UIImage.imageWithCGImage:scale:orientation:':
    'prefix': 'imageWithCGImage:scale:orientation:'
    'body': 'UIImage.imageWithCGImage(${1:CGImageRef cgImage}, scale:${2:CGFloat scale}, orientation:${3:UIImageOrientation orientation})'
  'UIImage.imageWithCIImage:':
    'prefix': 'imageWithCIImage:'
    'body': 'UIImage.imageWithCIImage(${1:CIImage* ciImage})'
  'UIImage.imageWithCIImage:scale:orientation:':
    'prefix': 'imageWithCIImage:scale:orientation:'
    'body': 'UIImage.imageWithCIImage(${1:CIImage* ciImage}, scale:${2:CGFloat scale}, orientation:${3:UIImageOrientation orientation})'
  'UIImage.imageWithContentsOfFile:':
    'prefix': 'imageWithContentsOfFile:'
    'body': 'UIImage.imageWithContentsOfFile(${1:NSString* path})'
  'UIImage.imageWithData:':
    'prefix': 'imageWithData:'
    'body': 'UIImage.imageWithData(${1:NSData* data})'
  'UIImage.imageWithData:scale:':
    'prefix': 'imageWithData:scale:'
    'body': 'UIImage.imageWithData(${1:NSData* data}, scale:${2:CGFloat scale})'
  'imageWithRenderingMode:':
    'prefix': 'imageWithRenderingMode:'
    'body': 'imageWithRenderingMode(${1:UIImageRenderingMode renderingMode})'
  'images':
    'prefix': 'images'
    'body': 'images()'
  'initWithCGImage:':
    'prefix': 'initWithCGImage:'
    'body': 'initWithCGImage(${1:CGImageRef cgImage})'
  'initWithCGImage:scale:orientation:':
    'prefix': 'initWithCGImage:scale:orientation:'
    'body': 'initWithCGImage(${1:CGImageRef cgImage}, scale:${2:CGFloat scale}, orientation:${3:UIImageOrientation orientation})'
  'initWithCIImage:':
    'prefix': 'initWithCIImage:'
    'body': 'initWithCIImage(${1:CIImage* ciImage})'
  'initWithCIImage:scale:orientation:':
    'prefix': 'initWithCIImage:scale:orientation:'
    'body': 'initWithCIImage(${1:CIImage* ciImage}, scale:${2:CGFloat scale}, orientation:${3:UIImageOrientation orientation})'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* path})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithData:scale:':
    'prefix': 'initWithData:scale:'
    'body': 'initWithData(${1:NSData* data}, scale:${2:CGFloat scale})'
  'leftCapWidth':
    'prefix': 'leftCapWidth'
    'body': 'leftCapWidth()'
  'renderingMode':
    'prefix': 'renderingMode'
    'body': 'renderingMode()'
  'resizableImageWithCapInsets:':
    'prefix': 'resizableImageWithCapInsets:'
    'body': 'resizableImageWithCapInsets(${1:UIEdgeInsets capInsets})'
  'resizableImageWithCapInsets:resizingMode:':
    'prefix': 'resizableImageWithCapInsets:resizingMode:'
    'body': 'resizableImageWithCapInsets(${1:UIEdgeInsets capInsets}, resizingMode:${2:UIImageResizingMode resizingMode})'
  'resizingMode':
    'prefix': 'resizingMode'
    'body': 'resizingMode()'
  'scale':
    'prefix': 'scale'
    'body': 'scale()'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'stretchableImageWithLeftCapWidth:topCapHeight:':
    'prefix': 'stretchableImageWithLeftCapWidth:topCapHeight:'
    'body': 'stretchableImageWithLeftCapWidth(${1:NSInteger leftCapWidth}, topCapHeight:${2:NSInteger topCapHeight})'
  'topCapHeight':
    'prefix': 'topCapHeight'
    'body': 'topCapHeight()'
  'allowsEditing':
    'prefix': 'allowsEditing'
    'body': 'allowsEditing()'
  'allowsImageEditing':
    'prefix': 'allowsImageEditing'
    'body': 'allowsImageEditing()'
  'UIImagePickerController.availableCaptureModesForCameraDevice:':
    'prefix': 'availableCaptureModesForCameraDevice:'
    'body': 'UIImagePickerController.availableCaptureModesForCameraDevice(${1:UIImagePickerControllerCameraDevice cameraDevice})'
  'UIImagePickerController.availableMediaTypesForSourceType:':
    'prefix': 'availableMediaTypesForSourceType:'
    'body': 'UIImagePickerController.availableMediaTypesForSourceType(${1:UIImagePickerControllerSourceType sourceType})'
  'cameraCaptureMode':
    'prefix': 'cameraCaptureMode'
    'body': 'cameraCaptureMode()'
  'cameraDevice':
    'prefix': 'cameraDevice'
    'body': 'cameraDevice()'
  'cameraFlashMode':
    'prefix': 'cameraFlashMode'
    'body': 'cameraFlashMode()'
  'cameraOverlayView':
    'prefix': 'cameraOverlayView'
    'body': 'cameraOverlayView()'
  'cameraViewTransform':
    'prefix': 'cameraViewTransform'
    'body': 'cameraViewTransform()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'UIImagePickerController.isCameraDeviceAvailable:':
    'prefix': 'isCameraDeviceAvailable:'
    'body': 'UIImagePickerController.isCameraDeviceAvailable(${1:UIImagePickerControllerCameraDevice cameraDevice})'
  'UIImagePickerController.isFlashAvailableForCameraDevice:':
    'prefix': 'isFlashAvailableForCameraDevice:'
    'body': 'UIImagePickerController.isFlashAvailableForCameraDevice(${1:UIImagePickerControllerCameraDevice cameraDevice})'
  'UIImagePickerController.isSourceTypeAvailable:':
    'prefix': 'isSourceTypeAvailable:'
    'body': 'UIImagePickerController.isSourceTypeAvailable(${1:UIImagePickerControllerSourceType sourceType})'
  'mediaTypes':
    'prefix': 'mediaTypes'
    'body': 'mediaTypes()'
  'setAllowsEditing:':
    'prefix': 'setAllowsEditing:'
    'body': 'setAllowsEditing(${1:BOOL allowsEditing})'
  'setAllowsImageEditing:':
    'prefix': 'setAllowsImageEditing:'
    'body': 'setAllowsImageEditing(${1:BOOL allowsImageEditing})'
  'setCameraCaptureMode:':
    'prefix': 'setCameraCaptureMode:'
    'body': 'setCameraCaptureMode(${1:UIImagePickerControllerCameraCaptureMode cameraCaptureMode})'
  'setCameraDevice:':
    'prefix': 'setCameraDevice:'
    'body': 'setCameraDevice(${1:UIImagePickerControllerCameraDevice cameraDevice})'
  'setCameraFlashMode:':
    'prefix': 'setCameraFlashMode:'
    'body': 'setCameraFlashMode(${1:UIImagePickerControllerCameraFlashMode cameraFlashMode})'
  'setCameraOverlayView:':
    'prefix': 'setCameraOverlayView:'
    'body': 'setCameraOverlayView(${1:UIView* cameraOverlayView})'
  'setCameraViewTransform:':
    'prefix': 'setCameraViewTransform:'
    'body': 'setCameraViewTransform(${1:CGAffineTransform cameraViewTransform})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setMediaTypes:':
    'prefix': 'setMediaTypes:'
    'body': 'setMediaTypes(${1:NSArray* mediaTypes})'
  'setShowsCameraControls:':
    'prefix': 'setShowsCameraControls:'
    'body': 'setShowsCameraControls(${1:BOOL showsCameraControls})'
  'setSourceType:':
    'prefix': 'setSourceType:'
    'body': 'setSourceType(${1:UIImagePickerControllerSourceType sourceType})'
  'setVideoMaximumDuration:':
    'prefix': 'setVideoMaximumDuration:'
    'body': 'setVideoMaximumDuration(${1:NSTimeInterval videoMaximumDuration})'
  'setVideoQuality:':
    'prefix': 'setVideoQuality:'
    'body': 'setVideoQuality(${1:UIImagePickerControllerQualityType videoQuality})'
  'showsCameraControls':
    'prefix': 'showsCameraControls'
    'body': 'showsCameraControls()'
  'sourceType':
    'prefix': 'sourceType'
    'body': 'sourceType()'
  'startVideoCapture':
    'prefix': 'startVideoCapture'
    'body': 'startVideoCapture()'
  'stopVideoCapture':
    'prefix': 'stopVideoCapture'
    'body': 'stopVideoCapture()'
  'takePicture':
    'prefix': 'takePicture'
    'body': 'takePicture()'
  'videoMaximumDuration':
    'prefix': 'videoMaximumDuration'
    'body': 'videoMaximumDuration()'
  'videoQuality':
    'prefix': 'videoQuality'
    'body': 'videoQuality()'
  'animationDuration':
    'prefix': 'animationDuration'
    'body': 'animationDuration()'
  'animationImages':
    'prefix': 'animationImages'
    'body': 'animationImages()'
  'animationRepeatCount':
    'prefix': 'animationRepeatCount'
    'body': 'animationRepeatCount()'
  'highlightedAnimationImages':
    'prefix': 'highlightedAnimationImages'
    'body': 'highlightedAnimationImages()'
  'highlightedImage':
    'prefix': 'highlightedImage'
    'body': 'highlightedImage()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithImage:':
    'prefix': 'initWithImage:'
    'body': 'initWithImage(${1:UIImage* image})'
  'initWithImage:highlightedImage:':
    'prefix': 'initWithImage:highlightedImage:'
    'body': 'initWithImage(${1:UIImage* image}, highlightedImage:${2:UIImage* highlightedImage})'
  'isAnimating':
    'prefix': 'isAnimating'
    'body': 'isAnimating()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isUserInteractionEnabled':
    'prefix': 'isUserInteractionEnabled'
    'body': 'isUserInteractionEnabled()'
  'setAnimationDuration:':
    'prefix': 'setAnimationDuration:'
    'body': 'setAnimationDuration(${1:NSTimeInterval animationDuration})'
  'setAnimationImages:':
    'prefix': 'setAnimationImages:'
    'body': 'setAnimationImages(${1:NSArray* animationImages})'
  'setAnimationRepeatCount:':
    'prefix': 'setAnimationRepeatCount:'
    'body': 'setAnimationRepeatCount(${1:NSInteger animationRepeatCount})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL highlighted})'
  'setHighlightedAnimationImages:':
    'prefix': 'setHighlightedAnimationImages:'
    'body': 'setHighlightedAnimationImages(${1:NSArray* highlightedAnimationImages})'
  'setHighlightedImage:':
    'prefix': 'setHighlightedImage:'
    'body': 'setHighlightedImage(${1:UIImage* highlightedImage})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:UIImage* image})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setUserInteractionEnabled:':
    'prefix': 'setUserInteractionEnabled:'
    'body': 'setUserInteractionEnabled(${1:BOOL userInteractionEnabled})'
  'startAnimating':
    'prefix': 'startAnimating'
    'body': 'startAnimating()'
  'stopAnimating':
    'prefix': 'stopAnimating'
    'body': 'stopAnimating()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'initWithFrame:inputViewStyle:':
    'prefix': 'initWithFrame:inputViewStyle:'
    'body': 'initWithFrame(${1:CGRect frame}, inputViewStyle:${2:UIInputViewStyle inputViewStyle})'
  'inputViewStyle':
    'prefix': 'inputViewStyle'
    'body': 'inputViewStyle()'
  'initWithKeyPath:type:':
    'prefix': 'initWithKeyPath:type:'
    'body': 'initWithKeyPath(${1:NSString* keyPath}, type:${2:UIInterpolatingMotionEffectType type})'
  'keyPath':
    'prefix': 'keyPath'
    'body': 'KeyPath()'
  'maximumRelativeValue':
    'prefix': 'maximumRelativeValue'
    'body': 'maximumRelativeValue()'
  'minimumRelativeValue':
    'prefix': 'minimumRelativeValue'
    'body': 'minimumRelativeValue()'
  'setMaximumRelativeValue:':
    'prefix': 'setMaximumRelativeValue:'
    'body': 'setMaximumRelativeValue(${1:id maximumRelativeValue})'
  'setMinimumRelativeValue:':
    'prefix': 'setMinimumRelativeValue:'
    'body': 'setMinimumRelativeValue(${1:id minimumRelativeValue})'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'input':
    'prefix': 'input'
    'body': 'input()'
  'UIKeyCommand.keyCommandWithInput:modifierFlags:action:':
    'prefix': 'keyCommandWithInput:modifierFlags:action:'
    'body': 'UIKeyCommand.keyCommandWithInput(${1:NSString* input}, modifierFlags:${2:UIKeyModifierFlags modifierFlags}, action:${3:SEL action})'
  'modifierFlags':
    'prefix': 'modifierFlags'
    'body': 'modifierFlags()'
  'adjustsFontSizeToFitWidth':
    'prefix': 'adjustsFontSizeToFitWidth'
    'body': 'adjustsFontSizeToFitWidth()'
  'adjustsLetterSpacingToFitWidth':
    'prefix': 'adjustsLetterSpacingToFitWidth'
    'body': 'adjustsLetterSpacingToFitWidth()'
  'attributedText':
    'prefix': 'attributedText'
    'body': 'attributedText()'
  'baselineAdjustment':
    'prefix': 'baselineAdjustment'
    'body': 'baselineAdjustment()'
  'drawTextInRect:':
    'prefix': 'drawTextInRect:'
    'body': 'drawTextInRect(${1:CGRect rect})'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'highlightedTextColor':
    'prefix': 'highlightedTextColor'
    'body': 'highlightedTextColor()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isUserInteractionEnabled':
    'prefix': 'isUserInteractionEnabled'
    'body': 'isUserInteractionEnabled()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'minimumFontSize':
    'prefix': 'minimumFontSize'
    'body': 'minimumFontSize()'
  'minimumScaleFactor':
    'prefix': 'minimumScaleFactor'
    'body': 'minimumScaleFactor()'
  'numberOfLines':
    'prefix': 'numberOfLines'
    'body': 'numberOfLines()'
  'preferredMaxLayoutWidth':
    'prefix': 'preferredMaxLayoutWidth'
    'body': 'preferredMaxLayoutWidth()'
  'setAdjustsFontSizeToFitWidth:':
    'prefix': 'setAdjustsFontSizeToFitWidth:'
    'body': 'setAdjustsFontSizeToFitWidth(${1:BOOL adjustsFontSizeToFitWidth})'
  'setAdjustsLetterSpacingToFitWidth:':
    'prefix': 'setAdjustsLetterSpacingToFitWidth:'
    'body': 'setAdjustsLetterSpacingToFitWidth(${1:BOOL adjustsLetterSpacingToFitWidth})'
  'setAttributedText:':
    'prefix': 'setAttributedText:'
    'body': 'setAttributedText(${1:NSAttributedString* attributedText})'
  'setBaselineAdjustment:':
    'prefix': 'setBaselineAdjustment:'
    'body': 'setBaselineAdjustment(${1:UIBaselineAdjustment baselineAdjustment})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL highlighted})'
  'setHighlightedTextColor:':
    'prefix': 'setHighlightedTextColor:'
    'body': 'setHighlightedTextColor(${1:UIColor* highlightedTextColor})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode lineBreakMode})'
  'setMinimumFontSize:':
    'prefix': 'setMinimumFontSize:'
    'body': 'setMinimumFontSize(${1:CGFloat minimumFontSize})'
  'setMinimumScaleFactor:':
    'prefix': 'setMinimumScaleFactor:'
    'body': 'setMinimumScaleFactor(${1:CGFloat minimumScaleFactor})'
  'setNumberOfLines:':
    'prefix': 'setNumberOfLines:'
    'body': 'setNumberOfLines(${1:NSInteger numberOfLines})'
  'setPreferredMaxLayoutWidth:':
    'prefix': 'setPreferredMaxLayoutWidth:'
    'body': 'setPreferredMaxLayoutWidth(${1:CGFloat preferredMaxLayoutWidth})'
  'setShadowColor:':
    'prefix': 'setShadowColor:'
    'body': 'setShadowColor(${1:UIColor* shadowColor})'
  'setShadowOffset:':
    'prefix': 'setShadowOffset:'
    'body': 'setShadowOffset(${1:CGSize shadowOffset})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment textAlignment})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:UIColor* textColor})'
  'setUserInteractionEnabled:':
    'prefix': 'setUserInteractionEnabled:'
    'body': 'setUserInteractionEnabled(${1:BOOL userInteractionEnabled})'
  'shadowColor':
    'prefix': 'shadowColor'
    'body': 'shadowColor()'
  'shadowOffset':
    'prefix': 'shadowOffset'
    'body': 'shadowOffset()'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'textAlignment':
    'prefix': 'textAlignment'
    'body': 'textAlignment()'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'textRectForBounds:limitedToNumberOfLines:':
    'prefix': 'textRectForBounds:limitedToNumberOfLines:'
    'body': 'textRectForBounds(${1:CGRect bounds}, limitedToNumberOfLines:${2:NSInteger numberOfLines})'
  'alertAction':
    'prefix': 'alertAction'
    'body': 'alertAction()'
  'alertBody':
    'prefix': 'alertBody'
    'body': 'alertBody()'
  'alertLaunchImage':
    'prefix': 'alertLaunchImage'
    'body': 'alertLaunchImage()'
  'applicationIconBadgeNumber':
    'prefix': 'applicationIconBadgeNumber'
    'body': 'applicationIconBadgeNumber()'
  'fireDate':
    'prefix': 'fireDate'
    'body': 'fireDate()'
  'hasAction':
    'prefix': 'hasAction'
    'body': 'hasAction()'
  'repeatCalendar':
    'prefix': 'repeatCalendar'
    'body': 'repeatCalendar()'
  'repeatInterval':
    'prefix': 'repeatInterval'
    'body': 'repeatInterval()'
  'setAlertAction:':
    'prefix': 'setAlertAction:'
    'body': 'setAlertAction(${1:NSString* alertAction})'
  'setAlertBody:':
    'prefix': 'setAlertBody:'
    'body': 'setAlertBody(${1:NSString* alertBody})'
  'setAlertLaunchImage:':
    'prefix': 'setAlertLaunchImage:'
    'body': 'setAlertLaunchImage(${1:NSString* alertLaunchImage})'
  'setApplicationIconBadgeNumber:':
    'prefix': 'setApplicationIconBadgeNumber:'
    'body': 'setApplicationIconBadgeNumber(${1:NSInteger applicationIconBadgeNumber})'
  'setFireDate:':
    'prefix': 'setFireDate:'
    'body': 'setFireDate(${1:NSDate* fireDate})'
  'setHasAction:':
    'prefix': 'setHasAction:'
    'body': 'setHasAction(${1:BOOL hasAction})'
  'setRepeatCalendar:':
    'prefix': 'setRepeatCalendar:'
    'body': 'setRepeatCalendar(${1:NSCalendar* repeatCalendar})'
  'setRepeatInterval:':
    'prefix': 'setRepeatInterval:'
    'body': 'setRepeatInterval(${1:NSCalendarUnit repeatInterval})'
  'setSoundName:':
    'prefix': 'setSoundName:'
    'body': 'setSoundName(${1:NSString* soundName})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* timeZone})'
  'setUserInfo:':
    'prefix': 'setUserInfo:'
    'body': 'setUserInfo(${1:NSDictionary* userInfo})'
  'soundName':
    'prefix': 'soundName'
    'body': 'soundName()'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'UILocalizedIndexedCollation.currentCollation':
    'prefix': 'currentCollation'
    'body': 'UILocalizedIndexedCollation.currentCollation()'
  'sectionForObject:collationStringSelector:':
    'prefix': 'sectionForObject:collationStringSelector:'
    'body': 'sectionForObject(${1:id object}, collationStringSelector:${2:SEL selector})'
  'sectionForSectionIndexTitleAtIndex:':
    'prefix': 'sectionForSectionIndexTitleAtIndex:'
    'body': 'sectionForSectionIndexTitleAtIndex(${1:NSInteger indexTitleIndex})'
  'sectionIndexTitles':
    'prefix': 'sectionIndexTitles'
    'body': 'sectionIndexTitles()'
  'sectionTitles':
    'prefix': 'sectionTitles'
    'body': 'sectionTitles()'
  'sortedArrayFromArray:collationStringSelector:':
    'prefix': 'sortedArrayFromArray:collationStringSelector:'
    'body': 'sortedArrayFromArray(${1:NSArray* array}, collationStringSelector:${2:SEL selector})'
  'allowableMovement':
    'prefix': 'allowableMovement'
    'body': 'allowableMovement()'
  'minimumPressDuration':
    'prefix': 'minimumPressDuration'
    'body': 'minimumPressDuration()'
  'numberOfTapsRequired':
    'prefix': 'numberOfTapsRequired'
    'body': 'numberOfTapsRequired()'
  'numberOfTouchesRequired':
    'prefix': 'numberOfTouchesRequired'
    'body': 'numberOfTouchesRequired()'
  'setAllowableMovement:':
    'prefix': 'setAllowableMovement:'
    'body': 'setAllowableMovement(${1:CGFloat allowableMovement})'
  'setMinimumPressDuration:':
    'prefix': 'setMinimumPressDuration:'
    'body': 'setMinimumPressDuration(${1:CFTimeInterval minimumPressDuration})'
  'setNumberOfTapsRequired:':
    'prefix': 'setNumberOfTapsRequired:'
    'body': 'setNumberOfTapsRequired(${1:NSUInteger numberOfTapsRequired})'
  'setNumberOfTouchesRequired:':
    'prefix': 'setNumberOfTouchesRequired:'
    'body': 'setNumberOfTouchesRequired(${1:NSUInteger numberOfTouchesRequired})'
  'additionalContentForURL:error:':
    'prefix': 'additionalContentForURL:error:'
    'body': 'additionalContentForURL(${1:NSURL* absoluteURL}, error:${2:NSError** error})'
  'configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:':
    'prefix': 'configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'
    'body': 'configurePersistentStoreCoordinatorForURL(${1:NSURL* storeURL}, ofType:${2:NSString* fileType}, modelConfiguration:${3:NSString* configuration}, storeOptions:${4:NSDictionary* storeOptions}, error:${5:NSError** error})'
  'managedObjectContext':
    'prefix': 'managedObjectContext'
    'body': 'managedObjectContext()'
  'managedObjectModel':
    'prefix': 'managedObjectModel'
    'body': 'managedObjectModel()'
  'modelConfiguration':
    'prefix': 'modelConfiguration'
    'body': 'modelConfiguration()'
  'UIManagedDocument.persistentStoreName':
    'prefix': 'persistentStoreName'
    'body': 'UIManagedDocument.persistentStoreName()'
  'persistentStoreOptions':
    'prefix': 'persistentStoreOptions'
    'body': 'persistentStoreOptions()'
  'persistentStoreTypeForFileType:':
    'prefix': 'persistentStoreTypeForFileType:'
    'body': 'persistentStoreTypeForFileType(${1:NSString* fileType})'
  'readAdditionalContentFromURL:error:':
    'prefix': 'readAdditionalContentFromURL:error:'
    'body': 'readAdditionalContentFromURL(${1:NSURL* absoluteURL}, error:${2:NSError** error})'
  'setModelConfiguration:':
    'prefix': 'setModelConfiguration:'
    'body': 'setModelConfiguration(${1:NSString* modelConfiguration})'
  'setPersistentStoreOptions:':
    'prefix': 'setPersistentStoreOptions:'
    'body': 'setPersistentStoreOptions(${1:NSDictionary* persistentStoreOptions})'
  'writeAdditionalContent:toURL:originalContentsURL:error:':
    'prefix': 'writeAdditionalContent:toURL:originalContentsURL:error:'
    'body': 'writeAdditionalContent(${1:id content}, toURL:${2:NSURL* absoluteURL}, originalContentsURL:${3:NSURL* absoluteOriginalContentsURL}, error:${4:NSError** error})'
  'initWithMarkupText:':
    'prefix': 'initWithMarkupText:'
    'body': 'initWithMarkupText(${1:NSString* markupText})'
  'markupText':
    'prefix': 'markupText'
    'body': 'markupText()'
  'setMarkupText:':
    'prefix': 'setMarkupText:'
    'body': 'setMarkupText(${1:NSString* markupText})'
  'arrowDirection':
    'prefix': 'arrowDirection'
    'body': 'arrowDirection()'
  'isMenuVisible':
    'prefix': 'isMenuVisible'
    'body': 'isMenuVisible()'
  'menuFrame':
    'prefix': 'menuFrame'
    'body': 'menuFrame()'
  'menuItems':
    'prefix': 'menuItems'
    'body': 'menuItems()'
  'setArrowDirection:':
    'prefix': 'setArrowDirection:'
    'body': 'setArrowDirection(${1:UIMenuControllerArrowDirection arrowDirection})'
  'setMenuItems:':
    'prefix': 'setMenuItems:'
    'body': 'setMenuItems(${1:NSArray* menuItems})'
  'setMenuVisible:':
    'prefix': 'setMenuVisible:'
    'body': 'setMenuVisible(${1:BOOL menuVisible})'
  'setMenuVisible:animated:':
    'prefix': 'setMenuVisible:animated:'
    'body': 'setMenuVisible(${1:BOOL menuVisible}, animated:${2:BOOL animated})'
  'setTargetRect:inView:':
    'prefix': 'setTargetRect:inView:'
    'body': 'setTargetRect(${1:CGRect targetRect}, inView:${2:UIView* targetView})'
  'UIMenuController.sharedMenuController':
    'prefix': 'sharedMenuController'
    'body': 'UIMenuController.sharedMenuController()'
  'update':
    'prefix': 'update'
    'body': 'update()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'initWithTitle:action:':
    'prefix': 'initWithTitle:action:'
    'body': 'initWithTitle(${1:NSString* title}, action:${2:SEL action})'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL action})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'keyPathsAndRelativeValuesForViewerOffset:':
    'prefix': 'keyPathsAndRelativeValuesForViewerOffset:'
    'body': 'KeyPathsAndRelativeValuesForViewerOffset(${1:UIOffset viewerOffset})'
  'motionEffects':
    'prefix': 'motionEffects'
    'body': 'motionEffects()'
  'setMotionEffects:':
    'prefix': 'setMotionEffects:'
    'body': 'setMotionEffects(${1:NSArray* motionEffects})'
  'backIndicatorImage':
    'prefix': 'backIndicatorImage'
    'body': 'backIndicatorImage()'
  'backIndicatorTransitionMaskImage':
    'prefix': 'backIndicatorTransitionMaskImage'
    'body': 'backIndicatorTransitionMaskImage()'
  'backItem':
    'prefix': 'backItem'
    'body': 'backItem()'
  'backgroundImageForBarMetrics:':
    'prefix': 'backgroundImageForBarMetrics:'
    'body': 'backgroundImageForBarMetrics(${1:UIBarMetrics barMetrics})'
  'backgroundImageForBarPosition:barMetrics:':
    'prefix': 'backgroundImageForBarPosition:barMetrics:'
    'body': 'backgroundImageForBarPosition(${1:UIBarPosition barPosition}, barMetrics:${2:UIBarMetrics barMetrics})'
  'barStyle':
    'prefix': 'barStyle'
    'body': 'barStyle()'
  'barTintColor':
    'prefix': 'barTintColor'
    'body': 'barTintColor()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'isTranslucent':
    'prefix': 'isTranslucent'
    'body': 'isTranslucent()'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'popNavigationItemAnimated:':
    'prefix': 'popNavigationItemAnimated:'
    'body': 'popNavigationItemAnimated(${1:BOOL animated})'
  'pushNavigationItem:animated:':
    'prefix': 'pushNavigationItem:animated:'
    'body': 'pushNavigationItem(${1:UINavigationItem* item}, animated:${2:BOOL animated})'
  'setBackIndicatorImage:':
    'prefix': 'setBackIndicatorImage:'
    'body': 'setBackIndicatorImage(${1:UIImage* backIndicatorImage})'
  'setBackIndicatorTransitionMaskImage:':
    'prefix': 'setBackIndicatorTransitionMaskImage:'
    'body': 'setBackIndicatorTransitionMaskImage(${1:UIImage* backIndicatorTransitionMaskImage})'
  'setBackgroundImage:forBarMetrics:':
    'prefix': 'setBackgroundImage:forBarMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setBackgroundImage:forBarPosition:barMetrics:':
    'prefix': 'setBackgroundImage:forBarPosition:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forBarPosition:${2:UIBarPosition barPosition}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setBarStyle:':
    'prefix': 'setBarStyle:'
    'body': 'setBarStyle(${1:UIBarStyle barStyle})'
  'setBarTintColor:':
    'prefix': 'setBarTintColor:'
    'body': 'setBarTintColor(${1:UIColor* barTintColor})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setItems:':
    'prefix': 'setItems:'
    'body': 'setItems(${1:NSArray* items})'
  'setItems:animated:':
    'prefix': 'setItems:animated:'
    'body': 'setItems(${1:NSArray* items}, animated:${2:BOOL animated})'
  'setShadowImage:':
    'prefix': 'setShadowImage:'
    'body': 'setShadowImage(${1:UIImage* shadowImage})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTitleTextAttributes:':
    'prefix': 'setTitleTextAttributes:'
    'body': 'setTitleTextAttributes(${1:NSDictionary* titleTextAttributes})'
  'setTitleVerticalPositionAdjustment:forBarMetrics:':
    'prefix': 'setTitleVerticalPositionAdjustment:forBarMetrics:'
    'body': 'setTitleVerticalPositionAdjustment(${1:CGFloat adjustment}, forBarMetrics:${2:UIBarMetrics barMetrics})'
  'setTranslucent:':
    'prefix': 'setTranslucent:'
    'body': 'setTranslucent(${1:BOOL translucent})'
  'shadowImage':
    'prefix': 'shadowImage'
    'body': 'shadowImage()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'titleTextAttributes':
    'prefix': 'titleTextAttributes'
    'body': 'titleTextAttributes()'
  'titleVerticalPositionAdjustmentForBarMetrics:':
    'prefix': 'titleVerticalPositionAdjustmentForBarMetrics:'
    'body': 'titleVerticalPositionAdjustmentForBarMetrics(${1:UIBarMetrics barMetrics})'
  'topItem':
    'prefix': 'topItem'
    'body': 'topItem()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithNavigationBarClass:toolbarClass:':
    'prefix': 'initWithNavigationBarClass:toolbarClass:'
    'body': 'initWithNavigationBarClass(${1:Class navigationBarClass}, toolbarClass:${2:Class toolbarClass})'
  'initWithRootViewController:':
    'prefix': 'initWithRootViewController:'
    'body': 'initWithRootViewController(${1:UIViewController* rootViewController})'
  'interactivePopGestureRecognizer':
    'prefix': 'interactivePopGestureRecognizer'
    'body': 'interactivePopGestureRecognizer()'
  'isNavigationBarHidden':
    'prefix': 'isNavigationBarHidden'
    'body': 'isNavigationBarHidden()'
  'isToolbarHidden':
    'prefix': 'isToolbarHidden'
    'body': 'isToolbarHidden()'
  'navigationBar':
    'prefix': 'navigationBar'
    'body': 'navigationBar()'
  'popToRootViewControllerAnimated:':
    'prefix': 'popToRootViewControllerAnimated:'
    'body': 'popToRootViewControllerAnimated(${1:BOOL animated})'
  'popToViewController:animated:':
    'prefix': 'popToViewController:animated:'
    'body': 'popToViewController(${1:UIViewController* viewController}, animated:${2:BOOL animated})'
  'popViewControllerAnimated:':
    'prefix': 'popViewControllerAnimated:'
    'body': 'popViewControllerAnimated(${1:BOOL animated})'
  'pushViewController:animated:':
    'prefix': 'pushViewController:animated:'
    'body': 'pushViewController(${1:UIViewController* viewController}, animated:${2:BOOL animated})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setNavigationBarHidden:':
    'prefix': 'setNavigationBarHidden:'
    'body': 'setNavigationBarHidden(${1:BOOL navigationBarHidden})'
  'setNavigationBarHidden:animated:':
    'prefix': 'setNavigationBarHidden:animated:'
    'body': 'setNavigationBarHidden(${1:BOOL hidden}, animated:${2:BOOL animated})'
  'setToolbarHidden:':
    'prefix': 'setToolbarHidden:'
    'body': 'setToolbarHidden(${1:BOOL toolbarHidden})'
  'setToolbarHidden:animated:':
    'prefix': 'setToolbarHidden:animated:'
    'body': 'setToolbarHidden(${1:BOOL hidden}, animated:${2:BOOL animated})'
  'setViewControllers:':
    'prefix': 'setViewControllers:'
    'body': 'setViewControllers(${1:NSArray* viewControllers})'
  'setViewControllers:animated:':
    'prefix': 'setViewControllers:animated:'
    'body': 'setViewControllers(${1:NSArray* viewControllers}, animated:${2:BOOL animated})'
  'toolbar':
    'prefix': 'toolbar'
    'body': 'toolbar()'
  'topViewController':
    'prefix': 'topViewController'
    'body': 'topViewController()'
  'viewControllers':
    'prefix': 'viewControllers'
    'body': 'viewControllers()'
  'visibleViewController':
    'prefix': 'visibleViewController'
    'body': 'visibleViewController()'
  'backBarButtonItem':
    'prefix': 'backBarButtonItem'
    'body': 'backBarButtonItem()'
  'hidesBackButton':
    'prefix': 'hidesBackButton'
    'body': 'hidesBackButton()'
  'initWithTitle:':
    'prefix': 'initWithTitle:'
    'body': 'initWithTitle(${1:NSString* title})'
  'leftBarButtonItem':
    'prefix': 'leftBarButtonItem'
    'body': 'leftBarButtonItem()'
  'leftBarButtonItems':
    'prefix': 'leftBarButtonItems'
    'body': 'leftBarButtonItems()'
  'leftItemsSupplementBackButton':
    'prefix': 'leftItemsSupplementBackButton'
    'body': 'leftItemsSupplementBackButton()'
  'prompt':
    'prefix': 'prompt'
    'body': 'prompt()'
  'rightBarButtonItem':
    'prefix': 'rightBarButtonItem'
    'body': 'rightBarButtonItem()'
  'rightBarButtonItems':
    'prefix': 'rightBarButtonItems'
    'body': 'rightBarButtonItems()'
  'setBackBarButtonItem:':
    'prefix': 'setBackBarButtonItem:'
    'body': 'setBackBarButtonItem(${1:UIBarButtonItem* backBarButtonItem})'
  'setHidesBackButton:':
    'prefix': 'setHidesBackButton:'
    'body': 'setHidesBackButton(${1:BOOL hidesBackButton})'
  'setHidesBackButton:animated:':
    'prefix': 'setHidesBackButton:animated:'
    'body': 'setHidesBackButton(${1:BOOL hidesBackButton}, animated:${2:BOOL animated})'
  'setLeftBarButtonItem:':
    'prefix': 'setLeftBarButtonItem:'
    'body': 'setLeftBarButtonItem(${1:UIBarButtonItem* leftBarButtonItem})'
  'setLeftBarButtonItem:animated:':
    'prefix': 'setLeftBarButtonItem:animated:'
    'body': 'setLeftBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated})'
  'setLeftBarButtonItems:':
    'prefix': 'setLeftBarButtonItems:'
    'body': 'setLeftBarButtonItems(${1:NSArray* leftBarButtonItems})'
  'setLeftBarButtonItems:animated:':
    'prefix': 'setLeftBarButtonItems:animated:'
    'body': 'setLeftBarButtonItems(${1:NSArray* items}, animated:${2:BOOL animated})'
  'setLeftItemsSupplementBackButton:':
    'prefix': 'setLeftItemsSupplementBackButton:'
    'body': 'setLeftItemsSupplementBackButton(${1:BOOL leftItemsSupplementBackButton})'
  'setPrompt:':
    'prefix': 'setPrompt:'
    'body': 'setPrompt(${1:NSString* prompt})'
  'setRightBarButtonItem:':
    'prefix': 'setRightBarButtonItem:'
    'body': 'setRightBarButtonItem(${1:UIBarButtonItem* rightBarButtonItem})'
  'setRightBarButtonItem:animated:':
    'prefix': 'setRightBarButtonItem:animated:'
    'body': 'setRightBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated})'
  'setRightBarButtonItems:':
    'prefix': 'setRightBarButtonItems:'
    'body': 'setRightBarButtonItems(${1:NSArray* rightBarButtonItems})'
  'setRightBarButtonItems:animated:':
    'prefix': 'setRightBarButtonItems:animated:'
    'body': 'setRightBarButtonItems(${1:NSArray* items}, animated:${2:BOOL animated})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setTitleView:':
    'prefix': 'setTitleView:'
    'body': 'setTitleView(${1:UIView* titleView})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleView':
    'prefix': 'titleView'
    'body': 'titleView()'
  'instantiateWithOwner:options:':
    'prefix': 'instantiateWithOwner:options:'
    'body': 'instantiateWithOwner(${1:id ownerOrNil}, options:${2:NSDictionary* optionsOrNil})'
  'UINib.nibWithData:bundle:':
    'prefix': 'nibWithData:bundle:'
    'body': 'UINib.nibWithData(${1:NSData* data}, bundle:${2:NSBundle* bundleOrNil})'
  'UINib.nibWithNibName:bundle:':
    'prefix': 'nibWithNibName:bundle:'
    'body': 'UINib.nibWithNibName(${1:NSString* name}, bundle:${2:NSBundle* bundleOrNil})'
  'currentPage':
    'prefix': 'currentPage'
    'body': 'currentPage()'
  'currentPageIndicatorTintColor':
    'prefix': 'currentPageIndicatorTintColor'
    'body': 'currentPageIndicatorTintColor()'
  'defersCurrentPageDisplay':
    'prefix': 'defersCurrentPageDisplay'
    'body': 'defersCurrentPageDisplay()'
  'hidesForSinglePage':
    'prefix': 'hidesForSinglePage'
    'body': 'hidesForSinglePage()'
  'numberOfPages':
    'prefix': 'numberOfPages'
    'body': 'numberOfPages()'
  'pageIndicatorTintColor':
    'prefix': 'pageIndicatorTintColor'
    'body': 'pageIndicatorTintColor()'
  'setCurrentPage:':
    'prefix': 'setCurrentPage:'
    'body': 'setCurrentPage(${1:NSInteger currentPage})'
  'setCurrentPageIndicatorTintColor:':
    'prefix': 'setCurrentPageIndicatorTintColor:'
    'body': 'setCurrentPageIndicatorTintColor(${1:UIColor* currentPageIndicatorTintColor})'
  'setDefersCurrentPageDisplay:':
    'prefix': 'setDefersCurrentPageDisplay:'
    'body': 'setDefersCurrentPageDisplay(${1:BOOL defersCurrentPageDisplay})'
  'setHidesForSinglePage:':
    'prefix': 'setHidesForSinglePage:'
    'body': 'setHidesForSinglePage(${1:BOOL hidesForSinglePage})'
  'setNumberOfPages:':
    'prefix': 'setNumberOfPages:'
    'body': 'setNumberOfPages(${1:NSInteger numberOfPages})'
  'setPageIndicatorTintColor:':
    'prefix': 'setPageIndicatorTintColor:'
    'body': 'setPageIndicatorTintColor(${1:UIColor* pageIndicatorTintColor})'
  'sizeForNumberOfPages:':
    'prefix': 'sizeForNumberOfPages:'
    'body': 'sizeForNumberOfPages(${1:NSInteger pageCount})'
  'updateCurrentPageDisplay':
    'prefix': 'updateCurrentPageDisplay'
    'body': 'updateCurrentPageDisplay()'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'gestureRecognizers':
    'prefix': 'gestureRecognizers'
    'body': 'gestureRecognizers()'
  'initWithTransitionStyle:navigationOrientation:options:':
    'prefix': 'initWithTransitionStyle:navigationOrientation:options:'
    'body': 'initWithTransitionStyle(${1:UIPageViewControllerTransitionStyle style}, navigationOrientation:${2:UIPageViewControllerNavigationOrientation navigationOrientation}, options:${3:NSDictionary* options})'
  'isDoubleSided':
    'prefix': 'isDoubleSided'
    'body': 'isDoubleSided()'
  'navigationOrientation':
    'prefix': 'navigationOrientation'
    'body': 'navigationOrientation()'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id dataSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDoubleSided:':
    'prefix': 'setDoubleSided:'
    'body': 'setDoubleSided(${1:BOOL doubleSided})'
  'setViewControllers:direction:animated:completion:':
    'prefix': 'setViewControllers:direction:animated:completion:'
    'body': 'setViewControllers(${1:NSArray* viewControllers}, direction:${2:UIPageViewControllerNavigationDirection direction}, animated:${3:BOOL animated}, completion:${4:void (^)(BOOL) completion})'
  'spineLocation':
    'prefix': 'spineLocation'
    'body': 'spineLocation()'
  'transitionStyle':
    'prefix': 'transitionStyle'
    'body': 'transitionStyle()'
  'viewControllers':
    'prefix': 'viewControllers'
    'body': 'viewControllers()'
  'maximumNumberOfTouches':
    'prefix': 'maximumNumberOfTouches'
    'body': 'maximumNumberOfTouches()'
  'minimumNumberOfTouches':
    'prefix': 'minimumNumberOfTouches'
    'body': 'minimumNumberOfTouches()'
  'setMaximumNumberOfTouches:':
    'prefix': 'setMaximumNumberOfTouches:'
    'body': 'setMaximumNumberOfTouches(${1:NSUInteger maximumNumberOfTouches})'
  'setMinimumNumberOfTouches:':
    'prefix': 'setMinimumNumberOfTouches:'
    'body': 'setMinimumNumberOfTouches(${1:NSUInteger minimumNumberOfTouches})'
  'setTranslation:inView:':
    'prefix': 'setTranslation:inView:'
    'body': 'setTranslation(${1:CGPoint translation}, inView:${2:UIView* view})'
  'translationInView:':
    'prefix': 'translationInView:'
    'body': 'translationInView(${1:UIView* view})'
  'velocityInView:':
    'prefix': 'velocityInView:'
    'body': 'velocityInView(${1:UIView* view})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'URLs':
    'prefix': 'URLs'
    'body': 'URLs()'
  'addItems:':
    'prefix': 'addItems:'
    'body': 'addItems(${1:NSArray* items})'
  'changeCount':
    'prefix': 'changeCount'
    'body': 'changeCount()'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'colors':
    'prefix': 'colors'
    'body': 'colors()'
  'containsPasteboardTypes:':
    'prefix': 'containsPasteboardTypes:'
    'body': 'containsPasteboardTypes(${1:NSArray* pasteboardTypes})'
  'containsPasteboardTypes:inItemSet:':
    'prefix': 'containsPasteboardTypes:inItemSet:'
    'body': 'containsPasteboardTypes(${1:NSArray* pasteboardTypes}, inItemSet:${2:NSIndexSet* itemSet})'
  'dataForPasteboardType:':
    'prefix': 'dataForPasteboardType:'
    'body': 'dataForPasteboardType(${1:NSString* pasteboardType})'
  'dataForPasteboardType:inItemSet:':
    'prefix': 'dataForPasteboardType:inItemSet:'
    'body': 'dataForPasteboardType(${1:NSString* pasteboardType}, inItemSet:${2:NSIndexSet* itemSet})'
  'UIPasteboard.generalPasteboard':
    'prefix': 'generalPasteboard'
    'body': 'UIPasteboard.generalPasteboard()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'images':
    'prefix': 'images'
    'body': 'images()'
  'isPersistent':
    'prefix': 'isPersistent'
    'body': 'isPersistent()'
  'itemSetWithPasteboardTypes:':
    'prefix': 'itemSetWithPasteboardTypes:'
    'body': 'itemSetWithPasteboardTypes(${1:NSArray* pasteboardTypes})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'pasteboardTypes':
    'prefix': 'pasteboardTypes'
    'body': 'pasteboardTypes()'
  'pasteboardTypesForItemSet:':
    'prefix': 'pasteboardTypesForItemSet:'
    'body': 'pasteboardTypesForItemSet(${1:NSIndexSet* itemSet})'
  'UIPasteboard.pasteboardWithName:create:':
    'prefix': 'pasteboardWithName:create:'
    'body': 'UIPasteboard.pasteboardWithName(${1:NSString* pasteboardName}, create:${2:BOOL create})'
  'UIPasteboard.pasteboardWithUniqueName':
    'prefix': 'pasteboardWithUniqueName'
    'body': 'UIPasteboard.pasteboardWithUniqueName()'
  'UIPasteboard.removePasteboardWithName:':
    'prefix': 'removePasteboardWithName:'
    'body': 'UIPasteboard.removePasteboardWithName(${1:NSString* pasteboardName})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:UIColor* color})'
  'setColors:':
    'prefix': 'setColors:'
    'body': 'setColors(${1:NSArray* colors})'
  'setData:forPasteboardType:':
    'prefix': 'setData:forPasteboardType:'
    'body': 'setData(${1:NSData* data}, forPasteboardType:${2:NSString* pasteboardType})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:UIImage* image})'
  'setImages:':
    'prefix': 'setImages:'
    'body': 'setImages(${1:NSArray* images})'
  'setItems:':
    'prefix': 'setItems:'
    'body': 'setItems(${1:NSArray* items})'
  'setPersistent:':
    'prefix': 'setPersistent:'
    'body': 'setPersistent(${1:BOOL persistent})'
  'setString:':
    'prefix': 'setString:'
    'body': 'setString(${1:NSString* string})'
  'setStrings:':
    'prefix': 'setStrings:'
    'body': 'setStrings(${1:NSArray* strings})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* URL})'
  'setURLs:':
    'prefix': 'setURLs:'
    'body': 'setURLs(${1:NSArray* URLs})'
  'setValue:forPasteboardType:':
    'prefix': 'setValue:forPasteboardType:'
    'body': 'setValue(${1:id value}, forPasteboardType:${2:NSString* pasteboardType})'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'strings':
    'prefix': 'strings'
    'body': 'strings()'
  'valueForPasteboardType:':
    'prefix': 'valueForPasteboardType:'
    'body': 'valueForPasteboardType(${1:NSString* pasteboardType})'
  'valuesForPasteboardType:inItemSet:':
    'prefix': 'valuesForPasteboardType:inItemSet:'
    'body': 'valuesForPasteboardType(${1:NSString* pasteboardType}, inItemSet:${2:NSIndexSet* itemSet})'
  'cancelInteractiveTransition':
    'prefix': 'cancelInteractiveTransition'
    'body': 'cancelInteractiveTransition()'
  'completionCurve':
    'prefix': 'completionCurve'
    'body': 'completionCurve()'
  'completionSpeed':
    'prefix': 'completionSpeed'
    'body': 'completionSpeed()'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'finishInteractiveTransition':
    'prefix': 'finishInteractiveTransition'
    'body': 'finishInteractiveTransition()'
  'percentComplete':
    'prefix': 'percentComplete'
    'body': 'percentComplete()'
  'setCompletionCurve:':
    'prefix': 'setCompletionCurve:'
    'body': 'setCompletionCurve(${1:UIViewAnimationCurve completionCurve})'
  'setCompletionSpeed:':
    'prefix': 'setCompletionSpeed:'
    'body': 'setCompletionSpeed(${1:CGFloat completionSpeed})'
  'updateInteractiveTransition:':
    'prefix': 'updateInteractiveTransition:'
    'body': 'updateInteractiveTransition(${1:CGFloat percentComplete})'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'numberOfComponents':
    'prefix': 'numberOfComponents'
    'body': 'numberOfComponents()'
  'numberOfRowsInComponent:':
    'prefix': 'numberOfRowsInComponent:'
    'body': 'numberOfRowsInComponent(${1:NSInteger component})'
  'reloadAllComponents':
    'prefix': 'reloadAllComponents'
    'body': 'reloadAllComponents()'
  'reloadComponent:':
    'prefix': 'reloadComponent:'
    'body': 'reloadComponent(${1:NSInteger component})'
  'rowSizeForComponent:':
    'prefix': 'rowSizeForComponent:'
    'body': 'rowSizeForComponent(${1:NSInteger component})'
  'selectRow:inComponent:animated:':
    'prefix': 'selectRow:inComponent:animated:'
    'body': 'selectRow(${1:NSInteger row}, inComponent:${2:NSInteger component}, animated:${3:BOOL animated})'
  'selectedRowInComponent:':
    'prefix': 'selectedRowInComponent:'
    'body': 'selectedRowInComponent(${1:NSInteger component})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id dataSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setShowsSelectionIndicator:':
    'prefix': 'setShowsSelectionIndicator:'
    'body': 'setShowsSelectionIndicator(${1:BOOL showsSelectionIndicator})'
  'showsSelectionIndicator':
    'prefix': 'showsSelectionIndicator'
    'body': 'showsSelectionIndicator()'
  'viewForRow:forComponent:':
    'prefix': 'viewForRow:forComponent:'
    'body': 'viewForRow(${1:NSInteger row}, forComponent:${2:NSInteger component})'
  'scale':
    'prefix': 'scale'
    'body': 'scale()'
  'setScale:':
    'prefix': 'setScale:'
    'body': 'setScale(${1:CGFloat scale})'
  'velocity':
    'prefix': 'velocity'
    'body': 'velocity()'
  'UIPopoverBackgroundView.arrowBase':
    'prefix': 'arrowBase'
    'body': 'UIPopoverBackgroundView.arrowBase()'
  'arrowDirection':
    'prefix': 'arrowDirection'
    'body': 'arrowDirection()'
  'UIPopoverBackgroundView.arrowHeight':
    'prefix': 'arrowHeight'
    'body': 'UIPopoverBackgroundView.arrowHeight()'
  'arrowOffset':
    'prefix': 'arrowOffset'
    'body': 'arrowOffset()'
  'UIPopoverBackgroundView.contentViewInsets':
    'prefix': 'contentViewInsets'
    'body': 'UIPopoverBackgroundView.contentViewInsets()'
  'setArrowDirection:':
    'prefix': 'setArrowDirection:'
    'body': 'setArrowDirection(${1:UIPopoverArrowDirection arrowDirection})'
  'setArrowOffset:':
    'prefix': 'setArrowOffset:'
    'body': 'setArrowOffset(${1:CGFloat arrowOffset})'
  'UIPopoverBackgroundView.wantsDefaultContentAppearance':
    'prefix': 'wantsDefaultContentAppearance'
    'body': 'UIPopoverBackgroundView.wantsDefaultContentAppearance()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'contentViewController':
    'prefix': 'contentViewController'
    'body': 'contentViewController()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dismissPopoverAnimated:':
    'prefix': 'dismissPopoverAnimated:'
    'body': 'dismissPopoverAnimated(${1:BOOL animated})'
  'initWithContentViewController:':
    'prefix': 'initWithContentViewController:'
    'body': 'initWithContentViewController(${1:UIViewController* viewController})'
  'isPopoverVisible':
    'prefix': 'isPopoverVisible'
    'body': 'isPopoverVisible()'
  'passthroughViews':
    'prefix': 'passthroughViews'
    'body': 'passthroughViews()'
  'popoverArrowDirection':
    'prefix': 'popoverArrowDirection'
    'body': 'popoverArrowDirection()'
  'popoverBackgroundViewClass':
    'prefix': 'popoverBackgroundViewClass'
    'body': 'popoverBackgroundViewClass()'
  'popoverContentSize':
    'prefix': 'popoverContentSize'
    'body': 'popoverContentSize()'
  'popoverLayoutMargins':
    'prefix': 'popoverLayoutMargins'
    'body': 'popoverLayoutMargins()'
  'presentPopoverFromBarButtonItem:permittedArrowDirections:animated:':
    'prefix': 'presentPopoverFromBarButtonItem:permittedArrowDirections:animated:'
    'body': 'presentPopoverFromBarButtonItem(${1:UIBarButtonItem* item}, permittedArrowDirections:${2:UIPopoverArrowDirection arrowDirections}, animated:${3:BOOL animated})'
  'presentPopoverFromRect:inView:permittedArrowDirections:animated:':
    'prefix': 'presentPopoverFromRect:inView:permittedArrowDirections:animated:'
    'body': 'presentPopoverFromRect(${1:CGRect rect}, inView:${2:UIView* view}, permittedArrowDirections:${3:UIPopoverArrowDirection arrowDirections}, animated:${4:BOOL animated})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:UIColor* backgroundColor})'
  'setContentViewController:':
    'prefix': 'setContentViewController:'
    'body': 'setContentViewController(${1:UIViewController* contentViewController})'
  'setContentViewController:animated:':
    'prefix': 'setContentViewController:animated:'
    'body': 'setContentViewController(${1:UIViewController* viewController}, animated:${2:BOOL animated})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setPassthroughViews:':
    'prefix': 'setPassthroughViews:'
    'body': 'setPassthroughViews(${1:NSArray* passthroughViews})'
  'setPopoverBackgroundViewClass:':
    'prefix': 'setPopoverBackgroundViewClass:'
    'body': 'setPopoverBackgroundViewClass(${1:Class popoverBackgroundViewClass})'
  'setPopoverContentSize:':
    'prefix': 'setPopoverContentSize:'
    'body': 'setPopoverContentSize(${1:CGSize popoverContentSize})'
  'setPopoverContentSize:animated:':
    'prefix': 'setPopoverContentSize:animated:'
    'body': 'setPopoverContentSize(${1:CGSize size}, animated:${2:BOOL animated})'
  'setPopoverLayoutMargins:':
    'prefix': 'setPopoverLayoutMargins:'
    'body': 'setPopoverLayoutMargins(${1:UIEdgeInsets popoverLayoutMargins})'
  'contentInsets':
    'prefix': 'contentInsets'
    'body': 'contentInsets()'
  'drawInRect:forPageAtIndex:':
    'prefix': 'drawInRect:forPageAtIndex:'
    'body': 'drawInRect(${1:CGRect rect}, forPageAtIndex:${2:NSInteger pageIndex})'
  'maximumContentHeight':
    'prefix': 'maximumContentHeight'
    'body': 'maximumContentHeight()'
  'maximumContentWidth':
    'prefix': 'maximumContentWidth'
    'body': 'maximumContentWidth()'
  'pageCount':
    'prefix': 'pageCount'
    'body': 'pageCount()'
  'printPageRenderer':
    'prefix': 'printPageRenderer'
    'body': 'printPageRenderer()'
  'rectForPageAtIndex:':
    'prefix': 'rectForPageAtIndex:'
    'body': 'rectForPageAtIndex(${1:NSInteger pageIndex})'
  'removeFromPrintPageRenderer':
    'prefix': 'removeFromPrintPageRenderer'
    'body': 'removeFromPrintPageRenderer()'
  'setContentInsets:':
    'prefix': 'setContentInsets:'
    'body': 'setContentInsets(${1:UIEdgeInsets contentInsets})'
  'setMaximumContentHeight:':
    'prefix': 'setMaximumContentHeight:'
    'body': 'setMaximumContentHeight(${1:CGFloat maximumContentHeight})'
  'setMaximumContentWidth:':
    'prefix': 'setMaximumContentWidth:'
    'body': 'setMaximumContentWidth(${1:CGFloat maximumContentWidth})'
  'setStartPage:':
    'prefix': 'setStartPage:'
    'body': 'setStartPage(${1:NSInteger startPage})'
  'startPage':
    'prefix': 'startPage'
    'body': 'startPage()'
  'dictionaryRepresentation':
    'prefix': 'dictionaryRepresentation'
    'body': 'dictionaryRepresentation()'
  'duplex':
    'prefix': 'duplex'
    'body': 'duplex()'
  'jobName':
    'prefix': 'jobName'
    'body': 'jobName()'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'outputType':
    'prefix': 'outputType'
    'body': 'outputType()'
  'UIPrintInfo.printInfo':
    'prefix': 'printInfo'
    'body': 'UIPrintInfo.printInfo()'
  'UIPrintInfo.printInfoWithDictionary:':
    'prefix': 'printInfoWithDictionary:'
    'body': 'UIPrintInfo.printInfoWithDictionary(${1:NSDictionary* dictionary})'
  'printerID':
    'prefix': 'printerID'
    'body': 'printerID()'
  'setDuplex:':
    'prefix': 'setDuplex:'
    'body': 'setDuplex(${1:UIPrintInfoDuplex duplex})'
  'setJobName:':
    'prefix': 'setJobName:'
    'body': 'setJobName(${1:NSString* jobName})'
  'setOrientation:':
    'prefix': 'setOrientation:'
    'body': 'setOrientation(${1:UIPrintInfoOrientation orientation})'
  'setOutputType:':
    'prefix': 'setOutputType:'
    'body': 'setOutputType(${1:UIPrintInfoOutputType outputType})'
  'setPrinterID:':
    'prefix': 'setPrinterID:'
    'body': 'setPrinterID(${1:NSString* printerID})'
  'UIPrintInteractionController.canPrintData:':
    'prefix': 'canPrintData:'
    'body': 'UIPrintInteractionController.canPrintData(${1:NSData* data})'
  'UIPrintInteractionController.canPrintURL:':
    'prefix': 'canPrintURL:'
    'body': 'UIPrintInteractionController.canPrintURL(${1:NSURL* url})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dismissAnimated:':
    'prefix': 'dismissAnimated:'
    'body': 'dismissAnimated(${1:BOOL animated})'
  'UIPrintInteractionController.isPrintingAvailable':
    'prefix': 'isPrintingAvailable'
    'body': 'UIPrintInteractionController.isPrintingAvailable()'
  'presentAnimated:completionHandler:':
    'prefix': 'presentAnimated:completionHandler:'
    'body': 'presentAnimated(${1:BOOL animated}, completionHandler:${2:UIPrintInteractionCompletionHandler completion})'
  'presentFromBarButtonItem:animated:completionHandler:':
    'prefix': 'presentFromBarButtonItem:animated:completionHandler:'
    'body': 'presentFromBarButtonItem(${1:UIBarButtonItem* item}, animated:${2:BOOL animated}, completionHandler:${3:UIPrintInteractionCompletionHandler completion})'
  'presentFromRect:inView:animated:completionHandler:':
    'prefix': 'presentFromRect:inView:animated:completionHandler:'
    'body': 'presentFromRect(${1:CGRect rect}, inView:${2:UIView* view}, animated:${3:BOOL animated}, completionHandler:${4:UIPrintInteractionCompletionHandler completion})'
  'printFormatter':
    'prefix': 'printFormatter'
    'body': 'printFormatter()'
  'printInfo':
    'prefix': 'printInfo'
    'body': 'printInfo()'
  'printPageRenderer':
    'prefix': 'printPageRenderer'
    'body': 'printPageRenderer()'
  'printPaper':
    'prefix': 'printPaper'
    'body': 'printPaper()'
  'UIPrintInteractionController.printableUTIs':
    'prefix': 'printableUTIs'
    'body': 'UIPrintInteractionController.printableUTIs()'
  'printingItem':
    'prefix': 'printingItem'
    'body': 'printingItem()'
  'printingItems':
    'prefix': 'printingItems'
    'body': 'printingItems()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setPrintFormatter:':
    'prefix': 'setPrintFormatter:'
    'body': 'setPrintFormatter(${1:UIPrintFormatter* printFormatter})'
  'setPrintInfo:':
    'prefix': 'setPrintInfo:'
    'body': 'setPrintInfo(${1:UIPrintInfo* printInfo})'
  'setPrintPageRenderer:':
    'prefix': 'setPrintPageRenderer:'
    'body': 'setPrintPageRenderer(${1:UIPrintPageRenderer* printPageRenderer})'
  'setPrintingItem:':
    'prefix': 'setPrintingItem:'
    'body': 'setPrintingItem(${1:id printingItem})'
  'setPrintingItems:':
    'prefix': 'setPrintingItems:'
    'body': 'setPrintingItems(${1:NSArray* printingItems})'
  'setShowsNumberOfCopies:':
    'prefix': 'setShowsNumberOfCopies:'
    'body': 'setShowsNumberOfCopies(${1:BOOL showsNumberOfCopies})'
  'setShowsPageRange:':
    'prefix': 'setShowsPageRange:'
    'body': 'setShowsPageRange(${1:BOOL showsPageRange})'
  'UIPrintInteractionController.sharedPrintController':
    'prefix': 'sharedPrintController'
    'body': 'UIPrintInteractionController.sharedPrintController()'
  'showsNumberOfCopies':
    'prefix': 'showsNumberOfCopies'
    'body': 'showsNumberOfCopies()'
  'showsPageRange':
    'prefix': 'showsPageRange'
    'body': 'showsPageRange()'
  'addPrintFormatter:startingAtPageAtIndex:':
    'prefix': 'addPrintFormatter:startingAtPageAtIndex:'
    'body': 'addPrintFormatter(${1:UIPrintFormatter* formatter}, startingAtPageAtIndex:${2:NSInteger pageIndex})'
  'drawContentForPageAtIndex:inRect:':
    'prefix': 'drawContentForPageAtIndex:inRect:'
    'body': 'drawContentForPageAtIndex(${1:NSInteger pageIndex}, inRect:${2:CGRect contentRect})'
  'drawFooterForPageAtIndex:inRect:':
    'prefix': 'drawFooterForPageAtIndex:inRect:'
    'body': 'drawFooterForPageAtIndex(${1:NSInteger pageIndex}, inRect:${2:CGRect footerRect})'
  'drawHeaderForPageAtIndex:inRect:':
    'prefix': 'drawHeaderForPageAtIndex:inRect:'
    'body': 'drawHeaderForPageAtIndex(${1:NSInteger pageIndex}, inRect:${2:CGRect headerRect})'
  'drawPageAtIndex:inRect:':
    'prefix': 'drawPageAtIndex:inRect:'
    'body': 'drawPageAtIndex(${1:NSInteger pageIndex}, inRect:${2:CGRect printableRect})'
  'drawPrintFormatter:forPageAtIndex:':
    'prefix': 'drawPrintFormatter:forPageAtIndex:'
    'body': 'drawPrintFormatter(${1:UIPrintFormatter* printFormatter}, forPageAtIndex:${2:NSInteger pageIndex})'
  'footerHeight':
    'prefix': 'footerHeight'
    'body': 'footerHeight()'
  'headerHeight':
    'prefix': 'headerHeight'
    'body': 'headerHeight()'
  'numberOfPages':
    'prefix': 'numberOfPages'
    'body': 'numberOfPages()'
  'paperRect':
    'prefix': 'paperRect'
    'body': 'paperRect()'
  'prepareForDrawingPages:':
    'prefix': 'prepareForDrawingPages:'
    'body': 'prepareForDrawingPages(${1:NSRange range})'
  'printFormatters':
    'prefix': 'printFormatters'
    'body': 'printFormatters()'
  'printFormattersForPageAtIndex:':
    'prefix': 'printFormattersForPageAtIndex:'
    'body': 'printFormattersForPageAtIndex(${1:NSInteger pageIndex})'
  'printableRect':
    'prefix': 'printableRect'
    'body': 'printableRect()'
  'setFooterHeight:':
    'prefix': 'setFooterHeight:'
    'body': 'setFooterHeight(${1:CGFloat footerHeight})'
  'setHeaderHeight:':
    'prefix': 'setHeaderHeight:'
    'body': 'setHeaderHeight(${1:CGFloat headerHeight})'
  'setPrintFormatters:':
    'prefix': 'setPrintFormatters:'
    'body': 'setPrintFormatters(${1:NSArray* printFormatters})'
  'UIPrintPaper.bestPaperForPageSize:withPapersFromArray:':
    'prefix': 'bestPaperForPageSize:withPapersFromArray:'
    'body': 'UIPrintPaper.bestPaperForPageSize(${1:CGSize contentSize}, withPapersFromArray:${2:NSArray* paperList})'
  'paperSize':
    'prefix': 'paperSize'
    'body': 'paperSize()'
  'printRect':
    'prefix': 'printRect'
    'body': 'printRect()'
  'printableRect':
    'prefix': 'printableRect'
    'body': 'printableRect()'
  'initWithProgressViewStyle:':
    'prefix': 'initWithProgressViewStyle:'
    'body': 'initWithProgressViewStyle(${1:UIProgressViewStyle style})'
  'progress':
    'prefix': 'progress'
    'body': 'progress()'
  'progressImage':
    'prefix': 'progressImage'
    'body': 'progressImage()'
  'progressTintColor':
    'prefix': 'progressTintColor'
    'body': 'progressTintColor()'
  'progressViewStyle':
    'prefix': 'progressViewStyle'
    'body': 'progressViewStyle()'
  'setProgress:':
    'prefix': 'setProgress:'
    'body': 'setProgress(${1:float progress})'
  'setProgress:animated:':
    'prefix': 'setProgress:animated:'
    'body': 'setProgress(${1:float progress}, animated:${2:BOOL animated})'
  'setProgressImage:':
    'prefix': 'setProgressImage:'
    'body': 'setProgressImage(${1:UIImage* progressImage})'
  'setProgressTintColor:':
    'prefix': 'setProgressTintColor:'
    'body': 'setProgressTintColor(${1:UIColor* progressTintColor})'
  'setProgressViewStyle:':
    'prefix': 'setProgressViewStyle:'
    'body': 'setProgressViewStyle(${1:UIProgressViewStyle progressViewStyle})'
  'setTrackImage:':
    'prefix': 'setTrackImage:'
    'body': 'setTrackImage(${1:UIImage* trackImage})'
  'setTrackTintColor:':
    'prefix': 'setTrackTintColor:'
    'body': 'setTrackTintColor(${1:UIColor* trackTintColor})'
  'trackImage':
    'prefix': 'trackImage'
    'body': 'trackImage()'
  'trackTintColor':
    'prefix': 'trackTintColor'
    'body': 'trackTintColor()'
  'active':
    'prefix': 'active'
    'body': 'active()'
  'addItem:':
    'prefix': 'addItem:'
    'body': 'addItem(${1:id item})'
  'angle':
    'prefix': 'angle'
    'body': 'angle()'
  'initWithItems:mode:':
    'prefix': 'initWithItems:mode:'
    'body': 'initWithItems(${1:NSArray* items}, mode:${2:UIPushBehaviorMode mode})'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'magnitude':
    'prefix': 'magnitude'
    'body': 'magnitude()'
  'mode':
    'prefix': 'mode'
    'body': 'mode()'
  'pushDirection':
    'prefix': 'pushDirection'
    'body': 'pushDirection()'
  'removeItem:':
    'prefix': 'removeItem:'
    'body': 'removeItem(${1:id item})'
  'setActive:':
    'prefix': 'setActive:'
    'body': 'setActive(${1:BOOL active})'
  'setAngle:':
    'prefix': 'setAngle:'
    'body': 'setAngle(${1:CGFloat angle})'
  'setAngle:magnitude:':
    'prefix': 'setAngle:magnitude:'
    'body': 'setAngle(${1:CGFloat angle}, magnitude:${2:CGFloat magnitude})'
  'setMagnitude:':
    'prefix': 'setMagnitude:'
    'body': 'setMagnitude(${1:CGFloat magnitude})'
  'setPushDirection:':
    'prefix': 'setPushDirection:'
    'body': 'setPushDirection(${1:CGVector pushDirection})'
  'setTargetOffsetFromCenter:forItem:':
    'prefix': 'setTargetOffsetFromCenter:forItem:'
    'body': 'setTargetOffsetFromCenter(${1:UIOffset o}, forItem:${2:id item})'
  'targetOffsetFromCenterForItem:':
    'prefix': 'targetOffsetFromCenterForItem:'
    'body': 'targetOffsetFromCenterForItem(${1:id item})'
  'UIReferenceLibraryViewController.dictionaryHasDefinitionForTerm:':
    'prefix': 'dictionaryHasDefinitionForTerm:'
    'body': 'UIReferenceLibraryViewController.dictionaryHasDefinitionForTerm(${1:NSString* term})'
  'initWithTerm:':
    'prefix': 'initWithTerm:'
    'body': 'initWithTerm(${1:NSString* term})'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'beginRefreshing':
    'prefix': 'beginRefreshing'
    'body': 'beginRefreshing()'
  'endRefreshing':
    'prefix': 'endRefreshing'
    'body': 'endRefreshing()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'isRefreshing':
    'prefix': 'isRefreshing'
    'body': 'isRefreshing()'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* attributedTitle})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'becomeFirstResponder':
    'prefix': 'becomeFirstResponder'
    'body': 'becomeFirstResponder()'
  'canBecomeFirstResponder':
    'prefix': 'canBecomeFirstResponder'
    'body': 'canBecomeFirstResponder()'
  'canPerformAction:withSender:':
    'prefix': 'canPerformAction:withSender:'
    'body': 'canPerformAction(${1:SEL action}, withSender:${2:id sender})'
  'canResignFirstResponder':
    'prefix': 'canResignFirstResponder'
    'body': 'canResignFirstResponder()'
  'UIResponder.clearTextInputContextIdentifier:':
    'prefix': 'clearTextInputContextIdentifier:'
    'body': 'UIResponder.clearTextInputContextIdentifier(${1:NSString* identifier})'
  'inputAccessoryView':
    'prefix': 'inputAccessoryView'
    'body': 'inputAccessoryView()'
  'inputView':
    'prefix': 'inputView'
    'body': 'inputView()'
  'isFirstResponder':
    'prefix': 'isFirstResponder'
    'body': 'isFirstResponder()'
  'keyCommands':
    'prefix': 'keyCommands'
    'body': 'KeyCommands()'
  'motionBegan:withEvent:':
    'prefix': 'motionBegan:withEvent:'
    'body': 'motionBegan(${1:UIEventSubtype motion}, withEvent:${2:UIEvent* event})'
  'motionCancelled:withEvent:':
    'prefix': 'motionCancelled:withEvent:'
    'body': 'motionCancelled(${1:UIEventSubtype motion}, withEvent:${2:UIEvent* event})'
  'motionEnded:withEvent:':
    'prefix': 'motionEnded:withEvent:'
    'body': 'motionEnded(${1:UIEventSubtype motion}, withEvent:${2:UIEvent* event})'
  'nextResponder':
    'prefix': 'nextResponder'
    'body': 'nextResponder()'
  'reloadInputViews':
    'prefix': 'reloadInputViews'
    'body': 'reloadInputViews()'
  'remoteControlReceivedWithEvent:':
    'prefix': 'remoteControlReceivedWithEvent:'
    'body': 'remoteControlReceivedWithEvent(${1:UIEvent* event})'
  'resignFirstResponder':
    'prefix': 'resignFirstResponder'
    'body': 'resignFirstResponder()'
  'targetForAction:withSender:':
    'prefix': 'targetForAction:withSender:'
    'body': 'targetForAction(${1:SEL action}, withSender:${2:id sender})'
  'textInputContextIdentifier':
    'prefix': 'textInputContextIdentifier'
    'body': 'textInputContextIdentifier()'
  'textInputMode':
    'prefix': 'textInputMode'
    'body': 'textInputMode()'
  'touchesBegan:withEvent:':
    'prefix': 'touchesBegan:withEvent:'
    'body': 'touchesBegan(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesCancelled:withEvent:':
    'prefix': 'touchesCancelled:withEvent:'
    'body': 'touchesCancelled(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesEnded:withEvent:':
    'prefix': 'touchesEnded:withEvent:'
    'body': 'touchesEnded(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'touchesMoved:withEvent:':
    'prefix': 'touchesMoved:withEvent:'
    'body': 'touchesMoved(${1:NSSet* touches}, withEvent:${2:UIEvent* event})'
  'undoManager':
    'prefix': 'undoManager'
    'body': 'undoManager()'
  'rotation':
    'prefix': 'rotation'
    'body': 'rotation()'
  'setRotation:':
    'prefix': 'setRotation:'
    'body': 'setRotation(${1:CGFloat rotation})'
  'velocity':
    'prefix': 'velocity'
    'body': 'velocity()'
  'applicationFrame':
    'prefix': 'applicationFrame'
    'body': 'applicationFrame()'
  'availableModes':
    'prefix': 'availableModes'
    'body': 'availableModes()'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'brightness':
    'prefix': 'brightness'
    'body': 'brightness()'
  'currentMode':
    'prefix': 'currentMode'
    'body': 'currentMode()'
  'displayLinkWithTarget:selector:':
    'prefix': 'displayLinkWithTarget:selector:'
    'body': 'displayLinkWithTarget(${1:id target}, selector:${2:SEL sel})'
  'UIScreen.mainScreen':
    'prefix': 'mainScreen'
    'body': 'UIScreen.mainScreen()'
  'mirroredScreen':
    'prefix': 'mirroredScreen'
    'body': 'mirroredScreen()'
  'overscanCompensation':
    'prefix': 'overscanCompensation'
    'body': 'overscanCompensation()'
  'preferredMode':
    'prefix': 'preferredMode'
    'body': 'preferredMode()'
  'scale':
    'prefix': 'scale'
    'body': 'scale()'
  'UIScreen.screens':
    'prefix': 'screens'
    'body': 'UIScreen.screens()'
  'setBrightness:':
    'prefix': 'setBrightness:'
    'body': 'setBrightness(${1:CGFloat brightness})'
  'setCurrentMode:':
    'prefix': 'setCurrentMode:'
    'body': 'setCurrentMode(${1:UIScreenMode* currentMode})'
  'setOverscanCompensation:':
    'prefix': 'setOverscanCompensation:'
    'body': 'setOverscanCompensation(${1:UIScreenOverscanCompensation overscanCompensation})'
  'setWantsSoftwareDimming:':
    'prefix': 'setWantsSoftwareDimming:'
    'body': 'setWantsSoftwareDimming(${1:BOOL wantsSoftwareDimming})'
  'snapshotViewAfterScreenUpdates:':
    'prefix': 'snapshotViewAfterScreenUpdates:'
    'body': 'snapshotViewAfterScreenUpdates(${1:BOOL afterUpdates})'
  'wantsSoftwareDimming':
    'prefix': 'wantsSoftwareDimming'
    'body': 'wantsSoftwareDimming()'
  'edges':
    'prefix': 'edges'
    'body': 'edges()'
  'setEdges:':
    'prefix': 'setEdges:'
    'body': 'setEdges(${1:UIRectEdge edges})'
  'pixelAspectRatio':
    'prefix': 'pixelAspectRatio'
    'body': 'pixelAspectRatio()'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'alwaysBounceHorizontal':
    'prefix': 'alwaysBounceHorizontal'
    'body': 'alwaysBounceHorizontal()'
  'alwaysBounceVertical':
    'prefix': 'alwaysBounceVertical'
    'body': 'alwaysBounceVertical()'
  'bounces':
    'prefix': 'bounces'
    'body': 'bounces()'
  'bouncesZoom':
    'prefix': 'bouncesZoom'
    'body': 'bouncesZoom()'
  'canCancelContentTouches':
    'prefix': 'canCancelContentTouches'
    'body': 'canCancelContentTouches()'
  'contentInset':
    'prefix': 'contentInset'
    'body': 'contentInset()'
  'contentOffset':
    'prefix': 'contentOffset'
    'body': 'contentOffset()'
  'contentSize':
    'prefix': 'contentSize'
    'body': 'contentSize()'
  'decelerationRate':
    'prefix': 'decelerationRate'
    'body': 'decelerationRate()'
  'delaysContentTouches':
    'prefix': 'delaysContentTouches'
    'body': 'delaysContentTouches()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'flashScrollIndicators':
    'prefix': 'flashScrollIndicators'
    'body': 'flashScrollIndicators()'
  'indicatorStyle':
    'prefix': 'indicatorStyle'
    'body': 'indicatorStyle()'
  'isDecelerating':
    'prefix': 'isDecelerating'
    'body': 'isDecelerating()'
  'isDirectionalLockEnabled':
    'prefix': 'isDirectionalLockEnabled'
    'body': 'isDirectionalLockEnabled()'
  'isDragging':
    'prefix': 'isDragging'
    'body': 'isDragging()'
  'isPagingEnabled':
    'prefix': 'isPagingEnabled'
    'body': 'isPagingEnabled()'
  'isScrollEnabled':
    'prefix': 'isScrollEnabled'
    'body': 'isScrollEnabled()'
  'isTracking':
    'prefix': 'isTracking'
    'body': 'isTracking()'
  'isZoomBouncing':
    'prefix': 'isZoomBouncing'
    'body': 'isZoomBouncing()'
  'isZooming':
    'prefix': 'isZooming'
    'body': 'isZooming()'
  'keyboardDismissMode':
    'prefix': 'keyboardDismissMode'
    'body': 'KeyboardDismissMode()'
  'maximumZoomScale':
    'prefix': 'maximumZoomScale'
    'body': 'maximumZoomScale()'
  'minimumZoomScale':
    'prefix': 'minimumZoomScale'
    'body': 'minimumZoomScale()'
  'panGestureRecognizer':
    'prefix': 'panGestureRecognizer'
    'body': 'panGestureRecognizer()'
  'pinchGestureRecognizer':
    'prefix': 'pinchGestureRecognizer'
    'body': 'pinchGestureRecognizer()'
  'scrollIndicatorInsets':
    'prefix': 'scrollIndicatorInsets'
    'body': 'scrollIndicatorInsets()'
  'scrollRectToVisible:animated:':
    'prefix': 'scrollRectToVisible:animated:'
    'body': 'scrollRectToVisible(${1:CGRect rect}, animated:${2:BOOL animated})'
  'scrollsToTop':
    'prefix': 'scrollsToTop'
    'body': 'scrollsToTop()'
  'setAlwaysBounceHorizontal:':
    'prefix': 'setAlwaysBounceHorizontal:'
    'body': 'setAlwaysBounceHorizontal(${1:BOOL alwaysBounceHorizontal})'
  'setAlwaysBounceVertical:':
    'prefix': 'setAlwaysBounceVertical:'
    'body': 'setAlwaysBounceVertical(${1:BOOL alwaysBounceVertical})'
  'setBounces:':
    'prefix': 'setBounces:'
    'body': 'setBounces(${1:BOOL bounces})'
  'setBouncesZoom:':
    'prefix': 'setBouncesZoom:'
    'body': 'setBouncesZoom(${1:BOOL bouncesZoom})'
  'setCanCancelContentTouches:':
    'prefix': 'setCanCancelContentTouches:'
    'body': 'setCanCancelContentTouches(${1:BOOL canCancelContentTouches})'
  'setContentInset:':
    'prefix': 'setContentInset:'
    'body': 'setContentInset(${1:UIEdgeInsets contentInset})'
  'setContentOffset:':
    'prefix': 'setContentOffset:'
    'body': 'setContentOffset(${1:CGPoint contentOffset})'
  'setContentOffset:animated:':
    'prefix': 'setContentOffset:animated:'
    'body': 'setContentOffset(${1:CGPoint contentOffset}, animated:${2:BOOL animated})'
  'setContentSize:':
    'prefix': 'setContentSize:'
    'body': 'setContentSize(${1:CGSize contentSize})'
  'setDecelerationRate:':
    'prefix': 'setDecelerationRate:'
    'body': 'setDecelerationRate(${1:CGFloat decelerationRate})'
  'setDelaysContentTouches:':
    'prefix': 'setDelaysContentTouches:'
    'body': 'setDelaysContentTouches(${1:BOOL delaysContentTouches})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDirectionalLockEnabled:':
    'prefix': 'setDirectionalLockEnabled:'
    'body': 'setDirectionalLockEnabled(${1:BOOL directionalLockEnabled})'
  'setIndicatorStyle:':
    'prefix': 'setIndicatorStyle:'
    'body': 'setIndicatorStyle(${1:UIScrollViewIndicatorStyle indicatorStyle})'
  'setKeyboardDismissMode:':
    'prefix': 'setKeyboardDismissMode:'
    'body': 'setKeyboardDismissMode(${1:UIScrollViewKeyboardDismissMode keyboardDismissMode})'
  'setMaximumZoomScale:':
    'prefix': 'setMaximumZoomScale:'
    'body': 'setMaximumZoomScale(${1:CGFloat maximumZoomScale})'
  'setMinimumZoomScale:':
    'prefix': 'setMinimumZoomScale:'
    'body': 'setMinimumZoomScale(${1:CGFloat minimumZoomScale})'
  'setPagingEnabled:':
    'prefix': 'setPagingEnabled:'
    'body': 'setPagingEnabled(${1:BOOL pagingEnabled})'
  'setScrollEnabled:':
    'prefix': 'setScrollEnabled:'
    'body': 'setScrollEnabled(${1:BOOL scrollEnabled})'
  'setScrollIndicatorInsets:':
    'prefix': 'setScrollIndicatorInsets:'
    'body': 'setScrollIndicatorInsets(${1:UIEdgeInsets scrollIndicatorInsets})'
  'setScrollsToTop:':
    'prefix': 'setScrollsToTop:'
    'body': 'setScrollsToTop(${1:BOOL scrollsToTop})'
  'setShowsHorizontalScrollIndicator:':
    'prefix': 'setShowsHorizontalScrollIndicator:'
    'body': 'setShowsHorizontalScrollIndicator(${1:BOOL showsHorizontalScrollIndicator})'
  'setShowsVerticalScrollIndicator:':
    'prefix': 'setShowsVerticalScrollIndicator:'
    'body': 'setShowsVerticalScrollIndicator(${1:BOOL showsVerticalScrollIndicator})'
  'setZoomScale:':
    'prefix': 'setZoomScale:'
    'body': 'setZoomScale(${1:CGFloat zoomScale})'
  'setZoomScale:animated:':
    'prefix': 'setZoomScale:animated:'
    'body': 'setZoomScale(${1:CGFloat scale}, animated:${2:BOOL animated})'
  'showsHorizontalScrollIndicator':
    'prefix': 'showsHorizontalScrollIndicator'
    'body': 'showsHorizontalScrollIndicator()'
  'showsVerticalScrollIndicator':
    'prefix': 'showsVerticalScrollIndicator'
    'body': 'showsVerticalScrollIndicator()'
  'touchesShouldBegin:withEvent:inContentView:':
    'prefix': 'touchesShouldBegin:withEvent:inContentView:'
    'body': 'touchesShouldBegin(${1:NSSet* touches}, withEvent:${2:UIEvent* event}, inContentView:${3:UIView* view})'
  'touchesShouldCancelInContentView:':
    'prefix': 'touchesShouldCancelInContentView:'
    'body': 'touchesShouldCancelInContentView(${1:UIView* view})'
  'zoomScale':
    'prefix': 'zoomScale'
    'body': 'zoomScale()'
  'zoomToRect:animated:':
    'prefix': 'zoomToRect:animated:'
    'body': 'zoomToRect(${1:CGRect rect}, animated:${2:BOOL animated})'
  'autocapitalizationType':
    'prefix': 'autocapitalizationType'
    'body': 'autocapitalizationType()'
  'autocorrectionType':
    'prefix': 'autocorrectionType'
    'body': 'autocorrectionType()'
  'backgroundImage':
    'prefix': 'backgroundImage'
    'body': 'backgroundImage()'
  'backgroundImageForBarPosition:barMetrics:':
    'prefix': 'backgroundImageForBarPosition:barMetrics:'
    'body': 'backgroundImageForBarPosition(${1:UIBarPosition barPosition}, barMetrics:${2:UIBarMetrics barMetrics})'
  'barStyle':
    'prefix': 'barStyle'
    'body': 'barStyle()'
  'barTintColor':
    'prefix': 'barTintColor'
    'body': 'barTintColor()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'imageForSearchBarIcon:state:':
    'prefix': 'imageForSearchBarIcon:state:'
    'body': 'imageForSearchBarIcon(${1:UISearchBarIcon icon}, state:${2:UIControlState state})'
  'inputAccessoryView':
    'prefix': 'inputAccessoryView'
    'body': 'inputAccessoryView()'
  'isSearchResultsButtonSelected':
    'prefix': 'isSearchResultsButtonSelected'
    'body': 'isSearchResultsButtonSelected()'
  'isTranslucent':
    'prefix': 'isTranslucent'
    'body': 'isTranslucent()'
  'keyboardType':
    'prefix': 'keyboardType'
    'body': 'KeyboardType()'
  'placeholder':
    'prefix': 'placeholder'
    'body': 'placeholder()'
  'positionAdjustmentForSearchBarIcon:':
    'prefix': 'positionAdjustmentForSearchBarIcon:'
    'body': 'positionAdjustmentForSearchBarIcon(${1:UISearchBarIcon icon})'
  'prompt':
    'prefix': 'prompt'
    'body': 'prompt()'
  'scopeBarBackgroundImage':
    'prefix': 'scopeBarBackgroundImage'
    'body': 'scopeBarBackgroundImage()'
  'scopeBarButtonBackgroundImageForState:':
    'prefix': 'scopeBarButtonBackgroundImageForState:'
    'body': 'scopeBarButtonBackgroundImageForState(${1:UIControlState state})'
  'scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:':
    'prefix': 'scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:'
    'body': 'scopeBarButtonDividerImageForLeftSegmentState(${1:UIControlState leftState}, rightSegmentState:${2:UIControlState rightState})'
  'scopeBarButtonTitleTextAttributesForState:':
    'prefix': 'scopeBarButtonTitleTextAttributesForState:'
    'body': 'scopeBarButtonTitleTextAttributesForState(${1:UIControlState state})'
  'scopeButtonTitles':
    'prefix': 'scopeButtonTitles'
    'body': 'scopeButtonTitles()'
  'searchBarStyle':
    'prefix': 'searchBarStyle'
    'body': 'searchBarStyle()'
  'searchFieldBackgroundImageForState:':
    'prefix': 'searchFieldBackgroundImageForState:'
    'body': 'searchFieldBackgroundImageForState(${1:UIControlState state})'
  'searchFieldBackgroundPositionAdjustment':
    'prefix': 'searchFieldBackgroundPositionAdjustment'
    'body': 'searchFieldBackgroundPositionAdjustment()'
  'searchTextPositionAdjustment':
    'prefix': 'searchTextPositionAdjustment'
    'body': 'searchTextPositionAdjustment()'
  'selectedScopeButtonIndex':
    'prefix': 'selectedScopeButtonIndex'
    'body': 'selectedScopeButtonIndex()'
  'setAutocapitalizationType:':
    'prefix': 'setAutocapitalizationType:'
    'body': 'setAutocapitalizationType(${1:UITextAutocapitalizationType autocapitalizationType})'
  'setAutocorrectionType:':
    'prefix': 'setAutocorrectionType:'
    'body': 'setAutocorrectionType(${1:UITextAutocorrectionType autocorrectionType})'
  'setBackgroundImage:':
    'prefix': 'setBackgroundImage:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage})'
  'setBackgroundImage:forBarPosition:barMetrics:':
    'prefix': 'setBackgroundImage:forBarPosition:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forBarPosition:${2:UIBarPosition barPosition}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setBarStyle:':
    'prefix': 'setBarStyle:'
    'body': 'setBarStyle(${1:UIBarStyle barStyle})'
  'setBarTintColor:':
    'prefix': 'setBarTintColor:'
    'body': 'setBarTintColor(${1:UIColor* barTintColor})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setImage:forSearchBarIcon:state:':
    'prefix': 'setImage:forSearchBarIcon:state:'
    'body': 'setImage(${1:UIImage* iconImage}, forSearchBarIcon:${2:UISearchBarIcon icon}, state:${3:UIControlState state})'
  'setInputAccessoryView:':
    'prefix': 'setInputAccessoryView:'
    'body': 'setInputAccessoryView(${1:UIView* inputAccessoryView})'
  'setKeyboardType:':
    'prefix': 'setKeyboardType:'
    'body': 'setKeyboardType(${1:UIKeyboardType keyboardType})'
  'setPlaceholder:':
    'prefix': 'setPlaceholder:'
    'body': 'setPlaceholder(${1:NSString* placeholder})'
  'setPositionAdjustment:forSearchBarIcon:':
    'prefix': 'setPositionAdjustment:forSearchBarIcon:'
    'body': 'setPositionAdjustment(${1:UIOffset adjustment}, forSearchBarIcon:${2:UISearchBarIcon icon})'
  'setPrompt:':
    'prefix': 'setPrompt:'
    'body': 'setPrompt(${1:NSString* prompt})'
  'setScopeBarBackgroundImage:':
    'prefix': 'setScopeBarBackgroundImage:'
    'body': 'setScopeBarBackgroundImage(${1:UIImage* scopeBarBackgroundImage})'
  'setScopeBarButtonBackgroundImage:forState:':
    'prefix': 'setScopeBarButtonBackgroundImage:forState:'
    'body': 'setScopeBarButtonBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state})'
  'setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:':
    'prefix': 'setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:'
    'body': 'setScopeBarButtonDividerImage(${1:UIImage* dividerImage}, forLeftSegmentState:${2:UIControlState leftState}, rightSegmentState:${3:UIControlState rightState})'
  'setScopeBarButtonTitleTextAttributes:forState:':
    'prefix': 'setScopeBarButtonTitleTextAttributes:forState:'
    'body': 'setScopeBarButtonTitleTextAttributes(${1:NSDictionary* attributes}, forState:${2:UIControlState state})'
  'setScopeButtonTitles:':
    'prefix': 'setScopeButtonTitles:'
    'body': 'setScopeButtonTitles(${1:NSArray* scopeButtonTitles})'
  'setSearchBarStyle:':
    'prefix': 'setSearchBarStyle:'
    'body': 'setSearchBarStyle(${1:UISearchBarStyle searchBarStyle})'
  'setSearchFieldBackgroundImage:forState:':
    'prefix': 'setSearchFieldBackgroundImage:forState:'
    'body': 'setSearchFieldBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state})'
  'setSearchFieldBackgroundPositionAdjustment:':
    'prefix': 'setSearchFieldBackgroundPositionAdjustment:'
    'body': 'setSearchFieldBackgroundPositionAdjustment(${1:UIOffset searchFieldBackgroundPositionAdjustment})'
  'setSearchResultsButtonSelected:':
    'prefix': 'setSearchResultsButtonSelected:'
    'body': 'setSearchResultsButtonSelected(${1:BOOL searchResultsButtonSelected})'
  'setSearchTextPositionAdjustment:':
    'prefix': 'setSearchTextPositionAdjustment:'
    'body': 'setSearchTextPositionAdjustment(${1:UIOffset searchTextPositionAdjustment})'
  'setSelectedScopeButtonIndex:':
    'prefix': 'setSelectedScopeButtonIndex:'
    'body': 'setSelectedScopeButtonIndex(${1:NSInteger selectedScopeButtonIndex})'
  'setShowsBookmarkButton:':
    'prefix': 'setShowsBookmarkButton:'
    'body': 'setShowsBookmarkButton(${1:BOOL showsBookmarkButton})'
  'setShowsCancelButton:':
    'prefix': 'setShowsCancelButton:'
    'body': 'setShowsCancelButton(${1:BOOL showsCancelButton})'
  'setShowsCancelButton:animated:':
    'prefix': 'setShowsCancelButton:animated:'
    'body': 'setShowsCancelButton(${1:BOOL showsCancelButton}, animated:${2:BOOL animated})'
  'setShowsScopeBar:':
    'prefix': 'setShowsScopeBar:'
    'body': 'setShowsScopeBar(${1:BOOL showsScopeBar})'
  'setShowsSearchResultsButton:':
    'prefix': 'setShowsSearchResultsButton:'
    'body': 'setShowsSearchResultsButton(${1:BOOL showsSearchResultsButton})'
  'setSpellCheckingType:':
    'prefix': 'setSpellCheckingType:'
    'body': 'setSpellCheckingType(${1:UITextSpellCheckingType spellCheckingType})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTranslucent:':
    'prefix': 'setTranslucent:'
    'body': 'setTranslucent(${1:BOOL translucent})'
  'showsBookmarkButton':
    'prefix': 'showsBookmarkButton'
    'body': 'showsBookmarkButton()'
  'showsCancelButton':
    'prefix': 'showsCancelButton'
    'body': 'showsCancelButton()'
  'showsScopeBar':
    'prefix': 'showsScopeBar'
    'body': 'showsScopeBar()'
  'showsSearchResultsButton':
    'prefix': 'showsSearchResultsButton'
    'body': 'showsSearchResultsButton()'
  'spellCheckingType':
    'prefix': 'spellCheckingType'
    'body': 'spellCheckingType()'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'displaysSearchBarInNavigationBar':
    'prefix': 'displaysSearchBarInNavigationBar'
    'body': 'displaysSearchBarInNavigationBar()'
  'initWithSearchBar:contentsController:':
    'prefix': 'initWithSearchBar:contentsController:'
    'body': 'initWithSearchBar(${1:UISearchBar* searchBar}, contentsController:${2:UIViewController* viewController})'
  'isActive':
    'prefix': 'isActive'
    'body': 'isActive()'
  'navigationItem':
    'prefix': 'navigationItem'
    'body': 'navigationItem()'
  'searchBar':
    'prefix': 'searchBar'
    'body': 'searchBar()'
  'searchContentsController':
    'prefix': 'searchContentsController'
    'body': 'searchContentsController()'
  'searchResultsDataSource':
    'prefix': 'searchResultsDataSource'
    'body': 'searchResultsDataSource()'
  'searchResultsDelegate':
    'prefix': 'searchResultsDelegate'
    'body': 'searchResultsDelegate()'
  'searchResultsTableView':
    'prefix': 'searchResultsTableView'
    'body': 'searchResultsTableView()'
  'searchResultsTitle':
    'prefix': 'searchResultsTitle'
    'body': 'searchResultsTitle()'
  'setActive:':
    'prefix': 'setActive:'
    'body': 'setActive(${1:BOOL active})'
  'setActive:animated:':
    'prefix': 'setActive:animated:'
    'body': 'setActive(${1:BOOL visible}, animated:${2:BOOL animated})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDisplaysSearchBarInNavigationBar:':
    'prefix': 'setDisplaysSearchBarInNavigationBar:'
    'body': 'setDisplaysSearchBarInNavigationBar(${1:BOOL displaysSearchBarInNavigationBar})'
  'setSearchResultsDataSource:':
    'prefix': 'setSearchResultsDataSource:'
    'body': 'setSearchResultsDataSource(${1:id searchResultsDataSource})'
  'setSearchResultsDelegate:':
    'prefix': 'setSearchResultsDelegate:'
    'body': 'setSearchResultsDelegate(${1:id searchResultsDelegate})'
  'setSearchResultsTitle:':
    'prefix': 'setSearchResultsTitle:'
    'body': 'setSearchResultsTitle(${1:NSString* searchResultsTitle})'
  'apportionsSegmentWidthsByContent':
    'prefix': 'apportionsSegmentWidthsByContent'
    'body': 'apportionsSegmentWidthsByContent()'
  'backgroundImageForState:barMetrics:':
    'prefix': 'backgroundImageForState:barMetrics:'
    'body': 'backgroundImageForState(${1:UIControlState state}, barMetrics:${2:UIBarMetrics barMetrics})'
  'contentOffsetForSegmentAtIndex:':
    'prefix': 'contentOffsetForSegmentAtIndex:'
    'body': 'contentOffsetForSegmentAtIndex(${1:NSUInteger segment})'
  'contentPositionAdjustmentForSegmentType:barMetrics:':
    'prefix': 'contentPositionAdjustmentForSegmentType:barMetrics:'
    'body': 'contentPositionAdjustmentForSegmentType(${1:UISegmentedControlSegment leftCenterRightOrAlone}, barMetrics:${2:UIBarMetrics barMetrics})'
  'dividerImageForLeftSegmentState:rightSegmentState:barMetrics:':
    'prefix': 'dividerImageForLeftSegmentState:rightSegmentState:barMetrics:'
    'body': 'dividerImageForLeftSegmentState(${1:UIControlState leftState}, rightSegmentState:${2:UIControlState rightState}, barMetrics:${3:UIBarMetrics barMetrics})'
  'imageForSegmentAtIndex:':
    'prefix': 'imageForSegmentAtIndex:'
    'body': 'imageForSegmentAtIndex(${1:NSUInteger segment})'
  'initWithItems:':
    'prefix': 'initWithItems:'
    'body': 'initWithItems(${1:NSArray* items})'
  'insertSegmentWithImage:atIndex:animated:':
    'prefix': 'insertSegmentWithImage:atIndex:animated:'
    'body': 'insertSegmentWithImage(${1:UIImage* image}, atIndex:${2:NSUInteger segment}, animated:${3:BOOL animated})'
  'insertSegmentWithTitle:atIndex:animated:':
    'prefix': 'insertSegmentWithTitle:atIndex:animated:'
    'body': 'insertSegmentWithTitle(${1:NSString* title}, atIndex:${2:NSUInteger segment}, animated:${3:BOOL animated})'
  'isEnabledForSegmentAtIndex:':
    'prefix': 'isEnabledForSegmentAtIndex:'
    'body': 'isEnabledForSegmentAtIndex(${1:NSUInteger segment})'
  'isMomentary':
    'prefix': 'isMomentary'
    'body': 'isMomentary()'
  'numberOfSegments':
    'prefix': 'numberOfSegments'
    'body': 'numberOfSegments()'
  'removeAllSegments':
    'prefix': 'removeAllSegments'
    'body': 'removeAllSegments()'
  'removeSegmentAtIndex:animated:':
    'prefix': 'removeSegmentAtIndex:animated:'
    'body': 'removeSegmentAtIndex(${1:NSUInteger segment}, animated:${2:BOOL animated})'
  'segmentedControlStyle':
    'prefix': 'segmentedControlStyle'
    'body': 'segmentedControlStyle()'
  'selectedSegmentIndex':
    'prefix': 'selectedSegmentIndex'
    'body': 'selectedSegmentIndex()'
  'setApportionsSegmentWidthsByContent:':
    'prefix': 'setApportionsSegmentWidthsByContent:'
    'body': 'setApportionsSegmentWidthsByContent(${1:BOOL apportionsSegmentWidthsByContent})'
  'setBackgroundImage:forState:barMetrics:':
    'prefix': 'setBackgroundImage:forState:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forState:${2:UIControlState state}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setContentOffset:forSegmentAtIndex:':
    'prefix': 'setContentOffset:forSegmentAtIndex:'
    'body': 'setContentOffset(${1:CGSize offset}, forSegmentAtIndex:${2:NSUInteger segment})'
  'setContentPositionAdjustment:forSegmentType:barMetrics:':
    'prefix': 'setContentPositionAdjustment:forSegmentType:barMetrics:'
    'body': 'setContentPositionAdjustment(${1:UIOffset adjustment}, forSegmentType:${2:UISegmentedControlSegment leftCenterRightOrAlone}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:':
    'prefix': 'setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:'
    'body': 'setDividerImage(${1:UIImage* dividerImage}, forLeftSegmentState:${2:UIControlState leftState}, rightSegmentState:${3:UIControlState rightState}, barMetrics:${4:UIBarMetrics barMetrics})'
  'setEnabled:forSegmentAtIndex:':
    'prefix': 'setEnabled:forSegmentAtIndex:'
    'body': 'setEnabled(${1:BOOL enabled}, forSegmentAtIndex:${2:NSUInteger segment})'
  'setImage:forSegmentAtIndex:':
    'prefix': 'setImage:forSegmentAtIndex:'
    'body': 'setImage(${1:UIImage* image}, forSegmentAtIndex:${2:NSUInteger segment})'
  'setMomentary:':
    'prefix': 'setMomentary:'
    'body': 'setMomentary(${1:BOOL momentary})'
  'setSegmentedControlStyle:':
    'prefix': 'setSegmentedControlStyle:'
    'body': 'setSegmentedControlStyle(${1:UISegmentedControlStyle segmentedControlStyle})'
  'setSelectedSegmentIndex:':
    'prefix': 'setSelectedSegmentIndex:'
    'body': 'setSelectedSegmentIndex(${1:NSInteger selectedSegmentIndex})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTitle:forSegmentAtIndex:':
    'prefix': 'setTitle:forSegmentAtIndex:'
    'body': 'setTitle(${1:NSString* title}, forSegmentAtIndex:${2:NSUInteger segment})'
  'setTitleTextAttributes:forState:':
    'prefix': 'setTitleTextAttributes:forState:'
    'body': 'setTitleTextAttributes(${1:NSDictionary* attributes}, forState:${2:UIControlState state})'
  'setWidth:forSegmentAtIndex:':
    'prefix': 'setWidth:forSegmentAtIndex:'
    'body': 'setWidth(${1:CGFloat width}, forSegmentAtIndex:${2:NSUInteger segment})'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'titleForSegmentAtIndex:':
    'prefix': 'titleForSegmentAtIndex:'
    'body': 'titleForSegmentAtIndex(${1:NSUInteger segment})'
  'titleTextAttributesForState:':
    'prefix': 'titleTextAttributesForState:'
    'body': 'titleTextAttributesForState(${1:UIControlState state})'
  'widthForSegmentAtIndex:':
    'prefix': 'widthForSegmentAtIndex:'
    'body': 'widthForSegmentAtIndex(${1:NSUInteger segment})'
  'attributedText':
    'prefix': 'attributedText'
    'body': 'attributedText()'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'initWithAttributedText:':
    'prefix': 'initWithAttributedText:'
    'body': 'initWithAttributedText(${1:NSAttributedString* attributedText})'
  'initWithText:':
    'prefix': 'initWithText:'
    'body': 'initWithText(${1:NSString* text})'
  'setAttributedText:':
    'prefix': 'setAttributedText:'
    'body': 'setAttributedText(${1:NSAttributedString* attributedText})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:UIColor* color})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment textAlignment})'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'textAlignment':
    'prefix': 'textAlignment'
    'body': 'textAlignment()'
  'currentMaximumTrackImage':
    'prefix': 'currentMaximumTrackImage'
    'body': 'currentMaximumTrackImage()'
  'currentMinimumTrackImage':
    'prefix': 'currentMinimumTrackImage'
    'body': 'currentMinimumTrackImage()'
  'currentThumbImage':
    'prefix': 'currentThumbImage'
    'body': 'currentThumbImage()'
  'isContinuous':
    'prefix': 'isContinuous'
    'body': 'isContinuous()'
  'maximumTrackImageForState:':
    'prefix': 'maximumTrackImageForState:'
    'body': 'maximumTrackImageForState(${1:UIControlState state})'
  'maximumTrackTintColor':
    'prefix': 'maximumTrackTintColor'
    'body': 'maximumTrackTintColor()'
  'maximumValue':
    'prefix': 'maximumValue'
    'body': 'maximumValue()'
  'maximumValueImage':
    'prefix': 'maximumValueImage'
    'body': 'maximumValueImage()'
  'maximumValueImageRectForBounds:':
    'prefix': 'maximumValueImageRectForBounds:'
    'body': 'maximumValueImageRectForBounds(${1:CGRect bounds})'
  'minimumTrackImageForState:':
    'prefix': 'minimumTrackImageForState:'
    'body': 'minimumTrackImageForState(${1:UIControlState state})'
  'minimumTrackTintColor':
    'prefix': 'minimumTrackTintColor'
    'body': 'minimumTrackTintColor()'
  'minimumValue':
    'prefix': 'minimumValue'
    'body': 'minimumValue()'
  'minimumValueImage':
    'prefix': 'minimumValueImage'
    'body': 'minimumValueImage()'
  'minimumValueImageRectForBounds:':
    'prefix': 'minimumValueImageRectForBounds:'
    'body': 'minimumValueImageRectForBounds(${1:CGRect bounds})'
  'setContinuous:':
    'prefix': 'setContinuous:'
    'body': 'setContinuous(${1:BOOL continuous})'
  'setMaximumTrackImage:forState:':
    'prefix': 'setMaximumTrackImage:forState:'
    'body': 'setMaximumTrackImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setMaximumTrackTintColor:':
    'prefix': 'setMaximumTrackTintColor:'
    'body': 'setMaximumTrackTintColor(${1:UIColor* maximumTrackTintColor})'
  'setMaximumValue:':
    'prefix': 'setMaximumValue:'
    'body': 'setMaximumValue(${1:float maximumValue})'
  'setMaximumValueImage:':
    'prefix': 'setMaximumValueImage:'
    'body': 'setMaximumValueImage(${1:UIImage* maximumValueImage})'
  'setMinimumTrackImage:forState:':
    'prefix': 'setMinimumTrackImage:forState:'
    'body': 'setMinimumTrackImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setMinimumTrackTintColor:':
    'prefix': 'setMinimumTrackTintColor:'
    'body': 'setMinimumTrackTintColor(${1:UIColor* minimumTrackTintColor})'
  'setMinimumValue:':
    'prefix': 'setMinimumValue:'
    'body': 'setMinimumValue(${1:float minimumValue})'
  'setMinimumValueImage:':
    'prefix': 'setMinimumValueImage:'
    'body': 'setMinimumValueImage(${1:UIImage* minimumValueImage})'
  'setThumbImage:forState:':
    'prefix': 'setThumbImage:forState:'
    'body': 'setThumbImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setThumbTintColor:':
    'prefix': 'setThumbTintColor:'
    'body': 'setThumbTintColor(${1:UIColor* thumbTintColor})'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:float value})'
  'setValue:animated:':
    'prefix': 'setValue:animated:'
    'body': 'setValue(${1:float value}, animated:${2:BOOL animated})'
  'thumbImageForState:':
    'prefix': 'thumbImageForState:'
    'body': 'thumbImageForState(${1:UIControlState state})'
  'thumbRectForBounds:trackRect:value:':
    'prefix': 'thumbRectForBounds:trackRect:value:'
    'body': 'thumbRectForBounds(${1:CGRect bounds}, trackRect:${2:CGRect rect}, value:${3:float value})'
  'thumbTintColor':
    'prefix': 'thumbTintColor'
    'body': 'thumbTintColor()'
  'trackRectForBounds:':
    'prefix': 'trackRectForBounds:'
    'body': 'trackRectForBounds(${1:CGRect bounds})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'damping':
    'prefix': 'damping'
    'body': 'damping()'
  'initWithItem:snapToPoint:':
    'prefix': 'initWithItem:snapToPoint:'
    'body': 'initWithItem(${1:id item}, snapToPoint:${2:CGPoint point})'
  'setDamping:':
    'prefix': 'setDamping:'
    'body': 'setDamping(${1:CGFloat damping})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'presentsWithGesture':
    'prefix': 'presentsWithGesture'
    'body': 'presentsWithGesture()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setPresentsWithGesture:':
    'prefix': 'setPresentsWithGesture:'
    'body': 'setPresentsWithGesture(${1:BOOL presentsWithGesture})'
  'setViewControllers:':
    'prefix': 'setViewControllers:'
    'body': 'setViewControllers(${1:NSArray* viewControllers})'
  'viewControllers':
    'prefix': 'viewControllers'
    'body': 'viewControllers()'
  'autorepeat':
    'prefix': 'autorepeat'
    'body': 'autorepeat()'
  'backgroundImageForState:':
    'prefix': 'backgroundImageForState:'
    'body': 'backgroundImageForState(${1:UIControlState state})'
  'decrementImageForState:':
    'prefix': 'decrementImageForState:'
    'body': 'decrementImageForState(${1:UIControlState state})'
  'dividerImageForLeftSegmentState:rightSegmentState:':
    'prefix': 'dividerImageForLeftSegmentState:rightSegmentState:'
    'body': 'dividerImageForLeftSegmentState(${1:UIControlState state}, rightSegmentState:${2:UIControlState state})'
  'incrementImageForState:':
    'prefix': 'incrementImageForState:'
    'body': 'incrementImageForState(${1:UIControlState state})'
  'isContinuous':
    'prefix': 'isContinuous'
    'body': 'isContinuous()'
  'maximumValue':
    'prefix': 'maximumValue'
    'body': 'maximumValue()'
  'minimumValue':
    'prefix': 'minimumValue'
    'body': 'minimumValue()'
  'setAutorepeat:':
    'prefix': 'setAutorepeat:'
    'body': 'setAutorepeat(${1:BOOL autorepeat})'
  'setBackgroundImage:forState:':
    'prefix': 'setBackgroundImage:forState:'
    'body': 'setBackgroundImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setContinuous:':
    'prefix': 'setContinuous:'
    'body': 'setContinuous(${1:BOOL continuous})'
  'setDecrementImage:forState:':
    'prefix': 'setDecrementImage:forState:'
    'body': 'setDecrementImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setDividerImage:forLeftSegmentState:rightSegmentState:':
    'prefix': 'setDividerImage:forLeftSegmentState:rightSegmentState:'
    'body': 'setDividerImage(${1:UIImage* image}, forLeftSegmentState:${2:UIControlState leftState}, rightSegmentState:${3:UIControlState rightState})'
  'setIncrementImage:forState:':
    'prefix': 'setIncrementImage:forState:'
    'body': 'setIncrementImage(${1:UIImage* image}, forState:${2:UIControlState state})'
  'setMaximumValue:':
    'prefix': 'setMaximumValue:'
    'body': 'setMaximumValue(${1:double maximumValue})'
  'setMinimumValue:':
    'prefix': 'setMinimumValue:'
    'body': 'setMinimumValue(${1:double minimumValue})'
  'setStepValue:':
    'prefix': 'setStepValue:'
    'body': 'setStepValue(${1:double stepValue})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:double value})'
  'setWraps:':
    'prefix': 'setWraps:'
    'body': 'setWraps(${1:BOOL wraps})'
  'stepValue':
    'prefix': 'stepValue'
    'body': 'stepValue()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'wraps':
    'prefix': 'wraps'
    'body': 'wraps()'
  'instantiateInitialViewController':
    'prefix': 'instantiateInitialViewController'
    'body': 'instantiateInitialViewController()'
  'instantiateViewControllerWithIdentifier:':
    'prefix': 'instantiateViewControllerWithIdentifier:'
    'body': 'instantiateViewControllerWithIdentifier(${1:NSString* identifier})'
  'UIStoryboard.storyboardWithName:bundle:':
    'prefix': 'storyboardWithName:bundle:'
    'body': 'UIStoryboard.storyboardWithName(${1:NSString* name}, bundle:${2:NSBundle* storyboardBundleOrNil})'
  'popoverController':
    'prefix': 'popoverController'
    'body': 'popoverController()'
  'destinationViewController':
    'prefix': 'destinationViewController'
    'body': 'destinationViewController()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'initWithIdentifier:source:destination:':
    'prefix': 'initWithIdentifier:source:destination:'
    'body': 'initWithIdentifier(${1:NSString* identifier}, source:${2:UIViewController* source}, destination:${3:UIViewController* destination})'
  'perform':
    'prefix': 'perform'
    'body': 'perform()'
  'UIStoryboardSegue.segueWithIdentifier:source:destination:performHandler:':
    'prefix': 'segueWithIdentifier:source:destination:performHandler:'
    'body': 'UIStoryboardSegue.segueWithIdentifier(${1:NSString* identifier}, source:${2:UIViewController* source}, destination:${3:UIViewController* destination}, performHandler:${4:void (^)(void) performHandler})'
  'sourceViewController':
    'prefix': 'sourceViewController'
    'body': 'sourceViewController()'
  'direction':
    'prefix': 'direction'
    'body': 'direction()'
  'numberOfTouchesRequired':
    'prefix': 'numberOfTouchesRequired'
    'body': 'numberOfTouchesRequired()'
  'setDirection:':
    'prefix': 'setDirection:'
    'body': 'setDirection(${1:UISwipeGestureRecognizerDirection direction})'
  'setNumberOfTouchesRequired:':
    'prefix': 'setNumberOfTouchesRequired:'
    'body': 'setNumberOfTouchesRequired(${1:NSUInteger numberOfTouchesRequired})'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:CGRect frame})'
  'isOn':
    'prefix': 'isOn'
    'body': 'isOn()'
  'offImage':
    'prefix': 'offImage'
    'body': 'offImage()'
  'onImage':
    'prefix': 'onImage'
    'body': 'onImage()'
  'onTintColor':
    'prefix': 'onTintColor'
    'body': 'onTintColor()'
  'setOffImage:':
    'prefix': 'setOffImage:'
    'body': 'setOffImage(${1:UIImage* offImage})'
  'setOn:':
    'prefix': 'setOn:'
    'body': 'setOn(${1:BOOL on})'
  'setOn:animated:':
    'prefix': 'setOn:animated:'
    'body': 'setOn(${1:BOOL on}, animated:${2:BOOL animated})'
  'setOnImage:':
    'prefix': 'setOnImage:'
    'body': 'setOnImage(${1:UIImage* onImage})'
  'setOnTintColor:':
    'prefix': 'setOnTintColor:'
    'body': 'setOnTintColor(${1:UIColor* onTintColor})'
  'setThumbTintColor:':
    'prefix': 'setThumbTintColor:'
    'body': 'setThumbTintColor(${1:UIColor* thumbTintColor})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'thumbTintColor':
    'prefix': 'thumbTintColor'
    'body': 'thumbTintColor()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'backgroundImage':
    'prefix': 'backgroundImage'
    'body': 'backgroundImage()'
  'barStyle':
    'prefix': 'barStyle'
    'body': 'barStyle()'
  'barTintColor':
    'prefix': 'barTintColor'
    'body': 'barTintColor()'
  'beginCustomizingItems:':
    'prefix': 'beginCustomizingItems:'
    'body': 'beginCustomizingItems(${1:NSArray* items})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'endCustomizingAnimated:':
    'prefix': 'endCustomizingAnimated:'
    'body': 'endCustomizingAnimated(${1:BOOL animated})'
  'isCustomizing':
    'prefix': 'isCustomizing'
    'body': 'isCustomizing()'
  'isTranslucent':
    'prefix': 'isTranslucent'
    'body': 'isTranslucent()'
  'itemPositioning':
    'prefix': 'itemPositioning'
    'body': 'itemPositioning()'
  'itemSpacing':
    'prefix': 'itemSpacing'
    'body': 'itemSpacing()'
  'itemWidth':
    'prefix': 'itemWidth'
    'body': 'itemWidth()'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'selectedImageTintColor':
    'prefix': 'selectedImageTintColor'
    'body': 'selectedImageTintColor()'
  'selectedItem':
    'prefix': 'selectedItem'
    'body': 'selectedItem()'
  'selectionIndicatorImage':
    'prefix': 'selectionIndicatorImage'
    'body': 'selectionIndicatorImage()'
  'setBackgroundImage:':
    'prefix': 'setBackgroundImage:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage})'
  'setBarStyle:':
    'prefix': 'setBarStyle:'
    'body': 'setBarStyle(${1:UIBarStyle barStyle})'
  'setBarTintColor:':
    'prefix': 'setBarTintColor:'
    'body': 'setBarTintColor(${1:UIColor* barTintColor})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setItemPositioning:':
    'prefix': 'setItemPositioning:'
    'body': 'setItemPositioning(${1:UITabBarItemPositioning itemPositioning})'
  'setItemSpacing:':
    'prefix': 'setItemSpacing:'
    'body': 'setItemSpacing(${1:CGFloat itemSpacing})'
  'setItemWidth:':
    'prefix': 'setItemWidth:'
    'body': 'setItemWidth(${1:CGFloat itemWidth})'
  'setItems:':
    'prefix': 'setItems:'
    'body': 'setItems(${1:NSArray* items})'
  'setItems:animated:':
    'prefix': 'setItems:animated:'
    'body': 'setItems(${1:NSArray* items}, animated:${2:BOOL animated})'
  'setSelectedImageTintColor:':
    'prefix': 'setSelectedImageTintColor:'
    'body': 'setSelectedImageTintColor(${1:UIColor* selectedImageTintColor})'
  'setSelectedItem:':
    'prefix': 'setSelectedItem:'
    'body': 'setSelectedItem(${1:UITabBarItem* selectedItem})'
  'setSelectionIndicatorImage:':
    'prefix': 'setSelectionIndicatorImage:'
    'body': 'setSelectionIndicatorImage(${1:UIImage* selectionIndicatorImage})'
  'setShadowImage:':
    'prefix': 'setShadowImage:'
    'body': 'setShadowImage(${1:UIImage* shadowImage})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTranslucent:':
    'prefix': 'setTranslucent:'
    'body': 'setTranslucent(${1:BOOL translucent})'
  'shadowImage':
    'prefix': 'shadowImage'
    'body': 'shadowImage()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'customizableViewControllers':
    'prefix': 'customizableViewControllers'
    'body': 'customizableViewControllers()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'moreNavigationController':
    'prefix': 'moreNavigationController'
    'body': 'moreNavigationController()'
  'selectedIndex':
    'prefix': 'selectedIndex'
    'body': 'selectedIndex()'
  'selectedViewController':
    'prefix': 'selectedViewController'
    'body': 'selectedViewController()'
  'setCustomizableViewControllers:':
    'prefix': 'setCustomizableViewControllers:'
    'body': 'setCustomizableViewControllers(${1:NSArray* customizableViewControllers})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setSelectedIndex:':
    'prefix': 'setSelectedIndex:'
    'body': 'setSelectedIndex(${1:NSUInteger selectedIndex})'
  'setSelectedViewController:':
    'prefix': 'setSelectedViewController:'
    'body': 'setSelectedViewController(${1:UIViewController* selectedViewController})'
  'setViewControllers:':
    'prefix': 'setViewControllers:'
    'body': 'setViewControllers(${1:NSArray* viewControllers})'
  'setViewControllers:animated:':
    'prefix': 'setViewControllers:animated:'
    'body': 'setViewControllers(${1:NSArray* viewControllers}, animated:${2:BOOL animated})'
  'tabBar':
    'prefix': 'tabBar'
    'body': 'tabBar()'
  'viewControllers':
    'prefix': 'viewControllers'
    'body': 'viewControllers()'
  'badgeValue':
    'prefix': 'badgeValue'
    'body': 'badgeValue()'
  'finishedSelectedImage':
    'prefix': 'finishedSelectedImage'
    'body': 'finishedSelectedImage()'
  'finishedUnselectedImage':
    'prefix': 'finishedUnselectedImage'
    'body': 'finishedUnselectedImage()'
  'initWithTabBarSystemItem:tag:':
    'prefix': 'initWithTabBarSystemItem:tag:'
    'body': 'initWithTabBarSystemItem(${1:UITabBarSystemItem systemItem}, tag:${2:NSInteger tag})'
  'initWithTitle:image:selectedImage:':
    'prefix': 'initWithTitle:image:selectedImage:'
    'body': 'initWithTitle(${1:NSString* title}, image:${2:UIImage* image}, selectedImage:${3:UIImage* selectedImage})'
  'initWithTitle:image:tag:':
    'prefix': 'initWithTitle:image:tag:'
    'body': 'initWithTitle(${1:NSString* title}, image:${2:UIImage* image}, tag:${3:NSInteger tag})'
  'selectedImage':
    'prefix': 'selectedImage'
    'body': 'selectedImage()'
  'setBadgeValue:':
    'prefix': 'setBadgeValue:'
    'body': 'setBadgeValue(${1:NSString* badgeValue})'
  'setFinishedSelectedImage:withFinishedUnselectedImage:':
    'prefix': 'setFinishedSelectedImage:withFinishedUnselectedImage:'
    'body': 'setFinishedSelectedImage(${1:UIImage* selectedImage}, withFinishedUnselectedImage:${2:UIImage* unselectedImage})'
  'setSelectedImage:':
    'prefix': 'setSelectedImage:'
    'body': 'setSelectedImage(${1:UIImage* selectedImage})'
  'setTitlePositionAdjustment:':
    'prefix': 'setTitlePositionAdjustment:'
    'body': 'setTitlePositionAdjustment(${1:UIOffset adjustment})'
  'titlePositionAdjustment':
    'prefix': 'titlePositionAdjustment'
    'body': 'titlePositionAdjustment()'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'allowsMultipleSelectionDuringEditing':
    'prefix': 'allowsMultipleSelectionDuringEditing'
    'body': 'allowsMultipleSelectionDuringEditing()'
  'allowsSelection':
    'prefix': 'allowsSelection'
    'body': 'allowsSelection()'
  'allowsSelectionDuringEditing':
    'prefix': 'allowsSelectionDuringEditing'
    'body': 'allowsSelectionDuringEditing()'
  'backgroundView':
    'prefix': 'backgroundView'
    'body': 'backgroundView()'
  'beginUpdates':
    'prefix': 'beginUpdates'
    'body': 'beginUpdates()'
  'cellForRowAtIndexPath:':
    'prefix': 'cellForRowAtIndexPath:'
    'body': 'cellForRowAtIndexPath(${1:NSIndexPath* indexPath})'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deleteRowsAtIndexPaths:withRowAnimation:':
    'prefix': 'deleteRowsAtIndexPaths:withRowAnimation:'
    'body': 'deleteRowsAtIndexPaths(${1:NSArray* indexPaths}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'deleteSections:withRowAnimation:':
    'prefix': 'deleteSections:withRowAnimation:'
    'body': 'deleteSections(${1:NSIndexSet* sections}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'dequeueReusableCellWithIdentifier:':
    'prefix': 'dequeueReusableCellWithIdentifier:'
    'body': 'dequeueReusableCellWithIdentifier(${1:NSString* identifier})'
  'dequeueReusableCellWithIdentifier:forIndexPath:':
    'prefix': 'dequeueReusableCellWithIdentifier:forIndexPath:'
    'body': 'dequeueReusableCellWithIdentifier(${1:NSString* identifier}, forIndexPath:${2:NSIndexPath* indexPath})'
  'dequeueReusableHeaderFooterViewWithIdentifier:':
    'prefix': 'dequeueReusableHeaderFooterViewWithIdentifier:'
    'body': 'dequeueReusableHeaderFooterViewWithIdentifier(${1:NSString* identifier})'
  'deselectRowAtIndexPath:animated:':
    'prefix': 'deselectRowAtIndexPath:animated:'
    'body': 'deselectRowAtIndexPath(${1:NSIndexPath* indexPath}, animated:${2:BOOL animated})'
  'endUpdates':
    'prefix': 'endUpdates'
    'body': 'endUpdates()'
  'estimatedRowHeight':
    'prefix': 'estimatedRowHeight'
    'body': 'estimatedRowHeight()'
  'estimatedSectionFooterHeight':
    'prefix': 'estimatedSectionFooterHeight'
    'body': 'estimatedSectionFooterHeight()'
  'estimatedSectionHeaderHeight':
    'prefix': 'estimatedSectionHeaderHeight'
    'body': 'estimatedSectionHeaderHeight()'
  'footerViewForSection:':
    'prefix': 'footerViewForSection:'
    'body': 'footerViewForSection(${1:NSInteger section})'
  'headerViewForSection:':
    'prefix': 'headerViewForSection:'
    'body': 'headerViewForSection(${1:NSInteger section})'
  'indexPathForCell:':
    'prefix': 'indexPathForCell:'
    'body': 'indexPathForCell(${1:UITableViewCell* cell})'
  'indexPathForRowAtPoint:':
    'prefix': 'indexPathForRowAtPoint:'
    'body': 'indexPathForRowAtPoint(${1:CGPoint point})'
  'indexPathForSelectedRow':
    'prefix': 'indexPathForSelectedRow'
    'body': 'indexPathForSelectedRow()'
  'indexPathsForRowsInRect:':
    'prefix': 'indexPathsForRowsInRect:'
    'body': 'indexPathsForRowsInRect(${1:CGRect rect})'
  'indexPathsForSelectedRows':
    'prefix': 'indexPathsForSelectedRows'
    'body': 'indexPathsForSelectedRows()'
  'indexPathsForVisibleRows':
    'prefix': 'indexPathsForVisibleRows'
    'body': 'indexPathsForVisibleRows()'
  'initWithFrame:style:':
    'prefix': 'initWithFrame:style:'
    'body': 'initWithFrame(${1:CGRect frame}, style:${2:UITableViewStyle style})'
  'insertRowsAtIndexPaths:withRowAnimation:':
    'prefix': 'insertRowsAtIndexPaths:withRowAnimation:'
    'body': 'insertRowsAtIndexPaths(${1:NSArray* indexPaths}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'insertSections:withRowAnimation:':
    'prefix': 'insertSections:withRowAnimation:'
    'body': 'insertSections(${1:NSIndexSet* sections}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'isEditing':
    'prefix': 'isEditing'
    'body': 'isEditing()'
  'moveRowAtIndexPath:toIndexPath:':
    'prefix': 'moveRowAtIndexPath:toIndexPath:'
    'body': 'moveRowAtIndexPath(${1:NSIndexPath* indexPath}, toIndexPath:${2:NSIndexPath* newIndexPath})'
  'moveSection:toSection:':
    'prefix': 'moveSection:toSection:'
    'body': 'moveSection(${1:NSInteger section}, toSection:${2:NSInteger newSection})'
  'numberOfRowsInSection:':
    'prefix': 'numberOfRowsInSection:'
    'body': 'numberOfRowsInSection(${1:NSInteger section})'
  'numberOfSections':
    'prefix': 'numberOfSections'
    'body': 'numberOfSections()'
  'rectForFooterInSection:':
    'prefix': 'rectForFooterInSection:'
    'body': 'rectForFooterInSection(${1:NSInteger section})'
  'rectForHeaderInSection:':
    'prefix': 'rectForHeaderInSection:'
    'body': 'rectForHeaderInSection(${1:NSInteger section})'
  'rectForRowAtIndexPath:':
    'prefix': 'rectForRowAtIndexPath:'
    'body': 'rectForRowAtIndexPath(${1:NSIndexPath* indexPath})'
  'rectForSection:':
    'prefix': 'rectForSection:'
    'body': 'rectForSection(${1:NSInteger section})'
  'registerClass:forCellReuseIdentifier:':
    'prefix': 'registerClass:forCellReuseIdentifier:'
    'body': 'registerClass(${1:Class cellClass}, forCellReuseIdentifier:${2:NSString* identifier})'
  'registerClass:forHeaderFooterViewReuseIdentifier:':
    'prefix': 'registerClass:forHeaderFooterViewReuseIdentifier:'
    'body': 'registerClass(${1:Class aClass}, forHeaderFooterViewReuseIdentifier:${2:NSString* identifier})'
  'registerNib:forCellReuseIdentifier:':
    'prefix': 'registerNib:forCellReuseIdentifier:'
    'body': 'registerNib(${1:UINib* nib}, forCellReuseIdentifier:${2:NSString* identifier})'
  'registerNib:forHeaderFooterViewReuseIdentifier:':
    'prefix': 'registerNib:forHeaderFooterViewReuseIdentifier:'
    'body': 'registerNib(${1:UINib* nib}, forHeaderFooterViewReuseIdentifier:${2:NSString* identifier})'
  'reloadData':
    'prefix': 'reloadData'
    'body': 'reloadData()'
  'reloadRowsAtIndexPaths:withRowAnimation:':
    'prefix': 'reloadRowsAtIndexPaths:withRowAnimation:'
    'body': 'reloadRowsAtIndexPaths(${1:NSArray* indexPaths}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'reloadSectionIndexTitles':
    'prefix': 'reloadSectionIndexTitles'
    'body': 'reloadSectionIndexTitles()'
  'reloadSections:withRowAnimation:':
    'prefix': 'reloadSections:withRowAnimation:'
    'body': 'reloadSections(${1:NSIndexSet* sections}, withRowAnimation:${2:UITableViewRowAnimation animation})'
  'rowHeight':
    'prefix': 'rowHeight'
    'body': 'rowHeight()'
  'scrollToNearestSelectedRowAtScrollPosition:animated:':
    'prefix': 'scrollToNearestSelectedRowAtScrollPosition:animated:'
    'body': 'scrollToNearestSelectedRowAtScrollPosition(${1:UITableViewScrollPosition scrollPosition}, animated:${2:BOOL animated})'
  'scrollToRowAtIndexPath:atScrollPosition:animated:':
    'prefix': 'scrollToRowAtIndexPath:atScrollPosition:animated:'
    'body': 'scrollToRowAtIndexPath(${1:NSIndexPath* indexPath}, atScrollPosition:${2:UITableViewScrollPosition scrollPosition}, animated:${3:BOOL animated})'
  'sectionFooterHeight':
    'prefix': 'sectionFooterHeight'
    'body': 'sectionFooterHeight()'
  'sectionHeaderHeight':
    'prefix': 'sectionHeaderHeight'
    'body': 'sectionHeaderHeight()'
  'sectionIndexBackgroundColor':
    'prefix': 'sectionIndexBackgroundColor'
    'body': 'sectionIndexBackgroundColor()'
  'sectionIndexColor':
    'prefix': 'sectionIndexColor'
    'body': 'sectionIndexColor()'
  'sectionIndexMinimumDisplayRowCount':
    'prefix': 'sectionIndexMinimumDisplayRowCount'
    'body': 'sectionIndexMinimumDisplayRowCount()'
  'sectionIndexTrackingBackgroundColor':
    'prefix': 'sectionIndexTrackingBackgroundColor'
    'body': 'sectionIndexTrackingBackgroundColor()'
  'selectRowAtIndexPath:animated:scrollPosition:':
    'prefix': 'selectRowAtIndexPath:animated:scrollPosition:'
    'body': 'selectRowAtIndexPath(${1:NSIndexPath* indexPath}, animated:${2:BOOL animated}, scrollPosition:${3:UITableViewScrollPosition scrollPosition})'
  'separatorColor':
    'prefix': 'separatorColor'
    'body': 'separatorColor()'
  'separatorInset':
    'prefix': 'separatorInset'
    'body': 'separatorInset()'
  'separatorStyle':
    'prefix': 'separatorStyle'
    'body': 'separatorStyle()'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL allowsMultipleSelection})'
  'setAllowsMultipleSelectionDuringEditing:':
    'prefix': 'setAllowsMultipleSelectionDuringEditing:'
    'body': 'setAllowsMultipleSelectionDuringEditing(${1:BOOL allowsMultipleSelectionDuringEditing})'
  'setAllowsSelection:':
    'prefix': 'setAllowsSelection:'
    'body': 'setAllowsSelection(${1:BOOL allowsSelection})'
  'setAllowsSelectionDuringEditing:':
    'prefix': 'setAllowsSelectionDuringEditing:'
    'body': 'setAllowsSelectionDuringEditing(${1:BOOL allowsSelectionDuringEditing})'
  'setBackgroundView:':
    'prefix': 'setBackgroundView:'
    'body': 'setBackgroundView(${1:UIView* backgroundView})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id dataSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setEditing:':
    'prefix': 'setEditing:'
    'body': 'setEditing(${1:BOOL editing})'
  'setEditing:animated:':
    'prefix': 'setEditing:animated:'
    'body': 'setEditing(${1:BOOL editing}, animated:${2:BOOL animated})'
  'setEstimatedRowHeight:':
    'prefix': 'setEstimatedRowHeight:'
    'body': 'setEstimatedRowHeight(${1:CGFloat estimatedRowHeight})'
  'setEstimatedSectionFooterHeight:':
    'prefix': 'setEstimatedSectionFooterHeight:'
    'body': 'setEstimatedSectionFooterHeight(${1:CGFloat estimatedSectionFooterHeight})'
  'setEstimatedSectionHeaderHeight:':
    'prefix': 'setEstimatedSectionHeaderHeight:'
    'body': 'setEstimatedSectionHeaderHeight(${1:CGFloat estimatedSectionHeaderHeight})'
  'setRowHeight:':
    'prefix': 'setRowHeight:'
    'body': 'setRowHeight(${1:CGFloat rowHeight})'
  'setSectionFooterHeight:':
    'prefix': 'setSectionFooterHeight:'
    'body': 'setSectionFooterHeight(${1:CGFloat sectionFooterHeight})'
  'setSectionHeaderHeight:':
    'prefix': 'setSectionHeaderHeight:'
    'body': 'setSectionHeaderHeight(${1:CGFloat sectionHeaderHeight})'
  'setSectionIndexBackgroundColor:':
    'prefix': 'setSectionIndexBackgroundColor:'
    'body': 'setSectionIndexBackgroundColor(${1:UIColor* sectionIndexBackgroundColor})'
  'setSectionIndexColor:':
    'prefix': 'setSectionIndexColor:'
    'body': 'setSectionIndexColor(${1:UIColor* sectionIndexColor})'
  'setSectionIndexMinimumDisplayRowCount:':
    'prefix': 'setSectionIndexMinimumDisplayRowCount:'
    'body': 'setSectionIndexMinimumDisplayRowCount(${1:NSInteger sectionIndexMinimumDisplayRowCount})'
  'setSectionIndexTrackingBackgroundColor:':
    'prefix': 'setSectionIndexTrackingBackgroundColor:'
    'body': 'setSectionIndexTrackingBackgroundColor(${1:UIColor* sectionIndexTrackingBackgroundColor})'
  'setSeparatorColor:':
    'prefix': 'setSeparatorColor:'
    'body': 'setSeparatorColor(${1:UIColor* separatorColor})'
  'setSeparatorInset:':
    'prefix': 'setSeparatorInset:'
    'body': 'setSeparatorInset(${1:UIEdgeInsets separatorInset})'
  'setSeparatorStyle:':
    'prefix': 'setSeparatorStyle:'
    'body': 'setSeparatorStyle(${1:UITableViewCellSeparatorStyle separatorStyle})'
  'setTableFooterView:':
    'prefix': 'setTableFooterView:'
    'body': 'setTableFooterView(${1:UIView* tableFooterView})'
  'setTableHeaderView:':
    'prefix': 'setTableHeaderView:'
    'body': 'setTableHeaderView(${1:UIView* tableHeaderView})'
  'style':
    'prefix': 'style'
    'body': 'style()'
  'tableFooterView':
    'prefix': 'tableFooterView'
    'body': 'tableFooterView()'
  'tableHeaderView':
    'prefix': 'tableHeaderView'
    'body': 'tableHeaderView()'
  'visibleCells':
    'prefix': 'visibleCells'
    'body': 'visibleCells()'
  'accessoryAction':
    'prefix': 'accessoryAction'
    'body': 'accessoryAction()'
  'accessoryType':
    'prefix': 'accessoryType'
    'body': 'accessoryType()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'backgroundView':
    'prefix': 'backgroundView'
    'body': 'backgroundView()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'detailTextLabel':
    'prefix': 'detailTextLabel'
    'body': 'detailTextLabel()'
  'didTransitionToState:':
    'prefix': 'didTransitionToState:'
    'body': 'didTransitionToState(${1:UITableViewCellStateMask state})'
  'editAction':
    'prefix': 'editAction'
    'body': 'editAction()'
  'editingAccessoryType':
    'prefix': 'editingAccessoryType'
    'body': 'editingAccessoryType()'
  'editingAccessoryView':
    'prefix': 'editingAccessoryView'
    'body': 'editingAccessoryView()'
  'editingStyle':
    'prefix': 'editingStyle'
    'body': 'editingStyle()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'hidesAccessoryWhenEditing':
    'prefix': 'hidesAccessoryWhenEditing'
    'body': 'hidesAccessoryWhenEditing()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imageView':
    'prefix': 'imageView'
    'body': 'imageView()'
  'indentationLevel':
    'prefix': 'indentationLevel'
    'body': 'indentationLevel()'
  'indentationWidth':
    'prefix': 'indentationWidth'
    'body': 'indentationWidth()'
  'initWithFrame:reuseIdentifier:':
    'prefix': 'initWithFrame:reuseIdentifier:'
    'body': 'initWithFrame(${1:CGRect frame}, reuseIdentifier:${2:NSString* reuseIdentifier})'
  'initWithStyle:reuseIdentifier:':
    'prefix': 'initWithStyle:reuseIdentifier:'
    'body': 'initWithStyle(${1:UITableViewCellStyle style}, reuseIdentifier:${2:NSString* reuseIdentifier})'
  'isEditing':
    'prefix': 'isEditing'
    'body': 'isEditing()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isSelected':
    'prefix': 'isSelected'
    'body': 'isSelected()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'multipleSelectionBackgroundView':
    'prefix': 'multipleSelectionBackgroundView'
    'body': 'multipleSelectionBackgroundView()'
  'prepareForReuse':
    'prefix': 'prepareForReuse'
    'body': 'prepareForReuse()'
  'reuseIdentifier':
    'prefix': 'reuseIdentifier'
    'body': 'reuseIdentifier()'
  'selectedBackgroundView':
    'prefix': 'selectedBackgroundView'
    'body': 'selectedBackgroundView()'
  'selectedImage':
    'prefix': 'selectedImage'
    'body': 'selectedImage()'
  'selectedTextColor':
    'prefix': 'selectedTextColor'
    'body': 'selectedTextColor()'
  'selectionStyle':
    'prefix': 'selectionStyle'
    'body': 'selectionStyle()'
  'separatorInset':
    'prefix': 'separatorInset'
    'body': 'separatorInset()'
  'setAccessoryAction:':
    'prefix': 'setAccessoryAction:'
    'body': 'setAccessoryAction(${1:SEL accessoryAction})'
  'setAccessoryType:':
    'prefix': 'setAccessoryType:'
    'body': 'setAccessoryType(${1:UITableViewCellAccessoryType accessoryType})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:UIView* accessoryView})'
  'setBackgroundView:':
    'prefix': 'setBackgroundView:'
    'body': 'setBackgroundView(${1:UIView* backgroundView})'
  'setEditAction:':
    'prefix': 'setEditAction:'
    'body': 'setEditAction(${1:SEL editAction})'
  'setEditing:':
    'prefix': 'setEditing:'
    'body': 'setEditing(${1:BOOL editing})'
  'setEditing:animated:':
    'prefix': 'setEditing:animated:'
    'body': 'setEditing(${1:BOOL editing}, animated:${2:BOOL animated})'
  'setEditingAccessoryType:':
    'prefix': 'setEditingAccessoryType:'
    'body': 'setEditingAccessoryType(${1:UITableViewCellAccessoryType editingAccessoryType})'
  'setEditingAccessoryView:':
    'prefix': 'setEditingAccessoryView:'
    'body': 'setEditingAccessoryView(${1:UIView* editingAccessoryView})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setHidesAccessoryWhenEditing:':
    'prefix': 'setHidesAccessoryWhenEditing:'
    'body': 'setHidesAccessoryWhenEditing(${1:BOOL hidesAccessoryWhenEditing})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL highlighted})'
  'setHighlighted:animated:':
    'prefix': 'setHighlighted:animated:'
    'body': 'setHighlighted(${1:BOOL highlighted}, animated:${2:BOOL animated})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:UIImage* image})'
  'setIndentationLevel:':
    'prefix': 'setIndentationLevel:'
    'body': 'setIndentationLevel(${1:NSInteger indentationLevel})'
  'setIndentationWidth:':
    'prefix': 'setIndentationWidth:'
    'body': 'setIndentationWidth(${1:CGFloat indentationWidth})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode lineBreakMode})'
  'setMultipleSelectionBackgroundView:':
    'prefix': 'setMultipleSelectionBackgroundView:'
    'body': 'setMultipleSelectionBackgroundView(${1:UIView* multipleSelectionBackgroundView})'
  'setSelected:':
    'prefix': 'setSelected:'
    'body': 'setSelected(${1:BOOL selected})'
  'setSelected:animated:':
    'prefix': 'setSelected:animated:'
    'body': 'setSelected(${1:BOOL selected}, animated:${2:BOOL animated})'
  'setSelectedBackgroundView:':
    'prefix': 'setSelectedBackgroundView:'
    'body': 'setSelectedBackgroundView(${1:UIView* selectedBackgroundView})'
  'setSelectedImage:':
    'prefix': 'setSelectedImage:'
    'body': 'setSelectedImage(${1:UIImage* selectedImage})'
  'setSelectedTextColor:':
    'prefix': 'setSelectedTextColor:'
    'body': 'setSelectedTextColor(${1:UIColor* selectedTextColor})'
  'setSelectionStyle:':
    'prefix': 'setSelectionStyle:'
    'body': 'setSelectionStyle(${1:UITableViewCellSelectionStyle selectionStyle})'
  'setSeparatorInset:':
    'prefix': 'setSeparatorInset:'
    'body': 'setSeparatorInset(${1:UIEdgeInsets separatorInset})'
  'setShouldIndentWhileEditing:':
    'prefix': 'setShouldIndentWhileEditing:'
    'body': 'setShouldIndentWhileEditing(${1:BOOL shouldIndentWhileEditing})'
  'setShowsReorderControl:':
    'prefix': 'setShowsReorderControl:'
    'body': 'setShowsReorderControl(${1:BOOL showsReorderControl})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id target})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment textAlignment})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:UIColor* textColor})'
  'shouldIndentWhileEditing':
    'prefix': 'shouldIndentWhileEditing'
    'body': 'shouldIndentWhileEditing()'
  'showingDeleteConfirmation':
    'prefix': 'showingDeleteConfirmation'
    'body': 'showingDeleteConfirmation()'
  'showsReorderControl':
    'prefix': 'showsReorderControl'
    'body': 'showsReorderControl()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'textAlignment':
    'prefix': 'textAlignment'
    'body': 'textAlignment()'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'textLabel':
    'prefix': 'textLabel'
    'body': 'textLabel()'
  'willTransitionToState:':
    'prefix': 'willTransitionToState:'
    'body': 'willTransitionToState(${1:UITableViewCellStateMask state})'
  'clearsSelectionOnViewWillAppear':
    'prefix': 'clearsSelectionOnViewWillAppear'
    'body': 'clearsSelectionOnViewWillAppear()'
  'initWithStyle:':
    'prefix': 'initWithStyle:'
    'body': 'initWithStyle(${1:UITableViewStyle style})'
  'refreshControl':
    'prefix': 'refreshControl'
    'body': 'refreshControl()'
  'setClearsSelectionOnViewWillAppear:':
    'prefix': 'setClearsSelectionOnViewWillAppear:'
    'body': 'setClearsSelectionOnViewWillAppear(${1:BOOL clearsSelectionOnViewWillAppear})'
  'setRefreshControl:':
    'prefix': 'setRefreshControl:'
    'body': 'setRefreshControl(${1:UIRefreshControl* refreshControl})'
  'setTableView:':
    'prefix': 'setTableView:'
    'body': 'setTableView(${1:UITableView* tableView})'
  'tableView':
    'prefix': 'tableView'
    'body': 'tableView()'
  'backgroundView':
    'prefix': 'backgroundView'
    'body': 'backgroundView()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'detailTextLabel':
    'prefix': 'detailTextLabel'
    'body': 'detailTextLabel()'
  'initWithReuseIdentifier:':
    'prefix': 'initWithReuseIdentifier:'
    'body': 'initWithReuseIdentifier(${1:NSString* reuseIdentifier})'
  'prepareForReuse':
    'prefix': 'prepareForReuse'
    'body': 'prepareForReuse()'
  'reuseIdentifier':
    'prefix': 'reuseIdentifier'
    'body': 'reuseIdentifier()'
  'setBackgroundView:':
    'prefix': 'setBackgroundView:'
    'body': 'setBackgroundView(${1:UIView* backgroundView})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'textLabel':
    'prefix': 'textLabel'
    'body': 'textLabel()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'numberOfTapsRequired':
    'prefix': 'numberOfTapsRequired'
    'body': 'numberOfTapsRequired()'
  'numberOfTouchesRequired':
    'prefix': 'numberOfTouchesRequired'
    'body': 'numberOfTouchesRequired()'
  'setNumberOfTapsRequired:':
    'prefix': 'setNumberOfTapsRequired:'
    'body': 'setNumberOfTapsRequired(${1:NSUInteger numberOfTapsRequired})'
  'setNumberOfTouchesRequired:':
    'prefix': 'setNumberOfTouchesRequired:'
    'body': 'setNumberOfTouchesRequired(${1:NSUInteger numberOfTouchesRequired})'
  'UITextChecker.availableLanguages':
    'prefix': 'availableLanguages'
    'body': 'UITextChecker.availableLanguages()'
  'completionsForPartialWordRange:inString:language:':
    'prefix': 'completionsForPartialWordRange:inString:language:'
    'body': 'completionsForPartialWordRange(${1:NSRange range}, inString:${2:NSString* string}, language:${3:NSString* language})'
  'guessesForWordRange:inString:language:':
    'prefix': 'guessesForWordRange:inString:language:'
    'body': 'guessesForWordRange(${1:NSRange range}, inString:${2:NSString* string}, language:${3:NSString* language})'
  'UITextChecker.hasLearnedWord:':
    'prefix': 'hasLearnedWord:'
    'body': 'UITextChecker.hasLearnedWord(${1:NSString* word})'
  'ignoreWord:':
    'prefix': 'ignoreWord:'
    'body': 'ignoreWord(${1:NSString* wordToIgnore})'
  'ignoredWords':
    'prefix': 'ignoredWords'
    'body': 'ignoredWords()'
  'UITextChecker.learnWord:':
    'prefix': 'learnWord:'
    'body': 'UITextChecker.learnWord(${1:NSString* word})'
  'rangeOfMisspelledWordInString:range:startingAt:wrap:language:':
    'prefix': 'rangeOfMisspelledWordInString:range:startingAt:wrap:language:'
    'body': 'rangeOfMisspelledWordInString(${1:NSString* stringToCheck}, range:${2:NSRange range}, startingAt:${3:NSInteger startingOffset}, wrap:${4:BOOL wrapFlag}, language:${5:NSString* language})'
  'setIgnoredWords:':
    'prefix': 'setIgnoredWords:'
    'body': 'setIgnoredWords(${1:NSArray* words})'
  'UITextChecker.unlearnWord:':
    'prefix': 'unlearnWord:'
    'body': 'UITextChecker.unlearnWord(${1:NSString* word})'
  'adjustsFontSizeToFitWidth':
    'prefix': 'adjustsFontSizeToFitWidth'
    'body': 'adjustsFontSizeToFitWidth()'
  'allowsEditingTextAttributes':
    'prefix': 'allowsEditingTextAttributes'
    'body': 'allowsEditingTextAttributes()'
  'attributedPlaceholder':
    'prefix': 'attributedPlaceholder'
    'body': 'attributedPlaceholder()'
  'attributedText':
    'prefix': 'attributedText'
    'body': 'attributedText()'
  'background':
    'prefix': 'background'
    'body': 'background()'
  'borderRectForBounds:':
    'prefix': 'borderRectForBounds:'
    'body': 'borderRectForBounds(${1:CGRect bounds})'
  'borderStyle':
    'prefix': 'borderStyle'
    'body': 'borderStyle()'
  'clearButtonMode':
    'prefix': 'clearButtonMode'
    'body': 'clearButtonMode()'
  'clearButtonRectForBounds:':
    'prefix': 'clearButtonRectForBounds:'
    'body': 'clearButtonRectForBounds(${1:CGRect bounds})'
  'clearsOnBeginEditing':
    'prefix': 'clearsOnBeginEditing'
    'body': 'clearsOnBeginEditing()'
  'clearsOnInsertion':
    'prefix': 'clearsOnInsertion'
    'body': 'clearsOnInsertion()'
  'defaultTextAttributes':
    'prefix': 'defaultTextAttributes'
    'body': 'defaultTextAttributes()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'disabledBackground':
    'prefix': 'disabledBackground'
    'body': 'disabledBackground()'
  'drawPlaceholderInRect:':
    'prefix': 'drawPlaceholderInRect:'
    'body': 'drawPlaceholderInRect(${1:CGRect rect})'
  'drawTextInRect:':
    'prefix': 'drawTextInRect:'
    'body': 'drawTextInRect(${1:CGRect rect})'
  'editingRectForBounds:':
    'prefix': 'editingRectForBounds:'
    'body': 'editingRectForBounds(${1:CGRect bounds})'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'inputAccessoryView':
    'prefix': 'inputAccessoryView'
    'body': 'inputAccessoryView()'
  'inputView':
    'prefix': 'inputView'
    'body': 'inputView()'
  'isEditing':
    'prefix': 'isEditing'
    'body': 'isEditing()'
  'leftView':
    'prefix': 'leftView'
    'body': 'leftView()'
  'leftViewMode':
    'prefix': 'leftViewMode'
    'body': 'leftViewMode()'
  'leftViewRectForBounds:':
    'prefix': 'leftViewRectForBounds:'
    'body': 'leftViewRectForBounds(${1:CGRect bounds})'
  'minimumFontSize':
    'prefix': 'minimumFontSize'
    'body': 'minimumFontSize()'
  'placeholder':
    'prefix': 'placeholder'
    'body': 'placeholder()'
  'placeholderRectForBounds:':
    'prefix': 'placeholderRectForBounds:'
    'body': 'placeholderRectForBounds(${1:CGRect bounds})'
  'rightView':
    'prefix': 'rightView'
    'body': 'rightView()'
  'rightViewMode':
    'prefix': 'rightViewMode'
    'body': 'rightViewMode()'
  'rightViewRectForBounds:':
    'prefix': 'rightViewRectForBounds:'
    'body': 'rightViewRectForBounds(${1:CGRect bounds})'
  'setAdjustsFontSizeToFitWidth:':
    'prefix': 'setAdjustsFontSizeToFitWidth:'
    'body': 'setAdjustsFontSizeToFitWidth(${1:BOOL adjustsFontSizeToFitWidth})'
  'setAllowsEditingTextAttributes:':
    'prefix': 'setAllowsEditingTextAttributes:'
    'body': 'setAllowsEditingTextAttributes(${1:BOOL allowsEditingTextAttributes})'
  'setAttributedPlaceholder:':
    'prefix': 'setAttributedPlaceholder:'
    'body': 'setAttributedPlaceholder(${1:NSAttributedString* attributedPlaceholder})'
  'setAttributedText:':
    'prefix': 'setAttributedText:'
    'body': 'setAttributedText(${1:NSAttributedString* attributedText})'
  'setBackground:':
    'prefix': 'setBackground:'
    'body': 'setBackground(${1:UIImage* background})'
  'setBorderStyle:':
    'prefix': 'setBorderStyle:'
    'body': 'setBorderStyle(${1:UITextBorderStyle borderStyle})'
  'setClearButtonMode:':
    'prefix': 'setClearButtonMode:'
    'body': 'setClearButtonMode(${1:UITextFieldViewMode clearButtonMode})'
  'setClearsOnBeginEditing:':
    'prefix': 'setClearsOnBeginEditing:'
    'body': 'setClearsOnBeginEditing(${1:BOOL clearsOnBeginEditing})'
  'setClearsOnInsertion:':
    'prefix': 'setClearsOnInsertion:'
    'body': 'setClearsOnInsertion(${1:BOOL clearsOnInsertion})'
  'setDefaultTextAttributes:':
    'prefix': 'setDefaultTextAttributes:'
    'body': 'setDefaultTextAttributes(${1:NSDictionary* defaultTextAttributes})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDisabledBackground:':
    'prefix': 'setDisabledBackground:'
    'body': 'setDisabledBackground(${1:UIImage* disabledBackground})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setInputAccessoryView:':
    'prefix': 'setInputAccessoryView:'
    'body': 'setInputAccessoryView(${1:UIView* inputAccessoryView})'
  'setInputView:':
    'prefix': 'setInputView:'
    'body': 'setInputView(${1:UIView* inputView})'
  'setLeftView:':
    'prefix': 'setLeftView:'
    'body': 'setLeftView(${1:UIView* leftView})'
  'setLeftViewMode:':
    'prefix': 'setLeftViewMode:'
    'body': 'setLeftViewMode(${1:UITextFieldViewMode leftViewMode})'
  'setMinimumFontSize:':
    'prefix': 'setMinimumFontSize:'
    'body': 'setMinimumFontSize(${1:CGFloat minimumFontSize})'
  'setPlaceholder:':
    'prefix': 'setPlaceholder:'
    'body': 'setPlaceholder(${1:NSString* placeholder})'
  'setRightView:':
    'prefix': 'setRightView:'
    'body': 'setRightView(${1:UIView* rightView})'
  'setRightViewMode:':
    'prefix': 'setRightViewMode:'
    'body': 'setRightViewMode(${1:UITextFieldViewMode rightViewMode})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment textAlignment})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:UIColor* textColor})'
  'setTypingAttributes:':
    'prefix': 'setTypingAttributes:'
    'body': 'setTypingAttributes(${1:NSDictionary* typingAttributes})'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'textAlignment':
    'prefix': 'textAlignment'
    'body': 'textAlignment()'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'textRectForBounds:':
    'prefix': 'textRectForBounds:'
    'body': 'textRectForBounds(${1:CGRect bounds})'
  'typingAttributes':
    'prefix': 'typingAttributes'
    'body': 'typingAttributes()'
  'UITextInputMode.activeInputModes':
    'prefix': 'activeInputModes'
    'body': 'UITextInputMode.activeInputModes()'
  'UITextInputMode.currentInputMode':
    'prefix': 'currentInputMode'
    'body': 'UITextInputMode.currentInputMode()'
  'primaryLanguage':
    'prefix': 'primaryLanguage'
    'body': 'primaryLanguage()'
  'initWithTextInput:':
    'prefix': 'initWithTextInput:'
    'body': 'initWithTextInput(${1:UIResponder* textInput})'
  'end':
    'prefix': 'end'
    'body': 'end()'
  'isEmpty':
    'prefix': 'isEmpty'
    'body': 'isEmpty()'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'containsEnd':
    'prefix': 'containsEnd'
    'body': 'containsEnd()'
  'containsStart':
    'prefix': 'containsStart'
    'body': 'containsStart()'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'rect':
    'prefix': 'rect'
    'body': 'rect()'
  'writingDirection':
    'prefix': 'writingDirection'
    'body': 'writingDirection()'
  'allowsEditingTextAttributes':
    'prefix': 'allowsEditingTextAttributes'
    'body': 'allowsEditingTextAttributes()'
  'attributedText':
    'prefix': 'attributedText'
    'body': 'attributedText()'
  'clearsOnInsertion':
    'prefix': 'clearsOnInsertion'
    'body': 'clearsOnInsertion()'
  'dataDetectorTypes':
    'prefix': 'dataDetectorTypes'
    'body': 'dataDetectorTypes()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'initWithFrame:textContainer:':
    'prefix': 'initWithFrame:textContainer:'
    'body': 'initWithFrame(${1:CGRect frame}, textContainer:${2:NSTextContainer* textContainer})'
  'inputAccessoryView':
    'prefix': 'inputAccessoryView'
    'body': 'inputAccessoryView()'
  'inputView':
    'prefix': 'inputView'
    'body': 'inputView()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'linkTextAttributes':
    'prefix': 'linkTextAttributes'
    'body': 'linkTextAttributes()'
  'scrollRangeToVisible:':
    'prefix': 'scrollRangeToVisible:'
    'body': 'scrollRangeToVisible(${1:NSRange range})'
  'selectedRange':
    'prefix': 'selectedRange'
    'body': 'selectedRange()'
  'setAllowsEditingTextAttributes:':
    'prefix': 'setAllowsEditingTextAttributes:'
    'body': 'setAllowsEditingTextAttributes(${1:BOOL allowsEditingTextAttributes})'
  'setAttributedText:':
    'prefix': 'setAttributedText:'
    'body': 'setAttributedText(${1:NSAttributedString* attributedText})'
  'setClearsOnInsertion:':
    'prefix': 'setClearsOnInsertion:'
    'body': 'setClearsOnInsertion(${1:BOOL clearsOnInsertion})'
  'setDataDetectorTypes:':
    'prefix': 'setDataDetectorTypes:'
    'body': 'setDataDetectorTypes(${1:UIDataDetectorTypes dataDetectorTypes})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL editable})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:UIFont* font})'
  'setInputAccessoryView:':
    'prefix': 'setInputAccessoryView:'
    'body': 'setInputAccessoryView(${1:UIView* inputAccessoryView})'
  'setInputView:':
    'prefix': 'setInputView:'
    'body': 'setInputView(${1:UIView* inputView})'
  'setLinkTextAttributes:':
    'prefix': 'setLinkTextAttributes:'
    'body': 'setLinkTextAttributes(${1:NSDictionary* linkTextAttributes})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL selectable})'
  'setSelectedRange:':
    'prefix': 'setSelectedRange:'
    'body': 'setSelectedRange(${1:NSRange selectedRange})'
  'setText:':
    'prefix': 'setText:'
    'body': 'setText(${1:NSString* text})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment textAlignment})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:UIColor* textColor})'
  'setTextContainerInset:':
    'prefix': 'setTextContainerInset:'
    'body': 'setTextContainerInset(${1:UIEdgeInsets textContainerInset})'
  'setTypingAttributes:':
    'prefix': 'setTypingAttributes:'
    'body': 'setTypingAttributes(${1:NSDictionary* typingAttributes})'
  'text':
    'prefix': 'text'
    'body': 'text()'
  'textAlignment':
    'prefix': 'textAlignment'
    'body': 'textAlignment()'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'textContainer':
    'prefix': 'textContainer'
    'body': 'textContainer()'
  'textContainerInset':
    'prefix': 'textContainerInset'
    'body': 'textContainerInset()'
  'textStorage':
    'prefix': 'textStorage'
    'body': 'textStorage()'
  'typingAttributes':
    'prefix': 'typingAttributes'
    'body': 'typingAttributes()'
  'backgroundImageForToolbarPosition:barMetrics:':
    'prefix': 'backgroundImageForToolbarPosition:barMetrics:'
    'body': 'backgroundImageForToolbarPosition(${1:UIBarPosition topOrBottom}, barMetrics:${2:UIBarMetrics barMetrics})'
  'barStyle':
    'prefix': 'barStyle'
    'body': 'barStyle()'
  'barTintColor':
    'prefix': 'barTintColor'
    'body': 'barTintColor()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'isTranslucent':
    'prefix': 'isTranslucent'
    'body': 'isTranslucent()'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'setBackgroundImage:forToolbarPosition:barMetrics:':
    'prefix': 'setBackgroundImage:forToolbarPosition:barMetrics:'
    'body': 'setBackgroundImage(${1:UIImage* backgroundImage}, forToolbarPosition:${2:UIBarPosition topOrBottom}, barMetrics:${3:UIBarMetrics barMetrics})'
  'setBarStyle:':
    'prefix': 'setBarStyle:'
    'body': 'setBarStyle(${1:UIBarStyle barStyle})'
  'setBarTintColor:':
    'prefix': 'setBarTintColor:'
    'body': 'setBarTintColor(${1:UIColor* barTintColor})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setItems:':
    'prefix': 'setItems:'
    'body': 'setItems(${1:NSArray* items})'
  'setItems:animated:':
    'prefix': 'setItems:animated:'
    'body': 'setItems(${1:NSArray* items}, animated:${2:BOOL animated})'
  'setShadowImage:forToolbarPosition:':
    'prefix': 'setShadowImage:forToolbarPosition:'
    'body': 'setShadowImage(${1:UIImage* shadowImage}, forToolbarPosition:${2:UIBarPosition topOrBottom})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTranslucent:':
    'prefix': 'setTranslucent:'
    'body': 'setTranslucent(${1:BOOL translucent})'
  'shadowImageForToolbarPosition:':
    'prefix': 'shadowImageForToolbarPosition:'
    'body': 'shadowImageForToolbarPosition(${1:UIBarPosition topOrBottom})'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'gestureRecognizers':
    'prefix': 'gestureRecognizers'
    'body': 'gestureRecognizers()'
  'locationInView:':
    'prefix': 'locationInView:'
    'body': 'locationInView(${1:UIView* view})'
  'phase':
    'prefix': 'phase'
    'body': 'phase()'
  'previousLocationInView:':
    'prefix': 'previousLocationInView:'
    'body': 'previousLocationInView(${1:UIView* view})'
  'tapCount':
    'prefix': 'tapCount'
    'body': 'tapCount()'
  'timestamp':
    'prefix': 'timestamp'
    'body': 'timestamp()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'UIVideoEditorController.canEditVideoAtPath:':
    'prefix': 'canEditVideoAtPath:'
    'body': 'UIVideoEditorController.canEditVideoAtPath(${1:NSString* videoPath})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setVideoMaximumDuration:':
    'prefix': 'setVideoMaximumDuration:'
    'body': 'setVideoMaximumDuration(${1:NSTimeInterval videoMaximumDuration})'
  'setVideoPath:':
    'prefix': 'setVideoPath:'
    'body': 'setVideoPath(${1:NSString* videoPath})'
  'setVideoQuality:':
    'prefix': 'setVideoQuality:'
    'body': 'setVideoQuality(${1:UIImagePickerControllerQualityType videoQuality})'
  'videoMaximumDuration':
    'prefix': 'videoMaximumDuration'
    'body': 'videoMaximumDuration()'
  'videoPath':
    'prefix': 'videoPath'
    'body': 'videoPath()'
  'videoQuality':
    'prefix': 'videoQuality'
    'body': 'videoQuality()'
  'addConstraint:':
    'prefix': 'addConstraint:'
    'body': 'addConstraint(${1:NSLayoutConstraint* constraint})'
  'addConstraints:':
    'prefix': 'addConstraints:'
    'body': 'addConstraints(${1:NSArray* constraints})'
  'addGestureRecognizer:':
    'prefix': 'addGestureRecognizer:'
    'body': 'addGestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer})'
  'UIView.addKeyframeWithRelativeStartTime:relativeDuration:animations:':
    'prefix': 'addKeyframeWithRelativeStartTime:relativeDuration:animations:'
    'body': 'UIView.addKeyframeWithRelativeStartTime(${1:double frameStartTime}, relativeDuration:${2:double frameDuration}, animations:${3:void (^)(void) animations})'
  'addMotionEffect:':
    'prefix': 'addMotionEffect:'
    'body': 'addMotionEffect(${1:UIMotionEffect* effect})'
  'addSubview:':
    'prefix': 'addSubview:'
    'body': 'addSubview(${1:UIView* view})'
  'alignmentRectForFrame:':
    'prefix': 'alignmentRectForFrame:'
    'body': 'alignmentRectForFrame(${1:CGRect frame})'
  'alignmentRectInsets':
    'prefix': 'alignmentRectInsets'
    'body': 'alignmentRectInsets()'
  'alpha':
    'prefix': 'alpha'
    'body': 'alpha()'
  'UIView.animateKeyframesWithDuration:delay:options:animations:completion:':
    'prefix': 'animateKeyframesWithDuration:delay:options:animations:completion:'
    'body': 'UIView.animateKeyframesWithDuration(${1:NSTimeInterval duration}, delay:${2:NSTimeInterval delay}, options:${3:UIViewKeyframeAnimationOptions options}, animations:${4:void (^)(void) animations}, completion:${5:void (^)(BOOL) completion})'
  'UIView.animateWithDuration:animations:':
    'prefix': 'animateWithDuration:animations:'
    'body': 'UIView.animateWithDuration(${1:NSTimeInterval duration}, animations:${2:void (^)(void) animations})'
  'UIView.animateWithDuration:animations:completion:':
    'prefix': 'animateWithDuration:animations:completion:'
    'body': 'UIView.animateWithDuration(${1:NSTimeInterval duration}, animations:${2:void (^)(void) animations}, completion:${3:void (^)(BOOL) completion})'
  'UIView.animateWithDuration:delay:options:animations:completion:':
    'prefix': 'animateWithDuration:delay:options:animations:completion:'
    'body': 'UIView.animateWithDuration(${1:NSTimeInterval duration}, delay:${2:NSTimeInterval delay}, options:${3:UIViewAnimationOptions options}, animations:${4:void (^)(void) animations}, completion:${5:void (^)(BOOL) completion})'
  'UIView.animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:':
    'prefix': 'animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:'
    'body': 'UIView.animateWithDuration(${1:NSTimeInterval duration}, delay:${2:NSTimeInterval delay}, usingSpringWithDamping:${3:CGFloat dampingRatio}, initialSpringVelocity:${4:CGFloat velocity}, options:${5:UIViewAnimationOptions options}, animations:${6:void (^)(void) animations}, completion:${7:void (^)(BOOL) completion})'
  'UIView.areAnimationsEnabled':
    'prefix': 'areAnimationsEnabled'
    'body': 'UIView.areAnimationsEnabled()'
  'autoresizesSubviews':
    'prefix': 'autoresizesSubviews'
    'body': 'autoresizesSubviews()'
  'autoresizingMask':
    'prefix': 'autoresizingMask'
    'body': 'autoresizingMask()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'UIView.beginAnimations:context:':
    'prefix': 'beginAnimations:context:'
    'body': 'UIView.beginAnimations(${1:NSString* animationID}, context:${2:void* context})'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'bringSubviewToFront:':
    'prefix': 'bringSubviewToFront:'
    'body': 'bringSubviewToFront(${1:UIView* view})'
  'center':
    'prefix': 'center'
    'body': 'center()'
  'clearsContextBeforeDrawing':
    'prefix': 'clearsContextBeforeDrawing'
    'body': 'clearsContextBeforeDrawing()'
  'clipsToBounds':
    'prefix': 'clipsToBounds'
    'body': 'clipsToBounds()'
  'UIView.commitAnimations':
    'prefix': 'commitAnimations'
    'body': 'UIView.commitAnimations()'
  'constraints':
    'prefix': 'constraints'
    'body': 'constraints()'
  'constraintsAffectingLayoutForAxis:':
    'prefix': 'constraintsAffectingLayoutForAxis:'
    'body': 'constraintsAffectingLayoutForAxis(${1:UILayoutConstraintAxis axis})'
  'contentCompressionResistancePriorityForAxis:':
    'prefix': 'contentCompressionResistancePriorityForAxis:'
    'body': 'contentCompressionResistancePriorityForAxis(${1:UILayoutConstraintAxis axis})'
  'contentHuggingPriorityForAxis:':
    'prefix': 'contentHuggingPriorityForAxis:'
    'body': 'contentHuggingPriorityForAxis(${1:UILayoutConstraintAxis axis})'
  'contentMode':
    'prefix': 'contentMode'
    'body': 'contentMode()'
  'contentScaleFactor':
    'prefix': 'contentScaleFactor'
    'body': 'contentScaleFactor()'
  'contentStretch':
    'prefix': 'contentStretch'
    'body': 'contentStretch()'
  'convertPoint:fromView:':
    'prefix': 'convertPoint:fromView:'
    'body': 'convertPoint(${1:CGPoint point}, fromView:${2:UIView* view})'
  'convertPoint:toView:':
    'prefix': 'convertPoint:toView:'
    'body': 'convertPoint(${1:CGPoint point}, toView:${2:UIView* view})'
  'convertRect:fromView:':
    'prefix': 'convertRect:fromView:'
    'body': 'convertRect(${1:CGRect rect}, fromView:${2:UIView* view})'
  'convertRect:toView:':
    'prefix': 'convertRect:toView:'
    'body': 'convertRect(${1:CGRect rect}, toView:${2:UIView* view})'
  'decodeRestorableStateWithCoder:':
    'prefix': 'decodeRestorableStateWithCoder:'
    'body': 'decodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'didAddSubview:':
    'prefix': 'didAddSubview:'
    'body': 'didAddSubview(${1:UIView* subview})'
  'didMoveToSuperview':
    'prefix': 'didMoveToSuperview'
    'body': 'didMoveToSuperview()'
  'didMoveToWindow':
    'prefix': 'didMoveToWindow'
    'body': 'didMoveToWindow()'
  'drawRect:':
    'prefix': 'drawRect:'
    'body': 'drawRect(${1:CGRect rect})'
  'drawRect:forViewPrintFormatter:':
    'prefix': 'drawRect:forViewPrintFormatter:'
    'body': 'drawRect(${1:CGRect rect}, forViewPrintFormatter:${2:UIViewPrintFormatter* formatter})'
  'drawViewHierarchyInRect:afterScreenUpdates:':
    'prefix': 'drawViewHierarchyInRect:afterScreenUpdates:'
    'body': 'drawViewHierarchyInRect(${1:CGRect rect}, afterScreenUpdates:${2:BOOL afterUpdates})'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'endEditing:':
    'prefix': 'endEditing:'
    'body': 'endEditing(${1:BOOL force})'
  'exchangeSubviewAtIndex:withSubviewAtIndex:':
    'prefix': 'exchangeSubviewAtIndex:withSubviewAtIndex:'
    'body': 'exchangeSubviewAtIndex(${1:NSInteger index1}, withSubviewAtIndex:${2:NSInteger index2})'
  'exerciseAmbiguityInLayout':
    'prefix': 'exerciseAmbiguityInLayout'
    'body': 'exerciseAmbiguityInLayout()'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'frameForAlignmentRect:':
    'prefix': 'frameForAlignmentRect:'
    'body': 'frameForAlignmentRect(${1:CGRect alignmentRect})'
  'gestureRecognizerShouldBegin:':
    'prefix': 'gestureRecognizerShouldBegin:'
    'body': 'gestureRecognizerShouldBegin(${1:UIGestureRecognizer* gestureRecognizer})'
  'gestureRecognizers':
    'prefix': 'gestureRecognizers'
    'body': 'gestureRecognizers()'
  'hasAmbiguousLayout':
    'prefix': 'hasAmbiguousLayout'
    'body': 'hasAmbiguousLayout()'
  'hitTest:withEvent:':
    'prefix': 'hitTest:withEvent:'
    'body': 'hitTest(${1:CGPoint point}, withEvent:${2:UIEvent* event})'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:CGRect frame})'
  'insertSubview:aboveSubview:':
    'prefix': 'insertSubview:aboveSubview:'
    'body': 'insertSubview(${1:UIView* view}, aboveSubview:${2:UIView* siblingSubview})'
  'insertSubview:atIndex:':
    'prefix': 'insertSubview:atIndex:'
    'body': 'insertSubview(${1:UIView* view}, atIndex:${2:NSInteger index})'
  'insertSubview:belowSubview:':
    'prefix': 'insertSubview:belowSubview:'
    'body': 'insertSubview(${1:UIView* view}, belowSubview:${2:UIView* siblingSubview})'
  'intrinsicContentSize':
    'prefix': 'intrinsicContentSize'
    'body': 'intrinsicContentSize()'
  'invalidateIntrinsicContentSize':
    'prefix': 'invalidateIntrinsicContentSize'
    'body': 'invalidateIntrinsicContentSize()'
  'isDescendantOfView:':
    'prefix': 'isDescendantOfView:'
    'body': 'isDescendantOfView(${1:UIView* view})'
  'isExclusiveTouch':
    'prefix': 'isExclusiveTouch'
    'body': 'isExclusiveTouch()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isMultipleTouchEnabled':
    'prefix': 'isMultipleTouchEnabled'
    'body': 'isMultipleTouchEnabled()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'isUserInteractionEnabled':
    'prefix': 'isUserInteractionEnabled'
    'body': 'isUserInteractionEnabled()'
  'layer':
    'prefix': 'layer'
    'body': 'layer()'
  'UIView.layerClass':
    'prefix': 'layerClass'
    'body': 'UIView.layerClass()'
  'layoutIfNeeded':
    'prefix': 'layoutIfNeeded'
    'body': 'layoutIfNeeded()'
  'layoutSubviews':
    'prefix': 'layoutSubviews'
    'body': 'layoutSubviews()'
  'motionEffects':
    'prefix': 'motionEffects'
    'body': 'motionEffects()'
  'needsUpdateConstraints':
    'prefix': 'needsUpdateConstraints'
    'body': 'needsUpdateConstraints()'
  'UIView.performSystemAnimation:onViews:options:animations:completion:':
    'prefix': 'performSystemAnimation:onViews:options:animations:completion:'
    'body': 'UIView.performSystemAnimation(${1:UISystemAnimation animation}, onViews:${2:NSArray* views}, options:${3:UIViewAnimationOptions options}, animations:${4:void (^)(void) parallelAnimations}, completion:${5:void (^)(BOOL) completion})'
  'UIView.performWithoutAnimation:':
    'prefix': 'performWithoutAnimation:'
    'body': 'UIView.performWithoutAnimation(${1:void (^)(void) actionsWithoutAnimation})'
  'pointInside:withEvent:':
    'prefix': 'pointInside:withEvent:'
    'body': 'pointInside(${1:CGPoint point}, withEvent:${2:UIEvent* event})'
  'removeConstraint:':
    'prefix': 'removeConstraint:'
    'body': 'removeConstraint(${1:NSLayoutConstraint* constraint})'
  'removeConstraints:':
    'prefix': 'removeConstraints:'
    'body': 'removeConstraints(${1:NSArray* constraints})'
  'removeFromSuperview':
    'prefix': 'removeFromSuperview'
    'body': 'removeFromSuperview()'
  'removeGestureRecognizer:':
    'prefix': 'removeGestureRecognizer:'
    'body': 'removeGestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer})'
  'removeMotionEffect:':
    'prefix': 'removeMotionEffect:'
    'body': 'removeMotionEffect(${1:UIMotionEffect* effect})'
  'UIView.requiresConstraintBasedLayout':
    'prefix': 'requiresConstraintBasedLayout'
    'body': 'UIView.requiresConstraintBasedLayout()'
  'resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:':
    'prefix': 'resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:'
    'body': 'resizableSnapshotViewFromRect(${1:CGRect rect}, afterScreenUpdates:${2:BOOL afterUpdates}, withCapInsets:${3:UIEdgeInsets capInsets})'
  'restorationIdentifier':
    'prefix': 'restorationIdentifier'
    'body': 'restorationIdentifier()'
  'sendSubviewToBack:':
    'prefix': 'sendSubviewToBack:'
    'body': 'sendSubviewToBack(${1:UIView* view})'
  'setAlpha:':
    'prefix': 'setAlpha:'
    'body': 'setAlpha(${1:CGFloat alpha})'
  'UIView.setAnimationBeginsFromCurrentState:':
    'prefix': 'setAnimationBeginsFromCurrentState:'
    'body': 'UIView.setAnimationBeginsFromCurrentState(${1:BOOL fromCurrentState})'
  'UIView.setAnimationCurve:':
    'prefix': 'setAnimationCurve:'
    'body': 'UIView.setAnimationCurve(${1:UIViewAnimationCurve curve})'
  'UIView.setAnimationDelay:':
    'prefix': 'setAnimationDelay:'
    'body': 'UIView.setAnimationDelay(${1:NSTimeInterval delay})'
  'UIView.setAnimationDelegate:':
    'prefix': 'setAnimationDelegate:'
    'body': 'UIView.setAnimationDelegate(${1:id delegate})'
  'UIView.setAnimationDidStopSelector:':
    'prefix': 'setAnimationDidStopSelector:'
    'body': 'UIView.setAnimationDidStopSelector(${1:SEL selector})'
  'UIView.setAnimationDuration:':
    'prefix': 'setAnimationDuration:'
    'body': 'UIView.setAnimationDuration(${1:NSTimeInterval duration})'
  'UIView.setAnimationRepeatAutoreverses:':
    'prefix': 'setAnimationRepeatAutoreverses:'
    'body': 'UIView.setAnimationRepeatAutoreverses(${1:BOOL repeatAutoreverses})'
  'UIView.setAnimationRepeatCount:':
    'prefix': 'setAnimationRepeatCount:'
    'body': 'UIView.setAnimationRepeatCount(${1:float repeatCount})'
  'UIView.setAnimationStartDate:':
    'prefix': 'setAnimationStartDate:'
    'body': 'UIView.setAnimationStartDate(${1:NSDate* startDate})'
  'UIView.setAnimationTransition:forView:cache:':
    'prefix': 'setAnimationTransition:forView:cache:'
    'body': 'UIView.setAnimationTransition(${1:UIViewAnimationTransition transition}, forView:${2:UIView* view}, cache:${3:BOOL cache})'
  'UIView.setAnimationWillStartSelector:':
    'prefix': 'setAnimationWillStartSelector:'
    'body': 'UIView.setAnimationWillStartSelector(${1:SEL selector})'
  'UIView.setAnimationsEnabled:':
    'prefix': 'setAnimationsEnabled:'
    'body': 'UIView.setAnimationsEnabled(${1:BOOL enabled})'
  'setAutoresizesSubviews:':
    'prefix': 'setAutoresizesSubviews:'
    'body': 'setAutoresizesSubviews(${1:BOOL autoresizesSubviews})'
  'setAutoresizingMask:':
    'prefix': 'setAutoresizingMask:'
    'body': 'setAutoresizingMask(${1:UIViewAutoresizing autoresizingMask})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:UIColor* backgroundColor})'
  'setBounds:':
    'prefix': 'setBounds:'
    'body': 'setBounds(${1:CGRect bounds})'
  'setCenter:':
    'prefix': 'setCenter:'
    'body': 'setCenter(${1:CGPoint center})'
  'setClearsContextBeforeDrawing:':
    'prefix': 'setClearsContextBeforeDrawing:'
    'body': 'setClearsContextBeforeDrawing(${1:BOOL clearsContextBeforeDrawing})'
  'setClipsToBounds:':
    'prefix': 'setClipsToBounds:'
    'body': 'setClipsToBounds(${1:BOOL clipsToBounds})'
  'setContentCompressionResistancePriority:forAxis:':
    'prefix': 'setContentCompressionResistancePriority:forAxis:'
    'body': 'setContentCompressionResistancePriority(${1:UILayoutPriority priority}, forAxis:${2:UILayoutConstraintAxis axis})'
  'setContentHuggingPriority:forAxis:':
    'prefix': 'setContentHuggingPriority:forAxis:'
    'body': 'setContentHuggingPriority(${1:UILayoutPriority priority}, forAxis:${2:UILayoutConstraintAxis axis})'
  'setContentMode:':
    'prefix': 'setContentMode:'
    'body': 'setContentMode(${1:UIViewContentMode contentMode})'
  'setContentScaleFactor:':
    'prefix': 'setContentScaleFactor:'
    'body': 'setContentScaleFactor(${1:CGFloat contentScaleFactor})'
  'setContentStretch:':
    'prefix': 'setContentStretch:'
    'body': 'setContentStretch(${1:CGRect contentStretch})'
  'setExclusiveTouch:':
    'prefix': 'setExclusiveTouch:'
    'body': 'setExclusiveTouch(${1:BOOL exclusiveTouch})'
  'setFrame:':
    'prefix': 'setFrame:'
    'body': 'setFrame(${1:CGRect frame})'
  'setGestureRecognizers:':
    'prefix': 'setGestureRecognizers:'
    'body': 'setGestureRecognizers(${1:NSArray* gestureRecognizers})'
  'setHidden:':
    'prefix': 'setHidden:'
    'body': 'setHidden(${1:BOOL hidden})'
  'setMotionEffects:':
    'prefix': 'setMotionEffects:'
    'body': 'setMotionEffects(${1:NSArray* motionEffects})'
  'setMultipleTouchEnabled:':
    'prefix': 'setMultipleTouchEnabled:'
    'body': 'setMultipleTouchEnabled(${1:BOOL multipleTouchEnabled})'
  'setNeedsDisplay':
    'prefix': 'setNeedsDisplay'
    'body': 'setNeedsDisplay()'
  'setNeedsDisplayInRect:':
    'prefix': 'setNeedsDisplayInRect:'
    'body': 'setNeedsDisplayInRect(${1:CGRect rect})'
  'setNeedsLayout':
    'prefix': 'setNeedsLayout'
    'body': 'setNeedsLayout()'
  'setNeedsUpdateConstraints':
    'prefix': 'setNeedsUpdateConstraints'
    'body': 'setNeedsUpdateConstraints()'
  'setOpaque:':
    'prefix': 'setOpaque:'
    'body': 'setOpaque(${1:BOOL opaque})'
  'setRestorationIdentifier:':
    'prefix': 'setRestorationIdentifier:'
    'body': 'setRestorationIdentifier(${1:NSString* restorationIdentifier})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger tag})'
  'setTintAdjustmentMode:':
    'prefix': 'setTintAdjustmentMode:'
    'body': 'setTintAdjustmentMode(${1:UIViewTintAdjustmentMode tintAdjustmentMode})'
  'setTintColor:':
    'prefix': 'setTintColor:'
    'body': 'setTintColor(${1:UIColor* tintColor})'
  'setTransform:':
    'prefix': 'setTransform:'
    'body': 'setTransform(${1:CGAffineTransform transform})'
  'setTranslatesAutoresizingMaskIntoConstraints:':
    'prefix': 'setTranslatesAutoresizingMaskIntoConstraints:'
    'body': 'setTranslatesAutoresizingMaskIntoConstraints(${1:BOOL flag})'
  'setUserInteractionEnabled:':
    'prefix': 'setUserInteractionEnabled:'
    'body': 'setUserInteractionEnabled(${1:BOOL userInteractionEnabled})'
  'sizeThatFits:':
    'prefix': 'sizeThatFits:'
    'body': 'sizeThatFits(${1:CGSize size})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'snapshotViewAfterScreenUpdates:':
    'prefix': 'snapshotViewAfterScreenUpdates:'
    'body': 'snapshotViewAfterScreenUpdates(${1:BOOL afterUpdates})'
  'subviews':
    'prefix': 'subviews'
    'body': 'subviews()'
  'superview':
    'prefix': 'superview'
    'body': 'superview()'
  'systemLayoutSizeFittingSize:':
    'prefix': 'systemLayoutSizeFittingSize:'
    'body': 'systemLayoutSizeFittingSize(${1:CGSize targetSize})'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'tintAdjustmentMode':
    'prefix': 'tintAdjustmentMode'
    'body': 'tintAdjustmentMode()'
  'tintColor':
    'prefix': 'tintColor'
    'body': 'tintColor()'
  'tintColorDidChange':
    'prefix': 'tintColorDidChange'
    'body': 'tintColorDidChange()'
  'transform':
    'prefix': 'transform'
    'body': 'transform()'
  'UIView.transitionFromView:toView:duration:options:completion:':
    'prefix': 'transitionFromView:toView:duration:options:completion:'
    'body': 'UIView.transitionFromView(${1:UIView* fromView}, toView:${2:UIView* toView}, duration:${3:NSTimeInterval duration}, options:${4:UIViewAnimationOptions options}, completion:${5:void (^)(BOOL) completion})'
  'UIView.transitionWithView:duration:options:animations:completion:':
    'prefix': 'transitionWithView:duration:options:animations:completion:'
    'body': 'UIView.transitionWithView(${1:UIView* view}, duration:${2:NSTimeInterval duration}, options:${3:UIViewAnimationOptions options}, animations:${4:void (^)(void) animations}, completion:${5:void (^)(BOOL) completion})'
  'translatesAutoresizingMaskIntoConstraints':
    'prefix': 'translatesAutoresizingMaskIntoConstraints'
    'body': 'translatesAutoresizingMaskIntoConstraints()'
  'updateConstraints':
    'prefix': 'updateConstraints'
    'body': 'updateConstraints()'
  'updateConstraintsIfNeeded':
    'prefix': 'updateConstraintsIfNeeded'
    'body': 'updateConstraintsIfNeeded()'
  'viewForBaselineLayout':
    'prefix': 'viewForBaselineLayout'
    'body': 'viewForBaselineLayout()'
  'viewPrintFormatter':
    'prefix': 'viewPrintFormatter'
    'body': 'viewPrintFormatter()'
  'viewWithTag:':
    'prefix': 'viewWithTag:'
    'body': 'viewWithTag(${1:NSInteger tag})'
  'willMoveToSuperview:':
    'prefix': 'willMoveToSuperview:'
    'body': 'willMoveToSuperview(${1:UIView* newSuperview})'
  'willMoveToWindow:':
    'prefix': 'willMoveToWindow:'
    'body': 'willMoveToWindow(${1:UIWindow* newWindow})'
  'willRemoveSubview:':
    'prefix': 'willRemoveSubview:'
    'body': 'willRemoveSubview(${1:UIView* subview})'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'addChildViewController:':
    'prefix': 'addChildViewController:'
    'body': 'addChildViewController(${1:UIViewController* childController})'
  'applicationFinishedRestoringState':
    'prefix': 'applicationFinishedRestoringState'
    'body': 'applicationFinishedRestoringState()'
  'UIViewController.attemptRotationToDeviceOrientation':
    'prefix': 'attemptRotationToDeviceOrientation'
    'body': 'UIViewController.attemptRotationToDeviceOrientation()'
  'automaticallyAdjustsScrollViewInsets':
    'prefix': 'automaticallyAdjustsScrollViewInsets'
    'body': 'automaticallyAdjustsScrollViewInsets()'
  'automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers':
    'prefix': 'automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers'
    'body': 'automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers()'
  'beginAppearanceTransition:animated:':
    'prefix': 'beginAppearanceTransition:animated:'
    'body': 'beginAppearanceTransition(${1:BOOL isAppearing}, animated:${2:BOOL animated})'
  'bottomLayoutGuide':
    'prefix': 'bottomLayoutGuide'
    'body': 'bottomLayoutGuide()'
  'canPerformUnwindSegueAction:fromViewController:withSender:':
    'prefix': 'canPerformUnwindSegueAction:fromViewController:withSender:'
    'body': 'canPerformUnwindSegueAction(${1:SEL action}, fromViewController:${2:UIViewController* fromViewController}, withSender:${3:id sender})'
  'childViewControllerForStatusBarHidden':
    'prefix': 'childViewControllerForStatusBarHidden'
    'body': 'childViewControllerForStatusBarHidden()'
  'childViewControllerForStatusBarStyle':
    'prefix': 'childViewControllerForStatusBarStyle'
    'body': 'childViewControllerForStatusBarStyle()'
  'childViewControllers':
    'prefix': 'childViewControllers'
    'body': 'childViewControllers()'
  'contentSizeForViewInPopover':
    'prefix': 'contentSizeForViewInPopover'
    'body': 'contentSizeForViewInPopover()'
  'decodeRestorableStateWithCoder:':
    'prefix': 'decodeRestorableStateWithCoder:'
    'body': 'decodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'definesPresentationContext':
    'prefix': 'definesPresentationContext'
    'body': 'definesPresentationContext()'
  'didAnimateFirstHalfOfRotationToInterfaceOrientation:':
    'prefix': 'didAnimateFirstHalfOfRotationToInterfaceOrientation:'
    'body': 'didAnimateFirstHalfOfRotationToInterfaceOrientation(${1:UIInterfaceOrientation toInterfaceOrientation})'
  'didMoveToParentViewController:':
    'prefix': 'didMoveToParentViewController:'
    'body': 'didMoveToParentViewController(${1:UIViewController* parent})'
  'didReceiveMemoryWarning':
    'prefix': 'didReceiveMemoryWarning'
    'body': 'didReceiveMemoryWarning()'
  'didRotateFromInterfaceOrientation:':
    'prefix': 'didRotateFromInterfaceOrientation:'
    'body': 'didRotateFromInterfaceOrientation(${1:UIInterfaceOrientation fromInterfaceOrientation})'
  'disablesAutomaticKeyboardDismissal':
    'prefix': 'disablesAutomaticKeyboardDismissal'
    'body': 'disablesAutomaticKeyboardDismissal()'
  'dismissModalViewControllerAnimated:':
    'prefix': 'dismissModalViewControllerAnimated:'
    'body': 'dismissModalViewControllerAnimated(${1:BOOL animated})'
  'dismissViewControllerAnimated:completion:':
    'prefix': 'dismissViewControllerAnimated:completion:'
    'body': 'dismissViewControllerAnimated(${1:BOOL flag}, completion:${2:void (^)(void) completion})'
  'edgesForExtendedLayout':
    'prefix': 'edgesForExtendedLayout'
    'body': 'edgesForExtendedLayout()'
  'editButtonItem':
    'prefix': 'editButtonItem'
    'body': 'editButtonItem()'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'endAppearanceTransition':
    'prefix': 'endAppearanceTransition'
    'body': 'endAppearanceTransition()'
  'extendedLayoutIncludesOpaqueBars':
    'prefix': 'extendedLayoutIncludesOpaqueBars'
    'body': 'extendedLayoutIncludesOpaqueBars()'
  'hidesBottomBarWhenPushed':
    'prefix': 'hidesBottomBarWhenPushed'
    'body': 'hidesBottomBarWhenPushed()'
  'initWithNibName:bundle:':
    'prefix': 'initWithNibName:bundle:'
    'body': 'initWithNibName(${1:NSString* nibNameOrNil}, bundle:${2:NSBundle* nibBundleOrNil})'
  'interfaceOrientation':
    'prefix': 'interfaceOrientation'
    'body': 'interfaceOrientation()'
  'isBeingDismissed':
    'prefix': 'isBeingDismissed'
    'body': 'isBeingDismissed()'
  'isBeingPresented':
    'prefix': 'isBeingPresented'
    'body': 'isBeingPresented()'
  'isEditing':
    'prefix': 'isEditing'
    'body': 'isEditing()'
  'isModalInPopover':
    'prefix': 'isModalInPopover'
    'body': 'isModalInPopover()'
  'isMovingFromParentViewController':
    'prefix': 'isMovingFromParentViewController'
    'body': 'isMovingFromParentViewController()'
  'isMovingToParentViewController':
    'prefix': 'isMovingToParentViewController'
    'body': 'isMovingToParentViewController()'
  'isViewLoaded':
    'prefix': 'isViewLoaded'
    'body': 'isViewLoaded()'
  'loadView':
    'prefix': 'loadView'
    'body': 'loadView()'
  'modalPresentationCapturesStatusBarAppearance':
    'prefix': 'modalPresentationCapturesStatusBarAppearance'
    'body': 'modalPresentationCapturesStatusBarAppearance()'
  'modalPresentationStyle':
    'prefix': 'modalPresentationStyle'
    'body': 'modalPresentationStyle()'
  'modalTransitionStyle':
    'prefix': 'modalTransitionStyle'
    'body': 'modalTransitionStyle()'
  'modalViewController':
    'prefix': 'modalViewController'
    'body': 'modalViewController()'
  'navigationController':
    'prefix': 'navigationController'
    'body': 'navigationController()'
  'navigationItem':
    'prefix': 'navigationItem'
    'body': 'navigationItem()'
  'nibBundle':
    'prefix': 'nibBundle'
    'body': 'nibBundle()'
  'nibName':
    'prefix': 'nibName'
    'body': 'nibName()'
  'parentViewController':
    'prefix': 'parentViewController'
    'body': 'parentViewController()'
  'performSegueWithIdentifier:sender:':
    'prefix': 'performSegueWithIdentifier:sender:'
    'body': 'performSegueWithIdentifier(${1:NSString* identifier}, sender:${2:id sender})'
  'preferredContentSize':
    'prefix': 'preferredContentSize'
    'body': 'preferredContentSize()'
  'preferredInterfaceOrientationForPresentation':
    'prefix': 'preferredInterfaceOrientationForPresentation'
    'body': 'preferredInterfaceOrientationForPresentation()'
  'preferredStatusBarStyle':
    'prefix': 'preferredStatusBarStyle'
    'body': 'preferredStatusBarStyle()'
  'preferredStatusBarUpdateAnimation':
    'prefix': 'preferredStatusBarUpdateAnimation'
    'body': 'preferredStatusBarUpdateAnimation()'
  'prefersStatusBarHidden':
    'prefix': 'prefersStatusBarHidden'
    'body': 'prefersStatusBarHidden()'
  'prepareForSegue:sender:':
    'prefix': 'prepareForSegue:sender:'
    'body': 'prepareForSegue(${1:UIStoryboardSegue* segue}, sender:${2:id sender})'
  'presentModalViewController:animated:':
    'prefix': 'presentModalViewController:animated:'
    'body': 'presentModalViewController(${1:UIViewController* modalViewController}, animated:${2:BOOL animated})'
  'presentViewController:animated:completion:':
    'prefix': 'presentViewController:animated:completion:'
    'body': 'presentViewController(${1:UIViewController* viewControllerToPresent}, animated:${2:BOOL flag}, completion:${3:void (^)(void) completion})'
  'presentedViewController':
    'prefix': 'presentedViewController'
    'body': 'presentedViewController()'
  'presentingViewController':
    'prefix': 'presentingViewController'
    'body': 'presentingViewController()'
  'providesPresentationContextTransitionStyle':
    'prefix': 'providesPresentationContextTransitionStyle'
    'body': 'providesPresentationContextTransitionStyle()'
  'removeFromParentViewController':
    'prefix': 'removeFromParentViewController'
    'body': 'removeFromParentViewController()'
  'restorationClass':
    'prefix': 'restorationClass'
    'body': 'restorationClass()'
  'restorationIdentifier':
    'prefix': 'restorationIdentifier'
    'body': 'restorationIdentifier()'
  'rotatingFooterView':
    'prefix': 'rotatingFooterView'
    'body': 'rotatingFooterView()'
  'rotatingHeaderView':
    'prefix': 'rotatingHeaderView'
    'body': 'rotatingHeaderView()'
  'searchDisplayController':
    'prefix': 'searchDisplayController'
    'body': 'searchDisplayController()'
  'segueForUnwindingToViewController:fromViewController:identifier:':
    'prefix': 'segueForUnwindingToViewController:fromViewController:identifier:'
    'body': 'segueForUnwindingToViewController(${1:UIViewController* toViewController}, fromViewController:${2:UIViewController* fromViewController}, identifier:${3:NSString* identifier})'
  'setAutomaticallyAdjustsScrollViewInsets:':
    'prefix': 'setAutomaticallyAdjustsScrollViewInsets:'
    'body': 'setAutomaticallyAdjustsScrollViewInsets(${1:BOOL automaticallyAdjustsScrollViewInsets})'
  'setContentSizeForViewInPopover:':
    'prefix': 'setContentSizeForViewInPopover:'
    'body': 'setContentSizeForViewInPopover(${1:CGSize contentSizeForViewInPopover})'
  'setDefinesPresentationContext:':
    'prefix': 'setDefinesPresentationContext:'
    'body': 'setDefinesPresentationContext(${1:BOOL definesPresentationContext})'
  'setEdgesForExtendedLayout:':
    'prefix': 'setEdgesForExtendedLayout:'
    'body': 'setEdgesForExtendedLayout(${1:UIRectEdge edgesForExtendedLayout})'
  'setEditing:':
    'prefix': 'setEditing:'
    'body': 'setEditing(${1:BOOL editing})'
  'setEditing:animated:':
    'prefix': 'setEditing:animated:'
    'body': 'setEditing(${1:BOOL editing}, animated:${2:BOOL animated})'
  'setExtendedLayoutIncludesOpaqueBars:':
    'prefix': 'setExtendedLayoutIncludesOpaqueBars:'
    'body': 'setExtendedLayoutIncludesOpaqueBars(${1:BOOL extendedLayoutIncludesOpaqueBars})'
  'setHidesBottomBarWhenPushed:':
    'prefix': 'setHidesBottomBarWhenPushed:'
    'body': 'setHidesBottomBarWhenPushed(${1:BOOL hidesBottomBarWhenPushed})'
  'setModalInPopover:':
    'prefix': 'setModalInPopover:'
    'body': 'setModalInPopover(${1:BOOL modalInPopover})'
  'setModalPresentationCapturesStatusBarAppearance:':
    'prefix': 'setModalPresentationCapturesStatusBarAppearance:'
    'body': 'setModalPresentationCapturesStatusBarAppearance(${1:BOOL modalPresentationCapturesStatusBarAppearance})'
  'setModalPresentationStyle:':
    'prefix': 'setModalPresentationStyle:'
    'body': 'setModalPresentationStyle(${1:UIModalPresentationStyle modalPresentationStyle})'
  'setModalTransitionStyle:':
    'prefix': 'setModalTransitionStyle:'
    'body': 'setModalTransitionStyle(${1:UIModalTransitionStyle modalTransitionStyle})'
  'setNeedsStatusBarAppearanceUpdate':
    'prefix': 'setNeedsStatusBarAppearanceUpdate'
    'body': 'setNeedsStatusBarAppearanceUpdate()'
  'setPreferredContentSize:':
    'prefix': 'setPreferredContentSize:'
    'body': 'setPreferredContentSize(${1:CGSize preferredContentSize})'
  'setProvidesPresentationContextTransitionStyle:':
    'prefix': 'setProvidesPresentationContextTransitionStyle:'
    'body': 'setProvidesPresentationContextTransitionStyle(${1:BOOL providesPresentationContextTransitionStyle})'
  'setRestorationClass:':
    'prefix': 'setRestorationClass:'
    'body': 'setRestorationClass(${1:Class* restorationClass})'
  'setRestorationIdentifier:':
    'prefix': 'setRestorationIdentifier:'
    'body': 'setRestorationIdentifier(${1:NSString* restorationIdentifier})'
  'setTabBarItem:':
    'prefix': 'setTabBarItem:'
    'body': 'setTabBarItem(${1:UITabBarItem* tabBarItem})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setToolbarItems:':
    'prefix': 'setToolbarItems:'
    'body': 'setToolbarItems(${1:NSArray* toolbarItems})'
  'setToolbarItems:animated:':
    'prefix': 'setToolbarItems:animated:'
    'body': 'setToolbarItems(${1:NSArray* toolbarItems}, animated:${2:BOOL animated})'
  'setTransitioningDelegate:':
    'prefix': 'setTransitioningDelegate:'
    'body': 'setTransitioningDelegate(${1:id transitioningDelegate})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:UIView* view})'
  'setWantsFullScreenLayout:':
    'prefix': 'setWantsFullScreenLayout:'
    'body': 'setWantsFullScreenLayout(${1:BOOL wantsFullScreenLayout})'
  'shouldAutomaticallyForwardAppearanceMethods':
    'prefix': 'shouldAutomaticallyForwardAppearanceMethods'
    'body': 'shouldAutomaticallyForwardAppearanceMethods()'
  'shouldAutomaticallyForwardRotationMethods':
    'prefix': 'shouldAutomaticallyForwardRotationMethods'
    'body': 'shouldAutomaticallyForwardRotationMethods()'
  'shouldAutorotate':
    'prefix': 'shouldAutorotate'
    'body': 'shouldAutorotate()'
  'shouldAutorotateToInterfaceOrientation:':
    'prefix': 'shouldAutorotateToInterfaceOrientation:'
    'body': 'shouldAutorotateToInterfaceOrientation(${1:UIInterfaceOrientation toInterfaceOrientation})'
  'shouldPerformSegueWithIdentifier:sender:':
    'prefix': 'shouldPerformSegueWithIdentifier:sender:'
    'body': 'shouldPerformSegueWithIdentifier(${1:NSString* identifier}, sender:${2:id sender})'
  'splitViewController':
    'prefix': 'splitViewController'
    'body': 'splitViewController()'
  'storyboard':
    'prefix': 'storyboard'
    'body': 'storyboard()'
  'supportedInterfaceOrientations':
    'prefix': 'supportedInterfaceOrientations'
    'body': 'supportedInterfaceOrientations()'
  'tabBarController':
    'prefix': 'tabBarController'
    'body': 'tabBarController()'
  'tabBarItem':
    'prefix': 'tabBarItem'
    'body': 'tabBarItem()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'toolbarItems':
    'prefix': 'toolbarItems'
    'body': 'toolbarItems()'
  'topLayoutGuide':
    'prefix': 'topLayoutGuide'
    'body': 'topLayoutGuide()'
  'transitionCoordinator':
    'prefix': 'transitionCoordinator'
    'body': 'transitionCoordinator()'
  'transitionFromViewController:toViewController:duration:options:animations:completion:':
    'prefix': 'transitionFromViewController:toViewController:duration:options:animations:completion:'
    'body': 'transitionFromViewController(${1:UIViewController* fromViewController}, toViewController:${2:UIViewController* toViewController}, duration:${3:NSTimeInterval duration}, options:${4:UIViewAnimationOptions options}, animations:${5:void (^)(void) animations}, completion:${6:void (^)(BOOL) completion})'
  'transitioningDelegate':
    'prefix': 'transitioningDelegate'
    'body': 'transitioningDelegate()'
  'updateViewConstraints':
    'prefix': 'updateViewConstraints'
    'body': 'updateViewConstraints()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'viewControllerForUnwindSegueAction:fromViewController:withSender:':
    'prefix': 'viewControllerForUnwindSegueAction:fromViewController:withSender:'
    'body': 'viewControllerForUnwindSegueAction(${1:SEL action}, fromViewController:${2:UIViewController* fromViewController}, withSender:${3:id sender})'
  'viewDidAppear:':
    'prefix': 'viewDidAppear:'
    'body': 'viewDidAppear(${1:BOOL animated})'
  'viewDidDisappear:':
    'prefix': 'viewDidDisappear:'
    'body': 'viewDidDisappear(${1:BOOL animated})'
  'viewDidLayoutSubviews':
    'prefix': 'viewDidLayoutSubviews'
    'body': 'viewDidLayoutSubviews()'
  'viewDidLoad':
    'prefix': 'viewDidLoad'
    'body': 'viewDidLoad()'
  'viewDidUnload':
    'prefix': 'viewDidUnload'
    'body': 'viewDidUnload()'
  'viewWillAppear:':
    'prefix': 'viewWillAppear:'
    'body': 'viewWillAppear(${1:BOOL animated})'
  'viewWillDisappear:':
    'prefix': 'viewWillDisappear:'
    'body': 'viewWillDisappear(${1:BOOL animated})'
  'viewWillLayoutSubviews':
    'prefix': 'viewWillLayoutSubviews'
    'body': 'viewWillLayoutSubviews()'
  'viewWillUnload':
    'prefix': 'viewWillUnload'
    'body': 'viewWillUnload()'
  'wantsFullScreenLayout':
    'prefix': 'wantsFullScreenLayout'
    'body': 'wantsFullScreenLayout()'
  'willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:':
    'prefix': 'willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:'
    'body': 'willAnimateFirstHalfOfRotationToInterfaceOrientation(${1:UIInterfaceOrientation toInterfaceOrientation}, duration:${2:NSTimeInterval duration})'
  'willAnimateRotationToInterfaceOrientation:duration:':
    'prefix': 'willAnimateRotationToInterfaceOrientation:duration:'
    'body': 'willAnimateRotationToInterfaceOrientation(${1:UIInterfaceOrientation toInterfaceOrientation}, duration:${2:NSTimeInterval duration})'
  'willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:':
    'prefix': 'willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:'
    'body': 'willAnimateSecondHalfOfRotationFromInterfaceOrientation(${1:UIInterfaceOrientation fromInterfaceOrientation}, duration:${2:NSTimeInterval duration})'
  'willMoveToParentViewController:':
    'prefix': 'willMoveToParentViewController:'
    'body': 'willMoveToParentViewController(${1:UIViewController* parent})'
  'willRotateToInterfaceOrientation:duration:':
    'prefix': 'willRotateToInterfaceOrientation:duration:'
    'body': 'willRotateToInterfaceOrientation(${1:UIInterfaceOrientation toInterfaceOrientation}, duration:${2:NSTimeInterval duration})'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'allowsInlineMediaPlayback':
    'prefix': 'allowsInlineMediaPlayback'
    'body': 'allowsInlineMediaPlayback()'
  'canGoBack':
    'prefix': 'canGoBack'
    'body': 'canGoBack()'
  'canGoForward':
    'prefix': 'canGoForward'
    'body': 'canGoForward()'
  'dataDetectorTypes':
    'prefix': 'dataDetectorTypes'
    'body': 'dataDetectorTypes()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'detectsPhoneNumbers':
    'prefix': 'detectsPhoneNumbers'
    'body': 'detectsPhoneNumbers()'
  'gapBetweenPages':
    'prefix': 'gapBetweenPages'
    'body': 'gapBetweenPages()'
  'goBack':
    'prefix': 'goBack'
    'body': 'goBack()'
  'goForward':
    'prefix': 'goForward'
    'body': 'goForward()'
  'isLoading':
    'prefix': 'isLoading'
    'body': 'isLoading()'
  'keyboardDisplayRequiresUserAction':
    'prefix': 'keyboardDisplayRequiresUserAction'
    'body': 'KeyboardDisplayRequiresUserAction()'
  'loadData:MIMEType:textEncodingName:baseURL:':
    'prefix': 'loadData:MIMEType:textEncodingName:baseURL:'
    'body': 'loadData(${1:NSData* data}, MIMEType:${2:NSString* MIMEType}, textEncodingName:${3:NSString* textEncodingName}, baseURL:${4:NSURL* baseURL})'
  'loadHTMLString:baseURL:':
    'prefix': 'loadHTMLString:baseURL:'
    'body': 'loadHTMLString(${1:NSString* string}, baseURL:${2:NSURL* baseURL})'
  'loadRequest:':
    'prefix': 'loadRequest:'
    'body': 'loadRequest(${1:NSURLRequest* request})'
  'mediaPlaybackAllowsAirPlay':
    'prefix': 'mediaPlaybackAllowsAirPlay'
    'body': 'mediaPlaybackAllowsAirPlay()'
  'mediaPlaybackRequiresUserAction':
    'prefix': 'mediaPlaybackRequiresUserAction'
    'body': 'mediaPlaybackRequiresUserAction()'
  'pageCount':
    'prefix': 'pageCount'
    'body': 'pageCount()'
  'pageLength':
    'prefix': 'pageLength'
    'body': 'pageLength()'
  'paginationBreakingMode':
    'prefix': 'paginationBreakingMode'
    'body': 'paginationBreakingMode()'
  'paginationMode':
    'prefix': 'paginationMode'
    'body': 'paginationMode()'
  'reload':
    'prefix': 'reload'
    'body': 'reload()'
  'request':
    'prefix': 'request'
    'body': 'request()'
  'scalesPageToFit':
    'prefix': 'scalesPageToFit'
    'body': 'scalesPageToFit()'
  'scrollView':
    'prefix': 'scrollView'
    'body': 'scrollView()'
  'setAllowsInlineMediaPlayback:':
    'prefix': 'setAllowsInlineMediaPlayback:'
    'body': 'setAllowsInlineMediaPlayback(${1:BOOL allowsInlineMediaPlayback})'
  'setDataDetectorTypes:':
    'prefix': 'setDataDetectorTypes:'
    'body': 'setDataDetectorTypes(${1:UIDataDetectorTypes dataDetectorTypes})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDetectsPhoneNumbers:':
    'prefix': 'setDetectsPhoneNumbers:'
    'body': 'setDetectsPhoneNumbers(${1:BOOL detectsPhoneNumbers})'
  'setGapBetweenPages:':
    'prefix': 'setGapBetweenPages:'
    'body': 'setGapBetweenPages(${1:CGFloat gapBetweenPages})'
  'setKeyboardDisplayRequiresUserAction:':
    'prefix': 'setKeyboardDisplayRequiresUserAction:'
    'body': 'setKeyboardDisplayRequiresUserAction(${1:BOOL keyboardDisplayRequiresUserAction})'
  'setMediaPlaybackAllowsAirPlay:':
    'prefix': 'setMediaPlaybackAllowsAirPlay:'
    'body': 'setMediaPlaybackAllowsAirPlay(${1:BOOL mediaPlaybackAllowsAirPlay})'
  'setMediaPlaybackRequiresUserAction:':
    'prefix': 'setMediaPlaybackRequiresUserAction:'
    'body': 'setMediaPlaybackRequiresUserAction(${1:BOOL mediaPlaybackRequiresUserAction})'
  'setPageLength:':
    'prefix': 'setPageLength:'
    'body': 'setPageLength(${1:CGFloat pageLength})'
  'setPaginationBreakingMode:':
    'prefix': 'setPaginationBreakingMode:'
    'body': 'setPaginationBreakingMode(${1:UIWebPaginationBreakingMode paginationBreakingMode})'
  'setPaginationMode:':
    'prefix': 'setPaginationMode:'
    'body': 'setPaginationMode(${1:UIWebPaginationMode paginationMode})'
  'setScalesPageToFit:':
    'prefix': 'setScalesPageToFit:'
    'body': 'setScalesPageToFit(${1:BOOL scalesPageToFit})'
  'setSuppressesIncrementalRendering:':
    'prefix': 'setSuppressesIncrementalRendering:'
    'body': 'setSuppressesIncrementalRendering(${1:BOOL suppressesIncrementalRendering})'
  'stopLoading':
    'prefix': 'stopLoading'
    'body': 'stopLoading()'
  'stringByEvaluatingJavaScriptFromString:':
    'prefix': 'stringByEvaluatingJavaScriptFromString:'
    'body': 'stringByEvaluatingJavaScriptFromString(${1:NSString* script})'
  'suppressesIncrementalRendering':
    'prefix': 'suppressesIncrementalRendering'
    'body': 'suppressesIncrementalRendering()'
  'becomeKeyWindow':
    'prefix': 'becomeKeyWindow'
    'body': 'becomeKeyWindow()'
  'convertPoint:fromWindow:':
    'prefix': 'convertPoint:fromWindow:'
    'body': 'convertPoint(${1:CGPoint point}, fromWindow:${2:UIWindow* window})'
  'convertPoint:toWindow:':
    'prefix': 'convertPoint:toWindow:'
    'body': 'convertPoint(${1:CGPoint point}, toWindow:${2:UIWindow* window})'
  'convertRect:fromWindow:':
    'prefix': 'convertRect:fromWindow:'
    'body': 'convertRect(${1:CGRect rect}, fromWindow:${2:UIWindow* window})'
  'convertRect:toWindow:':
    'prefix': 'convertRect:toWindow:'
    'body': 'convertRect(${1:CGRect rect}, toWindow:${2:UIWindow* window})'
  'isKeyWindow':
    'prefix': 'isKeyWindow'
    'body': 'isKeyWindow()'
  'makeKeyAndVisible':
    'prefix': 'makeKeyAndVisible'
    'body': 'makeKeyAndVisible()'
  'makeKeyWindow':
    'prefix': 'makeKeyWindow'
    'body': 'makeKeyWindow()'
  'resignKeyWindow':
    'prefix': 'resignKeyWindow'
    'body': 'resignKeyWindow()'
  'rootViewController':
    'prefix': 'rootViewController'
    'body': 'rootViewController()'
  'screen':
    'prefix': 'screen'
    'body': 'screen()'
  'sendEvent:':
    'prefix': 'sendEvent:'
    'body': 'sendEvent(${1:UIEvent* event})'
  'setRootViewController:':
    'prefix': 'setRootViewController:'
    'body': 'setRootViewController(${1:UIViewController* rootViewController})'
  'setScreen:':
    'prefix': 'setScreen:'
    'body': 'setScreen(${1:UIScreen* screen})'
  'setWindowLevel:':
    'prefix': 'setWindowLevel:'
    'body': 'setWindowLevel(${1:UIWindowLevel windowLevel})'
  'windowLevel':
    'prefix': 'windowLevel'
    'body': 'windowLevel()'
  'layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, boundingBoxForControlGlyphAtIndex:${2:NSUInteger glyphIndex}, forTextContainer:${3:NSTextContainer* textContainer}, proposedLineFragment:${4:CGRect proposedRect}, glyphPosition:${5:CGPoint glyphPosition}, characterIndex:${6:NSUInteger charIndex})'
  'layoutManager:didCompleteLayoutForTextContainer:atEnd:':
    'prefix': 'layoutManager:didCompleteLayoutForTextContainer:atEnd:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, didCompleteLayoutForTextContainer:${2:NSTextContainer* textContainer}, atEnd:${3:BOOL layoutFinishedFlag})'
  'layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, lineSpacingAfterGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, paragraphSpacingAfterGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, paragraphSpacingBeforeGlyphAtIndex:${2:NSUInteger glyphIndex}, withProposedLineFragmentRect:${3:CGRect rect})'
  'layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:':
    'prefix': 'layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldBreakLineByHyphenatingBeforeCharacterAtIndex:${2:NSUInteger charIndex})'
  'layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:':
    'prefix': 'layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldBreakLineByWordBeforeCharacterAtIndex:${2:NSUInteger charIndex})'
  'layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:':
    'prefix': 'layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldGenerateGlyphs:${2:CGGlyph* glyphs}, properties:${3:NSGlyphProperty* props}, characterIndexes:${4:NSUInteger* charIndexes}, font:${5:UIFont* aFont}, forGlyphRange:${6:NSRange glyphRange})'
  'layoutManager:shouldUseAction:forControlCharacterAtIndex:':
    'prefix': 'layoutManager:shouldUseAction:forControlCharacterAtIndex:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldUseAction:${2:NSControlCharacterAction action}, forControlCharacterAtIndex:${3:NSUInteger charIndex})'
  'layoutManager:textContainer:didChangeGeometryFromSize:':
    'prefix': 'layoutManager:textContainer:didChangeGeometryFromSize:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, textContainer:${2:NSTextContainer* textContainer}, didChangeGeometryFromSize:${3:CGSize oldSize})'
  'layoutManagerDidInvalidateLayout:':
    'prefix': 'layoutManagerDidInvalidateLayout:'
    'body': 'layoutManagerDidInvalidateLayout(${1:NSLayoutManager* sender})'
  'attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'attachmentBoundsForTextContainer(${1:NSTextContainer* textContainer}, proposedLineFragment:${2:CGRect lineFrag}, glyphPosition:${3:CGPoint position}, characterIndex:${4:NSUInteger charIndex})'
  'imageForBounds:textContainer:characterIndex:':
    'prefix': 'imageForBounds:textContainer:characterIndex:'
    'body': 'imageForBounds(${1:CGRect imageBounds}, textContainer:${2:NSTextContainer* textContainer}, characterIndex:${3:NSUInteger charIndex})'
  'layoutOrientation':
    'prefix': 'layoutOrientation'
    'body': 'layoutOrientation()'
  'setLayoutOrientation:':
    'prefix': 'setLayoutOrientation:'
    'body': 'setLayoutOrientation(${1:NSTextLayoutOrientation layoutOrientation})'
  'textStorage:didProcessEditing:range:changeInLength:':
    'prefix': 'textStorage:didProcessEditing:range:changeInLength:'
    'body': 'textStorage(${1:NSTextStorage* textStorage}, didProcessEditing:${2:NSTextStorageEditActions editedMask}, range:${3:NSRange editedRange}, changeInLength:${4:NSInteger delta})'
  'textStorage:willProcessEditing:range:changeInLength:':
    'prefix': 'textStorage:willProcessEditing:range:changeInLength:'
    'body': 'textStorage(${1:NSTextStorage* textStorage}, willProcessEditing:${2:NSTextStorageEditActions editedMask}, range:${3:NSRange editedRange}, changeInLength:${4:NSInteger delta})'
  'accelerometer:didAccelerate:':
    'prefix': 'accelerometer:didAccelerate:'
    'body': 'accelerometer(${1:UIAccelerometer* accelerometer}, didAccelerate:${2:UIAcceleration* acceleration})'
  'accessibilityActivationPoint':
    'prefix': 'accessibilityActivationPoint'
    'body': 'accessibilityActivationPoint()'
  'accessibilityElementsHidden':
    'prefix': 'accessibilityElementsHidden'
    'body': 'accessibilityElementsHidden()'
  'accessibilityFrame':
    'prefix': 'accessibilityFrame'
    'body': 'accessibilityFrame()'
  'accessibilityHint':
    'prefix': 'accessibilityHint'
    'body': 'accessibilityHint()'
  'accessibilityLabel':
    'prefix': 'accessibilityLabel'
    'body': 'accessibilityLabel()'
  'accessibilityLanguage':
    'prefix': 'accessibilityLanguage'
    'body': 'accessibilityLanguage()'
  'accessibilityPath':
    'prefix': 'accessibilityPath'
    'body': 'accessibilityPath()'
  'accessibilityTraits':
    'prefix': 'accessibilityTraits'
    'body': 'accessibilityTraits()'
  'accessibilityValue':
    'prefix': 'accessibilityValue'
    'body': 'accessibilityValue()'
  'accessibilityViewIsModal':
    'prefix': 'accessibilityViewIsModal'
    'body': 'accessibilityViewIsModal()'
  'isAccessibilityElement':
    'prefix': 'isAccessibilityElement'
    'body': 'isAccessibilityElement()'
  'setAccessibilityActivationPoint:':
    'prefix': 'setAccessibilityActivationPoint:'
    'body': 'setAccessibilityActivationPoint(${1:CGPoint accessibilityActivationPoint})'
  'setAccessibilityElementsHidden:':
    'prefix': 'setAccessibilityElementsHidden:'
    'body': 'setAccessibilityElementsHidden(${1:BOOL accessibilityElementsHidden})'
  'setAccessibilityFrame:':
    'prefix': 'setAccessibilityFrame:'
    'body': 'setAccessibilityFrame(${1:CGRect accessibilityFrame})'
  'setAccessibilityHint:':
    'prefix': 'setAccessibilityHint:'
    'body': 'setAccessibilityHint(${1:NSString* accessibilityHint})'
  'setAccessibilityLabel:':
    'prefix': 'setAccessibilityLabel:'
    'body': 'setAccessibilityLabel(${1:NSString* accessibilityLabel})'
  'setAccessibilityLanguage:':
    'prefix': 'setAccessibilityLanguage:'
    'body': 'setAccessibilityLanguage(${1:NSString* accessibilityLanguage})'
  'setAccessibilityPath:':
    'prefix': 'setAccessibilityPath:'
    'body': 'setAccessibilityPath(${1:UIBezierPath* accessibilityPath})'
  'setAccessibilityTraits:':
    'prefix': 'setAccessibilityTraits:'
    'body': 'setAccessibilityTraits(${1:UIAccessibilityTraits accessibilityTraits})'
  'setAccessibilityValue:':
    'prefix': 'setAccessibilityValue:'
    'body': 'setAccessibilityValue(${1:NSString* accessibilityValue})'
  'setAccessibilityViewIsModal:':
    'prefix': 'setAccessibilityViewIsModal:'
    'body': 'setAccessibilityViewIsModal(${1:BOOL accessibilityViewIsModal})'
  'setIsAccessibilityElement:':
    'prefix': 'setIsAccessibilityElement:'
    'body': 'setIsAccessibilityElement(${1:BOOL isAccessibilityElement})'
  'setShouldGroupAccessibilityChildren:':
    'prefix': 'setShouldGroupAccessibilityChildren:'
    'body': 'setShouldGroupAccessibilityChildren(${1:BOOL shouldGroupAccessibilityChildren})'
  'shouldGroupAccessibilityChildren':
    'prefix': 'shouldGroupAccessibilityChildren'
    'body': 'shouldGroupAccessibilityChildren()'
  'accessibilityActivate':
    'prefix': 'accessibilityActivate'
    'body': 'accessibilityActivate()'
  'accessibilityDecrement':
    'prefix': 'accessibilityDecrement'
    'body': 'accessibilityDecrement()'
  'accessibilityIncrement':
    'prefix': 'accessibilityIncrement'
    'body': 'accessibilityIncrement()'
  'accessibilityPerformEscape':
    'prefix': 'accessibilityPerformEscape'
    'body': 'accessibilityPerformEscape()'
  'accessibilityPerformMagicTap':
    'prefix': 'accessibilityPerformMagicTap'
    'body': 'accessibilityPerformMagicTap()'
  'accessibilityScroll:':
    'prefix': 'accessibilityScroll:'
    'body': 'accessibilityScroll(${1:UIAccessibilityScrollDirection direction})'
  'accessibilityElementAtIndex:':
    'prefix': 'accessibilityElementAtIndex:'
    'body': 'accessibilityElementAtIndex(${1:NSInteger index})'
  'accessibilityElementCount':
    'prefix': 'accessibilityElementCount'
    'body': 'accessibilityElementCount()'
  'indexOfAccessibilityElement:':
    'prefix': 'indexOfAccessibilityElement:'
    'body': 'indexOfAccessibilityElement(${1:id element})'
  'accessibilityElementDidBecomeFocused':
    'prefix': 'accessibilityElementDidBecomeFocused'
    'body': 'accessibilityElementDidBecomeFocused()'
  'accessibilityElementDidLoseFocus':
    'prefix': 'accessibilityElementDidLoseFocus'
    'body': 'accessibilityElementDidLoseFocus()'
  'accessibilityElementIsFocused':
    'prefix': 'accessibilityElementIsFocused'
    'body': 'accessibilityElementIsFocused()'
  'accessibilityIdentifier':
    'prefix': 'accessibilityIdentifier'
    'body': 'accessibilityIdentifier()'
  'setAccessibilityIdentifier:':
    'prefix': 'setAccessibilityIdentifier:'
    'body': 'setAccessibilityIdentifier(${1:NSString* accessibilityIdentifier})'
  'accessibilityContentForLineNumber:':
    'prefix': 'accessibilityContentForLineNumber:'
    'body': 'accessibilityContentForLineNumber(${1:NSInteger lineNumber})'
  'accessibilityFrameForLineNumber:':
    'prefix': 'accessibilityFrameForLineNumber:'
    'body': 'accessibilityFrameForLineNumber(${1:NSInteger lineNumber})'
  'accessibilityLineNumberForPoint:':
    'prefix': 'accessibilityLineNumberForPoint:'
    'body': 'accessibilityLineNumberForPoint(${1:CGPoint point})'
  'accessibilityPageContent':
    'prefix': 'accessibilityPageContent'
    'body': 'accessibilityPageContent()'
  'actionSheet:clickedButtonAtIndex:':
    'prefix': 'actionSheet:clickedButtonAtIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, clickedButtonAtIndex:${2:NSInteger buttonIndex})'
  'actionSheet:didDismissWithButtonIndex:':
    'prefix': 'actionSheet:didDismissWithButtonIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, didDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'actionSheet:willDismissWithButtonIndex:':
    'prefix': 'actionSheet:willDismissWithButtonIndex:'
    'body': 'actionSheet(${1:UIActionSheet* actionSheet}, willDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'actionSheetCancel:':
    'prefix': 'actionSheetCancel:'
    'body': 'actionSheetCancel(${1:UIActionSheet* actionSheet})'
  'didPresentActionSheet:':
    'prefix': 'didPresentActionSheet:'
    'body': 'didPresentActionSheet(${1:UIActionSheet* actionSheet})'
  'willPresentActionSheet:':
    'prefix': 'willPresentActionSheet:'
    'body': 'willPresentActionSheet(${1:UIActionSheet* actionSheet})'
  'activityViewController:dataTypeIdentifierForActivityType:':
    'prefix': 'activityViewController:dataTypeIdentifierForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, dataTypeIdentifierForActivityType:${2:NSString* activityType})'
  'activityViewController:itemForActivityType:':
    'prefix': 'activityViewController:itemForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, itemForActivityType:${2:NSString* activityType})'
  'activityViewController:subjectForActivityType:':
    'prefix': 'activityViewController:subjectForActivityType:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, subjectForActivityType:${2:NSString* activityType})'
  'activityViewController:thumbnailImageForActivityType:suggestedSize:':
    'prefix': 'activityViewController:thumbnailImageForActivityType:suggestedSize:'
    'body': 'activityViewController(${1:UIActivityViewController* activityViewController}, thumbnailImageForActivityType:${2:NSString* activityType}, suggestedSize:${3:CGSize size})'
  'activityViewControllerPlaceholderItem:':
    'prefix': 'activityViewControllerPlaceholderItem:'
    'body': 'activityViewControllerPlaceholderItem(${1:UIActivityViewController* activityViewController})'
  'alertView:clickedButtonAtIndex:':
    'prefix': 'alertView:clickedButtonAtIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, clickedButtonAtIndex:${2:NSInteger buttonIndex})'
  'alertView:didDismissWithButtonIndex:':
    'prefix': 'alertView:didDismissWithButtonIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, didDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'alertView:willDismissWithButtonIndex:':
    'prefix': 'alertView:willDismissWithButtonIndex:'
    'body': 'alertView(${1:UIAlertView* alertView}, willDismissWithButtonIndex:${2:NSInteger buttonIndex})'
  'alertViewCancel:':
    'prefix': 'alertViewCancel:'
    'body': 'alertViewCancel(${1:UIAlertView* alertView})'
  'alertViewShouldEnableFirstOtherButton:':
    'prefix': 'alertViewShouldEnableFirstOtherButton:'
    'body': 'alertViewShouldEnableFirstOtherButton(${1:UIAlertView* alertView})'
  'didPresentAlertView:':
    'prefix': 'didPresentAlertView:'
    'body': 'didPresentAlertView(${1:UIAlertView* alertView})'
  'willPresentAlertView:':
    'prefix': 'willPresentAlertView:'
    'body': 'willPresentAlertView(${1:UIAlertView* alertView})'
  'UIAppearance.appearance':
    'prefix': 'appearance'
    'body': 'UIAppearance.appearance()'
  'UIAppearance.appearanceWhenContainedIn:':
    'prefix': 'appearanceWhenContainedIn:'
    'body': 'UIAppearance.appearanceWhenContainedIn(${1:Class* ContainerClass})'
  'application:didChangeStatusBarFrame:':
    'prefix': 'application:didChangeStatusBarFrame:'
    'body': 'application(${1:UIApplication* application}, didChangeStatusBarFrame:${2:CGRect oldStatusBarFrame})'
  'application:didChangeStatusBarOrientation:':
    'prefix': 'application:didChangeStatusBarOrientation:'
    'body': 'application(${1:UIApplication* application}, didChangeStatusBarOrientation:${2:UIInterfaceOrientation oldStatusBarOrientation})'
  'application:didDecodeRestorableStateWithCoder:':
    'prefix': 'application:didDecodeRestorableStateWithCoder:'
    'body': 'application(${1:UIApplication* application}, didDecodeRestorableStateWithCoder:${2:NSCoder* coder})'
  'application:didFailToRegisterForRemoteNotificationsWithError:':
    'prefix': 'application:didFailToRegisterForRemoteNotificationsWithError:'
    'body': 'application(${1:UIApplication* application}, didFailToRegisterForRemoteNotificationsWithError:${2:NSError* error})'
  'application:didFinishLaunchingWithOptions:':
    'prefix': 'application:didFinishLaunchingWithOptions:'
    'body': 'application(${1:UIApplication* application}, didFinishLaunchingWithOptions:${2:NSDictionary* launchOptions})'
  'application:didReceiveLocalNotification:':
    'prefix': 'application:didReceiveLocalNotification:'
    'body': 'application(${1:UIApplication* application}, didReceiveLocalNotification:${2:UILocalNotification* notification})'
  'application:didReceiveRemoteNotification:':
    'prefix': 'application:didReceiveRemoteNotification:'
    'body': 'application(${1:UIApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo})'
  'application:didReceiveRemoteNotification:fetchCompletionHandler:':
    'prefix': 'application:didReceiveRemoteNotification:fetchCompletionHandler:'
    'body': 'application(${1:UIApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo}, fetchCompletionHandler:${3:void (^)(UIBackgroundFetchResult) completionHandler})'
  'application:didRegisterForRemoteNotificationsWithDeviceToken:':
    'prefix': 'application:didRegisterForRemoteNotificationsWithDeviceToken:'
    'body': 'application(${1:UIApplication* application}, didRegisterForRemoteNotificationsWithDeviceToken:${2:NSData* deviceToken})'
  'application:handleEventsForBackgroundURLSession:completionHandler:':
    'prefix': 'application:handleEventsForBackgroundURLSession:completionHandler:'
    'body': 'application(${1:UIApplication* application}, handleEventsForBackgroundURLSession:${2:NSString* identifier}, completionHandler:${3:void (^)() completionHandler})'
  'application:handleOpenURL:':
    'prefix': 'application:handleOpenURL:'
    'body': 'application(${1:UIApplication* application}, handleOpenURL:${2:NSURL* url})'
  'application:openURL:sourceApplication:annotation:':
    'prefix': 'application:openURL:sourceApplication:annotation:'
    'body': 'application(${1:UIApplication* application}, openURL:${2:NSURL* url}, sourceApplication:${3:NSString* sourceApplication}, annotation:${4:id annotation})'
  'application:performFetchWithCompletionHandler:':
    'prefix': 'application:performFetchWithCompletionHandler:'
    'body': 'application(${1:UIApplication* application}, performFetchWithCompletionHandler:${2:void (^)(UIBackgroundFetchResult) completionHandler})'
  'application:shouldRestoreApplicationState:':
    'prefix': 'application:shouldRestoreApplicationState:'
    'body': 'application(${1:UIApplication* application}, shouldRestoreApplicationState:${2:NSCoder* coder})'
  'application:shouldSaveApplicationState:':
    'prefix': 'application:shouldSaveApplicationState:'
    'body': 'application(${1:UIApplication* application}, shouldSaveApplicationState:${2:NSCoder* coder})'
  'application:supportedInterfaceOrientationsForWindow:':
    'prefix': 'application:supportedInterfaceOrientationsForWindow:'
    'body': 'application(${1:UIApplication* application}, supportedInterfaceOrientationsForWindow:${2:UIWindow* window})'
  'application:viewControllerWithRestorationIdentifierPath:coder:':
    'prefix': 'application:viewControllerWithRestorationIdentifierPath:coder:'
    'body': 'application(${1:UIApplication* application}, viewControllerWithRestorationIdentifierPath:${2:NSArray* identifierComponents}, coder:${3:NSCoder* coder})'
  'application:willChangeStatusBarFrame:':
    'prefix': 'application:willChangeStatusBarFrame:'
    'body': 'application(${1:UIApplication* application}, willChangeStatusBarFrame:${2:CGRect newStatusBarFrame})'
  'application:willChangeStatusBarOrientation:duration:':
    'prefix': 'application:willChangeStatusBarOrientation:duration:'
    'body': 'application(${1:UIApplication* application}, willChangeStatusBarOrientation:${2:UIInterfaceOrientation newStatusBarOrientation}, duration:${3:NSTimeInterval duration})'
  'application:willEncodeRestorableStateWithCoder:':
    'prefix': 'application:willEncodeRestorableStateWithCoder:'
    'body': 'application(${1:UIApplication* application}, willEncodeRestorableStateWithCoder:${2:NSCoder* coder})'
  'application:willFinishLaunchingWithOptions:':
    'prefix': 'application:willFinishLaunchingWithOptions:'
    'body': 'application(${1:UIApplication* application}, willFinishLaunchingWithOptions:${2:NSDictionary* launchOptions})'
  'applicationDidBecomeActive:':
    'prefix': 'applicationDidBecomeActive:'
    'body': 'applicationDidBecomeActive(${1:UIApplication* application})'
  'applicationDidEnterBackground:':
    'prefix': 'applicationDidEnterBackground:'
    'body': 'applicationDidEnterBackground(${1:UIApplication* application})'
  'applicationDidFinishLaunching:':
    'prefix': 'applicationDidFinishLaunching:'
    'body': 'applicationDidFinishLaunching(${1:UIApplication* application})'
  'applicationDidReceiveMemoryWarning:':
    'prefix': 'applicationDidReceiveMemoryWarning:'
    'body': 'applicationDidReceiveMemoryWarning(${1:UIApplication* application})'
  'applicationProtectedDataDidBecomeAvailable:':
    'prefix': 'applicationProtectedDataDidBecomeAvailable:'
    'body': 'applicationProtectedDataDidBecomeAvailable(${1:UIApplication* application})'
  'applicationProtectedDataWillBecomeUnavailable:':
    'prefix': 'applicationProtectedDataWillBecomeUnavailable:'
    'body': 'applicationProtectedDataWillBecomeUnavailable(${1:UIApplication* application})'
  'applicationSignificantTimeChange:':
    'prefix': 'applicationSignificantTimeChange:'
    'body': 'applicationSignificantTimeChange(${1:UIApplication* application})'
  'applicationWillEnterForeground:':
    'prefix': 'applicationWillEnterForeground:'
    'body': 'applicationWillEnterForeground(${1:UIApplication* application})'
  'applicationWillResignActive:':
    'prefix': 'applicationWillResignActive:'
    'body': 'applicationWillResignActive(${1:UIApplication* application})'
  'applicationWillTerminate:':
    'prefix': 'applicationWillTerminate:'
    'body': 'applicationWillTerminate(${1:UIApplication* application})'
  'setWindow:':
    'prefix': 'setWindow:'
    'body': 'setWindow(${1:UIWindow* window})'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'barPosition':
    'prefix': 'barPosition'
    'body': 'barPosition()'
  'positionForBar:':
    'prefix': 'positionForBar:'
    'body': 'positionForBar(${1:id bar})'
  'collectionView:cellForItemAtIndexPath:':
    'prefix': 'collectionView:cellForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, cellForItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:numberOfItemsInSection:':
    'prefix': 'collectionView:numberOfItemsInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, numberOfItemsInSection:${2:NSInteger section})'
  'collectionView:viewForSupplementaryElementOfKind:atIndexPath:':
    'prefix': 'collectionView:viewForSupplementaryElementOfKind:atIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, viewForSupplementaryElementOfKind:${2:NSString* kind}, atIndexPath:${3:NSIndexPath* indexPath})'
  'numberOfSectionsInCollectionView:':
    'prefix': 'numberOfSectionsInCollectionView:'
    'body': 'numberOfSectionsInCollectionView(${1:UICollectionView* collectionView})'
  'collectionView:canPerformAction:forItemAtIndexPath:withSender:':
    'prefix': 'collectionView:canPerformAction:forItemAtIndexPath:withSender:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, canPerformAction:${2:SEL action}, forItemAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'collectionView:didDeselectItemAtIndexPath:':
    'prefix': 'collectionView:didDeselectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didDeselectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didEndDisplayingCell:forItemAtIndexPath:':
    'prefix': 'collectionView:didEndDisplayingCell:forItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didEndDisplayingCell:${2:UICollectionViewCell* cell}, forItemAtIndexPath:${3:NSIndexPath* indexPath})'
  'collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:':
    'prefix': 'collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didEndDisplayingSupplementaryView:${2:UICollectionReusableView* view}, forElementOfKind:${3:NSString* elementKind}, atIndexPath:${4:NSIndexPath* indexPath})'
  'collectionView:didHighlightItemAtIndexPath:':
    'prefix': 'collectionView:didHighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didHighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didSelectItemAtIndexPath:':
    'prefix': 'collectionView:didSelectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didSelectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:didUnhighlightItemAtIndexPath:':
    'prefix': 'collectionView:didUnhighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, didUnhighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:performAction:forItemAtIndexPath:withSender:':
    'prefix': 'collectionView:performAction:forItemAtIndexPath:withSender:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, performAction:${2:SEL action}, forItemAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'collectionView:shouldDeselectItemAtIndexPath:':
    'prefix': 'collectionView:shouldDeselectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldDeselectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldHighlightItemAtIndexPath:':
    'prefix': 'collectionView:shouldHighlightItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldHighlightItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldSelectItemAtIndexPath:':
    'prefix': 'collectionView:shouldSelectItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldSelectItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:shouldShowMenuForItemAtIndexPath:':
    'prefix': 'collectionView:shouldShowMenuForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, shouldShowMenuForItemAtIndexPath:${2:NSIndexPath* indexPath})'
  'collectionView:transitionLayoutForOldLayout:newLayout:':
    'prefix': 'collectionView:transitionLayoutForOldLayout:newLayout:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, transitionLayoutForOldLayout:${2:UICollectionViewLayout* fromLayout}, newLayout:${3:UICollectionViewLayout* toLayout})'
  'collectionView:layout:insetForSectionAtIndex:':
    'prefix': 'collectionView:layout:insetForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, insetForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:minimumInteritemSpacingForSectionAtIndex:':
    'prefix': 'collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, minimumInteritemSpacingForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:minimumLineSpacingForSectionAtIndex:':
    'prefix': 'collectionView:layout:minimumLineSpacingForSectionAtIndex:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, minimumLineSpacingForSectionAtIndex:${3:NSInteger section})'
  'collectionView:layout:referenceSizeForFooterInSection:':
    'prefix': 'collectionView:layout:referenceSizeForFooterInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, referenceSizeForFooterInSection:${3:NSInteger section})'
  'collectionView:layout:referenceSizeForHeaderInSection:':
    'prefix': 'collectionView:layout:referenceSizeForHeaderInSection:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, referenceSizeForHeaderInSection:${3:NSInteger section})'
  'collectionView:layout:sizeForItemAtIndexPath:':
    'prefix': 'collectionView:layout:sizeForItemAtIndexPath:'
    'body': 'collectionView(${1:UICollectionView* collectionView}, layout:${2:UICollectionViewLayout* collectionViewLayout}, sizeForItemAtIndexPath:${3:NSIndexPath* indexPath})'
  'collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:':
    'prefix': 'collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, beganContactForItem:${2:id item}, withBoundaryIdentifier:${3:id identifier}, atPoint:${4:CGPoint p})'
  'collisionBehavior:beganContactForItem:withItem:atPoint:':
    'prefix': 'collisionBehavior:beganContactForItem:withItem:atPoint:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, beganContactForItem:${2:id item1}, withItem:${3:id item2}, atPoint:${4:CGPoint p})'
  'collisionBehavior:endedContactForItem:withBoundaryIdentifier:':
    'prefix': 'collisionBehavior:endedContactForItem:withBoundaryIdentifier:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, endedContactForItem:${2:id item}, withBoundaryIdentifier:${3:id identifier})'
  'collisionBehavior:endedContactForItem:withItem:':
    'prefix': 'collisionBehavior:endedContactForItem:withItem:'
    'body': 'collisionBehavior(${1:UICollisionBehavior* behavior}, endedContactForItem:${2:id item1}, withItem:${3:id item2})'
  'indexPathForElementWithModelIdentifier:inView:':
    'prefix': 'indexPathForElementWithModelIdentifier:inView:'
    'body': 'indexPathForElementWithModelIdentifier(${1:NSString* identifier}, inView:${2:UIView* view})'
  'modelIdentifierForElementAtIndexPath:inView:':
    'prefix': 'modelIdentifierForElementAtIndexPath:inView:'
    'body': 'modelIdentifierForElementAtIndexPath(${1:NSIndexPath* idx}, inView:${2:UIView* view})'
  'documentInteractionController:canPerformAction:':
    'prefix': 'documentInteractionController:canPerformAction:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, canPerformAction:${2:SEL action})'
  'documentInteractionController:didEndSendingToApplication:':
    'prefix': 'documentInteractionController:didEndSendingToApplication:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, didEndSendingToApplication:${2:NSString* application})'
  'documentInteractionController:performAction:':
    'prefix': 'documentInteractionController:performAction:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, performAction:${2:SEL action})'
  'documentInteractionController:willBeginSendingToApplication:':
    'prefix': 'documentInteractionController:willBeginSendingToApplication:'
    'body': 'documentInteractionController(${1:UIDocumentInteractionController* controller}, willBeginSendingToApplication:${2:NSString* application})'
  'documentInteractionControllerDidDismissOpenInMenu:':
    'prefix': 'documentInteractionControllerDidDismissOpenInMenu:'
    'body': 'documentInteractionControllerDidDismissOpenInMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerDidDismissOptionsMenu:':
    'prefix': 'documentInteractionControllerDidDismissOptionsMenu:'
    'body': 'documentInteractionControllerDidDismissOptionsMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerDidEndPreview:':
    'prefix': 'documentInteractionControllerDidEndPreview:'
    'body': 'documentInteractionControllerDidEndPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerRectForPreview:':
    'prefix': 'documentInteractionControllerRectForPreview:'
    'body': 'documentInteractionControllerRectForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerViewControllerForPreview:':
    'prefix': 'documentInteractionControllerViewControllerForPreview:'
    'body': 'documentInteractionControllerViewControllerForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerViewForPreview:':
    'prefix': 'documentInteractionControllerViewForPreview:'
    'body': 'documentInteractionControllerViewForPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillBeginPreview:':
    'prefix': 'documentInteractionControllerWillBeginPreview:'
    'body': 'documentInteractionControllerWillBeginPreview(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillPresentOpenInMenu:':
    'prefix': 'documentInteractionControllerWillPresentOpenInMenu:'
    'body': 'documentInteractionControllerWillPresentOpenInMenu(${1:UIDocumentInteractionController* controller})'
  'documentInteractionControllerWillPresentOptionsMenu:':
    'prefix': 'documentInteractionControllerWillPresentOptionsMenu:'
    'body': 'documentInteractionControllerWillPresentOptionsMenu(${1:UIDocumentInteractionController* controller})'
  'dynamicAnimatorDidPause:':
    'prefix': 'dynamicAnimatorDidPause:'
    'body': 'dynamicAnimatorDidPause(${1:UIDynamicAnimator* animator})'
  'dynamicAnimatorWillResume:':
    'prefix': 'dynamicAnimatorWillResume:'
    'body': 'dynamicAnimatorWillResume(${1:UIDynamicAnimator* animator})'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'center':
    'prefix': 'center'
    'body': 'center()'
  'setCenter:':
    'prefix': 'setCenter:'
    'body': 'setCenter(${1:CGPoint center})'
  'setTransform:':
    'prefix': 'setTransform:'
    'body': 'setTransform(${1:CGAffineTransform transform})'
  'transform':
    'prefix': 'transform'
    'body': 'transform()'
  'gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldBeRequiredToFailByGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizer:shouldReceiveTouch:':
    'prefix': 'gestureRecognizer:shouldReceiveTouch:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldReceiveTouch:${2:UITouch* touch})'
  'gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldRecognizeSimultaneouslyWithGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizer:shouldRequireFailureOfGestureRecognizer:':
    'prefix': 'gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'
    'body': 'gestureRecognizer(${1:UIGestureRecognizer* gestureRecognizer}, shouldRequireFailureOfGestureRecognizer:${2:UIGestureRecognizer* otherGestureRecognizer})'
  'gestureRecognizerShouldBegin:':
    'prefix': 'gestureRecognizerShouldBegin:'
    'body': 'gestureRecognizerShouldBegin(${1:UIGestureRecognizer* gestureRecognizer})'
  'detailTextForGuidedAccessRestrictionWithIdentifier:':
    'prefix': 'detailTextForGuidedAccessRestrictionWithIdentifier:'
    'body': 'detailTextForGuidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier})'
  'guidedAccessRestrictionIdentifiers':
    'prefix': 'guidedAccessRestrictionIdentifiers'
    'body': 'guidedAccessRestrictionIdentifiers()'
  'guidedAccessRestrictionWithIdentifier:didChangeState:':
    'prefix': 'guidedAccessRestrictionWithIdentifier:didChangeState:'
    'body': 'guidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier}, didChangeState:${2:UIGuidedAccessRestrictionState newRestrictionState})'
  'textForGuidedAccessRestrictionWithIdentifier:':
    'prefix': 'textForGuidedAccessRestrictionWithIdentifier:'
    'body': 'textForGuidedAccessRestrictionWithIdentifier(${1:NSString* restrictionIdentifier})'
  'imagePickerController:didFinishPickingImage:editingInfo:':
    'prefix': 'imagePickerController:didFinishPickingImage:editingInfo:'
    'body': 'imagePickerController(${1:UIImagePickerController* picker}, didFinishPickingImage:${2:UIImage* image}, editingInfo:${3:NSDictionary* editingInfo})'
  'imagePickerController:didFinishPickingMediaWithInfo:':
    'prefix': 'imagePickerController:didFinishPickingMediaWithInfo:'
    'body': 'imagePickerController(${1:UIImagePickerController* picker}, didFinishPickingMediaWithInfo:${2:NSDictionary* info})'
  'imagePickerControllerDidCancel:':
    'prefix': 'imagePickerControllerDidCancel:'
    'body': 'imagePickerControllerDidCancel(${1:UIImagePickerController* picker})'
  'enableInputClicksWhenVisible':
    'prefix': 'enableInputClicksWhenVisible'
    'body': 'enableInputClicksWhenVisible()'
  'deleteBackward':
    'prefix': 'deleteBackward'
    'body': 'deleteBackward()'
  'hasText':
    'prefix': 'hasText'
    'body': 'hasText()'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:NSString* text})'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'navigationBar:didPopItem:':
    'prefix': 'navigationBar:didPopItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, didPopItem:${2:UINavigationItem* item})'
  'navigationBar:didPushItem:':
    'prefix': 'navigationBar:didPushItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, didPushItem:${2:UINavigationItem* item})'
  'navigationBar:shouldPopItem:':
    'prefix': 'navigationBar:shouldPopItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, shouldPopItem:${2:UINavigationItem* item})'
  'navigationBar:shouldPushItem:':
    'prefix': 'navigationBar:shouldPushItem:'
    'body': 'navigationBar(${1:UINavigationBar* navigationBar}, shouldPushItem:${2:UINavigationItem* item})'
  'navigationController:animationControllerForOperation:fromViewController:toViewController:':
    'prefix': 'navigationController:animationControllerForOperation:fromViewController:toViewController:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, animationControllerForOperation:${2:UINavigationControllerOperation operation}, fromViewController:${3:UIViewController* fromVC}, toViewController:${4:UIViewController* toVC})'
  'navigationController:didShowViewController:animated:':
    'prefix': 'navigationController:didShowViewController:animated:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, didShowViewController:${2:UIViewController* viewController}, animated:${3:BOOL animated})'
  'navigationController:interactionControllerForAnimationController:':
    'prefix': 'navigationController:interactionControllerForAnimationController:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, interactionControllerForAnimationController:${2:id animationController})'
  'navigationController:willShowViewController:animated:':
    'prefix': 'navigationController:willShowViewController:animated:'
    'body': 'navigationController(${1:UINavigationController* navigationController}, willShowViewController:${2:UIViewController* viewController}, animated:${3:BOOL animated})'
  'navigationControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'navigationControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'navigationControllerPreferredInterfaceOrientationForPresentation(${1:UINavigationController* navigationController})'
  'navigationControllerSupportedInterfaceOrientations:':
    'prefix': 'navigationControllerSupportedInterfaceOrientations:'
    'body': 'navigationControllerSupportedInterfaceOrientations(${1:UINavigationController* navigationController})'
  'awakeFromNib':
    'prefix': 'awakeFromNib'
    'body': 'awakeFromNib()'
  'UIObjectRestoration.objectWithRestorationIdentifierPath:coder:':
    'prefix': 'objectWithRestorationIdentifierPath:coder:'
    'body': 'UIObjectRestoration.objectWithRestorationIdentifierPath(${1:NSArray* identifierComponents}, coder:${2:NSCoder* coder})'
  'pageViewController:viewControllerAfterViewController:':
    'prefix': 'pageViewController:viewControllerAfterViewController:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, viewControllerAfterViewController:${2:UIViewController* viewController})'
  'pageViewController:viewControllerBeforeViewController:':
    'prefix': 'pageViewController:viewControllerBeforeViewController:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, viewControllerBeforeViewController:${2:UIViewController* viewController})'
  'presentationCountForPageViewController:':
    'prefix': 'presentationCountForPageViewController:'
    'body': 'presentationCountForPageViewController(${1:UIPageViewController* pageViewController})'
  'presentationIndexForPageViewController:':
    'prefix': 'presentationIndexForPageViewController:'
    'body': 'presentationIndexForPageViewController(${1:UIPageViewController* pageViewController})'
  'pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:':
    'prefix': 'pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, didFinishAnimating:${2:BOOL finished}, previousViewControllers:${3:NSArray* previousViewControllers}, transitionCompleted:${4:BOOL completed})'
  'pageViewController:spineLocationForInterfaceOrientation:':
    'prefix': 'pageViewController:spineLocationForInterfaceOrientation:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, spineLocationForInterfaceOrientation:${2:UIInterfaceOrientation orientation})'
  'pageViewController:willTransitionToViewControllers:':
    'prefix': 'pageViewController:willTransitionToViewControllers:'
    'body': 'pageViewController(${1:UIPageViewController* pageViewController}, willTransitionToViewControllers:${2:NSArray* pendingViewControllers})'
  'pageViewControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'pageViewControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'pageViewControllerPreferredInterfaceOrientationForPresentation(${1:UIPageViewController* pageViewController})'
  'pageViewControllerSupportedInterfaceOrientations:':
    'prefix': 'pageViewControllerSupportedInterfaceOrientations:'
    'body': 'pageViewControllerSupportedInterfaceOrientations(${1:UIPageViewController* pageViewController})'
  'pickerView:accessibilityHintForComponent:':
    'prefix': 'pickerView:accessibilityHintForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, accessibilityHintForComponent:${2:NSInteger component})'
  'pickerView:accessibilityLabelForComponent:':
    'prefix': 'pickerView:accessibilityLabelForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, accessibilityLabelForComponent:${2:NSInteger component})'
  'numberOfComponentsInPickerView:':
    'prefix': 'numberOfComponentsInPickerView:'
    'body': 'numberOfComponentsInPickerView(${1:UIPickerView* pickerView})'
  'pickerView:numberOfRowsInComponent:':
    'prefix': 'pickerView:numberOfRowsInComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, numberOfRowsInComponent:${2:NSInteger component})'
  'pickerView:attributedTitleForRow:forComponent:':
    'prefix': 'pickerView:attributedTitleForRow:forComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, attributedTitleForRow:${2:NSInteger row}, forComponent:${3:NSInteger component})'
  'pickerView:didSelectRow:inComponent:':
    'prefix': 'pickerView:didSelectRow:inComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, didSelectRow:${2:NSInteger row}, inComponent:${3:NSInteger component})'
  'pickerView:rowHeightForComponent:':
    'prefix': 'pickerView:rowHeightForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, rowHeightForComponent:${2:NSInteger component})'
  'pickerView:titleForRow:forComponent:':
    'prefix': 'pickerView:titleForRow:forComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, titleForRow:${2:NSInteger row}, forComponent:${3:NSInteger component})'
  'pickerView:viewForRow:forComponent:reusingView:':
    'prefix': 'pickerView:viewForRow:forComponent:reusingView:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, viewForRow:${2:NSInteger row}, forComponent:${3:NSInteger component}, reusingView:${4:UIView* view})'
  'pickerView:widthForComponent:':
    'prefix': 'pickerView:widthForComponent:'
    'body': 'pickerView(${1:UIPickerView* pickerView}, widthForComponent:${2:NSInteger component})'
  'popoverController:willRepositionPopoverToRect:inView:':
    'prefix': 'popoverController:willRepositionPopoverToRect:inView:'
    'body': 'popoverController(${1:UIPopoverController* popoverController}, willRepositionPopoverToRect:${2:CGRect* rect}, inView:${3:UIView** view})'
  'popoverControllerDidDismissPopover:':
    'prefix': 'popoverControllerDidDismissPopover:'
    'body': 'popoverControllerDidDismissPopover(${1:UIPopoverController* popoverController})'
  'popoverControllerShouldDismissPopover:':
    'prefix': 'popoverControllerShouldDismissPopover:'
    'body': 'popoverControllerShouldDismissPopover(${1:UIPopoverController* popoverController})'
  'printInteractionController:choosePaper:':
    'prefix': 'printInteractionController:choosePaper:'
    'body': 'printInteractionController(${1:UIPrintInteractionController* printInteractionController}, choosePaper:${2:NSArray* paperList})'
  'printInteractionController:cutLengthForPaper:':
    'prefix': 'printInteractionController:cutLengthForPaper:'
    'body': 'printInteractionController(${1:UIPrintInteractionController* printInteractionController}, cutLengthForPaper:${2:UIPrintPaper* paper})'
  'printInteractionControllerDidDismissPrinterOptions:':
    'prefix': 'printInteractionControllerDidDismissPrinterOptions:'
    'body': 'printInteractionControllerDidDismissPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerDidFinishJob:':
    'prefix': 'printInteractionControllerDidFinishJob:'
    'body': 'printInteractionControllerDidFinishJob(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerDidPresentPrinterOptions:':
    'prefix': 'printInteractionControllerDidPresentPrinterOptions:'
    'body': 'printInteractionControllerDidPresentPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerParentViewController:':
    'prefix': 'printInteractionControllerParentViewController:'
    'body': 'printInteractionControllerParentViewController(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillDismissPrinterOptions:':
    'prefix': 'printInteractionControllerWillDismissPrinterOptions:'
    'body': 'printInteractionControllerWillDismissPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillPresentPrinterOptions:':
    'prefix': 'printInteractionControllerWillPresentPrinterOptions:'
    'body': 'printInteractionControllerWillPresentPrinterOptions(${1:UIPrintInteractionController* printInteractionController})'
  'printInteractionControllerWillStartJob:':
    'prefix': 'printInteractionControllerWillStartJob:'
    'body': 'printInteractionControllerWillStartJob(${1:UIPrintInteractionController* printInteractionController})'
  'copy:':
    'prefix': 'copy:'
    'body': 'copy(${1:id sender})'
  'cut:':
    'prefix': 'cut:'
    'body': 'cut(${1:id sender})'
  'decreaseSize:':
    'prefix': 'decreaseSize:'
    'body': 'decreaseSize(${1:id sender})'
  'delete:':
    'prefix': 'delete:'
    'body': 'delete(${1:id sender})'
  'increaseSize:':
    'prefix': 'increaseSize:'
    'body': 'increaseSize(${1:id sender})'
  'makeTextWritingDirectionLeftToRight:':
    'prefix': 'makeTextWritingDirectionLeftToRight:'
    'body': 'makeTextWritingDirectionLeftToRight(${1:id sender})'
  'makeTextWritingDirectionRightToLeft:':
    'prefix': 'makeTextWritingDirectionRightToLeft:'
    'body': 'makeTextWritingDirectionRightToLeft(${1:id sender})'
  'paste:':
    'prefix': 'paste:'
    'body': 'paste(${1:id sender})'
  'select:':
    'prefix': 'select:'
    'body': 'select(${1:id sender})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'toggleBoldface:':
    'prefix': 'toggleBoldface:'
    'body': 'toggleBoldface(${1:id sender})'
  'toggleItalics:':
    'prefix': 'toggleItalics:'
    'body': 'toggleItalics(${1:id sender})'
  'toggleUnderline:':
    'prefix': 'toggleUnderline:'
    'body': 'toggleUnderline(${1:id sender})'
  'accessibilityScrollStatusForScrollView:':
    'prefix': 'accessibilityScrollStatusForScrollView:'
    'body': 'accessibilityScrollStatusForScrollView(${1:UIScrollView* scrollView})'
  'scrollViewDidEndDecelerating:':
    'prefix': 'scrollViewDidEndDecelerating:'
    'body': 'scrollViewDidEndDecelerating(${1:UIScrollView* scrollView})'
  'scrollViewDidEndDragging:willDecelerate:':
    'prefix': 'scrollViewDidEndDragging:willDecelerate:'
    'body': 'scrollViewDidEndDragging(${1:UIScrollView* scrollView}, willDecelerate:${2:BOOL decelerate})'
  'scrollViewDidEndScrollingAnimation:':
    'prefix': 'scrollViewDidEndScrollingAnimation:'
    'body': 'scrollViewDidEndScrollingAnimation(${1:UIScrollView* scrollView})'
  'scrollViewDidEndZooming:withView:atScale:':
    'prefix': 'scrollViewDidEndZooming:withView:atScale:'
    'body': 'scrollViewDidEndZooming(${1:UIScrollView* scrollView}, withView:${2:UIView* view}, atScale:${3:CGFloat scale})'
  'scrollViewDidScroll:':
    'prefix': 'scrollViewDidScroll:'
    'body': 'scrollViewDidScroll(${1:UIScrollView* scrollView})'
  'scrollViewDidScrollToTop:':
    'prefix': 'scrollViewDidScrollToTop:'
    'body': 'scrollViewDidScrollToTop(${1:UIScrollView* scrollView})'
  'scrollViewDidZoom:':
    'prefix': 'scrollViewDidZoom:'
    'body': 'scrollViewDidZoom(${1:UIScrollView* scrollView})'
  'scrollViewShouldScrollToTop:':
    'prefix': 'scrollViewShouldScrollToTop:'
    'body': 'scrollViewShouldScrollToTop(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginDecelerating:':
    'prefix': 'scrollViewWillBeginDecelerating:'
    'body': 'scrollViewWillBeginDecelerating(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginDragging:':
    'prefix': 'scrollViewWillBeginDragging:'
    'body': 'scrollViewWillBeginDragging(${1:UIScrollView* scrollView})'
  'scrollViewWillBeginZooming:withView:':
    'prefix': 'scrollViewWillBeginZooming:withView:'
    'body': 'scrollViewWillBeginZooming(${1:UIScrollView* scrollView}, withView:${2:UIView* view})'
  'scrollViewWillEndDragging:withVelocity:targetContentOffset:':
    'prefix': 'scrollViewWillEndDragging:withVelocity:targetContentOffset:'
    'body': 'scrollViewWillEndDragging(${1:UIScrollView* scrollView}, withVelocity:${2:CGPoint velocity}, targetContentOffset:${3:CGPoint* targetContentOffset})'
  'viewForZoomingInScrollView:':
    'prefix': 'viewForZoomingInScrollView:'
    'body': 'viewForZoomingInScrollView(${1:UIScrollView* scrollView})'
  'searchBar:selectedScopeButtonIndexDidChange:':
    'prefix': 'searchBar:selectedScopeButtonIndexDidChange:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, selectedScopeButtonIndexDidChange:${2:NSInteger selectedScope})'
  'searchBar:shouldChangeTextInRange:replacementText:':
    'prefix': 'searchBar:shouldChangeTextInRange:replacementText:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, shouldChangeTextInRange:${2:NSRange range}, replacementText:${3:NSString* text})'
  'searchBar:textDidChange:':
    'prefix': 'searchBar:textDidChange:'
    'body': 'searchBar(${1:UISearchBar* searchBar}, textDidChange:${2:NSString* searchText})'
  'searchBarBookmarkButtonClicked:':
    'prefix': 'searchBarBookmarkButtonClicked:'
    'body': 'searchBarBookmarkButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarCancelButtonClicked:':
    'prefix': 'searchBarCancelButtonClicked:'
    'body': 'searchBarCancelButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarResultsListButtonClicked:':
    'prefix': 'searchBarResultsListButtonClicked:'
    'body': 'searchBarResultsListButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarSearchButtonClicked:':
    'prefix': 'searchBarSearchButtonClicked:'
    'body': 'searchBarSearchButtonClicked(${1:UISearchBar* searchBar})'
  'searchBarShouldBeginEditing:':
    'prefix': 'searchBarShouldBeginEditing:'
    'body': 'searchBarShouldBeginEditing(${1:UISearchBar* searchBar})'
  'searchBarShouldEndEditing:':
    'prefix': 'searchBarShouldEndEditing:'
    'body': 'searchBarShouldEndEditing(${1:UISearchBar* searchBar})'
  'searchBarTextDidBeginEditing:':
    'prefix': 'searchBarTextDidBeginEditing:'
    'body': 'searchBarTextDidBeginEditing(${1:UISearchBar* searchBar})'
  'searchBarTextDidEndEditing:':
    'prefix': 'searchBarTextDidEndEditing:'
    'body': 'searchBarTextDidEndEditing(${1:UISearchBar* searchBar})'
  'searchDisplayController:didHideSearchResultsTableView:':
    'prefix': 'searchDisplayController:didHideSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didHideSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:didLoadSearchResultsTableView:':
    'prefix': 'searchDisplayController:didLoadSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didLoadSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:didShowSearchResultsTableView:':
    'prefix': 'searchDisplayController:didShowSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, didShowSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:shouldReloadTableForSearchScope:':
    'prefix': 'searchDisplayController:shouldReloadTableForSearchScope:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, shouldReloadTableForSearchScope:${2:NSInteger searchOption})'
  'searchDisplayController:shouldReloadTableForSearchString:':
    'prefix': 'searchDisplayController:shouldReloadTableForSearchString:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, shouldReloadTableForSearchString:${2:NSString* searchString})'
  'searchDisplayController:willHideSearchResultsTableView:':
    'prefix': 'searchDisplayController:willHideSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willHideSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:willShowSearchResultsTableView:':
    'prefix': 'searchDisplayController:willShowSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willShowSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayController:willUnloadSearchResultsTableView:':
    'prefix': 'searchDisplayController:willUnloadSearchResultsTableView:'
    'body': 'searchDisplayController(${1:UISearchDisplayController* controller}, willUnloadSearchResultsTableView:${2:UITableView* tableView})'
  'searchDisplayControllerDidBeginSearch:':
    'prefix': 'searchDisplayControllerDidBeginSearch:'
    'body': 'searchDisplayControllerDidBeginSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerDidEndSearch:':
    'prefix': 'searchDisplayControllerDidEndSearch:'
    'body': 'searchDisplayControllerDidEndSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerWillBeginSearch:':
    'prefix': 'searchDisplayControllerWillBeginSearch:'
    'body': 'searchDisplayControllerWillBeginSearch(${1:UISearchDisplayController* controller})'
  'searchDisplayControllerWillEndSearch:':
    'prefix': 'searchDisplayControllerWillEndSearch:'
    'body': 'searchDisplayControllerWillEndSearch(${1:UISearchDisplayController* controller})'
  'splitViewController:popoverController:willPresentViewController:':
    'prefix': 'splitViewController:popoverController:willPresentViewController:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, popoverController:${2:UIPopoverController* pc}, willPresentViewController:${3:UIViewController* aViewController})'
  'splitViewController:shouldHideViewController:inOrientation:':
    'prefix': 'splitViewController:shouldHideViewController:inOrientation:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, shouldHideViewController:${2:UIViewController* vc}, inOrientation:${3:UIInterfaceOrientation orientation})'
  'splitViewController:willHideViewController:withBarButtonItem:forPopoverController:':
    'prefix': 'splitViewController:willHideViewController:withBarButtonItem:forPopoverController:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, willHideViewController:${2:UIViewController* aViewController}, withBarButtonItem:${3:UIBarButtonItem* barButtonItem}, forPopoverController:${4:UIPopoverController* pc})'
  'splitViewController:willShowViewController:invalidatingBarButtonItem:':
    'prefix': 'splitViewController:willShowViewController:invalidatingBarButtonItem:'
    'body': 'splitViewController(${1:UISplitViewController* svc}, willShowViewController:${2:UIViewController* aViewController}, invalidatingBarButtonItem:${3:UIBarButtonItem* barButtonItem})'
  'splitViewControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'splitViewControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'splitViewControllerPreferredInterfaceOrientationForPresentation(${1:UISplitViewController* splitViewController})'
  'splitViewControllerSupportedInterfaceOrientations:':
    'prefix': 'splitViewControllerSupportedInterfaceOrientations:'
    'body': 'splitViewControllerSupportedInterfaceOrientations(${1:UISplitViewController* splitViewController})'
  'applicationFinishedRestoringState':
    'prefix': 'applicationFinishedRestoringState'
    'body': 'applicationFinishedRestoringState()'
  'decodeRestorableStateWithCoder:':
    'prefix': 'decodeRestorableStateWithCoder:'
    'body': 'decodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'objectRestorationClass':
    'prefix': 'objectRestorationClass'
    'body': 'objectRestorationClass()'
  'restorationParent':
    'prefix': 'restorationParent'
    'body': 'restorationParent()'
  'tabBarController:animationControllerForTransitionFromViewController:toViewController:':
    'prefix': 'tabBarController:animationControllerForTransitionFromViewController:toViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, animationControllerForTransitionFromViewController:${2:UIViewController* fromVC}, toViewController:${3:UIViewController* toVC})'
  'tabBarController:didEndCustomizingViewControllers:changed:':
    'prefix': 'tabBarController:didEndCustomizingViewControllers:changed:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, didEndCustomizingViewControllers:${2:NSArray* viewControllers}, changed:${3:BOOL changed})'
  'tabBarController:didSelectViewController:':
    'prefix': 'tabBarController:didSelectViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, didSelectViewController:${2:UIViewController* viewController})'
  'tabBarController:interactionControllerForAnimationController:':
    'prefix': 'tabBarController:interactionControllerForAnimationController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, interactionControllerForAnimationController:${2:id animationController})'
  'tabBarController:shouldSelectViewController:':
    'prefix': 'tabBarController:shouldSelectViewController:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, shouldSelectViewController:${2:UIViewController* viewController})'
  'tabBarController:willBeginCustomizingViewControllers:':
    'prefix': 'tabBarController:willBeginCustomizingViewControllers:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, willBeginCustomizingViewControllers:${2:NSArray* viewControllers})'
  'tabBarController:willEndCustomizingViewControllers:changed:':
    'prefix': 'tabBarController:willEndCustomizingViewControllers:changed:'
    'body': 'tabBarController(${1:UITabBarController* tabBarController}, willEndCustomizingViewControllers:${2:NSArray* viewControllers}, changed:${3:BOOL changed})'
  'tabBarControllerPreferredInterfaceOrientationForPresentation:':
    'prefix': 'tabBarControllerPreferredInterfaceOrientationForPresentation:'
    'body': 'tabBarControllerPreferredInterfaceOrientationForPresentation(${1:UITabBarController* tabBarController})'
  'tabBarControllerSupportedInterfaceOrientations:':
    'prefix': 'tabBarControllerSupportedInterfaceOrientations:'
    'body': 'tabBarControllerSupportedInterfaceOrientations(${1:UITabBarController* tabBarController})'
  'tabBar:didBeginCustomizingItems:':
    'prefix': 'tabBar:didBeginCustomizingItems:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didBeginCustomizingItems:${2:NSArray* items})'
  'tabBar:didEndCustomizingItems:changed:':
    'prefix': 'tabBar:didEndCustomizingItems:changed:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didEndCustomizingItems:${2:NSArray* items}, changed:${3:BOOL changed})'
  'tabBar:didSelectItem:':
    'prefix': 'tabBar:didSelectItem:'
    'body': 'tabBar(${1:UITabBar* tabBar}, didSelectItem:${2:UITabBarItem* item})'
  'tabBar:willBeginCustomizingItems:':
    'prefix': 'tabBar:willBeginCustomizingItems:'
    'body': 'tabBar(${1:UITabBar* tabBar}, willBeginCustomizingItems:${2:NSArray* items})'
  'tabBar:willEndCustomizingItems:changed:':
    'prefix': 'tabBar:willEndCustomizingItems:changed:'
    'body': 'tabBar(${1:UITabBar* tabBar}, willEndCustomizingItems:${2:NSArray* items}, changed:${3:BOOL changed})'
  'numberOfSectionsInTableView:':
    'prefix': 'numberOfSectionsInTableView:'
    'body': 'numberOfSectionsInTableView(${1:UITableView* tableView})'
  'sectionIndexTitlesForTableView:':
    'prefix': 'sectionIndexTitlesForTableView:'
    'body': 'sectionIndexTitlesForTableView(${1:UITableView* tableView})'
  'tableView:canEditRowAtIndexPath:':
    'prefix': 'tableView:canEditRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, canEditRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:canMoveRowAtIndexPath:':
    'prefix': 'tableView:canMoveRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, canMoveRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:cellForRowAtIndexPath:':
    'prefix': 'tableView:cellForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, cellForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:commitEditingStyle:forRowAtIndexPath:':
    'prefix': 'tableView:commitEditingStyle:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, commitEditingStyle:${2:UITableViewCellEditingStyle editingStyle}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:moveRowAtIndexPath:toIndexPath:':
    'prefix': 'tableView:moveRowAtIndexPath:toIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, moveRowAtIndexPath:${2:NSIndexPath* sourceIndexPath}, toIndexPath:${3:NSIndexPath* destinationIndexPath})'
  'tableView:numberOfRowsInSection:':
    'prefix': 'tableView:numberOfRowsInSection:'
    'body': 'tableView(${1:UITableView* tableView}, numberOfRowsInSection:${2:NSInteger section})'
  'tableView:sectionForSectionIndexTitle:atIndex:':
    'prefix': 'tableView:sectionForSectionIndexTitle:atIndex:'
    'body': 'tableView(${1:UITableView* tableView}, sectionForSectionIndexTitle:${2:NSString* title}, atIndex:${3:NSInteger index})'
  'tableView:titleForFooterInSection:':
    'prefix': 'tableView:titleForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, titleForFooterInSection:${2:NSInteger section})'
  'tableView:titleForHeaderInSection:':
    'prefix': 'tableView:titleForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, titleForHeaderInSection:${2:NSInteger section})'
  'tableView:accessoryButtonTappedForRowWithIndexPath:':
    'prefix': 'tableView:accessoryButtonTappedForRowWithIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, accessoryButtonTappedForRowWithIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:accessoryTypeForRowWithIndexPath:':
    'prefix': 'tableView:accessoryTypeForRowWithIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, accessoryTypeForRowWithIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:canPerformAction:forRowAtIndexPath:withSender:':
    'prefix': 'tableView:canPerformAction:forRowAtIndexPath:withSender:'
    'body': 'tableView(${1:UITableView* tableView}, canPerformAction:${2:SEL action}, forRowAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'tableView:didDeselectRowAtIndexPath:':
    'prefix': 'tableView:didDeselectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didDeselectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didEndDisplayingCell:forRowAtIndexPath:':
    'prefix': 'tableView:didEndDisplayingCell:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingCell:${2:UITableViewCell* cell}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:didEndDisplayingFooterView:forSection:':
    'prefix': 'tableView:didEndDisplayingFooterView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingFooterView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:didEndDisplayingHeaderView:forSection:':
    'prefix': 'tableView:didEndDisplayingHeaderView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, didEndDisplayingHeaderView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:didEndEditingRowAtIndexPath:':
    'prefix': 'tableView:didEndEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didEndEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didHighlightRowAtIndexPath:':
    'prefix': 'tableView:didHighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didHighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didSelectRowAtIndexPath:':
    'prefix': 'tableView:didSelectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didSelectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:didUnhighlightRowAtIndexPath:':
    'prefix': 'tableView:didUnhighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, didUnhighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:editingStyleForRowAtIndexPath:':
    'prefix': 'tableView:editingStyleForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, editingStyleForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:estimatedHeightForFooterInSection:':
    'prefix': 'tableView:estimatedHeightForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForFooterInSection:${2:NSInteger section})'
  'tableView:estimatedHeightForHeaderInSection:':
    'prefix': 'tableView:estimatedHeightForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForHeaderInSection:${2:NSInteger section})'
  'tableView:estimatedHeightForRowAtIndexPath:':
    'prefix': 'tableView:estimatedHeightForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, estimatedHeightForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:heightForFooterInSection:':
    'prefix': 'tableView:heightForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, heightForFooterInSection:${2:NSInteger section})'
  'tableView:heightForHeaderInSection:':
    'prefix': 'tableView:heightForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, heightForHeaderInSection:${2:NSInteger section})'
  'tableView:heightForRowAtIndexPath:':
    'prefix': 'tableView:heightForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, heightForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:indentationLevelForRowAtIndexPath:':
    'prefix': 'tableView:indentationLevelForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, indentationLevelForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:performAction:forRowAtIndexPath:withSender:':
    'prefix': 'tableView:performAction:forRowAtIndexPath:withSender:'
    'body': 'tableView(${1:UITableView* tableView}, performAction:${2:SEL action}, forRowAtIndexPath:${3:NSIndexPath* indexPath}, withSender:${4:id sender})'
  'tableView:shouldHighlightRowAtIndexPath:':
    'prefix': 'tableView:shouldHighlightRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldHighlightRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:shouldIndentWhileEditingRowAtIndexPath:':
    'prefix': 'tableView:shouldIndentWhileEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldIndentWhileEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:shouldShowMenuForRowAtIndexPath:':
    'prefix': 'tableView:shouldShowMenuForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, shouldShowMenuForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:':
    'prefix': 'tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, targetIndexPathForMoveFromRowAtIndexPath:${2:NSIndexPath* sourceIndexPath}, toProposedIndexPath:${3:NSIndexPath* proposedDestinationIndexPath})'
  'tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:':
    'prefix': 'tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, titleForDeleteConfirmationButtonForRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:viewForFooterInSection:':
    'prefix': 'tableView:viewForFooterInSection:'
    'body': 'tableView(${1:UITableView* tableView}, viewForFooterInSection:${2:NSInteger section})'
  'tableView:viewForHeaderInSection:':
    'prefix': 'tableView:viewForHeaderInSection:'
    'body': 'tableView(${1:UITableView* tableView}, viewForHeaderInSection:${2:NSInteger section})'
  'tableView:willBeginEditingRowAtIndexPath:':
    'prefix': 'tableView:willBeginEditingRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willBeginEditingRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:willDeselectRowAtIndexPath:':
    'prefix': 'tableView:willDeselectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willDeselectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'tableView:willDisplayCell:forRowAtIndexPath:':
    'prefix': 'tableView:willDisplayCell:forRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayCell:${2:UITableViewCell* cell}, forRowAtIndexPath:${3:NSIndexPath* indexPath})'
  'tableView:willDisplayFooterView:forSection:':
    'prefix': 'tableView:willDisplayFooterView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayFooterView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:willDisplayHeaderView:forSection:':
    'prefix': 'tableView:willDisplayHeaderView:forSection:'
    'body': 'tableView(${1:UITableView* tableView}, willDisplayHeaderView:${2:UIView* view}, forSection:${3:NSInteger section})'
  'tableView:willSelectRowAtIndexPath:':
    'prefix': 'tableView:willSelectRowAtIndexPath:'
    'body': 'tableView(${1:UITableView* tableView}, willSelectRowAtIndexPath:${2:NSIndexPath* indexPath})'
  'textField:shouldChangeCharactersInRange:replacementString:':
    'prefix': 'textField:shouldChangeCharactersInRange:replacementString:'
    'body': 'textField(${1:UITextField* textField}, shouldChangeCharactersInRange:${2:NSRange range}, replacementString:${3:NSString* string})'
  'textFieldDidBeginEditing:':
    'prefix': 'textFieldDidBeginEditing:'
    'body': 'textFieldDidBeginEditing(${1:UITextField* textField})'
  'textFieldDidEndEditing:':
    'prefix': 'textFieldDidEndEditing:'
    'body': 'textFieldDidEndEditing(${1:UITextField* textField})'
  'textFieldShouldBeginEditing:':
    'prefix': 'textFieldShouldBeginEditing:'
    'body': 'textFieldShouldBeginEditing(${1:UITextField* textField})'
  'textFieldShouldClear:':
    'prefix': 'textFieldShouldClear:'
    'body': 'textFieldShouldClear(${1:UITextField* textField})'
  'textFieldShouldEndEditing:':
    'prefix': 'textFieldShouldEndEditing:'
    'body': 'textFieldShouldEndEditing(${1:UITextField* textField})'
  'textFieldShouldReturn:':
    'prefix': 'textFieldShouldReturn:'
    'body': 'textFieldShouldReturn(${1:UITextField* textField})'
  'baseWritingDirectionForPosition:inDirection:':
    'prefix': 'baseWritingDirectionForPosition:inDirection:'
    'body': 'baseWritingDirectionForPosition(${1:UITextPosition* position}, inDirection:${2:UITextStorageDirection direction})'
  'beginningOfDocument':
    'prefix': 'beginningOfDocument'
    'body': 'beginningOfDocument()'
  'caretRectForPosition:':
    'prefix': 'caretRectForPosition:'
    'body': 'caretRectForPosition(${1:UITextPosition* position})'
  'characterOffsetOfPosition:withinRange:':
    'prefix': 'characterOffsetOfPosition:withinRange:'
    'body': 'characterOffsetOfPosition(${1:UITextPosition* position}, withinRange:${2:UITextRange* range})'
  'characterRangeAtPoint:':
    'prefix': 'characterRangeAtPoint:'
    'body': 'characterRangeAtPoint(${1:CGPoint point})'
  'characterRangeByExtendingPosition:inDirection:':
    'prefix': 'characterRangeByExtendingPosition:inDirection:'
    'body': 'characterRangeByExtendingPosition(${1:UITextPosition* position}, inDirection:${2:UITextLayoutDirection direction})'
  'closestPositionToPoint:':
    'prefix': 'closestPositionToPoint:'
    'body': 'closestPositionToPoint(${1:CGPoint point})'
  'closestPositionToPoint:withinRange:':
    'prefix': 'closestPositionToPoint:withinRange:'
    'body': 'closestPositionToPoint(${1:CGPoint point}, withinRange:${2:UITextRange* range})'
  'comparePosition:toPosition:':
    'prefix': 'comparePosition:toPosition:'
    'body': 'comparePosition(${1:UITextPosition* position}, toPosition:${2:UITextPosition* other})'
  'dictationRecognitionFailed':
    'prefix': 'dictationRecognitionFailed'
    'body': 'dictationRecognitionFailed()'
  'dictationRecordingDidEnd':
    'prefix': 'dictationRecordingDidEnd'
    'body': 'dictationRecordingDidEnd()'
  'endOfDocument':
    'prefix': 'endOfDocument'
    'body': 'endOfDocument()'
  'firstRectForRange:':
    'prefix': 'firstRectForRange:'
    'body': 'firstRectForRange(${1:UITextRange* range})'
  'frameForDictationResultPlaceholder:':
    'prefix': 'frameForDictationResultPlaceholder:'
    'body': 'frameForDictationResultPlaceholder(${1:id placeholder})'
  'inputDelegate':
    'prefix': 'inputDelegate'
    'body': 'inputDelegate()'
  'insertDictationResult:':
    'prefix': 'insertDictationResult:'
    'body': 'insertDictationResult(${1:NSArray* dictationResult})'
  'insertDictationResultPlaceholder':
    'prefix': 'insertDictationResultPlaceholder'
    'body': 'insertDictationResultPlaceholder()'
  'markedTextRange':
    'prefix': 'markedTextRange'
    'body': 'markedTextRange()'
  'markedTextStyle':
    'prefix': 'markedTextStyle'
    'body': 'markedTextStyle()'
  'offsetFromPosition:toPosition:':
    'prefix': 'offsetFromPosition:toPosition:'
    'body': 'offsetFromPosition(${1:UITextPosition* from}, toPosition:${2:UITextPosition* toPosition})'
  'positionFromPosition:inDirection:offset:':
    'prefix': 'positionFromPosition:inDirection:offset:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, inDirection:${2:UITextLayoutDirection direction}, offset:${3:NSInteger offset})'
  'positionFromPosition:offset:':
    'prefix': 'positionFromPosition:offset:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, offset:${2:NSInteger offset})'
  'positionWithinRange:atCharacterOffset:':
    'prefix': 'positionWithinRange:atCharacterOffset:'
    'body': 'positionWithinRange(${1:UITextRange* range}, atCharacterOffset:${2:NSInteger offset})'
  'positionWithinRange:farthestInDirection:':
    'prefix': 'positionWithinRange:farthestInDirection:'
    'body': 'positionWithinRange(${1:UITextRange* range}, farthestInDirection:${2:UITextLayoutDirection direction})'
  'removeDictationResultPlaceholder:willInsertResult:':
    'prefix': 'removeDictationResultPlaceholder:willInsertResult:'
    'body': 'removeDictationResultPlaceholder(${1:id placeholder}, willInsertResult:${2:BOOL willInsertResult})'
  'replaceRange:withText:':
    'prefix': 'replaceRange:withText:'
    'body': 'replaceRange(${1:UITextRange* range}, withText:${2:NSString* text})'
  'selectedTextRange':
    'prefix': 'selectedTextRange'
    'body': 'selectedTextRange()'
  'selectionAffinity':
    'prefix': 'selectionAffinity'
    'body': 'selectionAffinity()'
  'selectionRectsForRange:':
    'prefix': 'selectionRectsForRange:'
    'body': 'selectionRectsForRange(${1:UITextRange* range})'
  'setBaseWritingDirection:forRange:':
    'prefix': 'setBaseWritingDirection:forRange:'
    'body': 'setBaseWritingDirection(${1:UITextWritingDirection writingDirection}, forRange:${2:UITextRange* range})'
  'setInputDelegate:':
    'prefix': 'setInputDelegate:'
    'body': 'setInputDelegate(${1:id inputDelegate})'
  'setMarkedText:selectedRange:':
    'prefix': 'setMarkedText:selectedRange:'
    'body': 'setMarkedText(${1:NSString* markedText}, selectedRange:${2:NSRange selectedRange})'
  'setMarkedTextStyle:':
    'prefix': 'setMarkedTextStyle:'
    'body': 'setMarkedTextStyle(${1:NSDictionary* markedTextStyle})'
  'setSelectedTextRange:':
    'prefix': 'setSelectedTextRange:'
    'body': 'setSelectedTextRange(${1:UITextRange* selectedTextRange})'
  'setSelectionAffinity:':
    'prefix': 'setSelectionAffinity:'
    'body': 'setSelectionAffinity(${1:UITextStorageDirection selectionAffinity})'
  'shouldChangeTextInRange:replacementText:':
    'prefix': 'shouldChangeTextInRange:replacementText:'
    'body': 'shouldChangeTextInRange(${1:UITextRange* range}, replacementText:${2:NSString* text})'
  'textInRange:':
    'prefix': 'textInRange:'
    'body': 'textInRange(${1:UITextRange* range})'
  'textInputView':
    'prefix': 'textInputView'
    'body': 'textInputView()'
  'textRangeFromPosition:toPosition:':
    'prefix': 'textRangeFromPosition:toPosition:'
    'body': 'textRangeFromPosition(${1:UITextPosition* fromPosition}, toPosition:${2:UITextPosition* toPosition})'
  'textStylingAtPosition:inDirection:':
    'prefix': 'textStylingAtPosition:inDirection:'
    'body': 'textStylingAtPosition(${1:UITextPosition* position}, inDirection:${2:UITextStorageDirection direction})'
  'tokenizer':
    'prefix': 'tokenizer'
    'body': 'tokenizer()'
  'unmarkText':
    'prefix': 'unmarkText'
    'body': 'unmarkText()'
  'selectionDidChange:':
    'prefix': 'selectionDidChange:'
    'body': 'selectionDidChange(${1:id textInput})'
  'selectionWillChange:':
    'prefix': 'selectionWillChange:'
    'body': 'selectionWillChange(${1:id textInput})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:id textInput})'
  'textWillChange:':
    'prefix': 'textWillChange:'
    'body': 'textWillChange(${1:id textInput})'
  'isPosition:atBoundary:inDirection:':
    'prefix': 'isPosition:atBoundary:inDirection:'
    'body': 'isPosition(${1:UITextPosition* position}, atBoundary:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'isPosition:withinTextUnit:inDirection:':
    'prefix': 'isPosition:withinTextUnit:inDirection:'
    'body': 'isPosition(${1:UITextPosition* position}, withinTextUnit:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'positionFromPosition:toBoundary:inDirection:':
    'prefix': 'positionFromPosition:toBoundary:inDirection:'
    'body': 'positionFromPosition(${1:UITextPosition* position}, toBoundary:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'rangeEnclosingPosition:withGranularity:inDirection:':
    'prefix': 'rangeEnclosingPosition:withGranularity:inDirection:'
    'body': 'rangeEnclosingPosition(${1:UITextPosition* position}, withGranularity:${2:UITextGranularity granularity}, inDirection:${3:UITextDirection direction})'
  'autocapitalizationType':
    'prefix': 'autocapitalizationType'
    'body': 'autocapitalizationType()'
  'autocorrectionType':
    'prefix': 'autocorrectionType'
    'body': 'autocorrectionType()'
  'enablesReturnKeyAutomatically':
    'prefix': 'enablesReturnKeyAutomatically'
    'body': 'enablesReturnKeyAutomatically()'
  'isSecureTextEntry':
    'prefix': 'isSecureTextEntry'
    'body': 'isSecureTextEntry()'
  'keyboardAppearance':
    'prefix': 'keyboardAppearance'
    'body': 'KeyboardAppearance()'
  'keyboardType':
    'prefix': 'keyboardType'
    'body': 'KeyboardType()'
  'returnKeyType':
    'prefix': 'returnKeyType'
    'body': 'returnKeyType()'
  'setAutocapitalizationType:':
    'prefix': 'setAutocapitalizationType:'
    'body': 'setAutocapitalizationType(${1:UITextAutocapitalizationType autocapitalizationType})'
  'setAutocorrectionType:':
    'prefix': 'setAutocorrectionType:'
    'body': 'setAutocorrectionType(${1:UITextAutocorrectionType autocorrectionType})'
  'setEnablesReturnKeyAutomatically:':
    'prefix': 'setEnablesReturnKeyAutomatically:'
    'body': 'setEnablesReturnKeyAutomatically(${1:BOOL enablesReturnKeyAutomatically})'
  'setKeyboardAppearance:':
    'prefix': 'setKeyboardAppearance:'
    'body': 'setKeyboardAppearance(${1:UIKeyboardAppearance keyboardAppearance})'
  'setKeyboardType:':
    'prefix': 'setKeyboardType:'
    'body': 'setKeyboardType(${1:UIKeyboardType keyboardType})'
  'setReturnKeyType:':
    'prefix': 'setReturnKeyType:'
    'body': 'setReturnKeyType(${1:UIReturnKeyType returnKeyType})'
  'setSecureTextEntry:':
    'prefix': 'setSecureTextEntry:'
    'body': 'setSecureTextEntry(${1:BOOL secureTextEntry})'
  'setSpellCheckingType:':
    'prefix': 'setSpellCheckingType:'
    'body': 'setSpellCheckingType(${1:UITextSpellCheckingType spellCheckingType})'
  'spellCheckingType':
    'prefix': 'spellCheckingType'
    'body': 'spellCheckingType()'
  'textView:shouldChangeTextInRange:replacementText:':
    'prefix': 'textView:shouldChangeTextInRange:replacementText:'
    'body': 'textView(${1:UITextView* textView}, shouldChangeTextInRange:${2:NSRange range}, replacementText:${3:NSString* text})'
  'textView:shouldInteractWithTextAttachment:inRange:':
    'prefix': 'textView:shouldInteractWithTextAttachment:inRange:'
    'body': 'textView(${1:UITextView* textView}, shouldInteractWithTextAttachment:${2:NSTextAttachment* textAttachment}, inRange:${3:NSRange characterRange})'
  'textView:shouldInteractWithURL:inRange:':
    'prefix': 'textView:shouldInteractWithURL:inRange:'
    'body': 'textView(${1:UITextView* textView}, shouldInteractWithURL:${2:NSURL* URL}, inRange:${3:NSRange characterRange})'
  'textViewDidBeginEditing:':
    'prefix': 'textViewDidBeginEditing:'
    'body': 'textViewDidBeginEditing(${1:UITextView* textView})'
  'textViewDidChange:':
    'prefix': 'textViewDidChange:'
    'body': 'textViewDidChange(${1:UITextView* textView})'
  'textViewDidChangeSelection:':
    'prefix': 'textViewDidChangeSelection:'
    'body': 'textViewDidChangeSelection(${1:UITextView* textView})'
  'textViewDidEndEditing:':
    'prefix': 'textViewDidEndEditing:'
    'body': 'textViewDidEndEditing(${1:UITextView* textView})'
  'textViewShouldBeginEditing:':
    'prefix': 'textViewShouldBeginEditing:'
    'body': 'textViewShouldBeginEditing(${1:UITextView* textView})'
  'textViewShouldEndEditing:':
    'prefix': 'textViewShouldEndEditing:'
    'body': 'textViewShouldEndEditing(${1:UITextView* textView})'
  'videoEditorController:didFailWithError:':
    'prefix': 'videoEditorController:didFailWithError:'
    'body': 'videoEditorController(${1:UIVideoEditorController* editor}, didFailWithError:${2:NSError* error})'
  'videoEditorController:didSaveEditedVideoToPath:':
    'prefix': 'videoEditorController:didSaveEditedVideoToPath:'
    'body': 'videoEditorController(${1:UIVideoEditorController* editor}, didSaveEditedVideoToPath:${2:NSString* editedVideoPath})'
  'videoEditorControllerDidCancel:':
    'prefix': 'videoEditorControllerDidCancel:'
    'body': 'videoEditorControllerDidCancel(${1:UIVideoEditorController* editor})'
  'animateTransition:':
    'prefix': 'animateTransition:'
    'body': 'animateTransition(${1:id transitionContext})'
  'animationEnded:':
    'prefix': 'animationEnded:'
    'body': 'animationEnded(${1:BOOL transitionCompleted})'
  'transitionDuration:':
    'prefix': 'transitionDuration:'
    'body': 'transitionDuration(${1:id transitionContext})'
  'cancelInteractiveTransition':
    'prefix': 'cancelInteractiveTransition'
    'body': 'cancelInteractiveTransition()'
  'completeTransition:':
    'prefix': 'completeTransition:'
    'body': 'completeTransition(${1:BOOL didComplete})'
  'containerView':
    'prefix': 'containerView'
    'body': 'containerView()'
  'finalFrameForViewController:':
    'prefix': 'finalFrameForViewController:'
    'body': 'finalFrameForViewController(${1:UIViewController* vc})'
  'finishInteractiveTransition':
    'prefix': 'finishInteractiveTransition'
    'body': 'finishInteractiveTransition()'
  'initialFrameForViewController:':
    'prefix': 'initialFrameForViewController:'
    'body': 'initialFrameForViewController(${1:UIViewController* vc})'
  'isAnimated':
    'prefix': 'isAnimated'
    'body': 'isAnimated()'
  'isInteractive':
    'prefix': 'isInteractive'
    'body': 'isInteractive()'
  'presentationStyle':
    'prefix': 'presentationStyle'
    'body': 'presentationStyle()'
  'transitionWasCancelled':
    'prefix': 'transitionWasCancelled'
    'body': 'transitionWasCancelled()'
  'updateInteractiveTransition:':
    'prefix': 'updateInteractiveTransition:'
    'body': 'updateInteractiveTransition(${1:CGFloat percentComplete})'
  'viewControllerForKey:':
    'prefix': 'viewControllerForKey:'
    'body': 'viewControllerForKey(${1:NSString* key})'
  'completionCurve':
    'prefix': 'completionCurve'
    'body': 'completionCurve()'
  'completionSpeed':
    'prefix': 'completionSpeed'
    'body': 'completionSpeed()'
  'startInteractiveTransition:':
    'prefix': 'startInteractiveTransition:'
    'body': 'startInteractiveTransition(${1:id transitionContext})'
  'UIViewControllerRestoration.viewControllerWithRestorationIdentifierPath:coder:':
    'prefix': 'viewControllerWithRestorationIdentifierPath:coder:'
    'body': 'UIViewControllerRestoration.viewControllerWithRestorationIdentifierPath(${1:NSArray* identifierComponents}, coder:${2:NSCoder* coder})'
  'animateAlongsideTransition:completion:':
    'prefix': 'animateAlongsideTransition:completion:'
    'body': 'animateAlongsideTransition(${1:void (^)(id) animation}, completion:${2:void (^)(id) completion})'
  'animateAlongsideTransitionInView:animation:completion:':
    'prefix': 'animateAlongsideTransitionInView:animation:completion:'
    'body': 'animateAlongsideTransitionInView(${1:UIView* view}, animation:${2:void (^)(id) animation}, completion:${3:void (^)(id) completion})'
  'notifyWhenInteractionEndsUsingBlock:':
    'prefix': 'notifyWhenInteractionEndsUsingBlock:'
    'body': 'notifyWhenInteractionEndsUsingBlock(${1:void (^)(id) handler})'
  'completionCurve':
    'prefix': 'completionCurve'
    'body': 'completionCurve()'
  'completionVelocity':
    'prefix': 'completionVelocity'
    'body': 'completionVelocity()'
  'containerView':
    'prefix': 'containerView'
    'body': 'containerView()'
  'initiallyInteractive':
    'prefix': 'initiallyInteractive'
    'body': 'initiallyInteractive()'
  'isAnimated':
    'prefix': 'isAnimated'
    'body': 'isAnimated()'
  'isCancelled':
    'prefix': 'isCancelled'
    'body': 'isCancelled()'
  'isInteractive':
    'prefix': 'isInteractive'
    'body': 'isInteractive()'
  'percentComplete':
    'prefix': 'percentComplete'
    'body': 'percentComplete()'
  'presentationStyle':
    'prefix': 'presentationStyle'
    'body': 'presentationStyle()'
  'transitionDuration':
    'prefix': 'transitionDuration'
    'body': 'transitionDuration()'
  'viewControllerForKey:':
    'prefix': 'viewControllerForKey:'
    'body': 'viewControllerForKey(${1:NSString* key})'
  'animationControllerForDismissedController:':
    'prefix': 'animationControllerForDismissedController:'
    'body': 'animationControllerForDismissedController(${1:UIViewController* dismissed})'
  'animationControllerForPresentedController:presentingController:sourceController:':
    'prefix': 'animationControllerForPresentedController:presentingController:sourceController:'
    'body': 'animationControllerForPresentedController(${1:UIViewController* presented}, presentingController:${2:UIViewController* presenting}, sourceController:${3:UIViewController* source})'
  'interactionControllerForDismissal:':
    'prefix': 'interactionControllerForDismissal:'
    'body': 'interactionControllerForDismissal(${1:id animator})'
  'interactionControllerForPresentation:':
    'prefix': 'interactionControllerForPresentation:'
    'body': 'interactionControllerForPresentation(${1:id animator})'
  'webView:didFailLoadWithError:':
    'prefix': 'webView:didFailLoadWithError:'
    'body': 'webView(${1:UIWebView* webView}, didFailLoadWithError:${2:NSError* error})'
  'webView:shouldStartLoadWithRequest:navigationType:':
    'prefix': 'webView:shouldStartLoadWithRequest:navigationType:'
    'body': 'webView(${1:UIWebView* webView}, shouldStartLoadWithRequest:${2:NSURLRequest* request}, navigationType:${3:UIWebViewNavigationType navigationType})'
  'webViewDidFinishLoad:':
    'prefix': 'webViewDidFinishLoad:'
    'body': 'webViewDidFinishLoad(${1:UIWebView* webView})'
  'webViewDidStartLoad:':
    'prefix': 'webViewDidStartLoad:'
    'body': 'webViewDidStartLoad(${1:UIWebView* webView})'
