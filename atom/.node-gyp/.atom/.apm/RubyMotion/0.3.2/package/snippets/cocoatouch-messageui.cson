'.source.rubymotion':
  'MFMailComposeErrorDomain (NSString*)':
    'prefix': 'MFMailComposeErrorDomain'
    'body': 'MFMailComposeErrorDomain'
  'MFMessageComposeViewControllerAttachmentAlternateFilename (NSString*)':
    'prefix': 'MFMessageComposeViewControllerAttachmentAlternateFilename'
    'body': 'MFMessageComposeViewControllerAttachmentAlternateFilename'
  'MFMessageComposeViewControllerAttachmentURL (NSString*)':
    'prefix': 'MFMessageComposeViewControllerAttachmentURL'
    'body': 'MFMessageComposeViewControllerAttachmentURL'
  'MFMessageComposeViewControllerTextMessageAvailabilityDidChangeNotification (NSString*)':
    'prefix': 'MFMessageComposeViewControllerTextMessageAvailabilityDidChangeNotification'
    'body': 'MFMessageComposeViewControllerTextMessageAvailabilityDidChangeNotification'
  'MFMessageComposeViewControllerTextMessageAvailabilityKey (NSString*)':
    'prefix': 'MFMessageComposeViewControllerTextMessageAvailabilityKey'
    'body': 'MFMessageComposeViewControllerTextMessageAvailabilityKey'
  'MFMailComposeErrorCodeSaveFailed (0)':
    'prefix': 'MFMailComposeErrorCodeSaveFailed'
    'body': 'MFMailComposeErrorCodeSaveFailed'
  'MFMailComposeErrorCodeSendFailed (1)':
    'prefix': 'MFMailComposeErrorCodeSendFailed'
    'body': 'MFMailComposeErrorCodeSendFailed'
  'MFMailComposeResultCancelled (0)':
    'prefix': 'MFMailComposeResultCancelled'
    'body': 'MFMailComposeResultCancelled'
  'MFMailComposeResultFailed (3)':
    'prefix': 'MFMailComposeResultFailed'
    'body': 'MFMailComposeResultFailed'
  'MFMailComposeResultSaved (1)':
    'prefix': 'MFMailComposeResultSaved'
    'body': 'MFMailComposeResultSaved'
  'MFMailComposeResultSent (2)':
    'prefix': 'MFMailComposeResultSent'
    'body': 'MFMailComposeResultSent'
  'MessageComposeResultCancelled (0)':
    'prefix': 'MessageComposeResultCancelled'
    'body': 'MessageComposeResultCancelled'
  'MessageComposeResultFailed (2)':
    'prefix': 'MessageComposeResultFailed'
    'body': 'MessageComposeResultFailed'
  'MessageComposeResultSent (1)':
    'prefix': 'MessageComposeResultSent'
    'body': 'MessageComposeResultSent'
  'addAttachmentData:mimeType:fileName:':
    'prefix': 'addAttachmentData:mimeType:fileName:'
    'body': 'addAttachmentData(${1:NSData* attachment}, mimeType:${2:NSString* mimeType}, fileName:${3:NSString* filename})'
  'MFMailComposeViewController.canSendMail':
    'prefix': 'canSendMail'
    'body': 'MFMailComposeViewController.canSendMail()'
  'mailComposeDelegate':
    'prefix': 'mailComposeDelegate'
    'body': 'mailComposeDelegate()'
  'setBccRecipients:':
    'prefix': 'setBccRecipients:'
    'body': 'setBccRecipients(${1:NSArray* bccRecipients})'
  'setCcRecipients:':
    'prefix': 'setCcRecipients:'
    'body': 'setCcRecipients(${1:NSArray* ccRecipients})'
  'setMailComposeDelegate:':
    'prefix': 'setMailComposeDelegate:'
    'body': 'setMailComposeDelegate(${1:id mailComposeDelegate})'
  'setMessageBody:isHTML:':
    'prefix': 'setMessageBody:isHTML:'
    'body': 'setMessageBody(${1:NSString* body}, isHTML:${2:BOOL isHTML})'
  'setSubject:':
    'prefix': 'setSubject:'
    'body': 'setSubject(${1:NSString* subject})'
  'setToRecipients:':
    'prefix': 'setToRecipients:'
    'body': 'setToRecipients(${1:NSArray* toRecipients})'
  'addAttachmentData:typeIdentifier:filename:':
    'prefix': 'addAttachmentData:typeIdentifier:filename:'
    'body': 'addAttachmentData(${1:NSData* attachmentData}, typeIdentifier:${2:NSString* uti}, filename:${3:NSString* filename})'
  'addAttachmentURL:withAlternateFilename:':
    'prefix': 'addAttachmentURL:withAlternateFilename:'
    'body': 'addAttachmentURL(${1:NSURL* attachmentURL}, withAlternateFilename:${2:NSString* alternateFilename})'
  'attachments':
    'prefix': 'attachments'
    'body': 'attachments()'
  'body':
    'prefix': 'body'
    'body': 'body()'
  'MFMessageComposeViewController.canSendAttachments':
    'prefix': 'canSendAttachments'
    'body': 'MFMessageComposeViewController.canSendAttachments()'
  'MFMessageComposeViewController.canSendSubject':
    'prefix': 'canSendSubject'
    'body': 'MFMessageComposeViewController.canSendSubject()'
  'MFMessageComposeViewController.canSendText':
    'prefix': 'canSendText'
    'body': 'MFMessageComposeViewController.canSendText()'
  'disableUserAttachments':
    'prefix': 'disableUserAttachments'
    'body': 'disableUserAttachments()'
  'MFMessageComposeViewController.isSupportedAttachmentUTI:':
    'prefix': 'isSupportedAttachmentUTI:'
    'body': 'MFMessageComposeViewController.isSupportedAttachmentUTI(${1:NSString* uti})'
  'messageComposeDelegate':
    'prefix': 'messageComposeDelegate'
    'body': 'messageComposeDelegate()'
  'recipients':
    'prefix': 'recipients'
    'body': 'recipients()'
  'setBody:':
    'prefix': 'setBody:'
    'body': 'setBody(${1:NSString* body})'
  'setMessageComposeDelegate:':
    'prefix': 'setMessageComposeDelegate:'
    'body': 'setMessageComposeDelegate(${1:id messageComposeDelegate})'
  'setRecipients:':
    'prefix': 'setRecipients:'
    'body': 'setRecipients(${1:NSArray* recipients})'
  'setSubject:':
    'prefix': 'setSubject:'
    'body': 'setSubject(${1:NSString* subject})'
  'subject':
    'prefix': 'subject'
    'body': 'subject()'
  'mailComposeController:didFinishWithResult:error:':
    'prefix': 'mailComposeController:didFinishWithResult:error:'
    'body': 'mailComposeController(${1:MFMailComposeViewController* controller}, didFinishWithResult:${2:MFMailComposeResult result}, error:${3:NSError* error})'
  'messageComposeViewController:didFinishWithResult:':
    'prefix': 'messageComposeViewController:didFinishWithResult:'
    'body': 'messageComposeViewController(${1:MFMessageComposeViewController* controller}, didFinishWithResult:${2:MessageComposeResult result})'
  'mailComposeController:didFinishWithResult:error:':
    'prefix': 'mailComposeController:didFinishWithResult:error:'
    'body': 'mailComposeController(${1:MFMailComposeViewController* controller}, didFinishWithResult:${2:MFMailComposeResult result}, error:${3:NSError* error})'
  'messageComposeViewController:didFinishWithResult:':
    'prefix': 'messageComposeViewController:didFinishWithResult:'
    'body': 'messageComposeViewController(${1:MFMessageComposeViewController* controller}, didFinishWithResult:${2:MessageComposeResult result})'
