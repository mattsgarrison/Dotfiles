'.source.rubymotion':
  'MCErrorDomain (NSString*)':
    'prefix': 'MCErrorDomain'
    'body': 'MCErrorDomain'
  'kMCSessionMaximumNumberOfPeers (NSUInteger)':
    'prefix': 'kMCSessionMaximumNumberOfPeers'
    'body': 'KMCSessionMaximumNumberOfPeers'
  'kMCSessionMinimumNumberOfPeers (NSUInteger)':
    'prefix': 'kMCSessionMinimumNumberOfPeers'
    'body': 'KMCSessionMinimumNumberOfPeers'
  'MCEncryptionNone (2)':
    'prefix': 'MCEncryptionNone'
    'body': 'MCEncryptionNone'
  'MCEncryptionOptional (0)':
    'prefix': 'MCEncryptionOptional'
    'body': 'MCEncryptionOptional'
  'MCEncryptionRequired (1)':
    'prefix': 'MCEncryptionRequired'
    'body': 'MCEncryptionRequired'
  'MCErrorCancelled (5)':
    'prefix': 'MCErrorCancelled'
    'body': 'MCErrorCancelled'
  'MCErrorInvalidParameter (2)':
    'prefix': 'MCErrorInvalidParameter'
    'body': 'MCErrorInvalidParameter'
  'MCErrorNotConnected (1)':
    'prefix': 'MCErrorNotConnected'
    'body': 'MCErrorNotConnected'
  'MCErrorTimedOut (4)':
    'prefix': 'MCErrorTimedOut'
    'body': 'MCErrorTimedOut'
  'MCErrorUnavailable (6)':
    'prefix': 'MCErrorUnavailable'
    'body': 'MCErrorUnavailable'
  'MCErrorUnknown (0)':
    'prefix': 'MCErrorUnknown'
    'body': 'MCErrorUnknown'
  'MCErrorUnsupported (3)':
    'prefix': 'MCErrorUnsupported'
    'body': 'MCErrorUnsupported'
  'MCSessionSendDataReliable (0)':
    'prefix': 'MCSessionSendDataReliable'
    'body': 'MCSessionSendDataReliable'
  'MCSessionSendDataUnreliable (1)':
    'prefix': 'MCSessionSendDataUnreliable'
    'body': 'MCSessionSendDataUnreliable'
  'MCSessionStateConnected (2)':
    'prefix': 'MCSessionStateConnected'
    'body': 'MCSessionStateConnected'
  'MCSessionStateConnecting (1)':
    'prefix': 'MCSessionStateConnecting'
    'body': 'MCSessionStateConnecting'
  'MCSessionStateNotConnected (0)':
    'prefix': 'MCSessionStateNotConnected'
    'body': 'MCSessionStateNotConnected'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'discoveryInfo':
    'prefix': 'discoveryInfo'
    'body': 'discoveryInfo()'
  'initWithServiceType:discoveryInfo:session:':
    'prefix': 'initWithServiceType:discoveryInfo:session:'
    'body': 'initWithServiceType(${1:NSString* serviceType}, discoveryInfo:${2:NSDictionary* info}, session:${3:MCSession* session})'
  'serviceType':
    'prefix': 'serviceType'
    'body': 'serviceType()'
  'session':
    'prefix': 'session'
    'body': 'session()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'start':
    'prefix': 'start'
    'body': 'start()'
  'stop':
    'prefix': 'stop'
    'body': 'stop()'
  'browser':
    'prefix': 'browser'
    'body': 'browser()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithBrowser:session:':
    'prefix': 'initWithBrowser:session:'
    'body': 'initWithBrowser(${1:MCNearbyServiceBrowser* browser}, session:${2:MCSession* session})'
  'initWithServiceType:session:':
    'prefix': 'initWithServiceType:session:'
    'body': 'initWithServiceType(${1:NSString* serviceType}, session:${2:MCSession* session})'
  'maximumNumberOfPeers':
    'prefix': 'maximumNumberOfPeers'
    'body': 'maximumNumberOfPeers()'
  'minimumNumberOfPeers':
    'prefix': 'minimumNumberOfPeers'
    'body': 'minimumNumberOfPeers()'
  'session':
    'prefix': 'session'
    'body': 'session()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setMaximumNumberOfPeers:':
    'prefix': 'setMaximumNumberOfPeers:'
    'body': 'setMaximumNumberOfPeers(${1:NSUInteger maximumNumberOfPeers})'
  'setMinimumNumberOfPeers:':
    'prefix': 'setMinimumNumberOfPeers:'
    'body': 'setMinimumNumberOfPeers(${1:NSUInteger minimumNumberOfPeers})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'discoveryInfo':
    'prefix': 'discoveryInfo'
    'body': 'discoveryInfo()'
  'initWithPeer:discoveryInfo:serviceType:':
    'prefix': 'initWithPeer:discoveryInfo:serviceType:'
    'body': 'initWithPeer(${1:MCPeerID* myPeerID}, discoveryInfo:${2:NSDictionary* info}, serviceType:${3:NSString* serviceType})'
  'myPeerID':
    'prefix': 'myPeerID'
    'body': 'myPeerID()'
  'serviceType':
    'prefix': 'serviceType'
    'body': 'serviceType()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'startAdvertisingPeer':
    'prefix': 'startAdvertisingPeer'
    'body': 'startAdvertisingPeer()'
  'stopAdvertisingPeer':
    'prefix': 'stopAdvertisingPeer'
    'body': 'stopAdvertisingPeer()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithPeer:serviceType:':
    'prefix': 'initWithPeer:serviceType:'
    'body': 'initWithPeer(${1:MCPeerID* myPeerID}, serviceType:${2:NSString* serviceType})'
  'invitePeer:toSession:withContext:timeout:':
    'prefix': 'invitePeer:toSession:withContext:timeout:'
    'body': 'invitePeer(${1:MCPeerID* peerID}, toSession:${2:MCSession* session}, withContext:${3:NSData* context}, timeout:${4:NSTimeInterval timeout})'
  'myPeerID':
    'prefix': 'myPeerID'
    'body': 'myPeerID()'
  'serviceType':
    'prefix': 'serviceType'
    'body': 'serviceType()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'startBrowsingForPeers':
    'prefix': 'startBrowsingForPeers'
    'body': 'startBrowsingForPeers()'
  'stopBrowsingForPeers':
    'prefix': 'stopBrowsingForPeers'
    'body': 'stopBrowsingForPeers()'
  'displayName':
    'prefix': 'displayName'
    'body': 'displayName()'
  'initWithDisplayName:':
    'prefix': 'initWithDisplayName:'
    'body': 'initWithDisplayName(${1:NSString* myDisplayName})'
  'cancelConnectPeer:':
    'prefix': 'cancelConnectPeer:'
    'body': 'cancelConnectPeer(${1:MCPeerID* peerID})'
  'connectPeer:withNearbyConnectionData:':
    'prefix': 'connectPeer:withNearbyConnectionData:'
    'body': 'connectPeer(${1:MCPeerID* peerID}, withNearbyConnectionData:${2:NSData* data})'
  'connectedPeers':
    'prefix': 'connectedPeers'
    'body': 'connectedPeers()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'disconnect':
    'prefix': 'disconnect'
    'body': 'disconnect()'
  'encryptionPreference':
    'prefix': 'encryptionPreference'
    'body': 'encryptionPreference()'
  'initWithPeer:':
    'prefix': 'initWithPeer:'
    'body': 'initWithPeer(${1:MCPeerID* myPeerID})'
  'initWithPeer:securityIdentity:encryptionPreference:':
    'prefix': 'initWithPeer:securityIdentity:encryptionPreference:'
    'body': 'initWithPeer(${1:MCPeerID* myPeerID}, securityIdentity:${2:NSArray* identity}, encryptionPreference:${3:MCEncryptionPreference encryptionPreference})'
  'myPeerID':
    'prefix': 'myPeerID'
    'body': 'myPeerID()'
  'nearbyConnectionDataForPeer:withCompletionHandler:':
    'prefix': 'nearbyConnectionDataForPeer:withCompletionHandler:'
    'body': 'nearbyConnectionDataForPeer(${1:MCPeerID* peerID}, withCompletionHandler:${2:void (^)(NSData *, NSError *) completionHandler})'
  'securityIdentity':
    'prefix': 'securityIdentity'
    'body': 'securityIdentity()'
  'sendData:toPeers:withMode:error:':
    'prefix': 'sendData:toPeers:withMode:error:'
    'body': 'sendData(${1:NSData* data}, toPeers:${2:NSArray* peerIDs}, withMode:${3:MCSessionSendDataMode mode}, error:${4:NSError** error})'
  'sendResourceAtURL:withName:toPeer:withCompletionHandler:':
    'prefix': 'sendResourceAtURL:withName:toPeer:withCompletionHandler:'
    'body': 'sendResourceAtURL(${1:NSURL* resourceURL}, withName:${2:NSString* resourceName}, toPeer:${3:MCPeerID* peerID}, withCompletionHandler:${4:void (^)(NSError *) completionHandler})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'startStreamWithName:toPeer:error:':
    'prefix': 'startStreamWithName:toPeer:error:'
    'body': 'startStreamWithName(${1:NSString* streamName}, toPeer:${2:MCPeerID* peerID}, error:${3:NSError** error})'
  'advertiser:didNotStartAdvertisingPeer:':
    'prefix': 'advertiser:didNotStartAdvertisingPeer:'
    'body': 'advertiser(${1:MCNearbyServiceAdvertiser* advertiser}, didNotStartAdvertisingPeer:${2:NSError* error})'
  'advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:':
    'prefix': 'advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:'
    'body': 'advertiser(${1:MCNearbyServiceAdvertiser* advertiser}, didReceiveInvitationFromPeer:${2:MCPeerID* peerID}, withContext:${3:NSData* context}, invitationHandler:${4:void (^)(BOOL, MCSession *) invitationHandler})'
  'advertiserAssistantDidDismissInvitation:':
    'prefix': 'advertiserAssistantDidDismissInvitation:'
    'body': 'advertiserAssistantDidDismissInvitation(${1:MCAdvertiserAssistant* advertiserAssistant})'
  'advertiserAssitantWillPresentInvitation:':
    'prefix': 'advertiserAssitantWillPresentInvitation:'
    'body': 'advertiserAssitantWillPresentInvitation(${1:MCAdvertiserAssistant* advertiserAssistant})'
  'browser:didNotStartBrowsingForPeers:':
    'prefix': 'browser:didNotStartBrowsingForPeers:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, didNotStartBrowsingForPeers:${2:NSError* error})'
  'browser:foundPeer:withDiscoveryInfo:':
    'prefix': 'browser:foundPeer:withDiscoveryInfo:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, foundPeer:${2:MCPeerID* peerID}, withDiscoveryInfo:${3:NSDictionary* info})'
  'browser:lostPeer:':
    'prefix': 'browser:lostPeer:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, lostPeer:${2:MCPeerID* peerID})'
  'browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:':
    'prefix': 'browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:'
    'body': 'browserViewController(${1:MCBrowserViewController* browserViewController}, shouldPresentNearbyPeer:${2:MCPeerID* peerID}, withDiscoveryInfo:${3:NSDictionary* info})'
  'browserViewControllerDidFinish:':
    'prefix': 'browserViewControllerDidFinish:'
    'body': 'browserViewControllerDidFinish(${1:MCBrowserViewController* browserViewController})'
  'browserViewControllerWasCancelled:':
    'prefix': 'browserViewControllerWasCancelled:'
    'body': 'browserViewControllerWasCancelled(${1:MCBrowserViewController* browserViewController})'
  'session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:':
    'prefix': 'session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:'
    'body': 'session(${1:MCSession* session}, didFinishReceivingResourceWithName:${2:NSString* resourceName}, fromPeer:${3:MCPeerID* peerID}, atURL:${4:NSURL* localURL}, withError:${5:NSError* error})'
  'session:didReceiveCertificate:fromPeer:certificateHandler:':
    'prefix': 'session:didReceiveCertificate:fromPeer:certificateHandler:'
    'body': 'session(${1:MCSession* session}, didReceiveCertificate:${2:NSArray* certificate}, fromPeer:${3:MCPeerID* peerID}, certificateHandler:${4:void (^)(BOOL) certificateHandler})'
  'session:didReceiveData:fromPeer:':
    'prefix': 'session:didReceiveData:fromPeer:'
    'body': 'session(${1:MCSession* session}, didReceiveData:${2:NSData* data}, fromPeer:${3:MCPeerID* peerID})'
  'session:didReceiveStream:withName:fromPeer:':
    'prefix': 'session:didReceiveStream:withName:fromPeer:'
    'body': 'session(${1:MCSession* session}, didReceiveStream:${2:NSInputStream* stream}, withName:${3:NSString* streamName}, fromPeer:${4:MCPeerID* peerID})'
  'session:didStartReceivingResourceWithName:fromPeer:withProgress:':
    'prefix': 'session:didStartReceivingResourceWithName:fromPeer:withProgress:'
    'body': 'session(${1:MCSession* session}, didStartReceivingResourceWithName:${2:NSString* resourceName}, fromPeer:${3:MCPeerID* peerID}, withProgress:${4:NSProgress* progress})'
  'session:peer:didChangeState:':
    'prefix': 'session:peer:didChangeState:'
    'body': 'session(${1:MCSession* session}, peer:${2:MCPeerID* peerID}, didChangeState:${3:MCSessionState state})'
  'advertiserAssistantDidDismissInvitation:':
    'prefix': 'advertiserAssistantDidDismissInvitation:'
    'body': 'advertiserAssistantDidDismissInvitation(${1:MCAdvertiserAssistant* advertiserAssistant})'
  'advertiserAssitantWillPresentInvitation:':
    'prefix': 'advertiserAssitantWillPresentInvitation:'
    'body': 'advertiserAssitantWillPresentInvitation(${1:MCAdvertiserAssistant* advertiserAssistant})'
  'browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:':
    'prefix': 'browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:'
    'body': 'browserViewController(${1:MCBrowserViewController* browserViewController}, shouldPresentNearbyPeer:${2:MCPeerID* peerID}, withDiscoveryInfo:${3:NSDictionary* info})'
  'browserViewControllerDidFinish:':
    'prefix': 'browserViewControllerDidFinish:'
    'body': 'browserViewControllerDidFinish(${1:MCBrowserViewController* browserViewController})'
  'browserViewControllerWasCancelled:':
    'prefix': 'browserViewControllerWasCancelled:'
    'body': 'browserViewControllerWasCancelled(${1:MCBrowserViewController* browserViewController})'
  'advertiser:didNotStartAdvertisingPeer:':
    'prefix': 'advertiser:didNotStartAdvertisingPeer:'
    'body': 'advertiser(${1:MCNearbyServiceAdvertiser* advertiser}, didNotStartAdvertisingPeer:${2:NSError* error})'
  'advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:':
    'prefix': 'advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:'
    'body': 'advertiser(${1:MCNearbyServiceAdvertiser* advertiser}, didReceiveInvitationFromPeer:${2:MCPeerID* peerID}, withContext:${3:NSData* context}, invitationHandler:${4:void (^)(BOOL, MCSession *) invitationHandler})'
  'browser:didNotStartBrowsingForPeers:':
    'prefix': 'browser:didNotStartBrowsingForPeers:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, didNotStartBrowsingForPeers:${2:NSError* error})'
  'browser:foundPeer:withDiscoveryInfo:':
    'prefix': 'browser:foundPeer:withDiscoveryInfo:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, foundPeer:${2:MCPeerID* peerID}, withDiscoveryInfo:${3:NSDictionary* info})'
  'browser:lostPeer:':
    'prefix': 'browser:lostPeer:'
    'body': 'browser(${1:MCNearbyServiceBrowser* browser}, lostPeer:${2:MCPeerID* peerID})'
  'session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:':
    'prefix': 'session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:'
    'body': 'session(${1:MCSession* session}, didFinishReceivingResourceWithName:${2:NSString* resourceName}, fromPeer:${3:MCPeerID* peerID}, atURL:${4:NSURL* localURL}, withError:${5:NSError* error})'
  'session:didReceiveCertificate:fromPeer:certificateHandler:':
    'prefix': 'session:didReceiveCertificate:fromPeer:certificateHandler:'
    'body': 'session(${1:MCSession* session}, didReceiveCertificate:${2:NSArray* certificate}, fromPeer:${3:MCPeerID* peerID}, certificateHandler:${4:void (^)(BOOL) certificateHandler})'
  'session:didReceiveData:fromPeer:':
    'prefix': 'session:didReceiveData:fromPeer:'
    'body': 'session(${1:MCSession* session}, didReceiveData:${2:NSData* data}, fromPeer:${3:MCPeerID* peerID})'
  'session:didReceiveStream:withName:fromPeer:':
    'prefix': 'session:didReceiveStream:withName:fromPeer:'
    'body': 'session(${1:MCSession* session}, didReceiveStream:${2:NSInputStream* stream}, withName:${3:NSString* streamName}, fromPeer:${4:MCPeerID* peerID})'
  'session:didStartReceivingResourceWithName:fromPeer:withProgress:':
    'prefix': 'session:didStartReceivingResourceWithName:fromPeer:withProgress:'
    'body': 'session(${1:MCSession* session}, didStartReceivingResourceWithName:${2:NSString* resourceName}, fromPeer:${3:MCPeerID* peerID}, withProgress:${4:NSProgress* progress})'
  'session:peer:didChangeState:':
    'prefix': 'session:peer:didChangeState:'
    'body': 'session(${1:MCSession* session}, peer:${2:MCPeerID* peerID}, didChangeState:${3:MCSessionState state})'
