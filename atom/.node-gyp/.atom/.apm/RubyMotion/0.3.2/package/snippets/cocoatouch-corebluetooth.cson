'.source.rubymotion':
  'CBATTErrorDomain (NSString*)':
    'prefix': 'CBATTErrorDomain'
    'body': 'CBATTErrorDomain'
  'CBAdvertisementDataIsConnectable (NSString*)':
    'prefix': 'CBAdvertisementDataIsConnectable'
    'body': 'CBAdvertisementDataIsConnectable'
  'CBAdvertisementDataLocalNameKey (NSString*)':
    'prefix': 'CBAdvertisementDataLocalNameKey'
    'body': 'CBAdvertisementDataLocalNameKey'
  'CBAdvertisementDataManufacturerDataKey (NSString*)':
    'prefix': 'CBAdvertisementDataManufacturerDataKey'
    'body': 'CBAdvertisementDataManufacturerDataKey'
  'CBAdvertisementDataOverflowServiceUUIDsKey (NSString*)':
    'prefix': 'CBAdvertisementDataOverflowServiceUUIDsKey'
    'body': 'CBAdvertisementDataOverflowServiceUUIDsKey'
  'CBAdvertisementDataServiceDataKey (NSString*)':
    'prefix': 'CBAdvertisementDataServiceDataKey'
    'body': 'CBAdvertisementDataServiceDataKey'
  'CBAdvertisementDataServiceUUIDsKey (NSString*)':
    'prefix': 'CBAdvertisementDataServiceUUIDsKey'
    'body': 'CBAdvertisementDataServiceUUIDsKey'
  'CBAdvertisementDataSolicitedServiceUUIDsKey (NSString*)':
    'prefix': 'CBAdvertisementDataSolicitedServiceUUIDsKey'
    'body': 'CBAdvertisementDataSolicitedServiceUUIDsKey'
  'CBAdvertisementDataTxPowerLevelKey (NSString*)':
    'prefix': 'CBAdvertisementDataTxPowerLevelKey'
    'body': 'CBAdvertisementDataTxPowerLevelKey'
  'CBCentralManagerOptionRestoreIdentifierKey (NSString*)':
    'prefix': 'CBCentralManagerOptionRestoreIdentifierKey'
    'body': 'CBCentralManagerOptionRestoreIdentifierKey'
  'CBCentralManagerOptionShowPowerAlertKey (NSString*)':
    'prefix': 'CBCentralManagerOptionShowPowerAlertKey'
    'body': 'CBCentralManagerOptionShowPowerAlertKey'
  'CBCentralManagerRestoredStatePeripheralsKey (NSString*)':
    'prefix': 'CBCentralManagerRestoredStatePeripheralsKey'
    'body': 'CBCentralManagerRestoredStatePeripheralsKey'
  'CBCentralManagerRestoredStateScanOptionsKey (NSString*)':
    'prefix': 'CBCentralManagerRestoredStateScanOptionsKey'
    'body': 'CBCentralManagerRestoredStateScanOptionsKey'
  'CBCentralManagerRestoredStateScanServicesKey (NSString*)':
    'prefix': 'CBCentralManagerRestoredStateScanServicesKey'
    'body': 'CBCentralManagerRestoredStateScanServicesKey'
  'CBCentralManagerScanOptionAllowDuplicatesKey (NSString*)':
    'prefix': 'CBCentralManagerScanOptionAllowDuplicatesKey'
    'body': 'CBCentralManagerScanOptionAllowDuplicatesKey'
  'CBCentralManagerScanOptionSolicitedServiceUUIDsKey (NSString*)':
    'prefix': 'CBCentralManagerScanOptionSolicitedServiceUUIDsKey'
    'body': 'CBCentralManagerScanOptionSolicitedServiceUUIDsKey'
  'CBConnectPeripheralOptionNotifyOnConnectionKey (NSString*)':
    'prefix': 'CBConnectPeripheralOptionNotifyOnConnectionKey'
    'body': 'CBConnectPeripheralOptionNotifyOnConnectionKey'
  'CBConnectPeripheralOptionNotifyOnDisconnectionKey (NSString*)':
    'prefix': 'CBConnectPeripheralOptionNotifyOnDisconnectionKey'
    'body': 'CBConnectPeripheralOptionNotifyOnDisconnectionKey'
  'CBConnectPeripheralOptionNotifyOnNotificationKey (NSString*)':
    'prefix': 'CBConnectPeripheralOptionNotifyOnNotificationKey'
    'body': 'CBConnectPeripheralOptionNotifyOnNotificationKey'
  'CBErrorDomain (NSString*)':
    'prefix': 'CBErrorDomain'
    'body': 'CBErrorDomain'
  'CBPeripheralManagerOptionRestoreIdentifierKey (NSString*)':
    'prefix': 'CBPeripheralManagerOptionRestoreIdentifierKey'
    'body': 'CBPeripheralManagerOptionRestoreIdentifierKey'
  'CBPeripheralManagerOptionShowPowerAlertKey (NSString*)':
    'prefix': 'CBPeripheralManagerOptionShowPowerAlertKey'
    'body': 'CBPeripheralManagerOptionShowPowerAlertKey'
  'CBPeripheralManagerRestoredStateAdvertisementDataKey (NSString*)':
    'prefix': 'CBPeripheralManagerRestoredStateAdvertisementDataKey'
    'body': 'CBPeripheralManagerRestoredStateAdvertisementDataKey'
  'CBPeripheralManagerRestoredStateServicesKey (NSString*)':
    'prefix': 'CBPeripheralManagerRestoredStateServicesKey'
    'body': 'CBPeripheralManagerRestoredStateServicesKey'
  'CBUUIDAppearanceString (NSString*)':
    'prefix': 'CBUUIDAppearanceString'
    'body': 'CBUUIDAppearanceString'
  'CBUUIDCharacteristicAggregateFormatString (NSString*)':
    'prefix': 'CBUUIDCharacteristicAggregateFormatString'
    'body': 'CBUUIDCharacteristicAggregateFormatString'
  'CBUUIDCharacteristicExtendedPropertiesString (NSString*)':
    'prefix': 'CBUUIDCharacteristicExtendedPropertiesString'
    'body': 'CBUUIDCharacteristicExtendedPropertiesString'
  'CBUUIDCharacteristicFormatString (NSString*)':
    'prefix': 'CBUUIDCharacteristicFormatString'
    'body': 'CBUUIDCharacteristicFormatString'
  'CBUUIDCharacteristicUserDescriptionString (NSString*)':
    'prefix': 'CBUUIDCharacteristicUserDescriptionString'
    'body': 'CBUUIDCharacteristicUserDescriptionString'
  'CBUUIDClientCharacteristicConfigurationString (NSString*)':
    'prefix': 'CBUUIDClientCharacteristicConfigurationString'
    'body': 'CBUUIDClientCharacteristicConfigurationString'
  'CBUUIDDeviceNameString (NSString*)':
    'prefix': 'CBUUIDDeviceNameString'
    'body': 'CBUUIDDeviceNameString'
  'CBUUIDGenericAccessProfileString (NSString*)':
    'prefix': 'CBUUIDGenericAccessProfileString'
    'body': 'CBUUIDGenericAccessProfileString'
  'CBUUIDGenericAttributeProfileString (NSString*)':
    'prefix': 'CBUUIDGenericAttributeProfileString'
    'body': 'CBUUIDGenericAttributeProfileString'
  'CBUUIDPeripheralPreferredConnectionParametersString (NSString*)':
    'prefix': 'CBUUIDPeripheralPreferredConnectionParametersString'
    'body': 'CBUUIDPeripheralPreferredConnectionParametersString'
  'CBUUIDPeripheralPrivacyFlagString (NSString*)':
    'prefix': 'CBUUIDPeripheralPrivacyFlagString'
    'body': 'CBUUIDPeripheralPrivacyFlagString'
  'CBUUIDReconnectionAddressString (NSString*)':
    'prefix': 'CBUUIDReconnectionAddressString'
    'body': 'CBUUIDReconnectionAddressString'
  'CBUUIDServerCharacteristicConfigurationString (NSString*)':
    'prefix': 'CBUUIDServerCharacteristicConfigurationString'
    'body': 'CBUUIDServerCharacteristicConfigurationString'
  'CBUUIDServiceChangedString (NSString*)':
    'prefix': 'CBUUIDServiceChangedString'
    'body': 'CBUUIDServiceChangedString'
  'CBATTErrorAttributeNotFound (10)':
    'prefix': 'CBATTErrorAttributeNotFound'
    'body': 'CBATTErrorAttributeNotFound'
  'CBATTErrorAttributeNotLong (11)':
    'prefix': 'CBATTErrorAttributeNotLong'
    'body': 'CBATTErrorAttributeNotLong'
  'CBATTErrorInsufficientAuthentication (5)':
    'prefix': 'CBATTErrorInsufficientAuthentication'
    'body': 'CBATTErrorInsufficientAuthentication'
  'CBATTErrorInsufficientAuthorization (8)':
    'prefix': 'CBATTErrorInsufficientAuthorization'
    'body': 'CBATTErrorInsufficientAuthorization'
  'CBATTErrorInsufficientEncryption (15)':
    'prefix': 'CBATTErrorInsufficientEncryption'
    'body': 'CBATTErrorInsufficientEncryption'
  'CBATTErrorInsufficientEncryptionKeySize (12)':
    'prefix': 'CBATTErrorInsufficientEncryptionKeySize'
    'body': 'CBATTErrorInsufficientEncryptionKeySize'
  'CBATTErrorInsufficientResources (17)':
    'prefix': 'CBATTErrorInsufficientResources'
    'body': 'CBATTErrorInsufficientResources'
  'CBATTErrorInvalidAttributeValueLength (13)':
    'prefix': 'CBATTErrorInvalidAttributeValueLength'
    'body': 'CBATTErrorInvalidAttributeValueLength'
  'CBATTErrorInvalidHandle (1)':
    'prefix': 'CBATTErrorInvalidHandle'
    'body': 'CBATTErrorInvalidHandle'
  'CBATTErrorInvalidOffset (7)':
    'prefix': 'CBATTErrorInvalidOffset'
    'body': 'CBATTErrorInvalidOffset'
  'CBATTErrorInvalidPdu (4)':
    'prefix': 'CBATTErrorInvalidPdu'
    'body': 'CBATTErrorInvalidPdu'
  'CBATTErrorPrepareQueueFull (9)':
    'prefix': 'CBATTErrorPrepareQueueFull'
    'body': 'CBATTErrorPrepareQueueFull'
  'CBATTErrorReadNotPermitted (2)':
    'prefix': 'CBATTErrorReadNotPermitted'
    'body': 'CBATTErrorReadNotPermitted'
  'CBATTErrorRequestNotSupported (6)':
    'prefix': 'CBATTErrorRequestNotSupported'
    'body': 'CBATTErrorRequestNotSupported'
  'CBATTErrorSuccess (0)':
    'prefix': 'CBATTErrorSuccess'
    'body': 'CBATTErrorSuccess'
  'CBATTErrorUnlikelyError (14)':
    'prefix': 'CBATTErrorUnlikelyError'
    'body': 'CBATTErrorUnlikelyError'
  'CBATTErrorUnsupportedGroupType (16)':
    'prefix': 'CBATTErrorUnsupportedGroupType'
    'body': 'CBATTErrorUnsupportedGroupType'
  'CBATTErrorWriteNotPermitted (3)':
    'prefix': 'CBATTErrorWriteNotPermitted'
    'body': 'CBATTErrorWriteNotPermitted'
  'CBAttributePermissionsReadEncryptionRequired (4)':
    'prefix': 'CBAttributePermissionsReadEncryptionRequired'
    'body': 'CBAttributePermissionsReadEncryptionRequired'
  'CBAttributePermissionsReadable (1)':
    'prefix': 'CBAttributePermissionsReadable'
    'body': 'CBAttributePermissionsReadable'
  'CBAttributePermissionsWriteEncryptionRequired (8)':
    'prefix': 'CBAttributePermissionsWriteEncryptionRequired'
    'body': 'CBAttributePermissionsWriteEncryptionRequired'
  'CBAttributePermissionsWriteable (2)':
    'prefix': 'CBAttributePermissionsWriteable'
    'body': 'CBAttributePermissionsWriteable'
  'CBCentralManagerStatePoweredOff (4)':
    'prefix': 'CBCentralManagerStatePoweredOff'
    'body': 'CBCentralManagerStatePoweredOff'
  'CBCentralManagerStatePoweredOn (5)':
    'prefix': 'CBCentralManagerStatePoweredOn'
    'body': 'CBCentralManagerStatePoweredOn'
  'CBCentralManagerStateResetting (1)':
    'prefix': 'CBCentralManagerStateResetting'
    'body': 'CBCentralManagerStateResetting'
  'CBCentralManagerStateUnauthorized (3)':
    'prefix': 'CBCentralManagerStateUnauthorized'
    'body': 'CBCentralManagerStateUnauthorized'
  'CBCentralManagerStateUnknown (0)':
    'prefix': 'CBCentralManagerStateUnknown'
    'body': 'CBCentralManagerStateUnknown'
  'CBCentralManagerStateUnsupported (2)':
    'prefix': 'CBCentralManagerStateUnsupported'
    'body': 'CBCentralManagerStateUnsupported'
  'CBCharacteristicPropertyAuthenticatedSignedWrites (64)':
    'prefix': 'CBCharacteristicPropertyAuthenticatedSignedWrites'
    'body': 'CBCharacteristicPropertyAuthenticatedSignedWrites'
  'CBCharacteristicPropertyBroadcast (1)':
    'prefix': 'CBCharacteristicPropertyBroadcast'
    'body': 'CBCharacteristicPropertyBroadcast'
  'CBCharacteristicPropertyExtendedProperties (128)':
    'prefix': 'CBCharacteristicPropertyExtendedProperties'
    'body': 'CBCharacteristicPropertyExtendedProperties'
  'CBCharacteristicPropertyIndicate (32)':
    'prefix': 'CBCharacteristicPropertyIndicate'
    'body': 'CBCharacteristicPropertyIndicate'
  'CBCharacteristicPropertyIndicateEncryptionRequired (512)':
    'prefix': 'CBCharacteristicPropertyIndicateEncryptionRequired'
    'body': 'CBCharacteristicPropertyIndicateEncryptionRequired'
  'CBCharacteristicPropertyNotify (16)':
    'prefix': 'CBCharacteristicPropertyNotify'
    'body': 'CBCharacteristicPropertyNotify'
  'CBCharacteristicPropertyNotifyEncryptionRequired (256)':
    'prefix': 'CBCharacteristicPropertyNotifyEncryptionRequired'
    'body': 'CBCharacteristicPropertyNotifyEncryptionRequired'
  'CBCharacteristicPropertyRead (2)':
    'prefix': 'CBCharacteristicPropertyRead'
    'body': 'CBCharacteristicPropertyRead'
  'CBCharacteristicPropertyWrite (8)':
    'prefix': 'CBCharacteristicPropertyWrite'
    'body': 'CBCharacteristicPropertyWrite'
  'CBCharacteristicPropertyWriteWithoutResponse (4)':
    'prefix': 'CBCharacteristicPropertyWriteWithoutResponse'
    'body': 'CBCharacteristicPropertyWriteWithoutResponse'
  'CBCharacteristicWriteWithResponse (0)':
    'prefix': 'CBCharacteristicWriteWithResponse'
    'body': 'CBCharacteristicWriteWithResponse'
  'CBCharacteristicWriteWithoutResponse (1)':
    'prefix': 'CBCharacteristicWriteWithoutResponse'
    'body': 'CBCharacteristicWriteWithoutResponse'
  'CBErrorAlreadyAdvertising (9)':
    'prefix': 'CBErrorAlreadyAdvertising'
    'body': 'CBErrorAlreadyAdvertising'
  'CBErrorConnectionFailed (10)':
    'prefix': 'CBErrorConnectionFailed'
    'body': 'CBErrorConnectionFailed'
  'CBErrorConnectionTimeout (6)':
    'prefix': 'CBErrorConnectionTimeout'
    'body': 'CBErrorConnectionTimeout'
  'CBErrorInvalidHandle (2)':
    'prefix': 'CBErrorInvalidHandle'
    'body': 'CBErrorInvalidHandle'
  'CBErrorInvalidParameters (1)':
    'prefix': 'CBErrorInvalidParameters'
    'body': 'CBErrorInvalidParameters'
  'CBErrorNotConnected (3)':
    'prefix': 'CBErrorNotConnected'
    'body': 'CBErrorNotConnected'
  'CBErrorOperationCancelled (5)':
    'prefix': 'CBErrorOperationCancelled'
    'body': 'CBErrorOperationCancelled'
  'CBErrorOutOfSpace (4)':
    'prefix': 'CBErrorOutOfSpace'
    'body': 'CBErrorOutOfSpace'
  'CBErrorPeripheralDisconnected (7)':
    'prefix': 'CBErrorPeripheralDisconnected'
    'body': 'CBErrorPeripheralDisconnected'
  'CBErrorUUIDNotAllowed (8)':
    'prefix': 'CBErrorUUIDNotAllowed'
    'body': 'CBErrorUUIDNotAllowed'
  'CBErrorUnknown (0)':
    'prefix': 'CBErrorUnknown'
    'body': 'CBErrorUnknown'
  'CBPeripheralManagerAuthorizationStatusAuthorized (3)':
    'prefix': 'CBPeripheralManagerAuthorizationStatusAuthorized'
    'body': 'CBPeripheralManagerAuthorizationStatusAuthorized'
  'CBPeripheralManagerAuthorizationStatusDenied (2)':
    'prefix': 'CBPeripheralManagerAuthorizationStatusDenied'
    'body': 'CBPeripheralManagerAuthorizationStatusDenied'
  'CBPeripheralManagerAuthorizationStatusNotDetermined (0)':
    'prefix': 'CBPeripheralManagerAuthorizationStatusNotDetermined'
    'body': 'CBPeripheralManagerAuthorizationStatusNotDetermined'
  'CBPeripheralManagerAuthorizationStatusRestricted (1)':
    'prefix': 'CBPeripheralManagerAuthorizationStatusRestricted'
    'body': 'CBPeripheralManagerAuthorizationStatusRestricted'
  'CBPeripheralManagerConnectionLatencyHigh (2)':
    'prefix': 'CBPeripheralManagerConnectionLatencyHigh'
    'body': 'CBPeripheralManagerConnectionLatencyHigh'
  'CBPeripheralManagerConnectionLatencyLow (0)':
    'prefix': 'CBPeripheralManagerConnectionLatencyLow'
    'body': 'CBPeripheralManagerConnectionLatencyLow'
  'CBPeripheralManagerConnectionLatencyMedium (1)':
    'prefix': 'CBPeripheralManagerConnectionLatencyMedium'
    'body': 'CBPeripheralManagerConnectionLatencyMedium'
  'CBPeripheralManagerStatePoweredOff (4)':
    'prefix': 'CBPeripheralManagerStatePoweredOff'
    'body': 'CBPeripheralManagerStatePoweredOff'
  'CBPeripheralManagerStatePoweredOn (5)':
    'prefix': 'CBPeripheralManagerStatePoweredOn'
    'body': 'CBPeripheralManagerStatePoweredOn'
  'CBPeripheralManagerStateResetting (1)':
    'prefix': 'CBPeripheralManagerStateResetting'
    'body': 'CBPeripheralManagerStateResetting'
  'CBPeripheralManagerStateUnauthorized (3)':
    'prefix': 'CBPeripheralManagerStateUnauthorized'
    'body': 'CBPeripheralManagerStateUnauthorized'
  'CBPeripheralManagerStateUnknown (0)':
    'prefix': 'CBPeripheralManagerStateUnknown'
    'body': 'CBPeripheralManagerStateUnknown'
  'CBPeripheralManagerStateUnsupported (2)':
    'prefix': 'CBPeripheralManagerStateUnsupported'
    'body': 'CBPeripheralManagerStateUnsupported'
  'CBPeripheralStateConnected (2)':
    'prefix': 'CBPeripheralStateConnected'
    'body': 'CBPeripheralStateConnected'
  'CBPeripheralStateConnecting (1)':
    'prefix': 'CBPeripheralStateConnecting'
    'body': 'CBPeripheralStateConnecting'
  'CBPeripheralStateDisconnected (0)':
    'prefix': 'CBPeripheralStateDisconnected'
    'body': 'CBPeripheralStateDisconnected'
  'central':
    'prefix': 'central'
    'body': 'central()'
  'characteristic':
    'prefix': 'characteristic'
    'body': 'characteristic()'
  'offset':
    'prefix': 'offset'
    'body': 'offset()'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:NSData* value})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'maximumUpdateValueLength':
    'prefix': 'maximumUpdateValueLength'
    'body': 'maximumUpdateValueLength()'
  'cancelPeripheralConnection:':
    'prefix': 'cancelPeripheralConnection:'
    'body': 'cancelPeripheralConnection(${1:CBPeripheral* peripheral})'
  'connectPeripheral:options:':
    'prefix': 'connectPeripheral:options:'
    'body': 'connectPeripheral(${1:CBPeripheral* peripheral}, options:${2:NSDictionary* options})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithDelegate:queue:':
    'prefix': 'initWithDelegate:queue:'
    'body': 'initWithDelegate(${1:id delegate}, queue:${2:dispatch_queue_t queue})'
  'initWithDelegate:queue:options:':
    'prefix': 'initWithDelegate:queue:options:'
    'body': 'initWithDelegate(${1:id delegate}, queue:${2:dispatch_queue_t queue}, options:${3:NSDictionary* options})'
  'retrieveConnectedPeripherals':
    'prefix': 'retrieveConnectedPeripherals'
    'body': 'retrieveConnectedPeripherals()'
  'retrieveConnectedPeripheralsWithServices:':
    'prefix': 'retrieveConnectedPeripheralsWithServices:'
    'body': 'retrieveConnectedPeripheralsWithServices(${1:NSArray* serviceUUIDs})'
  'retrievePeripherals:':
    'prefix': 'retrievePeripherals:'
    'body': 'retrievePeripherals(${1:NSArray* peripheralUUIDs})'
  'retrievePeripheralsWithIdentifiers:':
    'prefix': 'retrievePeripheralsWithIdentifiers:'
    'body': 'retrievePeripheralsWithIdentifiers(${1:NSArray* identifiers})'
  'scanForPeripheralsWithServices:options:':
    'prefix': 'scanForPeripheralsWithServices:options:'
    'body': 'scanForPeripheralsWithServices(${1:NSArray* serviceUUIDs}, options:${2:NSDictionary* options})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'stopScan':
    'prefix': 'stopScan'
    'body': 'stopScan()'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'descriptors':
    'prefix': 'descriptors'
    'body': 'descriptors()'
  'isBroadcasted':
    'prefix': 'isBroadcasted'
    'body': 'isBroadcasted()'
  'isNotifying':
    'prefix': 'isNotifying'
    'body': 'isNotifying()'
  'properties':
    'prefix': 'properties'
    'body': 'properties()'
  'service':
    'prefix': 'service'
    'body': 'service()'
  'setService:':
    'prefix': 'setService:'
    'body': 'setService(${1:CBService* service})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'characteristic':
    'prefix': 'characteristic'
    'body': 'characteristic()'
  'setCharacteristic:':
    'prefix': 'setCharacteristic:'
    'body': 'setCharacteristic(${1:CBCharacteristic* characteristic})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'descriptors':
    'prefix': 'descriptors'
    'body': 'descriptors()'
  'initWithType:properties:value:permissions:':
    'prefix': 'initWithType:properties:value:permissions:'
    'body': 'initWithType(${1:CBUUID* UUID}, properties:${2:CBCharacteristicProperties properties}, value:${3:NSData* value}, permissions:${4:CBAttributePermissions permissions})'
  'permissions':
    'prefix': 'permissions'
    'body': 'permissions()'
  'properties':
    'prefix': 'properties'
    'body': 'properties()'
  'setDescriptors:':
    'prefix': 'setDescriptors:'
    'body': 'setDescriptors(${1:NSArray* descriptors})'
  'setPermissions:':
    'prefix': 'setPermissions:'
    'body': 'setPermissions(${1:CBAttributePermissions permissions})'
  'setProperties:':
    'prefix': 'setProperties:'
    'body': 'setProperties(${1:CBCharacteristicProperties properties})'
  'setUUID:':
    'prefix': 'setUUID:'
    'body': 'setUUID(${1:CBUUID* UUID})'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:NSData* value})'
  'subscribedCentrals':
    'prefix': 'subscribedCentrals'
    'body': 'subscribedCentrals()'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'initWithType:value:':
    'prefix': 'initWithType:value:'
    'body': 'initWithType(${1:CBUUID* UUID}, value:${2:id value})'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'characteristics':
    'prefix': 'characteristics'
    'body': 'characteristics()'
  'includedServices':
    'prefix': 'includedServices'
    'body': 'includedServices()'
  'initWithType:primary:':
    'prefix': 'initWithType:primary:'
    'body': 'initWithType(${1:CBUUID* UUID}, primary:${2:BOOL isPrimary})'
  'isPrimary':
    'prefix': 'isPrimary'
    'body': 'isPrimary()'
  'setCharacteristics:':
    'prefix': 'setCharacteristics:'
    'body': 'setCharacteristics(${1:NSArray* characteristics})'
  'setIncludedServices:':
    'prefix': 'setIncludedServices:'
    'body': 'setIncludedServices(${1:NSArray* includedServices})'
  'setIsPrimary:':
    'prefix': 'setIsPrimary:'
    'body': 'setIsPrimary(${1:BOOL isPrimary})'
  'setUUID:':
    'prefix': 'setUUID:'
    'body': 'setUUID(${1:CBUUID* UUID})'
  'RSSI':
    'prefix': 'RSSI'
    'body': 'RSSI()'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'discoverCharacteristics:forService:':
    'prefix': 'discoverCharacteristics:forService:'
    'body': 'discoverCharacteristics(${1:NSArray* characteristicUUIDs}, forService:${2:CBService* service})'
  'discoverDescriptorsForCharacteristic:':
    'prefix': 'discoverDescriptorsForCharacteristic:'
    'body': 'discoverDescriptorsForCharacteristic(${1:CBCharacteristic* characteristic})'
  'discoverIncludedServices:forService:':
    'prefix': 'discoverIncludedServices:forService:'
    'body': 'discoverIncludedServices(${1:NSArray* includedServiceUUIDs}, forService:${2:CBService* service})'
  'discoverServices:':
    'prefix': 'discoverServices:'
    'body': 'discoverServices(${1:NSArray* serviceUUIDs})'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'isConnected':
    'prefix': 'isConnected'
    'body': 'isConnected()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'readRSSI':
    'prefix': 'readRSSI'
    'body': 'readRSSI()'
  'readValueForCharacteristic:':
    'prefix': 'readValueForCharacteristic:'
    'body': 'readValueForCharacteristic(${1:CBCharacteristic* characteristic})'
  'readValueForDescriptor:':
    'prefix': 'readValueForDescriptor:'
    'body': 'readValueForDescriptor(${1:CBDescriptor* descriptor})'
  'services':
    'prefix': 'services'
    'body': 'services()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setNotifyValue:forCharacteristic:':
    'prefix': 'setNotifyValue:forCharacteristic:'
    'body': 'setNotifyValue(${1:BOOL enabled}, forCharacteristic:${2:CBCharacteristic* characteristic})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'writeValue:forCharacteristic:type:':
    'prefix': 'writeValue:forCharacteristic:type:'
    'body': 'writeValue(${1:NSData* data}, forCharacteristic:${2:CBCharacteristic* characteristic}, type:${3:CBCharacteristicWriteType type})'
  'writeValue:forDescriptor:':
    'prefix': 'writeValue:forDescriptor:'
    'body': 'writeValue(${1:NSData* data}, forDescriptor:${2:CBDescriptor* descriptor})'
  'addService:':
    'prefix': 'addService:'
    'body': 'addService(${1:CBMutableService* service})'
  'CBPeripheralManager.authorizationStatus':
    'prefix': 'authorizationStatus'
    'body': 'CBPeripheralManager.authorizationStatus()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithDelegate:queue:':
    'prefix': 'initWithDelegate:queue:'
    'body': 'initWithDelegate(${1:id delegate}, queue:${2:dispatch_queue_t queue})'
  'initWithDelegate:queue:options:':
    'prefix': 'initWithDelegate:queue:options:'
    'body': 'initWithDelegate(${1:id delegate}, queue:${2:dispatch_queue_t queue}, options:${3:NSDictionary* options})'
  'isAdvertising':
    'prefix': 'isAdvertising'
    'body': 'isAdvertising()'
  'removeAllServices':
    'prefix': 'removeAllServices'
    'body': 'removeAllServices()'
  'removeService:':
    'prefix': 'removeService:'
    'body': 'removeService(${1:CBMutableService* service})'
  'respondToRequest:withResult:':
    'prefix': 'respondToRequest:withResult:'
    'body': 'respondToRequest(${1:CBATTRequest* request}, withResult:${2:CBATTError result})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDesiredConnectionLatency:forCentral:':
    'prefix': 'setDesiredConnectionLatency:forCentral:'
    'body': 'setDesiredConnectionLatency(${1:CBPeripheralManagerConnectionLatency latency}, forCentral:${2:CBCentral* central})'
  'startAdvertising:':
    'prefix': 'startAdvertising:'
    'body': 'startAdvertising(${1:NSDictionary* advertisementData})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'stopAdvertising':
    'prefix': 'stopAdvertising'
    'body': 'stopAdvertising()'
  'updateValue:forCharacteristic:onSubscribedCentrals:':
    'prefix': 'updateValue:forCharacteristic:onSubscribedCentrals:'
    'body': 'updateValue(${1:NSData* value}, forCharacteristic:${2:CBMutableCharacteristic* characteristic}, onSubscribedCentrals:${3:NSArray* centrals})'
  'UUID':
    'prefix': 'UUID'
    'body': 'UUID()'
  'characteristics':
    'prefix': 'characteristics'
    'body': 'characteristics()'
  'includedServices':
    'prefix': 'includedServices'
    'body': 'includedServices()'
  'isPrimary':
    'prefix': 'isPrimary'
    'body': 'isPrimary()'
  'peripheral':
    'prefix': 'peripheral'
    'body': 'peripheral()'
  'setPeripheral:':
    'prefix': 'setPeripheral:'
    'body': 'setPeripheral(${1:CBPeripheral* peripheral})'
  'UUIDString':
    'prefix': 'UUIDString'
    'body': 'UUIDString()'
  'CBUUID.UUIDWithCFUUID:':
    'prefix': 'UUIDWithCFUUID:'
    'body': 'CBUUID.UUIDWithCFUUID(${1:CFUUIDRef theUUID})'
  'CBUUID.UUIDWithData:':
    'prefix': 'UUIDWithData:'
    'body': 'CBUUID.UUIDWithData(${1:NSData* theData})'
  'CBUUID.UUIDWithNSUUID:':
    'prefix': 'UUIDWithNSUUID:'
    'body': 'CBUUID.UUIDWithNSUUID(${1:NSUUID* theUUID})'
  'CBUUID.UUIDWithString:':
    'prefix': 'UUIDWithString:'
    'body': 'CBUUID.UUIDWithString(${1:NSString* theString})'
  'data':
    'prefix': 'data'
    'body': 'data()'
  'centralManager:didConnectPeripheral:':
    'prefix': 'centralManager:didConnectPeripheral:'
    'body': 'centralManager(${1:CBCentralManager* central}, didConnectPeripheral:${2:CBPeripheral* peripheral})'
  'centralManager:didDisconnectPeripheral:error:':
    'prefix': 'centralManager:didDisconnectPeripheral:error:'
    'body': 'centralManager(${1:CBCentralManager* central}, didDisconnectPeripheral:${2:CBPeripheral* peripheral}, error:${3:NSError* error})'
  'centralManager:didDiscoverPeripheral:advertisementData:RSSI:':
    'prefix': 'centralManager:didDiscoverPeripheral:advertisementData:RSSI:'
    'body': 'centralManager(${1:CBCentralManager* central}, didDiscoverPeripheral:${2:CBPeripheral* peripheral}, advertisementData:${3:NSDictionary* advertisementData}, RSSI:${4:NSNumber* RSSI})'
  'centralManager:didFailToConnectPeripheral:error:':
    'prefix': 'centralManager:didFailToConnectPeripheral:error:'
    'body': 'centralManager(${1:CBCentralManager* central}, didFailToConnectPeripheral:${2:CBPeripheral* peripheral}, error:${3:NSError* error})'
  'centralManager:didRetrieveConnectedPeripherals:':
    'prefix': 'centralManager:didRetrieveConnectedPeripherals:'
    'body': 'centralManager(${1:CBCentralManager* central}, didRetrieveConnectedPeripherals:${2:NSArray* peripherals})'
  'centralManager:didRetrievePeripherals:':
    'prefix': 'centralManager:didRetrievePeripherals:'
    'body': 'centralManager(${1:CBCentralManager* central}, didRetrievePeripherals:${2:NSArray* peripherals})'
  'centralManager:willRestoreState:':
    'prefix': 'centralManager:willRestoreState:'
    'body': 'centralManager(${1:CBCentralManager* central}, willRestoreState:${2:NSDictionary* dict})'
  'centralManagerDidUpdateState:':
    'prefix': 'centralManagerDidUpdateState:'
    'body': 'centralManagerDidUpdateState(${1:CBCentralManager* central})'
  'peripheral:didDiscoverCharacteristicsForService:error:':
    'prefix': 'peripheral:didDiscoverCharacteristicsForService:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverCharacteristicsForService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheral:didDiscoverDescriptorsForCharacteristic:error:':
    'prefix': 'peripheral:didDiscoverDescriptorsForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverDescriptorsForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didDiscoverIncludedServicesForService:error:':
    'prefix': 'peripheral:didDiscoverIncludedServicesForService:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverIncludedServicesForService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheral:didDiscoverServices:':
    'prefix': 'peripheral:didDiscoverServices:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverServices:${2:NSError* error})'
  'peripheral:didModifyServices:':
    'prefix': 'peripheral:didModifyServices:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didModifyServices:${2:NSArray* invalidatedServices})'
  'peripheral:didUpdateNotificationStateForCharacteristic:error:':
    'prefix': 'peripheral:didUpdateNotificationStateForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateNotificationStateForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didUpdateValueForCharacteristic:error:':
    'prefix': 'peripheral:didUpdateValueForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateValueForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didUpdateValueForDescriptor:error:':
    'prefix': 'peripheral:didUpdateValueForDescriptor:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateValueForDescriptor:${2:CBDescriptor* descriptor}, error:${3:NSError* error})'
  'peripheral:didWriteValueForCharacteristic:error:':
    'prefix': 'peripheral:didWriteValueForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didWriteValueForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didWriteValueForDescriptor:error:':
    'prefix': 'peripheral:didWriteValueForDescriptor:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didWriteValueForDescriptor:${2:CBDescriptor* descriptor}, error:${3:NSError* error})'
  'peripheralDidInvalidateServices:':
    'prefix': 'peripheralDidInvalidateServices:'
    'body': 'peripheralDidInvalidateServices(${1:CBPeripheral* peripheral})'
  'peripheralDidUpdateName:':
    'prefix': 'peripheralDidUpdateName:'
    'body': 'peripheralDidUpdateName(${1:CBPeripheral* peripheral})'
  'peripheralDidUpdateRSSI:error:':
    'prefix': 'peripheralDidUpdateRSSI:error:'
    'body': 'peripheralDidUpdateRSSI(${1:CBPeripheral* peripheral}, error:${2:NSError* error})'
  'peripheralManager:central:didSubscribeToCharacteristic:':
    'prefix': 'peripheralManager:central:didSubscribeToCharacteristic:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, central:${2:CBCentral* central}, didSubscribeToCharacteristic:${3:CBCharacteristic* characteristic})'
  'peripheralManager:central:didUnsubscribeFromCharacteristic:':
    'prefix': 'peripheralManager:central:didUnsubscribeFromCharacteristic:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, central:${2:CBCentral* central}, didUnsubscribeFromCharacteristic:${3:CBCharacteristic* characteristic})'
  'peripheralManager:didAddService:error:':
    'prefix': 'peripheralManager:didAddService:error:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didAddService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheralManager:didReceiveReadRequest:':
    'prefix': 'peripheralManager:didReceiveReadRequest:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didReceiveReadRequest:${2:CBATTRequest* request})'
  'peripheralManager:didReceiveWriteRequests:':
    'prefix': 'peripheralManager:didReceiveWriteRequests:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didReceiveWriteRequests:${2:NSArray* requests})'
  'peripheralManager:willRestoreState:':
    'prefix': 'peripheralManager:willRestoreState:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, willRestoreState:${2:NSDictionary* dict})'
  'peripheralManagerDidStartAdvertising:error:':
    'prefix': 'peripheralManagerDidStartAdvertising:error:'
    'body': 'peripheralManagerDidStartAdvertising(${1:CBPeripheralManager* peripheral}, error:${2:NSError* error})'
  'peripheralManagerDidUpdateState:':
    'prefix': 'peripheralManagerDidUpdateState:'
    'body': 'peripheralManagerDidUpdateState(${1:CBPeripheralManager* peripheral})'
  'peripheralManagerIsReadyToUpdateSubscribers:':
    'prefix': 'peripheralManagerIsReadyToUpdateSubscribers:'
    'body': 'peripheralManagerIsReadyToUpdateSubscribers(${1:CBPeripheralManager* peripheral})'
  'centralManager:didConnectPeripheral:':
    'prefix': 'centralManager:didConnectPeripheral:'
    'body': 'centralManager(${1:CBCentralManager* central}, didConnectPeripheral:${2:CBPeripheral* peripheral})'
  'centralManager:didDisconnectPeripheral:error:':
    'prefix': 'centralManager:didDisconnectPeripheral:error:'
    'body': 'centralManager(${1:CBCentralManager* central}, didDisconnectPeripheral:${2:CBPeripheral* peripheral}, error:${3:NSError* error})'
  'centralManager:didDiscoverPeripheral:advertisementData:RSSI:':
    'prefix': 'centralManager:didDiscoverPeripheral:advertisementData:RSSI:'
    'body': 'centralManager(${1:CBCentralManager* central}, didDiscoverPeripheral:${2:CBPeripheral* peripheral}, advertisementData:${3:NSDictionary* advertisementData}, RSSI:${4:NSNumber* RSSI})'
  'centralManager:didFailToConnectPeripheral:error:':
    'prefix': 'centralManager:didFailToConnectPeripheral:error:'
    'body': 'centralManager(${1:CBCentralManager* central}, didFailToConnectPeripheral:${2:CBPeripheral* peripheral}, error:${3:NSError* error})'
  'centralManager:didRetrieveConnectedPeripherals:':
    'prefix': 'centralManager:didRetrieveConnectedPeripherals:'
    'body': 'centralManager(${1:CBCentralManager* central}, didRetrieveConnectedPeripherals:${2:NSArray* peripherals})'
  'centralManager:didRetrievePeripherals:':
    'prefix': 'centralManager:didRetrievePeripherals:'
    'body': 'centralManager(${1:CBCentralManager* central}, didRetrievePeripherals:${2:NSArray* peripherals})'
  'centralManager:willRestoreState:':
    'prefix': 'centralManager:willRestoreState:'
    'body': 'centralManager(${1:CBCentralManager* central}, willRestoreState:${2:NSDictionary* dict})'
  'centralManagerDidUpdateState:':
    'prefix': 'centralManagerDidUpdateState:'
    'body': 'centralManagerDidUpdateState(${1:CBCentralManager* central})'
  'peripheral:didDiscoverCharacteristicsForService:error:':
    'prefix': 'peripheral:didDiscoverCharacteristicsForService:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverCharacteristicsForService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheral:didDiscoverDescriptorsForCharacteristic:error:':
    'prefix': 'peripheral:didDiscoverDescriptorsForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverDescriptorsForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didDiscoverIncludedServicesForService:error:':
    'prefix': 'peripheral:didDiscoverIncludedServicesForService:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverIncludedServicesForService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheral:didDiscoverServices:':
    'prefix': 'peripheral:didDiscoverServices:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didDiscoverServices:${2:NSError* error})'
  'peripheral:didModifyServices:':
    'prefix': 'peripheral:didModifyServices:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didModifyServices:${2:NSArray* invalidatedServices})'
  'peripheral:didUpdateNotificationStateForCharacteristic:error:':
    'prefix': 'peripheral:didUpdateNotificationStateForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateNotificationStateForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didUpdateValueForCharacteristic:error:':
    'prefix': 'peripheral:didUpdateValueForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateValueForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didUpdateValueForDescriptor:error:':
    'prefix': 'peripheral:didUpdateValueForDescriptor:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didUpdateValueForDescriptor:${2:CBDescriptor* descriptor}, error:${3:NSError* error})'
  'peripheral:didWriteValueForCharacteristic:error:':
    'prefix': 'peripheral:didWriteValueForCharacteristic:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didWriteValueForCharacteristic:${2:CBCharacteristic* characteristic}, error:${3:NSError* error})'
  'peripheral:didWriteValueForDescriptor:error:':
    'prefix': 'peripheral:didWriteValueForDescriptor:error:'
    'body': 'peripheral(${1:CBPeripheral* peripheral}, didWriteValueForDescriptor:${2:CBDescriptor* descriptor}, error:${3:NSError* error})'
  'peripheralDidInvalidateServices:':
    'prefix': 'peripheralDidInvalidateServices:'
    'body': 'peripheralDidInvalidateServices(${1:CBPeripheral* peripheral})'
  'peripheralDidUpdateName:':
    'prefix': 'peripheralDidUpdateName:'
    'body': 'peripheralDidUpdateName(${1:CBPeripheral* peripheral})'
  'peripheralDidUpdateRSSI:error:':
    'prefix': 'peripheralDidUpdateRSSI:error:'
    'body': 'peripheralDidUpdateRSSI(${1:CBPeripheral* peripheral}, error:${2:NSError* error})'
  'peripheralManager:central:didSubscribeToCharacteristic:':
    'prefix': 'peripheralManager:central:didSubscribeToCharacteristic:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, central:${2:CBCentral* central}, didSubscribeToCharacteristic:${3:CBCharacteristic* characteristic})'
  'peripheralManager:central:didUnsubscribeFromCharacteristic:':
    'prefix': 'peripheralManager:central:didUnsubscribeFromCharacteristic:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, central:${2:CBCentral* central}, didUnsubscribeFromCharacteristic:${3:CBCharacteristic* characteristic})'
  'peripheralManager:didAddService:error:':
    'prefix': 'peripheralManager:didAddService:error:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didAddService:${2:CBService* service}, error:${3:NSError* error})'
  'peripheralManager:didReceiveReadRequest:':
    'prefix': 'peripheralManager:didReceiveReadRequest:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didReceiveReadRequest:${2:CBATTRequest* request})'
  'peripheralManager:didReceiveWriteRequests:':
    'prefix': 'peripheralManager:didReceiveWriteRequests:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, didReceiveWriteRequests:${2:NSArray* requests})'
  'peripheralManager:willRestoreState:':
    'prefix': 'peripheralManager:willRestoreState:'
    'body': 'peripheralManager(${1:CBPeripheralManager* peripheral}, willRestoreState:${2:NSDictionary* dict})'
  'peripheralManagerDidStartAdvertising:error:':
    'prefix': 'peripheralManagerDidStartAdvertising:error:'
    'body': 'peripheralManagerDidStartAdvertising(${1:CBPeripheralManager* peripheral}, error:${2:NSError* error})'
  'peripheralManagerDidUpdateState:':
    'prefix': 'peripheralManagerDidUpdateState:'
    'body': 'peripheralManagerDidUpdateState(${1:CBPeripheralManager* peripheral})'
  'peripheralManagerIsReadyToUpdateSubscribers:':
    'prefix': 'peripheralManagerIsReadyToUpdateSubscribers:'
    'body': 'peripheralManagerIsReadyToUpdateSubscribers(${1:CBPeripheralManager* peripheral})'
