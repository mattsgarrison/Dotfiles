'.source.rubymotion':
  'NSAbortModalException (NSString*)':
    'prefix': 'NSAbortModalException'
    'body': 'NSAbortModalException'
  'NSAbortPrintingException (NSString*)':
    'prefix': 'NSAbortPrintingException'
    'body': 'NSAbortPrintingException'
  'NSAccessibilityAllowedValuesAttribute (NSString*)':
    'prefix': 'NSAccessibilityAllowedValuesAttribute'
    'body': 'NSAccessibilityAllowedValuesAttribute'
  'NSAccessibilityAnnouncementKey (NSString*)':
    'prefix': 'NSAccessibilityAnnouncementKey'
    'body': 'NSAccessibilityAnnouncementKey'
  'NSAccessibilityAnnouncementRequestedNotification (NSString*)':
    'prefix': 'NSAccessibilityAnnouncementRequestedNotification'
    'body': 'NSAccessibilityAnnouncementRequestedNotification'
  'NSAccessibilityApplicationActivatedNotification (NSString*)':
    'prefix': 'NSAccessibilityApplicationActivatedNotification'
    'body': 'NSAccessibilityApplicationActivatedNotification'
  'NSAccessibilityApplicationDeactivatedNotification (NSString*)':
    'prefix': 'NSAccessibilityApplicationDeactivatedNotification'
    'body': 'NSAccessibilityApplicationDeactivatedNotification'
  'NSAccessibilityApplicationHiddenNotification (NSString*)':
    'prefix': 'NSAccessibilityApplicationHiddenNotification'
    'body': 'NSAccessibilityApplicationHiddenNotification'
  'NSAccessibilityApplicationRole (NSString*)':
    'prefix': 'NSAccessibilityApplicationRole'
    'body': 'NSAccessibilityApplicationRole'
  'NSAccessibilityApplicationShownNotification (NSString*)':
    'prefix': 'NSAccessibilityApplicationShownNotification'
    'body': 'NSAccessibilityApplicationShownNotification'
  'NSAccessibilityAscendingSortDirectionValue (NSString*)':
    'prefix': 'NSAccessibilityAscendingSortDirectionValue'
    'body': 'NSAccessibilityAscendingSortDirectionValue'
  'NSAccessibilityAttachmentTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityAttachmentTextAttribute'
    'body': 'NSAccessibilityAttachmentTextAttribute'
  'NSAccessibilityAttributedStringForRangeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityAttributedStringForRangeParameterizedAttribute'
    'body': 'NSAccessibilityAttributedStringForRangeParameterizedAttribute'
  'NSAccessibilityAutocorrectedTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityAutocorrectedTextAttribute'
    'body': 'NSAccessibilityAutocorrectedTextAttribute'
  'NSAccessibilityBackgroundColorTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityBackgroundColorTextAttribute'
    'body': 'NSAccessibilityBackgroundColorTextAttribute'
  'NSAccessibilityBoundsForRangeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityBoundsForRangeParameterizedAttribute'
    'body': 'NSAccessibilityBoundsForRangeParameterizedAttribute'
  'NSAccessibilityBrowserRole (NSString*)':
    'prefix': 'NSAccessibilityBrowserRole'
    'body': 'NSAccessibilityBrowserRole'
  'NSAccessibilityBusyIndicatorRole (NSString*)':
    'prefix': 'NSAccessibilityBusyIndicatorRole'
    'body': 'NSAccessibilityBusyIndicatorRole'
  'NSAccessibilityButtonRole (NSString*)':
    'prefix': 'NSAccessibilityButtonRole'
    'body': 'NSAccessibilityButtonRole'
  'NSAccessibilityCancelAction (NSString*)':
    'prefix': 'NSAccessibilityCancelAction'
    'body': 'NSAccessibilityCancelAction'
  'NSAccessibilityCancelButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityCancelButtonAttribute'
    'body': 'NSAccessibilityCancelButtonAttribute'
  'NSAccessibilityCellForColumnAndRowParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityCellForColumnAndRowParameterizedAttribute'
    'body': 'NSAccessibilityCellForColumnAndRowParameterizedAttribute'
  'NSAccessibilityCellRole (NSString*)':
    'prefix': 'NSAccessibilityCellRole'
    'body': 'NSAccessibilityCellRole'
  'NSAccessibilityCenterTabStopMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityCenterTabStopMarkerTypeValue'
    'body': 'NSAccessibilityCenterTabStopMarkerTypeValue'
  'NSAccessibilityCentimetersUnitValue (NSString*)':
    'prefix': 'NSAccessibilityCentimetersUnitValue'
    'body': 'NSAccessibilityCentimetersUnitValue'
  'NSAccessibilityCheckBoxRole (NSString*)':
    'prefix': 'NSAccessibilityCheckBoxRole'
    'body': 'NSAccessibilityCheckBoxRole'
  'NSAccessibilityChildrenAttribute (NSString*)':
    'prefix': 'NSAccessibilityChildrenAttribute'
    'body': 'NSAccessibilityChildrenAttribute'
  'NSAccessibilityClearButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityClearButtonAttribute'
    'body': 'NSAccessibilityClearButtonAttribute'
  'NSAccessibilityCloseButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityCloseButtonAttribute'
    'body': 'NSAccessibilityCloseButtonAttribute'
  'NSAccessibilityCloseButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilityCloseButtonSubrole'
    'body': 'NSAccessibilityCloseButtonSubrole'
  'NSAccessibilityColorWellRole (NSString*)':
    'prefix': 'NSAccessibilityColorWellRole'
    'body': 'NSAccessibilityColorWellRole'
  'NSAccessibilityColumnCountAttribute (NSString*)':
    'prefix': 'NSAccessibilityColumnCountAttribute'
    'body': 'NSAccessibilityColumnCountAttribute'
  'NSAccessibilityColumnHeaderUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityColumnHeaderUIElementsAttribute'
    'body': 'NSAccessibilityColumnHeaderUIElementsAttribute'
  'NSAccessibilityColumnIndexRangeAttribute (NSString*)':
    'prefix': 'NSAccessibilityColumnIndexRangeAttribute'
    'body': 'NSAccessibilityColumnIndexRangeAttribute'
  'NSAccessibilityColumnRole (NSString*)':
    'prefix': 'NSAccessibilityColumnRole'
    'body': 'NSAccessibilityColumnRole'
  'NSAccessibilityColumnTitlesAttribute (NSString*)':
    'prefix': 'NSAccessibilityColumnTitlesAttribute'
    'body': 'NSAccessibilityColumnTitlesAttribute'
  'NSAccessibilityColumnsAttribute (NSString*)':
    'prefix': 'NSAccessibilityColumnsAttribute'
    'body': 'NSAccessibilityColumnsAttribute'
  'NSAccessibilityComboBoxRole (NSString*)':
    'prefix': 'NSAccessibilityComboBoxRole'
    'body': 'NSAccessibilityComboBoxRole'
  'NSAccessibilityConfirmAction (NSString*)':
    'prefix': 'NSAccessibilityConfirmAction'
    'body': 'NSAccessibilityConfirmAction'
  'NSAccessibilityContainsProtectedContentAttribute (NSString*)':
    'prefix': 'NSAccessibilityContainsProtectedContentAttribute'
    'body': 'NSAccessibilityContainsProtectedContentAttribute'
  'NSAccessibilityContentListSubrole (NSString*)':
    'prefix': 'NSAccessibilityContentListSubrole'
    'body': 'NSAccessibilityContentListSubrole'
  'NSAccessibilityContentsAttribute (NSString*)':
    'prefix': 'NSAccessibilityContentsAttribute'
    'body': 'NSAccessibilityContentsAttribute'
  'NSAccessibilityCreatedNotification (NSString*)':
    'prefix': 'NSAccessibilityCreatedNotification'
    'body': 'NSAccessibilityCreatedNotification'
  'NSAccessibilityCriticalValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityCriticalValueAttribute'
    'body': 'NSAccessibilityCriticalValueAttribute'
  'NSAccessibilityDecimalTabStopMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityDecimalTabStopMarkerTypeValue'
    'body': 'NSAccessibilityDecimalTabStopMarkerTypeValue'
  'NSAccessibilityDecrementAction (NSString*)':
    'prefix': 'NSAccessibilityDecrementAction'
    'body': 'NSAccessibilityDecrementAction'
  'NSAccessibilityDecrementArrowSubrole (NSString*)':
    'prefix': 'NSAccessibilityDecrementArrowSubrole'
    'body': 'NSAccessibilityDecrementArrowSubrole'
  'NSAccessibilityDecrementButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityDecrementButtonAttribute'
    'body': 'NSAccessibilityDecrementButtonAttribute'
  'NSAccessibilityDecrementPageSubrole (NSString*)':
    'prefix': 'NSAccessibilityDecrementPageSubrole'
    'body': 'NSAccessibilityDecrementPageSubrole'
  'NSAccessibilityDefaultButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityDefaultButtonAttribute'
    'body': 'NSAccessibilityDefaultButtonAttribute'
  'NSAccessibilityDefinitionListSubrole (NSString*)':
    'prefix': 'NSAccessibilityDefinitionListSubrole'
    'body': 'NSAccessibilityDefinitionListSubrole'
  'NSAccessibilityDeleteAction (NSString*)':
    'prefix': 'NSAccessibilityDeleteAction'
    'body': 'NSAccessibilityDeleteAction'
  'NSAccessibilityDescendingSortDirectionValue (NSString*)':
    'prefix': 'NSAccessibilityDescendingSortDirectionValue'
    'body': 'NSAccessibilityDescendingSortDirectionValue'
  'NSAccessibilityDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityDescriptionAttribute'
    'body': 'NSAccessibilityDescriptionAttribute'
  'NSAccessibilityDescriptionListSubrole (NSString*)':
    'prefix': 'NSAccessibilityDescriptionListSubrole'
    'body': 'NSAccessibilityDescriptionListSubrole'
  'NSAccessibilityDialogSubrole (NSString*)':
    'prefix': 'NSAccessibilityDialogSubrole'
    'body': 'NSAccessibilityDialogSubrole'
  'NSAccessibilityDisclosedByRowAttribute (NSString*)':
    'prefix': 'NSAccessibilityDisclosedByRowAttribute'
    'body': 'NSAccessibilityDisclosedByRowAttribute'
  'NSAccessibilityDisclosedRowsAttribute (NSString*)':
    'prefix': 'NSAccessibilityDisclosedRowsAttribute'
    'body': 'NSAccessibilityDisclosedRowsAttribute'
  'NSAccessibilityDisclosingAttribute (NSString*)':
    'prefix': 'NSAccessibilityDisclosingAttribute'
    'body': 'NSAccessibilityDisclosingAttribute'
  'NSAccessibilityDisclosureLevelAttribute (NSString*)':
    'prefix': 'NSAccessibilityDisclosureLevelAttribute'
    'body': 'NSAccessibilityDisclosureLevelAttribute'
  'NSAccessibilityDisclosureTriangleRole (NSString*)':
    'prefix': 'NSAccessibilityDisclosureTriangleRole'
    'body': 'NSAccessibilityDisclosureTriangleRole'
  'NSAccessibilityDocumentAttribute (NSString*)':
    'prefix': 'NSAccessibilityDocumentAttribute'
    'body': 'NSAccessibilityDocumentAttribute'
  'NSAccessibilityDrawerCreatedNotification (NSString*)':
    'prefix': 'NSAccessibilityDrawerCreatedNotification'
    'body': 'NSAccessibilityDrawerCreatedNotification'
  'NSAccessibilityDrawerRole (NSString*)':
    'prefix': 'NSAccessibilityDrawerRole'
    'body': 'NSAccessibilityDrawerRole'
  'NSAccessibilityEditedAttribute (NSString*)':
    'prefix': 'NSAccessibilityEditedAttribute'
    'body': 'NSAccessibilityEditedAttribute'
  'NSAccessibilityEnabledAttribute (NSString*)':
    'prefix': 'NSAccessibilityEnabledAttribute'
    'body': 'NSAccessibilityEnabledAttribute'
  'NSAccessibilityErrorCodeExceptionInfo (NSString*)':
    'prefix': 'NSAccessibilityErrorCodeExceptionInfo'
    'body': 'NSAccessibilityErrorCodeExceptionInfo'
  'NSAccessibilityException (NSString*)':
    'prefix': 'NSAccessibilityException'
    'body': 'NSAccessibilityException'
  'NSAccessibilityExpandedAttribute (NSString*)':
    'prefix': 'NSAccessibilityExpandedAttribute'
    'body': 'NSAccessibilityExpandedAttribute'
  'NSAccessibilityExtrasMenuBarAttribute (NSString*)':
    'prefix': 'NSAccessibilityExtrasMenuBarAttribute'
    'body': 'NSAccessibilityExtrasMenuBarAttribute'
  'NSAccessibilityFilenameAttribute (NSString*)':
    'prefix': 'NSAccessibilityFilenameAttribute'
    'body': 'NSAccessibilityFilenameAttribute'
  'NSAccessibilityFirstLineIndentMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityFirstLineIndentMarkerTypeValue'
    'body': 'NSAccessibilityFirstLineIndentMarkerTypeValue'
  'NSAccessibilityFloatingWindowSubrole (NSString*)':
    'prefix': 'NSAccessibilityFloatingWindowSubrole'
    'body': 'NSAccessibilityFloatingWindowSubrole'
  'NSAccessibilityFocusedAttribute (NSString*)':
    'prefix': 'NSAccessibilityFocusedAttribute'
    'body': 'NSAccessibilityFocusedAttribute'
  'NSAccessibilityFocusedUIElementAttribute (NSString*)':
    'prefix': 'NSAccessibilityFocusedUIElementAttribute'
    'body': 'NSAccessibilityFocusedUIElementAttribute'
  'NSAccessibilityFocusedUIElementChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityFocusedUIElementChangedNotification'
    'body': 'NSAccessibilityFocusedUIElementChangedNotification'
  'NSAccessibilityFocusedWindowAttribute (NSString*)':
    'prefix': 'NSAccessibilityFocusedWindowAttribute'
    'body': 'NSAccessibilityFocusedWindowAttribute'
  'NSAccessibilityFocusedWindowChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityFocusedWindowChangedNotification'
    'body': 'NSAccessibilityFocusedWindowChangedNotification'
  'NSAccessibilityFontFamilyKey (NSString*)':
    'prefix': 'NSAccessibilityFontFamilyKey'
    'body': 'NSAccessibilityFontFamilyKey'
  'NSAccessibilityFontNameKey (NSString*)':
    'prefix': 'NSAccessibilityFontNameKey'
    'body': 'NSAccessibilityFontNameKey'
  'NSAccessibilityFontSizeKey (NSString*)':
    'prefix': 'NSAccessibilityFontSizeKey'
    'body': 'NSAccessibilityFontSizeKey'
  'NSAccessibilityFontTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityFontTextAttribute'
    'body': 'NSAccessibilityFontTextAttribute'
  'NSAccessibilityForegroundColorTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityForegroundColorTextAttribute'
    'body': 'NSAccessibilityForegroundColorTextAttribute'
  'NSAccessibilityFrontmostAttribute (NSString*)':
    'prefix': 'NSAccessibilityFrontmostAttribute'
    'body': 'NSAccessibilityFrontmostAttribute'
  'NSAccessibilityFullScreenButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityFullScreenButtonAttribute'
    'body': 'NSAccessibilityFullScreenButtonAttribute'
  'NSAccessibilityFullScreenButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilityFullScreenButtonSubrole'
    'body': 'NSAccessibilityFullScreenButtonSubrole'
  'NSAccessibilityGridRole (NSString*)':
    'prefix': 'NSAccessibilityGridRole'
    'body': 'NSAccessibilityGridRole'
  'NSAccessibilityGroupRole (NSString*)':
    'prefix': 'NSAccessibilityGroupRole'
    'body': 'NSAccessibilityGroupRole'
  'NSAccessibilityGrowAreaAttribute (NSString*)':
    'prefix': 'NSAccessibilityGrowAreaAttribute'
    'body': 'NSAccessibilityGrowAreaAttribute'
  'NSAccessibilityGrowAreaRole (NSString*)':
    'prefix': 'NSAccessibilityGrowAreaRole'
    'body': 'NSAccessibilityGrowAreaRole'
  'NSAccessibilityHandleRole (NSString*)':
    'prefix': 'NSAccessibilityHandleRole'
    'body': 'NSAccessibilityHandleRole'
  'NSAccessibilityHandlesAttribute (NSString*)':
    'prefix': 'NSAccessibilityHandlesAttribute'
    'body': 'NSAccessibilityHandlesAttribute'
  'NSAccessibilityHeadIndentMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityHeadIndentMarkerTypeValue'
    'body': 'NSAccessibilityHeadIndentMarkerTypeValue'
  'NSAccessibilityHeaderAttribute (NSString*)':
    'prefix': 'NSAccessibilityHeaderAttribute'
    'body': 'NSAccessibilityHeaderAttribute'
  'NSAccessibilityHelpAttribute (NSString*)':
    'prefix': 'NSAccessibilityHelpAttribute'
    'body': 'NSAccessibilityHelpAttribute'
  'NSAccessibilityHelpTagCreatedNotification (NSString*)':
    'prefix': 'NSAccessibilityHelpTagCreatedNotification'
    'body': 'NSAccessibilityHelpTagCreatedNotification'
  'NSAccessibilityHelpTagRole (NSString*)':
    'prefix': 'NSAccessibilityHelpTagRole'
    'body': 'NSAccessibilityHelpTagRole'
  'NSAccessibilityHiddenAttribute (NSString*)':
    'prefix': 'NSAccessibilityHiddenAttribute'
    'body': 'NSAccessibilityHiddenAttribute'
  'NSAccessibilityHorizontalOrientationValue (NSString*)':
    'prefix': 'NSAccessibilityHorizontalOrientationValue'
    'body': 'NSAccessibilityHorizontalOrientationValue'
  'NSAccessibilityHorizontalScrollBarAttribute (NSString*)':
    'prefix': 'NSAccessibilityHorizontalScrollBarAttribute'
    'body': 'NSAccessibilityHorizontalScrollBarAttribute'
  'NSAccessibilityHorizontalUnitDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityHorizontalUnitDescriptionAttribute'
    'body': 'NSAccessibilityHorizontalUnitDescriptionAttribute'
  'NSAccessibilityHorizontalUnitsAttribute (NSString*)':
    'prefix': 'NSAccessibilityHorizontalUnitsAttribute'
    'body': 'NSAccessibilityHorizontalUnitsAttribute'
  'NSAccessibilityIdentifierAttribute (NSString*)':
    'prefix': 'NSAccessibilityIdentifierAttribute'
    'body': 'NSAccessibilityIdentifierAttribute'
  'NSAccessibilityImageRole (NSString*)':
    'prefix': 'NSAccessibilityImageRole'
    'body': 'NSAccessibilityImageRole'
  'NSAccessibilityInchesUnitValue (NSString*)':
    'prefix': 'NSAccessibilityInchesUnitValue'
    'body': 'NSAccessibilityInchesUnitValue'
  'NSAccessibilityIncrementAction (NSString*)':
    'prefix': 'NSAccessibilityIncrementAction'
    'body': 'NSAccessibilityIncrementAction'
  'NSAccessibilityIncrementArrowSubrole (NSString*)':
    'prefix': 'NSAccessibilityIncrementArrowSubrole'
    'body': 'NSAccessibilityIncrementArrowSubrole'
  'NSAccessibilityIncrementButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityIncrementButtonAttribute'
    'body': 'NSAccessibilityIncrementButtonAttribute'
  'NSAccessibilityIncrementPageSubrole (NSString*)':
    'prefix': 'NSAccessibilityIncrementPageSubrole'
    'body': 'NSAccessibilityIncrementPageSubrole'
  'NSAccessibilityIncrementorRole (NSString*)':
    'prefix': 'NSAccessibilityIncrementorRole'
    'body': 'NSAccessibilityIncrementorRole'
  'NSAccessibilityIndexAttribute (NSString*)':
    'prefix': 'NSAccessibilityIndexAttribute'
    'body': 'NSAccessibilityIndexAttribute'
  'NSAccessibilityInsertionPointLineNumberAttribute (NSString*)':
    'prefix': 'NSAccessibilityInsertionPointLineNumberAttribute'
    'body': 'NSAccessibilityInsertionPointLineNumberAttribute'
  'NSAccessibilityLabelUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityLabelUIElementsAttribute'
    'body': 'NSAccessibilityLabelUIElementsAttribute'
  'NSAccessibilityLabelValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityLabelValueAttribute'
    'body': 'NSAccessibilityLabelValueAttribute'
  'NSAccessibilityLayoutAreaRole (NSString*)':
    'prefix': 'NSAccessibilityLayoutAreaRole'
    'body': 'NSAccessibilityLayoutAreaRole'
  'NSAccessibilityLayoutChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityLayoutChangedNotification'
    'body': 'NSAccessibilityLayoutChangedNotification'
  'NSAccessibilityLayoutItemRole (NSString*)':
    'prefix': 'NSAccessibilityLayoutItemRole'
    'body': 'NSAccessibilityLayoutItemRole'
  'NSAccessibilityLayoutPointForScreenPointParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityLayoutPointForScreenPointParameterizedAttribute'
    'body': 'NSAccessibilityLayoutPointForScreenPointParameterizedAttribute'
  'NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute'
    'body': 'NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute'
  'NSAccessibilityLeftTabStopMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityLeftTabStopMarkerTypeValue'
    'body': 'NSAccessibilityLeftTabStopMarkerTypeValue'
  'NSAccessibilityLevelIndicatorRole (NSString*)':
    'prefix': 'NSAccessibilityLevelIndicatorRole'
    'body': 'NSAccessibilityLevelIndicatorRole'
  'NSAccessibilityLineForIndexParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityLineForIndexParameterizedAttribute'
    'body': 'NSAccessibilityLineForIndexParameterizedAttribute'
  'NSAccessibilityLinkRole (NSString*)':
    'prefix': 'NSAccessibilityLinkRole'
    'body': 'NSAccessibilityLinkRole'
  'NSAccessibilityLinkTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityLinkTextAttribute'
    'body': 'NSAccessibilityLinkTextAttribute'
  'NSAccessibilityLinkedUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityLinkedUIElementsAttribute'
    'body': 'NSAccessibilityLinkedUIElementsAttribute'
  'NSAccessibilityListRole (NSString*)':
    'prefix': 'NSAccessibilityListRole'
    'body': 'NSAccessibilityListRole'
  'NSAccessibilityMainAttribute (NSString*)':
    'prefix': 'NSAccessibilityMainAttribute'
    'body': 'NSAccessibilityMainAttribute'
  'NSAccessibilityMainWindowAttribute (NSString*)':
    'prefix': 'NSAccessibilityMainWindowAttribute'
    'body': 'NSAccessibilityMainWindowAttribute'
  'NSAccessibilityMainWindowChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityMainWindowChangedNotification'
    'body': 'NSAccessibilityMainWindowChangedNotification'
  'NSAccessibilityMarkedMisspelledTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkedMisspelledTextAttribute'
    'body': 'NSAccessibilityMarkedMisspelledTextAttribute'
  'NSAccessibilityMarkerGroupUIElementAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkerGroupUIElementAttribute'
    'body': 'NSAccessibilityMarkerGroupUIElementAttribute'
  'NSAccessibilityMarkerTypeAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkerTypeAttribute'
    'body': 'NSAccessibilityMarkerTypeAttribute'
  'NSAccessibilityMarkerTypeDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkerTypeDescriptionAttribute'
    'body': 'NSAccessibilityMarkerTypeDescriptionAttribute'
  'NSAccessibilityMarkerUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkerUIElementsAttribute'
    'body': 'NSAccessibilityMarkerUIElementsAttribute'
  'NSAccessibilityMarkerValuesAttribute (NSString*)':
    'prefix': 'NSAccessibilityMarkerValuesAttribute'
    'body': 'NSAccessibilityMarkerValuesAttribute'
  'NSAccessibilityMatteContentUIElementAttribute (NSString*)':
    'prefix': 'NSAccessibilityMatteContentUIElementAttribute'
    'body': 'NSAccessibilityMatteContentUIElementAttribute'
  'NSAccessibilityMatteHoleAttribute (NSString*)':
    'prefix': 'NSAccessibilityMatteHoleAttribute'
    'body': 'NSAccessibilityMatteHoleAttribute'
  'NSAccessibilityMatteRole (NSString*)':
    'prefix': 'NSAccessibilityMatteRole'
    'body': 'NSAccessibilityMatteRole'
  'NSAccessibilityMaxValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityMaxValueAttribute'
    'body': 'NSAccessibilityMaxValueAttribute'
  'NSAccessibilityMenuBarAttribute (NSString*)':
    'prefix': 'NSAccessibilityMenuBarAttribute'
    'body': 'NSAccessibilityMenuBarAttribute'
  'NSAccessibilityMenuBarRole (NSString*)':
    'prefix': 'NSAccessibilityMenuBarRole'
    'body': 'NSAccessibilityMenuBarRole'
  'NSAccessibilityMenuButtonRole (NSString*)':
    'prefix': 'NSAccessibilityMenuButtonRole'
    'body': 'NSAccessibilityMenuButtonRole'
  'NSAccessibilityMenuItemRole (NSString*)':
    'prefix': 'NSAccessibilityMenuItemRole'
    'body': 'NSAccessibilityMenuItemRole'
  'NSAccessibilityMenuRole (NSString*)':
    'prefix': 'NSAccessibilityMenuRole'
    'body': 'NSAccessibilityMenuRole'
  'NSAccessibilityMinValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityMinValueAttribute'
    'body': 'NSAccessibilityMinValueAttribute'
  'NSAccessibilityMinimizeButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityMinimizeButtonAttribute'
    'body': 'NSAccessibilityMinimizeButtonAttribute'
  'NSAccessibilityMinimizeButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilityMinimizeButtonSubrole'
    'body': 'NSAccessibilityMinimizeButtonSubrole'
  'NSAccessibilityMinimizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityMinimizedAttribute'
    'body': 'NSAccessibilityMinimizedAttribute'
  'NSAccessibilityMisspelledTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityMisspelledTextAttribute'
    'body': 'NSAccessibilityMisspelledTextAttribute'
  'NSAccessibilityModalAttribute (NSString*)':
    'prefix': 'NSAccessibilityModalAttribute'
    'body': 'NSAccessibilityModalAttribute'
  'NSAccessibilityMovedNotification (NSString*)':
    'prefix': 'NSAccessibilityMovedNotification'
    'body': 'NSAccessibilityMovedNotification'
  'NSAccessibilityNextContentsAttribute (NSString*)':
    'prefix': 'NSAccessibilityNextContentsAttribute'
    'body': 'NSAccessibilityNextContentsAttribute'
  'NSAccessibilityNumberOfCharactersAttribute (NSString*)':
    'prefix': 'NSAccessibilityNumberOfCharactersAttribute'
    'body': 'NSAccessibilityNumberOfCharactersAttribute'
  'NSAccessibilityOrderedByRowAttribute (NSString*)':
    'prefix': 'NSAccessibilityOrderedByRowAttribute'
    'body': 'NSAccessibilityOrderedByRowAttribute'
  'NSAccessibilityOrientationAttribute (NSString*)':
    'prefix': 'NSAccessibilityOrientationAttribute'
    'body': 'NSAccessibilityOrientationAttribute'
  'NSAccessibilityOutlineRole (NSString*)':
    'prefix': 'NSAccessibilityOutlineRole'
    'body': 'NSAccessibilityOutlineRole'
  'NSAccessibilityOutlineRowSubrole (NSString*)':
    'prefix': 'NSAccessibilityOutlineRowSubrole'
    'body': 'NSAccessibilityOutlineRowSubrole'
  'NSAccessibilityOverflowButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityOverflowButtonAttribute'
    'body': 'NSAccessibilityOverflowButtonAttribute'
  'NSAccessibilityParentAttribute (NSString*)':
    'prefix': 'NSAccessibilityParentAttribute'
    'body': 'NSAccessibilityParentAttribute'
  'NSAccessibilityPicasUnitValue (NSString*)':
    'prefix': 'NSAccessibilityPicasUnitValue'
    'body': 'NSAccessibilityPicasUnitValue'
  'NSAccessibilityPickAction (NSString*)':
    'prefix': 'NSAccessibilityPickAction'
    'body': 'NSAccessibilityPickAction'
  'NSAccessibilityPlaceholderValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityPlaceholderValueAttribute'
    'body': 'NSAccessibilityPlaceholderValueAttribute'
  'NSAccessibilityPointsUnitValue (NSString*)':
    'prefix': 'NSAccessibilityPointsUnitValue'
    'body': 'NSAccessibilityPointsUnitValue'
  'NSAccessibilityPopUpButtonRole (NSString*)':
    'prefix': 'NSAccessibilityPopUpButtonRole'
    'body': 'NSAccessibilityPopUpButtonRole'
  'NSAccessibilityPopoverRole (NSString*)':
    'prefix': 'NSAccessibilityPopoverRole'
    'body': 'NSAccessibilityPopoverRole'
  'NSAccessibilityPositionAttribute (NSString*)':
    'prefix': 'NSAccessibilityPositionAttribute'
    'body': 'NSAccessibilityPositionAttribute'
  'NSAccessibilityPressAction (NSString*)':
    'prefix': 'NSAccessibilityPressAction'
    'body': 'NSAccessibilityPressAction'
  'NSAccessibilityPreviousContentsAttribute (NSString*)':
    'prefix': 'NSAccessibilityPreviousContentsAttribute'
    'body': 'NSAccessibilityPreviousContentsAttribute'
  'NSAccessibilityPriorityKey (NSString*)':
    'prefix': 'NSAccessibilityPriorityKey'
    'body': 'NSAccessibilityPriorityKey'
  'NSAccessibilityProgressIndicatorRole (NSString*)':
    'prefix': 'NSAccessibilityProgressIndicatorRole'
    'body': 'NSAccessibilityProgressIndicatorRole'
  'NSAccessibilityProxyAttribute (NSString*)':
    'prefix': 'NSAccessibilityProxyAttribute'
    'body': 'NSAccessibilityProxyAttribute'
  'NSAccessibilityRTFForRangeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityRTFForRangeParameterizedAttribute'
    'body': 'NSAccessibilityRTFForRangeParameterizedAttribute'
  'NSAccessibilityRadioButtonRole (NSString*)':
    'prefix': 'NSAccessibilityRadioButtonRole'
    'body': 'NSAccessibilityRadioButtonRole'
  'NSAccessibilityRadioGroupRole (NSString*)':
    'prefix': 'NSAccessibilityRadioGroupRole'
    'body': 'NSAccessibilityRadioGroupRole'
  'NSAccessibilityRaiseAction (NSString*)':
    'prefix': 'NSAccessibilityRaiseAction'
    'body': 'NSAccessibilityRaiseAction'
  'NSAccessibilityRangeForIndexParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityRangeForIndexParameterizedAttribute'
    'body': 'NSAccessibilityRangeForIndexParameterizedAttribute'
  'NSAccessibilityRangeForLineParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityRangeForLineParameterizedAttribute'
    'body': 'NSAccessibilityRangeForLineParameterizedAttribute'
  'NSAccessibilityRangeForPositionParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityRangeForPositionParameterizedAttribute'
    'body': 'NSAccessibilityRangeForPositionParameterizedAttribute'
  'NSAccessibilityRatingIndicatorSubrole (NSString*)':
    'prefix': 'NSAccessibilityRatingIndicatorSubrole'
    'body': 'NSAccessibilityRatingIndicatorSubrole'
  'NSAccessibilityRelevanceIndicatorRole (NSString*)':
    'prefix': 'NSAccessibilityRelevanceIndicatorRole'
    'body': 'NSAccessibilityRelevanceIndicatorRole'
  'NSAccessibilityResizedNotification (NSString*)':
    'prefix': 'NSAccessibilityResizedNotification'
    'body': 'NSAccessibilityResizedNotification'
  'NSAccessibilityRightTabStopMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityRightTabStopMarkerTypeValue'
    'body': 'NSAccessibilityRightTabStopMarkerTypeValue'
  'NSAccessibilityRoleAttribute (NSString*)':
    'prefix': 'NSAccessibilityRoleAttribute'
    'body': 'NSAccessibilityRoleAttribute'
  'NSAccessibilityRoleDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityRoleDescriptionAttribute'
    'body': 'NSAccessibilityRoleDescriptionAttribute'
  'NSAccessibilityRowCollapsedNotification (NSString*)':
    'prefix': 'NSAccessibilityRowCollapsedNotification'
    'body': 'NSAccessibilityRowCollapsedNotification'
  'NSAccessibilityRowCountAttribute (NSString*)':
    'prefix': 'NSAccessibilityRowCountAttribute'
    'body': 'NSAccessibilityRowCountAttribute'
  'NSAccessibilityRowCountChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityRowCountChangedNotification'
    'body': 'NSAccessibilityRowCountChangedNotification'
  'NSAccessibilityRowExpandedNotification (NSString*)':
    'prefix': 'NSAccessibilityRowExpandedNotification'
    'body': 'NSAccessibilityRowExpandedNotification'
  'NSAccessibilityRowHeaderUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityRowHeaderUIElementsAttribute'
    'body': 'NSAccessibilityRowHeaderUIElementsAttribute'
  'NSAccessibilityRowIndexRangeAttribute (NSString*)':
    'prefix': 'NSAccessibilityRowIndexRangeAttribute'
    'body': 'NSAccessibilityRowIndexRangeAttribute'
  'NSAccessibilityRowRole (NSString*)':
    'prefix': 'NSAccessibilityRowRole'
    'body': 'NSAccessibilityRowRole'
  'NSAccessibilityRowsAttribute (NSString*)':
    'prefix': 'NSAccessibilityRowsAttribute'
    'body': 'NSAccessibilityRowsAttribute'
  'NSAccessibilityRulerMarkerRole (NSString*)':
    'prefix': 'NSAccessibilityRulerMarkerRole'
    'body': 'NSAccessibilityRulerMarkerRole'
  'NSAccessibilityRulerRole (NSString*)':
    'prefix': 'NSAccessibilityRulerRole'
    'body': 'NSAccessibilityRulerRole'
  'NSAccessibilityScreenPointForLayoutPointParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityScreenPointForLayoutPointParameterizedAttribute'
    'body': 'NSAccessibilityScreenPointForLayoutPointParameterizedAttribute'
  'NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute'
    'body': 'NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute'
  'NSAccessibilityScrollAreaRole (NSString*)':
    'prefix': 'NSAccessibilityScrollAreaRole'
    'body': 'NSAccessibilityScrollAreaRole'
  'NSAccessibilityScrollBarRole (NSString*)':
    'prefix': 'NSAccessibilityScrollBarRole'
    'body': 'NSAccessibilityScrollBarRole'
  'NSAccessibilitySearchButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilitySearchButtonAttribute'
    'body': 'NSAccessibilitySearchButtonAttribute'
  'NSAccessibilitySearchFieldSubrole (NSString*)':
    'prefix': 'NSAccessibilitySearchFieldSubrole'
    'body': 'NSAccessibilitySearchFieldSubrole'
  'NSAccessibilitySearchMenuAttribute (NSString*)':
    'prefix': 'NSAccessibilitySearchMenuAttribute'
    'body': 'NSAccessibilitySearchMenuAttribute'
  'NSAccessibilitySecureTextFieldSubrole (NSString*)':
    'prefix': 'NSAccessibilitySecureTextFieldSubrole'
    'body': 'NSAccessibilitySecureTextFieldSubrole'
  'NSAccessibilitySelectedAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedAttribute'
    'body': 'NSAccessibilitySelectedAttribute'
  'NSAccessibilitySelectedCellsAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedCellsAttribute'
    'body': 'NSAccessibilitySelectedCellsAttribute'
  'NSAccessibilitySelectedCellsChangedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedCellsChangedNotification'
    'body': 'NSAccessibilitySelectedCellsChangedNotification'
  'NSAccessibilitySelectedChildrenAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedChildrenAttribute'
    'body': 'NSAccessibilitySelectedChildrenAttribute'
  'NSAccessibilitySelectedChildrenChangedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedChildrenChangedNotification'
    'body': 'NSAccessibilitySelectedChildrenChangedNotification'
  'NSAccessibilitySelectedChildrenMovedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedChildrenMovedNotification'
    'body': 'NSAccessibilitySelectedChildrenMovedNotification'
  'NSAccessibilitySelectedColumnsAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedColumnsAttribute'
    'body': 'NSAccessibilitySelectedColumnsAttribute'
  'NSAccessibilitySelectedColumnsChangedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedColumnsChangedNotification'
    'body': 'NSAccessibilitySelectedColumnsChangedNotification'
  'NSAccessibilitySelectedRowsAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedRowsAttribute'
    'body': 'NSAccessibilitySelectedRowsAttribute'
  'NSAccessibilitySelectedRowsChangedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedRowsChangedNotification'
    'body': 'NSAccessibilitySelectedRowsChangedNotification'
  'NSAccessibilitySelectedTextAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedTextAttribute'
    'body': 'NSAccessibilitySelectedTextAttribute'
  'NSAccessibilitySelectedTextChangedNotification (NSString*)':
    'prefix': 'NSAccessibilitySelectedTextChangedNotification'
    'body': 'NSAccessibilitySelectedTextChangedNotification'
  'NSAccessibilitySelectedTextRangeAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedTextRangeAttribute'
    'body': 'NSAccessibilitySelectedTextRangeAttribute'
  'NSAccessibilitySelectedTextRangesAttribute (NSString*)':
    'prefix': 'NSAccessibilitySelectedTextRangesAttribute'
    'body': 'NSAccessibilitySelectedTextRangesAttribute'
  'NSAccessibilityServesAsTitleForUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilityServesAsTitleForUIElementsAttribute'
    'body': 'NSAccessibilityServesAsTitleForUIElementsAttribute'
  'NSAccessibilityShadowTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityShadowTextAttribute'
    'body': 'NSAccessibilityShadowTextAttribute'
  'NSAccessibilitySharedCharacterRangeAttribute (NSString*)':
    'prefix': 'NSAccessibilitySharedCharacterRangeAttribute'
    'body': 'NSAccessibilitySharedCharacterRangeAttribute'
  'NSAccessibilitySharedTextUIElementsAttribute (NSString*)':
    'prefix': 'NSAccessibilitySharedTextUIElementsAttribute'
    'body': 'NSAccessibilitySharedTextUIElementsAttribute'
  'NSAccessibilitySheetCreatedNotification (NSString*)':
    'prefix': 'NSAccessibilitySheetCreatedNotification'
    'body': 'NSAccessibilitySheetCreatedNotification'
  'NSAccessibilitySheetRole (NSString*)':
    'prefix': 'NSAccessibilitySheetRole'
    'body': 'NSAccessibilitySheetRole'
  'NSAccessibilityShowAlternateUIAction (NSString*)':
    'prefix': 'NSAccessibilityShowAlternateUIAction'
    'body': 'NSAccessibilityShowAlternateUIAction'
  'NSAccessibilityShowDefaultUIAction (NSString*)':
    'prefix': 'NSAccessibilityShowDefaultUIAction'
    'body': 'NSAccessibilityShowDefaultUIAction'
  'NSAccessibilityShowMenuAction (NSString*)':
    'prefix': 'NSAccessibilityShowMenuAction'
    'body': 'NSAccessibilityShowMenuAction'
  'NSAccessibilityShownMenuAttribute (NSString*)':
    'prefix': 'NSAccessibilityShownMenuAttribute'
    'body': 'NSAccessibilityShownMenuAttribute'
  'NSAccessibilitySizeAttribute (NSString*)':
    'prefix': 'NSAccessibilitySizeAttribute'
    'body': 'NSAccessibilitySizeAttribute'
  'NSAccessibilitySliderRole (NSString*)':
    'prefix': 'NSAccessibilitySliderRole'
    'body': 'NSAccessibilitySliderRole'
  'NSAccessibilitySortButtonRole (NSString*)':
    'prefix': 'NSAccessibilitySortButtonRole'
    'body': 'NSAccessibilitySortButtonRole'
  'NSAccessibilitySortButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilitySortButtonSubrole'
    'body': 'NSAccessibilitySortButtonSubrole'
  'NSAccessibilitySortDirectionAttribute (NSString*)':
    'prefix': 'NSAccessibilitySortDirectionAttribute'
    'body': 'NSAccessibilitySortDirectionAttribute'
  'NSAccessibilitySplitGroupRole (NSString*)':
    'prefix': 'NSAccessibilitySplitGroupRole'
    'body': 'NSAccessibilitySplitGroupRole'
  'NSAccessibilitySplitterRole (NSString*)':
    'prefix': 'NSAccessibilitySplitterRole'
    'body': 'NSAccessibilitySplitterRole'
  'NSAccessibilitySplittersAttribute (NSString*)':
    'prefix': 'NSAccessibilitySplittersAttribute'
    'body': 'NSAccessibilitySplittersAttribute'
  'NSAccessibilityStandardWindowSubrole (NSString*)':
    'prefix': 'NSAccessibilityStandardWindowSubrole'
    'body': 'NSAccessibilityStandardWindowSubrole'
  'NSAccessibilityStaticTextRole (NSString*)':
    'prefix': 'NSAccessibilityStaticTextRole'
    'body': 'NSAccessibilityStaticTextRole'
  'NSAccessibilityStrikethroughColorTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityStrikethroughColorTextAttribute'
    'body': 'NSAccessibilityStrikethroughColorTextAttribute'
  'NSAccessibilityStrikethroughTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityStrikethroughTextAttribute'
    'body': 'NSAccessibilityStrikethroughTextAttribute'
  'NSAccessibilityStringForRangeParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityStringForRangeParameterizedAttribute'
    'body': 'NSAccessibilityStringForRangeParameterizedAttribute'
  'NSAccessibilityStyleRangeForIndexParameterizedAttribute (NSString*)':
    'prefix': 'NSAccessibilityStyleRangeForIndexParameterizedAttribute'
    'body': 'NSAccessibilityStyleRangeForIndexParameterizedAttribute'
  'NSAccessibilitySubroleAttribute (NSString*)':
    'prefix': 'NSAccessibilitySubroleAttribute'
    'body': 'NSAccessibilitySubroleAttribute'
  'NSAccessibilitySuperscriptTextAttribute (NSString*)':
    'prefix': 'NSAccessibilitySuperscriptTextAttribute'
    'body': 'NSAccessibilitySuperscriptTextAttribute'
  'NSAccessibilitySwitchSubrole (NSString*)':
    'prefix': 'NSAccessibilitySwitchSubrole'
    'body': 'NSAccessibilitySwitchSubrole'
  'NSAccessibilitySystemDialogSubrole (NSString*)':
    'prefix': 'NSAccessibilitySystemDialogSubrole'
    'body': 'NSAccessibilitySystemDialogSubrole'
  'NSAccessibilitySystemFloatingWindowSubrole (NSString*)':
    'prefix': 'NSAccessibilitySystemFloatingWindowSubrole'
    'body': 'NSAccessibilitySystemFloatingWindowSubrole'
  'NSAccessibilitySystemWideRole (NSString*)':
    'prefix': 'NSAccessibilitySystemWideRole'
    'body': 'NSAccessibilitySystemWideRole'
  'NSAccessibilityTabGroupRole (NSString*)':
    'prefix': 'NSAccessibilityTabGroupRole'
    'body': 'NSAccessibilityTabGroupRole'
  'NSAccessibilityTableRole (NSString*)':
    'prefix': 'NSAccessibilityTableRole'
    'body': 'NSAccessibilityTableRole'
  'NSAccessibilityTableRowSubrole (NSString*)':
    'prefix': 'NSAccessibilityTableRowSubrole'
    'body': 'NSAccessibilityTableRowSubrole'
  'NSAccessibilityTabsAttribute (NSString*)':
    'prefix': 'NSAccessibilityTabsAttribute'
    'body': 'NSAccessibilityTabsAttribute'
  'NSAccessibilityTailIndentMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityTailIndentMarkerTypeValue'
    'body': 'NSAccessibilityTailIndentMarkerTypeValue'
  'NSAccessibilityTextAreaRole (NSString*)':
    'prefix': 'NSAccessibilityTextAreaRole'
    'body': 'NSAccessibilityTextAreaRole'
  'NSAccessibilityTextAttachmentSubrole (NSString*)':
    'prefix': 'NSAccessibilityTextAttachmentSubrole'
    'body': 'NSAccessibilityTextAttachmentSubrole'
  'NSAccessibilityTextFieldRole (NSString*)':
    'prefix': 'NSAccessibilityTextFieldRole'
    'body': 'NSAccessibilityTextFieldRole'
  'NSAccessibilityTextLinkSubrole (NSString*)':
    'prefix': 'NSAccessibilityTextLinkSubrole'
    'body': 'NSAccessibilityTextLinkSubrole'
  'NSAccessibilityTimelineSubrole (NSString*)':
    'prefix': 'NSAccessibilityTimelineSubrole'
    'body': 'NSAccessibilityTimelineSubrole'
  'NSAccessibilityTitleAttribute (NSString*)':
    'prefix': 'NSAccessibilityTitleAttribute'
    'body': 'NSAccessibilityTitleAttribute'
  'NSAccessibilityTitleChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityTitleChangedNotification'
    'body': 'NSAccessibilityTitleChangedNotification'
  'NSAccessibilityTitleUIElementAttribute (NSString*)':
    'prefix': 'NSAccessibilityTitleUIElementAttribute'
    'body': 'NSAccessibilityTitleUIElementAttribute'
  'NSAccessibilityToggleSubrole (NSString*)':
    'prefix': 'NSAccessibilityToggleSubrole'
    'body': 'NSAccessibilityToggleSubrole'
  'NSAccessibilityToolbarButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityToolbarButtonAttribute'
    'body': 'NSAccessibilityToolbarButtonAttribute'
  'NSAccessibilityToolbarButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilityToolbarButtonSubrole'
    'body': 'NSAccessibilityToolbarButtonSubrole'
  'NSAccessibilityToolbarRole (NSString*)':
    'prefix': 'NSAccessibilityToolbarRole'
    'body': 'NSAccessibilityToolbarRole'
  'NSAccessibilityTopLevelUIElementAttribute (NSString*)':
    'prefix': 'NSAccessibilityTopLevelUIElementAttribute'
    'body': 'NSAccessibilityTopLevelUIElementAttribute'
  'NSAccessibilityUIElementDestroyedNotification (NSString*)':
    'prefix': 'NSAccessibilityUIElementDestroyedNotification'
    'body': 'NSAccessibilityUIElementDestroyedNotification'
  'NSAccessibilityUIElementsKey (NSString*)':
    'prefix': 'NSAccessibilityUIElementsKey'
    'body': 'NSAccessibilityUIElementsKey'
  'NSAccessibilityURLAttribute (NSString*)':
    'prefix': 'NSAccessibilityURLAttribute'
    'body': 'NSAccessibilityURLAttribute'
  'NSAccessibilityUnderlineColorTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityUnderlineColorTextAttribute'
    'body': 'NSAccessibilityUnderlineColorTextAttribute'
  'NSAccessibilityUnderlineTextAttribute (NSString*)':
    'prefix': 'NSAccessibilityUnderlineTextAttribute'
    'body': 'NSAccessibilityUnderlineTextAttribute'
  'NSAccessibilityUnitDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityUnitDescriptionAttribute'
    'body': 'NSAccessibilityUnitDescriptionAttribute'
  'NSAccessibilityUnitsAttribute (NSString*)':
    'prefix': 'NSAccessibilityUnitsAttribute'
    'body': 'NSAccessibilityUnitsAttribute'
  'NSAccessibilityUnitsChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityUnitsChangedNotification'
    'body': 'NSAccessibilityUnitsChangedNotification'
  'NSAccessibilityUnknownMarkerTypeValue (NSString*)':
    'prefix': 'NSAccessibilityUnknownMarkerTypeValue'
    'body': 'NSAccessibilityUnknownMarkerTypeValue'
  'NSAccessibilityUnknownOrientationValue (NSString*)':
    'prefix': 'NSAccessibilityUnknownOrientationValue'
    'body': 'NSAccessibilityUnknownOrientationValue'
  'NSAccessibilityUnknownRole (NSString*)':
    'prefix': 'NSAccessibilityUnknownRole'
    'body': 'NSAccessibilityUnknownRole'
  'NSAccessibilityUnknownSortDirectionValue (NSString*)':
    'prefix': 'NSAccessibilityUnknownSortDirectionValue'
    'body': 'NSAccessibilityUnknownSortDirectionValue'
  'NSAccessibilityUnknownSubrole (NSString*)':
    'prefix': 'NSAccessibilityUnknownSubrole'
    'body': 'NSAccessibilityUnknownSubrole'
  'NSAccessibilityUnknownUnitValue (NSString*)':
    'prefix': 'NSAccessibilityUnknownUnitValue'
    'body': 'NSAccessibilityUnknownUnitValue'
  'NSAccessibilityValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityValueAttribute'
    'body': 'NSAccessibilityValueAttribute'
  'NSAccessibilityValueChangedNotification (NSString*)':
    'prefix': 'NSAccessibilityValueChangedNotification'
    'body': 'NSAccessibilityValueChangedNotification'
  'NSAccessibilityValueDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityValueDescriptionAttribute'
    'body': 'NSAccessibilityValueDescriptionAttribute'
  'NSAccessibilityValueIndicatorRole (NSString*)':
    'prefix': 'NSAccessibilityValueIndicatorRole'
    'body': 'NSAccessibilityValueIndicatorRole'
  'NSAccessibilityVerticalOrientationValue (NSString*)':
    'prefix': 'NSAccessibilityVerticalOrientationValue'
    'body': 'NSAccessibilityVerticalOrientationValue'
  'NSAccessibilityVerticalScrollBarAttribute (NSString*)':
    'prefix': 'NSAccessibilityVerticalScrollBarAttribute'
    'body': 'NSAccessibilityVerticalScrollBarAttribute'
  'NSAccessibilityVerticalUnitDescriptionAttribute (NSString*)':
    'prefix': 'NSAccessibilityVerticalUnitDescriptionAttribute'
    'body': 'NSAccessibilityVerticalUnitDescriptionAttribute'
  'NSAccessibilityVerticalUnitsAttribute (NSString*)':
    'prefix': 'NSAccessibilityVerticalUnitsAttribute'
    'body': 'NSAccessibilityVerticalUnitsAttribute'
  'NSAccessibilityVisibleCellsAttribute (NSString*)':
    'prefix': 'NSAccessibilityVisibleCellsAttribute'
    'body': 'NSAccessibilityVisibleCellsAttribute'
  'NSAccessibilityVisibleCharacterRangeAttribute (NSString*)':
    'prefix': 'NSAccessibilityVisibleCharacterRangeAttribute'
    'body': 'NSAccessibilityVisibleCharacterRangeAttribute'
  'NSAccessibilityVisibleChildrenAttribute (NSString*)':
    'prefix': 'NSAccessibilityVisibleChildrenAttribute'
    'body': 'NSAccessibilityVisibleChildrenAttribute'
  'NSAccessibilityVisibleColumnsAttribute (NSString*)':
    'prefix': 'NSAccessibilityVisibleColumnsAttribute'
    'body': 'NSAccessibilityVisibleColumnsAttribute'
  'NSAccessibilityVisibleNameKey (NSString*)':
    'prefix': 'NSAccessibilityVisibleNameKey'
    'body': 'NSAccessibilityVisibleNameKey'
  'NSAccessibilityVisibleRowsAttribute (NSString*)':
    'prefix': 'NSAccessibilityVisibleRowsAttribute'
    'body': 'NSAccessibilityVisibleRowsAttribute'
  'NSAccessibilityWarningValueAttribute (NSString*)':
    'prefix': 'NSAccessibilityWarningValueAttribute'
    'body': 'NSAccessibilityWarningValueAttribute'
  'NSAccessibilityWindowAttribute (NSString*)':
    'prefix': 'NSAccessibilityWindowAttribute'
    'body': 'NSAccessibilityWindowAttribute'
  'NSAccessibilityWindowCreatedNotification (NSString*)':
    'prefix': 'NSAccessibilityWindowCreatedNotification'
    'body': 'NSAccessibilityWindowCreatedNotification'
  'NSAccessibilityWindowDeminiaturizedNotification (NSString*)':
    'prefix': 'NSAccessibilityWindowDeminiaturizedNotification'
    'body': 'NSAccessibilityWindowDeminiaturizedNotification'
  'NSAccessibilityWindowMiniaturizedNotification (NSString*)':
    'prefix': 'NSAccessibilityWindowMiniaturizedNotification'
    'body': 'NSAccessibilityWindowMiniaturizedNotification'
  'NSAccessibilityWindowMovedNotification (NSString*)':
    'prefix': 'NSAccessibilityWindowMovedNotification'
    'body': 'NSAccessibilityWindowMovedNotification'
  'NSAccessibilityWindowResizedNotification (NSString*)':
    'prefix': 'NSAccessibilityWindowResizedNotification'
    'body': 'NSAccessibilityWindowResizedNotification'
  'NSAccessibilityWindowRole (NSString*)':
    'prefix': 'NSAccessibilityWindowRole'
    'body': 'NSAccessibilityWindowRole'
  'NSAccessibilityWindowsAttribute (NSString*)':
    'prefix': 'NSAccessibilityWindowsAttribute'
    'body': 'NSAccessibilityWindowsAttribute'
  'NSAccessibilityZoomButtonAttribute (NSString*)':
    'prefix': 'NSAccessibilityZoomButtonAttribute'
    'body': 'NSAccessibilityZoomButtonAttribute'
  'NSAccessibilityZoomButtonSubrole (NSString*)':
    'prefix': 'NSAccessibilityZoomButtonSubrole'
    'body': 'NSAccessibilityZoomButtonSubrole'
  'NSAlignmentBinding (NSString*)':
    'prefix': 'NSAlignmentBinding'
    'body': 'NSAlignmentBinding'
  'NSAllRomanInputSourcesLocaleIdentifier (NSString*)':
    'prefix': 'NSAllRomanInputSourcesLocaleIdentifier'
    'body': 'NSAllRomanInputSourcesLocaleIdentifier'
  'NSAllowsEditingMultipleValuesSelectionBindingOption (NSString*)':
    'prefix': 'NSAllowsEditingMultipleValuesSelectionBindingOption'
    'body': 'NSAllowsEditingMultipleValuesSelectionBindingOption'
  'NSAllowsNullArgumentBindingOption (NSString*)':
    'prefix': 'NSAllowsNullArgumentBindingOption'
    'body': 'NSAllowsNullArgumentBindingOption'
  'NSAlternateImageBinding (NSString*)':
    'prefix': 'NSAlternateImageBinding'
    'body': 'NSAlternateImageBinding'
  'NSAlternateTitleBinding (NSString*)':
    'prefix': 'NSAlternateTitleBinding'
    'body': 'NSAlternateTitleBinding'
  'NSAlwaysPresentsApplicationModalAlertsBindingOption (NSString*)':
    'prefix': 'NSAlwaysPresentsApplicationModalAlertsBindingOption'
    'body': 'NSAlwaysPresentsApplicationModalAlertsBindingOption'
  'NSAnimateBinding (NSString*)':
    'prefix': 'NSAnimateBinding'
    'body': 'NSAnimateBinding'
  'NSAnimationDelayBinding (NSString*)':
    'prefix': 'NSAnimationDelayBinding'
    'body': 'NSAnimationDelayBinding'
  'NSAnimationProgressMark (NSString*)':
    'prefix': 'NSAnimationProgressMark'
    'body': 'NSAnimationProgressMark'
  'NSAnimationProgressMarkNotification (NSString*)':
    'prefix': 'NSAnimationProgressMarkNotification'
    'body': 'NSAnimationProgressMarkNotification'
  'NSAnimationTriggerOrderIn (NSString*)':
    'prefix': 'NSAnimationTriggerOrderIn'
    'body': 'NSAnimationTriggerOrderIn'
  'NSAnimationTriggerOrderOut (NSString*)':
    'prefix': 'NSAnimationTriggerOrderOut'
    'body': 'NSAnimationTriggerOrderOut'
  'NSAntialiasThresholdChangedNotification (NSString*)':
    'prefix': 'NSAntialiasThresholdChangedNotification'
    'body': 'NSAntialiasThresholdChangedNotification'
  'NSApp (id)':
    'prefix': 'NSApp'
    'body': 'NSApp'
  'NSAppKitIgnoredException (NSString*)':
    'prefix': 'NSAppKitIgnoredException'
    'body': 'NSAppKitIgnoredException'
  'NSAppKitVersionNumber (double)':
    'prefix': 'NSAppKitVersionNumber'
    'body': 'NSAppKitVersionNumber'
  'NSAppKitVirtualMemoryException (NSString*)':
    'prefix': 'NSAppKitVirtualMemoryException'
    'body': 'NSAppKitVirtualMemoryException'
  'NSAppearanceNameAqua (NSString*)':
    'prefix': 'NSAppearanceNameAqua'
    'body': 'NSAppearanceNameAqua'
  'NSAppearanceNameLightContent (NSString*)':
    'prefix': 'NSAppearanceNameLightContent'
    'body': 'NSAppearanceNameLightContent'
  'NSApplicationDidBecomeActiveNotification (NSString*)':
    'prefix': 'NSApplicationDidBecomeActiveNotification'
    'body': 'NSApplicationDidBecomeActiveNotification'
  'NSApplicationDidChangeOcclusionStateNotification (NSString*)':
    'prefix': 'NSApplicationDidChangeOcclusionStateNotification'
    'body': 'NSApplicationDidChangeOcclusionStateNotification'
  'NSApplicationDidChangeScreenParametersNotification (NSString*)':
    'prefix': 'NSApplicationDidChangeScreenParametersNotification'
    'body': 'NSApplicationDidChangeScreenParametersNotification'
  'NSApplicationDidFinishLaunchingNotification (NSString*)':
    'prefix': 'NSApplicationDidFinishLaunchingNotification'
    'body': 'NSApplicationDidFinishLaunchingNotification'
  'NSApplicationDidFinishRestoringWindowsNotification (NSString*)':
    'prefix': 'NSApplicationDidFinishRestoringWindowsNotification'
    'body': 'NSApplicationDidFinishRestoringWindowsNotification'
  'NSApplicationDidHideNotification (NSString*)':
    'prefix': 'NSApplicationDidHideNotification'
    'body': 'NSApplicationDidHideNotification'
  'NSApplicationDidResignActiveNotification (NSString*)':
    'prefix': 'NSApplicationDidResignActiveNotification'
    'body': 'NSApplicationDidResignActiveNotification'
  'NSApplicationDidUnhideNotification (NSString*)':
    'prefix': 'NSApplicationDidUnhideNotification'
    'body': 'NSApplicationDidUnhideNotification'
  'NSApplicationDidUpdateNotification (NSString*)':
    'prefix': 'NSApplicationDidUpdateNotification'
    'body': 'NSApplicationDidUpdateNotification'
  'NSApplicationFileType (NSString*)':
    'prefix': 'NSApplicationFileType'
    'body': 'NSApplicationFileType'
  'NSApplicationLaunchIsDefaultLaunchKey (NSString*)':
    'prefix': 'NSApplicationLaunchIsDefaultLaunchKey'
    'body': 'NSApplicationLaunchIsDefaultLaunchKey'
  'NSApplicationLaunchRemoteNotificationKey (NSString*)':
    'prefix': 'NSApplicationLaunchRemoteNotificationKey'
    'body': 'NSApplicationLaunchRemoteNotificationKey'
  'NSApplicationLaunchUserNotificationKey (NSString*)':
    'prefix': 'NSApplicationLaunchUserNotificationKey'
    'body': 'NSApplicationLaunchUserNotificationKey'
  'NSApplicationWillBecomeActiveNotification (NSString*)':
    'prefix': 'NSApplicationWillBecomeActiveNotification'
    'body': 'NSApplicationWillBecomeActiveNotification'
  'NSApplicationWillFinishLaunchingNotification (NSString*)':
    'prefix': 'NSApplicationWillFinishLaunchingNotification'
    'body': 'NSApplicationWillFinishLaunchingNotification'
  'NSApplicationWillHideNotification (NSString*)':
    'prefix': 'NSApplicationWillHideNotification'
    'body': 'NSApplicationWillHideNotification'
  'NSApplicationWillResignActiveNotification (NSString*)':
    'prefix': 'NSApplicationWillResignActiveNotification'
    'body': 'NSApplicationWillResignActiveNotification'
  'NSApplicationWillTerminateNotification (NSString*)':
    'prefix': 'NSApplicationWillTerminateNotification'
    'body': 'NSApplicationWillTerminateNotification'
  'NSApplicationWillUnhideNotification (NSString*)':
    'prefix': 'NSApplicationWillUnhideNotification'
    'body': 'NSApplicationWillUnhideNotification'
  'NSApplicationWillUpdateNotification (NSString*)':
    'prefix': 'NSApplicationWillUpdateNotification'
    'body': 'NSApplicationWillUpdateNotification'
  'NSArgumentBinding (NSString*)':
    'prefix': 'NSArgumentBinding'
    'body': 'NSArgumentBinding'
  'NSAttachmentAttributeName (NSString*)':
    'prefix': 'NSAttachmentAttributeName'
    'body': 'NSAttachmentAttributeName'
  'NSAttributedStringBinding (NSString*)':
    'prefix': 'NSAttributedStringBinding'
    'body': 'NSAttributedStringBinding'
  'NSAuthorDocumentAttribute (NSString*)':
    'prefix': 'NSAuthorDocumentAttribute'
    'body': 'NSAuthorDocumentAttribute'
  'NSBackgroundColorAttributeName (NSString*)':
    'prefix': 'NSBackgroundColorAttributeName'
    'body': 'NSBackgroundColorAttributeName'
  'NSBackgroundColorDocumentAttribute (NSString*)':
    'prefix': 'NSBackgroundColorDocumentAttribute'
    'body': 'NSBackgroundColorDocumentAttribute'
  'NSBackingPropertyOldColorSpaceKey (NSString*)':
    'prefix': 'NSBackingPropertyOldColorSpaceKey'
    'body': 'NSBackingPropertyOldColorSpaceKey'
  'NSBackingPropertyOldScaleFactorKey (NSString*)':
    'prefix': 'NSBackingPropertyOldScaleFactorKey'
    'body': 'NSBackingPropertyOldScaleFactorKey'
  'NSBadBitmapParametersException (NSString*)':
    'prefix': 'NSBadBitmapParametersException'
    'body': 'NSBadBitmapParametersException'
  'NSBadComparisonException (NSString*)':
    'prefix': 'NSBadComparisonException'
    'body': 'NSBadComparisonException'
  'NSBadRTFColorTableException (NSString*)':
    'prefix': 'NSBadRTFColorTableException'
    'body': 'NSBadRTFColorTableException'
  'NSBadRTFDirectiveException (NSString*)':
    'prefix': 'NSBadRTFDirectiveException'
    'body': 'NSBadRTFDirectiveException'
  'NSBadRTFFontTableException (NSString*)':
    'prefix': 'NSBadRTFFontTableException'
    'body': 'NSBadRTFFontTableException'
  'NSBadRTFStyleSheetException (NSString*)':
    'prefix': 'NSBadRTFStyleSheetException'
    'body': 'NSBadRTFStyleSheetException'
  'NSBaseURLDocumentOption (NSString*)':
    'prefix': 'NSBaseURLDocumentOption'
    'body': 'NSBaseURLDocumentOption'
  'NSBaselineOffsetAttributeName (NSString*)':
    'prefix': 'NSBaselineOffsetAttributeName'
    'body': 'NSBaselineOffsetAttributeName'
  'NSBlack (CGFloat)':
    'prefix': 'NSBlack'
    'body': 'NSBlack'
  'NSBottomMarginDocumentAttribute (NSString*)':
    'prefix': 'NSBottomMarginDocumentAttribute'
    'body': 'NSBottomMarginDocumentAttribute'
  'NSBrowserColumnConfigurationDidChangeNotification (NSString*)':
    'prefix': 'NSBrowserColumnConfigurationDidChangeNotification'
    'body': 'NSBrowserColumnConfigurationDidChangeNotification'
  'NSBrowserIllegalDelegateException (NSString*)':
    'prefix': 'NSBrowserIllegalDelegateException'
    'body': 'NSBrowserIllegalDelegateException'
  'NSCalibratedBlackColorSpace (NSString*)':
    'prefix': 'NSCalibratedBlackColorSpace'
    'body': 'NSCalibratedBlackColorSpace'
  'NSCalibratedRGBColorSpace (NSString*)':
    'prefix': 'NSCalibratedRGBColorSpace'
    'body': 'NSCalibratedRGBColorSpace'
  'NSCalibratedWhiteColorSpace (NSString*)':
    'prefix': 'NSCalibratedWhiteColorSpace'
    'body': 'NSCalibratedWhiteColorSpace'
  'NSCategoryDocumentAttribute (NSString*)':
    'prefix': 'NSCategoryDocumentAttribute'
    'body': 'NSCategoryDocumentAttribute'
  'NSCharacterEncodingDocumentAttribute (NSString*)':
    'prefix': 'NSCharacterEncodingDocumentAttribute'
    'body': 'NSCharacterEncodingDocumentAttribute'
  'NSCharacterEncodingDocumentOption (NSString*)':
    'prefix': 'NSCharacterEncodingDocumentOption'
    'body': 'NSCharacterEncodingDocumentOption'
  'NSCharacterShapeAttributeName (NSString*)':
    'prefix': 'NSCharacterShapeAttributeName'
    'body': 'NSCharacterShapeAttributeName'
  'NSCocoaVersionDocumentAttribute (NSString*)':
    'prefix': 'NSCocoaVersionDocumentAttribute'
    'body': 'NSCocoaVersionDocumentAttribute'
  'NSColorListDidChangeNotification (NSString*)':
    'prefix': 'NSColorListDidChangeNotification'
    'body': 'NSColorListDidChangeNotification'
  'NSColorListIOException (NSString*)':
    'prefix': 'NSColorListIOException'
    'body': 'NSColorListIOException'
  'NSColorListNotEditableException (NSString*)':
    'prefix': 'NSColorListNotEditableException'
    'body': 'NSColorListNotEditableException'
  'NSColorPanelColorDidChangeNotification (NSString*)':
    'prefix': 'NSColorPanelColorDidChangeNotification'
    'body': 'NSColorPanelColorDidChangeNotification'
  'NSColorPboardType (NSString*)':
    'prefix': 'NSColorPboardType'
    'body': 'NSColorPboardType'
  'NSComboBoxSelectionDidChangeNotification (NSString*)':
    'prefix': 'NSComboBoxSelectionDidChangeNotification'
    'body': 'NSComboBoxSelectionDidChangeNotification'
  'NSComboBoxSelectionIsChangingNotification (NSString*)':
    'prefix': 'NSComboBoxSelectionIsChangingNotification'
    'body': 'NSComboBoxSelectionIsChangingNotification'
  'NSComboBoxWillDismissNotification (NSString*)':
    'prefix': 'NSComboBoxWillDismissNotification'
    'body': 'NSComboBoxWillDismissNotification'
  'NSComboBoxWillPopUpNotification (NSString*)':
    'prefix': 'NSComboBoxWillPopUpNotification'
    'body': 'NSComboBoxWillPopUpNotification'
  'NSCommentDocumentAttribute (NSString*)':
    'prefix': 'NSCommentDocumentAttribute'
    'body': 'NSCommentDocumentAttribute'
  'NSCompanyDocumentAttribute (NSString*)':
    'prefix': 'NSCompanyDocumentAttribute'
    'body': 'NSCompanyDocumentAttribute'
  'NSConditionallySetsEditableBindingOption (NSString*)':
    'prefix': 'NSConditionallySetsEditableBindingOption'
    'body': 'NSConditionallySetsEditableBindingOption'
  'NSConditionallySetsEnabledBindingOption (NSString*)':
    'prefix': 'NSConditionallySetsEnabledBindingOption'
    'body': 'NSConditionallySetsEnabledBindingOption'
  'NSConditionallySetsHiddenBindingOption (NSString*)':
    'prefix': 'NSConditionallySetsHiddenBindingOption'
    'body': 'NSConditionallySetsHiddenBindingOption'
  'NSContentArrayBinding (NSString*)':
    'prefix': 'NSContentArrayBinding'
    'body': 'NSContentArrayBinding'
  'NSContentArrayForMultipleSelectionBinding (NSString*)':
    'prefix': 'NSContentArrayForMultipleSelectionBinding'
    'body': 'NSContentArrayForMultipleSelectionBinding'
  'NSContentBinding (NSString*)':
    'prefix': 'NSContentBinding'
    'body': 'NSContentBinding'
  'NSContentDictionaryBinding (NSString*)':
    'prefix': 'NSContentDictionaryBinding'
    'body': 'NSContentDictionaryBinding'
  'NSContentHeightBinding (NSString*)':
    'prefix': 'NSContentHeightBinding'
    'body': 'NSContentHeightBinding'
  'NSContentObjectBinding (NSString*)':
    'prefix': 'NSContentObjectBinding'
    'body': 'NSContentObjectBinding'
  'NSContentObjectsBinding (NSString*)':
    'prefix': 'NSContentObjectsBinding'
    'body': 'NSContentObjectsBinding'
  'NSContentPlacementTagBindingOption (NSString*)':
    'prefix': 'NSContentPlacementTagBindingOption'
    'body': 'NSContentPlacementTagBindingOption'
  'NSContentSetBinding (NSString*)':
    'prefix': 'NSContentSetBinding'
    'body': 'NSContentSetBinding'
  'NSContentValuesBinding (NSString*)':
    'prefix': 'NSContentValuesBinding'
    'body': 'NSContentValuesBinding'
  'NSContentWidthBinding (NSString*)':
    'prefix': 'NSContentWidthBinding'
    'body': 'NSContentWidthBinding'
  'NSContextHelpModeDidActivateNotification (NSString*)':
    'prefix': 'NSContextHelpModeDidActivateNotification'
    'body': 'NSContextHelpModeDidActivateNotification'
  'NSContextHelpModeDidDeactivateNotification (NSString*)':
    'prefix': 'NSContextHelpModeDidDeactivateNotification'
    'body': 'NSContextHelpModeDidDeactivateNotification'
  'NSContinuouslyUpdatesValueBindingOption (NSString*)':
    'prefix': 'NSContinuouslyUpdatesValueBindingOption'
    'body': 'NSContinuouslyUpdatesValueBindingOption'
  'NSControlTextDidBeginEditingNotification (NSString*)':
    'prefix': 'NSControlTextDidBeginEditingNotification'
    'body': 'NSControlTextDidBeginEditingNotification'
  'NSControlTextDidChangeNotification (NSString*)':
    'prefix': 'NSControlTextDidChangeNotification'
    'body': 'NSControlTextDidChangeNotification'
  'NSControlTextDidEndEditingNotification (NSString*)':
    'prefix': 'NSControlTextDidEndEditingNotification'
    'body': 'NSControlTextDidEndEditingNotification'
  'NSControlTintDidChangeNotification (NSString*)':
    'prefix': 'NSControlTintDidChangeNotification'
    'body': 'NSControlTintDidChangeNotification'
  'NSConvertedDocumentAttribute (NSString*)':
    'prefix': 'NSConvertedDocumentAttribute'
    'body': 'NSConvertedDocumentAttribute'
  'NSCopyrightDocumentAttribute (NSString*)':
    'prefix': 'NSCopyrightDocumentAttribute'
    'body': 'NSCopyrightDocumentAttribute'
  'NSCreatesSortDescriptorBindingOption (NSString*)':
    'prefix': 'NSCreatesSortDescriptorBindingOption'
    'body': 'NSCreatesSortDescriptorBindingOption'
  'NSCreationTimeDocumentAttribute (NSString*)':
    'prefix': 'NSCreationTimeDocumentAttribute'
    'body': 'NSCreationTimeDocumentAttribute'
  'NSCriticalValueBinding (NSString*)':
    'prefix': 'NSCriticalValueBinding'
    'body': 'NSCriticalValueBinding'
  'NSCursorAttributeName (NSString*)':
    'prefix': 'NSCursorAttributeName'
    'body': 'NSCursorAttributeName'
  'NSCustomColorSpace (NSString*)':
    'prefix': 'NSCustomColorSpace'
    'body': 'NSCustomColorSpace'
  'NSDarkGray (CGFloat)':
    'prefix': 'NSDarkGray'
    'body': 'NSDarkGray'
  'NSDataBinding (NSString*)':
    'prefix': 'NSDataBinding'
    'body': 'NSDataBinding'
  'NSDefaultAttributesDocumentOption (NSString*)':
    'prefix': 'NSDefaultAttributesDocumentOption'
    'body': 'NSDefaultAttributesDocumentOption'
  'NSDefaultTabIntervalDocumentAttribute (NSString*)':
    'prefix': 'NSDefaultTabIntervalDocumentAttribute'
    'body': 'NSDefaultTabIntervalDocumentAttribute'
  'NSDefinitionPresentationTypeDictionaryApplication (NSString*)':
    'prefix': 'NSDefinitionPresentationTypeDictionaryApplication'
    'body': 'NSDefinitionPresentationTypeDictionaryApplication'
  'NSDefinitionPresentationTypeKey (NSString*)':
    'prefix': 'NSDefinitionPresentationTypeKey'
    'body': 'NSDefinitionPresentationTypeKey'
  'NSDefinitionPresentationTypeOverlay (NSString*)':
    'prefix': 'NSDefinitionPresentationTypeOverlay'
    'body': 'NSDefinitionPresentationTypeOverlay'
  'NSDeletesObjectsOnRemoveBindingsOption (NSString*)':
    'prefix': 'NSDeletesObjectsOnRemoveBindingsOption'
    'body': 'NSDeletesObjectsOnRemoveBindingsOption'
  'NSDeviceBitsPerSample (NSString*)':
    'prefix': 'NSDeviceBitsPerSample'
    'body': 'NSDeviceBitsPerSample'
  'NSDeviceBlackColorSpace (NSString*)':
    'prefix': 'NSDeviceBlackColorSpace'
    'body': 'NSDeviceBlackColorSpace'
  'NSDeviceCMYKColorSpace (NSString*)':
    'prefix': 'NSDeviceCMYKColorSpace'
    'body': 'NSDeviceCMYKColorSpace'
  'NSDeviceColorSpaceName (NSString*)':
    'prefix': 'NSDeviceColorSpaceName'
    'body': 'NSDeviceColorSpaceName'
  'NSDeviceIsPrinter (NSString*)':
    'prefix': 'NSDeviceIsPrinter'
    'body': 'NSDeviceIsPrinter'
  'NSDeviceIsScreen (NSString*)':
    'prefix': 'NSDeviceIsScreen'
    'body': 'NSDeviceIsScreen'
  'NSDeviceRGBColorSpace (NSString*)':
    'prefix': 'NSDeviceRGBColorSpace'
    'body': 'NSDeviceRGBColorSpace'
  'NSDeviceResolution (NSString*)':
    'prefix': 'NSDeviceResolution'
    'body': 'NSDeviceResolution'
  'NSDeviceSize (NSString*)':
    'prefix': 'NSDeviceSize'
    'body': 'NSDeviceSize'
  'NSDeviceWhiteColorSpace (NSString*)':
    'prefix': 'NSDeviceWhiteColorSpace'
    'body': 'NSDeviceWhiteColorSpace'
  'NSDirectoryFileType (NSString*)':
    'prefix': 'NSDirectoryFileType'
    'body': 'NSDirectoryFileType'
  'NSDisplayNameBindingOption (NSString*)':
    'prefix': 'NSDisplayNameBindingOption'
    'body': 'NSDisplayNameBindingOption'
  'NSDisplayPatternBindingOption (NSString*)':
    'prefix': 'NSDisplayPatternBindingOption'
    'body': 'NSDisplayPatternBindingOption'
  'NSDisplayPatternTitleBinding (NSString*)':
    'prefix': 'NSDisplayPatternTitleBinding'
    'body': 'NSDisplayPatternTitleBinding'
  'NSDisplayPatternValueBinding (NSString*)':
    'prefix': 'NSDisplayPatternValueBinding'
    'body': 'NSDisplayPatternValueBinding'
  'NSDocFormatTextDocumentType (NSString*)':
    'prefix': 'NSDocFormatTextDocumentType'
    'body': 'NSDocFormatTextDocumentType'
  'NSDocumentEditedBinding (NSString*)':
    'prefix': 'NSDocumentEditedBinding'
    'body': 'NSDocumentEditedBinding'
  'NSDocumentTypeDocumentAttribute (NSString*)':
    'prefix': 'NSDocumentTypeDocumentAttribute'
    'body': 'NSDocumentTypeDocumentAttribute'
  'NSDocumentTypeDocumentOption (NSString*)':
    'prefix': 'NSDocumentTypeDocumentOption'
    'body': 'NSDocumentTypeDocumentOption'
  'NSDoubleClickArgumentBinding (NSString*)':
    'prefix': 'NSDoubleClickArgumentBinding'
    'body': 'NSDoubleClickArgumentBinding'
  'NSDoubleClickTargetBinding (NSString*)':
    'prefix': 'NSDoubleClickTargetBinding'
    'body': 'NSDoubleClickTargetBinding'
  'NSDragPboard (NSString*)':
    'prefix': 'NSDragPboard'
    'body': 'NSDragPboard'
  'NSDraggingException (NSString*)':
    'prefix': 'NSDraggingException'
    'body': 'NSDraggingException'
  'NSDraggingImageComponentIconKey (NSString*)':
    'prefix': 'NSDraggingImageComponentIconKey'
    'body': 'NSDraggingImageComponentIconKey'
  'NSDraggingImageComponentLabelKey (NSString*)':
    'prefix': 'NSDraggingImageComponentLabelKey'
    'body': 'NSDraggingImageComponentLabelKey'
  'NSDrawerDidCloseNotification (NSString*)':
    'prefix': 'NSDrawerDidCloseNotification'
    'body': 'NSDrawerDidCloseNotification'
  'NSDrawerDidOpenNotification (NSString*)':
    'prefix': 'NSDrawerDidOpenNotification'
    'body': 'NSDrawerDidOpenNotification'
  'NSDrawerWillCloseNotification (NSString*)':
    'prefix': 'NSDrawerWillCloseNotification'
    'body': 'NSDrawerWillCloseNotification'
  'NSDrawerWillOpenNotification (NSString*)':
    'prefix': 'NSDrawerWillOpenNotification'
    'body': 'NSDrawerWillOpenNotification'
  'NSEditableBinding (NSString*)':
    'prefix': 'NSEditableBinding'
    'body': 'NSEditableBinding'
  'NSEditorDocumentAttribute (NSString*)':
    'prefix': 'NSEditorDocumentAttribute'
    'body': 'NSEditorDocumentAttribute'
  'NSEnabledBinding (NSString*)':
    'prefix': 'NSEnabledBinding'
    'body': 'NSEnabledBinding'
  'NSEventTrackingRunLoopMode (NSString*)':
    'prefix': 'NSEventTrackingRunLoopMode'
    'body': 'NSEventTrackingRunLoopMode'
  'NSExcludedElementsDocumentAttribute (NSString*)':
    'prefix': 'NSExcludedElementsDocumentAttribute'
    'body': 'NSExcludedElementsDocumentAttribute'
  'NSExcludedKeysBinding (NSString*)':
    'prefix': 'NSExcludedKeysBinding'
    'body': 'NSExcludedKeysBinding'
  'NSExpansionAttributeName (NSString*)':
    'prefix': 'NSExpansionAttributeName'
    'body': 'NSExpansionAttributeName'
  'NSFileContentsPboardType (NSString*)':
    'prefix': 'NSFileContentsPboardType'
    'body': 'NSFileContentsPboardType'
  'NSFileTypeDocumentAttribute (NSString*)':
    'prefix': 'NSFileTypeDocumentAttribute'
    'body': 'NSFileTypeDocumentAttribute'
  'NSFileTypeDocumentOption (NSString*)':
    'prefix': 'NSFileTypeDocumentOption'
    'body': 'NSFileTypeDocumentOption'
  'NSFilenamesPboardType (NSString*)':
    'prefix': 'NSFilenamesPboardType'
    'body': 'NSFilenamesPboardType'
  'NSFilesPromisePboardType (NSString*)':
    'prefix': 'NSFilesPromisePboardType'
    'body': 'NSFilesPromisePboardType'
  'NSFilesystemFileType (NSString*)':
    'prefix': 'NSFilesystemFileType'
    'body': 'NSFilesystemFileType'
  'NSFilterPredicateBinding (NSString*)':
    'prefix': 'NSFilterPredicateBinding'
    'body': 'NSFilterPredicateBinding'
  'NSFindPanelCaseInsensitiveSearch (NSString*)':
    'prefix': 'NSFindPanelCaseInsensitiveSearch'
    'body': 'NSFindPanelCaseInsensitiveSearch'
  'NSFindPanelSearchOptionsPboardType (NSString*)':
    'prefix': 'NSFindPanelSearchOptionsPboardType'
    'body': 'NSFindPanelSearchOptionsPboardType'
  'NSFindPanelSubstringMatch (NSString*)':
    'prefix': 'NSFindPanelSubstringMatch'
    'body': 'NSFindPanelSubstringMatch'
  'NSFindPboard (NSString*)':
    'prefix': 'NSFindPboard'
    'body': 'NSFindPboard'
  'NSFontAttributeName (NSString*)':
    'prefix': 'NSFontAttributeName'
    'body': 'NSFontAttributeName'
  'NSFontBinding (NSString*)':
    'prefix': 'NSFontBinding'
    'body': 'NSFontBinding'
  'NSFontBoldBinding (NSString*)':
    'prefix': 'NSFontBoldBinding'
    'body': 'NSFontBoldBinding'
  'NSFontCascadeListAttribute (NSString*)':
    'prefix': 'NSFontCascadeListAttribute'
    'body': 'NSFontCascadeListAttribute'
  'NSFontCharacterSetAttribute (NSString*)':
    'prefix': 'NSFontCharacterSetAttribute'
    'body': 'NSFontCharacterSetAttribute'
  'NSFontCollectionActionKey (NSString*)':
    'prefix': 'NSFontCollectionActionKey'
    'body': 'NSFontCollectionActionKey'
  'NSFontCollectionAllFonts (NSString*)':
    'prefix': 'NSFontCollectionAllFonts'
    'body': 'NSFontCollectionAllFonts'
  'NSFontCollectionDidChangeNotification (NSString*)':
    'prefix': 'NSFontCollectionDidChangeNotification'
    'body': 'NSFontCollectionDidChangeNotification'
  'NSFontCollectionDisallowAutoActivationOption (NSString*)':
    'prefix': 'NSFontCollectionDisallowAutoActivationOption'
    'body': 'NSFontCollectionDisallowAutoActivationOption'
  'NSFontCollectionFavorites (NSString*)':
    'prefix': 'NSFontCollectionFavorites'
    'body': 'NSFontCollectionFavorites'
  'NSFontCollectionIncludeDisabledFontsOption (NSString*)':
    'prefix': 'NSFontCollectionIncludeDisabledFontsOption'
    'body': 'NSFontCollectionIncludeDisabledFontsOption'
  'NSFontCollectionNameKey (NSString*)':
    'prefix': 'NSFontCollectionNameKey'
    'body': 'NSFontCollectionNameKey'
  'NSFontCollectionOldNameKey (NSString*)':
    'prefix': 'NSFontCollectionOldNameKey'
    'body': 'NSFontCollectionOldNameKey'
  'NSFontCollectionRecentlyUsed (NSString*)':
    'prefix': 'NSFontCollectionRecentlyUsed'
    'body': 'NSFontCollectionRecentlyUsed'
  'NSFontCollectionRemoveDuplicatesOption (NSString*)':
    'prefix': 'NSFontCollectionRemoveDuplicatesOption'
    'body': 'NSFontCollectionRemoveDuplicatesOption'
  'NSFontCollectionUser (NSString*)':
    'prefix': 'NSFontCollectionUser'
    'body': 'NSFontCollectionUser'
  'NSFontCollectionVisibilityKey (NSString*)':
    'prefix': 'NSFontCollectionVisibilityKey'
    'body': 'NSFontCollectionVisibilityKey'
  'NSFontCollectionWasHidden (NSString*)':
    'prefix': 'NSFontCollectionWasHidden'
    'body': 'NSFontCollectionWasHidden'
  'NSFontCollectionWasRenamed (NSString*)':
    'prefix': 'NSFontCollectionWasRenamed'
    'body': 'NSFontCollectionWasRenamed'
  'NSFontCollectionWasShown (NSString*)':
    'prefix': 'NSFontCollectionWasShown'
    'body': 'NSFontCollectionWasShown'
  'NSFontColorAttribute (NSString*)':
    'prefix': 'NSFontColorAttribute'
    'body': 'NSFontColorAttribute'
  'NSFontFaceAttribute (NSString*)':
    'prefix': 'NSFontFaceAttribute'
    'body': 'NSFontFaceAttribute'
  'NSFontFamilyAttribute (NSString*)':
    'prefix': 'NSFontFamilyAttribute'
    'body': 'NSFontFamilyAttribute'
  'NSFontFamilyNameBinding (NSString*)':
    'prefix': 'NSFontFamilyNameBinding'
    'body': 'NSFontFamilyNameBinding'
  'NSFontFeatureSelectorIdentifierKey (NSString*)':
    'prefix': 'NSFontFeatureSelectorIdentifierKey'
    'body': 'NSFontFeatureSelectorIdentifierKey'
  'NSFontFeatureSettingsAttribute (NSString*)':
    'prefix': 'NSFontFeatureSettingsAttribute'
    'body': 'NSFontFeatureSettingsAttribute'
  'NSFontFeatureTypeIdentifierKey (NSString*)':
    'prefix': 'NSFontFeatureTypeIdentifierKey'
    'body': 'NSFontFeatureTypeIdentifierKey'
  'NSFontFixedAdvanceAttribute (NSString*)':
    'prefix': 'NSFontFixedAdvanceAttribute'
    'body': 'NSFontFixedAdvanceAttribute'
  'NSFontIdentityMatrix (CGFloat*)':
    'prefix': 'NSFontIdentityMatrix'
    'body': 'NSFontIdentityMatrix'
  'NSFontItalicBinding (NSString*)':
    'prefix': 'NSFontItalicBinding'
    'body': 'NSFontItalicBinding'
  'NSFontMatrixAttribute (NSString*)':
    'prefix': 'NSFontMatrixAttribute'
    'body': 'NSFontMatrixAttribute'
  'NSFontNameAttribute (NSString*)':
    'prefix': 'NSFontNameAttribute'
    'body': 'NSFontNameAttribute'
  'NSFontNameBinding (NSString*)':
    'prefix': 'NSFontNameBinding'
    'body': 'NSFontNameBinding'
  'NSFontPboard (NSString*)':
    'prefix': 'NSFontPboard'
    'body': 'NSFontPboard'
  'NSFontPboardType (NSString*)':
    'prefix': 'NSFontPboardType'
    'body': 'NSFontPboardType'
  'NSFontSetChangedNotification (NSString*)':
    'prefix': 'NSFontSetChangedNotification'
    'body': 'NSFontSetChangedNotification'
  'NSFontSizeAttribute (NSString*)':
    'prefix': 'NSFontSizeAttribute'
    'body': 'NSFontSizeAttribute'
  'NSFontSizeBinding (NSString*)':
    'prefix': 'NSFontSizeBinding'
    'body': 'NSFontSizeBinding'
  'NSFontSlantTrait (NSString*)':
    'prefix': 'NSFontSlantTrait'
    'body': 'NSFontSlantTrait'
  'NSFontSymbolicTrait (NSString*)':
    'prefix': 'NSFontSymbolicTrait'
    'body': 'NSFontSymbolicTrait'
  'NSFontTraitsAttribute (NSString*)':
    'prefix': 'NSFontTraitsAttribute'
    'body': 'NSFontTraitsAttribute'
  'NSFontUnavailableException (NSString*)':
    'prefix': 'NSFontUnavailableException'
    'body': 'NSFontUnavailableException'
  'NSFontVariationAttribute (NSString*)':
    'prefix': 'NSFontVariationAttribute'
    'body': 'NSFontVariationAttribute'
  'NSFontVariationAxisDefaultValueKey (NSString*)':
    'prefix': 'NSFontVariationAxisDefaultValueKey'
    'body': 'NSFontVariationAxisDefaultValueKey'
  'NSFontVariationAxisIdentifierKey (NSString*)':
    'prefix': 'NSFontVariationAxisIdentifierKey'
    'body': 'NSFontVariationAxisIdentifierKey'
  'NSFontVariationAxisMaximumValueKey (NSString*)':
    'prefix': 'NSFontVariationAxisMaximumValueKey'
    'body': 'NSFontVariationAxisMaximumValueKey'
  'NSFontVariationAxisMinimumValueKey (NSString*)':
    'prefix': 'NSFontVariationAxisMinimumValueKey'
    'body': 'NSFontVariationAxisMinimumValueKey'
  'NSFontVariationAxisNameKey (NSString*)':
    'prefix': 'NSFontVariationAxisNameKey'
    'body': 'NSFontVariationAxisNameKey'
  'NSFontVisibleNameAttribute (NSString*)':
    'prefix': 'NSFontVisibleNameAttribute'
    'body': 'NSFontVisibleNameAttribute'
  'NSFontWeightTrait (NSString*)':
    'prefix': 'NSFontWeightTrait'
    'body': 'NSFontWeightTrait'
  'NSFontWidthTrait (NSString*)':
    'prefix': 'NSFontWidthTrait'
    'body': 'NSFontWidthTrait'
  'NSForegroundColorAttributeName (NSString*)':
    'prefix': 'NSForegroundColorAttributeName'
    'body': 'NSForegroundColorAttributeName'
  'NSFullScreenModeAllScreens (NSString*)':
    'prefix': 'NSFullScreenModeAllScreens'
    'body': 'NSFullScreenModeAllScreens'
  'NSFullScreenModeApplicationPresentationOptions (NSString*)':
    'prefix': 'NSFullScreenModeApplicationPresentationOptions'
    'body': 'NSFullScreenModeApplicationPresentationOptions'
  'NSFullScreenModeSetting (NSString*)':
    'prefix': 'NSFullScreenModeSetting'
    'body': 'NSFullScreenModeSetting'
  'NSFullScreenModeWindowLevel (NSString*)':
    'prefix': 'NSFullScreenModeWindowLevel'
    'body': 'NSFullScreenModeWindowLevel'
  'NSGeneralPboard (NSString*)':
    'prefix': 'NSGeneralPboard'
    'body': 'NSGeneralPboard'
  'NSGlyphInfoAttributeName (NSString*)':
    'prefix': 'NSGlyphInfoAttributeName'
    'body': 'NSGlyphInfoAttributeName'
  'NSGraphicsContextDestinationAttributeName (NSString*)':
    'prefix': 'NSGraphicsContextDestinationAttributeName'
    'body': 'NSGraphicsContextDestinationAttributeName'
  'NSGraphicsContextPDFFormat (NSString*)':
    'prefix': 'NSGraphicsContextPDFFormat'
    'body': 'NSGraphicsContextPDFFormat'
  'NSGraphicsContextPSFormat (NSString*)':
    'prefix': 'NSGraphicsContextPSFormat'
    'body': 'NSGraphicsContextPSFormat'
  'NSGraphicsContextRepresentationFormatAttributeName (NSString*)':
    'prefix': 'NSGraphicsContextRepresentationFormatAttributeName'
    'body': 'NSGraphicsContextRepresentationFormatAttributeName'
  'NSHTMLPboardType (NSString*)':
    'prefix': 'NSHTMLPboardType'
    'body': 'NSHTMLPboardType'
  'NSHTMLTextDocumentType (NSString*)':
    'prefix': 'NSHTMLTextDocumentType'
    'body': 'NSHTMLTextDocumentType'
  'NSHandlesContentAsCompoundValueBindingOption (NSString*)':
    'prefix': 'NSHandlesContentAsCompoundValueBindingOption'
    'body': 'NSHandlesContentAsCompoundValueBindingOption'
  'NSHeaderTitleBinding (NSString*)':
    'prefix': 'NSHeaderTitleBinding'
    'body': 'NSHeaderTitleBinding'
  'NSHiddenBinding (NSString*)':
    'prefix': 'NSHiddenBinding'
    'body': 'NSHiddenBinding'
  'NSHyphenationFactorDocumentAttribute (NSString*)':
    'prefix': 'NSHyphenationFactorDocumentAttribute'
    'body': 'NSHyphenationFactorDocumentAttribute'
  'NSIllegalSelectorException (NSString*)':
    'prefix': 'NSIllegalSelectorException'
    'body': 'NSIllegalSelectorException'
  'NSImageBinding (NSString*)':
    'prefix': 'NSImageBinding'
    'body': 'NSImageBinding'
  'NSImageCacheException (NSString*)':
    'prefix': 'NSImageCacheException'
    'body': 'NSImageCacheException'
  'NSImageColorSyncProfileData (NSString*)':
    'prefix': 'NSImageColorSyncProfileData'
    'body': 'NSImageColorSyncProfileData'
  'NSImageCompressionFactor (NSString*)':
    'prefix': 'NSImageCompressionFactor'
    'body': 'NSImageCompressionFactor'
  'NSImageCompressionMethod (NSString*)':
    'prefix': 'NSImageCompressionMethod'
    'body': 'NSImageCompressionMethod'
  'NSImageCurrentFrame (NSString*)':
    'prefix': 'NSImageCurrentFrame'
    'body': 'NSImageCurrentFrame'
  'NSImageCurrentFrameDuration (NSString*)':
    'prefix': 'NSImageCurrentFrameDuration'
    'body': 'NSImageCurrentFrameDuration'
  'NSImageDitherTransparency (NSString*)':
    'prefix': 'NSImageDitherTransparency'
    'body': 'NSImageDitherTransparency'
  'NSImageEXIFData (NSString*)':
    'prefix': 'NSImageEXIFData'
    'body': 'NSImageEXIFData'
  'NSImageFallbackBackgroundColor (NSString*)':
    'prefix': 'NSImageFallbackBackgroundColor'
    'body': 'NSImageFallbackBackgroundColor'
  'NSImageFrameCount (NSString*)':
    'prefix': 'NSImageFrameCount'
    'body': 'NSImageFrameCount'
  'NSImageGamma (NSString*)':
    'prefix': 'NSImageGamma'
    'body': 'NSImageGamma'
  'NSImageHintCTM (NSString*)':
    'prefix': 'NSImageHintCTM'
    'body': 'NSImageHintCTM'
  'NSImageHintInterpolation (NSString*)':
    'prefix': 'NSImageHintInterpolation'
    'body': 'NSImageHintInterpolation'
  'NSImageInterlaced (NSString*)':
    'prefix': 'NSImageInterlaced'
    'body': 'NSImageInterlaced'
  'NSImageLoopCount (NSString*)':
    'prefix': 'NSImageLoopCount'
    'body': 'NSImageLoopCount'
  'NSImageNameActionTemplate (NSString*)':
    'prefix': 'NSImageNameActionTemplate'
    'body': 'NSImageNameActionTemplate'
  'NSImageNameAddTemplate (NSString*)':
    'prefix': 'NSImageNameAddTemplate'
    'body': 'NSImageNameAddTemplate'
  'NSImageNameAdvanced (NSString*)':
    'prefix': 'NSImageNameAdvanced'
    'body': 'NSImageNameAdvanced'
  'NSImageNameApplicationIcon (NSString*)':
    'prefix': 'NSImageNameApplicationIcon'
    'body': 'NSImageNameApplicationIcon'
  'NSImageNameBluetoothTemplate (NSString*)':
    'prefix': 'NSImageNameBluetoothTemplate'
    'body': 'NSImageNameBluetoothTemplate'
  'NSImageNameBonjour (NSString*)':
    'prefix': 'NSImageNameBonjour'
    'body': 'NSImageNameBonjour'
  'NSImageNameBookmarksTemplate (NSString*)':
    'prefix': 'NSImageNameBookmarksTemplate'
    'body': 'NSImageNameBookmarksTemplate'
  'NSImageNameCaution (NSString*)':
    'prefix': 'NSImageNameCaution'
    'body': 'NSImageNameCaution'
  'NSImageNameColorPanel (NSString*)':
    'prefix': 'NSImageNameColorPanel'
    'body': 'NSImageNameColorPanel'
  'NSImageNameColumnViewTemplate (NSString*)':
    'prefix': 'NSImageNameColumnViewTemplate'
    'body': 'NSImageNameColumnViewTemplate'
  'NSImageNameComputer (NSString*)':
    'prefix': 'NSImageNameComputer'
    'body': 'NSImageNameComputer'
  'NSImageNameDotMac (NSString*)':
    'prefix': 'NSImageNameDotMac'
    'body': 'NSImageNameDotMac'
  'NSImageNameEnterFullScreenTemplate (NSString*)':
    'prefix': 'NSImageNameEnterFullScreenTemplate'
    'body': 'NSImageNameEnterFullScreenTemplate'
  'NSImageNameEveryone (NSString*)':
    'prefix': 'NSImageNameEveryone'
    'body': 'NSImageNameEveryone'
  'NSImageNameExitFullScreenTemplate (NSString*)':
    'prefix': 'NSImageNameExitFullScreenTemplate'
    'body': 'NSImageNameExitFullScreenTemplate'
  'NSImageNameFlowViewTemplate (NSString*)':
    'prefix': 'NSImageNameFlowViewTemplate'
    'body': 'NSImageNameFlowViewTemplate'
  'NSImageNameFolder (NSString*)':
    'prefix': 'NSImageNameFolder'
    'body': 'NSImageNameFolder'
  'NSImageNameFolderBurnable (NSString*)':
    'prefix': 'NSImageNameFolderBurnable'
    'body': 'NSImageNameFolderBurnable'
  'NSImageNameFolderSmart (NSString*)':
    'prefix': 'NSImageNameFolderSmart'
    'body': 'NSImageNameFolderSmart'
  'NSImageNameFollowLinkFreestandingTemplate (NSString*)':
    'prefix': 'NSImageNameFollowLinkFreestandingTemplate'
    'body': 'NSImageNameFollowLinkFreestandingTemplate'
  'NSImageNameFontPanel (NSString*)':
    'prefix': 'NSImageNameFontPanel'
    'body': 'NSImageNameFontPanel'
  'NSImageNameGoLeftTemplate (NSString*)':
    'prefix': 'NSImageNameGoLeftTemplate'
    'body': 'NSImageNameGoLeftTemplate'
  'NSImageNameGoRightTemplate (NSString*)':
    'prefix': 'NSImageNameGoRightTemplate'
    'body': 'NSImageNameGoRightTemplate'
  'NSImageNameHomeTemplate (NSString*)':
    'prefix': 'NSImageNameHomeTemplate'
    'body': 'NSImageNameHomeTemplate'
  'NSImageNameIChatTheaterTemplate (NSString*)':
    'prefix': 'NSImageNameIChatTheaterTemplate'
    'body': 'NSImageNameIChatTheaterTemplate'
  'NSImageNameIconViewTemplate (NSString*)':
    'prefix': 'NSImageNameIconViewTemplate'
    'body': 'NSImageNameIconViewTemplate'
  'NSImageNameInfo (NSString*)':
    'prefix': 'NSImageNameInfo'
    'body': 'NSImageNameInfo'
  'NSImageNameInvalidDataFreestandingTemplate (NSString*)':
    'prefix': 'NSImageNameInvalidDataFreestandingTemplate'
    'body': 'NSImageNameInvalidDataFreestandingTemplate'
  'NSImageNameLeftFacingTriangleTemplate (NSString*)':
    'prefix': 'NSImageNameLeftFacingTriangleTemplate'
    'body': 'NSImageNameLeftFacingTriangleTemplate'
  'NSImageNameListViewTemplate (NSString*)':
    'prefix': 'NSImageNameListViewTemplate'
    'body': 'NSImageNameListViewTemplate'
  'NSImageNameLockLockedTemplate (NSString*)':
    'prefix': 'NSImageNameLockLockedTemplate'
    'body': 'NSImageNameLockLockedTemplate'
  'NSImageNameLockUnlockedTemplate (NSString*)':
    'prefix': 'NSImageNameLockUnlockedTemplate'
    'body': 'NSImageNameLockUnlockedTemplate'
  'NSImageNameMenuMixedStateTemplate (NSString*)':
    'prefix': 'NSImageNameMenuMixedStateTemplate'
    'body': 'NSImageNameMenuMixedStateTemplate'
  'NSImageNameMenuOnStateTemplate (NSString*)':
    'prefix': 'NSImageNameMenuOnStateTemplate'
    'body': 'NSImageNameMenuOnStateTemplate'
  'NSImageNameMobileMe (NSString*)':
    'prefix': 'NSImageNameMobileMe'
    'body': 'NSImageNameMobileMe'
  'NSImageNameMultipleDocuments (NSString*)':
    'prefix': 'NSImageNameMultipleDocuments'
    'body': 'NSImageNameMultipleDocuments'
  'NSImageNameNetwork (NSString*)':
    'prefix': 'NSImageNameNetwork'
    'body': 'NSImageNameNetwork'
  'NSImageNamePathTemplate (NSString*)':
    'prefix': 'NSImageNamePathTemplate'
    'body': 'NSImageNamePathTemplate'
  'NSImageNamePreferencesGeneral (NSString*)':
    'prefix': 'NSImageNamePreferencesGeneral'
    'body': 'NSImageNamePreferencesGeneral'
  'NSImageNameQuickLookTemplate (NSString*)':
    'prefix': 'NSImageNameQuickLookTemplate'
    'body': 'NSImageNameQuickLookTemplate'
  'NSImageNameRefreshFreestandingTemplate (NSString*)':
    'prefix': 'NSImageNameRefreshFreestandingTemplate'
    'body': 'NSImageNameRefreshFreestandingTemplate'
  'NSImageNameRefreshTemplate (NSString*)':
    'prefix': 'NSImageNameRefreshTemplate'
    'body': 'NSImageNameRefreshTemplate'
  'NSImageNameRemoveTemplate (NSString*)':
    'prefix': 'NSImageNameRemoveTemplate'
    'body': 'NSImageNameRemoveTemplate'
  'NSImageNameRevealFreestandingTemplate (NSString*)':
    'prefix': 'NSImageNameRevealFreestandingTemplate'
    'body': 'NSImageNameRevealFreestandingTemplate'
  'NSImageNameRightFacingTriangleTemplate (NSString*)':
    'prefix': 'NSImageNameRightFacingTriangleTemplate'
    'body': 'NSImageNameRightFacingTriangleTemplate'
  'NSImageNameShareTemplate (NSString*)':
    'prefix': 'NSImageNameShareTemplate'
    'body': 'NSImageNameShareTemplate'
  'NSImageNameSlideshowTemplate (NSString*)':
    'prefix': 'NSImageNameSlideshowTemplate'
    'body': 'NSImageNameSlideshowTemplate'
  'NSImageNameSmartBadgeTemplate (NSString*)':
    'prefix': 'NSImageNameSmartBadgeTemplate'
    'body': 'NSImageNameSmartBadgeTemplate'
  'NSImageNameStatusAvailable (NSString*)':
    'prefix': 'NSImageNameStatusAvailable'
    'body': 'NSImageNameStatusAvailable'
  'NSImageNameStatusNone (NSString*)':
    'prefix': 'NSImageNameStatusNone'
    'body': 'NSImageNameStatusNone'
  'NSImageNameStatusPartiallyAvailable (NSString*)':
    'prefix': 'NSImageNameStatusPartiallyAvailable'
    'body': 'NSImageNameStatusPartiallyAvailable'
  'NSImageNameStatusUnavailable (NSString*)':
    'prefix': 'NSImageNameStatusUnavailable'
    'body': 'NSImageNameStatusUnavailable'
  'NSImageNameStopProgressFreestandingTemplate (NSString*)':
    'prefix': 'NSImageNameStopProgressFreestandingTemplate'
    'body': 'NSImageNameStopProgressFreestandingTemplate'
  'NSImageNameStopProgressTemplate (NSString*)':
    'prefix': 'NSImageNameStopProgressTemplate'
    'body': 'NSImageNameStopProgressTemplate'
  'NSImageNameTrashEmpty (NSString*)':
    'prefix': 'NSImageNameTrashEmpty'
    'body': 'NSImageNameTrashEmpty'
  'NSImageNameTrashFull (NSString*)':
    'prefix': 'NSImageNameTrashFull'
    'body': 'NSImageNameTrashFull'
  'NSImageNameUser (NSString*)':
    'prefix': 'NSImageNameUser'
    'body': 'NSImageNameUser'
  'NSImageNameUserAccounts (NSString*)':
    'prefix': 'NSImageNameUserAccounts'
    'body': 'NSImageNameUserAccounts'
  'NSImageNameUserGroup (NSString*)':
    'prefix': 'NSImageNameUserGroup'
    'body': 'NSImageNameUserGroup'
  'NSImageNameUserGuest (NSString*)':
    'prefix': 'NSImageNameUserGuest'
    'body': 'NSImageNameUserGuest'
  'NSImageProgressive (NSString*)':
    'prefix': 'NSImageProgressive'
    'body': 'NSImageProgressive'
  'NSImageRGBColorTable (NSString*)':
    'prefix': 'NSImageRGBColorTable'
    'body': 'NSImageRGBColorTable'
  'NSImageRepRegistryDidChangeNotification (NSString*)':
    'prefix': 'NSImageRepRegistryDidChangeNotification'
    'body': 'NSImageRepRegistryDidChangeNotification'
  'NSIncludedKeysBinding (NSString*)':
    'prefix': 'NSIncludedKeysBinding'
    'body': 'NSIncludedKeysBinding'
  'NSInitialKeyBinding (NSString*)':
    'prefix': 'NSInitialKeyBinding'
    'body': 'NSInitialKeyBinding'
  'NSInitialValueBinding (NSString*)':
    'prefix': 'NSInitialValueBinding'
    'body': 'NSInitialValueBinding'
  'NSInkTextPboardType (NSString*)':
    'prefix': 'NSInkTextPboardType'
    'body': 'NSInkTextPboardType'
  'NSInsertsNullPlaceholderBindingOption (NSString*)':
    'prefix': 'NSInsertsNullPlaceholderBindingOption'
    'body': 'NSInsertsNullPlaceholderBindingOption'
  'NSInterfaceStyleDefault (NSString*)':
    'prefix': 'NSInterfaceStyleDefault'
    'body': 'NSInterfaceStyleDefault'
  'NSInvokesSeparatelyWithArrayObjectsBindingOption (NSString*)':
    'prefix': 'NSInvokesSeparatelyWithArrayObjectsBindingOption'
    'body': 'NSInvokesSeparatelyWithArrayObjectsBindingOption'
  'NSIsIndeterminateBinding (NSString*)':
    'prefix': 'NSIsIndeterminateBinding'
    'body': 'NSIsIndeterminateBinding'
  'NSKernAttributeName (NSString*)':
    'prefix': 'NSKernAttributeName'
    'body': 'NSKernAttributeName'
  'NSKeywordsDocumentAttribute (NSString*)':
    'prefix': 'NSKeywordsDocumentAttribute'
    'body': 'NSKeywordsDocumentAttribute'
  'NSLabelBinding (NSString*)':
    'prefix': 'NSLabelBinding'
    'body': 'NSLabelBinding'
  'NSLeftMarginDocumentAttribute (NSString*)':
    'prefix': 'NSLeftMarginDocumentAttribute'
    'body': 'NSLeftMarginDocumentAttribute'
  'NSLigatureAttributeName (NSString*)':
    'prefix': 'NSLigatureAttributeName'
    'body': 'NSLigatureAttributeName'
  'NSLightGray (CGFloat)':
    'prefix': 'NSLightGray'
    'body': 'NSLightGray'
  'NSLinkAttributeName (NSString*)':
    'prefix': 'NSLinkAttributeName'
    'body': 'NSLinkAttributeName'
  'NSLocalizedKeyDictionaryBinding (NSString*)':
    'prefix': 'NSLocalizedKeyDictionaryBinding'
    'body': 'NSLocalizedKeyDictionaryBinding'
  'NSMacSimpleTextDocumentType (NSString*)':
    'prefix': 'NSMacSimpleTextDocumentType'
    'body': 'NSMacSimpleTextDocumentType'
  'NSManagedObjectContextBinding (NSString*)':
    'prefix': 'NSManagedObjectContextBinding'
    'body': 'NSManagedObjectContextBinding'
  'NSManagerDocumentAttribute (NSString*)':
    'prefix': 'NSManagerDocumentAttribute'
    'body': 'NSManagerDocumentAttribute'
  'NSMarkedClauseSegmentAttributeName (NSString*)':
    'prefix': 'NSMarkedClauseSegmentAttributeName'
    'body': 'NSMarkedClauseSegmentAttributeName'
  'NSMaxValueBinding (NSString*)':
    'prefix': 'NSMaxValueBinding'
    'body': 'NSMaxValueBinding'
  'NSMaxWidthBinding (NSString*)':
    'prefix': 'NSMaxWidthBinding'
    'body': 'NSMaxWidthBinding'
  'NSMaximumRecentsBinding (NSString*)':
    'prefix': 'NSMaximumRecentsBinding'
    'body': 'NSMaximumRecentsBinding'
  'NSMenuDidAddItemNotification (NSString*)':
    'prefix': 'NSMenuDidAddItemNotification'
    'body': 'NSMenuDidAddItemNotification'
  'NSMenuDidBeginTrackingNotification (NSString*)':
    'prefix': 'NSMenuDidBeginTrackingNotification'
    'body': 'NSMenuDidBeginTrackingNotification'
  'NSMenuDidChangeItemNotification (NSString*)':
    'prefix': 'NSMenuDidChangeItemNotification'
    'body': 'NSMenuDidChangeItemNotification'
  'NSMenuDidEndTrackingNotification (NSString*)':
    'prefix': 'NSMenuDidEndTrackingNotification'
    'body': 'NSMenuDidEndTrackingNotification'
  'NSMenuDidRemoveItemNotification (NSString*)':
    'prefix': 'NSMenuDidRemoveItemNotification'
    'body': 'NSMenuDidRemoveItemNotification'
  'NSMenuDidSendActionNotification (NSString*)':
    'prefix': 'NSMenuDidSendActionNotification'
    'body': 'NSMenuDidSendActionNotification'
  'NSMenuWillSendActionNotification (NSString*)':
    'prefix': 'NSMenuWillSendActionNotification'
    'body': 'NSMenuWillSendActionNotification'
  'NSMinValueBinding (NSString*)':
    'prefix': 'NSMinValueBinding'
    'body': 'NSMinValueBinding'
  'NSMinWidthBinding (NSString*)':
    'prefix': 'NSMinWidthBinding'
    'body': 'NSMinWidthBinding'
  'NSMixedStateImageBinding (NSString*)':
    'prefix': 'NSMixedStateImageBinding'
    'body': 'NSMixedStateImageBinding'
  'NSModalPanelRunLoopMode (NSString*)':
    'prefix': 'NSModalPanelRunLoopMode'
    'body': 'NSModalPanelRunLoopMode'
  'NSModificationTimeDocumentAttribute (NSString*)':
    'prefix': 'NSModificationTimeDocumentAttribute'
    'body': 'NSModificationTimeDocumentAttribute'
  'NSMultipleTextSelectionPboardType (NSString*)':
    'prefix': 'NSMultipleTextSelectionPboardType'
    'body': 'NSMultipleTextSelectionPboardType'
  'NSMultipleValuesMarker (id)':
    'prefix': 'NSMultipleValuesMarker'
    'body': 'NSMultipleValuesMarker'
  'NSMultipleValuesPlaceholderBindingOption (NSString*)':
    'prefix': 'NSMultipleValuesPlaceholderBindingOption'
    'body': 'NSMultipleValuesPlaceholderBindingOption'
  'NSNamedColorSpace (NSString*)':
    'prefix': 'NSNamedColorSpace'
    'body': 'NSNamedColorSpace'
  'NSNibLoadingException (NSString*)':
    'prefix': 'NSNibLoadingException'
    'body': 'NSNibLoadingException'
  'NSNibOwner (NSString*)':
    'prefix': 'NSNibOwner'
    'body': 'NSNibOwner'
  'NSNibTopLevelObjects (NSString*)':
    'prefix': 'NSNibTopLevelObjects'
    'body': 'NSNibTopLevelObjects'
  'NSNoSelectionMarker (id)':
    'prefix': 'NSNoSelectionMarker'
    'body': 'NSNoSelectionMarker'
  'NSNoSelectionPlaceholderBindingOption (NSString*)':
    'prefix': 'NSNoSelectionPlaceholderBindingOption'
    'body': 'NSNoSelectionPlaceholderBindingOption'
  'NSNotApplicableMarker (id)':
    'prefix': 'NSNotApplicableMarker'
    'body': 'NSNotApplicableMarker'
  'NSNotApplicablePlaceholderBindingOption (NSString*)':
    'prefix': 'NSNotApplicablePlaceholderBindingOption'
    'body': 'NSNotApplicablePlaceholderBindingOption'
  'NSNullPlaceholderBindingOption (NSString*)':
    'prefix': 'NSNullPlaceholderBindingOption'
    'body': 'NSNullPlaceholderBindingOption'
  'NSObliquenessAttributeName (NSString*)':
    'prefix': 'NSObliquenessAttributeName'
    'body': 'NSObliquenessAttributeName'
  'NSObservedKeyPathKey (NSString*)':
    'prefix': 'NSObservedKeyPathKey'
    'body': 'NSObservedKeyPathKey'
  'NSObservedObjectKey (NSString*)':
    'prefix': 'NSObservedObjectKey'
    'body': 'NSObservedObjectKey'
  'NSOffStateImageBinding (NSString*)':
    'prefix': 'NSOffStateImageBinding'
    'body': 'NSOffStateImageBinding'
  'NSOfficeOpenXMLTextDocumentType (NSString*)':
    'prefix': 'NSOfficeOpenXMLTextDocumentType'
    'body': 'NSOfficeOpenXMLTextDocumentType'
  'NSOnStateImageBinding (NSString*)':
    'prefix': 'NSOnStateImageBinding'
    'body': 'NSOnStateImageBinding'
  'NSOpenDocumentTextDocumentType (NSString*)':
    'prefix': 'NSOpenDocumentTextDocumentType'
    'body': 'NSOpenDocumentTextDocumentType'
  'NSOptionsKey (NSString*)':
    'prefix': 'NSOptionsKey'
    'body': 'NSOptionsKey'
  'NSOutlineViewColumnDidMoveNotification (NSString*)':
    'prefix': 'NSOutlineViewColumnDidMoveNotification'
    'body': 'NSOutlineViewColumnDidMoveNotification'
  'NSOutlineViewColumnDidResizeNotification (NSString*)':
    'prefix': 'NSOutlineViewColumnDidResizeNotification'
    'body': 'NSOutlineViewColumnDidResizeNotification'
  'NSOutlineViewDisclosureButtonKey (NSString*)':
    'prefix': 'NSOutlineViewDisclosureButtonKey'
    'body': 'NSOutlineViewDisclosureButtonKey'
  'NSOutlineViewItemDidCollapseNotification (NSString*)':
    'prefix': 'NSOutlineViewItemDidCollapseNotification'
    'body': 'NSOutlineViewItemDidCollapseNotification'
  'NSOutlineViewItemDidExpandNotification (NSString*)':
    'prefix': 'NSOutlineViewItemDidExpandNotification'
    'body': 'NSOutlineViewItemDidExpandNotification'
  'NSOutlineViewItemWillCollapseNotification (NSString*)':
    'prefix': 'NSOutlineViewItemWillCollapseNotification'
    'body': 'NSOutlineViewItemWillCollapseNotification'
  'NSOutlineViewItemWillExpandNotification (NSString*)':
    'prefix': 'NSOutlineViewItemWillExpandNotification'
    'body': 'NSOutlineViewItemWillExpandNotification'
  'NSOutlineViewSelectionDidChangeNotification (NSString*)':
    'prefix': 'NSOutlineViewSelectionDidChangeNotification'
    'body': 'NSOutlineViewSelectionDidChangeNotification'
  'NSOutlineViewSelectionIsChangingNotification (NSString*)':
    'prefix': 'NSOutlineViewSelectionIsChangingNotification'
    'body': 'NSOutlineViewSelectionIsChangingNotification'
  'NSOutlineViewShowHideButtonKey (NSString*)':
    'prefix': 'NSOutlineViewShowHideButtonKey'
    'body': 'NSOutlineViewShowHideButtonKey'
  'NSPDFPboardType (NSString*)':
    'prefix': 'NSPDFPboardType'
    'body': 'NSPDFPboardType'
  'NSPICTPboardType (NSString*)':
    'prefix': 'NSPICTPboardType'
    'body': 'NSPICTPboardType'
  'NSPPDIncludeNotFoundException (NSString*)':
    'prefix': 'NSPPDIncludeNotFoundException'
    'body': 'NSPPDIncludeNotFoundException'
  'NSPPDIncludeStackOverflowException (NSString*)':
    'prefix': 'NSPPDIncludeStackOverflowException'
    'body': 'NSPPDIncludeStackOverflowException'
  'NSPPDIncludeStackUnderflowException (NSString*)':
    'prefix': 'NSPPDIncludeStackUnderflowException'
    'body': 'NSPPDIncludeStackUnderflowException'
  'NSPPDParseException (NSString*)':
    'prefix': 'NSPPDParseException'
    'body': 'NSPPDParseException'
  'NSPaperSizeDocumentAttribute (NSString*)':
    'prefix': 'NSPaperSizeDocumentAttribute'
    'body': 'NSPaperSizeDocumentAttribute'
  'NSParagraphStyleAttributeName (NSString*)':
    'prefix': 'NSParagraphStyleAttributeName'
    'body': 'NSParagraphStyleAttributeName'
  'NSPasteboardCommunicationException (NSString*)':
    'prefix': 'NSPasteboardCommunicationException'
    'body': 'NSPasteboardCommunicationException'
  'NSPasteboardTypeColor (NSString*)':
    'prefix': 'NSPasteboardTypeColor'
    'body': 'NSPasteboardTypeColor'
  'NSPasteboardTypeFindPanelSearchOptions (NSString*)':
    'prefix': 'NSPasteboardTypeFindPanelSearchOptions'
    'body': 'NSPasteboardTypeFindPanelSearchOptions'
  'NSPasteboardTypeFont (NSString*)':
    'prefix': 'NSPasteboardTypeFont'
    'body': 'NSPasteboardTypeFont'
  'NSPasteboardTypeHTML (NSString*)':
    'prefix': 'NSPasteboardTypeHTML'
    'body': 'NSPasteboardTypeHTML'
  'NSPasteboardTypeMultipleTextSelection (NSString*)':
    'prefix': 'NSPasteboardTypeMultipleTextSelection'
    'body': 'NSPasteboardTypeMultipleTextSelection'
  'NSPasteboardTypePDF (NSString*)':
    'prefix': 'NSPasteboardTypePDF'
    'body': 'NSPasteboardTypePDF'
  'NSPasteboardTypePNG (NSString*)':
    'prefix': 'NSPasteboardTypePNG'
    'body': 'NSPasteboardTypePNG'
  'NSPasteboardTypeRTF (NSString*)':
    'prefix': 'NSPasteboardTypeRTF'
    'body': 'NSPasteboardTypeRTF'
  'NSPasteboardTypeRTFD (NSString*)':
    'prefix': 'NSPasteboardTypeRTFD'
    'body': 'NSPasteboardTypeRTFD'
  'NSPasteboardTypeRuler (NSString*)':
    'prefix': 'NSPasteboardTypeRuler'
    'body': 'NSPasteboardTypeRuler'
  'NSPasteboardTypeSound (NSString*)':
    'prefix': 'NSPasteboardTypeSound'
    'body': 'NSPasteboardTypeSound'
  'NSPasteboardTypeString (NSString*)':
    'prefix': 'NSPasteboardTypeString'
    'body': 'NSPasteboardTypeString'
  'NSPasteboardTypeTIFF (NSString*)':
    'prefix': 'NSPasteboardTypeTIFF'
    'body': 'NSPasteboardTypeTIFF'
  'NSPasteboardTypeTabularText (NSString*)':
    'prefix': 'NSPasteboardTypeTabularText'
    'body': 'NSPasteboardTypeTabularText'
  'NSPasteboardTypeTextFinderOptions (NSString*)':
    'prefix': 'NSPasteboardTypeTextFinderOptions'
    'body': 'NSPasteboardTypeTextFinderOptions'
  'NSPasteboardURLReadingContentsConformToTypesKey (NSString*)':
    'prefix': 'NSPasteboardURLReadingContentsConformToTypesKey'
    'body': 'NSPasteboardURLReadingContentsConformToTypesKey'
  'NSPasteboardURLReadingFileURLsOnlyKey (NSString*)':
    'prefix': 'NSPasteboardURLReadingFileURLsOnlyKey'
    'body': 'NSPasteboardURLReadingFileURLsOnlyKey'
  'NSPatternColorSpace (NSString*)':
    'prefix': 'NSPatternColorSpace'
    'body': 'NSPatternColorSpace'
  'NSPlainFileType (NSString*)':
    'prefix': 'NSPlainFileType'
    'body': 'NSPlainFileType'
  'NSPlainTextDocumentType (NSString*)':
    'prefix': 'NSPlainTextDocumentType'
    'body': 'NSPlainTextDocumentType'
  'NSPopUpButtonCellWillPopUpNotification (NSString*)':
    'prefix': 'NSPopUpButtonCellWillPopUpNotification'
    'body': 'NSPopUpButtonCellWillPopUpNotification'
  'NSPopUpButtonWillPopUpNotification (NSString*)':
    'prefix': 'NSPopUpButtonWillPopUpNotification'
    'body': 'NSPopUpButtonWillPopUpNotification'
  'NSPopoverCloseReasonDetachToWindow (NSString*)':
    'prefix': 'NSPopoverCloseReasonDetachToWindow'
    'body': 'NSPopoverCloseReasonDetachToWindow'
  'NSPopoverCloseReasonKey (NSString*)':
    'prefix': 'NSPopoverCloseReasonKey'
    'body': 'NSPopoverCloseReasonKey'
  'NSPopoverCloseReasonStandard (NSString*)':
    'prefix': 'NSPopoverCloseReasonStandard'
    'body': 'NSPopoverCloseReasonStandard'
  'NSPopoverDidCloseNotification (NSString*)':
    'prefix': 'NSPopoverDidCloseNotification'
    'body': 'NSPopoverDidCloseNotification'
  'NSPopoverDidShowNotification (NSString*)':
    'prefix': 'NSPopoverDidShowNotification'
    'body': 'NSPopoverDidShowNotification'
  'NSPopoverWillCloseNotification (NSString*)':
    'prefix': 'NSPopoverWillCloseNotification'
    'body': 'NSPopoverWillCloseNotification'
  'NSPopoverWillShowNotification (NSString*)':
    'prefix': 'NSPopoverWillShowNotification'
    'body': 'NSPopoverWillShowNotification'
  'NSPositioningRectBinding (NSString*)':
    'prefix': 'NSPositioningRectBinding'
    'body': 'NSPositioningRectBinding'
  'NSPostScriptPboardType (NSString*)':
    'prefix': 'NSPostScriptPboardType'
    'body': 'NSPostScriptPboardType'
  'NSPredicateBinding (NSString*)':
    'prefix': 'NSPredicateBinding'
    'body': 'NSPredicateBinding'
  'NSPredicateFormatBindingOption (NSString*)':
    'prefix': 'NSPredicateFormatBindingOption'
    'body': 'NSPredicateFormatBindingOption'
  'NSPreferredScrollerStyleDidChangeNotification (NSString*)':
    'prefix': 'NSPreferredScrollerStyleDidChangeNotification'
    'body': 'NSPreferredScrollerStyleDidChangeNotification'
  'NSPrefixSpacesDocumentAttribute (NSString*)':
    'prefix': 'NSPrefixSpacesDocumentAttribute'
    'body': 'NSPrefixSpacesDocumentAttribute'
  'NSPrintAllPages (NSString*)':
    'prefix': 'NSPrintAllPages'
    'body': 'NSPrintAllPages'
  'NSPrintAllPresetsJobStyleHint (NSString*)':
    'prefix': 'NSPrintAllPresetsJobStyleHint'
    'body': 'NSPrintAllPresetsJobStyleHint'
  'NSPrintBottomMargin (NSString*)':
    'prefix': 'NSPrintBottomMargin'
    'body': 'NSPrintBottomMargin'
  'NSPrintCancelJob (NSString*)':
    'prefix': 'NSPrintCancelJob'
    'body': 'NSPrintCancelJob'
  'NSPrintCopies (NSString*)':
    'prefix': 'NSPrintCopies'
    'body': 'NSPrintCopies'
  'NSPrintDetailedErrorReporting (NSString*)':
    'prefix': 'NSPrintDetailedErrorReporting'
    'body': 'NSPrintDetailedErrorReporting'
  'NSPrintFaxNumber (NSString*)':
    'prefix': 'NSPrintFaxNumber'
    'body': 'NSPrintFaxNumber'
  'NSPrintFirstPage (NSString*)':
    'prefix': 'NSPrintFirstPage'
    'body': 'NSPrintFirstPage'
  'NSPrintFormName (NSString*)':
    'prefix': 'NSPrintFormName'
    'body': 'NSPrintFormName'
  'NSPrintHeaderAndFooter (NSString*)':
    'prefix': 'NSPrintHeaderAndFooter'
    'body': 'NSPrintHeaderAndFooter'
  'NSPrintHorizontalPagination (NSString*)':
    'prefix': 'NSPrintHorizontalPagination'
    'body': 'NSPrintHorizontalPagination'
  'NSPrintHorizontallyCentered (NSString*)':
    'prefix': 'NSPrintHorizontallyCentered'
    'body': 'NSPrintHorizontallyCentered'
  'NSPrintJobDisposition (NSString*)':
    'prefix': 'NSPrintJobDisposition'
    'body': 'NSPrintJobDisposition'
  'NSPrintJobFeatures (NSString*)':
    'prefix': 'NSPrintJobFeatures'
    'body': 'NSPrintJobFeatures'
  'NSPrintJobSavingFileNameExtensionHidden (NSString*)':
    'prefix': 'NSPrintJobSavingFileNameExtensionHidden'
    'body': 'NSPrintJobSavingFileNameExtensionHidden'
  'NSPrintJobSavingURL (NSString*)':
    'prefix': 'NSPrintJobSavingURL'
    'body': 'NSPrintJobSavingURL'
  'NSPrintLastPage (NSString*)':
    'prefix': 'NSPrintLastPage'
    'body': 'NSPrintLastPage'
  'NSPrintLeftMargin (NSString*)':
    'prefix': 'NSPrintLeftMargin'
    'body': 'NSPrintLeftMargin'
  'NSPrintManualFeed (NSString*)':
    'prefix': 'NSPrintManualFeed'
    'body': 'NSPrintManualFeed'
  'NSPrintMustCollate (NSString*)':
    'prefix': 'NSPrintMustCollate'
    'body': 'NSPrintMustCollate'
  'NSPrintNoPresetsJobStyleHint (NSString*)':
    'prefix': 'NSPrintNoPresetsJobStyleHint'
    'body': 'NSPrintNoPresetsJobStyleHint'
  'NSPrintOperationExistsException (NSString*)':
    'prefix': 'NSPrintOperationExistsException'
    'body': 'NSPrintOperationExistsException'
  'NSPrintOrientation (NSString*)':
    'prefix': 'NSPrintOrientation'
    'body': 'NSPrintOrientation'
  'NSPrintPackageException (NSString*)':
    'prefix': 'NSPrintPackageException'
    'body': 'NSPrintPackageException'
  'NSPrintPagesAcross (NSString*)':
    'prefix': 'NSPrintPagesAcross'
    'body': 'NSPrintPagesAcross'
  'NSPrintPagesDown (NSString*)':
    'prefix': 'NSPrintPagesDown'
    'body': 'NSPrintPagesDown'
  'NSPrintPagesPerSheet (NSString*)':
    'prefix': 'NSPrintPagesPerSheet'
    'body': 'NSPrintPagesPerSheet'
  'NSPrintPanelAccessorySummaryItemDescriptionKey (NSString*)':
    'prefix': 'NSPrintPanelAccessorySummaryItemDescriptionKey'
    'body': 'NSPrintPanelAccessorySummaryItemDescriptionKey'
  'NSPrintPanelAccessorySummaryItemNameKey (NSString*)':
    'prefix': 'NSPrintPanelAccessorySummaryItemNameKey'
    'body': 'NSPrintPanelAccessorySummaryItemNameKey'
  'NSPrintPaperFeed (NSString*)':
    'prefix': 'NSPrintPaperFeed'
    'body': 'NSPrintPaperFeed'
  'NSPrintPaperName (NSString*)':
    'prefix': 'NSPrintPaperName'
    'body': 'NSPrintPaperName'
  'NSPrintPaperSize (NSString*)':
    'prefix': 'NSPrintPaperSize'
    'body': 'NSPrintPaperSize'
  'NSPrintPhotoJobStyleHint (NSString*)':
    'prefix': 'NSPrintPhotoJobStyleHint'
    'body': 'NSPrintPhotoJobStyleHint'
  'NSPrintPreviewJob (NSString*)':
    'prefix': 'NSPrintPreviewJob'
    'body': 'NSPrintPreviewJob'
  'NSPrintPrinter (NSString*)':
    'prefix': 'NSPrintPrinter'
    'body': 'NSPrintPrinter'
  'NSPrintPrinterName (NSString*)':
    'prefix': 'NSPrintPrinterName'
    'body': 'NSPrintPrinterName'
  'NSPrintReversePageOrder (NSString*)':
    'prefix': 'NSPrintReversePageOrder'
    'body': 'NSPrintReversePageOrder'
  'NSPrintRightMargin (NSString*)':
    'prefix': 'NSPrintRightMargin'
    'body': 'NSPrintRightMargin'
  'NSPrintSaveJob (NSString*)':
    'prefix': 'NSPrintSaveJob'
    'body': 'NSPrintSaveJob'
  'NSPrintSavePath (NSString*)':
    'prefix': 'NSPrintSavePath'
    'body': 'NSPrintSavePath'
  'NSPrintScalingFactor (NSString*)':
    'prefix': 'NSPrintScalingFactor'
    'body': 'NSPrintScalingFactor'
  'NSPrintSelectionOnly (NSString*)':
    'prefix': 'NSPrintSelectionOnly'
    'body': 'NSPrintSelectionOnly'
  'NSPrintSpoolJob (NSString*)':
    'prefix': 'NSPrintSpoolJob'
    'body': 'NSPrintSpoolJob'
  'NSPrintTime (NSString*)':
    'prefix': 'NSPrintTime'
    'body': 'NSPrintTime'
  'NSPrintTopMargin (NSString*)':
    'prefix': 'NSPrintTopMargin'
    'body': 'NSPrintTopMargin'
  'NSPrintVerticalPagination (NSString*)':
    'prefix': 'NSPrintVerticalPagination'
    'body': 'NSPrintVerticalPagination'
  'NSPrintVerticallyCentered (NSString*)':
    'prefix': 'NSPrintVerticallyCentered'
    'body': 'NSPrintVerticallyCentered'
  'NSPrintingCommunicationException (NSString*)':
    'prefix': 'NSPrintingCommunicationException'
    'body': 'NSPrintingCommunicationException'
  'NSRTFDPboardType (NSString*)':
    'prefix': 'NSRTFDPboardType'
    'body': 'NSRTFDPboardType'
  'NSRTFDTextDocumentType (NSString*)':
    'prefix': 'NSRTFDTextDocumentType'
    'body': 'NSRTFDTextDocumentType'
  'NSRTFPboardType (NSString*)':
    'prefix': 'NSRTFPboardType'
    'body': 'NSRTFPboardType'
  'NSRTFPropertyStackOverflowException (NSString*)':
    'prefix': 'NSRTFPropertyStackOverflowException'
    'body': 'NSRTFPropertyStackOverflowException'
  'NSRTFTextDocumentType (NSString*)':
    'prefix': 'NSRTFTextDocumentType'
    'body': 'NSRTFTextDocumentType'
  'NSRaisesForNotApplicableKeysBindingOption (NSString*)':
    'prefix': 'NSRaisesForNotApplicableKeysBindingOption'
    'body': 'NSRaisesForNotApplicableKeysBindingOption'
  'NSReadOnlyDocumentAttribute (NSString*)':
    'prefix': 'NSReadOnlyDocumentAttribute'
    'body': 'NSReadOnlyDocumentAttribute'
  'NSRecentSearchesBinding (NSString*)':
    'prefix': 'NSRecentSearchesBinding'
    'body': 'NSRecentSearchesBinding'
  'NSRepresentedFilenameBinding (NSString*)':
    'prefix': 'NSRepresentedFilenameBinding'
    'body': 'NSRepresentedFilenameBinding'
  'NSRightMarginDocumentAttribute (NSString*)':
    'prefix': 'NSRightMarginDocumentAttribute'
    'body': 'NSRightMarginDocumentAttribute'
  'NSRowHeightBinding (NSString*)':
    'prefix': 'NSRowHeightBinding'
    'body': 'NSRowHeightBinding'
  'NSRuleEditorPredicateComparisonModifier (NSString*)':
    'prefix': 'NSRuleEditorPredicateComparisonModifier'
    'body': 'NSRuleEditorPredicateComparisonModifier'
  'NSRuleEditorPredicateCompoundType (NSString*)':
    'prefix': 'NSRuleEditorPredicateCompoundType'
    'body': 'NSRuleEditorPredicateCompoundType'
  'NSRuleEditorPredicateCustomSelector (NSString*)':
    'prefix': 'NSRuleEditorPredicateCustomSelector'
    'body': 'NSRuleEditorPredicateCustomSelector'
  'NSRuleEditorPredicateLeftExpression (NSString*)':
    'prefix': 'NSRuleEditorPredicateLeftExpression'
    'body': 'NSRuleEditorPredicateLeftExpression'
  'NSRuleEditorPredicateOperatorType (NSString*)':
    'prefix': 'NSRuleEditorPredicateOperatorType'
    'body': 'NSRuleEditorPredicateOperatorType'
  'NSRuleEditorPredicateOptions (NSString*)':
    'prefix': 'NSRuleEditorPredicateOptions'
    'body': 'NSRuleEditorPredicateOptions'
  'NSRuleEditorPredicateRightExpression (NSString*)':
    'prefix': 'NSRuleEditorPredicateRightExpression'
    'body': 'NSRuleEditorPredicateRightExpression'
  'NSRuleEditorRowsDidChangeNotification (NSString*)':
    'prefix': 'NSRuleEditorRowsDidChangeNotification'
    'body': 'NSRuleEditorRowsDidChangeNotification'
  'NSRulerPboard (NSString*)':
    'prefix': 'NSRulerPboard'
    'body': 'NSRulerPboard'
  'NSRulerPboardType (NSString*)':
    'prefix': 'NSRulerPboardType'
    'body': 'NSRulerPboardType'
  'NSScreenColorSpaceDidChangeNotification (NSString*)':
    'prefix': 'NSScreenColorSpaceDidChangeNotification'
    'body': 'NSScreenColorSpaceDidChangeNotification'
  'NSScrollViewDidEndLiveMagnifyNotification (NSString*)':
    'prefix': 'NSScrollViewDidEndLiveMagnifyNotification'
    'body': 'NSScrollViewDidEndLiveMagnifyNotification'
  'NSScrollViewDidEndLiveScrollNotification (NSString*)':
    'prefix': 'NSScrollViewDidEndLiveScrollNotification'
    'body': 'NSScrollViewDidEndLiveScrollNotification'
  'NSScrollViewDidLiveScrollNotification (NSString*)':
    'prefix': 'NSScrollViewDidLiveScrollNotification'
    'body': 'NSScrollViewDidLiveScrollNotification'
  'NSScrollViewWillStartLiveMagnifyNotification (NSString*)':
    'prefix': 'NSScrollViewWillStartLiveMagnifyNotification'
    'body': 'NSScrollViewWillStartLiveMagnifyNotification'
  'NSScrollViewWillStartLiveScrollNotification (NSString*)':
    'prefix': 'NSScrollViewWillStartLiveScrollNotification'
    'body': 'NSScrollViewWillStartLiveScrollNotification'
  'NSSelectedIdentifierBinding (NSString*)':
    'prefix': 'NSSelectedIdentifierBinding'
    'body': 'NSSelectedIdentifierBinding'
  'NSSelectedIndexBinding (NSString*)':
    'prefix': 'NSSelectedIndexBinding'
    'body': 'NSSelectedIndexBinding'
  'NSSelectedLabelBinding (NSString*)':
    'prefix': 'NSSelectedLabelBinding'
    'body': 'NSSelectedLabelBinding'
  'NSSelectedObjectBinding (NSString*)':
    'prefix': 'NSSelectedObjectBinding'
    'body': 'NSSelectedObjectBinding'
  'NSSelectedObjectsBinding (NSString*)':
    'prefix': 'NSSelectedObjectsBinding'
    'body': 'NSSelectedObjectsBinding'
  'NSSelectedTagBinding (NSString*)':
    'prefix': 'NSSelectedTagBinding'
    'body': 'NSSelectedTagBinding'
  'NSSelectedValueBinding (NSString*)':
    'prefix': 'NSSelectedValueBinding'
    'body': 'NSSelectedValueBinding'
  'NSSelectedValuesBinding (NSString*)':
    'prefix': 'NSSelectedValuesBinding'
    'body': 'NSSelectedValuesBinding'
  'NSSelectionIndexPathsBinding (NSString*)':
    'prefix': 'NSSelectionIndexPathsBinding'
    'body': 'NSSelectionIndexPathsBinding'
  'NSSelectionIndexesBinding (NSString*)':
    'prefix': 'NSSelectionIndexesBinding'
    'body': 'NSSelectionIndexesBinding'
  'NSSelectorNameBindingOption (NSString*)':
    'prefix': 'NSSelectorNameBindingOption'
    'body': 'NSSelectorNameBindingOption'
  'NSSelectsAllWhenSettingContentBindingOption (NSString*)':
    'prefix': 'NSSelectsAllWhenSettingContentBindingOption'
    'body': 'NSSelectsAllWhenSettingContentBindingOption'
  'NSShadowAttributeName (NSString*)':
    'prefix': 'NSShadowAttributeName'
    'body': 'NSShadowAttributeName'
  'NSSharingServiceNameAddToAperture (NSString*)':
    'prefix': 'NSSharingServiceNameAddToAperture'
    'body': 'NSSharingServiceNameAddToAperture'
  'NSSharingServiceNameAddToIPhoto (NSString*)':
    'prefix': 'NSSharingServiceNameAddToIPhoto'
    'body': 'NSSharingServiceNameAddToIPhoto'
  'NSSharingServiceNameAddToSafariReadingList (NSString*)':
    'prefix': 'NSSharingServiceNameAddToSafariReadingList'
    'body': 'NSSharingServiceNameAddToSafariReadingList'
  'NSSharingServiceNameComposeEmail (NSString*)':
    'prefix': 'NSSharingServiceNameComposeEmail'
    'body': 'NSSharingServiceNameComposeEmail'
  'NSSharingServiceNameComposeMessage (NSString*)':
    'prefix': 'NSSharingServiceNameComposeMessage'
    'body': 'NSSharingServiceNameComposeMessage'
  'NSSharingServiceNamePostImageOnFlickr (NSString*)':
    'prefix': 'NSSharingServiceNamePostImageOnFlickr'
    'body': 'NSSharingServiceNamePostImageOnFlickr'
  'NSSharingServiceNamePostOnFacebook (NSString*)':
    'prefix': 'NSSharingServiceNamePostOnFacebook'
    'body': 'NSSharingServiceNamePostOnFacebook'
  'NSSharingServiceNamePostOnLinkedIn (NSString*)':
    'prefix': 'NSSharingServiceNamePostOnLinkedIn'
    'body': 'NSSharingServiceNamePostOnLinkedIn'
  'NSSharingServiceNamePostOnSinaWeibo (NSString*)':
    'prefix': 'NSSharingServiceNamePostOnSinaWeibo'
    'body': 'NSSharingServiceNamePostOnSinaWeibo'
  'NSSharingServiceNamePostOnTencentWeibo (NSString*)':
    'prefix': 'NSSharingServiceNamePostOnTencentWeibo'
    'body': 'NSSharingServiceNamePostOnTencentWeibo'
  'NSSharingServiceNamePostOnTwitter (NSString*)':
    'prefix': 'NSSharingServiceNamePostOnTwitter'
    'body': 'NSSharingServiceNamePostOnTwitter'
  'NSSharingServiceNamePostVideoOnTudou (NSString*)':
    'prefix': 'NSSharingServiceNamePostVideoOnTudou'
    'body': 'NSSharingServiceNamePostVideoOnTudou'
  'NSSharingServiceNamePostVideoOnVimeo (NSString*)':
    'prefix': 'NSSharingServiceNamePostVideoOnVimeo'
    'body': 'NSSharingServiceNamePostVideoOnVimeo'
  'NSSharingServiceNamePostVideoOnYouku (NSString*)':
    'prefix': 'NSSharingServiceNamePostVideoOnYouku'
    'body': 'NSSharingServiceNamePostVideoOnYouku'
  'NSSharingServiceNameSendViaAirDrop (NSString*)':
    'prefix': 'NSSharingServiceNameSendViaAirDrop'
    'body': 'NSSharingServiceNameSendViaAirDrop'
  'NSSharingServiceNameUseAsDesktopPicture (NSString*)':
    'prefix': 'NSSharingServiceNameUseAsDesktopPicture'
    'body': 'NSSharingServiceNameUseAsDesktopPicture'
  'NSSharingServiceNameUseAsFacebookProfileImage (NSString*)':
    'prefix': 'NSSharingServiceNameUseAsFacebookProfileImage'
    'body': 'NSSharingServiceNameUseAsFacebookProfileImage'
  'NSSharingServiceNameUseAsLinkedInProfileImage (NSString*)':
    'prefix': 'NSSharingServiceNameUseAsLinkedInProfileImage'
    'body': 'NSSharingServiceNameUseAsLinkedInProfileImage'
  'NSSharingServiceNameUseAsTwitterProfileImage (NSString*)':
    'prefix': 'NSSharingServiceNameUseAsTwitterProfileImage'
    'body': 'NSSharingServiceNameUseAsTwitterProfileImage'
  'NSShellCommandFileType (NSString*)':
    'prefix': 'NSShellCommandFileType'
    'body': 'NSShellCommandFileType'
  'NSSortDescriptorsBinding (NSString*)':
    'prefix': 'NSSortDescriptorsBinding'
    'body': 'NSSortDescriptorsBinding'
  'NSSoundPboardType (NSString*)':
    'prefix': 'NSSoundPboardType'
    'body': 'NSSoundPboardType'
  'NSSpeechCharacterModeProperty (NSString*)':
    'prefix': 'NSSpeechCharacterModeProperty'
    'body': 'NSSpeechCharacterModeProperty'
  'NSSpeechCommandDelimiterProperty (NSString*)':
    'prefix': 'NSSpeechCommandDelimiterProperty'
    'body': 'NSSpeechCommandDelimiterProperty'
  'NSSpeechCommandPrefix (NSString*)':
    'prefix': 'NSSpeechCommandPrefix'
    'body': 'NSSpeechCommandPrefix'
  'NSSpeechCommandSuffix (NSString*)':
    'prefix': 'NSSpeechCommandSuffix'
    'body': 'NSSpeechCommandSuffix'
  'NSSpeechCurrentVoiceProperty (NSString*)':
    'prefix': 'NSSpeechCurrentVoiceProperty'
    'body': 'NSSpeechCurrentVoiceProperty'
  'NSSpeechDictionaryAbbreviations (NSString*)':
    'prefix': 'NSSpeechDictionaryAbbreviations'
    'body': 'NSSpeechDictionaryAbbreviations'
  'NSSpeechDictionaryEntryPhonemes (NSString*)':
    'prefix': 'NSSpeechDictionaryEntryPhonemes'
    'body': 'NSSpeechDictionaryEntryPhonemes'
  'NSSpeechDictionaryEntrySpelling (NSString*)':
    'prefix': 'NSSpeechDictionaryEntrySpelling'
    'body': 'NSSpeechDictionaryEntrySpelling'
  'NSSpeechDictionaryLocaleIdentifier (NSString*)':
    'prefix': 'NSSpeechDictionaryLocaleIdentifier'
    'body': 'NSSpeechDictionaryLocaleIdentifier'
  'NSSpeechDictionaryModificationDate (NSString*)':
    'prefix': 'NSSpeechDictionaryModificationDate'
    'body': 'NSSpeechDictionaryModificationDate'
  'NSSpeechDictionaryPronunciations (NSString*)':
    'prefix': 'NSSpeechDictionaryPronunciations'
    'body': 'NSSpeechDictionaryPronunciations'
  'NSSpeechErrorCount (NSString*)':
    'prefix': 'NSSpeechErrorCount'
    'body': 'NSSpeechErrorCount'
  'NSSpeechErrorNewestCharacterOffset (NSString*)':
    'prefix': 'NSSpeechErrorNewestCharacterOffset'
    'body': 'NSSpeechErrorNewestCharacterOffset'
  'NSSpeechErrorNewestCode (NSString*)':
    'prefix': 'NSSpeechErrorNewestCode'
    'body': 'NSSpeechErrorNewestCode'
  'NSSpeechErrorOldestCharacterOffset (NSString*)':
    'prefix': 'NSSpeechErrorOldestCharacterOffset'
    'body': 'NSSpeechErrorOldestCharacterOffset'
  'NSSpeechErrorOldestCode (NSString*)':
    'prefix': 'NSSpeechErrorOldestCode'
    'body': 'NSSpeechErrorOldestCode'
  'NSSpeechErrorsProperty (NSString*)':
    'prefix': 'NSSpeechErrorsProperty'
    'body': 'NSSpeechErrorsProperty'
  'NSSpeechInputModeProperty (NSString*)':
    'prefix': 'NSSpeechInputModeProperty'
    'body': 'NSSpeechInputModeProperty'
  'NSSpeechModeLiteral (NSString*)':
    'prefix': 'NSSpeechModeLiteral'
    'body': 'NSSpeechModeLiteral'
  'NSSpeechModeNormal (NSString*)':
    'prefix': 'NSSpeechModeNormal'
    'body': 'NSSpeechModeNormal'
  'NSSpeechModePhoneme (NSString*)':
    'prefix': 'NSSpeechModePhoneme'
    'body': 'NSSpeechModePhoneme'
  'NSSpeechModeText (NSString*)':
    'prefix': 'NSSpeechModeText'
    'body': 'NSSpeechModeText'
  'NSSpeechNumberModeProperty (NSString*)':
    'prefix': 'NSSpeechNumberModeProperty'
    'body': 'NSSpeechNumberModeProperty'
  'NSSpeechOutputToFileURLProperty (NSString*)':
    'prefix': 'NSSpeechOutputToFileURLProperty'
    'body': 'NSSpeechOutputToFileURLProperty'
  'NSSpeechPhonemeInfoExample (NSString*)':
    'prefix': 'NSSpeechPhonemeInfoExample'
    'body': 'NSSpeechPhonemeInfoExample'
  'NSSpeechPhonemeInfoHiliteEnd (NSString*)':
    'prefix': 'NSSpeechPhonemeInfoHiliteEnd'
    'body': 'NSSpeechPhonemeInfoHiliteEnd'
  'NSSpeechPhonemeInfoHiliteStart (NSString*)':
    'prefix': 'NSSpeechPhonemeInfoHiliteStart'
    'body': 'NSSpeechPhonemeInfoHiliteStart'
  'NSSpeechPhonemeInfoOpcode (NSString*)':
    'prefix': 'NSSpeechPhonemeInfoOpcode'
    'body': 'NSSpeechPhonemeInfoOpcode'
  'NSSpeechPhonemeInfoSymbol (NSString*)':
    'prefix': 'NSSpeechPhonemeInfoSymbol'
    'body': 'NSSpeechPhonemeInfoSymbol'
  'NSSpeechPhonemeSymbolsProperty (NSString*)':
    'prefix': 'NSSpeechPhonemeSymbolsProperty'
    'body': 'NSSpeechPhonemeSymbolsProperty'
  'NSSpeechPitchBaseProperty (NSString*)':
    'prefix': 'NSSpeechPitchBaseProperty'
    'body': 'NSSpeechPitchBaseProperty'
  'NSSpeechPitchModProperty (NSString*)':
    'prefix': 'NSSpeechPitchModProperty'
    'body': 'NSSpeechPitchModProperty'
  'NSSpeechRateProperty (NSString*)':
    'prefix': 'NSSpeechRateProperty'
    'body': 'NSSpeechRateProperty'
  'NSSpeechRecentSyncProperty (NSString*)':
    'prefix': 'NSSpeechRecentSyncProperty'
    'body': 'NSSpeechRecentSyncProperty'
  'NSSpeechResetProperty (NSString*)':
    'prefix': 'NSSpeechResetProperty'
    'body': 'NSSpeechResetProperty'
  'NSSpeechStatusNumberOfCharactersLeft (NSString*)':
    'prefix': 'NSSpeechStatusNumberOfCharactersLeft'
    'body': 'NSSpeechStatusNumberOfCharactersLeft'
  'NSSpeechStatusOutputBusy (NSString*)':
    'prefix': 'NSSpeechStatusOutputBusy'
    'body': 'NSSpeechStatusOutputBusy'
  'NSSpeechStatusOutputPaused (NSString*)':
    'prefix': 'NSSpeechStatusOutputPaused'
    'body': 'NSSpeechStatusOutputPaused'
  'NSSpeechStatusPhonemeCode (NSString*)':
    'prefix': 'NSSpeechStatusPhonemeCode'
    'body': 'NSSpeechStatusPhonemeCode'
  'NSSpeechStatusProperty (NSString*)':
    'prefix': 'NSSpeechStatusProperty'
    'body': 'NSSpeechStatusProperty'
  'NSSpeechSynthesizerInfoIdentifier (NSString*)':
    'prefix': 'NSSpeechSynthesizerInfoIdentifier'
    'body': 'NSSpeechSynthesizerInfoIdentifier'
  'NSSpeechSynthesizerInfoProperty (NSString*)':
    'prefix': 'NSSpeechSynthesizerInfoProperty'
    'body': 'NSSpeechSynthesizerInfoProperty'
  'NSSpeechSynthesizerInfoVersion (NSString*)':
    'prefix': 'NSSpeechSynthesizerInfoVersion'
    'body': 'NSSpeechSynthesizerInfoVersion'
  'NSSpeechVolumeProperty (NSString*)':
    'prefix': 'NSSpeechVolumeProperty'
    'body': 'NSSpeechVolumeProperty'
  'NSSpellCheckerDidChangeAutomaticDashSubstitutionNotification (NSString*)':
    'prefix': 'NSSpellCheckerDidChangeAutomaticDashSubstitutionNotification'
    'body': 'NSSpellCheckerDidChangeAutomaticDashSubstitutionNotification'
  'NSSpellCheckerDidChangeAutomaticQuoteSubstitutionNotification (NSString*)':
    'prefix': 'NSSpellCheckerDidChangeAutomaticQuoteSubstitutionNotification'
    'body': 'NSSpellCheckerDidChangeAutomaticQuoteSubstitutionNotification'
  'NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification (NSString*)':
    'prefix': 'NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification'
    'body': 'NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification'
  'NSSpellCheckerDidChangeAutomaticTextReplacementNotification (NSString*)':
    'prefix': 'NSSpellCheckerDidChangeAutomaticTextReplacementNotification'
    'body': 'NSSpellCheckerDidChangeAutomaticTextReplacementNotification'
  'NSSpellingStateAttributeName (NSString*)':
    'prefix': 'NSSpellingStateAttributeName'
    'body': 'NSSpellingStateAttributeName'
  'NSSplitViewDidResizeSubviewsNotification (NSString*)':
    'prefix': 'NSSplitViewDidResizeSubviewsNotification'
    'body': 'NSSplitViewDidResizeSubviewsNotification'
  'NSSplitViewWillResizeSubviewsNotification (NSString*)':
    'prefix': 'NSSplitViewWillResizeSubviewsNotification'
    'body': 'NSSplitViewWillResizeSubviewsNotification'
  'NSStrikethroughColorAttributeName (NSString*)':
    'prefix': 'NSStrikethroughColorAttributeName'
    'body': 'NSStrikethroughColorAttributeName'
  'NSStrikethroughStyleAttributeName (NSString*)':
    'prefix': 'NSStrikethroughStyleAttributeName'
    'body': 'NSStrikethroughStyleAttributeName'
  'NSStringPboardType (NSString*)':
    'prefix': 'NSStringPboardType'
    'body': 'NSStringPboardType'
  'NSStrokeColorAttributeName (NSString*)':
    'prefix': 'NSStrokeColorAttributeName'
    'body': 'NSStrokeColorAttributeName'
  'NSStrokeWidthAttributeName (NSString*)':
    'prefix': 'NSStrokeWidthAttributeName'
    'body': 'NSStrokeWidthAttributeName'
  'NSSubjectDocumentAttribute (NSString*)':
    'prefix': 'NSSubjectDocumentAttribute'
    'body': 'NSSubjectDocumentAttribute'
  'NSSuperscriptAttributeName (NSString*)':
    'prefix': 'NSSuperscriptAttributeName'
    'body': 'NSSuperscriptAttributeName'
  'NSSystemColorsDidChangeNotification (NSString*)':
    'prefix': 'NSSystemColorsDidChangeNotification'
    'body': 'NSSystemColorsDidChangeNotification'
  'NSTIFFException (NSString*)':
    'prefix': 'NSTIFFException'
    'body': 'NSTIFFException'
  'NSTIFFPboardType (NSString*)':
    'prefix': 'NSTIFFPboardType'
    'body': 'NSTIFFPboardType'
  'NSTabColumnTerminatorsAttributeName (NSString*)':
    'prefix': 'NSTabColumnTerminatorsAttributeName'
    'body': 'NSTabColumnTerminatorsAttributeName'
  'NSTableViewColumnDidMoveNotification (NSString*)':
    'prefix': 'NSTableViewColumnDidMoveNotification'
    'body': 'NSTableViewColumnDidMoveNotification'
  'NSTableViewColumnDidResizeNotification (NSString*)':
    'prefix': 'NSTableViewColumnDidResizeNotification'
    'body': 'NSTableViewColumnDidResizeNotification'
  'NSTableViewRowViewKey (NSString*)':
    'prefix': 'NSTableViewRowViewKey'
    'body': 'NSTableViewRowViewKey'
  'NSTableViewSelectionDidChangeNotification (NSString*)':
    'prefix': 'NSTableViewSelectionDidChangeNotification'
    'body': 'NSTableViewSelectionDidChangeNotification'
  'NSTableViewSelectionIsChangingNotification (NSString*)':
    'prefix': 'NSTableViewSelectionIsChangingNotification'
    'body': 'NSTableViewSelectionIsChangingNotification'
  'NSTabularTextPboardType (NSString*)':
    'prefix': 'NSTabularTextPboardType'
    'body': 'NSTabularTextPboardType'
  'NSTargetBinding (NSString*)':
    'prefix': 'NSTargetBinding'
    'body': 'NSTargetBinding'
  'NSTextAlternativesAttributeName (NSString*)':
    'prefix': 'NSTextAlternativesAttributeName'
    'body': 'NSTextAlternativesAttributeName'
  'NSTextAlternativesSelectedAlternativeStringNotification (NSString*)':
    'prefix': 'NSTextAlternativesSelectedAlternativeStringNotification'
    'body': 'NSTextAlternativesSelectedAlternativeStringNotification'
  'NSTextCheckingDocumentAuthorKey (NSString*)':
    'prefix': 'NSTextCheckingDocumentAuthorKey'
    'body': 'NSTextCheckingDocumentAuthorKey'
  'NSTextCheckingDocumentTitleKey (NSString*)':
    'prefix': 'NSTextCheckingDocumentTitleKey'
    'body': 'NSTextCheckingDocumentTitleKey'
  'NSTextCheckingDocumentURLKey (NSString*)':
    'prefix': 'NSTextCheckingDocumentURLKey'
    'body': 'NSTextCheckingDocumentURLKey'
  'NSTextCheckingOrthographyKey (NSString*)':
    'prefix': 'NSTextCheckingOrthographyKey'
    'body': 'NSTextCheckingOrthographyKey'
  'NSTextCheckingQuotesKey (NSString*)':
    'prefix': 'NSTextCheckingQuotesKey'
    'body': 'NSTextCheckingQuotesKey'
  'NSTextCheckingReferenceDateKey (NSString*)':
    'prefix': 'NSTextCheckingReferenceDateKey'
    'body': 'NSTextCheckingReferenceDateKey'
  'NSTextCheckingReferenceTimeZoneKey (NSString*)':
    'prefix': 'NSTextCheckingReferenceTimeZoneKey'
    'body': 'NSTextCheckingReferenceTimeZoneKey'
  'NSTextCheckingRegularExpressionsKey (NSString*)':
    'prefix': 'NSTextCheckingRegularExpressionsKey'
    'body': 'NSTextCheckingRegularExpressionsKey'
  'NSTextCheckingReplacementsKey (NSString*)':
    'prefix': 'NSTextCheckingReplacementsKey'
    'body': 'NSTextCheckingReplacementsKey'
  'NSTextColorBinding (NSString*)':
    'prefix': 'NSTextColorBinding'
    'body': 'NSTextColorBinding'
  'NSTextDidBeginEditingNotification (NSString*)':
    'prefix': 'NSTextDidBeginEditingNotification'
    'body': 'NSTextDidBeginEditingNotification'
  'NSTextDidChangeNotification (NSString*)':
    'prefix': 'NSTextDidChangeNotification'
    'body': 'NSTextDidChangeNotification'
  'NSTextDidEndEditingNotification (NSString*)':
    'prefix': 'NSTextDidEndEditingNotification'
    'body': 'NSTextDidEndEditingNotification'
  'NSTextEncodingNameDocumentAttribute (NSString*)':
    'prefix': 'NSTextEncodingNameDocumentAttribute'
    'body': 'NSTextEncodingNameDocumentAttribute'
  'NSTextEncodingNameDocumentOption (NSString*)':
    'prefix': 'NSTextEncodingNameDocumentOption'
    'body': 'NSTextEncodingNameDocumentOption'
  'NSTextFinderCaseInsensitiveKey (NSString*)':
    'prefix': 'NSTextFinderCaseInsensitiveKey'
    'body': 'NSTextFinderCaseInsensitiveKey'
  'NSTextFinderMatchingTypeKey (NSString*)':
    'prefix': 'NSTextFinderMatchingTypeKey'
    'body': 'NSTextFinderMatchingTypeKey'
  'NSTextInputContextKeyboardSelectionDidChangeNotification (NSString*)':
    'prefix': 'NSTextInputContextKeyboardSelectionDidChangeNotification'
    'body': 'NSTextInputContextKeyboardSelectionDidChangeNotification'
  'NSTextLayoutSectionOrientation (NSString*)':
    'prefix': 'NSTextLayoutSectionOrientation'
    'body': 'NSTextLayoutSectionOrientation'
  'NSTextLayoutSectionRange (NSString*)':
    'prefix': 'NSTextLayoutSectionRange'
    'body': 'NSTextLayoutSectionRange'
  'NSTextLayoutSectionsAttribute (NSString*)':
    'prefix': 'NSTextLayoutSectionsAttribute'
    'body': 'NSTextLayoutSectionsAttribute'
  'NSTextLineTooLongException (NSString*)':
    'prefix': 'NSTextLineTooLongException'
    'body': 'NSTextLineTooLongException'
  'NSTextNoSelectionException (NSString*)':
    'prefix': 'NSTextNoSelectionException'
    'body': 'NSTextNoSelectionException'
  'NSTextReadException (NSString*)':
    'prefix': 'NSTextReadException'
    'body': 'NSTextReadException'
  'NSTextSizeMultiplierDocumentOption (NSString*)':
    'prefix': 'NSTextSizeMultiplierDocumentOption'
    'body': 'NSTextSizeMultiplierDocumentOption'
  'NSTextStorageDidProcessEditingNotification (NSString*)':
    'prefix': 'NSTextStorageDidProcessEditingNotification'
    'body': 'NSTextStorageDidProcessEditingNotification'
  'NSTextStorageWillProcessEditingNotification (NSString*)':
    'prefix': 'NSTextStorageWillProcessEditingNotification'
    'body': 'NSTextStorageWillProcessEditingNotification'
  'NSTextViewDidChangeSelectionNotification (NSString*)':
    'prefix': 'NSTextViewDidChangeSelectionNotification'
    'body': 'NSTextViewDidChangeSelectionNotification'
  'NSTextViewDidChangeTypingAttributesNotification (NSString*)':
    'prefix': 'NSTextViewDidChangeTypingAttributesNotification'
    'body': 'NSTextViewDidChangeTypingAttributesNotification'
  'NSTextViewWillChangeNotifyingTextViewNotification (NSString*)':
    'prefix': 'NSTextViewWillChangeNotifyingTextViewNotification'
    'body': 'NSTextViewWillChangeNotifyingTextViewNotification'
  'NSTextWriteException (NSString*)':
    'prefix': 'NSTextWriteException'
    'body': 'NSTextWriteException'
  'NSTimeoutDocumentOption (NSString*)':
    'prefix': 'NSTimeoutDocumentOption'
    'body': 'NSTimeoutDocumentOption'
  'NSTitleBinding (NSString*)':
    'prefix': 'NSTitleBinding'
    'body': 'NSTitleBinding'
  'NSTitleDocumentAttribute (NSString*)':
    'prefix': 'NSTitleDocumentAttribute'
    'body': 'NSTitleDocumentAttribute'
  'NSToolTipAttributeName (NSString*)':
    'prefix': 'NSToolTipAttributeName'
    'body': 'NSToolTipAttributeName'
  'NSToolTipBinding (NSString*)':
    'prefix': 'NSToolTipBinding'
    'body': 'NSToolTipBinding'
  'NSToolbarCustomizeToolbarItemIdentifier (NSString*)':
    'prefix': 'NSToolbarCustomizeToolbarItemIdentifier'
    'body': 'NSToolbarCustomizeToolbarItemIdentifier'
  'NSToolbarDidRemoveItemNotification (NSString*)':
    'prefix': 'NSToolbarDidRemoveItemNotification'
    'body': 'NSToolbarDidRemoveItemNotification'
  'NSToolbarFlexibleSpaceItemIdentifier (NSString*)':
    'prefix': 'NSToolbarFlexibleSpaceItemIdentifier'
    'body': 'NSToolbarFlexibleSpaceItemIdentifier'
  'NSToolbarPrintItemIdentifier (NSString*)':
    'prefix': 'NSToolbarPrintItemIdentifier'
    'body': 'NSToolbarPrintItemIdentifier'
  'NSToolbarSeparatorItemIdentifier (NSString*)':
    'prefix': 'NSToolbarSeparatorItemIdentifier'
    'body': 'NSToolbarSeparatorItemIdentifier'
  'NSToolbarShowColorsItemIdentifier (NSString*)':
    'prefix': 'NSToolbarShowColorsItemIdentifier'
    'body': 'NSToolbarShowColorsItemIdentifier'
  'NSToolbarShowFontsItemIdentifier (NSString*)':
    'prefix': 'NSToolbarShowFontsItemIdentifier'
    'body': 'NSToolbarShowFontsItemIdentifier'
  'NSToolbarSpaceItemIdentifier (NSString*)':
    'prefix': 'NSToolbarSpaceItemIdentifier'
    'body': 'NSToolbarSpaceItemIdentifier'
  'NSToolbarWillAddItemNotification (NSString*)':
    'prefix': 'NSToolbarWillAddItemNotification'
    'body': 'NSToolbarWillAddItemNotification'
  'NSTopMarginDocumentAttribute (NSString*)':
    'prefix': 'NSTopMarginDocumentAttribute'
    'body': 'NSTopMarginDocumentAttribute'
  'NSTransparentBinding (NSString*)':
    'prefix': 'NSTransparentBinding'
    'body': 'NSTransparentBinding'
  'NSTypedStreamVersionException (NSString*)':
    'prefix': 'NSTypedStreamVersionException'
    'body': 'NSTypedStreamVersionException'
  'NSURLPboardType (NSString*)':
    'prefix': 'NSURLPboardType'
    'body': 'NSURLPboardType'
  'NSUnderlineByWordMask (NSUInteger)':
    'prefix': 'NSUnderlineByWordMask'
    'body': 'NSUnderlineByWordMask'
  'NSUnderlineColorAttributeName (NSString*)':
    'prefix': 'NSUnderlineColorAttributeName'
    'body': 'NSUnderlineColorAttributeName'
  'NSUnderlineStrikethroughMask (NSUInteger)':
    'prefix': 'NSUnderlineStrikethroughMask'
    'body': 'NSUnderlineStrikethroughMask'
  'NSUnderlineStyleAttributeName (NSString*)':
    'prefix': 'NSUnderlineStyleAttributeName'
    'body': 'NSUnderlineStyleAttributeName'
  'NSUsesScreenFontsDocumentAttribute (NSString*)':
    'prefix': 'NSUsesScreenFontsDocumentAttribute'
    'body': 'NSUsesScreenFontsDocumentAttribute'
  'NSVCardPboardType (NSString*)':
    'prefix': 'NSVCardPboardType'
    'body': 'NSVCardPboardType'
  'NSValidatesImmediatelyBindingOption (NSString*)':
    'prefix': 'NSValidatesImmediatelyBindingOption'
    'body': 'NSValidatesImmediatelyBindingOption'
  'NSValueBinding (NSString*)':
    'prefix': 'NSValueBinding'
    'body': 'NSValueBinding'
  'NSValuePathBinding (NSString*)':
    'prefix': 'NSValuePathBinding'
    'body': 'NSValuePathBinding'
  'NSValueTransformerBindingOption (NSString*)':
    'prefix': 'NSValueTransformerBindingOption'
    'body': 'NSValueTransformerBindingOption'
  'NSValueTransformerNameBindingOption (NSString*)':
    'prefix': 'NSValueTransformerNameBindingOption'
    'body': 'NSValueTransformerNameBindingOption'
  'NSValueURLBinding (NSString*)':
    'prefix': 'NSValueURLBinding'
    'body': 'NSValueURLBinding'
  'NSVerticalGlyphFormAttributeName (NSString*)':
    'prefix': 'NSVerticalGlyphFormAttributeName'
    'body': 'NSVerticalGlyphFormAttributeName'
  'NSViewAnimationEffectKey (NSString*)':
    'prefix': 'NSViewAnimationEffectKey'
    'body': 'NSViewAnimationEffectKey'
  'NSViewAnimationEndFrameKey (NSString*)':
    'prefix': 'NSViewAnimationEndFrameKey'
    'body': 'NSViewAnimationEndFrameKey'
  'NSViewAnimationFadeInEffect (NSString*)':
    'prefix': 'NSViewAnimationFadeInEffect'
    'body': 'NSViewAnimationFadeInEffect'
  'NSViewAnimationFadeOutEffect (NSString*)':
    'prefix': 'NSViewAnimationFadeOutEffect'
    'body': 'NSViewAnimationFadeOutEffect'
  'NSViewAnimationStartFrameKey (NSString*)':
    'prefix': 'NSViewAnimationStartFrameKey'
    'body': 'NSViewAnimationStartFrameKey'
  'NSViewAnimationTargetKey (NSString*)':
    'prefix': 'NSViewAnimationTargetKey'
    'body': 'NSViewAnimationTargetKey'
  'NSViewBoundsDidChangeNotification (NSString*)':
    'prefix': 'NSViewBoundsDidChangeNotification'
    'body': 'NSViewBoundsDidChangeNotification'
  'NSViewDidUpdateTrackingAreasNotification (NSString*)':
    'prefix': 'NSViewDidUpdateTrackingAreasNotification'
    'body': 'NSViewDidUpdateTrackingAreasNotification'
  'NSViewFocusDidChangeNotification (NSString*)':
    'prefix': 'NSViewFocusDidChangeNotification'
    'body': 'NSViewFocusDidChangeNotification'
  'NSViewFrameDidChangeNotification (NSString*)':
    'prefix': 'NSViewFrameDidChangeNotification'
    'body': 'NSViewFrameDidChangeNotification'
  'NSViewGlobalFrameDidChangeNotification (NSString*)':
    'prefix': 'NSViewGlobalFrameDidChangeNotification'
    'body': 'NSViewGlobalFrameDidChangeNotification'
  'NSViewModeDocumentAttribute (NSString*)':
    'prefix': 'NSViewModeDocumentAttribute'
    'body': 'NSViewModeDocumentAttribute'
  'NSViewNoInstrinsicMetric (CGFloat)':
    'prefix': 'NSViewNoInstrinsicMetric'
    'body': 'NSViewNoInstrinsicMetric'
  'NSViewSizeDocumentAttribute (NSString*)':
    'prefix': 'NSViewSizeDocumentAttribute'
    'body': 'NSViewSizeDocumentAttribute'
  'NSViewZoomDocumentAttribute (NSString*)':
    'prefix': 'NSViewZoomDocumentAttribute'
    'body': 'NSViewZoomDocumentAttribute'
  'NSVisibleBinding (NSString*)':
    'prefix': 'NSVisibleBinding'
    'body': 'NSVisibleBinding'
  'NSVoiceAge (NSString*)':
    'prefix': 'NSVoiceAge'
    'body': 'NSVoiceAge'
  'NSVoiceDemoText (NSString*)':
    'prefix': 'NSVoiceDemoText'
    'body': 'NSVoiceDemoText'
  'NSVoiceGender (NSString*)':
    'prefix': 'NSVoiceGender'
    'body': 'NSVoiceGender'
  'NSVoiceGenderFemale (NSString*)':
    'prefix': 'NSVoiceGenderFemale'
    'body': 'NSVoiceGenderFemale'
  'NSVoiceGenderMale (NSString*)':
    'prefix': 'NSVoiceGenderMale'
    'body': 'NSVoiceGenderMale'
  'NSVoiceGenderNeuter (NSString*)':
    'prefix': 'NSVoiceGenderNeuter'
    'body': 'NSVoiceGenderNeuter'
  'NSVoiceIdentifier (NSString*)':
    'prefix': 'NSVoiceIdentifier'
    'body': 'NSVoiceIdentifier'
  'NSVoiceIndividuallySpokenCharacters (NSString*)':
    'prefix': 'NSVoiceIndividuallySpokenCharacters'
    'body': 'NSVoiceIndividuallySpokenCharacters'
  'NSVoiceLanguage (NSString*)':
    'prefix': 'NSVoiceLanguage'
    'body': 'NSVoiceLanguage'
  'NSVoiceLocaleIdentifier (NSString*)':
    'prefix': 'NSVoiceLocaleIdentifier'
    'body': 'NSVoiceLocaleIdentifier'
  'NSVoiceName (NSString*)':
    'prefix': 'NSVoiceName'
    'body': 'NSVoiceName'
  'NSVoiceSupportedCharacters (NSString*)':
    'prefix': 'NSVoiceSupportedCharacters'
    'body': 'NSVoiceSupportedCharacters'
  'NSWarningValueBinding (NSString*)':
    'prefix': 'NSWarningValueBinding'
    'body': 'NSWarningValueBinding'
  'NSWebArchiveTextDocumentType (NSString*)':
    'prefix': 'NSWebArchiveTextDocumentType'
    'body': 'NSWebArchiveTextDocumentType'
  'NSWebPreferencesDocumentOption (NSString*)':
    'prefix': 'NSWebPreferencesDocumentOption'
    'body': 'NSWebPreferencesDocumentOption'
  'NSWebResourceLoadDelegateDocumentOption (NSString*)':
    'prefix': 'NSWebResourceLoadDelegateDocumentOption'
    'body': 'NSWebResourceLoadDelegateDocumentOption'
  'NSWhite (CGFloat)':
    'prefix': 'NSWhite'
    'body': 'NSWhite'
  'NSWidthBinding (NSString*)':
    'prefix': 'NSWidthBinding'
    'body': 'NSWidthBinding'
  'NSWindowDidBecomeKeyNotification (NSString*)':
    'prefix': 'NSWindowDidBecomeKeyNotification'
    'body': 'NSWindowDidBecomeKeyNotification'
  'NSWindowDidBecomeMainNotification (NSString*)':
    'prefix': 'NSWindowDidBecomeMainNotification'
    'body': 'NSWindowDidBecomeMainNotification'
  'NSWindowDidChangeBackingPropertiesNotification (NSString*)':
    'prefix': 'NSWindowDidChangeBackingPropertiesNotification'
    'body': 'NSWindowDidChangeBackingPropertiesNotification'
  'NSWindowDidChangeOcclusionStateNotification (NSString*)':
    'prefix': 'NSWindowDidChangeOcclusionStateNotification'
    'body': 'NSWindowDidChangeOcclusionStateNotification'
  'NSWindowDidChangeScreenNotification (NSString*)':
    'prefix': 'NSWindowDidChangeScreenNotification'
    'body': 'NSWindowDidChangeScreenNotification'
  'NSWindowDidChangeScreenProfileNotification (NSString*)':
    'prefix': 'NSWindowDidChangeScreenProfileNotification'
    'body': 'NSWindowDidChangeScreenProfileNotification'
  'NSWindowDidDeminiaturizeNotification (NSString*)':
    'prefix': 'NSWindowDidDeminiaturizeNotification'
    'body': 'NSWindowDidDeminiaturizeNotification'
  'NSWindowDidEndLiveResizeNotification (NSString*)':
    'prefix': 'NSWindowDidEndLiveResizeNotification'
    'body': 'NSWindowDidEndLiveResizeNotification'
  'NSWindowDidEndSheetNotification (NSString*)':
    'prefix': 'NSWindowDidEndSheetNotification'
    'body': 'NSWindowDidEndSheetNotification'
  'NSWindowDidEnterFullScreenNotification (NSString*)':
    'prefix': 'NSWindowDidEnterFullScreenNotification'
    'body': 'NSWindowDidEnterFullScreenNotification'
  'NSWindowDidEnterVersionBrowserNotification (NSString*)':
    'prefix': 'NSWindowDidEnterVersionBrowserNotification'
    'body': 'NSWindowDidEnterVersionBrowserNotification'
  'NSWindowDidExitFullScreenNotification (NSString*)':
    'prefix': 'NSWindowDidExitFullScreenNotification'
    'body': 'NSWindowDidExitFullScreenNotification'
  'NSWindowDidExitVersionBrowserNotification (NSString*)':
    'prefix': 'NSWindowDidExitVersionBrowserNotification'
    'body': 'NSWindowDidExitVersionBrowserNotification'
  'NSWindowDidExposeNotification (NSString*)':
    'prefix': 'NSWindowDidExposeNotification'
    'body': 'NSWindowDidExposeNotification'
  'NSWindowDidMiniaturizeNotification (NSString*)':
    'prefix': 'NSWindowDidMiniaturizeNotification'
    'body': 'NSWindowDidMiniaturizeNotification'
  'NSWindowDidMoveNotification (NSString*)':
    'prefix': 'NSWindowDidMoveNotification'
    'body': 'NSWindowDidMoveNotification'
  'NSWindowDidResignKeyNotification (NSString*)':
    'prefix': 'NSWindowDidResignKeyNotification'
    'body': 'NSWindowDidResignKeyNotification'
  'NSWindowDidResignMainNotification (NSString*)':
    'prefix': 'NSWindowDidResignMainNotification'
    'body': 'NSWindowDidResignMainNotification'
  'NSWindowDidResizeNotification (NSString*)':
    'prefix': 'NSWindowDidResizeNotification'
    'body': 'NSWindowDidResizeNotification'
  'NSWindowDidUpdateNotification (NSString*)':
    'prefix': 'NSWindowDidUpdateNotification'
    'body': 'NSWindowDidUpdateNotification'
  'NSWindowServerCommunicationException (NSString*)':
    'prefix': 'NSWindowServerCommunicationException'
    'body': 'NSWindowServerCommunicationException'
  'NSWindowWillBeginSheetNotification (NSString*)':
    'prefix': 'NSWindowWillBeginSheetNotification'
    'body': 'NSWindowWillBeginSheetNotification'
  'NSWindowWillCloseNotification (NSString*)':
    'prefix': 'NSWindowWillCloseNotification'
    'body': 'NSWindowWillCloseNotification'
  'NSWindowWillEnterFullScreenNotification (NSString*)':
    'prefix': 'NSWindowWillEnterFullScreenNotification'
    'body': 'NSWindowWillEnterFullScreenNotification'
  'NSWindowWillEnterVersionBrowserNotification (NSString*)':
    'prefix': 'NSWindowWillEnterVersionBrowserNotification'
    'body': 'NSWindowWillEnterVersionBrowserNotification'
  'NSWindowWillExitFullScreenNotification (NSString*)':
    'prefix': 'NSWindowWillExitFullScreenNotification'
    'body': 'NSWindowWillExitFullScreenNotification'
  'NSWindowWillExitVersionBrowserNotification (NSString*)':
    'prefix': 'NSWindowWillExitVersionBrowserNotification'
    'body': 'NSWindowWillExitVersionBrowserNotification'
  'NSWindowWillMiniaturizeNotification (NSString*)':
    'prefix': 'NSWindowWillMiniaturizeNotification'
    'body': 'NSWindowWillMiniaturizeNotification'
  'NSWindowWillMoveNotification (NSString*)':
    'prefix': 'NSWindowWillMoveNotification'
    'body': 'NSWindowWillMoveNotification'
  'NSWindowWillStartLiveResizeNotification (NSString*)':
    'prefix': 'NSWindowWillStartLiveResizeNotification'
    'body': 'NSWindowWillStartLiveResizeNotification'
  'NSWordMLTextDocumentType (NSString*)':
    'prefix': 'NSWordMLTextDocumentType'
    'body': 'NSWordMLTextDocumentType'
  'NSWordTablesReadException (NSString*)':
    'prefix': 'NSWordTablesReadException'
    'body': 'NSWordTablesReadException'
  'NSWordTablesWriteException (NSString*)':
    'prefix': 'NSWordTablesWriteException'
    'body': 'NSWordTablesWriteException'
  'NSWorkspaceActiveSpaceDidChangeNotification (NSString*)':
    'prefix': 'NSWorkspaceActiveSpaceDidChangeNotification'
    'body': 'NSWorkspaceActiveSpaceDidChangeNotification'
  'NSWorkspaceApplicationKey (NSString*)':
    'prefix': 'NSWorkspaceApplicationKey'
    'body': 'NSWorkspaceApplicationKey'
  'NSWorkspaceCompressOperation (NSString*)':
    'prefix': 'NSWorkspaceCompressOperation'
    'body': 'NSWorkspaceCompressOperation'
  'NSWorkspaceCopyOperation (NSString*)':
    'prefix': 'NSWorkspaceCopyOperation'
    'body': 'NSWorkspaceCopyOperation'
  'NSWorkspaceDecompressOperation (NSString*)':
    'prefix': 'NSWorkspaceDecompressOperation'
    'body': 'NSWorkspaceDecompressOperation'
  'NSWorkspaceDecryptOperation (NSString*)':
    'prefix': 'NSWorkspaceDecryptOperation'
    'body': 'NSWorkspaceDecryptOperation'
  'NSWorkspaceDesktopImageAllowClippingKey (NSString*)':
    'prefix': 'NSWorkspaceDesktopImageAllowClippingKey'
    'body': 'NSWorkspaceDesktopImageAllowClippingKey'
  'NSWorkspaceDesktopImageFillColorKey (NSString*)':
    'prefix': 'NSWorkspaceDesktopImageFillColorKey'
    'body': 'NSWorkspaceDesktopImageFillColorKey'
  'NSWorkspaceDesktopImageScalingKey (NSString*)':
    'prefix': 'NSWorkspaceDesktopImageScalingKey'
    'body': 'NSWorkspaceDesktopImageScalingKey'
  'NSWorkspaceDestroyOperation (NSString*)':
    'prefix': 'NSWorkspaceDestroyOperation'
    'body': 'NSWorkspaceDestroyOperation'
  'NSWorkspaceDidActivateApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidActivateApplicationNotification'
    'body': 'NSWorkspaceDidActivateApplicationNotification'
  'NSWorkspaceDidChangeFileLabelsNotification (NSString*)':
    'prefix': 'NSWorkspaceDidChangeFileLabelsNotification'
    'body': 'NSWorkspaceDidChangeFileLabelsNotification'
  'NSWorkspaceDidDeactivateApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidDeactivateApplicationNotification'
    'body': 'NSWorkspaceDidDeactivateApplicationNotification'
  'NSWorkspaceDidHideApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidHideApplicationNotification'
    'body': 'NSWorkspaceDidHideApplicationNotification'
  'NSWorkspaceDidLaunchApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidLaunchApplicationNotification'
    'body': 'NSWorkspaceDidLaunchApplicationNotification'
  'NSWorkspaceDidMountNotification (NSString*)':
    'prefix': 'NSWorkspaceDidMountNotification'
    'body': 'NSWorkspaceDidMountNotification'
  'NSWorkspaceDidPerformFileOperationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidPerformFileOperationNotification'
    'body': 'NSWorkspaceDidPerformFileOperationNotification'
  'NSWorkspaceDidRenameVolumeNotification (NSString*)':
    'prefix': 'NSWorkspaceDidRenameVolumeNotification'
    'body': 'NSWorkspaceDidRenameVolumeNotification'
  'NSWorkspaceDidTerminateApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidTerminateApplicationNotification'
    'body': 'NSWorkspaceDidTerminateApplicationNotification'
  'NSWorkspaceDidUnhideApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceDidUnhideApplicationNotification'
    'body': 'NSWorkspaceDidUnhideApplicationNotification'
  'NSWorkspaceDidUnmountNotification (NSString*)':
    'prefix': 'NSWorkspaceDidUnmountNotification'
    'body': 'NSWorkspaceDidUnmountNotification'
  'NSWorkspaceDidWakeNotification (NSString*)':
    'prefix': 'NSWorkspaceDidWakeNotification'
    'body': 'NSWorkspaceDidWakeNotification'
  'NSWorkspaceDuplicateOperation (NSString*)':
    'prefix': 'NSWorkspaceDuplicateOperation'
    'body': 'NSWorkspaceDuplicateOperation'
  'NSWorkspaceEncryptOperation (NSString*)':
    'prefix': 'NSWorkspaceEncryptOperation'
    'body': 'NSWorkspaceEncryptOperation'
  'NSWorkspaceLaunchConfigurationAppleEvent (NSString*)':
    'prefix': 'NSWorkspaceLaunchConfigurationAppleEvent'
    'body': 'NSWorkspaceLaunchConfigurationAppleEvent'
  'NSWorkspaceLaunchConfigurationArchitecture (NSString*)':
    'prefix': 'NSWorkspaceLaunchConfigurationArchitecture'
    'body': 'NSWorkspaceLaunchConfigurationArchitecture'
  'NSWorkspaceLaunchConfigurationArguments (NSString*)':
    'prefix': 'NSWorkspaceLaunchConfigurationArguments'
    'body': 'NSWorkspaceLaunchConfigurationArguments'
  'NSWorkspaceLaunchConfigurationEnvironment (NSString*)':
    'prefix': 'NSWorkspaceLaunchConfigurationEnvironment'
    'body': 'NSWorkspaceLaunchConfigurationEnvironment'
  'NSWorkspaceLinkOperation (NSString*)':
    'prefix': 'NSWorkspaceLinkOperation'
    'body': 'NSWorkspaceLinkOperation'
  'NSWorkspaceMoveOperation (NSString*)':
    'prefix': 'NSWorkspaceMoveOperation'
    'body': 'NSWorkspaceMoveOperation'
  'NSWorkspaceRecycleOperation (NSString*)':
    'prefix': 'NSWorkspaceRecycleOperation'
    'body': 'NSWorkspaceRecycleOperation'
  'NSWorkspaceScreensDidSleepNotification (NSString*)':
    'prefix': 'NSWorkspaceScreensDidSleepNotification'
    'body': 'NSWorkspaceScreensDidSleepNotification'
  'NSWorkspaceScreensDidWakeNotification (NSString*)':
    'prefix': 'NSWorkspaceScreensDidWakeNotification'
    'body': 'NSWorkspaceScreensDidWakeNotification'
  'NSWorkspaceSessionDidBecomeActiveNotification (NSString*)':
    'prefix': 'NSWorkspaceSessionDidBecomeActiveNotification'
    'body': 'NSWorkspaceSessionDidBecomeActiveNotification'
  'NSWorkspaceSessionDidResignActiveNotification (NSString*)':
    'prefix': 'NSWorkspaceSessionDidResignActiveNotification'
    'body': 'NSWorkspaceSessionDidResignActiveNotification'
  'NSWorkspaceVolumeLocalizedNameKey (NSString*)':
    'prefix': 'NSWorkspaceVolumeLocalizedNameKey'
    'body': 'NSWorkspaceVolumeLocalizedNameKey'
  'NSWorkspaceVolumeOldLocalizedNameKey (NSString*)':
    'prefix': 'NSWorkspaceVolumeOldLocalizedNameKey'
    'body': 'NSWorkspaceVolumeOldLocalizedNameKey'
  'NSWorkspaceVolumeOldURLKey (NSString*)':
    'prefix': 'NSWorkspaceVolumeOldURLKey'
    'body': 'NSWorkspaceVolumeOldURLKey'
  'NSWorkspaceVolumeURLKey (NSString*)':
    'prefix': 'NSWorkspaceVolumeURLKey'
    'body': 'NSWorkspaceVolumeURLKey'
  'NSWorkspaceWillLaunchApplicationNotification (NSString*)':
    'prefix': 'NSWorkspaceWillLaunchApplicationNotification'
    'body': 'NSWorkspaceWillLaunchApplicationNotification'
  'NSWorkspaceWillPowerOffNotification (NSString*)':
    'prefix': 'NSWorkspaceWillPowerOffNotification'
    'body': 'NSWorkspaceWillPowerOffNotification'
  'NSWorkspaceWillSleepNotification (NSString*)':
    'prefix': 'NSWorkspaceWillSleepNotification'
    'body': 'NSWorkspaceWillSleepNotification'
  'NSWorkspaceWillUnmountNotification (NSString*)':
    'prefix': 'NSWorkspaceWillUnmountNotification'
    'body': 'NSWorkspaceWillUnmountNotification'
  'NSWritingDirectionAttributeName (NSString*)':
    'prefix': 'NSWritingDirectionAttributeName'
    'body': 'NSWritingDirectionAttributeName'
  'NSAWTEventType (16)':
    'prefix': 'NSAWTEventType'
    'body': 'NSAWTEventType'
  'NSAboveBottom (4)':
    'prefix': 'NSAboveBottom'
    'body': 'NSAboveBottom'
  'NSAboveTop (1)':
    'prefix': 'NSAboveTop'
    'body': 'NSAboveTop'
  'NSAccessibilityPriorityHigh (90)':
    'prefix': 'NSAccessibilityPriorityHigh'
    'body': 'NSAccessibilityPriorityHigh'
  'NSAccessibilityPriorityLow (10)':
    'prefix': 'NSAccessibilityPriorityLow'
    'body': 'NSAccessibilityPriorityLow'
  'NSAccessibilityPriorityMedium (50)':
    'prefix': 'NSAccessibilityPriorityMedium'
    'body': 'NSAccessibilityPriorityMedium'
  'NSAddTraitFontAction (2)':
    'prefix': 'NSAddTraitFontAction'
    'body': 'NSAddTraitFontAction'
  'NSAdobeCNS1CharacterCollection (1)':
    'prefix': 'NSAdobeCNS1CharacterCollection'
    'body': 'NSAdobeCNS1CharacterCollection'
  'NSAdobeGB1CharacterCollection (2)':
    'prefix': 'NSAdobeGB1CharacterCollection'
    'body': 'NSAdobeGB1CharacterCollection'
  'NSAdobeJapan1CharacterCollection (3)':
    'prefix': 'NSAdobeJapan1CharacterCollection'
    'body': 'NSAdobeJapan1CharacterCollection'
  'NSAdobeJapan2CharacterCollection (4)':
    'prefix': 'NSAdobeJapan2CharacterCollection'
    'body': 'NSAdobeJapan2CharacterCollection'
  'NSAdobeKorea1CharacterCollection (5)':
    'prefix': 'NSAdobeKorea1CharacterCollection'
    'body': 'NSAdobeKorea1CharacterCollection'
  'NSAlertAlternateReturn (0)':
    'prefix': 'NSAlertAlternateReturn'
    'body': 'NSAlertAlternateReturn'
  'NSAlertDefaultReturn (1)':
    'prefix': 'NSAlertDefaultReturn'
    'body': 'NSAlertDefaultReturn'
  'NSAlertErrorReturn (-2)':
    'prefix': 'NSAlertErrorReturn'
    'body': 'NSAlertErrorReturn'
  'NSAlertFirstButtonReturn (1000)':
    'prefix': 'NSAlertFirstButtonReturn'
    'body': 'NSAlertFirstButtonReturn'
  'NSAlertOtherReturn (-1)':
    'prefix': 'NSAlertOtherReturn'
    'body': 'NSAlertOtherReturn'
  'NSAlertSecondButtonReturn (1001)':
    'prefix': 'NSAlertSecondButtonReturn'
    'body': 'NSAlertSecondButtonReturn'
  'NSAlertThirdButtonReturn (1002)':
    'prefix': 'NSAlertThirdButtonReturn'
    'body': 'NSAlertThirdButtonReturn'
  'NSAllScrollerParts (2)':
    'prefix': 'NSAllScrollerParts'
    'body': 'NSAllScrollerParts'
  'NSAlphaFirstBitmapFormat (1)':
    'prefix': 'NSAlphaFirstBitmapFormat'
    'body': 'NSAlphaFirstBitmapFormat'
  'NSAlphaNonpremultipliedBitmapFormat (2)':
    'prefix': 'NSAlphaNonpremultipliedBitmapFormat'
    'body': 'NSAlphaNonpremultipliedBitmapFormat'
  'NSAlphaShiftKeyMask (65536)':
    'prefix': 'NSAlphaShiftKeyMask'
    'body': 'NSAlphaShiftKeyMask'
  'NSAlternateKeyMask (524288)':
    'prefix': 'NSAlternateKeyMask'
    'body': 'NSAlternateKeyMask'
  'NSAnimationBlocking (0)':
    'prefix': 'NSAnimationBlocking'
    'body': 'NSAnimationBlocking'
  'NSAnimationEaseIn (1)':
    'prefix': 'NSAnimationEaseIn'
    'body': 'NSAnimationEaseIn'
  'NSAnimationEaseInOut (0)':
    'prefix': 'NSAnimationEaseInOut'
    'body': 'NSAnimationEaseInOut'
  'NSAnimationEaseOut (2)':
    'prefix': 'NSAnimationEaseOut'
    'body': 'NSAnimationEaseOut'
  'NSAnimationEffectDisappearingItemDefault (0)':
    'prefix': 'NSAnimationEffectDisappearingItemDefault'
    'body': 'NSAnimationEffectDisappearingItemDefault'
  'NSAnimationEffectPoof (10)':
    'prefix': 'NSAnimationEffectPoof'
    'body': 'NSAnimationEffectPoof'
  'NSAnimationLinear (3)':
    'prefix': 'NSAnimationLinear'
    'body': 'NSAnimationLinear'
  'NSAnimationNonblocking (1)':
    'prefix': 'NSAnimationNonblocking'
    'body': 'NSAnimationNonblocking'
  'NSAnimationNonblockingThreaded (2)':
    'prefix': 'NSAnimationNonblockingThreaded'
    'body': 'NSAnimationNonblockingThreaded'
  'NSAnyEventMask (4294967295)':
    'prefix': 'NSAnyEventMask'
    'body': 'NSAnyEventMask'
  'NSAnyType (0)':
    'prefix': 'NSAnyType'
    'body': 'NSAnyType'
  'NSAppKitDefined (13)':
    'prefix': 'NSAppKitDefined'
    'body': 'NSAppKitDefined'
  'NSAppKitDefinedMask (8192)':
    'prefix': 'NSAppKitDefinedMask'
    'body': 'NSAppKitDefinedMask'
  'NSAppKitVersionNumber10_0 (577)':
    'prefix': 'NSAppKitVersionNumber10_0'
    'body': 'NSAppKitVersionNumber10_0'
  'NSAppKitVersionNumber10_1 (620)':
    'prefix': 'NSAppKitVersionNumber10_1'
    'body': 'NSAppKitVersionNumber10_1'
  'NSAppKitVersionNumber10_2 (663)':
    'prefix': 'NSAppKitVersionNumber10_2'
    'body': 'NSAppKitVersionNumber10_2'
  'NSAppKitVersionNumber10_2_3 (663.6)':
    'prefix': 'NSAppKitVersionNumber10_2_3'
    'body': 'NSAppKitVersionNumber10_2_3'
  'NSAppKitVersionNumber10_3 (743)':
    'prefix': 'NSAppKitVersionNumber10_3'
    'body': 'NSAppKitVersionNumber10_3'
  'NSAppKitVersionNumber10_3_2 (743.14)':
    'prefix': 'NSAppKitVersionNumber10_3_2'
    'body': 'NSAppKitVersionNumber10_3_2'
  'NSAppKitVersionNumber10_3_3 (743.2)':
    'prefix': 'NSAppKitVersionNumber10_3_3'
    'body': 'NSAppKitVersionNumber10_3_3'
  'NSAppKitVersionNumber10_3_5 (743.24)':
    'prefix': 'NSAppKitVersionNumber10_3_5'
    'body': 'NSAppKitVersionNumber10_3_5'
  'NSAppKitVersionNumber10_3_7 (743.33)':
    'prefix': 'NSAppKitVersionNumber10_3_7'
    'body': 'NSAppKitVersionNumber10_3_7'
  'NSAppKitVersionNumber10_3_9 (743.36)':
    'prefix': 'NSAppKitVersionNumber10_3_9'
    'body': 'NSAppKitVersionNumber10_3_9'
  'NSAppKitVersionNumber10_4 (824)':
    'prefix': 'NSAppKitVersionNumber10_4'
    'body': 'NSAppKitVersionNumber10_4'
  'NSAppKitVersionNumber10_4_1 (824.1)':
    'prefix': 'NSAppKitVersionNumber10_4_1'
    'body': 'NSAppKitVersionNumber10_4_1'
  'NSAppKitVersionNumber10_4_3 (824.23)':
    'prefix': 'NSAppKitVersionNumber10_4_3'
    'body': 'NSAppKitVersionNumber10_4_3'
  'NSAppKitVersionNumber10_4_4 (824.33)':
    'prefix': 'NSAppKitVersionNumber10_4_4'
    'body': 'NSAppKitVersionNumber10_4_4'
  'NSAppKitVersionNumber10_4_7 (824.41)':
    'prefix': 'NSAppKitVersionNumber10_4_7'
    'body': 'NSAppKitVersionNumber10_4_7'
  'NSAppKitVersionNumber10_5 (949)':
    'prefix': 'NSAppKitVersionNumber10_5'
    'body': 'NSAppKitVersionNumber10_5'
  'NSAppKitVersionNumber10_5_2 (949.27)':
    'prefix': 'NSAppKitVersionNumber10_5_2'
    'body': 'NSAppKitVersionNumber10_5_2'
  'NSAppKitVersionNumber10_5_3 (949.33)':
    'prefix': 'NSAppKitVersionNumber10_5_3'
    'body': 'NSAppKitVersionNumber10_5_3'
  'NSAppKitVersionNumber10_6 (1038)':
    'prefix': 'NSAppKitVersionNumber10_6'
    'body': 'NSAppKitVersionNumber10_6'
  'NSAppKitVersionNumber10_7 (1138)':
    'prefix': 'NSAppKitVersionNumber10_7'
    'body': 'NSAppKitVersionNumber10_7'
  'NSAppKitVersionNumber10_7_2 (1138.23)':
    'prefix': 'NSAppKitVersionNumber10_7_2'
    'body': 'NSAppKitVersionNumber10_7_2'
  'NSAppKitVersionNumber10_7_3 (1138.32)':
    'prefix': 'NSAppKitVersionNumber10_7_3'
    'body': 'NSAppKitVersionNumber10_7_3'
  'NSAppKitVersionNumber10_7_4 (1138.47)':
    'prefix': 'NSAppKitVersionNumber10_7_4'
    'body': 'NSAppKitVersionNumber10_7_4'
  'NSAppKitVersionNumber10_8 (1187)':
    'prefix': 'NSAppKitVersionNumber10_8'
    'body': 'NSAppKitVersionNumber10_8'
  'NSAppKitVersionNumberWithColumnResizingBrowser (685.0)':
    'prefix': 'NSAppKitVersionNumberWithColumnResizingBrowser'
    'body': 'NSAppKitVersionNumberWithColumnResizingBrowser'
  'NSAppKitVersionNumberWithContinuousScrollingBrowser (680.0)':
    'prefix': 'NSAppKitVersionNumberWithContinuousScrollingBrowser'
    'body': 'NSAppKitVersionNumberWithContinuousScrollingBrowser'
  'NSAppKitVersionNumberWithCursorSizeSupport (682.0)':
    'prefix': 'NSAppKitVersionNumberWithCursorSizeSupport'
    'body': 'NSAppKitVersionNumberWithCursorSizeSupport'
  'NSAppKitVersionNumberWithCustomSheetPosition (686.0)':
    'prefix': 'NSAppKitVersionNumberWithCustomSheetPosition'
    'body': 'NSAppKitVersionNumberWithCustomSheetPosition'
  'NSAppKitVersionNumberWithDeferredWindowDisplaySupport (1019.0)':
    'prefix': 'NSAppKitVersionNumberWithDeferredWindowDisplaySupport'
    'body': 'NSAppKitVersionNumberWithDeferredWindowDisplaySupport'
  'NSAppKitVersionNumberWithDirectionalTabs (631.0)':
    'prefix': 'NSAppKitVersionNumberWithDirectionalTabs'
    'body': 'NSAppKitVersionNumberWithDirectionalTabs'
  'NSAppKitVersionNumberWithDockTilePlugInSupport (1001.0)':
    'prefix': 'NSAppKitVersionNumberWithDockTilePlugInSupport'
    'body': 'NSAppKitVersionNumberWithDockTilePlugInSupport'
  'NSAppKitVersionNumberWithPatternColorLeakFix (641.0)':
    'prefix': 'NSAppKitVersionNumberWithPatternColorLeakFix'
    'body': 'NSAppKitVersionNumberWithPatternColorLeakFix'
  'NSApplicationActivateAllWindows (1)':
    'prefix': 'NSApplicationActivateAllWindows'
    'body': 'NSApplicationActivateAllWindows'
  'NSApplicationActivateIgnoringOtherApps (2)':
    'prefix': 'NSApplicationActivateIgnoringOtherApps'
    'body': 'NSApplicationActivateIgnoringOtherApps'
  'NSApplicationActivatedEventType (1)':
    'prefix': 'NSApplicationActivatedEventType'
    'body': 'NSApplicationActivatedEventType'
  'NSApplicationActivationPolicyAccessory (1)':
    'prefix': 'NSApplicationActivationPolicyAccessory'
    'body': 'NSApplicationActivationPolicyAccessory'
  'NSApplicationActivationPolicyProhibited (2)':
    'prefix': 'NSApplicationActivationPolicyProhibited'
    'body': 'NSApplicationActivationPolicyProhibited'
  'NSApplicationActivationPolicyRegular (0)':
    'prefix': 'NSApplicationActivationPolicyRegular'
    'body': 'NSApplicationActivationPolicyRegular'
  'NSApplicationDeactivatedEventType (2)':
    'prefix': 'NSApplicationDeactivatedEventType'
    'body': 'NSApplicationDeactivatedEventType'
  'NSApplicationDefined (15)':
    'prefix': 'NSApplicationDefined'
    'body': 'NSApplicationDefined'
  'NSApplicationDefinedMask (32768)':
    'prefix': 'NSApplicationDefinedMask'
    'body': 'NSApplicationDefinedMask'
  'NSApplicationDelegateReplyCancel (1)':
    'prefix': 'NSApplicationDelegateReplyCancel'
    'body': 'NSApplicationDelegateReplyCancel'
  'NSApplicationDelegateReplyFailure (2)':
    'prefix': 'NSApplicationDelegateReplyFailure'
    'body': 'NSApplicationDelegateReplyFailure'
  'NSApplicationDelegateReplySuccess (0)':
    'prefix': 'NSApplicationDelegateReplySuccess'
    'body': 'NSApplicationDelegateReplySuccess'
  'NSApplicationOcclusionStateVisible (2)':
    'prefix': 'NSApplicationOcclusionStateVisible'
    'body': 'NSApplicationOcclusionStateVisible'
  'NSApplicationPresentationAutoHideDock (1)':
    'prefix': 'NSApplicationPresentationAutoHideDock'
    'body': 'NSApplicationPresentationAutoHideDock'
  'NSApplicationPresentationAutoHideMenuBar (4)':
    'prefix': 'NSApplicationPresentationAutoHideMenuBar'
    'body': 'NSApplicationPresentationAutoHideMenuBar'
  'NSApplicationPresentationAutoHideToolbar (2048)':
    'prefix': 'NSApplicationPresentationAutoHideToolbar'
    'body': 'NSApplicationPresentationAutoHideToolbar'
  'NSApplicationPresentationDefault (0)':
    'prefix': 'NSApplicationPresentationDefault'
    'body': 'NSApplicationPresentationDefault'
  'NSApplicationPresentationDisableAppleMenu (16)':
    'prefix': 'NSApplicationPresentationDisableAppleMenu'
    'body': 'NSApplicationPresentationDisableAppleMenu'
  'NSApplicationPresentationDisableForceQuit (64)':
    'prefix': 'NSApplicationPresentationDisableForceQuit'
    'body': 'NSApplicationPresentationDisableForceQuit'
  'NSApplicationPresentationDisableHideApplication (256)':
    'prefix': 'NSApplicationPresentationDisableHideApplication'
    'body': 'NSApplicationPresentationDisableHideApplication'
  'NSApplicationPresentationDisableMenuBarTransparency (512)':
    'prefix': 'NSApplicationPresentationDisableMenuBarTransparency'
    'body': 'NSApplicationPresentationDisableMenuBarTransparency'
  'NSApplicationPresentationDisableProcessSwitching (32)':
    'prefix': 'NSApplicationPresentationDisableProcessSwitching'
    'body': 'NSApplicationPresentationDisableProcessSwitching'
  'NSApplicationPresentationDisableSessionTermination (128)':
    'prefix': 'NSApplicationPresentationDisableSessionTermination'
    'body': 'NSApplicationPresentationDisableSessionTermination'
  'NSApplicationPresentationFullScreen (1024)':
    'prefix': 'NSApplicationPresentationFullScreen'
    'body': 'NSApplicationPresentationFullScreen'
  'NSApplicationPresentationHideDock (2)':
    'prefix': 'NSApplicationPresentationHideDock'
    'body': 'NSApplicationPresentationHideDock'
  'NSApplicationPresentationHideMenuBar (8)':
    'prefix': 'NSApplicationPresentationHideMenuBar'
    'body': 'NSApplicationPresentationHideMenuBar'
  'NSAscendingPageOrder (1)':
    'prefix': 'NSAscendingPageOrder'
    'body': 'NSAscendingPageOrder'
  'NSAtBottom (5)':
    'prefix': 'NSAtBottom'
    'body': 'NSAtBottom'
  'NSAtTop (2)':
    'prefix': 'NSAtTop'
    'body': 'NSAtTop'
  'NSAttachmentCharacter (65532)':
    'prefix': 'NSAttachmentCharacter'
    'body': 'NSAttachmentCharacter'
  'NSAutoPagination (0)':
    'prefix': 'NSAutoPagination'
    'body': 'NSAutoPagination'
  'NSAutosaveAsOperation (5)':
    'prefix': 'NSAutosaveAsOperation'
    'body': 'NSAutosaveAsOperation'
  'NSAutosaveElsewhereOperation (3)':
    'prefix': 'NSAutosaveElsewhereOperation'
    'body': 'NSAutosaveElsewhereOperation'
  'NSAutosaveInPlaceOperation (4)':
    'prefix': 'NSAutosaveInPlaceOperation'
    'body': 'NSAutosaveInPlaceOperation'
  'NSAutosaveOperation (3)':
    'prefix': 'NSAutosaveOperation'
    'body': 'NSAutosaveOperation'
  'NSBMPFileType (1)':
    'prefix': 'NSBMPFileType'
    'body': 'NSBMPFileType'
  'NSBackTabCharacter (25)':
    'prefix': 'NSBackTabCharacter'
    'body': 'NSBackTabCharacter'
  'NSBackgroundStyleDark (1)':
    'prefix': 'NSBackgroundStyleDark'
    'body': 'NSBackgroundStyleDark'
  'NSBackgroundStyleLight (0)':
    'prefix': 'NSBackgroundStyleLight'
    'body': 'NSBackgroundStyleLight'
  'NSBackgroundStyleLowered (3)':
    'prefix': 'NSBackgroundStyleLowered'
    'body': 'NSBackgroundStyleLowered'
  'NSBackgroundStyleRaised (2)':
    'prefix': 'NSBackgroundStyleRaised'
    'body': 'NSBackgroundStyleRaised'
  'NSBackgroundTab (1)':
    'prefix': 'NSBackgroundTab'
    'body': 'NSBackgroundTab'
  'NSBackingStoreBuffered (2)':
    'prefix': 'NSBackingStoreBuffered'
    'body': 'NSBackingStoreBuffered'
  'NSBackingStoreNonretained (1)':
    'prefix': 'NSBackingStoreNonretained'
    'body': 'NSBackingStoreNonretained'
  'NSBackingStoreRetained (0)':
    'prefix': 'NSBackingStoreRetained'
    'body': 'NSBackingStoreRetained'
  'NSBackspaceCharacter (8)':
    'prefix': 'NSBackspaceCharacter'
    'body': 'NSBackspaceCharacter'
  'NSBacktabTextMovement (18)':
    'prefix': 'NSBacktabTextMovement'
    'body': 'NSBacktabTextMovement'
  'NSBeginFunctionKey (63274)':
    'prefix': 'NSBeginFunctionKey'
    'body': 'NSBeginFunctionKey'
  'NSBelowBottom (6)':
    'prefix': 'NSBelowBottom'
    'body': 'NSBelowBottom'
  'NSBelowTop (3)':
    'prefix': 'NSBelowTop'
    'body': 'NSBelowTop'
  'NSBevelLineJoinStyle (2)':
    'prefix': 'NSBevelLineJoinStyle'
    'body': 'NSBevelLineJoinStyle'
  'NSBezelBorder (2)':
    'prefix': 'NSBezelBorder'
    'body': 'NSBezelBorder'
  'NSBlueControlTint (1)':
    'prefix': 'NSBlueControlTint'
    'body': 'NSBlueControlTint'
  'NSBoldFontMask (2)':
    'prefix': 'NSBoldFontMask'
    'body': 'NSBoldFontMask'
  'NSBorderlessWindowMask (0)':
    'prefix': 'NSBorderlessWindowMask'
    'body': 'NSBorderlessWindowMask'
  'NSBottomTabsBezelBorder (2)':
    'prefix': 'NSBottomTabsBezelBorder'
    'body': 'NSBottomTabsBezelBorder'
  'NSBoxCustom (4)':
    'prefix': 'NSBoxCustom'
    'body': 'NSBoxCustom'
  'NSBoxOldStyle (3)':
    'prefix': 'NSBoxOldStyle'
    'body': 'NSBoxOldStyle'
  'NSBoxPrimary (0)':
    'prefix': 'NSBoxPrimary'
    'body': 'NSBoxPrimary'
  'NSBoxSecondary (1)':
    'prefix': 'NSBoxSecondary'
    'body': 'NSBoxSecondary'
  'NSBoxSeparator (2)':
    'prefix': 'NSBoxSeparator'
    'body': 'NSBoxSeparator'
  'NSBreakFunctionKey (63282)':
    'prefix': 'NSBreakFunctionKey'
    'body': 'NSBreakFunctionKey'
  'NSBrowserAutoColumnResizing (1)':
    'prefix': 'NSBrowserAutoColumnResizing'
    'body': 'NSBrowserAutoColumnResizing'
  'NSBrowserDropAbove (1)':
    'prefix': 'NSBrowserDropAbove'
    'body': 'NSBrowserDropAbove'
  'NSBrowserDropOn (0)':
    'prefix': 'NSBrowserDropOn'
    'body': 'NSBrowserDropOn'
  'NSBrowserNoColumnResizing (0)':
    'prefix': 'NSBrowserNoColumnResizing'
    'body': 'NSBrowserNoColumnResizing'
  'NSBrowserUserColumnResizing (2)':
    'prefix': 'NSBrowserUserColumnResizing'
    'body': 'NSBrowserUserColumnResizing'
  'NSButtLineCapStyle (0)':
    'prefix': 'NSButtLineCapStyle'
    'body': 'NSButtLineCapStyle'
  'NSCMYKColorSpaceModel (2)':
    'prefix': 'NSCMYKColorSpaceModel'
    'body': 'NSCMYKColorSpaceModel'
  'NSCMYKModeColorPanel (2)':
    'prefix': 'NSCMYKModeColorPanel'
    'body': 'NSCMYKModeColorPanel'
  'NSCancelButton (0)':
    'prefix': 'NSCancelButton'
    'body': 'NSCancelButton'
  'NSCancelTextMovement (23)':
    'prefix': 'NSCancelTextMovement'
    'body': 'NSCancelTextMovement'
  'NSCarriageReturnCharacter (13)':
    'prefix': 'NSCarriageReturnCharacter'
    'body': 'NSCarriageReturnCharacter'
  'NSCellAllowsMixedState (16)':
    'prefix': 'NSCellAllowsMixedState'
    'body': 'NSCellAllowsMixedState'
  'NSCellChangesContents (14)':
    'prefix': 'NSCellChangesContents'
    'body': 'NSCellChangesContents'
  'NSCellDisabled (0)':
    'prefix': 'NSCellDisabled'
    'body': 'NSCellDisabled'
  'NSCellEditable (3)':
    'prefix': 'NSCellEditable'
    'body': 'NSCellEditable'
  'NSCellHasImageHorizontal (12)':
    'prefix': 'NSCellHasImageHorizontal'
    'body': 'NSCellHasImageHorizontal'
  'NSCellHasImageOnLeftOrBottom (13)':
    'prefix': 'NSCellHasImageOnLeftOrBottom'
    'body': 'NSCellHasImageOnLeftOrBottom'
  'NSCellHasOverlappingImage (11)':
    'prefix': 'NSCellHasOverlappingImage'
    'body': 'NSCellHasOverlappingImage'
  'NSCellHighlighted (5)':
    'prefix': 'NSCellHighlighted'
    'body': 'NSCellHighlighted'
  'NSCellHitContentArea (1)':
    'prefix': 'NSCellHitContentArea'
    'body': 'NSCellHitContentArea'
  'NSCellHitEditableTextArea (2)':
    'prefix': 'NSCellHitEditableTextArea'
    'body': 'NSCellHitEditableTextArea'
  'NSCellHitNone (0)':
    'prefix': 'NSCellHitNone'
    'body': 'NSCellHitNone'
  'NSCellHitTrackableArea (4)':
    'prefix': 'NSCellHitTrackableArea'
    'body': 'NSCellHitTrackableArea'
  'NSCellIsBordered (10)':
    'prefix': 'NSCellIsBordered'
    'body': 'NSCellIsBordered'
  'NSCellIsInsetButton (15)':
    'prefix': 'NSCellIsInsetButton'
    'body': 'NSCellIsInsetButton'
  'NSCellLightsByBackground (9)':
    'prefix': 'NSCellLightsByBackground'
    'body': 'NSCellLightsByBackground'
  'NSCellLightsByContents (6)':
    'prefix': 'NSCellLightsByContents'
    'body': 'NSCellLightsByContents'
  'NSCellLightsByGray (7)':
    'prefix': 'NSCellLightsByGray'
    'body': 'NSCellLightsByGray'
  'NSCellState (1)':
    'prefix': 'NSCellState'
    'body': 'NSCellState'
  'NSCenterTabStopType (2)':
    'prefix': 'NSCenterTabStopType'
    'body': 'NSCenterTabStopType'
  'NSCenterTextAlignment (2)':
    'prefix': 'NSCenterTextAlignment'
    'body': 'NSCenterTextAlignment'
  'NSChangeAutosaved (4)':
    'prefix': 'NSChangeAutosaved'
    'body': 'NSChangeAutosaved'
  'NSChangeBackgroundCell (8)':
    'prefix': 'NSChangeBackgroundCell'
    'body': 'NSChangeBackgroundCell'
  'NSChangeBackgroundCellMask (8)':
    'prefix': 'NSChangeBackgroundCellMask'
    'body': 'NSChangeBackgroundCellMask'
  'NSChangeCleared (2)':
    'prefix': 'NSChangeCleared'
    'body': 'NSChangeCleared'
  'NSChangeDiscardable (256)':
    'prefix': 'NSChangeDiscardable'
    'body': 'NSChangeDiscardable'
  'NSChangeDone (0)':
    'prefix': 'NSChangeDone'
    'body': 'NSChangeDone'
  'NSChangeGrayCell (4)':
    'prefix': 'NSChangeGrayCell'
    'body': 'NSChangeGrayCell'
  'NSChangeGrayCellMask (4)':
    'prefix': 'NSChangeGrayCellMask'
    'body': 'NSChangeGrayCellMask'
  'NSChangeReadOtherContents (3)':
    'prefix': 'NSChangeReadOtherContents'
    'body': 'NSChangeReadOtherContents'
  'NSChangeRedone (5)':
    'prefix': 'NSChangeRedone'
    'body': 'NSChangeRedone'
  'NSChangeUndone (1)':
    'prefix': 'NSChangeUndone'
    'body': 'NSChangeUndone'
  'NSCircularBezelStyle (7)':
    'prefix': 'NSCircularBezelStyle'
    'body': 'NSCircularBezelStyle'
  'NSCircularSlider (1)':
    'prefix': 'NSCircularSlider'
    'body': 'NSCircularSlider'
  'NSClearControlTint (7)':
    'prefix': 'NSClearControlTint'
    'body': 'NSClearControlTint'
  'NSClearDisplayFunctionKey (63290)':
    'prefix': 'NSClearDisplayFunctionKey'
    'body': 'NSClearDisplayFunctionKey'
  'NSClearLineFunctionKey (63289)':
    'prefix': 'NSClearLineFunctionKey'
    'body': 'NSClearLineFunctionKey'
  'NSClipPagination (2)':
    'prefix': 'NSClipPagination'
    'body': 'NSClipPagination'
  'NSClockAndCalendarDatePickerStyle (1)':
    'prefix': 'NSClockAndCalendarDatePickerStyle'
    'body': 'NSClockAndCalendarDatePickerStyle'
  'NSClosableWindowMask (2)':
    'prefix': 'NSClosableWindowMask'
    'body': 'NSClosableWindowMask'
  'NSClosePathBezierPathElement (3)':
    'prefix': 'NSClosePathBezierPathElement'
    'body': 'NSClosePathBezierPathElement'
  'NSCollectionViewDropBefore (1)':
    'prefix': 'NSCollectionViewDropBefore'
    'body': 'NSCollectionViewDropBefore'
  'NSCollectionViewDropOn (0)':
    'prefix': 'NSCollectionViewDropOn'
    'body': 'NSCollectionViewDropOn'
  'NSColorListModeColorPanel (5)':
    'prefix': 'NSColorListModeColorPanel'
    'body': 'NSColorListModeColorPanel'
  'NSColorPanelAllModesMask (65535)':
    'prefix': 'NSColorPanelAllModesMask'
    'body': 'NSColorPanelAllModesMask'
  'NSColorPanelCMYKModeMask (4)':
    'prefix': 'NSColorPanelCMYKModeMask'
    'body': 'NSColorPanelCMYKModeMask'
  'NSColorPanelColorListModeMask (32)':
    'prefix': 'NSColorPanelColorListModeMask'
    'body': 'NSColorPanelColorListModeMask'
  'NSColorPanelCrayonModeMask (128)':
    'prefix': 'NSColorPanelCrayonModeMask'
    'body': 'NSColorPanelCrayonModeMask'
  'NSColorPanelCustomPaletteModeMask (16)':
    'prefix': 'NSColorPanelCustomPaletteModeMask'
    'body': 'NSColorPanelCustomPaletteModeMask'
  'NSColorPanelGrayModeMask (1)':
    'prefix': 'NSColorPanelGrayModeMask'
    'body': 'NSColorPanelGrayModeMask'
  'NSColorPanelHSBModeMask (8)':
    'prefix': 'NSColorPanelHSBModeMask'
    'body': 'NSColorPanelHSBModeMask'
  'NSColorPanelRGBModeMask (2)':
    'prefix': 'NSColorPanelRGBModeMask'
    'body': 'NSColorPanelRGBModeMask'
  'NSColorPanelWheelModeMask (64)':
    'prefix': 'NSColorPanelWheelModeMask'
    'body': 'NSColorPanelWheelModeMask'
  'NSColorRenderingIntentAbsoluteColorimetric (1)':
    'prefix': 'NSColorRenderingIntentAbsoluteColorimetric'
    'body': 'NSColorRenderingIntentAbsoluteColorimetric'
  'NSColorRenderingIntentDefault (0)':
    'prefix': 'NSColorRenderingIntentDefault'
    'body': 'NSColorRenderingIntentDefault'
  'NSColorRenderingIntentPerceptual (3)':
    'prefix': 'NSColorRenderingIntentPerceptual'
    'body': 'NSColorRenderingIntentPerceptual'
  'NSColorRenderingIntentRelativeColorimetric (2)':
    'prefix': 'NSColorRenderingIntentRelativeColorimetric'
    'body': 'NSColorRenderingIntentRelativeColorimetric'
  'NSColorRenderingIntentSaturation (4)':
    'prefix': 'NSColorRenderingIntentSaturation'
    'body': 'NSColorRenderingIntentSaturation'
  'NSCommandKeyMask (1048576)':
    'prefix': 'NSCommandKeyMask'
    'body': 'NSCommandKeyMask'
  'NSCompositeClear (0)':
    'prefix': 'NSCompositeClear'
    'body': 'NSCompositeClear'
  'NSCompositeCopy (1)':
    'prefix': 'NSCompositeCopy'
    'body': 'NSCompositeCopy'
  'NSCompositeDestinationAtop (9)':
    'prefix': 'NSCompositeDestinationAtop'
    'body': 'NSCompositeDestinationAtop'
  'NSCompositeDestinationIn (7)':
    'prefix': 'NSCompositeDestinationIn'
    'body': 'NSCompositeDestinationIn'
  'NSCompositeDestinationOut (8)':
    'prefix': 'NSCompositeDestinationOut'
    'body': 'NSCompositeDestinationOut'
  'NSCompositeDestinationOver (6)':
    'prefix': 'NSCompositeDestinationOver'
    'body': 'NSCompositeDestinationOver'
  'NSCompositeHighlight (12)':
    'prefix': 'NSCompositeHighlight'
    'body': 'NSCompositeHighlight'
  'NSCompositePlusDarker (11)':
    'prefix': 'NSCompositePlusDarker'
    'body': 'NSCompositePlusDarker'
  'NSCompositePlusLighter (13)':
    'prefix': 'NSCompositePlusLighter'
    'body': 'NSCompositePlusLighter'
  'NSCompositeSourceAtop (5)':
    'prefix': 'NSCompositeSourceAtop'
    'body': 'NSCompositeSourceAtop'
  'NSCompositeSourceIn (3)':
    'prefix': 'NSCompositeSourceIn'
    'body': 'NSCompositeSourceIn'
  'NSCompositeSourceOut (4)':
    'prefix': 'NSCompositeSourceOut'
    'body': 'NSCompositeSourceOut'
  'NSCompositeSourceOver (2)':
    'prefix': 'NSCompositeSourceOver'
    'body': 'NSCompositeSourceOver'
  'NSCompositeXOR (10)':
    'prefix': 'NSCompositeXOR'
    'body': 'NSCompositeXOR'
  'NSCompressedFontMask (512)':
    'prefix': 'NSCompressedFontMask'
    'body': 'NSCompressedFontMask'
  'NSCondensedFontMask (64)':
    'prefix': 'NSCondensedFontMask'
    'body': 'NSCondensedFontMask'
  'NSContentsCellMask (1)':
    'prefix': 'NSContentsCellMask'
    'body': 'NSContentsCellMask'
  'NSContinuousCapacityLevelIndicatorStyle (1)':
    'prefix': 'NSContinuousCapacityLevelIndicatorStyle'
    'body': 'NSContinuousCapacityLevelIndicatorStyle'
  'NSControlGlyph (16777215)':
    'prefix': 'NSControlGlyph'
    'body': 'NSControlGlyph'
  'NSControlKeyMask (262144)':
    'prefix': 'NSControlKeyMask'
    'body': 'NSControlKeyMask'
  'NSCorrectionIndicatorTypeDefault (0)':
    'prefix': 'NSCorrectionIndicatorTypeDefault'
    'body': 'NSCorrectionIndicatorTypeDefault'
  'NSCorrectionIndicatorTypeGuesses (2)':
    'prefix': 'NSCorrectionIndicatorTypeGuesses'
    'body': 'NSCorrectionIndicatorTypeGuesses'
  'NSCorrectionIndicatorTypeReversion (1)':
    'prefix': 'NSCorrectionIndicatorTypeReversion'
    'body': 'NSCorrectionIndicatorTypeReversion'
  'NSCorrectionResponseAccepted (1)':
    'prefix': 'NSCorrectionResponseAccepted'
    'body': 'NSCorrectionResponseAccepted'
  'NSCorrectionResponseEdited (4)':
    'prefix': 'NSCorrectionResponseEdited'
    'body': 'NSCorrectionResponseEdited'
  'NSCorrectionResponseIgnored (3)':
    'prefix': 'NSCorrectionResponseIgnored'
    'body': 'NSCorrectionResponseIgnored'
  'NSCorrectionResponseNone (0)':
    'prefix': 'NSCorrectionResponseNone'
    'body': 'NSCorrectionResponseNone'
  'NSCorrectionResponseRejected (2)':
    'prefix': 'NSCorrectionResponseRejected'
    'body': 'NSCorrectionResponseRejected'
  'NSCorrectionResponseReverted (5)':
    'prefix': 'NSCorrectionResponseReverted'
    'body': 'NSCorrectionResponseReverted'
  'NSCrayonModeColorPanel (7)':
    'prefix': 'NSCrayonModeColorPanel'
    'body': 'NSCrayonModeColorPanel'
  'NSCriticalAlertStyle (2)':
    'prefix': 'NSCriticalAlertStyle'
    'body': 'NSCriticalAlertStyle'
  'NSCriticalRequest (0)':
    'prefix': 'NSCriticalRequest'
    'body': 'NSCriticalRequest'
  'NSCursorPointingDevice (2)':
    'prefix': 'NSCursorPointingDevice'
    'body': 'NSCursorPointingDevice'
  'NSCursorUpdate (17)':
    'prefix': 'NSCursorUpdate'
    'body': 'NSCursorUpdate'
  'NSCursorUpdateMask (131072)':
    'prefix': 'NSCursorUpdateMask'
    'body': 'NSCursorUpdateMask'
  'NSCurveToBezierPathElement (2)':
    'prefix': 'NSCurveToBezierPathElement'
    'body': 'NSCurveToBezierPathElement'
  'NSCustomPaletteModeColorPanel (4)':
    'prefix': 'NSCustomPaletteModeColorPanel'
    'body': 'NSCustomPaletteModeColorPanel'
  'NSDecimalTabStopType (3)':
    'prefix': 'NSDecimalTabStopType'
    'body': 'NSDecimalTabStopType'
  'NSDefaultControlTint (0)':
    'prefix': 'NSDefaultControlTint'
    'body': 'NSDefaultControlTint'
  'NSDefaultTokenStyle (0)':
    'prefix': 'NSDefaultTokenStyle'
    'body': 'NSDefaultTokenStyle'
  'NSDeleteCharFunctionKey (63294)':
    'prefix': 'NSDeleteCharFunctionKey'
    'body': 'NSDeleteCharFunctionKey'
  'NSDeleteCharacter (127)':
    'prefix': 'NSDeleteCharacter'
    'body': 'NSDeleteCharacter'
  'NSDeleteFunctionKey (63272)':
    'prefix': 'NSDeleteFunctionKey'
    'body': 'NSDeleteFunctionKey'
  'NSDeleteLineFunctionKey (63292)':
    'prefix': 'NSDeleteLineFunctionKey'
    'body': 'NSDeleteLineFunctionKey'
  'NSDescendingPageOrder (-1)':
    'prefix': 'NSDescendingPageOrder'
    'body': 'NSDescendingPageOrder'
  'NSDeviceIndependentModifierFlagsMask (4294901760)':
    'prefix': 'NSDeviceIndependentModifierFlagsMask'
    'body': 'NSDeviceIndependentModifierFlagsMask'
  'NSDeviceNColorSpaceModel (4)':
    'prefix': 'NSDeviceNColorSpaceModel'
    'body': 'NSDeviceNColorSpaceModel'
  'NSDirectSelection (0)':
    'prefix': 'NSDirectSelection'
    'body': 'NSDirectSelection'
  'NSDisclosureBezelStyle (5)':
    'prefix': 'NSDisclosureBezelStyle'
    'body': 'NSDisclosureBezelStyle'
  'NSDiscreteCapacityLevelIndicatorStyle (2)':
    'prefix': 'NSDiscreteCapacityLevelIndicatorStyle'
    'body': 'NSDiscreteCapacityLevelIndicatorStyle'
  'NSDisplayWindowRunLoopOrdering (600000)':
    'prefix': 'NSDisplayWindowRunLoopOrdering'
    'body': 'NSDisplayWindowRunLoopOrdering'
  'NSDocModalWindowMask (64)':
    'prefix': 'NSDocModalWindowMask'
    'body': 'NSDocModalWindowMask'
  'NSDockWindowLevel (20)':
    'prefix': 'NSDockWindowLevel'
    'body': 'NSDockWindowLevel'
  'NSDoubleType (6)':
    'prefix': 'NSDoubleType'
    'body': 'NSDoubleType'
  'NSDownArrowFunctionKey (63233)':
    'prefix': 'NSDownArrowFunctionKey'
    'body': 'NSDownArrowFunctionKey'
  'NSDownTextMovement (22)':
    'prefix': 'NSDownTextMovement'
    'body': 'NSDownTextMovement'
  'NSDragOperationAll (15)':
    'prefix': 'NSDragOperationAll'
    'body': 'NSDragOperationAll'
  'NSDragOperationAll_Obsolete (15)':
    'prefix': 'NSDragOperationAll_Obsolete'
    'body': 'NSDragOperationAll_Obsolete'
  'NSDragOperationCopy (1)':
    'prefix': 'NSDragOperationCopy'
    'body': 'NSDragOperationCopy'
  'NSDragOperationDelete (32)':
    'prefix': 'NSDragOperationDelete'
    'body': 'NSDragOperationDelete'
  'NSDragOperationEvery (4294967295)':
    'prefix': 'NSDragOperationEvery'
    'body': 'NSDragOperationEvery'
  'NSDragOperationGeneric (4)':
    'prefix': 'NSDragOperationGeneric'
    'body': 'NSDragOperationGeneric'
  'NSDragOperationLink (2)':
    'prefix': 'NSDragOperationLink'
    'body': 'NSDragOperationLink'
  'NSDragOperationMove (16)':
    'prefix': 'NSDragOperationMove'
    'body': 'NSDragOperationMove'
  'NSDragOperationNone (0)':
    'prefix': 'NSDragOperationNone'
    'body': 'NSDragOperationNone'
  'NSDragOperationPrivate (8)':
    'prefix': 'NSDragOperationPrivate'
    'body': 'NSDragOperationPrivate'
  'NSDraggingContextOutsideApplication (0)':
    'prefix': 'NSDraggingContextOutsideApplication'
    'body': 'NSDraggingContextOutsideApplication'
  'NSDraggingContextWithinApplication (1)':
    'prefix': 'NSDraggingContextWithinApplication'
    'body': 'NSDraggingContextWithinApplication'
  'NSDraggingFormationDefault (0)':
    'prefix': 'NSDraggingFormationDefault'
    'body': 'NSDraggingFormationDefault'
  'NSDraggingFormationList (3)':
    'prefix': 'NSDraggingFormationList'
    'body': 'NSDraggingFormationList'
  'NSDraggingFormationNone (1)':
    'prefix': 'NSDraggingFormationNone'
    'body': 'NSDraggingFormationNone'
  'NSDraggingFormationPile (2)':
    'prefix': 'NSDraggingFormationPile'
    'body': 'NSDraggingFormationPile'
  'NSDraggingFormationStack (4)':
    'prefix': 'NSDraggingFormationStack'
    'body': 'NSDraggingFormationStack'
  'NSDraggingItemEnumerationClearNonenumeratedImages (65536)':
    'prefix': 'NSDraggingItemEnumerationClearNonenumeratedImages'
    'body': 'NSDraggingItemEnumerationClearNonenumeratedImages'
  'NSDraggingItemEnumerationConcurrent (1)':
    'prefix': 'NSDraggingItemEnumerationConcurrent'
    'body': 'NSDraggingItemEnumerationConcurrent'
  'NSDrawerClosedState (0)':
    'prefix': 'NSDrawerClosedState'
    'body': 'NSDrawerClosedState'
  'NSDrawerClosingState (3)':
    'prefix': 'NSDrawerClosingState'
    'body': 'NSDrawerClosingState'
  'NSDrawerOpenState (2)':
    'prefix': 'NSDrawerOpenState'
    'body': 'NSDrawerOpenState'
  'NSDrawerOpeningState (1)':
    'prefix': 'NSDrawerOpeningState'
    'body': 'NSDrawerOpeningState'
  'NSEndFunctionKey (63275)':
    'prefix': 'NSEndFunctionKey'
    'body': 'NSEndFunctionKey'
  'NSEnterCharacter (3)':
    'prefix': 'NSEnterCharacter'
    'body': 'NSEnterCharacter'
  'NSEraDatePickerElementFlag (256)':
    'prefix': 'NSEraDatePickerElementFlag'
    'body': 'NSEraDatePickerElementFlag'
  'NSEraserPointingDevice (3)':
    'prefix': 'NSEraserPointingDevice'
    'body': 'NSEraserPointingDevice'
  'NSEvenOddWindingRule (1)':
    'prefix': 'NSEvenOddWindingRule'
    'body': 'NSEvenOddWindingRule'
  'NSEventGestureAxisHorizontal (1)':
    'prefix': 'NSEventGestureAxisHorizontal'
    'body': 'NSEventGestureAxisHorizontal'
  'NSEventGestureAxisNone (0)':
    'prefix': 'NSEventGestureAxisNone'
    'body': 'NSEventGestureAxisNone'
  'NSEventGestureAxisVertical (2)':
    'prefix': 'NSEventGestureAxisVertical'
    'body': 'NSEventGestureAxisVertical'
  'NSEventMaskBeginGesture (524288)':
    'prefix': 'NSEventMaskBeginGesture'
    'body': 'NSEventMaskBeginGesture'
  'NSEventMaskEndGesture (1048576)':
    'prefix': 'NSEventMaskEndGesture'
    'body': 'NSEventMaskEndGesture'
  'NSEventMaskGesture (536870912)':
    'prefix': 'NSEventMaskGesture'
    'body': 'NSEventMaskGesture'
  'NSEventMaskMagnify (1073741824)':
    'prefix': 'NSEventMaskMagnify'
    'body': 'NSEventMaskMagnify'
  'NSEventMaskRotate (262144)':
    'prefix': 'NSEventMaskRotate'
    'body': 'NSEventMaskRotate'
  'NSEventMaskSmartMagnify ()':
    'prefix': 'NSEventMaskSmartMagnify'
    'body': 'NSEventMaskSmartMagnify'
  'NSEventMaskSwipe (2147483648)':
    'prefix': 'NSEventMaskSwipe'
    'body': 'NSEventMaskSwipe'
  'NSEventPhaseBegan (1)':
    'prefix': 'NSEventPhaseBegan'
    'body': 'NSEventPhaseBegan'
  'NSEventPhaseCancelled (16)':
    'prefix': 'NSEventPhaseCancelled'
    'body': 'NSEventPhaseCancelled'
  'NSEventPhaseChanged (4)':
    'prefix': 'NSEventPhaseChanged'
    'body': 'NSEventPhaseChanged'
  'NSEventPhaseEnded (8)':
    'prefix': 'NSEventPhaseEnded'
    'body': 'NSEventPhaseEnded'
  'NSEventPhaseMayBegin (32)':
    'prefix': 'NSEventPhaseMayBegin'
    'body': 'NSEventPhaseMayBegin'
  'NSEventPhaseNone (0)':
    'prefix': 'NSEventPhaseNone'
    'body': 'NSEventPhaseNone'
  'NSEventPhaseStationary (2)':
    'prefix': 'NSEventPhaseStationary'
    'body': 'NSEventPhaseStationary'
  'NSEventSwipeTrackingClampGestureAmount (2)':
    'prefix': 'NSEventSwipeTrackingClampGestureAmount'
    'body': 'NSEventSwipeTrackingClampGestureAmount'
  'NSEventSwipeTrackingLockDirection (1)':
    'prefix': 'NSEventSwipeTrackingLockDirection'
    'body': 'NSEventSwipeTrackingLockDirection'
  'NSEventTypeBeginGesture (19)':
    'prefix': 'NSEventTypeBeginGesture'
    'body': 'NSEventTypeBeginGesture'
  'NSEventTypeEndGesture (20)':
    'prefix': 'NSEventTypeEndGesture'
    'body': 'NSEventTypeEndGesture'
  'NSEventTypeGesture (29)':
    'prefix': 'NSEventTypeGesture'
    'body': 'NSEventTypeGesture'
  'NSEventTypeMagnify (30)':
    'prefix': 'NSEventTypeMagnify'
    'body': 'NSEventTypeMagnify'
  'NSEventTypeQuickLook (33)':
    'prefix': 'NSEventTypeQuickLook'
    'body': 'NSEventTypeQuickLook'
  'NSEventTypeRotate (18)':
    'prefix': 'NSEventTypeRotate'
    'body': 'NSEventTypeRotate'
  'NSEventTypeSmartMagnify ()':
    'prefix': 'NSEventTypeSmartMagnify'
    'body': 'NSEventTypeSmartMagnify'
  'NSEventTypeSwipe (31)':
    'prefix': 'NSEventTypeSwipe'
    'body': 'NSEventTypeSwipe'
  'NSExclude10_4ElementsIconCreationOption (4)':
    'prefix': 'NSExclude10_4ElementsIconCreationOption'
    'body': 'NSExclude10_4ElementsIconCreationOption'
  'NSExcludeQuickDrawElementsIconCreationOption (2)':
    'prefix': 'NSExcludeQuickDrawElementsIconCreationOption'
    'body': 'NSExcludeQuickDrawElementsIconCreationOption'
  'NSExecuteFunctionKey (63298)':
    'prefix': 'NSExecuteFunctionKey'
    'body': 'NSExecuteFunctionKey'
  'NSExpandedFontMask (32)':
    'prefix': 'NSExpandedFontMask'
    'body': 'NSExpandedFontMask'
  'NSF10FunctionKey (63245)':
    'prefix': 'NSF10FunctionKey'
    'body': 'NSF10FunctionKey'
  'NSF11FunctionKey (63246)':
    'prefix': 'NSF11FunctionKey'
    'body': 'NSF11FunctionKey'
  'NSF12FunctionKey (63247)':
    'prefix': 'NSF12FunctionKey'
    'body': 'NSF12FunctionKey'
  'NSF13FunctionKey (63248)':
    'prefix': 'NSF13FunctionKey'
    'body': 'NSF13FunctionKey'
  'NSF14FunctionKey (63249)':
    'prefix': 'NSF14FunctionKey'
    'body': 'NSF14FunctionKey'
  'NSF15FunctionKey (63250)':
    'prefix': 'NSF15FunctionKey'
    'body': 'NSF15FunctionKey'
  'NSF16FunctionKey (63251)':
    'prefix': 'NSF16FunctionKey'
    'body': 'NSF16FunctionKey'
  'NSF17FunctionKey (63252)':
    'prefix': 'NSF17FunctionKey'
    'body': 'NSF17FunctionKey'
  'NSF18FunctionKey (63253)':
    'prefix': 'NSF18FunctionKey'
    'body': 'NSF18FunctionKey'
  'NSF19FunctionKey (63254)':
    'prefix': 'NSF19FunctionKey'
    'body': 'NSF19FunctionKey'
  'NSF1FunctionKey (63236)':
    'prefix': 'NSF1FunctionKey'
    'body': 'NSF1FunctionKey'
  'NSF20FunctionKey (63255)':
    'prefix': 'NSF20FunctionKey'
    'body': 'NSF20FunctionKey'
  'NSF21FunctionKey (63256)':
    'prefix': 'NSF21FunctionKey'
    'body': 'NSF21FunctionKey'
  'NSF22FunctionKey (63257)':
    'prefix': 'NSF22FunctionKey'
    'body': 'NSF22FunctionKey'
  'NSF23FunctionKey (63258)':
    'prefix': 'NSF23FunctionKey'
    'body': 'NSF23FunctionKey'
  'NSF24FunctionKey (63259)':
    'prefix': 'NSF24FunctionKey'
    'body': 'NSF24FunctionKey'
  'NSF25FunctionKey (63260)':
    'prefix': 'NSF25FunctionKey'
    'body': 'NSF25FunctionKey'
  'NSF26FunctionKey (63261)':
    'prefix': 'NSF26FunctionKey'
    'body': 'NSF26FunctionKey'
  'NSF27FunctionKey (63262)':
    'prefix': 'NSF27FunctionKey'
    'body': 'NSF27FunctionKey'
  'NSF28FunctionKey (63263)':
    'prefix': 'NSF28FunctionKey'
    'body': 'NSF28FunctionKey'
  'NSF29FunctionKey (63264)':
    'prefix': 'NSF29FunctionKey'
    'body': 'NSF29FunctionKey'
  'NSF2FunctionKey (63237)':
    'prefix': 'NSF2FunctionKey'
    'body': 'NSF2FunctionKey'
  'NSF30FunctionKey (63265)':
    'prefix': 'NSF30FunctionKey'
    'body': 'NSF30FunctionKey'
  'NSF31FunctionKey (63266)':
    'prefix': 'NSF31FunctionKey'
    'body': 'NSF31FunctionKey'
  'NSF32FunctionKey (63267)':
    'prefix': 'NSF32FunctionKey'
    'body': 'NSF32FunctionKey'
  'NSF33FunctionKey (63268)':
    'prefix': 'NSF33FunctionKey'
    'body': 'NSF33FunctionKey'
  'NSF34FunctionKey (63269)':
    'prefix': 'NSF34FunctionKey'
    'body': 'NSF34FunctionKey'
  'NSF35FunctionKey (63270)':
    'prefix': 'NSF35FunctionKey'
    'body': 'NSF35FunctionKey'
  'NSF3FunctionKey (63238)':
    'prefix': 'NSF3FunctionKey'
    'body': 'NSF3FunctionKey'
  'NSF4FunctionKey (63239)':
    'prefix': 'NSF4FunctionKey'
    'body': 'NSF4FunctionKey'
  'NSF5FunctionKey (63240)':
    'prefix': 'NSF5FunctionKey'
    'body': 'NSF5FunctionKey'
  'NSF6FunctionKey (63241)':
    'prefix': 'NSF6FunctionKey'
    'body': 'NSF6FunctionKey'
  'NSF7FunctionKey (63242)':
    'prefix': 'NSF7FunctionKey'
    'body': 'NSF7FunctionKey'
  'NSF8FunctionKey (63243)':
    'prefix': 'NSF8FunctionKey'
    'body': 'NSF8FunctionKey'
  'NSF9FunctionKey (63244)':
    'prefix': 'NSF9FunctionKey'
    'body': 'NSF9FunctionKey'
  'NSFPCurrentField (134)':
    'prefix': 'NSFPCurrentField'
    'body': 'NSFPCurrentField'
  'NSFPPreviewButton (131)':
    'prefix': 'NSFPPreviewButton'
    'body': 'NSFPPreviewButton'
  'NSFPPreviewField (128)':
    'prefix': 'NSFPPreviewField'
    'body': 'NSFPPreviewField'
  'NSFPRevertButton (130)':
    'prefix': 'NSFPRevertButton'
    'body': 'NSFPRevertButton'
  'NSFPSetButton (132)':
    'prefix': 'NSFPSetButton'
    'body': 'NSFPSetButton'
  'NSFPSizeField (129)':
    'prefix': 'NSFPSizeField'
    'body': 'NSFPSizeField'
  'NSFPSizeTitle (133)':
    'prefix': 'NSFPSizeTitle'
    'body': 'NSFPSizeTitle'
  'NSFileHandlingPanelCancelButton (0)':
    'prefix': 'NSFileHandlingPanelCancelButton'
    'body': 'NSFileHandlingPanelCancelButton'
  'NSFileHandlingPanelOKButton (1)':
    'prefix': 'NSFileHandlingPanelOKButton'
    'body': 'NSFileHandlingPanelOKButton'
  'NSFindFunctionKey (63301)':
    'prefix': 'NSFindFunctionKey'
    'body': 'NSFindFunctionKey'
  'NSFindPanelActionNext (2)':
    'prefix': 'NSFindPanelActionNext'
    'body': 'NSFindPanelActionNext'
  'NSFindPanelActionPrevious (3)':
    'prefix': 'NSFindPanelActionPrevious'
    'body': 'NSFindPanelActionPrevious'
  'NSFindPanelActionReplace (5)':
    'prefix': 'NSFindPanelActionReplace'
    'body': 'NSFindPanelActionReplace'
  'NSFindPanelActionReplaceAll (4)':
    'prefix': 'NSFindPanelActionReplaceAll'
    'body': 'NSFindPanelActionReplaceAll'
  'NSFindPanelActionReplaceAllInSelection (8)':
    'prefix': 'NSFindPanelActionReplaceAllInSelection'
    'body': 'NSFindPanelActionReplaceAllInSelection'
  'NSFindPanelActionReplaceAndFind (6)':
    'prefix': 'NSFindPanelActionReplaceAndFind'
    'body': 'NSFindPanelActionReplaceAndFind'
  'NSFindPanelActionSelectAll (9)':
    'prefix': 'NSFindPanelActionSelectAll'
    'body': 'NSFindPanelActionSelectAll'
  'NSFindPanelActionSelectAllInSelection (10)':
    'prefix': 'NSFindPanelActionSelectAllInSelection'
    'body': 'NSFindPanelActionSelectAllInSelection'
  'NSFindPanelActionSetFindString (7)':
    'prefix': 'NSFindPanelActionSetFindString'
    'body': 'NSFindPanelActionSetFindString'
  'NSFindPanelActionShowFindPanel (1)':
    'prefix': 'NSFindPanelActionShowFindPanel'
    'body': 'NSFindPanelActionShowFindPanel'
  'NSFindPanelSubstringMatchTypeContains (0)':
    'prefix': 'NSFindPanelSubstringMatchTypeContains'
    'body': 'NSFindPanelSubstringMatchTypeContains'
  'NSFindPanelSubstringMatchTypeEndsWith (3)':
    'prefix': 'NSFindPanelSubstringMatchTypeEndsWith'
    'body': 'NSFindPanelSubstringMatchTypeEndsWith'
  'NSFindPanelSubstringMatchTypeFullWord (2)':
    'prefix': 'NSFindPanelSubstringMatchTypeFullWord'
    'body': 'NSFindPanelSubstringMatchTypeFullWord'
  'NSFindPanelSubstringMatchTypeStartsWith (1)':
    'prefix': 'NSFindPanelSubstringMatchTypeStartsWith'
    'body': 'NSFindPanelSubstringMatchTypeStartsWith'
  'NSFitPagination (1)':
    'prefix': 'NSFitPagination'
    'body': 'NSFitPagination'
  'NSFixedPitchFontMask (1024)':
    'prefix': 'NSFixedPitchFontMask'
    'body': 'NSFixedPitchFontMask'
  'NSFlagsChanged (12)':
    'prefix': 'NSFlagsChanged'
    'body': 'NSFlagsChanged'
  'NSFlagsChangedMask (4096)':
    'prefix': 'NSFlagsChangedMask'
    'body': 'NSFlagsChangedMask'
  'NSFloatType (3)':
    'prefix': 'NSFloatType'
    'body': 'NSFloatType'
  'NSFloatingPointSamplesBitmapFormat (4)':
    'prefix': 'NSFloatingPointSamplesBitmapFormat'
    'body': 'NSFloatingPointSamplesBitmapFormat'
  'NSFloatingWindowLevel (3)':
    'prefix': 'NSFloatingWindowLevel'
    'body': 'NSFloatingWindowLevel'
  'NSFocusRingAbove (2)':
    'prefix': 'NSFocusRingAbove'
    'body': 'NSFocusRingAbove'
  'NSFocusRingBelow (1)':
    'prefix': 'NSFocusRingBelow'
    'body': 'NSFocusRingBelow'
  'NSFocusRingOnly (0)':
    'prefix': 'NSFocusRingOnly'
    'body': 'NSFocusRingOnly'
  'NSFocusRingTypeDefault (0)':
    'prefix': 'NSFocusRingTypeDefault'
    'body': 'NSFocusRingTypeDefault'
  'NSFocusRingTypeExterior (2)':
    'prefix': 'NSFocusRingTypeExterior'
    'body': 'NSFocusRingTypeExterior'
  'NSFocusRingTypeNone (1)':
    'prefix': 'NSFocusRingTypeNone'
    'body': 'NSFocusRingTypeNone'
  'NSFontAntialiasedIntegerAdvancementsRenderingMode (3)':
    'prefix': 'NSFontAntialiasedIntegerAdvancementsRenderingMode'
    'body': 'NSFontAntialiasedIntegerAdvancementsRenderingMode'
  'NSFontAntialiasedRenderingMode (1)':
    'prefix': 'NSFontAntialiasedRenderingMode'
    'body': 'NSFontAntialiasedRenderingMode'
  'NSFontBoldTrait (2)':
    'prefix': 'NSFontBoldTrait'
    'body': 'NSFontBoldTrait'
  'NSFontClarendonSerifsClass (1073741824)':
    'prefix': 'NSFontClarendonSerifsClass'
    'body': 'NSFontClarendonSerifsClass'
  'NSFontCollectionApplicationOnlyMask (1)':
    'prefix': 'NSFontCollectionApplicationOnlyMask'
    'body': 'NSFontCollectionApplicationOnlyMask'
  'NSFontCollectionVisibilityComputer (4)':
    'prefix': 'NSFontCollectionVisibilityComputer'
    'body': 'NSFontCollectionVisibilityComputer'
  'NSFontCollectionVisibilityProcess (1)':
    'prefix': 'NSFontCollectionVisibilityProcess'
    'body': 'NSFontCollectionVisibilityProcess'
  'NSFontCollectionVisibilityUser (2)':
    'prefix': 'NSFontCollectionVisibilityUser'
    'body': 'NSFontCollectionVisibilityUser'
  'NSFontCondensedTrait (64)':
    'prefix': 'NSFontCondensedTrait'
    'body': 'NSFontCondensedTrait'
  'NSFontDefaultRenderingMode (0)':
    'prefix': 'NSFontDefaultRenderingMode'
    'body': 'NSFontDefaultRenderingMode'
  'NSFontExpandedTrait (32)':
    'prefix': 'NSFontExpandedTrait'
    'body': 'NSFontExpandedTrait'
  'NSFontFamilyClassMask (4026531840)':
    'prefix': 'NSFontFamilyClassMask'
    'body': 'NSFontFamilyClassMask'
  'NSFontFreeformSerifsClass (1879048192)':
    'prefix': 'NSFontFreeformSerifsClass'
    'body': 'NSFontFreeformSerifsClass'
  'NSFontIntegerAdvancementsRenderingMode (2)':
    'prefix': 'NSFontIntegerAdvancementsRenderingMode'
    'body': 'NSFontIntegerAdvancementsRenderingMode'
  'NSFontItalicTrait (1)':
    'prefix': 'NSFontItalicTrait'
    'body': 'NSFontItalicTrait'
  'NSFontModernSerifsClass (805306368)':
    'prefix': 'NSFontModernSerifsClass'
    'body': 'NSFontModernSerifsClass'
  'NSFontMonoSpaceTrait (1024)':
    'prefix': 'NSFontMonoSpaceTrait'
    'body': 'NSFontMonoSpaceTrait'
  'NSFontOldStyleSerifsClass (268435456)':
    'prefix': 'NSFontOldStyleSerifsClass'
    'body': 'NSFontOldStyleSerifsClass'
  'NSFontOrnamentalsClass (-1879048192)':
    'prefix': 'NSFontOrnamentalsClass'
    'body': 'NSFontOrnamentalsClass'
  'NSFontPanelAllEffectsModeMask (1048320)':
    'prefix': 'NSFontPanelAllEffectsModeMask'
    'body': 'NSFontPanelAllEffectsModeMask'
  'NSFontPanelAllModesMask (4294967295)':
    'prefix': 'NSFontPanelAllModesMask'
    'body': 'NSFontPanelAllModesMask'
  'NSFontPanelCollectionModeMask (4)':
    'prefix': 'NSFontPanelCollectionModeMask'
    'body': 'NSFontPanelCollectionModeMask'
  'NSFontPanelDocumentColorEffectModeMask (2048)':
    'prefix': 'NSFontPanelDocumentColorEffectModeMask'
    'body': 'NSFontPanelDocumentColorEffectModeMask'
  'NSFontPanelFaceModeMask (1)':
    'prefix': 'NSFontPanelFaceModeMask'
    'body': 'NSFontPanelFaceModeMask'
  'NSFontPanelShadowEffectModeMask (4096)':
    'prefix': 'NSFontPanelShadowEffectModeMask'
    'body': 'NSFontPanelShadowEffectModeMask'
  'NSFontPanelSizeModeMask (2)':
    'prefix': 'NSFontPanelSizeModeMask'
    'body': 'NSFontPanelSizeModeMask'
  'NSFontPanelStandardModesMask (65535)':
    'prefix': 'NSFontPanelStandardModesMask'
    'body': 'NSFontPanelStandardModesMask'
  'NSFontPanelStrikethroughEffectModeMask (512)':
    'prefix': 'NSFontPanelStrikethroughEffectModeMask'
    'body': 'NSFontPanelStrikethroughEffectModeMask'
  'NSFontPanelTextColorEffectModeMask (1024)':
    'prefix': 'NSFontPanelTextColorEffectModeMask'
    'body': 'NSFontPanelTextColorEffectModeMask'
  'NSFontPanelUnderlineEffectModeMask (256)':
    'prefix': 'NSFontPanelUnderlineEffectModeMask'
    'body': 'NSFontPanelUnderlineEffectModeMask'
  'NSFontSansSerifClass (-2147483648)':
    'prefix': 'NSFontSansSerifClass'
    'body': 'NSFontSansSerifClass'
  'NSFontScriptsClass (-1610612736)':
    'prefix': 'NSFontScriptsClass'
    'body': 'NSFontScriptsClass'
  'NSFontSlabSerifsClass (1342177280)':
    'prefix': 'NSFontSlabSerifsClass'
    'body': 'NSFontSlabSerifsClass'
  'NSFontSymbolicClass (-1073741824)':
    'prefix': 'NSFontSymbolicClass'
    'body': 'NSFontSymbolicClass'
  'NSFontTransitionalSerifsClass (536870912)':
    'prefix': 'NSFontTransitionalSerifsClass'
    'body': 'NSFontTransitionalSerifsClass'
  'NSFontUIOptimizedTrait (4096)':
    'prefix': 'NSFontUIOptimizedTrait'
    'body': 'NSFontUIOptimizedTrait'
  'NSFontUnknownClass (0)':
    'prefix': 'NSFontUnknownClass'
    'body': 'NSFontUnknownClass'
  'NSFontVerticalTrait (2048)':
    'prefix': 'NSFontVerticalTrait'
    'body': 'NSFontVerticalTrait'
  'NSFormFeedCharacter (12)':
    'prefix': 'NSFormFeedCharacter'
    'body': 'NSFormFeedCharacter'
  'NSFullScreenWindowMask (16384)':
    'prefix': 'NSFullScreenWindowMask'
    'body': 'NSFullScreenWindowMask'
  'NSFunctionKeyMask (8388608)':
    'prefix': 'NSFunctionKeyMask'
    'body': 'NSFunctionKeyMask'
  'NSGIFFileType (2)':
    'prefix': 'NSGIFFileType'
    'body': 'NSGIFFileType'
  'NSGlyphAttributeBidiLevel (2)':
    'prefix': 'NSGlyphAttributeBidiLevel'
    'body': 'NSGlyphAttributeBidiLevel'
  'NSGlyphAttributeElastic (1)':
    'prefix': 'NSGlyphAttributeElastic'
    'body': 'NSGlyphAttributeElastic'
  'NSGlyphAttributeInscribe (5)':
    'prefix': 'NSGlyphAttributeInscribe'
    'body': 'NSGlyphAttributeInscribe'
  'NSGlyphAttributeSoft (0)':
    'prefix': 'NSGlyphAttributeSoft'
    'body': 'NSGlyphAttributeSoft'
  'NSGlyphInscribeAbove (2)':
    'prefix': 'NSGlyphInscribeAbove'
    'body': 'NSGlyphInscribeAbove'
  'NSGlyphInscribeBase (0)':
    'prefix': 'NSGlyphInscribeBase'
    'body': 'NSGlyphInscribeBase'
  'NSGlyphInscribeBelow (1)':
    'prefix': 'NSGlyphInscribeBelow'
    'body': 'NSGlyphInscribeBelow'
  'NSGlyphInscribeOverBelow (4)':
    'prefix': 'NSGlyphInscribeOverBelow'
    'body': 'NSGlyphInscribeOverBelow'
  'NSGlyphInscribeOverstrike (3)':
    'prefix': 'NSGlyphInscribeOverstrike'
    'body': 'NSGlyphInscribeOverstrike'
  'NSGradientConcaveStrong (2)':
    'prefix': 'NSGradientConcaveStrong'
    'body': 'NSGradientConcaveStrong'
  'NSGradientConcaveWeak (1)':
    'prefix': 'NSGradientConcaveWeak'
    'body': 'NSGradientConcaveWeak'
  'NSGradientConvexStrong (4)':
    'prefix': 'NSGradientConvexStrong'
    'body': 'NSGradientConvexStrong'
  'NSGradientConvexWeak (3)':
    'prefix': 'NSGradientConvexWeak'
    'body': 'NSGradientConvexWeak'
  'NSGradientDrawsAfterEndingLocation (2)':
    'prefix': 'NSGradientDrawsAfterEndingLocation'
    'body': 'NSGradientDrawsAfterEndingLocation'
  'NSGradientDrawsBeforeStartingLocation (1)':
    'prefix': 'NSGradientDrawsBeforeStartingLocation'
    'body': 'NSGradientDrawsBeforeStartingLocation'
  'NSGradientNone (0)':
    'prefix': 'NSGradientNone'
    'body': 'NSGradientNone'
  'NSGraphiteControlTint (6)':
    'prefix': 'NSGraphiteControlTint'
    'body': 'NSGraphiteControlTint'
  'NSGrayColorSpaceModel (0)':
    'prefix': 'NSGrayColorSpaceModel'
    'body': 'NSGrayColorSpaceModel'
  'NSGrayModeColorPanel (0)':
    'prefix': 'NSGrayModeColorPanel'
    'body': 'NSGrayModeColorPanel'
  'NSGrooveBorder (3)':
    'prefix': 'NSGrooveBorder'
    'body': 'NSGrooveBorder'
  'NSHSBModeColorPanel (3)':
    'prefix': 'NSHSBModeColorPanel'
    'body': 'NSHSBModeColorPanel'
  'NSHUDWindowMask (8192)':
    'prefix': 'NSHUDWindowMask'
    'body': 'NSHUDWindowMask'
  'NSHeavierFontAction (5)':
    'prefix': 'NSHeavierFontAction'
    'body': 'NSHeavierFontAction'
  'NSHelpButtonBezelStyle (9)':
    'prefix': 'NSHelpButtonBezelStyle'
    'body': 'NSHelpButtonBezelStyle'
  'NSHelpFunctionKey (63302)':
    'prefix': 'NSHelpFunctionKey'
    'body': 'NSHelpFunctionKey'
  'NSHelpKeyMask (4194304)':
    'prefix': 'NSHelpKeyMask'
    'body': 'NSHelpKeyMask'
  'NSHighlightModeMatrix (1)':
    'prefix': 'NSHighlightModeMatrix'
    'body': 'NSHighlightModeMatrix'
  'NSHomeFunctionKey (63273)':
    'prefix': 'NSHomeFunctionKey'
    'body': 'NSHomeFunctionKey'
  'NSHorizontalRuler (0)':
    'prefix': 'NSHorizontalRuler'
    'body': 'NSHorizontalRuler'
  'NSHourMinuteDatePickerElementFlag (12)':
    'prefix': 'NSHourMinuteDatePickerElementFlag'
    'body': 'NSHourMinuteDatePickerElementFlag'
  'NSHourMinuteSecondDatePickerElementFlag (14)':
    'prefix': 'NSHourMinuteSecondDatePickerElementFlag'
    'body': 'NSHourMinuteSecondDatePickerElementFlag'
  'NSIdentityMappingCharacterCollection (0)':
    'prefix': 'NSIdentityMappingCharacterCollection'
    'body': 'NSIdentityMappingCharacterCollection'
  'NSIllegalTextMovement (0)':
    'prefix': 'NSIllegalTextMovement'
    'body': 'NSIllegalTextMovement'
  'NSImageAbove (5)':
    'prefix': 'NSImageAbove'
    'body': 'NSImageAbove'
  'NSImageAlignBottom (5)':
    'prefix': 'NSImageAlignBottom'
    'body': 'NSImageAlignBottom'
  'NSImageAlignBottomLeft (6)':
    'prefix': 'NSImageAlignBottomLeft'
    'body': 'NSImageAlignBottomLeft'
  'NSImageAlignBottomRight (7)':
    'prefix': 'NSImageAlignBottomRight'
    'body': 'NSImageAlignBottomRight'
  'NSImageAlignCenter (0)':
    'prefix': 'NSImageAlignCenter'
    'body': 'NSImageAlignCenter'
  'NSImageAlignLeft (4)':
    'prefix': 'NSImageAlignLeft'
    'body': 'NSImageAlignLeft'
  'NSImageAlignRight (8)':
    'prefix': 'NSImageAlignRight'
    'body': 'NSImageAlignRight'
  'NSImageAlignTop (1)':
    'prefix': 'NSImageAlignTop'
    'body': 'NSImageAlignTop'
  'NSImageAlignTopLeft (2)':
    'prefix': 'NSImageAlignTopLeft'
    'body': 'NSImageAlignTopLeft'
  'NSImageAlignTopRight (3)':
    'prefix': 'NSImageAlignTopRight'
    'body': 'NSImageAlignTopRight'
  'NSImageBelow (4)':
    'prefix': 'NSImageBelow'
    'body': 'NSImageBelow'
  'NSImageCacheAlways (1)':
    'prefix': 'NSImageCacheAlways'
    'body': 'NSImageCacheAlways'
  'NSImageCacheBySize (2)':
    'prefix': 'NSImageCacheBySize'
    'body': 'NSImageCacheBySize'
  'NSImageCacheDefault (0)':
    'prefix': 'NSImageCacheDefault'
    'body': 'NSImageCacheDefault'
  'NSImageCacheNever (3)':
    'prefix': 'NSImageCacheNever'
    'body': 'NSImageCacheNever'
  'NSImageCellType (2)':
    'prefix': 'NSImageCellType'
    'body': 'NSImageCellType'
  'NSImageFrameButton (4)':
    'prefix': 'NSImageFrameButton'
    'body': 'NSImageFrameButton'
  'NSImageFrameGrayBezel (2)':
    'prefix': 'NSImageFrameGrayBezel'
    'body': 'NSImageFrameGrayBezel'
  'NSImageFrameGroove (3)':
    'prefix': 'NSImageFrameGroove'
    'body': 'NSImageFrameGroove'
  'NSImageFrameNone (0)':
    'prefix': 'NSImageFrameNone'
    'body': 'NSImageFrameNone'
  'NSImageFramePhoto (1)':
    'prefix': 'NSImageFramePhoto'
    'body': 'NSImageFramePhoto'
  'NSImageInterpolationDefault (0)':
    'prefix': 'NSImageInterpolationDefault'
    'body': 'NSImageInterpolationDefault'
  'NSImageInterpolationHigh (3)':
    'prefix': 'NSImageInterpolationHigh'
    'body': 'NSImageInterpolationHigh'
  'NSImageInterpolationLow (2)':
    'prefix': 'NSImageInterpolationLow'
    'body': 'NSImageInterpolationLow'
  'NSImageInterpolationMedium (4)':
    'prefix': 'NSImageInterpolationMedium'
    'body': 'NSImageInterpolationMedium'
  'NSImageInterpolationNone (1)':
    'prefix': 'NSImageInterpolationNone'
    'body': 'NSImageInterpolationNone'
  'NSImageLeft (2)':
    'prefix': 'NSImageLeft'
    'body': 'NSImageLeft'
  'NSImageLoadStatusCancelled (1)':
    'prefix': 'NSImageLoadStatusCancelled'
    'body': 'NSImageLoadStatusCancelled'
  'NSImageLoadStatusCompleted (0)':
    'prefix': 'NSImageLoadStatusCompleted'
    'body': 'NSImageLoadStatusCompleted'
  'NSImageLoadStatusInvalidData (2)':
    'prefix': 'NSImageLoadStatusInvalidData'
    'body': 'NSImageLoadStatusInvalidData'
  'NSImageLoadStatusReadError (4)':
    'prefix': 'NSImageLoadStatusReadError'
    'body': 'NSImageLoadStatusReadError'
  'NSImageLoadStatusUnexpectedEOF (3)':
    'prefix': 'NSImageLoadStatusUnexpectedEOF'
    'body': 'NSImageLoadStatusUnexpectedEOF'
  'NSImageOnly (1)':
    'prefix': 'NSImageOnly'
    'body': 'NSImageOnly'
  'NSImageOverlaps (6)':
    'prefix': 'NSImageOverlaps'
    'body': 'NSImageOverlaps'
  'NSImageRepLoadStatusCompleted (-6)':
    'prefix': 'NSImageRepLoadStatusCompleted'
    'body': 'NSImageRepLoadStatusCompleted'
  'NSImageRepLoadStatusInvalidData (-4)':
    'prefix': 'NSImageRepLoadStatusInvalidData'
    'body': 'NSImageRepLoadStatusInvalidData'
  'NSImageRepLoadStatusReadingHeader (-2)':
    'prefix': 'NSImageRepLoadStatusReadingHeader'
    'body': 'NSImageRepLoadStatusReadingHeader'
  'NSImageRepLoadStatusUnexpectedEOF (-5)':
    'prefix': 'NSImageRepLoadStatusUnexpectedEOF'
    'body': 'NSImageRepLoadStatusUnexpectedEOF'
  'NSImageRepLoadStatusUnknownType (-1)':
    'prefix': 'NSImageRepLoadStatusUnknownType'
    'body': 'NSImageRepLoadStatusUnknownType'
  'NSImageRepLoadStatusWillNeedAllData (-3)':
    'prefix': 'NSImageRepLoadStatusWillNeedAllData'
    'body': 'NSImageRepLoadStatusWillNeedAllData'
  'NSImageRepMatchesDevice (0)':
    'prefix': 'NSImageRepMatchesDevice'
    'body': 'NSImageRepMatchesDevice'
  'NSImageRight (3)':
    'prefix': 'NSImageRight'
    'body': 'NSImageRight'
  'NSImageScaleAxesIndependently (1)':
    'prefix': 'NSImageScaleAxesIndependently'
    'body': 'NSImageScaleAxesIndependently'
  'NSImageScaleNone (2)':
    'prefix': 'NSImageScaleNone'
    'body': 'NSImageScaleNone'
  'NSImageScaleProportionallyDown (0)':
    'prefix': 'NSImageScaleProportionallyDown'
    'body': 'NSImageScaleProportionallyDown'
  'NSImageScaleProportionallyUpOrDown (3)':
    'prefix': 'NSImageScaleProportionallyUpOrDown'
    'body': 'NSImageScaleProportionallyUpOrDown'
  'NSIndexedColorSpaceModel (5)':
    'prefix': 'NSIndexedColorSpaceModel'
    'body': 'NSIndexedColorSpaceModel'
  'NSInformationalAlertStyle (1)':
    'prefix': 'NSInformationalAlertStyle'
    'body': 'NSInformationalAlertStyle'
  'NSInformationalRequest (10)':
    'prefix': 'NSInformationalRequest'
    'body': 'NSInformationalRequest'
  'NSInlineBezelStyle (15)':
    'prefix': 'NSInlineBezelStyle'
    'body': 'NSInlineBezelStyle'
  'NSInsertCharFunctionKey (63293)':
    'prefix': 'NSInsertCharFunctionKey'
    'body': 'NSInsertCharFunctionKey'
  'NSInsertFunctionKey (63271)':
    'prefix': 'NSInsertFunctionKey'
    'body': 'NSInsertFunctionKey'
  'NSInsertLineFunctionKey (63291)':
    'prefix': 'NSInsertLineFunctionKey'
    'body': 'NSInsertLineFunctionKey'
  'NSIntType (1)':
    'prefix': 'NSIntType'
    'body': 'NSIntType'
  'NSItalicFontMask (1)':
    'prefix': 'NSItalicFontMask'
    'body': 'NSItalicFontMask'
  'NSJPEG2000FileType (5)':
    'prefix': 'NSJPEG2000FileType'
    'body': 'NSJPEG2000FileType'
  'NSJPEGFileType (3)':
    'prefix': 'NSJPEGFileType'
    'body': 'NSJPEGFileType'
  'NSJustifiedTextAlignment (3)':
    'prefix': 'NSJustifiedTextAlignment'
    'body': 'NSJustifiedTextAlignment'
  'NSKeyDown (10)':
    'prefix': 'NSKeyDown'
    'body': 'NSKeyDown'
  'NSKeyDownMask (1024)':
    'prefix': 'NSKeyDownMask'
    'body': 'NSKeyDownMask'
  'NSKeyUp (11)':
    'prefix': 'NSKeyUp'
    'body': 'NSKeyUp'
  'NSKeyUpMask (2048)':
    'prefix': 'NSKeyUpMask'
    'body': 'NSKeyUpMask'
  'NSLABColorSpaceModel (3)':
    'prefix': 'NSLABColorSpaceModel'
    'body': 'NSLABColorSpaceModel'
  'NSLandscapeOrientation (1)':
    'prefix': 'NSLandscapeOrientation'
    'body': 'NSLandscapeOrientation'
  'NSLayoutAttributeBaseline (11)':
    'prefix': 'NSLayoutAttributeBaseline'
    'body': 'NSLayoutAttributeBaseline'
  'NSLayoutAttributeBottom (4)':
    'prefix': 'NSLayoutAttributeBottom'
    'body': 'NSLayoutAttributeBottom'
  'NSLayoutAttributeCenterX (9)':
    'prefix': 'NSLayoutAttributeCenterX'
    'body': 'NSLayoutAttributeCenterX'
  'NSLayoutAttributeCenterY (10)':
    'prefix': 'NSLayoutAttributeCenterY'
    'body': 'NSLayoutAttributeCenterY'
  'NSLayoutAttributeHeight (8)':
    'prefix': 'NSLayoutAttributeHeight'
    'body': 'NSLayoutAttributeHeight'
  'NSLayoutAttributeLeading (5)':
    'prefix': 'NSLayoutAttributeLeading'
    'body': 'NSLayoutAttributeLeading'
  'NSLayoutAttributeLeft (1)':
    'prefix': 'NSLayoutAttributeLeft'
    'body': 'NSLayoutAttributeLeft'
  'NSLayoutAttributeNotAnAttribute (0)':
    'prefix': 'NSLayoutAttributeNotAnAttribute'
    'body': 'NSLayoutAttributeNotAnAttribute'
  'NSLayoutAttributeRight (2)':
    'prefix': 'NSLayoutAttributeRight'
    'body': 'NSLayoutAttributeRight'
  'NSLayoutAttributeTop (3)':
    'prefix': 'NSLayoutAttributeTop'
    'body': 'NSLayoutAttributeTop'
  'NSLayoutAttributeTrailing (6)':
    'prefix': 'NSLayoutAttributeTrailing'
    'body': 'NSLayoutAttributeTrailing'
  'NSLayoutAttributeWidth (7)':
    'prefix': 'NSLayoutAttributeWidth'
    'body': 'NSLayoutAttributeWidth'
  'NSLayoutConstraintOrientationHorizontal (0)':
    'prefix': 'NSLayoutConstraintOrientationHorizontal'
    'body': 'NSLayoutConstraintOrientationHorizontal'
  'NSLayoutConstraintOrientationVertical (1)':
    'prefix': 'NSLayoutConstraintOrientationVertical'
    'body': 'NSLayoutConstraintOrientationVertical'
  'NSLayoutFormatAlignAllBaseline (2048)':
    'prefix': 'NSLayoutFormatAlignAllBaseline'
    'body': 'NSLayoutFormatAlignAllBaseline'
  'NSLayoutFormatAlignAllBottom (16)':
    'prefix': 'NSLayoutFormatAlignAllBottom'
    'body': 'NSLayoutFormatAlignAllBottom'
  'NSLayoutFormatAlignAllCenterX (512)':
    'prefix': 'NSLayoutFormatAlignAllCenterX'
    'body': 'NSLayoutFormatAlignAllCenterX'
  'NSLayoutFormatAlignAllCenterY (1024)':
    'prefix': 'NSLayoutFormatAlignAllCenterY'
    'body': 'NSLayoutFormatAlignAllCenterY'
  'NSLayoutFormatAlignAllLeading (32)':
    'prefix': 'NSLayoutFormatAlignAllLeading'
    'body': 'NSLayoutFormatAlignAllLeading'
  'NSLayoutFormatAlignAllLeft (2)':
    'prefix': 'NSLayoutFormatAlignAllLeft'
    'body': 'NSLayoutFormatAlignAllLeft'
  'NSLayoutFormatAlignAllRight (4)':
    'prefix': 'NSLayoutFormatAlignAllRight'
    'body': 'NSLayoutFormatAlignAllRight'
  'NSLayoutFormatAlignAllTop (8)':
    'prefix': 'NSLayoutFormatAlignAllTop'
    'body': 'NSLayoutFormatAlignAllTop'
  'NSLayoutFormatAlignAllTrailing (64)':
    'prefix': 'NSLayoutFormatAlignAllTrailing'
    'body': 'NSLayoutFormatAlignAllTrailing'
  'NSLayoutFormatAlignmentMask (65535)':
    'prefix': 'NSLayoutFormatAlignmentMask'
    'body': 'NSLayoutFormatAlignmentMask'
  'NSLayoutFormatDirectionLeadingToTrailing (0)':
    'prefix': 'NSLayoutFormatDirectionLeadingToTrailing'
    'body': 'NSLayoutFormatDirectionLeadingToTrailing'
  'NSLayoutFormatDirectionLeftToRight (65536)':
    'prefix': 'NSLayoutFormatDirectionLeftToRight'
    'body': 'NSLayoutFormatDirectionLeftToRight'
  'NSLayoutFormatDirectionMask (196608)':
    'prefix': 'NSLayoutFormatDirectionMask'
    'body': 'NSLayoutFormatDirectionMask'
  'NSLayoutFormatDirectionRightToLeft (131072)':
    'prefix': 'NSLayoutFormatDirectionRightToLeft'
    'body': 'NSLayoutFormatDirectionRightToLeft'
  'NSLayoutPriorityDefaultHigh (750)':
    'prefix': 'NSLayoutPriorityDefaultHigh'
    'body': 'NSLayoutPriorityDefaultHigh'
  'NSLayoutPriorityDefaultLow (250)':
    'prefix': 'NSLayoutPriorityDefaultLow'
    'body': 'NSLayoutPriorityDefaultLow'
  'NSLayoutPriorityDragThatCanResizeWindow (510)':
    'prefix': 'NSLayoutPriorityDragThatCanResizeWindow'
    'body': 'NSLayoutPriorityDragThatCanResizeWindow'
  'NSLayoutPriorityDragThatCannotResizeWindow (490)':
    'prefix': 'NSLayoutPriorityDragThatCannotResizeWindow'
    'body': 'NSLayoutPriorityDragThatCannotResizeWindow'
  'NSLayoutPriorityFittingSizeCompression (50)':
    'prefix': 'NSLayoutPriorityFittingSizeCompression'
    'body': 'NSLayoutPriorityFittingSizeCompression'
  'NSLayoutPriorityRequired (1000)':
    'prefix': 'NSLayoutPriorityRequired'
    'body': 'NSLayoutPriorityRequired'
  'NSLayoutPriorityWindowSizeStayPut (500)':
    'prefix': 'NSLayoutPriorityWindowSizeStayPut'
    'body': 'NSLayoutPriorityWindowSizeStayPut'
  'NSLayoutRelationEqual (0)':
    'prefix': 'NSLayoutRelationEqual'
    'body': 'NSLayoutRelationEqual'
  'NSLayoutRelationGreaterThanOrEqual (1)':
    'prefix': 'NSLayoutRelationGreaterThanOrEqual'
    'body': 'NSLayoutRelationGreaterThanOrEqual'
  'NSLayoutRelationLessThanOrEqual (-1)':
    'prefix': 'NSLayoutRelationLessThanOrEqual'
    'body': 'NSLayoutRelationLessThanOrEqual'
  'NSLeftArrowFunctionKey (63234)':
    'prefix': 'NSLeftArrowFunctionKey'
    'body': 'NSLeftArrowFunctionKey'
  'NSLeftMouseDown (1)':
    'prefix': 'NSLeftMouseDown'
    'body': 'NSLeftMouseDown'
  'NSLeftMouseDownMask (2)':
    'prefix': 'NSLeftMouseDownMask'
    'body': 'NSLeftMouseDownMask'
  'NSLeftMouseDragged (6)':
    'prefix': 'NSLeftMouseDragged'
    'body': 'NSLeftMouseDragged'
  'NSLeftMouseDraggedMask (64)':
    'prefix': 'NSLeftMouseDraggedMask'
    'body': 'NSLeftMouseDraggedMask'
  'NSLeftMouseUp (2)':
    'prefix': 'NSLeftMouseUp'
    'body': 'NSLeftMouseUp'
  'NSLeftMouseUpMask (4)':
    'prefix': 'NSLeftMouseUpMask'
    'body': 'NSLeftMouseUpMask'
  'NSLeftTabStopType (0)':
    'prefix': 'NSLeftTabStopType'
    'body': 'NSLeftTabStopType'
  'NSLeftTabsBezelBorder (1)':
    'prefix': 'NSLeftTabsBezelBorder'
    'body': 'NSLeftTabsBezelBorder'
  'NSLeftTextAlignment (0)':
    'prefix': 'NSLeftTextAlignment'
    'body': 'NSLeftTextAlignment'
  'NSLeftTextMovement (19)':
    'prefix': 'NSLeftTextMovement'
    'body': 'NSLeftTextMovement'
  'NSLighterFontAction (6)':
    'prefix': 'NSLighterFontAction'
    'body': 'NSLighterFontAction'
  'NSLineBorder (1)':
    'prefix': 'NSLineBorder'
    'body': 'NSLineBorder'
  'NSLineBreakByCharWrapping (1)':
    'prefix': 'NSLineBreakByCharWrapping'
    'body': 'NSLineBreakByCharWrapping'
  'NSLineBreakByClipping (2)':
    'prefix': 'NSLineBreakByClipping'
    'body': 'NSLineBreakByClipping'
  'NSLineBreakByTruncatingHead (3)':
    'prefix': 'NSLineBreakByTruncatingHead'
    'body': 'NSLineBreakByTruncatingHead'
  'NSLineBreakByTruncatingMiddle (5)':
    'prefix': 'NSLineBreakByTruncatingMiddle'
    'body': 'NSLineBreakByTruncatingMiddle'
  'NSLineBreakByTruncatingTail (4)':
    'prefix': 'NSLineBreakByTruncatingTail'
    'body': 'NSLineBreakByTruncatingTail'
  'NSLineBreakByWordWrapping (0)':
    'prefix': 'NSLineBreakByWordWrapping'
    'body': 'NSLineBreakByWordWrapping'
  'NSLineDoesntMove (0)':
    'prefix': 'NSLineDoesntMove'
    'body': 'NSLineDoesntMove'
  'NSLineMovesDown (3)':
    'prefix': 'NSLineMovesDown'
    'body': 'NSLineMovesDown'
  'NSLineMovesLeft (1)':
    'prefix': 'NSLineMovesLeft'
    'body': 'NSLineMovesLeft'
  'NSLineMovesRight (2)':
    'prefix': 'NSLineMovesRight'
    'body': 'NSLineMovesRight'
  'NSLineMovesUp (4)':
    'prefix': 'NSLineMovesUp'
    'body': 'NSLineMovesUp'
  'NSLineSeparatorCharacter (8232)':
    'prefix': 'NSLineSeparatorCharacter'
    'body': 'NSLineSeparatorCharacter'
  'NSLineSweepDown (2)':
    'prefix': 'NSLineSweepDown'
    'body': 'NSLineSweepDown'
  'NSLineSweepLeft (0)':
    'prefix': 'NSLineSweepLeft'
    'body': 'NSLineSweepLeft'
  'NSLineSweepRight (1)':
    'prefix': 'NSLineSweepRight'
    'body': 'NSLineSweepRight'
  'NSLineSweepUp (3)':
    'prefix': 'NSLineSweepUp'
    'body': 'NSLineSweepUp'
  'NSLineToBezierPathElement (1)':
    'prefix': 'NSLineToBezierPathElement'
    'body': 'NSLineToBezierPathElement'
  'NSLinearSlider (0)':
    'prefix': 'NSLinearSlider'
    'body': 'NSLinearSlider'
  'NSListModeMatrix (2)':
    'prefix': 'NSListModeMatrix'
    'body': 'NSListModeMatrix'
  'NSMacintoshInterfaceStyle (3)':
    'prefix': 'NSMacintoshInterfaceStyle'
    'body': 'NSMacintoshInterfaceStyle'
  'NSMainMenuWindowLevel (24)':
    'prefix': 'NSMainMenuWindowLevel'
    'body': 'NSMainMenuWindowLevel'
  'NSMediaLibraryAudio (1)':
    'prefix': 'NSMediaLibraryAudio'
    'body': 'NSMediaLibraryAudio'
  'NSMediaLibraryImage (2)':
    'prefix': 'NSMediaLibraryImage'
    'body': 'NSMediaLibraryImage'
  'NSMediaLibraryMovie (4)':
    'prefix': 'NSMediaLibraryMovie'
    'body': 'NSMediaLibraryMovie'
  'NSMenuFunctionKey (63285)':
    'prefix': 'NSMenuFunctionKey'
    'body': 'NSMenuFunctionKey'
  'NSMenuPropertyItemAccessibilityDescription (32)':
    'prefix': 'NSMenuPropertyItemAccessibilityDescription'
    'body': 'NSMenuPropertyItemAccessibilityDescription'
  'NSMenuPropertyItemAttributedTitle (2)':
    'prefix': 'NSMenuPropertyItemAttributedTitle'
    'body': 'NSMenuPropertyItemAttributedTitle'
  'NSMenuPropertyItemEnabled (16)':
    'prefix': 'NSMenuPropertyItemEnabled'
    'body': 'NSMenuPropertyItemEnabled'
  'NSMenuPropertyItemImage (8)':
    'prefix': 'NSMenuPropertyItemImage'
    'body': 'NSMenuPropertyItemImage'
  'NSMenuPropertyItemKeyEquivalent (4)':
    'prefix': 'NSMenuPropertyItemKeyEquivalent'
    'body': 'NSMenuPropertyItemKeyEquivalent'
  'NSMenuPropertyItemTitle (1)':
    'prefix': 'NSMenuPropertyItemTitle'
    'body': 'NSMenuPropertyItemTitle'
  'NSMiniControlSize (2)':
    'prefix': 'NSMiniControlSize'
    'body': 'NSMiniControlSize'
  'NSMiniaturizableWindowMask (4)':
    'prefix': 'NSMiniaturizableWindowMask'
    'body': 'NSMiniaturizableWindowMask'
  'NSMiterLineJoinStyle (0)':
    'prefix': 'NSMiterLineJoinStyle'
    'body': 'NSMiterLineJoinStyle'
  'NSMixedState (-1)':
    'prefix': 'NSMixedState'
    'body': 'NSMixedState'
  'NSModalPanelWindowLevel (8)':
    'prefix': 'NSModalPanelWindowLevel'
    'body': 'NSModalPanelWindowLevel'
  'NSModalResponseAbort (-1001)':
    'prefix': 'NSModalResponseAbort'
    'body': 'NSModalResponseAbort'
  'NSModalResponseCancel (0)':
    'prefix': 'NSModalResponseCancel'
    'body': 'NSModalResponseCancel'
  'NSModalResponseContinue (-1002)':
    'prefix': 'NSModalResponseContinue'
    'body': 'NSModalResponseContinue'
  'NSModalResponseOK (1)':
    'prefix': 'NSModalResponseOK'
    'body': 'NSModalResponseOK'
  'NSModalResponseStop (-1000)':
    'prefix': 'NSModalResponseStop'
    'body': 'NSModalResponseStop'
  'NSModeSwitchFunctionKey (63303)':
    'prefix': 'NSModeSwitchFunctionKey'
    'body': 'NSModeSwitchFunctionKey'
  'NSMomentaryChangeButton (5)':
    'prefix': 'NSMomentaryChangeButton'
    'body': 'NSMomentaryChangeButton'
  'NSMomentaryLight (7)':
    'prefix': 'NSMomentaryLight'
    'body': 'NSMomentaryLight'
  'NSMomentaryLightButton (0)':
    'prefix': 'NSMomentaryLightButton'
    'body': 'NSMomentaryLightButton'
  'NSMomentaryPushButton (0)':
    'prefix': 'NSMomentaryPushButton'
    'body': 'NSMomentaryPushButton'
  'NSMomentaryPushInButton (7)':
    'prefix': 'NSMomentaryPushInButton'
    'body': 'NSMomentaryPushInButton'
  'NSMouseEntered (8)':
    'prefix': 'NSMouseEntered'
    'body': 'NSMouseEntered'
  'NSMouseEnteredMask (256)':
    'prefix': 'NSMouseEnteredMask'
    'body': 'NSMouseEnteredMask'
  'NSMouseEventSubtype (0)':
    'prefix': 'NSMouseEventSubtype'
    'body': 'NSMouseEventSubtype'
  'NSMouseExited (9)':
    'prefix': 'NSMouseExited'
    'body': 'NSMouseExited'
  'NSMouseExitedMask (512)':
    'prefix': 'NSMouseExitedMask'
    'body': 'NSMouseExitedMask'
  'NSMouseMoved (5)':
    'prefix': 'NSMouseMoved'
    'body': 'NSMouseMoved'
  'NSMouseMovedMask (32)':
    'prefix': 'NSMouseMovedMask'
    'body': 'NSMouseMovedMask'
  'NSMoveToBezierPathElement (0)':
    'prefix': 'NSMoveToBezierPathElement'
    'body': 'NSMoveToBezierPathElement'
  'NSNarrowFontMask (16)':
    'prefix': 'NSNarrowFontMask'
    'body': 'NSNarrowFontMask'
  'NSNativeShortGlyphPacking (5)':
    'prefix': 'NSNativeShortGlyphPacking'
    'body': 'NSNativeShortGlyphPacking'
  'NSNaturalTextAlignment (4)':
    'prefix': 'NSNaturalTextAlignment'
    'body': 'NSNaturalTextAlignment'
  'NSNewlineCharacter (10)':
    'prefix': 'NSNewlineCharacter'
    'body': 'NSNewlineCharacter'
  'NSNextFunctionKey (63296)':
    'prefix': 'NSNextFunctionKey'
    'body': 'NSNextFunctionKey'
  'NSNextStepInterfaceStyle (1)':
    'prefix': 'NSNextStepInterfaceStyle'
    'body': 'NSNextStepInterfaceStyle'
  'NSNoBorder (0)':
    'prefix': 'NSNoBorder'
    'body': 'NSNoBorder'
  'NSNoCellMask (0)':
    'prefix': 'NSNoCellMask'
    'body': 'NSNoCellMask'
  'NSNoFontChangeAction (0)':
    'prefix': 'NSNoFontChangeAction'
    'body': 'NSNoFontChangeAction'
  'NSNoImage (0)':
    'prefix': 'NSNoImage'
    'body': 'NSNoImage'
  'NSNoInterfaceStyle (0)':
    'prefix': 'NSNoInterfaceStyle'
    'body': 'NSNoInterfaceStyle'
  'NSNoModeColorPanel (-1)':
    'prefix': 'NSNoModeColorPanel'
    'body': 'NSNoModeColorPanel'
  'NSNoScrollerParts (0)':
    'prefix': 'NSNoScrollerParts'
    'body': 'NSNoScrollerParts'
  'NSNoTabsBezelBorder (4)':
    'prefix': 'NSNoTabsBezelBorder'
    'body': 'NSNoTabsBezelBorder'
  'NSNoTabsLineBorder (5)':
    'prefix': 'NSNoTabsLineBorder'
    'body': 'NSNoTabsLineBorder'
  'NSNoTabsNoBorder (6)':
    'prefix': 'NSNoTabsNoBorder'
    'body': 'NSNoTabsNoBorder'
  'NSNoTitle (0)':
    'prefix': 'NSNoTitle'
    'body': 'NSNoTitle'
  'NSNoUnderlineStyle (0)':
    'prefix': 'NSNoUnderlineStyle'
    'body': 'NSNoUnderlineStyle'
  'NSNonStandardCharacterSetFontMask (8)':
    'prefix': 'NSNonStandardCharacterSetFontMask'
    'body': 'NSNonStandardCharacterSetFontMask'
  'NSNonZeroWindingRule (0)':
    'prefix': 'NSNonZeroWindingRule'
    'body': 'NSNonZeroWindingRule'
  'NSNonactivatingPanelMask (128)':
    'prefix': 'NSNonactivatingPanelMask'
    'body': 'NSNonactivatingPanelMask'
  'NSNormalWindowLevel (0)':
    'prefix': 'NSNormalWindowLevel'
    'body': 'NSNormalWindowLevel'
  'NSNullCellType (0)':
    'prefix': 'NSNullCellType'
    'body': 'NSNullCellType'
  'NSNullGlyph (0)':
    'prefix': 'NSNullGlyph'
    'body': 'NSNullGlyph'
  'NSNumericPadKeyMask (2097152)':
    'prefix': 'NSNumericPadKeyMask'
    'body': 'NSNumericPadKeyMask'
  'NSOKButton (1)':
    'prefix': 'NSOKButton'
    'body': 'NSOKButton'
  'NSOPENGL_CURRENT_VERSION (1)':
    'prefix': 'NSOPENGL_CURRENT_VERSION'
    'body': 'NSOPENGL_CURRENT_VERSION'
  'NSOffState (0)':
    'prefix': 'NSOffState'
    'body': 'NSOffState'
  'NSOnOffButton (6)':
    'prefix': 'NSOnOffButton'
    'body': 'NSOnOffButton'
  'NSOnState (1)':
    'prefix': 'NSOnState'
    'body': 'NSOnState'
  'NSOnlyScrollerArrows (1)':
    'prefix': 'NSOnlyScrollerArrows'
    'body': 'NSOnlyScrollerArrows'
  'NSOpenGLCPCurrentRendererID (309)':
    'prefix': 'NSOpenGLCPCurrentRendererID'
    'body': 'NSOpenGLCPCurrentRendererID'
  'NSOpenGLCPGPUFragmentProcessing (311)':
    'prefix': 'NSOpenGLCPGPUFragmentProcessing'
    'body': 'NSOpenGLCPGPUFragmentProcessing'
  'NSOpenGLCPGPUVertexProcessing (310)':
    'prefix': 'NSOpenGLCPGPUVertexProcessing'
    'body': 'NSOpenGLCPGPUVertexProcessing'
  'NSOpenGLCPHasDrawable (314)':
    'prefix': 'NSOpenGLCPHasDrawable'
    'body': 'NSOpenGLCPHasDrawable'
  'NSOpenGLCPMPSwapsInFlight (315)':
    'prefix': 'NSOpenGLCPMPSwapsInFlight'
    'body': 'NSOpenGLCPMPSwapsInFlight'
  'NSOpenGLCPRasterizationEnable (221)':
    'prefix': 'NSOpenGLCPRasterizationEnable'
    'body': 'NSOpenGLCPRasterizationEnable'
  'NSOpenGLCPReclaimResources (308)':
    'prefix': 'NSOpenGLCPReclaimResources'
    'body': 'NSOpenGLCPReclaimResources'
  'NSOpenGLCPStateValidation (301)':
    'prefix': 'NSOpenGLCPStateValidation'
    'body': 'NSOpenGLCPStateValidation'
  'NSOpenGLCPSurfaceBackingSize (304)':
    'prefix': 'NSOpenGLCPSurfaceBackingSize'
    'body': 'NSOpenGLCPSurfaceBackingSize'
  'NSOpenGLCPSurfaceOpacity (236)':
    'prefix': 'NSOpenGLCPSurfaceOpacity'
    'body': 'NSOpenGLCPSurfaceOpacity'
  'NSOpenGLCPSurfaceOrder (235)':
    'prefix': 'NSOpenGLCPSurfaceOrder'
    'body': 'NSOpenGLCPSurfaceOrder'
  'NSOpenGLCPSurfaceSurfaceVolatile (306)':
    'prefix': 'NSOpenGLCPSurfaceSurfaceVolatile'
    'body': 'NSOpenGLCPSurfaceSurfaceVolatile'
  'NSOpenGLCPSwapInterval (222)':
    'prefix': 'NSOpenGLCPSwapInterval'
    'body': 'NSOpenGLCPSwapInterval'
  'NSOpenGLCPSwapRectangle (200)':
    'prefix': 'NSOpenGLCPSwapRectangle'
    'body': 'NSOpenGLCPSwapRectangle'
  'NSOpenGLCPSwapRectangleEnable (201)':
    'prefix': 'NSOpenGLCPSwapRectangleEnable'
    'body': 'NSOpenGLCPSwapRectangleEnable'
  'NSOpenGLGOClearFormatCache (502)':
    'prefix': 'NSOpenGLGOClearFormatCache'
    'body': 'NSOpenGLGOClearFormatCache'
  'NSOpenGLGOFormatCacheSize (501)':
    'prefix': 'NSOpenGLGOFormatCacheSize'
    'body': 'NSOpenGLGOFormatCacheSize'
  'NSOpenGLGOResetLibrary (504)':
    'prefix': 'NSOpenGLGOResetLibrary'
    'body': 'NSOpenGLGOResetLibrary'
  'NSOpenGLGORetainRenderers (503)':
    'prefix': 'NSOpenGLGORetainRenderers'
    'body': 'NSOpenGLGORetainRenderers'
  'NSOpenGLGOUseBuildCache (506)':
    'prefix': 'NSOpenGLGOUseBuildCache'
    'body': 'NSOpenGLGOUseBuildCache'
  'NSOpenGLPFAAccelerated (73)':
    'prefix': 'NSOpenGLPFAAccelerated'
    'body': 'NSOpenGLPFAAccelerated'
  'NSOpenGLPFAAcceleratedCompute (97)':
    'prefix': 'NSOpenGLPFAAcceleratedCompute'
    'body': 'NSOpenGLPFAAcceleratedCompute'
  'NSOpenGLPFAAccumSize (14)':
    'prefix': 'NSOpenGLPFAAccumSize'
    'body': 'NSOpenGLPFAAccumSize'
  'NSOpenGLPFAAllRenderers (1)':
    'prefix': 'NSOpenGLPFAAllRenderers'
    'body': 'NSOpenGLPFAAllRenderers'
  'NSOpenGLPFAAllowOfflineRenderers (96)':
    'prefix': 'NSOpenGLPFAAllowOfflineRenderers'
    'body': 'NSOpenGLPFAAllowOfflineRenderers'
  'NSOpenGLPFAAlphaSize (11)':
    'prefix': 'NSOpenGLPFAAlphaSize'
    'body': 'NSOpenGLPFAAlphaSize'
  'NSOpenGLPFAAuxBuffers (7)':
    'prefix': 'NSOpenGLPFAAuxBuffers'
    'body': 'NSOpenGLPFAAuxBuffers'
  'NSOpenGLPFAAuxDepthStencil (57)':
    'prefix': 'NSOpenGLPFAAuxDepthStencil'
    'body': 'NSOpenGLPFAAuxDepthStencil'
  'NSOpenGLPFABackingStore (76)':
    'prefix': 'NSOpenGLPFABackingStore'
    'body': 'NSOpenGLPFABackingStore'
  'NSOpenGLPFAClosestPolicy (74)':
    'prefix': 'NSOpenGLPFAClosestPolicy'
    'body': 'NSOpenGLPFAClosestPolicy'
  'NSOpenGLPFAColorFloat (58)':
    'prefix': 'NSOpenGLPFAColorFloat'
    'body': 'NSOpenGLPFAColorFloat'
  'NSOpenGLPFAColorSize (8)':
    'prefix': 'NSOpenGLPFAColorSize'
    'body': 'NSOpenGLPFAColorSize'
  'NSOpenGLPFACompliant (83)':
    'prefix': 'NSOpenGLPFACompliant'
    'body': 'NSOpenGLPFACompliant'
  'NSOpenGLPFADepthSize (12)':
    'prefix': 'NSOpenGLPFADepthSize'
    'body': 'NSOpenGLPFADepthSize'
  'NSOpenGLPFADoubleBuffer (5)':
    'prefix': 'NSOpenGLPFADoubleBuffer'
    'body': 'NSOpenGLPFADoubleBuffer'
  'NSOpenGLPFAFullScreen (54)':
    'prefix': 'NSOpenGLPFAFullScreen'
    'body': 'NSOpenGLPFAFullScreen'
  'NSOpenGLPFAMPSafe (78)':
    'prefix': 'NSOpenGLPFAMPSafe'
    'body': 'NSOpenGLPFAMPSafe'
  'NSOpenGLPFAMaximumPolicy (52)':
    'prefix': 'NSOpenGLPFAMaximumPolicy'
    'body': 'NSOpenGLPFAMaximumPolicy'
  'NSOpenGLPFAMinimumPolicy (51)':
    'prefix': 'NSOpenGLPFAMinimumPolicy'
    'body': 'NSOpenGLPFAMinimumPolicy'
  'NSOpenGLPFAMultiScreen (81)':
    'prefix': 'NSOpenGLPFAMultiScreen'
    'body': 'NSOpenGLPFAMultiScreen'
  'NSOpenGLPFAMultisample (59)':
    'prefix': 'NSOpenGLPFAMultisample'
    'body': 'NSOpenGLPFAMultisample'
  'NSOpenGLPFANoRecovery (72)':
    'prefix': 'NSOpenGLPFANoRecovery'
    'body': 'NSOpenGLPFANoRecovery'
  'NSOpenGLPFAOffScreen (53)':
    'prefix': 'NSOpenGLPFAOffScreen'
    'body': 'NSOpenGLPFAOffScreen'
  'NSOpenGLPFAOpenGLProfile (99)':
    'prefix': 'NSOpenGLPFAOpenGLProfile'
    'body': 'NSOpenGLPFAOpenGLProfile'
  'NSOpenGLPFAPixelBuffer (90)':
    'prefix': 'NSOpenGLPFAPixelBuffer'
    'body': 'NSOpenGLPFAPixelBuffer'
  'NSOpenGLPFARemotePixelBuffer (91)':
    'prefix': 'NSOpenGLPFARemotePixelBuffer'
    'body': 'NSOpenGLPFARemotePixelBuffer'
  'NSOpenGLPFARendererID (70)':
    'prefix': 'NSOpenGLPFARendererID'
    'body': 'NSOpenGLPFARendererID'
  'NSOpenGLPFARobust (75)':
    'prefix': 'NSOpenGLPFARobust'
    'body': 'NSOpenGLPFARobust'
  'NSOpenGLPFASampleAlpha (61)':
    'prefix': 'NSOpenGLPFASampleAlpha'
    'body': 'NSOpenGLPFASampleAlpha'
  'NSOpenGLPFASampleBuffers (55)':
    'prefix': 'NSOpenGLPFASampleBuffers'
    'body': 'NSOpenGLPFASampleBuffers'
  'NSOpenGLPFASamples (56)':
    'prefix': 'NSOpenGLPFASamples'
    'body': 'NSOpenGLPFASamples'
  'NSOpenGLPFAScreenMask (84)':
    'prefix': 'NSOpenGLPFAScreenMask'
    'body': 'NSOpenGLPFAScreenMask'
  'NSOpenGLPFASingleRenderer (71)':
    'prefix': 'NSOpenGLPFASingleRenderer'
    'body': 'NSOpenGLPFASingleRenderer'
  'NSOpenGLPFAStencilSize (13)':
    'prefix': 'NSOpenGLPFAStencilSize'
    'body': 'NSOpenGLPFAStencilSize'
  'NSOpenGLPFAStereo (6)':
    'prefix': 'NSOpenGLPFAStereo'
    'body': 'NSOpenGLPFAStereo'
  'NSOpenGLPFASupersample (60)':
    'prefix': 'NSOpenGLPFASupersample'
    'body': 'NSOpenGLPFASupersample'
  'NSOpenGLPFATripleBuffer (3)':
    'prefix': 'NSOpenGLPFATripleBuffer'
    'body': 'NSOpenGLPFATripleBuffer'
  'NSOpenGLPFAVirtualScreenCount (128)':
    'prefix': 'NSOpenGLPFAVirtualScreenCount'
    'body': 'NSOpenGLPFAVirtualScreenCount'
  'NSOpenGLPFAWindow (80)':
    'prefix': 'NSOpenGLPFAWindow'
    'body': 'NSOpenGLPFAWindow'
  'NSOpenGLProfileVersion3_2Core (12800)':
    'prefix': 'NSOpenGLProfileVersion3_2Core'
    'body': 'NSOpenGLProfileVersion3_2Core'
  'NSOpenGLProfileVersionLegacy (4096)':
    'prefix': 'NSOpenGLProfileVersionLegacy'
    'body': 'NSOpenGLProfileVersionLegacy'
  'NSOtherMouseDown (25)':
    'prefix': 'NSOtherMouseDown'
    'body': 'NSOtherMouseDown'
  'NSOtherMouseDownMask (33554432)':
    'prefix': 'NSOtherMouseDownMask'
    'body': 'NSOtherMouseDownMask'
  'NSOtherMouseDragged (27)':
    'prefix': 'NSOtherMouseDragged'
    'body': 'NSOtherMouseDragged'
  'NSOtherMouseDraggedMask (134217728)':
    'prefix': 'NSOtherMouseDraggedMask'
    'body': 'NSOtherMouseDraggedMask'
  'NSOtherMouseUp (26)':
    'prefix': 'NSOtherMouseUp'
    'body': 'NSOtherMouseUp'
  'NSOtherMouseUpMask (67108864)':
    'prefix': 'NSOtherMouseUpMask'
    'body': 'NSOtherMouseUpMask'
  'NSOtherTextMovement (0)':
    'prefix': 'NSOtherTextMovement'
    'body': 'NSOtherTextMovement'
  'NSOutlineViewDropOnItemIndex (-1)':
    'prefix': 'NSOutlineViewDropOnItemIndex'
    'body': 'NSOutlineViewDropOnItemIndex'
  'NSPDFPanelRequestsParentDirectory (16777216)':
    'prefix': 'NSPDFPanelRequestsParentDirectory'
    'body': 'NSPDFPanelRequestsParentDirectory'
  'NSPDFPanelShowsOrientation (8)':
    'prefix': 'NSPDFPanelShowsOrientation'
    'body': 'NSPDFPanelShowsOrientation'
  'NSPDFPanelShowsPaperSize (4)':
    'prefix': 'NSPDFPanelShowsPaperSize'
    'body': 'NSPDFPanelShowsPaperSize'
  'NSPNGFileType (4)':
    'prefix': 'NSPNGFileType'
    'body': 'NSPNGFileType'
  'NSPageControllerTransitionStyleHorizontalStrip (2)':
    'prefix': 'NSPageControllerTransitionStyleHorizontalStrip'
    'body': 'NSPageControllerTransitionStyleHorizontalStrip'
  'NSPageControllerTransitionStyleStackBook (1)':
    'prefix': 'NSPageControllerTransitionStyleStackBook'
    'body': 'NSPageControllerTransitionStyleStackBook'
  'NSPageControllerTransitionStyleStackHistory (0)':
    'prefix': 'NSPageControllerTransitionStyleStackHistory'
    'body': 'NSPageControllerTransitionStyleStackHistory'
  'NSPageDownFunctionKey (63277)':
    'prefix': 'NSPageDownFunctionKey'
    'body': 'NSPageDownFunctionKey'
  'NSPageUpFunctionKey (63276)':
    'prefix': 'NSPageUpFunctionKey'
    'body': 'NSPageUpFunctionKey'
  'NSPaperOrientationLandscape (1)':
    'prefix': 'NSPaperOrientationLandscape'
    'body': 'NSPaperOrientationLandscape'
  'NSPaperOrientationPortrait (0)':
    'prefix': 'NSPaperOrientationPortrait'
    'body': 'NSPaperOrientationPortrait'
  'NSParagraphSeparatorCharacter (8233)':
    'prefix': 'NSParagraphSeparatorCharacter'
    'body': 'NSParagraphSeparatorCharacter'
  'NSPasteboardReadingAsData (0)':
    'prefix': 'NSPasteboardReadingAsData'
    'body': 'NSPasteboardReadingAsData'
  'NSPasteboardReadingAsKeyedArchive (4)':
    'prefix': 'NSPasteboardReadingAsKeyedArchive'
    'body': 'NSPasteboardReadingAsKeyedArchive'
  'NSPasteboardReadingAsPropertyList (2)':
    'prefix': 'NSPasteboardReadingAsPropertyList'
    'body': 'NSPasteboardReadingAsPropertyList'
  'NSPasteboardReadingAsString (1)':
    'prefix': 'NSPasteboardReadingAsString'
    'body': 'NSPasteboardReadingAsString'
  'NSPasteboardWritingPromised (512)':
    'prefix': 'NSPasteboardWritingPromised'
    'body': 'NSPasteboardWritingPromised'
  'NSPathStyleNavigationBar (1)':
    'prefix': 'NSPathStyleNavigationBar'
    'body': 'NSPathStyleNavigationBar'
  'NSPathStylePopUp (2)':
    'prefix': 'NSPathStylePopUp'
    'body': 'NSPathStylePopUp'
  'NSPathStyleStandard (0)':
    'prefix': 'NSPathStyleStandard'
    'body': 'NSPathStyleStandard'
  'NSPatternColorSpaceModel (6)':
    'prefix': 'NSPatternColorSpaceModel'
    'body': 'NSPatternColorSpaceModel'
  'NSPauseFunctionKey (63280)':
    'prefix': 'NSPauseFunctionKey'
    'body': 'NSPauseFunctionKey'
  'NSPenLowerSideMask (2)':
    'prefix': 'NSPenLowerSideMask'
    'body': 'NSPenLowerSideMask'
  'NSPenPointingDevice (1)':
    'prefix': 'NSPenPointingDevice'
    'body': 'NSPenPointingDevice'
  'NSPenTipMask (1)':
    'prefix': 'NSPenTipMask'
    'body': 'NSPenTipMask'
  'NSPenUpperSideMask (4)':
    'prefix': 'NSPenUpperSideMask'
    'body': 'NSPenUpperSideMask'
  'NSPeriodic (16)':
    'prefix': 'NSPeriodic'
    'body': 'NSPeriodic'
  'NSPeriodicMask (65536)':
    'prefix': 'NSPeriodicMask'
    'body': 'NSPeriodicMask'
  'NSPlainTextTokenStyle (1)':
    'prefix': 'NSPlainTextTokenStyle'
    'body': 'NSPlainTextTokenStyle'
  'NSPopUpArrowAtBottom (2)':
    'prefix': 'NSPopUpArrowAtBottom'
    'body': 'NSPopUpArrowAtBottom'
  'NSPopUpArrowAtCenter (1)':
    'prefix': 'NSPopUpArrowAtCenter'
    'body': 'NSPopUpArrowAtCenter'
  'NSPopUpMenuWindowLevel (101)':
    'prefix': 'NSPopUpMenuWindowLevel'
    'body': 'NSPopUpMenuWindowLevel'
  'NSPopUpNoArrow (0)':
    'prefix': 'NSPopUpNoArrow'
    'body': 'NSPopUpNoArrow'
  'NSPopoverAppearanceHUD (1)':
    'prefix': 'NSPopoverAppearanceHUD'
    'body': 'NSPopoverAppearanceHUD'
  'NSPopoverAppearanceMinimal (0)':
    'prefix': 'NSPopoverAppearanceMinimal'
    'body': 'NSPopoverAppearanceMinimal'
  'NSPopoverBehaviorApplicationDefined (0)':
    'prefix': 'NSPopoverBehaviorApplicationDefined'
    'body': 'NSPopoverBehaviorApplicationDefined'
  'NSPopoverBehaviorSemitransient (2)':
    'prefix': 'NSPopoverBehaviorSemitransient'
    'body': 'NSPopoverBehaviorSemitransient'
  'NSPopoverBehaviorTransient (1)':
    'prefix': 'NSPopoverBehaviorTransient'
    'body': 'NSPopoverBehaviorTransient'
  'NSPortraitOrientation (0)':
    'prefix': 'NSPortraitOrientation'
    'body': 'NSPortraitOrientation'
  'NSPositiveDoubleType (7)':
    'prefix': 'NSPositiveDoubleType'
    'body': 'NSPositiveDoubleType'
  'NSPositiveFloatType (4)':
    'prefix': 'NSPositiveFloatType'
    'body': 'NSPositiveFloatType'
  'NSPositiveIntType (2)':
    'prefix': 'NSPositiveIntType'
    'body': 'NSPositiveIntType'
  'NSPosterFontMask (256)':
    'prefix': 'NSPosterFontMask'
    'body': 'NSPosterFontMask'
  'NSPowerOffEventType (1)':
    'prefix': 'NSPowerOffEventType'
    'body': 'NSPowerOffEventType'
  'NSPressedTab (2)':
    'prefix': 'NSPressedTab'
    'body': 'NSPressedTab'
  'NSPrevFunctionKey (63295)':
    'prefix': 'NSPrevFunctionKey'
    'body': 'NSPrevFunctionKey'
  'NSPrintFunctionKey (63288)':
    'prefix': 'NSPrintFunctionKey'
    'body': 'NSPrintFunctionKey'
  'NSPrintPanelShowsCopies (1)':
    'prefix': 'NSPrintPanelShowsCopies'
    'body': 'NSPrintPanelShowsCopies'
  'NSPrintPanelShowsOrientation (8)':
    'prefix': 'NSPrintPanelShowsOrientation'
    'body': 'NSPrintPanelShowsOrientation'
  'NSPrintPanelShowsPageRange (2)':
    'prefix': 'NSPrintPanelShowsPageRange'
    'body': 'NSPrintPanelShowsPageRange'
  'NSPrintPanelShowsPageSetupAccessory (256)':
    'prefix': 'NSPrintPanelShowsPageSetupAccessory'
    'body': 'NSPrintPanelShowsPageSetupAccessory'
  'NSPrintPanelShowsPaperSize (4)':
    'prefix': 'NSPrintPanelShowsPaperSize'
    'body': 'NSPrintPanelShowsPaperSize'
  'NSPrintPanelShowsPreview (131072)':
    'prefix': 'NSPrintPanelShowsPreview'
    'body': 'NSPrintPanelShowsPreview'
  'NSPrintPanelShowsPrintSelection (32)':
    'prefix': 'NSPrintPanelShowsPrintSelection'
    'body': 'NSPrintPanelShowsPrintSelection'
  'NSPrintPanelShowsScaling (16)':
    'prefix': 'NSPrintPanelShowsScaling'
    'body': 'NSPrintPanelShowsScaling'
  'NSPrintRenderingQualityBest (0)':
    'prefix': 'NSPrintRenderingQualityBest'
    'body': 'NSPrintRenderingQualityBest'
  'NSPrintRenderingQualityResponsive (1)':
    'prefix': 'NSPrintRenderingQualityResponsive'
    'body': 'NSPrintRenderingQualityResponsive'
  'NSPrintScreenFunctionKey (63278)':
    'prefix': 'NSPrintScreenFunctionKey'
    'body': 'NSPrintScreenFunctionKey'
  'NSPrinterTableError (2)':
    'prefix': 'NSPrinterTableError'
    'body': 'NSPrinterTableError'
  'NSPrinterTableNotFound (1)':
    'prefix': 'NSPrinterTableNotFound'
    'body': 'NSPrinterTableNotFound'
  'NSPrinterTableOK (0)':
    'prefix': 'NSPrinterTableOK'
    'body': 'NSPrinterTableOK'
  'NSPrintingCancelled (0)':
    'prefix': 'NSPrintingCancelled'
    'body': 'NSPrintingCancelled'
  'NSPrintingFailure (3)':
    'prefix': 'NSPrintingFailure'
    'body': 'NSPrintingFailure'
  'NSPrintingReplyLater (2)':
    'prefix': 'NSPrintingReplyLater'
    'body': 'NSPrintingReplyLater'
  'NSPrintingSuccess (1)':
    'prefix': 'NSPrintingSuccess'
    'body': 'NSPrintingSuccess'
  'NSProgressIndicatorBarStyle (0)':
    'prefix': 'NSProgressIndicatorBarStyle'
    'body': 'NSProgressIndicatorBarStyle'
  'NSProgressIndicatorPreferredAquaThickness (12)':
    'prefix': 'NSProgressIndicatorPreferredAquaThickness'
    'body': 'NSProgressIndicatorPreferredAquaThickness'
  'NSProgressIndicatorPreferredLargeThickness (18)':
    'prefix': 'NSProgressIndicatorPreferredLargeThickness'
    'body': 'NSProgressIndicatorPreferredLargeThickness'
  'NSProgressIndicatorPreferredSmallThickness (10)':
    'prefix': 'NSProgressIndicatorPreferredSmallThickness'
    'body': 'NSProgressIndicatorPreferredSmallThickness'
  'NSProgressIndicatorPreferredThickness (14)':
    'prefix': 'NSProgressIndicatorPreferredThickness'
    'body': 'NSProgressIndicatorPreferredThickness'
  'NSProgressIndicatorSpinningStyle (1)':
    'prefix': 'NSProgressIndicatorSpinningStyle'
    'body': 'NSProgressIndicatorSpinningStyle'
  'NSPushInCell (2)':
    'prefix': 'NSPushInCell'
    'body': 'NSPushInCell'
  'NSPushInCellMask (2)':
    'prefix': 'NSPushInCellMask'
    'body': 'NSPushInCellMask'
  'NSPushOnPushOffButton (1)':
    'prefix': 'NSPushOnPushOffButton'
    'body': 'NSPushOnPushOffButton'
  'NSRGBColorSpaceModel (1)':
    'prefix': 'NSRGBColorSpaceModel'
    'body': 'NSRGBColorSpaceModel'
  'NSRGBModeColorPanel (1)':
    'prefix': 'NSRGBModeColorPanel'
    'body': 'NSRGBModeColorPanel'
  'NSRadioButton (4)':
    'prefix': 'NSRadioButton'
    'body': 'NSRadioButton'
  'NSRadioModeMatrix (0)':
    'prefix': 'NSRadioModeMatrix'
    'body': 'NSRadioModeMatrix'
  'NSRangeDateMode (1)':
    'prefix': 'NSRangeDateMode'
    'body': 'NSRangeDateMode'
  'NSRatingLevelIndicatorStyle (3)':
    'prefix': 'NSRatingLevelIndicatorStyle'
    'body': 'NSRatingLevelIndicatorStyle'
  'NSRecessedBezelStyle (13)':
    'prefix': 'NSRecessedBezelStyle'
    'body': 'NSRecessedBezelStyle'
  'NSRedoFunctionKey (63300)':
    'prefix': 'NSRedoFunctionKey'
    'body': 'NSRedoFunctionKey'
  'NSRegularControlSize (0)':
    'prefix': 'NSRegularControlSize'
    'body': 'NSRegularControlSize'
  'NSRegularSquareBezelStyle (2)':
    'prefix': 'NSRegularSquareBezelStyle'
    'body': 'NSRegularSquareBezelStyle'
  'NSRelevancyLevelIndicatorStyle (0)':
    'prefix': 'NSRelevancyLevelIndicatorStyle'
    'body': 'NSRelevancyLevelIndicatorStyle'
  'NSRemoteNotificationTypeAlert (4)':
    'prefix': 'NSRemoteNotificationTypeAlert'
    'body': 'NSRemoteNotificationTypeAlert'
  'NSRemoteNotificationTypeBadge (1)':
    'prefix': 'NSRemoteNotificationTypeBadge'
    'body': 'NSRemoteNotificationTypeBadge'
  'NSRemoteNotificationTypeNone (0)':
    'prefix': 'NSRemoteNotificationTypeNone'
    'body': 'NSRemoteNotificationTypeNone'
  'NSRemoteNotificationTypeSound (2)':
    'prefix': 'NSRemoteNotificationTypeSound'
    'body': 'NSRemoteNotificationTypeSound'
  'NSRemoveTraitFontAction (7)':
    'prefix': 'NSRemoveTraitFontAction'
    'body': 'NSRemoveTraitFontAction'
  'NSResetCursorRectsRunLoopOrdering (700000)':
    'prefix': 'NSResetCursorRectsRunLoopOrdering'
    'body': 'NSResetCursorRectsRunLoopOrdering'
  'NSResetFunctionKey (63283)':
    'prefix': 'NSResetFunctionKey'
    'body': 'NSResetFunctionKey'
  'NSResizableWindowMask (8)':
    'prefix': 'NSResizableWindowMask'
    'body': 'NSResizableWindowMask'
  'NSReturnTextMovement (16)':
    'prefix': 'NSReturnTextMovement'
    'body': 'NSReturnTextMovement'
  'NSRightArrowFunctionKey (63235)':
    'prefix': 'NSRightArrowFunctionKey'
    'body': 'NSRightArrowFunctionKey'
  'NSRightMouseDown (3)':
    'prefix': 'NSRightMouseDown'
    'body': 'NSRightMouseDown'
  'NSRightMouseDownMask (8)':
    'prefix': 'NSRightMouseDownMask'
    'body': 'NSRightMouseDownMask'
  'NSRightMouseDragged (7)':
    'prefix': 'NSRightMouseDragged'
    'body': 'NSRightMouseDragged'
  'NSRightMouseDraggedMask (128)':
    'prefix': 'NSRightMouseDraggedMask'
    'body': 'NSRightMouseDraggedMask'
  'NSRightMouseUp (4)':
    'prefix': 'NSRightMouseUp'
    'body': 'NSRightMouseUp'
  'NSRightMouseUpMask (16)':
    'prefix': 'NSRightMouseUpMask'
    'body': 'NSRightMouseUpMask'
  'NSRightTabStopType (1)':
    'prefix': 'NSRightTabStopType'
    'body': 'NSRightTabStopType'
  'NSRightTabsBezelBorder (3)':
    'prefix': 'NSRightTabsBezelBorder'
    'body': 'NSRightTabsBezelBorder'
  'NSRightTextAlignment (1)':
    'prefix': 'NSRightTextAlignment'
    'body': 'NSRightTextAlignment'
  'NSRightTextMovement (20)':
    'prefix': 'NSRightTextMovement'
    'body': 'NSRightTextMovement'
  'NSRoundLineCapStyle (1)':
    'prefix': 'NSRoundLineCapStyle'
    'body': 'NSRoundLineCapStyle'
  'NSRoundLineJoinStyle (1)':
    'prefix': 'NSRoundLineJoinStyle'
    'body': 'NSRoundLineJoinStyle'
  'NSRoundRectBezelStyle (12)':
    'prefix': 'NSRoundRectBezelStyle'
    'body': 'NSRoundRectBezelStyle'
  'NSRoundedBezelStyle (1)':
    'prefix': 'NSRoundedBezelStyle'
    'body': 'NSRoundedBezelStyle'
  'NSRoundedDisclosureBezelStyle (14)':
    'prefix': 'NSRoundedDisclosureBezelStyle'
    'body': 'NSRoundedDisclosureBezelStyle'
  'NSRoundedTokenStyle (2)':
    'prefix': 'NSRoundedTokenStyle'
    'body': 'NSRoundedTokenStyle'
  'NSRuleEditorNestingModeCompound (2)':
    'prefix': 'NSRuleEditorNestingModeCompound'
    'body': 'NSRuleEditorNestingModeCompound'
  'NSRuleEditorNestingModeList (1)':
    'prefix': 'NSRuleEditorNestingModeList'
    'body': 'NSRuleEditorNestingModeList'
  'NSRuleEditorNestingModeSimple (3)':
    'prefix': 'NSRuleEditorNestingModeSimple'
    'body': 'NSRuleEditorNestingModeSimple'
  'NSRuleEditorNestingModeSingle (0)':
    'prefix': 'NSRuleEditorNestingModeSingle'
    'body': 'NSRuleEditorNestingModeSingle'
  'NSRuleEditorRowTypeCompound (1)':
    'prefix': 'NSRuleEditorRowTypeCompound'
    'body': 'NSRuleEditorRowTypeCompound'
  'NSRuleEditorRowTypeSimple (0)':
    'prefix': 'NSRuleEditorRowTypeSimple'
    'body': 'NSRuleEditorRowTypeSimple'
  'NSRunAbortedResponse (-1001)':
    'prefix': 'NSRunAbortedResponse'
    'body': 'NSRunAbortedResponse'
  'NSRunContinuesResponse (-1002)':
    'prefix': 'NSRunContinuesResponse'
    'body': 'NSRunContinuesResponse'
  'NSRunStoppedResponse (-1000)':
    'prefix': 'NSRunStoppedResponse'
    'body': 'NSRunStoppedResponse'
  'NSSaveAsOperation (1)':
    'prefix': 'NSSaveAsOperation'
    'body': 'NSSaveAsOperation'
  'NSSaveOperation (0)':
    'prefix': 'NSSaveOperation'
    'body': 'NSSaveOperation'
  'NSSaveToOperation (2)':
    'prefix': 'NSSaveToOperation'
    'body': 'NSSaveToOperation'
  'NSScaleNone (2)':
    'prefix': 'NSScaleNone'
    'body': 'NSScaleNone'
  'NSScaleProportionally (0)':
    'prefix': 'NSScaleProportionally'
    'body': 'NSScaleProportionally'
  'NSScaleToFit (1)':
    'prefix': 'NSScaleToFit'
    'body': 'NSScaleToFit'
  'NSScreenChangedEventType (8)':
    'prefix': 'NSScreenChangedEventType'
    'body': 'NSScreenChangedEventType'
  'NSScreenSaverWindowLevel (1000)':
    'prefix': 'NSScreenSaverWindowLevel'
    'body': 'NSScreenSaverWindowLevel'
  'NSScrollElasticityAllowed (2)':
    'prefix': 'NSScrollElasticityAllowed'
    'body': 'NSScrollElasticityAllowed'
  'NSScrollElasticityAutomatic (0)':
    'prefix': 'NSScrollElasticityAutomatic'
    'body': 'NSScrollElasticityAutomatic'
  'NSScrollElasticityNone (1)':
    'prefix': 'NSScrollElasticityNone'
    'body': 'NSScrollElasticityNone'
  'NSScrollLockFunctionKey (63279)':
    'prefix': 'NSScrollLockFunctionKey'
    'body': 'NSScrollLockFunctionKey'
  'NSScrollViewFindBarPositionAboveContent (1)':
    'prefix': 'NSScrollViewFindBarPositionAboveContent'
    'body': 'NSScrollViewFindBarPositionAboveContent'
  'NSScrollViewFindBarPositionAboveHorizontalRuler (0)':
    'prefix': 'NSScrollViewFindBarPositionAboveHorizontalRuler'
    'body': 'NSScrollViewFindBarPositionAboveHorizontalRuler'
  'NSScrollViewFindBarPositionBelowContent (2)':
    'prefix': 'NSScrollViewFindBarPositionBelowContent'
    'body': 'NSScrollViewFindBarPositionBelowContent'
  'NSScrollWheel (22)':
    'prefix': 'NSScrollWheel'
    'body': 'NSScrollWheel'
  'NSScrollWheelMask (4194304)':
    'prefix': 'NSScrollWheelMask'
    'body': 'NSScrollWheelMask'
  'NSScrollerArrowsDefaultSetting (0)':
    'prefix': 'NSScrollerArrowsDefaultSetting'
    'body': 'NSScrollerArrowsDefaultSetting'
  'NSScrollerArrowsMaxEnd (0)':
    'prefix': 'NSScrollerArrowsMaxEnd'
    'body': 'NSScrollerArrowsMaxEnd'
  'NSScrollerArrowsMinEnd (1)':
    'prefix': 'NSScrollerArrowsMinEnd'
    'body': 'NSScrollerArrowsMinEnd'
  'NSScrollerArrowsNone (2)':
    'prefix': 'NSScrollerArrowsNone'
    'body': 'NSScrollerArrowsNone'
  'NSScrollerDecrementArrow (1)':
    'prefix': 'NSScrollerDecrementArrow'
    'body': 'NSScrollerDecrementArrow'
  'NSScrollerDecrementLine (4)':
    'prefix': 'NSScrollerDecrementLine'
    'body': 'NSScrollerDecrementLine'
  'NSScrollerDecrementPage (1)':
    'prefix': 'NSScrollerDecrementPage'
    'body': 'NSScrollerDecrementPage'
  'NSScrollerIncrementArrow (0)':
    'prefix': 'NSScrollerIncrementArrow'
    'body': 'NSScrollerIncrementArrow'
  'NSScrollerIncrementLine (5)':
    'prefix': 'NSScrollerIncrementLine'
    'body': 'NSScrollerIncrementLine'
  'NSScrollerIncrementPage (3)':
    'prefix': 'NSScrollerIncrementPage'
    'body': 'NSScrollerIncrementPage'
  'NSScrollerKnob (2)':
    'prefix': 'NSScrollerKnob'
    'body': 'NSScrollerKnob'
  'NSScrollerKnobSlot (6)':
    'prefix': 'NSScrollerKnobSlot'
    'body': 'NSScrollerKnobSlot'
  'NSScrollerKnobStyleDark (1)':
    'prefix': 'NSScrollerKnobStyleDark'
    'body': 'NSScrollerKnobStyleDark'
  'NSScrollerKnobStyleDefault (0)':
    'prefix': 'NSScrollerKnobStyleDefault'
    'body': 'NSScrollerKnobStyleDefault'
  'NSScrollerKnobStyleLight (2)':
    'prefix': 'NSScrollerKnobStyleLight'
    'body': 'NSScrollerKnobStyleLight'
  'NSScrollerNoPart (0)':
    'prefix': 'NSScrollerNoPart'
    'body': 'NSScrollerNoPart'
  'NSScrollerStyleLegacy (0)':
    'prefix': 'NSScrollerStyleLegacy'
    'body': 'NSScrollerStyleLegacy'
  'NSScrollerStyleOverlay (1)':
    'prefix': 'NSScrollerStyleOverlay'
    'body': 'NSScrollerStyleOverlay'
  'NSSearchFieldClearRecentsMenuItemTag (1002)':
    'prefix': 'NSSearchFieldClearRecentsMenuItemTag'
    'body': 'NSSearchFieldClearRecentsMenuItemTag'
  'NSSearchFieldNoRecentsMenuItemTag (1003)':
    'prefix': 'NSSearchFieldNoRecentsMenuItemTag'
    'body': 'NSSearchFieldNoRecentsMenuItemTag'
  'NSSearchFieldRecentsMenuItemTag (1001)':
    'prefix': 'NSSearchFieldRecentsMenuItemTag'
    'body': 'NSSearchFieldRecentsMenuItemTag'
  'NSSearchFieldRecentsTitleMenuItemTag (1000)':
    'prefix': 'NSSearchFieldRecentsTitleMenuItemTag'
    'body': 'NSSearchFieldRecentsTitleMenuItemTag'
  'NSSegmentStyleAutomatic (0)':
    'prefix': 'NSSegmentStyleAutomatic'
    'body': 'NSSegmentStyleAutomatic'
  'NSSegmentStyleCapsule (5)':
    'prefix': 'NSSegmentStyleCapsule'
    'body': 'NSSegmentStyleCapsule'
  'NSSegmentStyleRoundRect (3)':
    'prefix': 'NSSegmentStyleRoundRect'
    'body': 'NSSegmentStyleRoundRect'
  'NSSegmentStyleRounded (1)':
    'prefix': 'NSSegmentStyleRounded'
    'body': 'NSSegmentStyleRounded'
  'NSSegmentStyleSmallSquare (6)':
    'prefix': 'NSSegmentStyleSmallSquare'
    'body': 'NSSegmentStyleSmallSquare'
  'NSSegmentStyleTexturedRounded (2)':
    'prefix': 'NSSegmentStyleTexturedRounded'
    'body': 'NSSegmentStyleTexturedRounded'
  'NSSegmentStyleTexturedSquare (4)':
    'prefix': 'NSSegmentStyleTexturedSquare'
    'body': 'NSSegmentStyleTexturedSquare'
  'NSSegmentSwitchTrackingMomentary (2)':
    'prefix': 'NSSegmentSwitchTrackingMomentary'
    'body': 'NSSegmentSwitchTrackingMomentary'
  'NSSegmentSwitchTrackingSelectAny (1)':
    'prefix': 'NSSegmentSwitchTrackingSelectAny'
    'body': 'NSSegmentSwitchTrackingSelectAny'
  'NSSegmentSwitchTrackingSelectOne (0)':
    'prefix': 'NSSegmentSwitchTrackingSelectOne'
    'body': 'NSSegmentSwitchTrackingSelectOne'
  'NSSelectByCharacter (0)':
    'prefix': 'NSSelectByCharacter'
    'body': 'NSSelectByCharacter'
  'NSSelectByParagraph (2)':
    'prefix': 'NSSelectByParagraph'
    'body': 'NSSelectByParagraph'
  'NSSelectByWord (1)':
    'prefix': 'NSSelectByWord'
    'body': 'NSSelectByWord'
  'NSSelectFunctionKey (63297)':
    'prefix': 'NSSelectFunctionKey'
    'body': 'NSSelectFunctionKey'
  'NSSelectedTab (0)':
    'prefix': 'NSSelectedTab'
    'body': 'NSSelectedTab'
  'NSSelectingNext (1)':
    'prefix': 'NSSelectingNext'
    'body': 'NSSelectingNext'
  'NSSelectingPrevious (2)':
    'prefix': 'NSSelectingPrevious'
    'body': 'NSSelectingPrevious'
  'NSSelectionAffinityDownstream (1)':
    'prefix': 'NSSelectionAffinityDownstream'
    'body': 'NSSelectionAffinityDownstream'
  'NSSelectionAffinityUpstream (0)':
    'prefix': 'NSSelectionAffinityUpstream'
    'body': 'NSSelectionAffinityUpstream'
  'NSServiceApplicationLaunchFailedError (66561)':
    'prefix': 'NSServiceApplicationLaunchFailedError'
    'body': 'NSServiceApplicationLaunchFailedError'
  'NSServiceApplicationNotFoundError (66560)':
    'prefix': 'NSServiceApplicationNotFoundError'
    'body': 'NSServiceApplicationNotFoundError'
  'NSServiceErrorMaximum (66817)':
    'prefix': 'NSServiceErrorMaximum'
    'body': 'NSServiceErrorMaximum'
  'NSServiceErrorMinimum (66560)':
    'prefix': 'NSServiceErrorMinimum'
    'body': 'NSServiceErrorMinimum'
  'NSServiceInvalidPasteboardDataError (66563)':
    'prefix': 'NSServiceInvalidPasteboardDataError'
    'body': 'NSServiceInvalidPasteboardDataError'
  'NSServiceMalformedServiceDictionaryError (66564)':
    'prefix': 'NSServiceMalformedServiceDictionaryError'
    'body': 'NSServiceMalformedServiceDictionaryError'
  'NSServiceMiscellaneousError (66800)':
    'prefix': 'NSServiceMiscellaneousError'
    'body': 'NSServiceMiscellaneousError'
  'NSServiceRequestTimedOutError (66562)':
    'prefix': 'NSServiceRequestTimedOutError'
    'body': 'NSServiceRequestTimedOutError'
  'NSShadowlessSquareBezelStyle (6)':
    'prefix': 'NSShadowlessSquareBezelStyle'
    'body': 'NSShadowlessSquareBezelStyle'
  'NSSharingContentScopeFull (2)':
    'prefix': 'NSSharingContentScopeFull'
    'body': 'NSSharingContentScopeFull'
  'NSSharingContentScopeItem (0)':
    'prefix': 'NSSharingContentScopeItem'
    'body': 'NSSharingContentScopeItem'
  'NSSharingContentScopePartial (1)':
    'prefix': 'NSSharingContentScopePartial'
    'body': 'NSSharingContentScopePartial'
  'NSSharingServiceErrorMaximum (67327)':
    'prefix': 'NSSharingServiceErrorMaximum'
    'body': 'NSSharingServiceErrorMaximum'
  'NSSharingServiceErrorMinimum (67072)':
    'prefix': 'NSSharingServiceErrorMinimum'
    'body': 'NSSharingServiceErrorMinimum'
  'NSSharingServiceNotConfiguredError (67072)':
    'prefix': 'NSSharingServiceNotConfiguredError'
    'body': 'NSSharingServiceNotConfiguredError'
  'NSShiftKeyMask (131072)':
    'prefix': 'NSShiftKeyMask'
    'body': 'NSShiftKeyMask'
  'NSShowControlGlyphs (1)':
    'prefix': 'NSShowControlGlyphs'
    'body': 'NSShowControlGlyphs'
  'NSShowInvisibleGlyphs (2)':
    'prefix': 'NSShowInvisibleGlyphs'
    'body': 'NSShowInvisibleGlyphs'
  'NSSingleDateMode (0)':
    'prefix': 'NSSingleDateMode'
    'body': 'NSSingleDateMode'
  'NSSingleUnderlineStyle (1)':
    'prefix': 'NSSingleUnderlineStyle'
    'body': 'NSSingleUnderlineStyle'
  'NSSizeDownFontAction (4)':
    'prefix': 'NSSizeDownFontAction'
    'body': 'NSSizeDownFontAction'
  'NSSizeUpFontAction (3)':
    'prefix': 'NSSizeUpFontAction'
    'body': 'NSSizeUpFontAction'
  'NSSmallCapsFontMask (128)':
    'prefix': 'NSSmallCapsFontMask'
    'body': 'NSSmallCapsFontMask'
  'NSSmallControlSize (1)':
    'prefix': 'NSSmallControlSize'
    'body': 'NSSmallControlSize'
  'NSSmallIconButtonBezelStyle (2)':
    'prefix': 'NSSmallIconButtonBezelStyle'
    'body': 'NSSmallIconButtonBezelStyle'
  'NSSmallSquareBezelStyle (10)':
    'prefix': 'NSSmallSquareBezelStyle'
    'body': 'NSSmallSquareBezelStyle'
  'NSSpecialPageOrder (0)':
    'prefix': 'NSSpecialPageOrder'
    'body': 'NSSpecialPageOrder'
  'NSSpeechImmediateBoundary (0)':
    'prefix': 'NSSpeechImmediateBoundary'
    'body': 'NSSpeechImmediateBoundary'
  'NSSpeechSentenceBoundary (2)':
    'prefix': 'NSSpeechSentenceBoundary'
    'body': 'NSSpeechSentenceBoundary'
  'NSSpeechWordBoundary (1)':
    'prefix': 'NSSpeechWordBoundary'
    'body': 'NSSpeechWordBoundary'
  'NSSpellingStateGrammarFlag (2)':
    'prefix': 'NSSpellingStateGrammarFlag'
    'body': 'NSSpellingStateGrammarFlag'
  'NSSpellingStateSpellingFlag (1)':
    'prefix': 'NSSpellingStateSpellingFlag'
    'body': 'NSSpellingStateSpellingFlag'
  'NSSplitViewDividerStylePaneSplitter (3)':
    'prefix': 'NSSplitViewDividerStylePaneSplitter'
    'body': 'NSSplitViewDividerStylePaneSplitter'
  'NSSplitViewDividerStyleThick (1)':
    'prefix': 'NSSplitViewDividerStyleThick'
    'body': 'NSSplitViewDividerStyleThick'
  'NSSplitViewDividerStyleThin (2)':
    'prefix': 'NSSplitViewDividerStyleThin'
    'body': 'NSSplitViewDividerStyleThin'
  'NSSquareLineCapStyle (2)':
    'prefix': 'NSSquareLineCapStyle'
    'body': 'NSSquareLineCapStyle'
  'NSSquareStatusItemLength (-2)':
    'prefix': 'NSSquareStatusItemLength'
    'body': 'NSSquareStatusItemLength'
  'NSStackViewGravityBottom (3)':
    'prefix': 'NSStackViewGravityBottom'
    'body': 'NSStackViewGravityBottom'
  'NSStackViewGravityCenter (2)':
    'prefix': 'NSStackViewGravityCenter'
    'body': 'NSStackViewGravityCenter'
  'NSStackViewGravityLeading (1)':
    'prefix': 'NSStackViewGravityLeading'
    'body': 'NSStackViewGravityLeading'
  'NSStackViewGravityTop (1)':
    'prefix': 'NSStackViewGravityTop'
    'body': 'NSStackViewGravityTop'
  'NSStackViewGravityTrailing (3)':
    'prefix': 'NSStackViewGravityTrailing'
    'body': 'NSStackViewGravityTrailing'
  'NSStackViewSpacingUseDefault (3.4028235E+38)':
    'prefix': 'NSStackViewSpacingUseDefault'
    'body': 'NSStackViewSpacingUseDefault'
  'NSStackViewVisibilityPriorityDetachOnlyIfNecessary (900)':
    'prefix': 'NSStackViewVisibilityPriorityDetachOnlyIfNecessary'
    'body': 'NSStackViewVisibilityPriorityDetachOnlyIfNecessary'
  'NSStackViewVisibilityPriorityMustHold (1000)':
    'prefix': 'NSStackViewVisibilityPriorityMustHold'
    'body': 'NSStackViewVisibilityPriorityMustHold'
  'NSStackViewVisibilityPriorityNotVisible (0)':
    'prefix': 'NSStackViewVisibilityPriorityNotVisible'
    'body': 'NSStackViewVisibilityPriorityNotVisible'
  'NSStatusWindowLevel (25)':
    'prefix': 'NSStatusWindowLevel'
    'body': 'NSStatusWindowLevel'
  'NSStopFunctionKey (63284)':
    'prefix': 'NSStopFunctionKey'
    'body': 'NSStopFunctionKey'
  'NSStringDrawingDisableScreenFontSubstitution (4)':
    'prefix': 'NSStringDrawingDisableScreenFontSubstitution'
    'body': 'NSStringDrawingDisableScreenFontSubstitution'
  'NSStringDrawingOneShot (16)':
    'prefix': 'NSStringDrawingOneShot'
    'body': 'NSStringDrawingOneShot'
  'NSStringDrawingTruncatesLastVisibleLine (32)':
    'prefix': 'NSStringDrawingTruncatesLastVisibleLine'
    'body': 'NSStringDrawingTruncatesLastVisibleLine'
  'NSStringDrawingUsesDeviceMetrics (8)':
    'prefix': 'NSStringDrawingUsesDeviceMetrics'
    'body': 'NSStringDrawingUsesDeviceMetrics'
  'NSStringDrawingUsesFontLeading (2)':
    'prefix': 'NSStringDrawingUsesFontLeading'
    'body': 'NSStringDrawingUsesFontLeading'
  'NSStringDrawingUsesLineFragmentOrigin (1)':
    'prefix': 'NSStringDrawingUsesLineFragmentOrigin'
    'body': 'NSStringDrawingUsesLineFragmentOrigin'
  'NSSubmenuWindowLevel (3)':
    'prefix': 'NSSubmenuWindowLevel'
    'body': 'NSSubmenuWindowLevel'
  'NSSwitchButton (3)':
    'prefix': 'NSSwitchButton'
    'body': 'NSSwitchButton'
  'NSSysReqFunctionKey (63281)':
    'prefix': 'NSSysReqFunctionKey'
    'body': 'NSSysReqFunctionKey'
  'NSSystemDefined (14)':
    'prefix': 'NSSystemDefined'
    'body': 'NSSystemDefined'
  'NSSystemDefinedMask (16384)':
    'prefix': 'NSSystemDefinedMask'
    'body': 'NSSystemDefinedMask'
  'NSSystemFunctionKey (63287)':
    'prefix': 'NSSystemFunctionKey'
    'body': 'NSSystemFunctionKey'
  'NSTIFFCompressionCCITTFAX3 (3)':
    'prefix': 'NSTIFFCompressionCCITTFAX3'
    'body': 'NSTIFFCompressionCCITTFAX3'
  'NSTIFFCompressionCCITTFAX4 (4)':
    'prefix': 'NSTIFFCompressionCCITTFAX4'
    'body': 'NSTIFFCompressionCCITTFAX4'
  'NSTIFFCompressionJPEG (6)':
    'prefix': 'NSTIFFCompressionJPEG'
    'body': 'NSTIFFCompressionJPEG'
  'NSTIFFCompressionLZW (5)':
    'prefix': 'NSTIFFCompressionLZW'
    'body': 'NSTIFFCompressionLZW'
  'NSTIFFCompressionNEXT (32766)':
    'prefix': 'NSTIFFCompressionNEXT'
    'body': 'NSTIFFCompressionNEXT'
  'NSTIFFCompressionNone (1)':
    'prefix': 'NSTIFFCompressionNone'
    'body': 'NSTIFFCompressionNone'
  'NSTIFFCompressionOldJPEG (32865)':
    'prefix': 'NSTIFFCompressionOldJPEG'
    'body': 'NSTIFFCompressionOldJPEG'
  'NSTIFFCompressionPackBits (32773)':
    'prefix': 'NSTIFFCompressionPackBits'
    'body': 'NSTIFFCompressionPackBits'
  'NSTIFFFileType (0)':
    'prefix': 'NSTIFFFileType'
    'body': 'NSTIFFFileType'
  'NSTabCharacter (9)':
    'prefix': 'NSTabCharacter'
    'body': 'NSTabCharacter'
  'NSTabTextMovement (17)':
    'prefix': 'NSTabTextMovement'
    'body': 'NSTabTextMovement'
  'NSTableColumnAutoresizingMask (1)':
    'prefix': 'NSTableColumnAutoresizingMask'
    'body': 'NSTableColumnAutoresizingMask'
  'NSTableColumnNoResizing (0)':
    'prefix': 'NSTableColumnNoResizing'
    'body': 'NSTableColumnNoResizing'
  'NSTableColumnUserResizingMask (2)':
    'prefix': 'NSTableColumnUserResizingMask'
    'body': 'NSTableColumnUserResizingMask'
  'NSTableViewAnimationEffectFade (1)':
    'prefix': 'NSTableViewAnimationEffectFade'
    'body': 'NSTableViewAnimationEffectFade'
  'NSTableViewAnimationEffectGap (2)':
    'prefix': 'NSTableViewAnimationEffectGap'
    'body': 'NSTableViewAnimationEffectGap'
  'NSTableViewAnimationEffectNone (0)':
    'prefix': 'NSTableViewAnimationEffectNone'
    'body': 'NSTableViewAnimationEffectNone'
  'NSTableViewAnimationSlideDown (32)':
    'prefix': 'NSTableViewAnimationSlideDown'
    'body': 'NSTableViewAnimationSlideDown'
  'NSTableViewAnimationSlideLeft (48)':
    'prefix': 'NSTableViewAnimationSlideLeft'
    'body': 'NSTableViewAnimationSlideLeft'
  'NSTableViewAnimationSlideRight (64)':
    'prefix': 'NSTableViewAnimationSlideRight'
    'body': 'NSTableViewAnimationSlideRight'
  'NSTableViewAnimationSlideUp (16)':
    'prefix': 'NSTableViewAnimationSlideUp'
    'body': 'NSTableViewAnimationSlideUp'
  'NSTableViewDashedHorizontalGridLineMask (8)':
    'prefix': 'NSTableViewDashedHorizontalGridLineMask'
    'body': 'NSTableViewDashedHorizontalGridLineMask'
  'NSTableViewDraggingDestinationFeedbackStyleGap (2)':
    'prefix': 'NSTableViewDraggingDestinationFeedbackStyleGap'
    'body': 'NSTableViewDraggingDestinationFeedbackStyleGap'
  'NSTableViewDraggingDestinationFeedbackStyleNone (-1)':
    'prefix': 'NSTableViewDraggingDestinationFeedbackStyleNone'
    'body': 'NSTableViewDraggingDestinationFeedbackStyleNone'
  'NSTableViewDraggingDestinationFeedbackStyleRegular (0)':
    'prefix': 'NSTableViewDraggingDestinationFeedbackStyleRegular'
    'body': 'NSTableViewDraggingDestinationFeedbackStyleRegular'
  'NSTableViewDraggingDestinationFeedbackStyleSourceList (1)':
    'prefix': 'NSTableViewDraggingDestinationFeedbackStyleSourceList'
    'body': 'NSTableViewDraggingDestinationFeedbackStyleSourceList'
  'NSTableViewDropAbove (1)':
    'prefix': 'NSTableViewDropAbove'
    'body': 'NSTableViewDropAbove'
  'NSTableViewDropOn (0)':
    'prefix': 'NSTableViewDropOn'
    'body': 'NSTableViewDropOn'
  'NSTableViewFirstColumnOnlyAutoresizingStyle (5)':
    'prefix': 'NSTableViewFirstColumnOnlyAutoresizingStyle'
    'body': 'NSTableViewFirstColumnOnlyAutoresizingStyle'
  'NSTableViewGridNone (0)':
    'prefix': 'NSTableViewGridNone'
    'body': 'NSTableViewGridNone'
  'NSTableViewLastColumnOnlyAutoresizingStyle (4)':
    'prefix': 'NSTableViewLastColumnOnlyAutoresizingStyle'
    'body': 'NSTableViewLastColumnOnlyAutoresizingStyle'
  'NSTableViewNoColumnAutoresizing (0)':
    'prefix': 'NSTableViewNoColumnAutoresizing'
    'body': 'NSTableViewNoColumnAutoresizing'
  'NSTableViewReverseSequentialColumnAutoresizingStyle (3)':
    'prefix': 'NSTableViewReverseSequentialColumnAutoresizingStyle'
    'body': 'NSTableViewReverseSequentialColumnAutoresizingStyle'
  'NSTableViewRowSizeStyleCustom (0)':
    'prefix': 'NSTableViewRowSizeStyleCustom'
    'body': 'NSTableViewRowSizeStyleCustom'
  'NSTableViewRowSizeStyleDefault (-1)':
    'prefix': 'NSTableViewRowSizeStyleDefault'
    'body': 'NSTableViewRowSizeStyleDefault'
  'NSTableViewRowSizeStyleLarge (3)':
    'prefix': 'NSTableViewRowSizeStyleLarge'
    'body': 'NSTableViewRowSizeStyleLarge'
  'NSTableViewRowSizeStyleMedium (2)':
    'prefix': 'NSTableViewRowSizeStyleMedium'
    'body': 'NSTableViewRowSizeStyleMedium'
  'NSTableViewRowSizeStyleSmall (1)':
    'prefix': 'NSTableViewRowSizeStyleSmall'
    'body': 'NSTableViewRowSizeStyleSmall'
  'NSTableViewSelectionHighlightStyleNone (-1)':
    'prefix': 'NSTableViewSelectionHighlightStyleNone'
    'body': 'NSTableViewSelectionHighlightStyleNone'
  'NSTableViewSelectionHighlightStyleRegular (0)':
    'prefix': 'NSTableViewSelectionHighlightStyleRegular'
    'body': 'NSTableViewSelectionHighlightStyleRegular'
  'NSTableViewSelectionHighlightStyleSourceList (1)':
    'prefix': 'NSTableViewSelectionHighlightStyleSourceList'
    'body': 'NSTableViewSelectionHighlightStyleSourceList'
  'NSTableViewSequentialColumnAutoresizingStyle (2)':
    'prefix': 'NSTableViewSequentialColumnAutoresizingStyle'
    'body': 'NSTableViewSequentialColumnAutoresizingStyle'
  'NSTableViewSolidHorizontalGridLineMask (2)':
    'prefix': 'NSTableViewSolidHorizontalGridLineMask'
    'body': 'NSTableViewSolidHorizontalGridLineMask'
  'NSTableViewSolidVerticalGridLineMask (1)':
    'prefix': 'NSTableViewSolidVerticalGridLineMask'
    'body': 'NSTableViewSolidVerticalGridLineMask'
  'NSTableViewUniformColumnAutoresizingStyle (1)':
    'prefix': 'NSTableViewUniformColumnAutoresizingStyle'
    'body': 'NSTableViewUniformColumnAutoresizingStyle'
  'NSTabletPoint (23)':
    'prefix': 'NSTabletPoint'
    'body': 'NSTabletPoint'
  'NSTabletPointEventSubtype (1)':
    'prefix': 'NSTabletPointEventSubtype'
    'body': 'NSTabletPointEventSubtype'
  'NSTabletPointMask (8388608)':
    'prefix': 'NSTabletPointMask'
    'body': 'NSTabletPointMask'
  'NSTabletProximity (24)':
    'prefix': 'NSTabletProximity'
    'body': 'NSTabletProximity'
  'NSTabletProximityEventSubtype (2)':
    'prefix': 'NSTabletProximityEventSubtype'
    'body': 'NSTabletProximityEventSubtype'
  'NSTabletProximityMask (16777216)':
    'prefix': 'NSTabletProximityMask'
    'body': 'NSTabletProximityMask'
  'NSTerminateCancel (0)':
    'prefix': 'NSTerminateCancel'
    'body': 'NSTerminateCancel'
  'NSTerminateLater (2)':
    'prefix': 'NSTerminateLater'
    'body': 'NSTerminateLater'
  'NSTerminateNow (1)':
    'prefix': 'NSTerminateNow'
    'body': 'NSTerminateNow'
  'NSTextBlockAbsoluteValueType (0)':
    'prefix': 'NSTextBlockAbsoluteValueType'
    'body': 'NSTextBlockAbsoluteValueType'
  'NSTextBlockBaselineAlignment (3)':
    'prefix': 'NSTextBlockBaselineAlignment'
    'body': 'NSTextBlockBaselineAlignment'
  'NSTextBlockBorder (0)':
    'prefix': 'NSTextBlockBorder'
    'body': 'NSTextBlockBorder'
  'NSTextBlockBottomAlignment (2)':
    'prefix': 'NSTextBlockBottomAlignment'
    'body': 'NSTextBlockBottomAlignment'
  'NSTextBlockHeight (4)':
    'prefix': 'NSTextBlockHeight'
    'body': 'NSTextBlockHeight'
  'NSTextBlockMargin (1)':
    'prefix': 'NSTextBlockMargin'
    'body': 'NSTextBlockMargin'
  'NSTextBlockMaximumHeight (6)':
    'prefix': 'NSTextBlockMaximumHeight'
    'body': 'NSTextBlockMaximumHeight'
  'NSTextBlockMaximumWidth (2)':
    'prefix': 'NSTextBlockMaximumWidth'
    'body': 'NSTextBlockMaximumWidth'
  'NSTextBlockMiddleAlignment (1)':
    'prefix': 'NSTextBlockMiddleAlignment'
    'body': 'NSTextBlockMiddleAlignment'
  'NSTextBlockMinimumHeight (5)':
    'prefix': 'NSTextBlockMinimumHeight'
    'body': 'NSTextBlockMinimumHeight'
  'NSTextBlockMinimumWidth (1)':
    'prefix': 'NSTextBlockMinimumWidth'
    'body': 'NSTextBlockMinimumWidth'
  'NSTextBlockPadding (-1)':
    'prefix': 'NSTextBlockPadding'
    'body': 'NSTextBlockPadding'
  'NSTextBlockPercentageValueType (1)':
    'prefix': 'NSTextBlockPercentageValueType'
    'body': 'NSTextBlockPercentageValueType'
  'NSTextBlockTopAlignment (0)':
    'prefix': 'NSTextBlockTopAlignment'
    'body': 'NSTextBlockTopAlignment'
  'NSTextBlockWidth (0)':
    'prefix': 'NSTextBlockWidth'
    'body': 'NSTextBlockWidth'
  'NSTextCellType (1)':
    'prefix': 'NSTextCellType'
    'body': 'NSTextCellType'
  'NSTextFieldAndStepperDatePickerStyle (0)':
    'prefix': 'NSTextFieldAndStepperDatePickerStyle'
    'body': 'NSTextFieldAndStepperDatePickerStyle'
  'NSTextFieldDatePickerStyle (2)':
    'prefix': 'NSTextFieldDatePickerStyle'
    'body': 'NSTextFieldDatePickerStyle'
  'NSTextFieldRoundedBezel (1)':
    'prefix': 'NSTextFieldRoundedBezel'
    'body': 'NSTextFieldRoundedBezel'
  'NSTextFieldSquareBezel (0)':
    'prefix': 'NSTextFieldSquareBezel'
    'body': 'NSTextFieldSquareBezel'
  'NSTextFinderActionHideFindInterface (11)':
    'prefix': 'NSTextFinderActionHideFindInterface'
    'body': 'NSTextFinderActionHideFindInterface'
  'NSTextFinderActionHideReplaceInterface (13)':
    'prefix': 'NSTextFinderActionHideReplaceInterface'
    'body': 'NSTextFinderActionHideReplaceInterface'
  'NSTextFinderActionNextMatch (2)':
    'prefix': 'NSTextFinderActionNextMatch'
    'body': 'NSTextFinderActionNextMatch'
  'NSTextFinderActionPreviousMatch (3)':
    'prefix': 'NSTextFinderActionPreviousMatch'
    'body': 'NSTextFinderActionPreviousMatch'
  'NSTextFinderActionReplace (5)':
    'prefix': 'NSTextFinderActionReplace'
    'body': 'NSTextFinderActionReplace'
  'NSTextFinderActionReplaceAll (4)':
    'prefix': 'NSTextFinderActionReplaceAll'
    'body': 'NSTextFinderActionReplaceAll'
  'NSTextFinderActionReplaceAllInSelection (8)':
    'prefix': 'NSTextFinderActionReplaceAllInSelection'
    'body': 'NSTextFinderActionReplaceAllInSelection'
  'NSTextFinderActionReplaceAndFind (6)':
    'prefix': 'NSTextFinderActionReplaceAndFind'
    'body': 'NSTextFinderActionReplaceAndFind'
  'NSTextFinderActionSelectAll (9)':
    'prefix': 'NSTextFinderActionSelectAll'
    'body': 'NSTextFinderActionSelectAll'
  'NSTextFinderActionSelectAllInSelection (10)':
    'prefix': 'NSTextFinderActionSelectAllInSelection'
    'body': 'NSTextFinderActionSelectAllInSelection'
  'NSTextFinderActionSetSearchString (7)':
    'prefix': 'NSTextFinderActionSetSearchString'
    'body': 'NSTextFinderActionSetSearchString'
  'NSTextFinderActionShowFindInterface (1)':
    'prefix': 'NSTextFinderActionShowFindInterface'
    'body': 'NSTextFinderActionShowFindInterface'
  'NSTextFinderActionShowReplaceInterface (12)':
    'prefix': 'NSTextFinderActionShowReplaceInterface'
    'body': 'NSTextFinderActionShowReplaceInterface'
  'NSTextFinderMatchingTypeContains (0)':
    'prefix': 'NSTextFinderMatchingTypeContains'
    'body': 'NSTextFinderMatchingTypeContains'
  'NSTextFinderMatchingTypeEndsWith (3)':
    'prefix': 'NSTextFinderMatchingTypeEndsWith'
    'body': 'NSTextFinderMatchingTypeEndsWith'
  'NSTextFinderMatchingTypeFullWord (2)':
    'prefix': 'NSTextFinderMatchingTypeFullWord'
    'body': 'NSTextFinderMatchingTypeFullWord'
  'NSTextFinderMatchingTypeStartsWith (1)':
    'prefix': 'NSTextFinderMatchingTypeStartsWith'
    'body': 'NSTextFinderMatchingTypeStartsWith'
  'NSTextLayoutOrientationHorizontal (0)':
    'prefix': 'NSTextLayoutOrientationHorizontal'
    'body': 'NSTextLayoutOrientationHorizontal'
  'NSTextLayoutOrientationVertical (1)':
    'prefix': 'NSTextLayoutOrientationVertical'
    'body': 'NSTextLayoutOrientationVertical'
  'NSTextListPrependEnclosingMarker (1)':
    'prefix': 'NSTextListPrependEnclosingMarker'
    'body': 'NSTextListPrependEnclosingMarker'
  'NSTextReadInapplicableDocumentTypeError (65806)':
    'prefix': 'NSTextReadInapplicableDocumentTypeError'
    'body': 'NSTextReadInapplicableDocumentTypeError'
  'NSTextReadWriteErrorMaximum (66303)':
    'prefix': 'NSTextReadWriteErrorMaximum'
    'body': 'NSTextReadWriteErrorMaximum'
  'NSTextReadWriteErrorMinimum (65792)':
    'prefix': 'NSTextReadWriteErrorMinimum'
    'body': 'NSTextReadWriteErrorMinimum'
  'NSTextStorageEditedAttributes (1)':
    'prefix': 'NSTextStorageEditedAttributes'
    'body': 'NSTextStorageEditedAttributes'
  'NSTextStorageEditedCharacters (2)':
    'prefix': 'NSTextStorageEditedCharacters'
    'body': 'NSTextStorageEditedCharacters'
  'NSTextTableAutomaticLayoutAlgorithm (0)':
    'prefix': 'NSTextTableAutomaticLayoutAlgorithm'
    'body': 'NSTextTableAutomaticLayoutAlgorithm'
  'NSTextTableFixedLayoutAlgorithm (1)':
    'prefix': 'NSTextTableFixedLayoutAlgorithm'
    'body': 'NSTextTableFixedLayoutAlgorithm'
  'NSTextWriteInapplicableDocumentTypeError (66062)':
    'prefix': 'NSTextWriteInapplicableDocumentTypeError'
    'body': 'NSTextWriteInapplicableDocumentTypeError'
  'NSTextWritingDirectionEmbedding (0)':
    'prefix': 'NSTextWritingDirectionEmbedding'
    'body': 'NSTextWritingDirectionEmbedding'
  'NSTextWritingDirectionOverride (2)':
    'prefix': 'NSTextWritingDirectionOverride'
    'body': 'NSTextWritingDirectionOverride'
  'NSTexturedBackgroundWindowMask (256)':
    'prefix': 'NSTexturedBackgroundWindowMask'
    'body': 'NSTexturedBackgroundWindowMask'
  'NSTexturedRoundedBezelStyle (11)':
    'prefix': 'NSTexturedRoundedBezelStyle'
    'body': 'NSTexturedRoundedBezelStyle'
  'NSTexturedSquareBezelStyle (8)':
    'prefix': 'NSTexturedSquareBezelStyle'
    'body': 'NSTexturedSquareBezelStyle'
  'NSThickSquareBezelStyle (3)':
    'prefix': 'NSThickSquareBezelStyle'
    'body': 'NSThickSquareBezelStyle'
  'NSThickerSquareBezelStyle (4)':
    'prefix': 'NSThickerSquareBezelStyle'
    'body': 'NSThickerSquareBezelStyle'
  'NSTickMarkAbove (1)':
    'prefix': 'NSTickMarkAbove'
    'body': 'NSTickMarkAbove'
  'NSTickMarkBelow (0)':
    'prefix': 'NSTickMarkBelow'
    'body': 'NSTickMarkBelow'
  'NSTickMarkLeft (1)':
    'prefix': 'NSTickMarkLeft'
    'body': 'NSTickMarkLeft'
  'NSTickMarkRight (0)':
    'prefix': 'NSTickMarkRight'
    'body': 'NSTickMarkRight'
  'NSTimeZoneDatePickerElementFlag (16)':
    'prefix': 'NSTimeZoneDatePickerElementFlag'
    'body': 'NSTimeZoneDatePickerElementFlag'
  'NSTitledWindowMask (1)':
    'prefix': 'NSTitledWindowMask'
    'body': 'NSTitledWindowMask'
  'NSToggleButton (2)':
    'prefix': 'NSToggleButton'
    'body': 'NSToggleButton'
  'NSToolbarDisplayModeDefault (0)':
    'prefix': 'NSToolbarDisplayModeDefault'
    'body': 'NSToolbarDisplayModeDefault'
  'NSToolbarDisplayModeIconAndLabel (1)':
    'prefix': 'NSToolbarDisplayModeIconAndLabel'
    'body': 'NSToolbarDisplayModeIconAndLabel'
  'NSToolbarDisplayModeIconOnly (2)':
    'prefix': 'NSToolbarDisplayModeIconOnly'
    'body': 'NSToolbarDisplayModeIconOnly'
  'NSToolbarDisplayModeLabelOnly (3)':
    'prefix': 'NSToolbarDisplayModeLabelOnly'
    'body': 'NSToolbarDisplayModeLabelOnly'
  'NSToolbarItemVisibilityPriorityHigh (1000)':
    'prefix': 'NSToolbarItemVisibilityPriorityHigh'
    'body': 'NSToolbarItemVisibilityPriorityHigh'
  'NSToolbarItemVisibilityPriorityLow (-1000)':
    'prefix': 'NSToolbarItemVisibilityPriorityLow'
    'body': 'NSToolbarItemVisibilityPriorityLow'
  'NSToolbarItemVisibilityPriorityStandard (0)':
    'prefix': 'NSToolbarItemVisibilityPriorityStandard'
    'body': 'NSToolbarItemVisibilityPriorityStandard'
  'NSToolbarItemVisibilityPriorityUser (2000)':
    'prefix': 'NSToolbarItemVisibilityPriorityUser'
    'body': 'NSToolbarItemVisibilityPriorityUser'
  'NSToolbarSizeModeDefault (0)':
    'prefix': 'NSToolbarSizeModeDefault'
    'body': 'NSToolbarSizeModeDefault'
  'NSToolbarSizeModeRegular (1)':
    'prefix': 'NSToolbarSizeModeRegular'
    'body': 'NSToolbarSizeModeRegular'
  'NSToolbarSizeModeSmall (2)':
    'prefix': 'NSToolbarSizeModeSmall'
    'body': 'NSToolbarSizeModeSmall'
  'NSTopTabsBezelBorder (0)':
    'prefix': 'NSTopTabsBezelBorder'
    'body': 'NSTopTabsBezelBorder'
  'NSTornOffMenuWindowLevel (3)':
    'prefix': 'NSTornOffMenuWindowLevel'
    'body': 'NSTornOffMenuWindowLevel'
  'NSTouchEventSubtype (3)':
    'prefix': 'NSTouchEventSubtype'
    'body': 'NSTouchEventSubtype'
  'NSTouchPhaseAny (4294967295)':
    'prefix': 'NSTouchPhaseAny'
    'body': 'NSTouchPhaseAny'
  'NSTouchPhaseBegan (1)':
    'prefix': 'NSTouchPhaseBegan'
    'body': 'NSTouchPhaseBegan'
  'NSTouchPhaseCancelled (16)':
    'prefix': 'NSTouchPhaseCancelled'
    'body': 'NSTouchPhaseCancelled'
  'NSTouchPhaseEnded (8)':
    'prefix': 'NSTouchPhaseEnded'
    'body': 'NSTouchPhaseEnded'
  'NSTouchPhaseMoved (2)':
    'prefix': 'NSTouchPhaseMoved'
    'body': 'NSTouchPhaseMoved'
  'NSTouchPhaseStationary (4)':
    'prefix': 'NSTouchPhaseStationary'
    'body': 'NSTouchPhaseStationary'
  'NSTouchPhaseTouching (7)':
    'prefix': 'NSTouchPhaseTouching'
    'body': 'NSTouchPhaseTouching'
  'NSTrackModeMatrix (3)':
    'prefix': 'NSTrackModeMatrix'
    'body': 'NSTrackModeMatrix'
  'NSTrackingActiveAlways (128)':
    'prefix': 'NSTrackingActiveAlways'
    'body': 'NSTrackingActiveAlways'
  'NSTrackingActiveInActiveApp (64)':
    'prefix': 'NSTrackingActiveInActiveApp'
    'body': 'NSTrackingActiveInActiveApp'
  'NSTrackingActiveInKeyWindow (32)':
    'prefix': 'NSTrackingActiveInKeyWindow'
    'body': 'NSTrackingActiveInKeyWindow'
  'NSTrackingActiveWhenFirstResponder (16)':
    'prefix': 'NSTrackingActiveWhenFirstResponder'
    'body': 'NSTrackingActiveWhenFirstResponder'
  'NSTrackingAssumeInside (256)':
    'prefix': 'NSTrackingAssumeInside'
    'body': 'NSTrackingAssumeInside'
  'NSTrackingCursorUpdate (4)':
    'prefix': 'NSTrackingCursorUpdate'
    'body': 'NSTrackingCursorUpdate'
  'NSTrackingEnabledDuringMouseDrag (1024)':
    'prefix': 'NSTrackingEnabledDuringMouseDrag'
    'body': 'NSTrackingEnabledDuringMouseDrag'
  'NSTrackingInVisibleRect (512)':
    'prefix': 'NSTrackingInVisibleRect'
    'body': 'NSTrackingInVisibleRect'
  'NSTrackingMouseEnteredAndExited (1)':
    'prefix': 'NSTrackingMouseEnteredAndExited'
    'body': 'NSTrackingMouseEnteredAndExited'
  'NSTrackingMouseMoved (2)':
    'prefix': 'NSTrackingMouseMoved'
    'body': 'NSTrackingMouseMoved'
  'NSTypesetterBehavior_10_2 (2)':
    'prefix': 'NSTypesetterBehavior_10_2'
    'body': 'NSTypesetterBehavior_10_2'
  'NSTypesetterBehavior_10_2_WithCompatibility (1)':
    'prefix': 'NSTypesetterBehavior_10_2_WithCompatibility'
    'body': 'NSTypesetterBehavior_10_2_WithCompatibility'
  'NSTypesetterBehavior_10_3 (3)':
    'prefix': 'NSTypesetterBehavior_10_3'
    'body': 'NSTypesetterBehavior_10_3'
  'NSTypesetterBehavior_10_4 (4)':
    'prefix': 'NSTypesetterBehavior_10_4'
    'body': 'NSTypesetterBehavior_10_4'
  'NSTypesetterContainerBreakAction (32)':
    'prefix': 'NSTypesetterContainerBreakAction'
    'body': 'NSTypesetterContainerBreakAction'
  'NSTypesetterHorizontalTabAction (4)':
    'prefix': 'NSTypesetterHorizontalTabAction'
    'body': 'NSTypesetterHorizontalTabAction'
  'NSTypesetterLatestBehavior (-1)':
    'prefix': 'NSTypesetterLatestBehavior'
    'body': 'NSTypesetterLatestBehavior'
  'NSTypesetterLineBreakAction (8)':
    'prefix': 'NSTypesetterLineBreakAction'
    'body': 'NSTypesetterLineBreakAction'
  'NSTypesetterOriginalBehavior (0)':
    'prefix': 'NSTypesetterOriginalBehavior'
    'body': 'NSTypesetterOriginalBehavior'
  'NSTypesetterParagraphBreakAction (16)':
    'prefix': 'NSTypesetterParagraphBreakAction'
    'body': 'NSTypesetterParagraphBreakAction'
  'NSTypesetterWhitespaceAction (2)':
    'prefix': 'NSTypesetterWhitespaceAction'
    'body': 'NSTypesetterWhitespaceAction'
  'NSTypesetterZeroAdvancementAction (1)':
    'prefix': 'NSTypesetterZeroAdvancementAction'
    'body': 'NSTypesetterZeroAdvancementAction'
  'NSUnboldFontMask (4)':
    'prefix': 'NSUnboldFontMask'
    'body': 'NSUnboldFontMask'
  'NSUnderlinePatternDash (512)':
    'prefix': 'NSUnderlinePatternDash'
    'body': 'NSUnderlinePatternDash'
  'NSUnderlinePatternDashDot (768)':
    'prefix': 'NSUnderlinePatternDashDot'
    'body': 'NSUnderlinePatternDashDot'
  'NSUnderlinePatternDashDotDot (1024)':
    'prefix': 'NSUnderlinePatternDashDotDot'
    'body': 'NSUnderlinePatternDashDotDot'
  'NSUnderlinePatternDot (256)':
    'prefix': 'NSUnderlinePatternDot'
    'body': 'NSUnderlinePatternDot'
  'NSUnderlinePatternSolid (0)':
    'prefix': 'NSUnderlinePatternSolid'
    'body': 'NSUnderlinePatternSolid'
  'NSUnderlineStyleDouble (9)':
    'prefix': 'NSUnderlineStyleDouble'
    'body': 'NSUnderlineStyleDouble'
  'NSUnderlineStyleNone (0)':
    'prefix': 'NSUnderlineStyleNone'
    'body': 'NSUnderlineStyleNone'
  'NSUnderlineStyleSingle (1)':
    'prefix': 'NSUnderlineStyleSingle'
    'body': 'NSUnderlineStyleSingle'
  'NSUnderlineStyleThick (2)':
    'prefix': 'NSUnderlineStyleThick'
    'body': 'NSUnderlineStyleThick'
  'NSUndoFunctionKey (63299)':
    'prefix': 'NSUndoFunctionKey'
    'body': 'NSUndoFunctionKey'
  'NSUnifiedTitleAndToolbarWindowMask (4096)':
    'prefix': 'NSUnifiedTitleAndToolbarWindowMask'
    'body': 'NSUnifiedTitleAndToolbarWindowMask'
  'NSUnitalicFontMask (16777216)':
    'prefix': 'NSUnitalicFontMask'
    'body': 'NSUnitalicFontMask'
  'NSUnknownColorSpaceModel (-1)':
    'prefix': 'NSUnknownColorSpaceModel'
    'body': 'NSUnknownColorSpaceModel'
  'NSUnknownPageOrder (2)':
    'prefix': 'NSUnknownPageOrder'
    'body': 'NSUnknownPageOrder'
  'NSUnknownPointingDevice (0)':
    'prefix': 'NSUnknownPointingDevice'
    'body': 'NSUnknownPointingDevice'
  'NSUnscaledWindowMask (2048)':
    'prefix': 'NSUnscaledWindowMask'
    'body': 'NSUnscaledWindowMask'
  'NSUpArrowFunctionKey (63232)':
    'prefix': 'NSUpArrowFunctionKey'
    'body': 'NSUpArrowFunctionKey'
  'NSUpTextMovement (21)':
    'prefix': 'NSUpTextMovement'
    'body': 'NSUpTextMovement'
  'NSUpdateWindowsRunLoopOrdering (500000)':
    'prefix': 'NSUpdateWindowsRunLoopOrdering'
    'body': 'NSUpdateWindowsRunLoopOrdering'
  'NSUserFunctionKey (63286)':
    'prefix': 'NSUserFunctionKey'
    'body': 'NSUserFunctionKey'
  'NSUserInterfaceLayoutDirectionLeftToRight (0)':
    'prefix': 'NSUserInterfaceLayoutDirectionLeftToRight'
    'body': 'NSUserInterfaceLayoutDirectionLeftToRight'
  'NSUserInterfaceLayoutDirectionRightToLeft (1)':
    'prefix': 'NSUserInterfaceLayoutDirectionRightToLeft'
    'body': 'NSUserInterfaceLayoutDirectionRightToLeft'
  'NSUserInterfaceLayoutOrientationHorizontal (0)':
    'prefix': 'NSUserInterfaceLayoutOrientationHorizontal'
    'body': 'NSUserInterfaceLayoutOrientationHorizontal'
  'NSUserInterfaceLayoutOrientationVertical (1)':
    'prefix': 'NSUserInterfaceLayoutOrientationVertical'
    'body': 'NSUserInterfaceLayoutOrientationVertical'
  'NSUtilityWindowMask (16)':
    'prefix': 'NSUtilityWindowMask'
    'body': 'NSUtilityWindowMask'
  'NSVariableStatusItemLength (-1)':
    'prefix': 'NSVariableStatusItemLength'
    'body': 'NSVariableStatusItemLength'
  'NSVerticalRuler (1)':
    'prefix': 'NSVerticalRuler'
    'body': 'NSVerticalRuler'
  'NSViaPanelFontAction (1)':
    'prefix': 'NSViaPanelFontAction'
    'body': 'NSViaPanelFontAction'
  'NSViewHeightSizable (16)':
    'prefix': 'NSViewHeightSizable'
    'body': 'NSViewHeightSizable'
  'NSViewLayerContentsPlacementBottom (8)':
    'prefix': 'NSViewLayerContentsPlacementBottom'
    'body': 'NSViewLayerContentsPlacementBottom'
  'NSViewLayerContentsPlacementBottomLeft (9)':
    'prefix': 'NSViewLayerContentsPlacementBottomLeft'
    'body': 'NSViewLayerContentsPlacementBottomLeft'
  'NSViewLayerContentsPlacementBottomRight (7)':
    'prefix': 'NSViewLayerContentsPlacementBottomRight'
    'body': 'NSViewLayerContentsPlacementBottomRight'
  'NSViewLayerContentsPlacementCenter (3)':
    'prefix': 'NSViewLayerContentsPlacementCenter'
    'body': 'NSViewLayerContentsPlacementCenter'
  'NSViewLayerContentsPlacementLeft (10)':
    'prefix': 'NSViewLayerContentsPlacementLeft'
    'body': 'NSViewLayerContentsPlacementLeft'
  'NSViewLayerContentsPlacementRight (6)':
    'prefix': 'NSViewLayerContentsPlacementRight'
    'body': 'NSViewLayerContentsPlacementRight'
  'NSViewLayerContentsPlacementScaleAxesIndependently (0)':
    'prefix': 'NSViewLayerContentsPlacementScaleAxesIndependently'
    'body': 'NSViewLayerContentsPlacementScaleAxesIndependently'
  'NSViewLayerContentsPlacementScaleProportionallyToFill (2)':
    'prefix': 'NSViewLayerContentsPlacementScaleProportionallyToFill'
    'body': 'NSViewLayerContentsPlacementScaleProportionallyToFill'
  'NSViewLayerContentsPlacementScaleProportionallyToFit (1)':
    'prefix': 'NSViewLayerContentsPlacementScaleProportionallyToFit'
    'body': 'NSViewLayerContentsPlacementScaleProportionallyToFit'
  'NSViewLayerContentsPlacementTop (4)':
    'prefix': 'NSViewLayerContentsPlacementTop'
    'body': 'NSViewLayerContentsPlacementTop'
  'NSViewLayerContentsPlacementTopLeft (11)':
    'prefix': 'NSViewLayerContentsPlacementTopLeft'
    'body': 'NSViewLayerContentsPlacementTopLeft'
  'NSViewLayerContentsPlacementTopRight (5)':
    'prefix': 'NSViewLayerContentsPlacementTopRight'
    'body': 'NSViewLayerContentsPlacementTopRight'
  'NSViewLayerContentsRedrawBeforeViewResize (3)':
    'prefix': 'NSViewLayerContentsRedrawBeforeViewResize'
    'body': 'NSViewLayerContentsRedrawBeforeViewResize'
  'NSViewLayerContentsRedrawCrossfade (4)':
    'prefix': 'NSViewLayerContentsRedrawCrossfade'
    'body': 'NSViewLayerContentsRedrawCrossfade'
  'NSViewLayerContentsRedrawDuringViewResize (2)':
    'prefix': 'NSViewLayerContentsRedrawDuringViewResize'
    'body': 'NSViewLayerContentsRedrawDuringViewResize'
  'NSViewLayerContentsRedrawNever (0)':
    'prefix': 'NSViewLayerContentsRedrawNever'
    'body': 'NSViewLayerContentsRedrawNever'
  'NSViewLayerContentsRedrawOnSetNeedsDisplay (1)':
    'prefix': 'NSViewLayerContentsRedrawOnSetNeedsDisplay'
    'body': 'NSViewLayerContentsRedrawOnSetNeedsDisplay'
  'NSViewMaxXMargin (4)':
    'prefix': 'NSViewMaxXMargin'
    'body': 'NSViewMaxXMargin'
  'NSViewMaxYMargin (32)':
    'prefix': 'NSViewMaxYMargin'
    'body': 'NSViewMaxYMargin'
  'NSViewMinXMargin (1)':
    'prefix': 'NSViewMinXMargin'
    'body': 'NSViewMinXMargin'
  'NSViewMinYMargin (8)':
    'prefix': 'NSViewMinYMargin'
    'body': 'NSViewMinYMargin'
  'NSViewNotSizable (0)':
    'prefix': 'NSViewNotSizable'
    'body': 'NSViewNotSizable'
  'NSViewWidthSizable (2)':
    'prefix': 'NSViewWidthSizable'
    'body': 'NSViewWidthSizable'
  'NSWantsBidiLevels (4)':
    'prefix': 'NSWantsBidiLevels'
    'body': 'NSWantsBidiLevels'
  'NSWarningAlertStyle (0)':
    'prefix': 'NSWarningAlertStyle'
    'body': 'NSWarningAlertStyle'
  'NSWheelModeColorPanel (6)':
    'prefix': 'NSWheelModeColorPanel'
    'body': 'NSWheelModeColorPanel'
  'NSWindowAbove (1)':
    'prefix': 'NSWindowAbove'
    'body': 'NSWindowAbove'
  'NSWindowAnimationBehaviorAlertPanel (5)':
    'prefix': 'NSWindowAnimationBehaviorAlertPanel'
    'body': 'NSWindowAnimationBehaviorAlertPanel'
  'NSWindowAnimationBehaviorDefault (0)':
    'prefix': 'NSWindowAnimationBehaviorDefault'
    'body': 'NSWindowAnimationBehaviorDefault'
  'NSWindowAnimationBehaviorDocumentWindow (3)':
    'prefix': 'NSWindowAnimationBehaviorDocumentWindow'
    'body': 'NSWindowAnimationBehaviorDocumentWindow'
  'NSWindowAnimationBehaviorNone (2)':
    'prefix': 'NSWindowAnimationBehaviorNone'
    'body': 'NSWindowAnimationBehaviorNone'
  'NSWindowAnimationBehaviorUtilityWindow (4)':
    'prefix': 'NSWindowAnimationBehaviorUtilityWindow'
    'body': 'NSWindowAnimationBehaviorUtilityWindow'
  'NSWindowBackingLocationDefault (0)':
    'prefix': 'NSWindowBackingLocationDefault'
    'body': 'NSWindowBackingLocationDefault'
  'NSWindowBackingLocationMainMemory (2)':
    'prefix': 'NSWindowBackingLocationMainMemory'
    'body': 'NSWindowBackingLocationMainMemory'
  'NSWindowBackingLocationVideoMemory (1)':
    'prefix': 'NSWindowBackingLocationVideoMemory'
    'body': 'NSWindowBackingLocationVideoMemory'
  'NSWindowBelow (-1)':
    'prefix': 'NSWindowBelow'
    'body': 'NSWindowBelow'
  'NSWindowCloseButton (0)':
    'prefix': 'NSWindowCloseButton'
    'body': 'NSWindowCloseButton'
  'NSWindowCollectionBehaviorCanJoinAllSpaces (1)':
    'prefix': 'NSWindowCollectionBehaviorCanJoinAllSpaces'
    'body': 'NSWindowCollectionBehaviorCanJoinAllSpaces'
  'NSWindowCollectionBehaviorDefault (0)':
    'prefix': 'NSWindowCollectionBehaviorDefault'
    'body': 'NSWindowCollectionBehaviorDefault'
  'NSWindowCollectionBehaviorFullScreenAuxiliary (256)':
    'prefix': 'NSWindowCollectionBehaviorFullScreenAuxiliary'
    'body': 'NSWindowCollectionBehaviorFullScreenAuxiliary'
  'NSWindowCollectionBehaviorFullScreenPrimary (128)':
    'prefix': 'NSWindowCollectionBehaviorFullScreenPrimary'
    'body': 'NSWindowCollectionBehaviorFullScreenPrimary'
  'NSWindowCollectionBehaviorIgnoresCycle (64)':
    'prefix': 'NSWindowCollectionBehaviorIgnoresCycle'
    'body': 'NSWindowCollectionBehaviorIgnoresCycle'
  'NSWindowCollectionBehaviorManaged (4)':
    'prefix': 'NSWindowCollectionBehaviorManaged'
    'body': 'NSWindowCollectionBehaviorManaged'
  'NSWindowCollectionBehaviorMoveToActiveSpace (2)':
    'prefix': 'NSWindowCollectionBehaviorMoveToActiveSpace'
    'body': 'NSWindowCollectionBehaviorMoveToActiveSpace'
  'NSWindowCollectionBehaviorParticipatesInCycle (32)':
    'prefix': 'NSWindowCollectionBehaviorParticipatesInCycle'
    'body': 'NSWindowCollectionBehaviorParticipatesInCycle'
  'NSWindowCollectionBehaviorStationary (16)':
    'prefix': 'NSWindowCollectionBehaviorStationary'
    'body': 'NSWindowCollectionBehaviorStationary'
  'NSWindowCollectionBehaviorTransient (8)':
    'prefix': 'NSWindowCollectionBehaviorTransient'
    'body': 'NSWindowCollectionBehaviorTransient'
  'NSWindowDepthOnehundredtwentyeightBitRGB (544)':
    'prefix': 'NSWindowDepthOnehundredtwentyeightBitRGB'
    'body': 'NSWindowDepthOnehundredtwentyeightBitRGB'
  'NSWindowDepthSixtyfourBitRGB (528)':
    'prefix': 'NSWindowDepthSixtyfourBitRGB'
    'body': 'NSWindowDepthSixtyfourBitRGB'
  'NSWindowDepthTwentyfourBitRGB (520)':
    'prefix': 'NSWindowDepthTwentyfourBitRGB'
    'body': 'NSWindowDepthTwentyfourBitRGB'
  'NSWindowDocumentIconButton (4)':
    'prefix': 'NSWindowDocumentIconButton'
    'body': 'NSWindowDocumentIconButton'
  'NSWindowDocumentVersionsButton (6)':
    'prefix': 'NSWindowDocumentVersionsButton'
    'body': 'NSWindowDocumentVersionsButton'
  'NSWindowExposedEventType (0)':
    'prefix': 'NSWindowExposedEventType'
    'body': 'NSWindowExposedEventType'
  'NSWindowFullScreenButton (7)':
    'prefix': 'NSWindowFullScreenButton'
    'body': 'NSWindowFullScreenButton'
  'NSWindowMiniaturizeButton (1)':
    'prefix': 'NSWindowMiniaturizeButton'
    'body': 'NSWindowMiniaturizeButton'
  'NSWindowMovedEventType (4)':
    'prefix': 'NSWindowMovedEventType'
    'body': 'NSWindowMovedEventType'
  'NSWindowNumberListAllApplications (1)':
    'prefix': 'NSWindowNumberListAllApplications'
    'body': 'NSWindowNumberListAllApplications'
  'NSWindowNumberListAllSpaces (16)':
    'prefix': 'NSWindowNumberListAllSpaces'
    'body': 'NSWindowNumberListAllSpaces'
  'NSWindowOcclusionStateVisible (2)':
    'prefix': 'NSWindowOcclusionStateVisible'
    'body': 'NSWindowOcclusionStateVisible'
  'NSWindowOut (0)':
    'prefix': 'NSWindowOut'
    'body': 'NSWindowOut'
  'NSWindowSharingNone (0)':
    'prefix': 'NSWindowSharingNone'
    'body': 'NSWindowSharingNone'
  'NSWindowSharingReadOnly (1)':
    'prefix': 'NSWindowSharingReadOnly'
    'body': 'NSWindowSharingReadOnly'
  'NSWindowSharingReadWrite (2)':
    'prefix': 'NSWindowSharingReadWrite'
    'body': 'NSWindowSharingReadWrite'
  'NSWindowToolbarButton (3)':
    'prefix': 'NSWindowToolbarButton'
    'body': 'NSWindowToolbarButton'
  'NSWindowZoomButton (2)':
    'prefix': 'NSWindowZoomButton'
    'body': 'NSWindowZoomButton'
  'NSWindows95InterfaceStyle (2)':
    'prefix': 'NSWindows95InterfaceStyle'
    'body': 'NSWindows95InterfaceStyle'
  'NSWorkspaceLaunchAllowingClassicStartup (131072)':
    'prefix': 'NSWorkspaceLaunchAllowingClassicStartup'
    'body': 'NSWorkspaceLaunchAllowingClassicStartup'
  'NSWorkspaceLaunchAndHide (1048576)':
    'prefix': 'NSWorkspaceLaunchAndHide'
    'body': 'NSWorkspaceLaunchAndHide'
  'NSWorkspaceLaunchAndHideOthers (2097152)':
    'prefix': 'NSWorkspaceLaunchAndHideOthers'
    'body': 'NSWorkspaceLaunchAndHideOthers'
  'NSWorkspaceLaunchAndPrint (2)':
    'prefix': 'NSWorkspaceLaunchAndPrint'
    'body': 'NSWorkspaceLaunchAndPrint'
  'NSWorkspaceLaunchAsync (65536)':
    'prefix': 'NSWorkspaceLaunchAsync'
    'body': 'NSWorkspaceLaunchAsync'
  'NSWorkspaceLaunchDefault (196608)':
    'prefix': 'NSWorkspaceLaunchDefault'
    'body': 'NSWorkspaceLaunchDefault'
  'NSWorkspaceLaunchInhibitingBackgroundOnly (128)':
    'prefix': 'NSWorkspaceLaunchInhibitingBackgroundOnly'
    'body': 'NSWorkspaceLaunchInhibitingBackgroundOnly'
  'NSWorkspaceLaunchNewInstance (524288)':
    'prefix': 'NSWorkspaceLaunchNewInstance'
    'body': 'NSWorkspaceLaunchNewInstance'
  'NSWorkspaceLaunchPreferringClassic (262144)':
    'prefix': 'NSWorkspaceLaunchPreferringClassic'
    'body': 'NSWorkspaceLaunchPreferringClassic'
  'NSWorkspaceLaunchWithErrorPresentation (64)':
    'prefix': 'NSWorkspaceLaunchWithErrorPresentation'
    'body': 'NSWorkspaceLaunchWithErrorPresentation'
  'NSWorkspaceLaunchWithoutActivation (512)':
    'prefix': 'NSWorkspaceLaunchWithoutActivation'
    'body': 'NSWorkspaceLaunchWithoutActivation'
  'NSWorkspaceLaunchWithoutAddingToRecents (256)':
    'prefix': 'NSWorkspaceLaunchWithoutAddingToRecents'
    'body': 'NSWorkspaceLaunchWithoutAddingToRecents'
  'NSWritingDirectionLeftToRight (0)':
    'prefix': 'NSWritingDirectionLeftToRight'
    'body': 'NSWritingDirectionLeftToRight'
  'NSWritingDirectionNatural (-1)':
    'prefix': 'NSWritingDirectionNatural'
    'body': 'NSWritingDirectionNatural'
  'NSWritingDirectionRightToLeft (1)':
    'prefix': 'NSWritingDirectionRightToLeft'
    'body': 'NSWritingDirectionRightToLeft'
  'NSYearMonthDatePickerElementFlag (192)':
    'prefix': 'NSYearMonthDatePickerElementFlag'
    'body': 'NSYearMonthDatePickerElementFlag'
  'NSYearMonthDayDatePickerElementFlag (224)':
    'prefix': 'NSYearMonthDayDatePickerElementFlag'
    'body': 'NSYearMonthDayDatePickerElementFlag'
  'NSAccessibilityActionDescription':
    'prefix': 'NSAccessibilityActionDescription'
    'body': 'NSAccessibilityActionDescription(${1:NSString* action})'
  'NSAccessibilityPostNotification':
    'prefix': 'NSAccessibilityPostNotification'
    'body': 'NSAccessibilityPostNotification(${1:id element}, ${2:NSString* notification})'
  'NSAccessibilityPostNotificationWithUserInfo':
    'prefix': 'NSAccessibilityPostNotificationWithUserInfo'
    'body': 'NSAccessibilityPostNotificationWithUserInfo(${1:id element}, ${2:NSString* notification}, ${3:NSDictionary* userInfo})'
  'NSAccessibilityRaiseBadArgumentException':
    'prefix': 'NSAccessibilityRaiseBadArgumentException'
    'body': 'NSAccessibilityRaiseBadArgumentException(${1:id element}, ${2:NSString* attribute}, ${3:id value})'
  'NSAccessibilityRoleDescription':
    'prefix': 'NSAccessibilityRoleDescription'
    'body': 'NSAccessibilityRoleDescription(${1:NSString* role}, ${2:NSString* subrole})'
  'NSAccessibilityRoleDescriptionForUIElement':
    'prefix': 'NSAccessibilityRoleDescriptionForUIElement'
    'body': 'NSAccessibilityRoleDescriptionForUIElement(${1:id element})'
  'NSAccessibilitySetMayContainProtectedContent':
    'prefix': 'NSAccessibilitySetMayContainProtectedContent'
    'body': 'NSAccessibilitySetMayContainProtectedContent(${1:BOOL flag})'
  'NSAccessibilityUnignoredAncestor':
    'prefix': 'NSAccessibilityUnignoredAncestor'
    'body': 'NSAccessibilityUnignoredAncestor(${1:id element})'
  'NSAccessibilityUnignoredChildren':
    'prefix': 'NSAccessibilityUnignoredChildren'
    'body': 'NSAccessibilityUnignoredChildren(${1:NSArray* originalChildren})'
  'NSAccessibilityUnignoredChildrenForOnlyChild':
    'prefix': 'NSAccessibilityUnignoredChildrenForOnlyChild'
    'body': 'NSAccessibilityUnignoredChildrenForOnlyChild(${1:id originalChild})'
  'NSAccessibilityUnignoredDescendant':
    'prefix': 'NSAccessibilityUnignoredDescendant'
    'body': 'NSAccessibilityUnignoredDescendant(${1:id element})'
  'NSApplicationLoad':
    'prefix': 'NSApplicationLoad'
    'body': 'NSApplicationLoad()'
  'NSApplicationMain':
    'prefix': 'NSApplicationMain'
    'body': 'NSApplicationMain(${1:int argc}, ${2:char** argv})'
  'NSAvailableWindowDepths':
    'prefix': 'NSAvailableWindowDepths'
    'body': 'NSAvailableWindowDepths()'
  'NSBeep':
    'prefix': 'NSBeep'
    'body': 'NSBeep()'
  'NSBeginAlertSheet':
    'prefix': 'NSBeginAlertSheet'
    'body': 'NSBeginAlertSheet(${1:NSString* title}, ${2:NSString* defaultButton}, ${3:NSString* alternateButton}, ${4:NSString* otherButton}, ${5:NSWindow* docWindow}, ${6:id modalDelegate}, ${7:SEL didEndSelector}, ${8:SEL didDismissSelector}, ${9:void* contextInfo}, ${10:NSString* msgFormat})'
  'NSBeginCriticalAlertSheet':
    'prefix': 'NSBeginCriticalAlertSheet'
    'body': 'NSBeginCriticalAlertSheet(${1:NSString* title}, ${2:NSString* defaultButton}, ${3:NSString* alternateButton}, ${4:NSString* otherButton}, ${5:NSWindow* docWindow}, ${6:id modalDelegate}, ${7:SEL didEndSelector}, ${8:SEL didDismissSelector}, ${9:void* contextInfo}, ${10:NSString* msgFormat})'
  'NSBeginInformationalAlertSheet':
    'prefix': 'NSBeginInformationalAlertSheet'
    'body': 'NSBeginInformationalAlertSheet(${1:NSString* title}, ${2:NSString* defaultButton}, ${3:NSString* alternateButton}, ${4:NSString* otherButton}, ${5:NSWindow* docWindow}, ${6:id modalDelegate}, ${7:SEL didEndSelector}, ${8:SEL didDismissSelector}, ${9:void* contextInfo}, ${10:NSString* msgFormat})'
  'NSBestDepth':
    'prefix': 'NSBestDepth'
    'body': 'NSBestDepth(${1:NSString* colorSpace}, ${2:NSInteger bps}, ${3:NSInteger bpp}, ${4:BOOL planar}, ${5:BOOL* exactMatch})'
  'NSBitsPerPixelFromDepth':
    'prefix': 'NSBitsPerPixelFromDepth'
    'body': 'NSBitsPerPixelFromDepth(${1:NSWindowDepth depth})'
  'NSBitsPerSampleFromDepth':
    'prefix': 'NSBitsPerSampleFromDepth'
    'body': 'NSBitsPerSampleFromDepth(${1:NSWindowDepth depth})'
  'NSColorSpaceFromDepth':
    'prefix': 'NSColorSpaceFromDepth'
    'body': 'NSColorSpaceFromDepth(${1:NSWindowDepth depth})'
  'NSConvertGlyphsToPackedGlyphs':
    'prefix': 'NSConvertGlyphsToPackedGlyphs'
    'body': 'NSConvertGlyphsToPackedGlyphs(${1:NSGlyph* glBuf}, ${2:NSInteger count}, ${3:NSMultibyteGlyphPacking packing}, ${4:char* packedGlyphs})'
  'NSCopyBits':
    'prefix': 'NSCopyBits'
    'body': 'NSCopyBits(${1:NSInteger srcGState}, ${2:NSRect srcRect}, ${3:NSPoint destPoint})'
  'NSCountWindows':
    'prefix': 'NSCountWindows'
    'body': 'NSCountWindows(${1:NSInteger* count})'
  'NSCountWindowsForContext':
    'prefix': 'NSCountWindowsForContext'
    'body': 'NSCountWindowsForContext(${1:NSInteger context}, ${2:NSInteger* count})'
  'NSCreateFileContentsPboardType':
    'prefix': 'NSCreateFileContentsPboardType'
    'body': 'NSCreateFileContentsPboardType(${1:NSString* fileType})'
  'NSCreateFilenamePboardType':
    'prefix': 'NSCreateFilenamePboardType'
    'body': 'NSCreateFilenamePboardType(${1:NSString* fileType})'
  'NSDisableScreenUpdates':
    'prefix': 'NSDisableScreenUpdates'
    'body': 'NSDisableScreenUpdates()'
  'NSDottedFrameRect':
    'prefix': 'NSDottedFrameRect'
    'body': 'NSDottedFrameRect(${1:NSRect aRect})'
  'NSDrawBitmap':
    'prefix': 'NSDrawBitmap'
    'body': 'NSDrawBitmap(${1:NSRect rect}, ${2:NSInteger width}, ${3:NSInteger height}, ${4:NSInteger bps}, ${5:NSInteger spp}, ${6:NSInteger bpp}, ${7:NSInteger bpr}, ${8:BOOL isPlanar}, ${9:BOOL hasAlpha}, ${10:NSString* colorSpaceName}, ${11:unsigned char ** data})'
  'NSDrawButton':
    'prefix': 'NSDrawButton'
    'body': 'NSDrawButton(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawColorTiledRects':
    'prefix': 'NSDrawColorTiledRects'
    'body': 'NSDrawColorTiledRects(${1:NSRect boundsRect}, ${2:NSRect clipRect}, ${3:NSRectEdge* sides}, ${4:NSColor** colors}, ${5:NSInteger count})'
  'NSDrawDarkBezel':
    'prefix': 'NSDrawDarkBezel'
    'body': 'NSDrawDarkBezel(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawGrayBezel':
    'prefix': 'NSDrawGrayBezel'
    'body': 'NSDrawGrayBezel(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawGroove':
    'prefix': 'NSDrawGroove'
    'body': 'NSDrawGroove(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawLightBezel':
    'prefix': 'NSDrawLightBezel'
    'body': 'NSDrawLightBezel(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawNinePartImage':
    'prefix': 'NSDrawNinePartImage'
    'body': 'NSDrawNinePartImage(${1:NSRect frame}, ${2:NSImage* topLeftCorner}, ${3:NSImage* topEdgeFill}, ${4:NSImage* topRightCorner}, ${5:NSImage* leftEdgeFill}, ${6:NSImage* centerFill}, ${7:NSImage* rightEdgeFill}, ${8:NSImage* bottomLeftCorner}, ${9:NSImage* bottomEdgeFill}, ${10:NSImage* bottomRightCorner}, ${11:NSCompositingOperation op}, ${12:CGFloat alphaFraction}, ${13:BOOL flipped})'
  'NSDrawThreePartImage':
    'prefix': 'NSDrawThreePartImage'
    'body': 'NSDrawThreePartImage(${1:NSRect frame}, ${2:NSImage* startCap}, ${3:NSImage* centerFill}, ${4:NSImage* endCap}, ${5:BOOL vertical}, ${6:NSCompositingOperation op}, ${7:CGFloat alphaFraction}, ${8:BOOL flipped})'
  'NSDrawTiledRects':
    'prefix': 'NSDrawTiledRects'
    'body': 'NSDrawTiledRects(${1:NSRect boundsRect}, ${2:NSRect clipRect}, ${3:NSRectEdge* sides}, ${4:CGFloat* grays}, ${5:NSInteger count})'
  'NSDrawWhiteBezel':
    'prefix': 'NSDrawWhiteBezel'
    'body': 'NSDrawWhiteBezel(${1:NSRect aRect}, ${2:NSRect clipRect})'
  'NSDrawWindowBackground':
    'prefix': 'NSDrawWindowBackground'
    'body': 'NSDrawWindowBackground(${1:NSRect aRect})'
  'NSEdgeInsetsMake':
    'prefix': 'NSEdgeInsetsMake'
    'body': 'NSEdgeInsetsMake(${1:CGFloat top}, ${2:CGFloat left}, ${3:CGFloat bottom}, ${4:CGFloat right})'
  'NSEnableScreenUpdates':
    'prefix': 'NSEnableScreenUpdates'
    'body': 'NSEnableScreenUpdates()'
  'NSEraseRect':
    'prefix': 'NSEraseRect'
    'body': 'NSEraseRect(${1:NSRect aRect})'
  'NSEventMaskFromType':
    'prefix': 'NSEventMaskFromType'
    'body': 'NSEventMaskFromType(${1:NSEventType type})'
  'NSFrameRect':
    'prefix': 'NSFrameRect'
    'body': 'NSFrameRect(${1:NSRect aRect})'
  'NSFrameRectWithWidth':
    'prefix': 'NSFrameRectWithWidth'
    'body': 'NSFrameRectWithWidth(${1:NSRect aRect}, ${2:CGFloat frameWidth})'
  'NSFrameRectWithWidthUsingOperation':
    'prefix': 'NSFrameRectWithWidthUsingOperation'
    'body': 'NSFrameRectWithWidthUsingOperation(${1:NSRect aRect}, ${2:CGFloat frameWidth}, ${3:NSCompositingOperation op})'
  'NSGetAlertPanel':
    'prefix': 'NSGetAlertPanel'
    'body': 'NSGetAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSGetCriticalAlertPanel':
    'prefix': 'NSGetCriticalAlertPanel'
    'body': 'NSGetCriticalAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSGetFileType':
    'prefix': 'NSGetFileType'
    'body': 'NSGetFileType(${1:NSString* pboardType})'
  'NSGetFileTypes':
    'prefix': 'NSGetFileTypes'
    'body': 'NSGetFileTypes(${1:NSArray* pboardTypes})'
  'NSGetInformationalAlertPanel':
    'prefix': 'NSGetInformationalAlertPanel'
    'body': 'NSGetInformationalAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSGetWindowServerMemory':
    'prefix': 'NSGetWindowServerMemory'
    'body': 'NSGetWindowServerMemory(${1:NSInteger context}, ${2:NSInteger* virtualMemory}, ${3:NSInteger* windowBackingMemory}, ${4:NSString** windowDumpString})'
  'NSHighlightRect':
    'prefix': 'NSHighlightRect'
    'body': 'NSHighlightRect(${1:NSRect aRect})'
  'NSInterfaceStyleForKey':
    'prefix': 'NSInterfaceStyleForKey'
    'body': 'NSInterfaceStyleForKey(${1:NSString* key}, ${2:NSResponder* responder})'
  'NSIsControllerMarker':
    'prefix': 'NSIsControllerMarker'
    'body': 'NSIsControllerMarker(${1:id object})'
  'NSNumberOfColorComponents':
    'prefix': 'NSNumberOfColorComponents'
    'body': 'NSNumberOfColorComponents(${1:NSString* colorSpaceName})'
  'NSOpenGLGetOption':
    'prefix': 'NSOpenGLGetOption'
    'body': 'NSOpenGLGetOption(${1:NSOpenGLGlobalOption pname}, ${2:GLint* param})'
  'NSOpenGLGetVersion':
    'prefix': 'NSOpenGLGetVersion'
    'body': 'NSOpenGLGetVersion(${1:GLint* major}, ${2:GLint* minor})'
  'NSOpenGLSetOption':
    'prefix': 'NSOpenGLSetOption'
    'body': 'NSOpenGLSetOption(${1:NSOpenGLGlobalOption pname}, ${2:GLint param})'
  'NSPerformService':
    'prefix': 'NSPerformService'
    'body': 'NSPerformService(${1:NSString* itemName}, ${2:NSPasteboard* pboard})'
  'NSPlanarFromDepth':
    'prefix': 'NSPlanarFromDepth'
    'body': 'NSPlanarFromDepth(${1:NSWindowDepth depth})'
  'NSReadPixel':
    'prefix': 'NSReadPixel'
    'body': 'NSReadPixel(${1:NSPoint passedPoint})'
  'NSRectClip':
    'prefix': 'NSRectClip'
    'body': 'NSRectClip(${1:NSRect aRect})'
  'NSRectClipList':
    'prefix': 'NSRectClipList'
    'body': 'NSRectClipList(${1:NSRect* rects}, ${2:NSInteger count})'
  'NSRectFill':
    'prefix': 'NSRectFill'
    'body': 'NSRectFill(${1:NSRect aRect})'
  'NSRectFillList':
    'prefix': 'NSRectFillList'
    'body': 'NSRectFillList(${1:NSRect* rects}, ${2:NSInteger count})'
  'NSRectFillListUsingOperation':
    'prefix': 'NSRectFillListUsingOperation'
    'body': 'NSRectFillListUsingOperation(${1:NSRect* rects}, ${2:NSInteger count}, ${3:NSCompositingOperation op})'
  'NSRectFillListWithColors':
    'prefix': 'NSRectFillListWithColors'
    'body': 'NSRectFillListWithColors(${1:NSRect* rects}, ${2:NSColor ** colors}, ${3:NSInteger num})'
  'NSRectFillListWithColorsUsingOperation':
    'prefix': 'NSRectFillListWithColorsUsingOperation'
    'body': 'NSRectFillListWithColorsUsingOperation(${1:NSRect* rects}, ${2:NSColor ** colors}, ${3:NSInteger num}, ${4:NSCompositingOperation op})'
  'NSRectFillListWithGrays':
    'prefix': 'NSRectFillListWithGrays'
    'body': 'NSRectFillListWithGrays(${1:NSRect* rects}, ${2:CGFloat* grays}, ${3:NSInteger num})'
  'NSRectFillUsingOperation':
    'prefix': 'NSRectFillUsingOperation'
    'body': 'NSRectFillUsingOperation(${1:NSRect aRect}, ${2:NSCompositingOperation op})'
  'NSRegisterServicesProvider':
    'prefix': 'NSRegisterServicesProvider'
    'body': 'NSRegisterServicesProvider(${1:id provider}, ${2:NSString* name})'
  'NSReleaseAlertPanel':
    'prefix': 'NSReleaseAlertPanel'
    'body': 'NSReleaseAlertPanel(${1:id panel})'
  'NSRunAlertPanel':
    'prefix': 'NSRunAlertPanel'
    'body': 'NSRunAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSRunAlertPanelRelativeToWindow':
    'prefix': 'NSRunAlertPanelRelativeToWindow'
    'body': 'NSRunAlertPanelRelativeToWindow(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton}, ${6:NSWindow* docWindow})'
  'NSRunCriticalAlertPanel':
    'prefix': 'NSRunCriticalAlertPanel'
    'body': 'NSRunCriticalAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSRunCriticalAlertPanelRelativeToWindow':
    'prefix': 'NSRunCriticalAlertPanelRelativeToWindow'
    'body': 'NSRunCriticalAlertPanelRelativeToWindow(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton}, ${6:NSWindow* docWindow})'
  'NSRunInformationalAlertPanel':
    'prefix': 'NSRunInformationalAlertPanel'
    'body': 'NSRunInformationalAlertPanel(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton})'
  'NSRunInformationalAlertPanelRelativeToWindow':
    'prefix': 'NSRunInformationalAlertPanelRelativeToWindow'
    'body': 'NSRunInformationalAlertPanelRelativeToWindow(${1:NSString* title}, ${2:NSString* msgFormat}, ${3:NSString* defaultButton}, ${4:NSString* alternateButton}, ${5:NSString* otherButton}, ${6:NSWindow* docWindow})'
  'NSSetFocusRingStyle':
    'prefix': 'NSSetFocusRingStyle'
    'body': 'NSSetFocusRingStyle(${1:NSFocusRingPlacement placement})'
  'NSSetShowsServicesMenuItem':
    'prefix': 'NSSetShowsServicesMenuItem'
    'body': 'NSSetShowsServicesMenuItem(${1:NSString* itemName}, ${2:BOOL enabled})'
  'NSShowAnimationEffect':
    'prefix': 'NSShowAnimationEffect'
    'body': 'NSShowAnimationEffect(${1:NSAnimationEffect animationEffect}, ${2:NSPoint centerLocation}, ${3:NSSize size}, ${4:id animationDelegate}, ${5:SEL didEndSelector}, ${6:void* contextInfo})'
  'NSShowsServicesMenuItem':
    'prefix': 'NSShowsServicesMenuItem'
    'body': 'NSShowsServicesMenuItem(${1:NSString* itemName})'
  'NSUnregisterServicesProvider':
    'prefix': 'NSUnregisterServicesProvider'
    'body': 'NSUnregisterServicesProvider(${1:NSString* name})'
  'NSUpdateDynamicServices':
    'prefix': 'NSUpdateDynamicServices'
    'body': 'NSUpdateDynamicServices()'
  'NSWindowList':
    'prefix': 'NSWindowList'
    'body': 'NSWindowList(${1:NSInteger size}, ${2:NSInteger* list})'
  'NSWindowListForContext':
    'prefix': 'NSWindowListForContext'
    'body': 'NSWindowListForContext(${1:NSInteger context}, ${2:NSInteger size}, ${3:NSInteger* list})'
  'initWithColor:':
    'prefix': 'initWithColor:'
    'body': 'initWithColor(${1:NSColor* color})'
  'drawAtPoint:fromRect:operation:fraction:':
    'prefix': 'drawAtPoint:fromRect:operation:fraction:'
    'body': 'drawAtPoint(${1:NSPoint point}, fromRect:${2:NSRect fromRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat delta})'
  'drawInRect:fromRect:operation:fraction:':
    'prefix': 'drawInRect:fromRect:operation:fraction:'
    'body': 'drawInRect(${1:NSRect rect}, fromRect:${2:NSRect fromRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat delta})'
  'initWithBitmapImageRep:':
    'prefix': 'initWithBitmapImageRep:'
    'body': 'initWithBitmapImageRep(${1:NSBitmapImageRep* bitmapImageRep})'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'bidiProcessingEnabled':
    'prefix': 'bidiProcessingEnabled'
    'body': 'bidiProcessingEnabled()'
  'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'boundingBoxForControlGlyphAtIndex(${1:NSUInteger glyphIndex}, forTextContainer:${2:NSTextContainer* textContainer}, proposedLineFragment:${3:NSRect proposedRect}, glyphPosition:${4:NSPoint glyphPosition}, characterIndex:${5:NSUInteger charIndex})'
  'characterRangeForGlyphRange:actualGlyphRange:':
    'prefix': 'characterRangeForGlyphRange:actualGlyphRange:'
    'body': 'characterRangeForGlyphRange(${1:NSRange glyphRange}, actualGlyphRange:${2:NSRangePointer actualGlyphRange})'
  'currentTextContainer':
    'prefix': 'currentTextContainer'
    'body': 'currentTextContainer()'
  'deleteGlyphsInRange:':
    'prefix': 'deleteGlyphsInRange:'
    'body': 'deleteGlyphsInRange(${1:NSRange glyphRange})'
  'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:':
    'prefix': 'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'
    'body': 'getGlyphsInRange(${1:NSRange glyphsRange}, glyphs:${2:NSGlyph* glyphBuffer}, characterIndexes:${3:NSUInteger* charIndexBuffer}, glyphInscriptions:${4:NSGlyphInscription* inscribeBuffer}, elasticBits:${5:BOOL* elasticBuffer})'
  'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:':
    'prefix': 'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'
    'body': 'getLineFragmentRect(${1:NSRect* lineFragmentRect}, usedRect:${2:NSRect* lineFragmentUsedRect}, forParagraphSeparatorGlyphRange:${3:NSRange paragraphSeparatorGlyphRange}, atProposedOrigin:${4:NSPoint lineOrigin})'
  'glyphRangeForCharacterRange:actualCharacterRange:':
    'prefix': 'glyphRangeForCharacterRange:actualCharacterRange:'
    'body': 'glyphRangeForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'hyphenCharacterForGlyphAtIndex:':
    'prefix': 'hyphenCharacterForGlyphAtIndex:'
    'body': 'hyphenCharacterForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'hyphenationFactorForGlyphAtIndex:':
    'prefix': 'hyphenationFactorForGlyphAtIndex:'
    'body': 'hyphenationFactorForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'insertGlyph:atGlyphIndex:characterIndex:':
    'prefix': 'insertGlyph:atGlyphIndex:characterIndex:'
    'body': 'insertGlyph(${1:NSGlyph glyph}, atGlyphIndex:${2:NSUInteger glyphIndex}, characterIndex:${3:NSUInteger characterIndex})'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'layoutParagraphAtPoint:':
    'prefix': 'layoutParagraphAtPoint:'
    'body': 'layoutParagraphAtPoint(${1:NSPoint* lineFragmentOrigin})'
  'lineFragmentPadding':
    'prefix': 'lineFragmentPadding'
    'body': 'lineFragmentPadding()'
  'lineFragmentRectForProposedRect:remainingRect:':
    'prefix': 'lineFragmentRectForProposedRect:remainingRect:'
    'body': 'lineFragmentRectForProposedRect(${1:NSRect proposedRect}, remainingRect:${2:NSRectPointer remainingRect})'
  'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'lineSpacingAfterGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'paragraphGlyphRange':
    'prefix': 'paragraphGlyphRange'
    'body': 'paragraphGlyphRange()'
  'paragraphSeparatorGlyphRange':
    'prefix': 'paragraphSeparatorGlyphRange'
    'body': 'paragraphSeparatorGlyphRange()'
  'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'paragraphSpacingAfterGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'paragraphSpacingBeforeGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'setAttachmentSize:forGlyphRange:':
    'prefix': 'setAttachmentSize:forGlyphRange:'
    'body': 'setAttachmentSize(${1:NSSize attachmentSize}, forGlyphRange:${2:NSRange glyphRange})'
  'setAttributedString:':
    'prefix': 'setAttributedString:'
    'body': 'setAttributedString(${1:NSAttributedString* attrString})'
  'setBidiLevels:forGlyphRange:':
    'prefix': 'setBidiLevels:forGlyphRange:'
    'body': 'setBidiLevels(${1:uint8_t* levels}, forGlyphRange:${2:NSRange glyphRange})'
  'setBidiProcessingEnabled:':
    'prefix': 'setBidiProcessingEnabled:'
    'body': 'setBidiProcessingEnabled(${1:BOOL flag})'
  'setDrawsOutsideLineFragment:forGlyphRange:':
    'prefix': 'setDrawsOutsideLineFragment:forGlyphRange:'
    'body': 'setDrawsOutsideLineFragment(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setHardInvalidation:forGlyphRange:':
    'prefix': 'setHardInvalidation:forGlyphRange:'
    'body': 'setHardInvalidation(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:float factor})'
  'setLineFragmentPadding:':
    'prefix': 'setLineFragmentPadding:'
    'body': 'setLineFragmentPadding(${1:CGFloat padding})'
  'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:':
    'prefix': 'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'
    'body': 'setLineFragmentRect(${1:NSRect fragmentRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:NSRect usedRect}, baselineOffset:${4:CGFloat baselineOffset})'
  'setLocation:withAdvancements:forStartOfGlyphRange:':
    'prefix': 'setLocation:withAdvancements:forStartOfGlyphRange:'
    'body': 'setLocation(${1:NSPoint location}, withAdvancements:${2:CGFloat* advancements}, forStartOfGlyphRange:${3:NSRange glyphRange})'
  'setNotShownAttribute:forGlyphRange:':
    'prefix': 'setNotShownAttribute:forGlyphRange:'
    'body': 'setNotShownAttribute(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setParagraphGlyphRange:separatorGlyphRange:':
    'prefix': 'setParagraphGlyphRange:separatorGlyphRange:'
    'body': 'setParagraphGlyphRange(${1:NSRange paragraphRange}, separatorGlyphRange:${2:NSRange paragraphSeparatorRange})'
  'setTypesetterBehavior:':
    'prefix': 'setTypesetterBehavior:'
    'body': 'setTypesetterBehavior(${1:NSTypesetterBehavior behavior})'
  'setUsesFontLeading:':
    'prefix': 'setUsesFontLeading:'
    'body': 'setUsesFontLeading(${1:BOOL flag})'
  'NSATSTypesetter.sharedTypesetter':
    'prefix': 'sharedTypesetter'
    'body': 'sharedTypesetter()'
  'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:':
    'prefix': 'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'
    'body': 'shouldBreakLineByHyphenatingBeforeCharacterAtIndex(${1:NSUInteger charIndex})'
  'shouldBreakLineByWordBeforeCharacterAtIndex:':
    'prefix': 'shouldBreakLineByWordBeforeCharacterAtIndex:'
    'body': 'shouldBreakLineByWordBeforeCharacterAtIndex(${1:NSUInteger charIndex})'
  'substituteFontForFont:':
    'prefix': 'substituteFontForFont:'
    'body': 'substituteFontForFont(${1:NSFont* originalFont})'
  'substituteGlyphsInRange:withGlyphs:':
    'prefix': 'substituteGlyphsInRange:withGlyphs:'
    'body': 'substituteGlyphsInRange(${1:NSRange glyphRange}, withGlyphs:${2:NSGlyph* glyphs})'
  'textTabForGlyphLocation:writingDirection:maxLocation:':
    'prefix': 'textTabForGlyphLocation:writingDirection:maxLocation:'
    'body': 'textTabForGlyphLocation(${1:CGFloat glyphLocation}, writingDirection:${2:NSWritingDirection direction}, maxLocation:${3:CGFloat maxLocation})'
  'typesetterBehavior':
    'prefix': 'typesetterBehavior'
    'body': 'typesetterBehavior()'
  'usesFontLeading':
    'prefix': 'usesFontLeading'
    'body': 'usesFontLeading()'
  'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:':
    'prefix': 'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'
    'body': 'willSetLineFragmentRect(${1:NSRect* lineRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:NSRect* usedRect}, baselineOffset:${4:CGFloat* baselineOffset})'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger anInt})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id anObject})'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'concat':
    'prefix': 'concat'
    'body': 'concat()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'transformBezierPath:':
    'prefix': 'transformBezierPath:'
    'body': 'transformBezierPath(${1:NSBezierPath* aPath})'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'addButtonWithTitle:':
    'prefix': 'addButtonWithTitle:'
    'body': 'addButtonWithTitle(${1:NSString* title})'
  'alertStyle':
    'prefix': 'alertStyle'
    'body': 'alertStyle()'
  'NSAlert.alertWithError:':
    'prefix': 'alertWithError:'
    'body': 'alertWithError(${1:NSError* error})'
  'NSAlert.alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:':
    'prefix': 'alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:'
    'body': 'alertWithMessageText(${1:NSString* message}, defaultButton:${2:NSString* defaultButton}, alternateButton:${3:NSString* alternateButton}, otherButton:${4:NSString* otherButton}, informativeTextWithFormat:${5:NSString* format})'
  'beginSheetModalForWindow:completionHandler:':
    'prefix': 'beginSheetModalForWindow:completionHandler:'
    'body': 'beginSheetModalForWindow(${1:NSWindow* sheetWindow}, completionHandler:${2:void (^)(NSModalResponse) handler})'
  'beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'
    'body': 'beginSheetModalForWindow(${1:NSWindow* window}, modalDelegate:${2:id delegate}, didEndSelector:${3:SEL didEndSelector}, contextInfo:${4:void* contextInfo})'
  'buttons':
    'prefix': 'buttons'
    'body': 'buttons()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'helpAnchor':
    'prefix': 'helpAnchor'
    'body': 'helpAnchor()'
  'icon':
    'prefix': 'icon'
    'body': 'icon()'
  'informativeText':
    'prefix': 'informativeText'
    'body': 'informativeText()'
  'layout':
    'prefix': 'layout'
    'body': 'layout()'
  'messageText':
    'prefix': 'messageText'
    'body': 'messageText()'
  'runModal':
    'prefix': 'runModal'
    'body': 'runModal()'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* view})'
  'setAlertStyle:':
    'prefix': 'setAlertStyle:'
    'body': 'setAlertStyle(${1:NSAlertStyle style})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setHelpAnchor:':
    'prefix': 'setHelpAnchor:'
    'body': 'setHelpAnchor(${1:NSString* anchor})'
  'setIcon:':
    'prefix': 'setIcon:'
    'body': 'setIcon(${1:NSImage* icon})'
  'setInformativeText:':
    'prefix': 'setInformativeText:'
    'body': 'setInformativeText(${1:NSString* informativeText})'
  'setMessageText:':
    'prefix': 'setMessageText:'
    'body': 'setMessageText(${1:NSString* messageText})'
  'setShowsHelp:':
    'prefix': 'setShowsHelp:'
    'body': 'setShowsHelp(${1:BOOL showsHelp})'
  'setShowsSuppressionButton:':
    'prefix': 'setShowsSuppressionButton:'
    'body': 'setShowsSuppressionButton(${1:BOOL flag})'
  'showsHelp':
    'prefix': 'showsHelp'
    'body': 'showsHelp()'
  'showsSuppressionButton':
    'prefix': 'showsSuppressionButton'
    'body': 'showsSuppressionButton()'
  'suppressionButton':
    'prefix': 'suppressionButton'
    'body': 'suppressionButton()'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'addProgressMark:':
    'prefix': 'addProgressMark:'
    'body': 'addProgressMark(${1:NSAnimationProgress progressMark})'
  'animationBlockingMode':
    'prefix': 'animationBlockingMode'
    'body': 'animationBlockingMode()'
  'animationCurve':
    'prefix': 'animationCurve'
    'body': 'animationCurve()'
  'clearStartAnimation':
    'prefix': 'clearStartAnimation'
    'body': 'clearStartAnimation()'
  'clearStopAnimation':
    'prefix': 'clearStopAnimation'
    'body': 'clearStopAnimation()'
  'currentProgress':
    'prefix': 'currentProgress'
    'body': 'currentProgress()'
  'currentValue':
    'prefix': 'currentValue'
    'body': 'currentValue()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'frameRate':
    'prefix': 'frameRate'
    'body': 'frameRate()'
  'initWithDuration:animationCurve:':
    'prefix': 'initWithDuration:animationCurve:'
    'body': 'initWithDuration(${1:NSTimeInterval duration}, animationCurve:${2:NSAnimationCurve animationCurve})'
  'isAnimating':
    'prefix': 'isAnimating'
    'body': 'isAnimating()'
  'progressMarks':
    'prefix': 'progressMarks'
    'body': 'progressMarks()'
  'removeProgressMark:':
    'prefix': 'removeProgressMark:'
    'body': 'removeProgressMark(${1:NSAnimationProgress progressMark})'
  'runLoopModesForAnimating':
    'prefix': 'runLoopModesForAnimating'
    'body': 'runLoopModesForAnimating()'
  'setAnimationBlockingMode:':
    'prefix': 'setAnimationBlockingMode:'
    'body': 'setAnimationBlockingMode(${1:NSAnimationBlockingMode animationBlockingMode})'
  'setAnimationCurve:':
    'prefix': 'setAnimationCurve:'
    'body': 'setAnimationCurve(${1:NSAnimationCurve curve})'
  'setCurrentProgress:':
    'prefix': 'setCurrentProgress:'
    'body': 'setCurrentProgress(${1:NSAnimationProgress progress})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDuration:':
    'prefix': 'setDuration:'
    'body': 'setDuration(${1:NSTimeInterval duration})'
  'setFrameRate:':
    'prefix': 'setFrameRate:'
    'body': 'setFrameRate(${1:float framesPerSecond})'
  'setProgressMarks:':
    'prefix': 'setProgressMarks:'
    'body': 'setProgressMarks(${1:NSArray* progressMarks})'
  'startAnimation':
    'prefix': 'startAnimation'
    'body': 'startAnimation()'
  'startWhenAnimation:reachesProgress:':
    'prefix': 'startWhenAnimation:reachesProgress:'
    'body': 'startWhenAnimation(${1:NSAnimation* animation}, reachesProgress:${2:NSAnimationProgress startProgress})'
  'stopAnimation':
    'prefix': 'stopAnimation'
    'body': 'stopAnimation()'
  'stopWhenAnimation:reachesProgress:':
    'prefix': 'stopWhenAnimation:reachesProgress:'
    'body': 'stopWhenAnimation(${1:NSAnimation* animation}, reachesProgress:${2:NSAnimationProgress stopProgress})'
  'allowsImplicitAnimation':
    'prefix': 'allowsImplicitAnimation'
    'body': 'allowsImplicitAnimation()'
  'NSAnimationContext.beginGrouping':
    'prefix': 'beginGrouping'
    'body': 'beginGrouping()'
  'completionHandler':
    'prefix': 'completionHandler'
    'body': 'completionHandler()'
  'NSAnimationContext.currentContext':
    'prefix': 'currentContext'
    'body': 'currentContext()'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'NSAnimationContext.endGrouping':
    'prefix': 'endGrouping'
    'body': 'endGrouping()'
  'NSAnimationContext.runAnimationGroup:completionHandler:':
    'prefix': 'runAnimationGroup:completionHandler:'
    'body': 'runAnimationGroup(${1:void (^)(NSAnimationContext *) changes}, completionHandler:${2:void (^)(void) completionHandler})'
  'setAllowsImplicitAnimation:':
    'prefix': 'setAllowsImplicitAnimation:'
    'body': 'setAllowsImplicitAnimation(${1:BOOL allowsImplicitAnimation})'
  'setCompletionHandler:':
    'prefix': 'setCompletionHandler:'
    'body': 'setCompletionHandler(${1:void (^)(void) completionHandler})'
  'setDuration:':
    'prefix': 'setDuration:'
    'body': 'setDuration(${1:NSTimeInterval duration})'
  'setTimingFunction:':
    'prefix': 'setTimingFunction:'
    'body': 'setTimingFunction(${1:CAMediaTimingFunction* timingFunction})'
  'timingFunction':
    'prefix': 'timingFunction'
    'body': 'timingFunction()'
  'NSAppearance.appearanceNamed:':
    'prefix': 'appearanceNamed:'
    'body': 'appearanceNamed(${1:NSString* name})'
  'NSAppearance.currentAppearance':
    'prefix': 'currentAppearance'
    'body': 'currentAppearance()'
  'initWithAppearanceNamed:bundle:':
    'prefix': 'initWithAppearanceNamed:bundle:'
    'body': 'initWithAppearanceNamed(${1:NSString* name}, bundle:${2:NSBundle* bundle})'
  'NSAppearance.setCurrentAppearance:':
    'prefix': 'setCurrentAppearance:'
    'body': 'setCurrentAppearance(${1:NSAppearance* appearance})'
  'richTextSource':
    'prefix': 'richTextSource'
    'body': 'richTextSource()'
  'abortModal':
    'prefix': 'abortModal'
    'body': 'abortModal()'
  'activateContextHelpMode:':
    'prefix': 'activateContextHelpMode:'
    'body': 'activateContextHelpMode(${1:id sender})'
  'activateIgnoringOtherApps:':
    'prefix': 'activateIgnoringOtherApps:'
    'body': 'activateIgnoringOtherApps(${1:BOOL flag})'
  'activationPolicy':
    'prefix': 'activationPolicy'
    'body': 'activationPolicy()'
  'addWindowsItem:title:filename:':
    'prefix': 'addWindowsItem:title:filename:'
    'body': 'addWindowsItem(${1:NSWindow* win}, title:${2:NSString* aString}, filename:${3:BOOL isFilename})'
  'application:printFiles:':
    'prefix': 'application:printFiles:'
    'body': 'application(${1:NSApplication* sender}, printFiles:${2:NSArray* filenames})'
  'applicationIconImage':
    'prefix': 'applicationIconImage'
    'body': 'applicationIconImage()'
  'arrangeInFront:':
    'prefix': 'arrangeInFront:'
    'body': 'arrangeInFront(${1:id sender})'
  'beginModalSessionForWindow:':
    'prefix': 'beginModalSessionForWindow:'
    'body': 'beginModalSessionForWindow(${1:NSWindow* theWindow})'
  'beginModalSessionForWindow:relativeToWindow:':
    'prefix': 'beginModalSessionForWindow:relativeToWindow:'
    'body': 'beginModalSessionForWindow(${1:NSWindow* theWindow}, relativeToWindow:${2:NSWindow* docWindow})'
  'beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'
    'body': 'beginSheet(${1:NSWindow* sheet}, modalForWindow:${2:NSWindow* docWindow}, modalDelegate:${3:id modalDelegate}, didEndSelector:${4:SEL didEndSelector}, contextInfo:${5:void* contextInfo})'
  'cancelUserAttentionRequest:':
    'prefix': 'cancelUserAttentionRequest:'
    'body': 'cancelUserAttentionRequest(${1:NSInteger request})'
  'changeWindowsItem:title:filename:':
    'prefix': 'changeWindowsItem:title:filename:'
    'body': 'changeWindowsItem(${1:NSWindow* win}, title:${2:NSString* aString}, filename:${3:BOOL isFilename})'
  'completeStateRestoration':
    'prefix': 'completeStateRestoration'
    'body': 'completeStateRestoration()'
  'context':
    'prefix': 'context'
    'body': 'context()'
  'currentEvent':
    'prefix': 'currentEvent'
    'body': 'currentEvent()'
  'currentSystemPresentationOptions':
    'prefix': 'currentSystemPresentationOptions'
    'body': 'currentSystemPresentationOptions()'
  'deactivate':
    'prefix': 'deactivate'
    'body': 'deactivate()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'NSApplication.detachDrawingThread:toTarget:withObject:':
    'prefix': 'detachDrawingThread:toTarget:withObject:'
    'body': 'detachDrawingThread(${1:SEL selector}, toTarget:${2:id target}, withObject:${3:id argument})'
  'disableRelaunchOnLogin':
    'prefix': 'disableRelaunchOnLogin'
    'body': 'disableRelaunchOnLogin()'
  'discardEventsMatchingMask:beforeEvent:':
    'prefix': 'discardEventsMatchingMask:beforeEvent:'
    'body': 'discardEventsMatchingMask(${1:NSUInteger mask}, beforeEvent:${2:NSEvent* lastEvent})'
  'dockTile':
    'prefix': 'dockTile'
    'body': 'dockTile()'
  'enableRelaunchOnLogin':
    'prefix': 'enableRelaunchOnLogin'
    'body': 'enableRelaunchOnLogin()'
  'enabledRemoteNotificationTypes':
    'prefix': 'enabledRemoteNotificationTypes'
    'body': 'enabledRemoteNotificationTypes()'
  'endModalSession:':
    'prefix': 'endModalSession:'
    'body': 'endModalSession(${1:NSModalSession session})'
  'endSheet:':
    'prefix': 'endSheet:'
    'body': 'endSheet(${1:NSWindow* sheet})'
  'endSheet:returnCode:':
    'prefix': 'endSheet:returnCode:'
    'body': 'endSheet(${1:NSWindow* sheet}, returnCode:${2:NSInteger returnCode})'
  'extendStateRestoration':
    'prefix': 'extendStateRestoration'
    'body': 'extendStateRestoration()'
  'finishLaunching':
    'prefix': 'finishLaunching'
    'body': 'finishLaunching()'
  'helpMenu':
    'prefix': 'helpMenu'
    'body': 'helpMenu()'
  'hide:':
    'prefix': 'hide:'
    'body': 'hide(${1:id sender})'
  'hideOtherApplications:':
    'prefix': 'hideOtherApplications:'
    'body': 'hideOtherApplications(${1:id sender})'
  'isActive':
    'prefix': 'isActive'
    'body': 'isActive()'
  'isFullKeyboardAccessEnabled':
    'prefix': 'isFullKeyboardAccessEnabled'
    'body': 'isFullKeyboardAccessEnabled()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isRunning':
    'prefix': 'isRunning'
    'body': 'isRunning()'
  'keyWindow':
    'prefix': 'keyWindow'
    'body': 'KeyWindow()'
  'mainMenu':
    'prefix': 'mainMenu'
    'body': 'mainMenu()'
  'mainWindow':
    'prefix': 'mainWindow'
    'body': 'mainWindow()'
  'makeWindowsPerform:inOrder:':
    'prefix': 'makeWindowsPerform:inOrder:'
    'body': 'makeWindowsPerform(${1:SEL aSelector}, inOrder:${2:BOOL flag})'
  'miniaturizeAll:':
    'prefix': 'miniaturizeAll:'
    'body': 'miniaturizeAll(${1:id sender})'
  'modalWindow':
    'prefix': 'modalWindow'
    'body': 'modalWindow()'
  'nextEventMatchingMask:untilDate:inMode:dequeue:':
    'prefix': 'nextEventMatchingMask:untilDate:inMode:dequeue:'
    'body': 'nextEventMatchingMask(${1:NSUInteger mask}, untilDate:${2:NSDate* expiration}, inMode:${3:NSString* mode}, dequeue:${4:BOOL deqFlag})'
  'occlusionState':
    'prefix': 'occlusionState'
    'body': 'occlusionState()'
  'orderFrontCharacterPalette:':
    'prefix': 'orderFrontCharacterPalette:'
    'body': 'orderFrontCharacterPalette(${1:id sender})'
  'orderFrontColorPanel:':
    'prefix': 'orderFrontColorPanel:'
    'body': 'orderFrontColorPanel(${1:id sender})'
  'orderFrontStandardAboutPanel:':
    'prefix': 'orderFrontStandardAboutPanel:'
    'body': 'orderFrontStandardAboutPanel(${1:id sender})'
  'orderFrontStandardAboutPanelWithOptions:':
    'prefix': 'orderFrontStandardAboutPanelWithOptions:'
    'body': 'orderFrontStandardAboutPanelWithOptions(${1:NSDictionary* optionsDictionary})'
  'orderedDocuments':
    'prefix': 'orderedDocuments'
    'body': 'orderedDocuments()'
  'orderedWindows':
    'prefix': 'orderedWindows'
    'body': 'orderedWindows()'
  'postEvent:atStart:':
    'prefix': 'postEvent:atStart:'
    'body': 'postEvent(${1:NSEvent* event}, atStart:${2:BOOL flag})'
  'presentationOptions':
    'prefix': 'presentationOptions'
    'body': 'presentationOptions()'
  'preventWindowOrdering':
    'prefix': 'preventWindowOrdering'
    'body': 'preventWindowOrdering()'
  'registerForRemoteNotificationTypes:':
    'prefix': 'registerForRemoteNotificationTypes:'
    'body': 'registerForRemoteNotificationTypes(${1:NSRemoteNotificationType types})'
  'registerServicesMenuSendTypes:returnTypes:':
    'prefix': 'registerServicesMenuSendTypes:returnTypes:'
    'body': 'registerServicesMenuSendTypes(${1:NSArray* sendTypes}, returnTypes:${2:NSArray* returnTypes})'
  'registerUserInterfaceItemSearchHandler:':
    'prefix': 'registerUserInterfaceItemSearchHandler:'
    'body': 'registerUserInterfaceItemSearchHandler(${1:id handler})'
  'removeWindowsItem:':
    'prefix': 'removeWindowsItem:'
    'body': 'removeWindowsItem(${1:NSWindow* win})'
  'replyToApplicationShouldTerminate:':
    'prefix': 'replyToApplicationShouldTerminate:'
    'body': 'replyToApplicationShouldTerminate(${1:BOOL shouldTerminate})'
  'replyToOpenOrPrint:':
    'prefix': 'replyToOpenOrPrint:'
    'body': 'replyToOpenOrPrint(${1:NSApplicationDelegateReply reply})'
  'reportException:':
    'prefix': 'reportException:'
    'body': 'reportException(${1:NSException* theException})'
  'requestUserAttention:':
    'prefix': 'requestUserAttention:'
    'body': 'requestUserAttention(${1:NSRequestUserAttentionType requestType})'
  'restoreWindowWithIdentifier:state:completionHandler:':
    'prefix': 'restoreWindowWithIdentifier:state:completionHandler:'
    'body': 'restoreWindowWithIdentifier(${1:NSString* identifier}, state:${2:NSCoder* state}, completionHandler:${3:void (^)(NSWindow *, NSError *) completionHandler})'
  'run':
    'prefix': 'run'
    'body': 'run()'
  'runModalForWindow:':
    'prefix': 'runModalForWindow:'
    'body': 'runModalForWindow(${1:NSWindow* theWindow})'
  'runModalForWindow:relativeToWindow:':
    'prefix': 'runModalForWindow:relativeToWindow:'
    'body': 'runModalForWindow(${1:NSWindow* theWindow}, relativeToWindow:${2:NSWindow* docWindow})'
  'runModalSession:':
    'prefix': 'runModalSession:'
    'body': 'runModalSession(${1:NSModalSession session})'
  'runPageLayout:':
    'prefix': 'runPageLayout:'
    'body': 'runPageLayout(${1:id sender})'
  'searchString:inUserInterfaceItemString:searchRange:foundRange:':
    'prefix': 'searchString:inUserInterfaceItemString:searchRange:foundRange:'
    'body': 'searchString(${1:NSString* searchString}, inUserInterfaceItemString:${2:NSString* stringToSearch}, searchRange:${3:NSRange searchRange}, foundRange:${4:NSRange* foundRange})'
  'sendAction:to:from:':
    'prefix': 'sendAction:to:from:'
    'body': 'sendAction(${1:SEL theAction}, to:${2:id theTarget}, from:${3:id sender})'
  'sendEvent:':
    'prefix': 'sendEvent:'
    'body': 'sendEvent(${1:NSEvent* theEvent})'
  'servicesMenu':
    'prefix': 'servicesMenu'
    'body': 'servicesMenu()'
  'servicesProvider':
    'prefix': 'servicesProvider'
    'body': 'servicesProvider()'
  'setActivationPolicy:':
    'prefix': 'setActivationPolicy:'
    'body': 'setActivationPolicy(${1:NSApplicationActivationPolicy activationPolicy})'
  'setApplicationIconImage:':
    'prefix': 'setApplicationIconImage:'
    'body': 'setApplicationIconImage(${1:NSImage* image})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setHelpMenu:':
    'prefix': 'setHelpMenu:'
    'body': 'setHelpMenu(${1:NSMenu* helpMenu})'
  'setMainMenu:':
    'prefix': 'setMainMenu:'
    'body': 'setMainMenu(${1:NSMenu* aMenu})'
  'setPresentationOptions:':
    'prefix': 'setPresentationOptions:'
    'body': 'setPresentationOptions(${1:NSApplicationPresentationOptions newOptions})'
  'setServicesMenu:':
    'prefix': 'setServicesMenu:'
    'body': 'setServicesMenu(${1:NSMenu* aMenu})'
  'setServicesProvider:':
    'prefix': 'setServicesProvider:'
    'body': 'setServicesProvider(${1:id provider})'
  'setWindowsMenu:':
    'prefix': 'setWindowsMenu:'
    'body': 'setWindowsMenu(${1:NSMenu* aMenu})'
  'setWindowsNeedUpdate:':
    'prefix': 'setWindowsNeedUpdate:'
    'body': 'setWindowsNeedUpdate(${1:BOOL needUpdate})'
  'NSApplication.sharedApplication':
    'prefix': 'sharedApplication'
    'body': 'sharedApplication()'
  'showHelp:':
    'prefix': 'showHelp:'
    'body': 'showHelp(${1:id sender})'
  'stop:':
    'prefix': 'stop:'
    'body': 'stop(${1:id sender})'
  'stopModal':
    'prefix': 'stopModal'
    'body': 'stopModal()'
  'stopModalWithCode:':
    'prefix': 'stopModalWithCode:'
    'body': 'stopModalWithCode(${1:NSInteger returnCode})'
  'targetForAction:':
    'prefix': 'targetForAction:'
    'body': 'targetForAction(${1:SEL theAction})'
  'targetForAction:to:from:':
    'prefix': 'targetForAction:to:from:'
    'body': 'targetForAction(${1:SEL theAction}, to:${2:id theTarget}, from:${3:id sender})'
  'terminate:':
    'prefix': 'terminate:'
    'body': 'terminate(${1:id sender})'
  'tryToPerform:with:':
    'prefix': 'tryToPerform:with:'
    'body': 'tryToPerform(${1:SEL anAction}, with:${2:id anObject})'
  'unhide:':
    'prefix': 'unhide:'
    'body': 'unhide(${1:id sender})'
  'unhideAllApplications:':
    'prefix': 'unhideAllApplications:'
    'body': 'unhideAllApplications(${1:id sender})'
  'unhideWithoutActivation':
    'prefix': 'unhideWithoutActivation'
    'body': 'unhideWithoutActivation()'
  'unregisterForRemoteNotifications':
    'prefix': 'unregisterForRemoteNotifications'
    'body': 'unregisterForRemoteNotifications()'
  'unregisterUserInterfaceItemSearchHandler:':
    'prefix': 'unregisterUserInterfaceItemSearchHandler:'
    'body': 'unregisterUserInterfaceItemSearchHandler(${1:id handler})'
  'updateWindows':
    'prefix': 'updateWindows'
    'body': 'updateWindows()'
  'updateWindowsItem:':
    'prefix': 'updateWindowsItem:'
    'body': 'updateWindowsItem(${1:NSWindow* win})'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'validRequestorForSendType:returnType:':
    'prefix': 'validRequestorForSendType:returnType:'
    'body': 'validRequestorForSendType(${1:NSString* sendType}, returnType:${2:NSString* returnType})'
  'windowWithWindowNumber:':
    'prefix': 'windowWithWindowNumber:'
    'body': 'windowWithWindowNumber(${1:NSInteger windowNum})'
  'windows':
    'prefix': 'windows'
    'body': 'windows()'
  'windowsMenu':
    'prefix': 'windowsMenu'
    'body': 'windowsMenu()'
  'add:':
    'prefix': 'add:'
    'body': 'add(${1:id sender})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'addObjects:':
    'prefix': 'addObjects:'
    'body': 'addObjects(${1:NSArray* objects})'
  'addSelectedObjects:':
    'prefix': 'addSelectedObjects:'
    'body': 'addSelectedObjects(${1:NSArray* objects})'
  'addSelectionIndexes:':
    'prefix': 'addSelectionIndexes:'
    'body': 'addSelectionIndexes(${1:NSIndexSet* indexes})'
  'alwaysUsesMultipleValuesMarker':
    'prefix': 'alwaysUsesMultipleValuesMarker'
    'body': 'alwaysUsesMultipleValuesMarker()'
  'arrangeObjects:':
    'prefix': 'arrangeObjects:'
    'body': 'arrangeObjects(${1:NSArray* objects})'
  'arrangedObjects':
    'prefix': 'arrangedObjects'
    'body': 'arrangedObjects()'
  'automaticRearrangementKeyPaths':
    'prefix': 'automaticRearrangementKeyPaths'
    'body': 'automaticRearrangementKeyPaths()'
  'automaticallyRearrangesObjects':
    'prefix': 'automaticallyRearrangesObjects'
    'body': 'automaticallyRearrangesObjects()'
  'avoidsEmptySelection':
    'prefix': 'avoidsEmptySelection'
    'body': 'avoidsEmptySelection()'
  'canInsert':
    'prefix': 'canInsert'
    'body': 'canInsert()'
  'canSelectNext':
    'prefix': 'canSelectNext'
    'body': 'canSelectNext()'
  'canSelectPrevious':
    'prefix': 'canSelectPrevious'
    'body': 'canSelectPrevious()'
  'clearsFilterPredicateOnInsertion':
    'prefix': 'clearsFilterPredicateOnInsertion'
    'body': 'clearsFilterPredicateOnInsertion()'
  'didChangeArrangementCriteria':
    'prefix': 'didChangeArrangementCriteria'
    'body': 'didChangeArrangementCriteria()'
  'filterPredicate':
    'prefix': 'filterPredicate'
    'body': 'filterPredicate()'
  'insert:':
    'prefix': 'insert:'
    'body': 'insert(${1:id sender})'
  'insertObject:atArrangedObjectIndex:':
    'prefix': 'insertObject:atArrangedObjectIndex:'
    'body': 'insertObject(${1:id object}, atArrangedObjectIndex:${2:NSUInteger index})'
  'insertObjects:atArrangedObjectIndexes:':
    'prefix': 'insertObjects:atArrangedObjectIndexes:'
    'body': 'insertObjects(${1:NSArray* objects}, atArrangedObjectIndexes:${2:NSIndexSet* indexes})'
  'preservesSelection':
    'prefix': 'preservesSelection'
    'body': 'preservesSelection()'
  'rearrangeObjects':
    'prefix': 'rearrangeObjects'
    'body': 'rearrangeObjects()'
  'remove:':
    'prefix': 'remove:'
    'body': 'remove(${1:id sender})'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'removeObjectAtArrangedObjectIndex:':
    'prefix': 'removeObjectAtArrangedObjectIndex:'
    'body': 'removeObjectAtArrangedObjectIndex(${1:NSUInteger index})'
  'removeObjects:':
    'prefix': 'removeObjects:'
    'body': 'removeObjects(${1:NSArray* objects})'
  'removeObjectsAtArrangedObjectIndexes:':
    'prefix': 'removeObjectsAtArrangedObjectIndexes:'
    'body': 'removeObjectsAtArrangedObjectIndexes(${1:NSIndexSet* indexes})'
  'removeSelectedObjects:':
    'prefix': 'removeSelectedObjects:'
    'body': 'removeSelectedObjects(${1:NSArray* objects})'
  'removeSelectionIndexes:':
    'prefix': 'removeSelectionIndexes:'
    'body': 'removeSelectionIndexes(${1:NSIndexSet* indexes})'
  'selectNext:':
    'prefix': 'selectNext:'
    'body': 'selectNext(${1:id sender})'
  'selectPrevious:':
    'prefix': 'selectPrevious:'
    'body': 'selectPrevious(${1:id sender})'
  'selectedObjects':
    'prefix': 'selectedObjects'
    'body': 'selectedObjects()'
  'selectionIndex':
    'prefix': 'selectionIndex'
    'body': 'selectionIndex()'
  'selectionIndexes':
    'prefix': 'selectionIndexes'
    'body': 'selectionIndexes()'
  'selectsInsertedObjects':
    'prefix': 'selectsInsertedObjects'
    'body': 'selectsInsertedObjects()'
  'setAlwaysUsesMultipleValuesMarker:':
    'prefix': 'setAlwaysUsesMultipleValuesMarker:'
    'body': 'setAlwaysUsesMultipleValuesMarker(${1:BOOL flag})'
  'setAutomaticallyRearrangesObjects:':
    'prefix': 'setAutomaticallyRearrangesObjects:'
    'body': 'setAutomaticallyRearrangesObjects(${1:BOOL flag})'
  'setAvoidsEmptySelection:':
    'prefix': 'setAvoidsEmptySelection:'
    'body': 'setAvoidsEmptySelection(${1:BOOL flag})'
  'setClearsFilterPredicateOnInsertion:':
    'prefix': 'setClearsFilterPredicateOnInsertion:'
    'body': 'setClearsFilterPredicateOnInsertion(${1:BOOL flag})'
  'setFilterPredicate:':
    'prefix': 'setFilterPredicate:'
    'body': 'setFilterPredicate(${1:NSPredicate* filterPredicate})'
  'setPreservesSelection:':
    'prefix': 'setPreservesSelection:'
    'body': 'setPreservesSelection(${1:BOOL flag})'
  'setSelectedObjects:':
    'prefix': 'setSelectedObjects:'
    'body': 'setSelectedObjects(${1:NSArray* objects})'
  'setSelectionIndex:':
    'prefix': 'setSelectionIndex:'
    'body': 'setSelectionIndex(${1:NSUInteger index})'
  'setSelectionIndexes:':
    'prefix': 'setSelectionIndexes:'
    'body': 'setSelectionIndexes(${1:NSIndexSet* indexes})'
  'setSelectsInsertedObjects:':
    'prefix': 'setSelectsInsertedObjects:'
    'body': 'setSelectsInsertedObjects(${1:BOOL flag})'
  'setSortDescriptors:':
    'prefix': 'setSortDescriptors:'
    'body': 'setSortDescriptors(${1:NSArray* sortDescriptors})'
  'sortDescriptors':
    'prefix': 'sortDescriptors'
    'body': 'sortDescriptors()'
  'RTFDFileWrapperFromRange:documentAttributes:':
    'prefix': 'RTFDFileWrapperFromRange:documentAttributes:'
    'body': 'RTFDFileWrapperFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict})'
  'RTFDFromRange:documentAttributes:':
    'prefix': 'RTFDFromRange:documentAttributes:'
    'body': 'RTFDFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict})'
  'RTFFromRange:documentAttributes:':
    'prefix': 'RTFFromRange:documentAttributes:'
    'body': 'RTFFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict})'
  'URLAtIndex:effectiveRange:':
    'prefix': 'URLAtIndex:effectiveRange:'
    'body': 'URLAtIndex(${1:NSUInteger location}, effectiveRange:${2:NSRangePointer effectiveRange})'
  'NSAttributedString.attributedStringWithAttachment:':
    'prefix': 'attributedStringWithAttachment:'
    'body': 'attributedStringWithAttachment(${1:NSTextAttachment* attachment})'
  'boundingRectWithSize:options:':
    'prefix': 'boundingRectWithSize:options:'
    'body': 'boundingRectWithSize(${1:NSSize size}, options:${2:NSStringDrawingOptions options})'
  'containsAttachments':
    'prefix': 'containsAttachments'
    'body': 'containsAttachments()'
  'dataFromRange:documentAttributes:error:':
    'prefix': 'dataFromRange:documentAttributes:error:'
    'body': 'dataFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict}, error:${3:NSError** error})'
  'docFormatFromRange:documentAttributes:':
    'prefix': 'docFormatFromRange:documentAttributes:'
    'body': 'docFormatFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict})'
  'doubleClickAtIndex:':
    'prefix': 'doubleClickAtIndex:'
    'body': 'doubleClickAtIndex(${1:NSUInteger location})'
  'drawAtPoint:':
    'prefix': 'drawAtPoint:'
    'body': 'drawAtPoint(${1:NSPoint point})'
  'drawInRect:':
    'prefix': 'drawInRect:'
    'body': 'drawInRect(${1:NSRect rect})'
  'drawWithRect:options:':
    'prefix': 'drawWithRect:options:'
    'body': 'drawWithRect(${1:NSRect rect}, options:${2:NSStringDrawingOptions options})'
  'fileWrapperFromRange:documentAttributes:error:':
    'prefix': 'fileWrapperFromRange:documentAttributes:error:'
    'body': 'fileWrapperFromRange(${1:NSRange range}, documentAttributes:${2:NSDictionary* dict}, error:${3:NSError** error})'
  'fontAttributesInRange:':
    'prefix': 'fontAttributesInRange:'
    'body': 'fontAttributesInRange(${1:NSRange range})'
  'initWithData:options:documentAttributes:error:':
    'prefix': 'initWithData:options:documentAttributes:error:'
    'body': 'initWithData(${1:NSData* data}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'initWithDocFormat:documentAttributes:':
    'prefix': 'initWithDocFormat:documentAttributes:'
    'body': 'initWithDocFormat(${1:NSData* data}, documentAttributes:${2:NSDictionary** dict})'
  'initWithHTML:baseURL:documentAttributes:':
    'prefix': 'initWithHTML:baseURL:documentAttributes:'
    'body': 'initWithHTML(${1:NSData* data}, baseURL:${2:NSURL* base}, documentAttributes:${3:NSDictionary** dict})'
  'initWithHTML:documentAttributes:':
    'prefix': 'initWithHTML:documentAttributes:'
    'body': 'initWithHTML(${1:NSData* data}, documentAttributes:${2:NSDictionary** dict})'
  'initWithHTML:options:documentAttributes:':
    'prefix': 'initWithHTML:options:documentAttributes:'
    'body': 'initWithHTML(${1:NSData* data}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict})'
  'initWithPath:documentAttributes:':
    'prefix': 'initWithPath:documentAttributes:'
    'body': 'initWithPath(${1:NSString* path}, documentAttributes:${2:NSDictionary** dict})'
  'initWithRTF:documentAttributes:':
    'prefix': 'initWithRTF:documentAttributes:'
    'body': 'initWithRTF(${1:NSData* data}, documentAttributes:${2:NSDictionary** dict})'
  'initWithRTFD:documentAttributes:':
    'prefix': 'initWithRTFD:documentAttributes:'
    'body': 'initWithRTFD(${1:NSData* data}, documentAttributes:${2:NSDictionary** dict})'
  'initWithRTFDFileWrapper:documentAttributes:':
    'prefix': 'initWithRTFDFileWrapper:documentAttributes:'
    'body': 'initWithRTFDFileWrapper(${1:NSFileWrapper* wrapper}, documentAttributes:${2:NSDictionary** dict})'
  'initWithURL:documentAttributes:':
    'prefix': 'initWithURL:documentAttributes:'
    'body': 'initWithURL(${1:NSURL* url}, documentAttributes:${2:NSDictionary** dict})'
  'initWithURL:options:documentAttributes:error:':
    'prefix': 'initWithURL:options:documentAttributes:error:'
    'body': 'initWithURL(${1:NSURL* url}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'itemNumberInTextList:atIndex:':
    'prefix': 'itemNumberInTextList:atIndex:'
    'body': 'itemNumberInTextList(${1:NSTextList* list}, atIndex:${2:NSUInteger location})'
  'lineBreakBeforeIndex:withinRange:':
    'prefix': 'lineBreakBeforeIndex:withinRange:'
    'body': 'lineBreakBeforeIndex(${1:NSUInteger location}, withinRange:${2:NSRange aRange})'
  'lineBreakByHyphenatingBeforeIndex:withinRange:':
    'prefix': 'lineBreakByHyphenatingBeforeIndex:withinRange:'
    'body': 'lineBreakByHyphenatingBeforeIndex(${1:NSUInteger location}, withinRange:${2:NSRange aRange})'
  'nextWordFromIndex:forward:':
    'prefix': 'nextWordFromIndex:forward:'
    'body': 'nextWordFromIndex(${1:NSUInteger location}, forward:${2:BOOL isForward})'
  'rangeOfTextBlock:atIndex:':
    'prefix': 'rangeOfTextBlock:atIndex:'
    'body': 'rangeOfTextBlock(${1:NSTextBlock* block}, atIndex:${2:NSUInteger location})'
  'rangeOfTextList:atIndex:':
    'prefix': 'rangeOfTextList:atIndex:'
    'body': 'rangeOfTextList(${1:NSTextList* list}, atIndex:${2:NSUInteger location})'
  'rangeOfTextTable:atIndex:':
    'prefix': 'rangeOfTextTable:atIndex:'
    'body': 'rangeOfTextTable(${1:NSTextTable* table}, atIndex:${2:NSUInteger location})'
  'rulerAttributesInRange:':
    'prefix': 'rulerAttributesInRange:'
    'body': 'rulerAttributesInRange(${1:NSRange range})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'NSAttributedString.textFileTypes':
    'prefix': 'textFileTypes'
    'body': 'textFileTypes()'
  'NSAttributedString.textPasteboardTypes':
    'prefix': 'textPasteboardTypes'
    'body': 'textPasteboardTypes()'
  'NSAttributedString.textTypes':
    'prefix': 'textTypes'
    'body': 'textTypes()'
  'NSAttributedString.textUnfilteredFileTypes':
    'prefix': 'textUnfilteredFileTypes'
    'body': 'textUnfilteredFileTypes()'
  'NSAttributedString.textUnfilteredPasteboardTypes':
    'prefix': 'textUnfilteredPasteboardTypes'
    'body': 'textUnfilteredPasteboardTypes()'
  'NSAttributedString.textUnfilteredTypes':
    'prefix': 'textUnfilteredTypes'
    'body': 'textUnfilteredTypes()'
  'addClip':
    'prefix': 'addClip'
    'body': 'addClip()'
  'appendBezierPath:':
    'prefix': 'appendBezierPath:'
    'body': 'appendBezierPath(${1:NSBezierPath* path})'
  'appendBezierPathWithArcFromPoint:toPoint:radius:':
    'prefix': 'appendBezierPathWithArcFromPoint:toPoint:radius:'
    'body': 'appendBezierPathWithArcFromPoint(${1:NSPoint point1}, toPoint:${2:NSPoint point2}, radius:${3:CGFloat radius})'
  'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:':
    'prefix': 'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'
    'body': 'appendBezierPathWithArcWithCenter(${1:NSPoint center}, radius:${2:CGFloat radius}, startAngle:${3:CGFloat startAngle}, endAngle:${4:CGFloat endAngle})'
  'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:':
    'prefix': 'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'
    'body': 'appendBezierPathWithArcWithCenter(${1:NSPoint center}, radius:${2:CGFloat radius}, startAngle:${3:CGFloat startAngle}, endAngle:${4:CGFloat endAngle}, clockwise:${5:BOOL clockwise})'
  'appendBezierPathWithGlyph:inFont:':
    'prefix': 'appendBezierPathWithGlyph:inFont:'
    'body': 'appendBezierPathWithGlyph(${1:NSGlyph glyph}, inFont:${2:NSFont* font})'
  'appendBezierPathWithGlyphs:count:inFont:':
    'prefix': 'appendBezierPathWithGlyphs:count:inFont:'
    'body': 'appendBezierPathWithGlyphs(${1:NSGlyph* glyphs}, count:${2:NSInteger count}, inFont:${3:NSFont* font})'
  'appendBezierPathWithOvalInRect:':
    'prefix': 'appendBezierPathWithOvalInRect:'
    'body': 'appendBezierPathWithOvalInRect(${1:NSRect rect})'
  'appendBezierPathWithPackedGlyphs:':
    'prefix': 'appendBezierPathWithPackedGlyphs:'
    'body': 'appendBezierPathWithPackedGlyphs(${1:char* packedGlyphs})'
  'appendBezierPathWithPoints:count:':
    'prefix': 'appendBezierPathWithPoints:count:'
    'body': 'appendBezierPathWithPoints(${1:NSPointArray points}, count:${2:NSInteger count})'
  'appendBezierPathWithRect:':
    'prefix': 'appendBezierPathWithRect:'
    'body': 'appendBezierPathWithRect(${1:NSRect rect})'
  'appendBezierPathWithRoundedRect:xRadius:yRadius:':
    'prefix': 'appendBezierPathWithRoundedRect:xRadius:yRadius:'
    'body': 'appendBezierPathWithRoundedRect(${1:NSRect rect}, xRadius:${2:CGFloat xRadius}, yRadius:${3:CGFloat yRadius})'
  'NSBezierPath.bezierPath':
    'prefix': 'bezierPath'
    'body': 'bezierPath()'
  'bezierPathByFlatteningPath':
    'prefix': 'bezierPathByFlatteningPath'
    'body': 'bezierPathByFlatteningPath()'
  'bezierPathByReversingPath':
    'prefix': 'bezierPathByReversingPath'
    'body': 'bezierPathByReversingPath()'
  'NSBezierPath.bezierPathWithOvalInRect:':
    'prefix': 'bezierPathWithOvalInRect:'
    'body': 'bezierPathWithOvalInRect(${1:NSRect rect})'
  'NSBezierPath.bezierPathWithRect:':
    'prefix': 'bezierPathWithRect:'
    'body': 'bezierPathWithRect(${1:NSRect rect})'
  'NSBezierPath.bezierPathWithRoundedRect:xRadius:yRadius:':
    'prefix': 'bezierPathWithRoundedRect:xRadius:yRadius:'
    'body': 'bezierPathWithRoundedRect(${1:NSRect rect}, xRadius:${2:CGFloat xRadius}, yRadius:${3:CGFloat yRadius})'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'cachesBezierPath':
    'prefix': 'cachesBezierPath'
    'body': 'cachesBezierPath()'
  'NSBezierPath.clipRect:':
    'prefix': 'clipRect:'
    'body': 'clipRect(${1:NSRect rect})'
  'closePath':
    'prefix': 'closePath'
    'body': 'closePath()'
  'containsPoint:':
    'prefix': 'containsPoint:'
    'body': 'containsPoint(${1:NSPoint point})'
  'controlPointBounds':
    'prefix': 'controlPointBounds'
    'body': 'controlPointBounds()'
  'currentPoint':
    'prefix': 'currentPoint'
    'body': 'currentPoint()'
  'curveToPoint:controlPoint1:controlPoint2:':
    'prefix': 'curveToPoint:controlPoint1:controlPoint2:'
    'body': 'curveToPoint(${1:NSPoint endPoint}, controlPoint1:${2:NSPoint controlPoint1}, controlPoint2:${3:NSPoint controlPoint2})'
  'NSBezierPath.defaultFlatness':
    'prefix': 'defaultFlatness'
    'body': 'defaultFlatness()'
  'NSBezierPath.defaultLineCapStyle':
    'prefix': 'defaultLineCapStyle'
    'body': 'defaultLineCapStyle()'
  'NSBezierPath.defaultLineJoinStyle':
    'prefix': 'defaultLineJoinStyle'
    'body': 'defaultLineJoinStyle()'
  'NSBezierPath.defaultLineWidth':
    'prefix': 'defaultLineWidth'
    'body': 'defaultLineWidth()'
  'NSBezierPath.defaultMiterLimit':
    'prefix': 'defaultMiterLimit'
    'body': 'defaultMiterLimit()'
  'NSBezierPath.defaultWindingRule':
    'prefix': 'defaultWindingRule'
    'body': 'defaultWindingRule()'
  'NSBezierPath.drawPackedGlyphs:atPoint:':
    'prefix': 'drawPackedGlyphs:atPoint:'
    'body': 'drawPackedGlyphs(${1:char* packedGlyphs}, atPoint:${2:NSPoint point})'
  'elementAtIndex:':
    'prefix': 'elementAtIndex:'
    'body': 'elementAtIndex(${1:NSInteger index})'
  'elementAtIndex:associatedPoints:':
    'prefix': 'elementAtIndex:associatedPoints:'
    'body': 'elementAtIndex(${1:NSInteger index}, associatedPoints:${2:NSPointArray points})'
  'elementCount':
    'prefix': 'elementCount'
    'body': 'elementCount()'
  'fill':
    'prefix': 'fill'
    'body': 'fill()'
  'NSBezierPath.fillRect:':
    'prefix': 'fillRect:'
    'body': 'fillRect(${1:NSRect rect})'
  'flatness':
    'prefix': 'flatness'
    'body': 'flatness()'
  'getLineDash:count:phase:':
    'prefix': 'getLineDash:count:phase:'
    'body': 'getLineDash(${1:CGFloat* pattern}, count:${2:NSInteger* count}, phase:${3:CGFloat* phase})'
  'isEmpty':
    'prefix': 'isEmpty'
    'body': 'isEmpty()'
  'lineCapStyle':
    'prefix': 'lineCapStyle'
    'body': 'lineCapStyle()'
  'lineJoinStyle':
    'prefix': 'lineJoinStyle'
    'body': 'lineJoinStyle()'
  'lineToPoint:':
    'prefix': 'lineToPoint:'
    'body': 'lineToPoint(${1:NSPoint point})'
  'lineWidth':
    'prefix': 'lineWidth'
    'body': 'lineWidth()'
  'miterLimit':
    'prefix': 'miterLimit'
    'body': 'miterLimit()'
  'moveToPoint:':
    'prefix': 'moveToPoint:'
    'body': 'moveToPoint(${1:NSPoint point})'
  'relativeCurveToPoint:controlPoint1:controlPoint2:':
    'prefix': 'relativeCurveToPoint:controlPoint1:controlPoint2:'
    'body': 'relativeCurveToPoint(${1:NSPoint endPoint}, controlPoint1:${2:NSPoint controlPoint1}, controlPoint2:${3:NSPoint controlPoint2})'
  'relativeLineToPoint:':
    'prefix': 'relativeLineToPoint:'
    'body': 'relativeLineToPoint(${1:NSPoint point})'
  'relativeMoveToPoint:':
    'prefix': 'relativeMoveToPoint:'
    'body': 'relativeMoveToPoint(${1:NSPoint point})'
  'removeAllPoints':
    'prefix': 'removeAllPoints'
    'body': 'removeAllPoints()'
  'setAssociatedPoints:atIndex:':
    'prefix': 'setAssociatedPoints:atIndex:'
    'body': 'setAssociatedPoints(${1:NSPointArray points}, atIndex:${2:NSInteger index})'
  'setCachesBezierPath:':
    'prefix': 'setCachesBezierPath:'
    'body': 'setCachesBezierPath(${1:BOOL flag})'
  'setClip':
    'prefix': 'setClip'
    'body': 'setClip()'
  'NSBezierPath.setDefaultFlatness:':
    'prefix': 'setDefaultFlatness:'
    'body': 'setDefaultFlatness(${1:CGFloat flatness})'
  'NSBezierPath.setDefaultLineCapStyle:':
    'prefix': 'setDefaultLineCapStyle:'
    'body': 'setDefaultLineCapStyle(${1:NSLineCapStyle lineCapStyle})'
  'NSBezierPath.setDefaultLineJoinStyle:':
    'prefix': 'setDefaultLineJoinStyle:'
    'body': 'setDefaultLineJoinStyle(${1:NSLineJoinStyle lineJoinStyle})'
  'NSBezierPath.setDefaultLineWidth:':
    'prefix': 'setDefaultLineWidth:'
    'body': 'setDefaultLineWidth(${1:CGFloat lineWidth})'
  'NSBezierPath.setDefaultMiterLimit:':
    'prefix': 'setDefaultMiterLimit:'
    'body': 'setDefaultMiterLimit(${1:CGFloat limit})'
  'NSBezierPath.setDefaultWindingRule:':
    'prefix': 'setDefaultWindingRule:'
    'body': 'setDefaultWindingRule(${1:NSWindingRule windingRule})'
  'setFlatness:':
    'prefix': 'setFlatness:'
    'body': 'setFlatness(${1:CGFloat flatness})'
  'setLineCapStyle:':
    'prefix': 'setLineCapStyle:'
    'body': 'setLineCapStyle(${1:NSLineCapStyle lineCapStyle})'
  'setLineDash:count:phase:':
    'prefix': 'setLineDash:count:phase:'
    'body': 'setLineDash(${1:CGFloat* pattern}, count:${2:NSInteger count}, phase:${3:CGFloat phase})'
  'setLineJoinStyle:':
    'prefix': 'setLineJoinStyle:'
    'body': 'setLineJoinStyle(${1:NSLineJoinStyle lineJoinStyle})'
  'setLineWidth:':
    'prefix': 'setLineWidth:'
    'body': 'setLineWidth(${1:CGFloat lineWidth})'
  'setMiterLimit:':
    'prefix': 'setMiterLimit:'
    'body': 'setMiterLimit(${1:CGFloat miterLimit})'
  'setWindingRule:':
    'prefix': 'setWindingRule:'
    'body': 'setWindingRule(${1:NSWindingRule windingRule})'
  'stroke':
    'prefix': 'stroke'
    'body': 'stroke()'
  'NSBezierPath.strokeLineFromPoint:toPoint:':
    'prefix': 'strokeLineFromPoint:toPoint:'
    'body': 'strokeLineFromPoint(${1:NSPoint point1}, toPoint:${2:NSPoint point2})'
  'NSBezierPath.strokeRect:':
    'prefix': 'strokeRect:'
    'body': 'strokeRect(${1:NSRect rect})'
  'transformUsingAffineTransform:':
    'prefix': 'transformUsingAffineTransform:'
    'body': 'transformUsingAffineTransform(${1:NSAffineTransform* transform})'
  'windingRule':
    'prefix': 'windingRule'
    'body': 'windingRule()'
  'CGImage':
    'prefix': 'CGImage'
    'body': 'CGImage()'
  'TIFFRepresentation':
    'prefix': 'TIFFRepresentation'
    'body': 'TIFFRepresentation()'
  'NSBitmapImageRep.TIFFRepresentationOfImageRepsInArray:':
    'prefix': 'TIFFRepresentationOfImageRepsInArray:'
    'body': 'TIFFRepresentationOfImageRepsInArray(${1:NSArray* array})'
  'NSBitmapImageRep.TIFFRepresentationOfImageRepsInArray:usingCompression:factor:':
    'prefix': 'TIFFRepresentationOfImageRepsInArray:usingCompression:factor:'
    'body': 'TIFFRepresentationOfImageRepsInArray(${1:NSArray* array}, usingCompression:${2:NSTIFFCompression comp}, factor:${3:float factor})'
  'TIFFRepresentationUsingCompression:factor:':
    'prefix': 'TIFFRepresentationUsingCompression:factor:'
    'body': 'TIFFRepresentationUsingCompression(${1:NSTIFFCompression comp}, factor:${2:float factor})'
  'bitmapData':
    'prefix': 'bitmapData'
    'body': 'bitmapData()'
  'bitmapFormat':
    'prefix': 'bitmapFormat'
    'body': 'bitmapFormat()'
  'bitmapImageRepByConvertingToColorSpace:renderingIntent:':
    'prefix': 'bitmapImageRepByConvertingToColorSpace:renderingIntent:'
    'body': 'bitmapImageRepByConvertingToColorSpace(${1:NSColorSpace* targetSpace}, renderingIntent:${2:NSColorRenderingIntent renderingIntent})'
  'bitmapImageRepByRetaggingWithColorSpace:':
    'prefix': 'bitmapImageRepByRetaggingWithColorSpace:'
    'body': 'bitmapImageRepByRetaggingWithColorSpace(${1:NSColorSpace* newSpace})'
  'bitsPerPixel':
    'prefix': 'bitsPerPixel'
    'body': 'bitsPerPixel()'
  'bytesPerPlane':
    'prefix': 'bytesPerPlane'
    'body': 'bytesPerPlane()'
  'bytesPerRow':
    'prefix': 'bytesPerRow'
    'body': 'bytesPerRow()'
  'canBeCompressedUsing:':
    'prefix': 'canBeCompressedUsing:'
    'body': 'canBeCompressedUsing(${1:NSTIFFCompression compression})'
  'colorAtX:y:':
    'prefix': 'colorAtX:y:'
    'body': 'colorAtX(${1:NSInteger x}, y:${2:NSInteger y})'
  'colorSpace':
    'prefix': 'colorSpace'
    'body': 'colorSpace()'
  'colorizeByMappingGray:toColor:blackMapping:whiteMapping:':
    'prefix': 'colorizeByMappingGray:toColor:blackMapping:whiteMapping:'
    'body': 'colorizeByMappingGray(${1:CGFloat midPoint}, toColor:${2:NSColor* midPointColor}, blackMapping:${3:NSColor* shadowColor}, whiteMapping:${4:NSColor* lightColor})'
  'getBitmapDataPlanes:':
    'prefix': 'getBitmapDataPlanes:'
    'body': 'getBitmapDataPlanes(${1:unsigned char** data})'
  'getCompression:factor:':
    'prefix': 'getCompression:factor:'
    'body': 'getCompression(${1:NSTIFFCompression* compression}, factor:${2:float* factor})'
  'getPixel:atX:y:':
    'prefix': 'getPixel:atX:y:'
    'body': 'getPixel(${1:NSUInteger* p}, atX:${2:NSInteger x}, y:${3:NSInteger y})'
  'NSBitmapImageRep.getTIFFCompressionTypes:count:':
    'prefix': 'getTIFFCompressionTypes:count:'
    'body': 'getTIFFCompressionTypes(${1:NSTIFFCompression** list}, count:${2:NSInteger* numTypes})'
  'NSBitmapImageRep.imageRepWithData:':
    'prefix': 'imageRepWithData:'
    'body': 'imageRepWithData(${1:NSData* data})'
  'NSBitmapImageRep.imageRepsWithData:':
    'prefix': 'imageRepsWithData:'
    'body': 'imageRepsWithData(${1:NSData* data})'
  'incrementalLoadFromData:complete:':
    'prefix': 'incrementalLoadFromData:complete:'
    'body': 'incrementalLoadFromData(${1:NSData* data}, complete:${2:BOOL complete})'
  'initForIncrementalLoad':
    'prefix': 'initForIncrementalLoad'
    'body': 'initForIncrementalLoad()'
  'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:':
    'prefix': 'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'
    'body': 'initWithBitmapDataPlanes(${1:unsigned char** planes}, pixelsWide:${2:NSInteger width}, pixelsHigh:${3:NSInteger height}, bitsPerSample:${4:NSInteger bps}, samplesPerPixel:${5:NSInteger spp}, hasAlpha:${6:BOOL alpha}, isPlanar:${7:BOOL isPlanar}, colorSpaceName:${8:NSString* colorSpaceName}, bitmapFormat:${9:NSBitmapFormat bitmapFormat}, bytesPerRow:${10:NSInteger rBytes}, bitsPerPixel:${11:NSInteger pBits})'
  'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:':
    'prefix': 'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'
    'body': 'initWithBitmapDataPlanes(${1:unsigned char** planes}, pixelsWide:${2:NSInteger width}, pixelsHigh:${3:NSInteger height}, bitsPerSample:${4:NSInteger bps}, samplesPerPixel:${5:NSInteger spp}, hasAlpha:${6:BOOL alpha}, isPlanar:${7:BOOL isPlanar}, colorSpaceName:${8:NSString* colorSpaceName}, bytesPerRow:${9:NSInteger rBytes}, bitsPerPixel:${10:NSInteger pBits})'
  'initWithCGImage:':
    'prefix': 'initWithCGImage:'
    'body': 'initWithCGImage(${1:CGImageRef cgImage})'
  'initWithCIImage:':
    'prefix': 'initWithCIImage:'
    'body': 'initWithCIImage(${1:CIImage* ciImage})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithFocusedViewRect:':
    'prefix': 'initWithFocusedViewRect:'
    'body': 'initWithFocusedViewRect(${1:NSRect rect})'
  'isPlanar':
    'prefix': 'isPlanar'
    'body': 'isPlanar()'
  'NSBitmapImageRep.localizedNameForTIFFCompressionType:':
    'prefix': 'localizedNameForTIFFCompressionType:'
    'body': 'localizedNameForTIFFCompressionType(${1:NSTIFFCompression compression})'
  'numberOfPlanes':
    'prefix': 'numberOfPlanes'
    'body': 'numberOfPlanes()'
  'NSBitmapImageRep.representationOfImageRepsInArray:usingType:properties:':
    'prefix': 'representationOfImageRepsInArray:usingType:properties:'
    'body': 'representationOfImageRepsInArray(${1:NSArray* imageReps}, usingType:${2:NSBitmapImageFileType storageType}, properties:${3:NSDictionary* properties})'
  'representationUsingType:properties:':
    'prefix': 'representationUsingType:properties:'
    'body': 'representationUsingType(${1:NSBitmapImageFileType storageType}, properties:${2:NSDictionary* properties})'
  'samplesPerPixel':
    'prefix': 'samplesPerPixel'
    'body': 'samplesPerPixel()'
  'setColor:atX:y:':
    'prefix': 'setColor:atX:y:'
    'body': 'setColor(${1:NSColor* color}, atX:${2:NSInteger x}, y:${3:NSInteger y})'
  'setCompression:factor:':
    'prefix': 'setCompression:factor:'
    'body': 'setCompression(${1:NSTIFFCompression compression}, factor:${2:float factor})'
  'setPixel:atX:y:':
    'prefix': 'setPixel:atX:y:'
    'body': 'setPixel(${1:NSUInteger* p}, atX:${2:NSInteger x}, y:${3:NSInteger y})'
  'setProperty:withValue:':
    'prefix': 'setProperty:withValue:'
    'body': 'setProperty(${1:NSString* property}, withValue:${2:id value})'
  'valueForProperty:':
    'prefix': 'valueForProperty:'
    'body': 'valueForProperty(${1:NSString* property})'
  'borderColor':
    'prefix': 'borderColor'
    'body': 'borderColor()'
  'borderRect':
    'prefix': 'borderRect'
    'body': 'borderRect()'
  'borderType':
    'prefix': 'borderType'
    'body': 'borderType()'
  'borderWidth':
    'prefix': 'borderWidth'
    'body': 'borderWidth()'
  'boxType':
    'prefix': 'boxType'
    'body': 'boxType()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'contentViewMargins':
    'prefix': 'contentViewMargins'
    'body': 'contentViewMargins()'
  'cornerRadius':
    'prefix': 'cornerRadius'
    'body': 'cornerRadius()'
  'fillColor':
    'prefix': 'fillColor'
    'body': 'fillColor()'
  'isTransparent':
    'prefix': 'isTransparent'
    'body': 'isTransparent()'
  'setBorderColor:':
    'prefix': 'setBorderColor:'
    'body': 'setBorderColor(${1:NSColor* borderColor})'
  'setBorderType:':
    'prefix': 'setBorderType:'
    'body': 'setBorderType(${1:NSBorderType aType})'
  'setBorderWidth:':
    'prefix': 'setBorderWidth:'
    'body': 'setBorderWidth(${1:CGFloat borderWidth})'
  'setBoxType:':
    'prefix': 'setBoxType:'
    'body': 'setBoxType(${1:NSBoxType boxType})'
  'setContentView:':
    'prefix': 'setContentView:'
    'body': 'setContentView(${1:NSView* aView})'
  'setContentViewMargins:':
    'prefix': 'setContentViewMargins:'
    'body': 'setContentViewMargins(${1:NSSize offsetSize})'
  'setCornerRadius:':
    'prefix': 'setCornerRadius:'
    'body': 'setCornerRadius(${1:CGFloat cornerRadius})'
  'setFillColor:':
    'prefix': 'setFillColor:'
    'body': 'setFillColor(${1:NSColor* fillColor})'
  'setFrameFromContentFrame:':
    'prefix': 'setFrameFromContentFrame:'
    'body': 'setFrameFromContentFrame(${1:NSRect contentFrame})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleFont:':
    'prefix': 'setTitleFont:'
    'body': 'setTitleFont(${1:NSFont* fontObj})'
  'setTitlePosition:':
    'prefix': 'setTitlePosition:'
    'body': 'setTitlePosition(${1:NSTitlePosition aPosition})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setTransparent:':
    'prefix': 'setTransparent:'
    'body': 'setTransparent(${1:BOOL flag})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleCell':
    'prefix': 'titleCell'
    'body': 'titleCell()'
  'titleFont':
    'prefix': 'titleFont'
    'body': 'titleFont()'
  'titlePosition':
    'prefix': 'titlePosition'
    'body': 'titlePosition()'
  'titleRect':
    'prefix': 'titleRect'
    'body': 'titleRect()'
  'acceptsArrowKeys':
    'prefix': 'acceptsArrowKeys'
    'body': 'acceptsArrowKeys()'
  'addColumn':
    'prefix': 'addColumn'
    'body': 'addColumn()'
  'allowsBranchSelection':
    'prefix': 'allowsBranchSelection'
    'body': 'allowsBranchSelection()'
  'allowsEmptySelection':
    'prefix': 'allowsEmptySelection'
    'body': 'allowsEmptySelection()'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'allowsTypeSelect':
    'prefix': 'allowsTypeSelect'
    'body': 'allowsTypeSelect()'
  'autohidesScroller':
    'prefix': 'autohidesScroller'
    'body': 'autohidesScroller()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'canDragRowsWithIndexes:inColumn:withEvent:':
    'prefix': 'canDragRowsWithIndexes:inColumn:withEvent:'
    'body': 'canDragRowsWithIndexes(${1:NSIndexSet* rowIndexes}, inColumn:${2:NSInteger column}, withEvent:${3:NSEvent* event})'
  'NSBrowser.cellClass':
    'prefix': 'cellClass'
    'body': 'cellClass()'
  'cellPrototype':
    'prefix': 'cellPrototype'
    'body': 'cellPrototype()'
  'clickedColumn':
    'prefix': 'clickedColumn'
    'body': 'clickedColumn()'
  'clickedRow':
    'prefix': 'clickedRow'
    'body': 'clickedRow()'
  'columnContentWidthForColumnWidth:':
    'prefix': 'columnContentWidthForColumnWidth:'
    'body': 'columnContentWidthForColumnWidth(${1:CGFloat columnWidth})'
  'columnOfMatrix:':
    'prefix': 'columnOfMatrix:'
    'body': 'columnOfMatrix(${1:NSMatrix* matrix})'
  'columnResizingType':
    'prefix': 'columnResizingType'
    'body': 'columnResizingType()'
  'columnWidthForColumnContentWidth:':
    'prefix': 'columnWidthForColumnContentWidth:'
    'body': 'columnWidthForColumnContentWidth(${1:CGFloat columnContentWidth})'
  'columnsAutosaveName':
    'prefix': 'columnsAutosaveName'
    'body': 'columnsAutosaveName()'
  'defaultColumnWidth':
    'prefix': 'defaultColumnWidth'
    'body': 'defaultColumnWidth()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'displayAllColumns':
    'prefix': 'displayAllColumns'
    'body': 'displayAllColumns()'
  'displayColumn:':
    'prefix': 'displayColumn:'
    'body': 'displayColumn(${1:NSInteger column})'
  'doClick:':
    'prefix': 'doClick:'
    'body': 'doClick(${1:id sender})'
  'doDoubleClick:':
    'prefix': 'doDoubleClick:'
    'body': 'doDoubleClick(${1:id sender})'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'draggingImageForRowsWithIndexes:inColumn:withEvent:offset:':
    'prefix': 'draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'
    'body': 'draggingImageForRowsWithIndexes(${1:NSIndexSet* rowIndexes}, inColumn:${2:NSInteger column}, withEvent:${3:NSEvent* event}, offset:${4:NSPointPointer dragImageOffset})'
  'drawTitleOfColumn:inRect:':
    'prefix': 'drawTitleOfColumn:inRect:'
    'body': 'drawTitleOfColumn(${1:NSInteger column}, inRect:${2:NSRect aRect})'
  'editItemAtIndexPath:withEvent:select:':
    'prefix': 'editItemAtIndexPath:withEvent:select:'
    'body': 'editItemAtIndexPath(${1:NSIndexPath* indexPath}, withEvent:${2:NSEvent* theEvent}, select:${3:BOOL select})'
  'firstVisibleColumn':
    'prefix': 'firstVisibleColumn'
    'body': 'firstVisibleColumn()'
  'frameOfColumn:':
    'prefix': 'frameOfColumn:'
    'body': 'frameOfColumn(${1:NSInteger column})'
  'frameOfInsideOfColumn:':
    'prefix': 'frameOfInsideOfColumn:'
    'body': 'frameOfInsideOfColumn(${1:NSInteger column})'
  'frameOfRow:inColumn:':
    'prefix': 'frameOfRow:inColumn:'
    'body': 'frameOfRow(${1:NSInteger row}, inColumn:${2:NSInteger column})'
  'getRow:column:forPoint:':
    'prefix': 'getRow:column:forPoint:'
    'body': 'getRow(${1:NSInteger* row}, column:${2:NSInteger* column}, forPoint:${3:NSPoint point})'
  'hasHorizontalScroller':
    'prefix': 'hasHorizontalScroller'
    'body': 'hasHorizontalScroller()'
  'indexPathForColumn:':
    'prefix': 'indexPathForColumn:'
    'body': 'indexPathForColumn(${1:NSInteger column})'
  'isLeafItem:':
    'prefix': 'isLeafItem:'
    'body': 'isLeafItem(${1:id item})'
  'isLoaded':
    'prefix': 'isLoaded'
    'body': 'isLoaded()'
  'isTitled':
    'prefix': 'isTitled'
    'body': 'isTitled()'
  'itemAtIndexPath:':
    'prefix': 'itemAtIndexPath:'
    'body': 'itemAtIndexPath(${1:NSIndexPath* indexPath})'
  'itemAtRow:inColumn:':
    'prefix': 'itemAtRow:inColumn:'
    'body': 'itemAtRow(${1:NSInteger row}, inColumn:${2:NSInteger column})'
  'lastColumn':
    'prefix': 'lastColumn'
    'body': 'lastColumn()'
  'lastVisibleColumn':
    'prefix': 'lastVisibleColumn'
    'body': 'lastVisibleColumn()'
  'loadColumnZero':
    'prefix': 'loadColumnZero'
    'body': 'loadColumnZero()'
  'loadedCellAtRow:column:':
    'prefix': 'loadedCellAtRow:column:'
    'body': 'loadedCellAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'matrixClass':
    'prefix': 'matrixClass'
    'body': 'matrixClass()'
  'matrixInColumn:':
    'prefix': 'matrixInColumn:'
    'body': 'matrixInColumn(${1:NSInteger column})'
  'maxVisibleColumns':
    'prefix': 'maxVisibleColumns'
    'body': 'maxVisibleColumns()'
  'minColumnWidth':
    'prefix': 'minColumnWidth'
    'body': 'minColumnWidth()'
  'noteHeightOfRowsWithIndexesChanged:inColumn:':
    'prefix': 'noteHeightOfRowsWithIndexesChanged:inColumn:'
    'body': 'noteHeightOfRowsWithIndexesChanged(${1:NSIndexSet* indexSet}, inColumn:${2:NSInteger columnIndex})'
  'numberOfVisibleColumns':
    'prefix': 'numberOfVisibleColumns'
    'body': 'numberOfVisibleColumns()'
  'parentForItemsInColumn:':
    'prefix': 'parentForItemsInColumn:'
    'body': 'parentForItemsInColumn(${1:NSInteger column})'
  'path':
    'prefix': 'path'
    'body': 'path()'
  'pathSeparator':
    'prefix': 'pathSeparator'
    'body': 'pathSeparator()'
  'pathToColumn:':
    'prefix': 'pathToColumn:'
    'body': 'pathToColumn(${1:NSInteger column})'
  'prefersAllColumnUserResizing':
    'prefix': 'prefersAllColumnUserResizing'
    'body': 'prefersAllColumnUserResizing()'
  'reloadColumn:':
    'prefix': 'reloadColumn:'
    'body': 'reloadColumn(${1:NSInteger column})'
  'reloadDataForRowIndexes:inColumn:':
    'prefix': 'reloadDataForRowIndexes:inColumn:'
    'body': 'reloadDataForRowIndexes(${1:NSIndexSet* rowIndexes}, inColumn:${2:NSInteger column})'
  'NSBrowser.removeSavedColumnsWithAutosaveName:':
    'prefix': 'removeSavedColumnsWithAutosaveName:'
    'body': 'removeSavedColumnsWithAutosaveName(${1:NSString* name})'
  'reusesColumns':
    'prefix': 'reusesColumns'
    'body': 'reusesColumns()'
  'rowHeight':
    'prefix': 'rowHeight'
    'body': 'rowHeight()'
  'scrollColumnToVisible:':
    'prefix': 'scrollColumnToVisible:'
    'body': 'scrollColumnToVisible(${1:NSInteger column})'
  'scrollColumnsLeftBy:':
    'prefix': 'scrollColumnsLeftBy:'
    'body': 'scrollColumnsLeftBy(${1:NSInteger shiftAmount})'
  'scrollColumnsRightBy:':
    'prefix': 'scrollColumnsRightBy:'
    'body': 'scrollColumnsRightBy(${1:NSInteger shiftAmount})'
  'scrollRowToVisible:inColumn:':
    'prefix': 'scrollRowToVisible:inColumn:'
    'body': 'scrollRowToVisible(${1:NSInteger row}, inColumn:${2:NSInteger column})'
  'scrollViaScroller:':
    'prefix': 'scrollViaScroller:'
    'body': 'scrollViaScroller(${1:NSScroller* sender})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectRow:inColumn:':
    'prefix': 'selectRow:inColumn:'
    'body': 'selectRow(${1:NSInteger row}, inColumn:${2:NSInteger column})'
  'selectRowIndexes:inColumn:':
    'prefix': 'selectRowIndexes:inColumn:'
    'body': 'selectRowIndexes(${1:NSIndexSet* indexes}, inColumn:${2:NSInteger column})'
  'selectedCell':
    'prefix': 'selectedCell'
    'body': 'selectedCell()'
  'selectedCellInColumn:':
    'prefix': 'selectedCellInColumn:'
    'body': 'selectedCellInColumn(${1:NSInteger column})'
  'selectedCells':
    'prefix': 'selectedCells'
    'body': 'selectedCells()'
  'selectedColumn':
    'prefix': 'selectedColumn'
    'body': 'selectedColumn()'
  'selectedRowInColumn:':
    'prefix': 'selectedRowInColumn:'
    'body': 'selectedRowInColumn(${1:NSInteger column})'
  'selectedRowIndexesInColumn:':
    'prefix': 'selectedRowIndexesInColumn:'
    'body': 'selectedRowIndexesInColumn(${1:NSInteger column})'
  'selectionIndexPath':
    'prefix': 'selectionIndexPath'
    'body': 'selectionIndexPath()'
  'selectionIndexPaths':
    'prefix': 'selectionIndexPaths'
    'body': 'selectionIndexPaths()'
  'sendAction':
    'prefix': 'sendAction'
    'body': 'sendAction()'
  'sendsActionOnArrowKeys':
    'prefix': 'sendsActionOnArrowKeys'
    'body': 'sendsActionOnArrowKeys()'
  'separatesColumns':
    'prefix': 'separatesColumns'
    'body': 'separatesColumns()'
  'setAcceptsArrowKeys:':
    'prefix': 'setAcceptsArrowKeys:'
    'body': 'setAcceptsArrowKeys(${1:BOOL flag})'
  'setAllowsBranchSelection:':
    'prefix': 'setAllowsBranchSelection:'
    'body': 'setAllowsBranchSelection(${1:BOOL flag})'
  'setAllowsEmptySelection:':
    'prefix': 'setAllowsEmptySelection:'
    'body': 'setAllowsEmptySelection(${1:BOOL flag})'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL flag})'
  'setAllowsTypeSelect:':
    'prefix': 'setAllowsTypeSelect:'
    'body': 'setAllowsTypeSelect(${1:BOOL value})'
  'setAutohidesScroller:':
    'prefix': 'setAutohidesScroller:'
    'body': 'setAutohidesScroller(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setCellClass:':
    'prefix': 'setCellClass:'
    'body': 'setCellClass(${1:Class factoryId})'
  'setCellPrototype:':
    'prefix': 'setCellPrototype:'
    'body': 'setCellPrototype(${1:NSCell* aCell})'
  'setColumnResizingType:':
    'prefix': 'setColumnResizingType:'
    'body': 'setColumnResizingType(${1:NSBrowserColumnResizingType columnResizingType})'
  'setColumnsAutosaveName:':
    'prefix': 'setColumnsAutosaveName:'
    'body': 'setColumnsAutosaveName(${1:NSString* name})'
  'setDefaultColumnWidth:':
    'prefix': 'setDefaultColumnWidth:'
    'body': 'setDefaultColumnWidth(${1:CGFloat columnWidth})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL aSelector})'
  'setDraggingSourceOperationMask:forLocal:':
    'prefix': 'setDraggingSourceOperationMask:forLocal:'
    'body': 'setDraggingSourceOperationMask(${1:NSDragOperation mask}, forLocal:${2:BOOL isLocal})'
  'setHasHorizontalScroller:':
    'prefix': 'setHasHorizontalScroller:'
    'body': 'setHasHorizontalScroller(${1:BOOL flag})'
  'setLastColumn:':
    'prefix': 'setLastColumn:'
    'body': 'setLastColumn(${1:NSInteger column})'
  'setMatrixClass:':
    'prefix': 'setMatrixClass:'
    'body': 'setMatrixClass(${1:Class factoryId})'
  'setMaxVisibleColumns:':
    'prefix': 'setMaxVisibleColumns:'
    'body': 'setMaxVisibleColumns(${1:NSInteger columnCount})'
  'setMinColumnWidth:':
    'prefix': 'setMinColumnWidth:'
    'body': 'setMinColumnWidth(${1:CGFloat columnWidth})'
  'setPath:':
    'prefix': 'setPath:'
    'body': 'setPath(${1:NSString* path})'
  'setPathSeparator:':
    'prefix': 'setPathSeparator:'
    'body': 'setPathSeparator(${1:NSString* newString})'
  'setPrefersAllColumnUserResizing:':
    'prefix': 'setPrefersAllColumnUserResizing:'
    'body': 'setPrefersAllColumnUserResizing(${1:BOOL prefersAllColumnResizing})'
  'setReusesColumns:':
    'prefix': 'setReusesColumns:'
    'body': 'setReusesColumns(${1:BOOL flag})'
  'setRowHeight:':
    'prefix': 'setRowHeight:'
    'body': 'setRowHeight(${1:CGFloat height})'
  'setSelectionIndexPath:':
    'prefix': 'setSelectionIndexPath:'
    'body': 'setSelectionIndexPath(${1:NSIndexPath* path})'
  'setSelectionIndexPaths:':
    'prefix': 'setSelectionIndexPaths:'
    'body': 'setSelectionIndexPaths(${1:NSArray* paths})'
  'setSendsActionOnArrowKeys:':
    'prefix': 'setSendsActionOnArrowKeys:'
    'body': 'setSendsActionOnArrowKeys(${1:BOOL flag})'
  'setSeparatesColumns:':
    'prefix': 'setSeparatesColumns:'
    'body': 'setSeparatesColumns(${1:BOOL flag})'
  'setTakesTitleFromPreviousColumn:':
    'prefix': 'setTakesTitleFromPreviousColumn:'
    'body': 'setTakesTitleFromPreviousColumn(${1:BOOL flag})'
  'setTitle:ofColumn:':
    'prefix': 'setTitle:ofColumn:'
    'body': 'setTitle(${1:NSString* aString}, ofColumn:${2:NSInteger column})'
  'setTitled:':
    'prefix': 'setTitled:'
    'body': 'setTitled(${1:BOOL flag})'
  'setWidth:ofColumn:':
    'prefix': 'setWidth:ofColumn:'
    'body': 'setWidth(${1:CGFloat columnWidth}, ofColumn:${2:NSInteger columnIndex})'
  'takesTitleFromPreviousColumn':
    'prefix': 'takesTitleFromPreviousColumn'
    'body': 'takesTitleFromPreviousColumn()'
  'tile':
    'prefix': 'tile'
    'body': 'tile()'
  'titleFrameOfColumn:':
    'prefix': 'titleFrameOfColumn:'
    'body': 'titleFrameOfColumn(${1:NSInteger column})'
  'titleHeight':
    'prefix': 'titleHeight'
    'body': 'titleHeight()'
  'titleOfColumn:':
    'prefix': 'titleOfColumn:'
    'body': 'titleOfColumn(${1:NSInteger column})'
  'updateScroller':
    'prefix': 'updateScroller'
    'body': 'updateScroller()'
  'validateVisibleColumns':
    'prefix': 'validateVisibleColumns'
    'body': 'validateVisibleColumns()'
  'widthOfColumn:':
    'prefix': 'widthOfColumn:'
    'body': 'widthOfColumn(${1:NSInteger column})'
  'alternateImage':
    'prefix': 'alternateImage'
    'body': 'alternateImage()'
  'NSBrowserCell.branchImage':
    'prefix': 'branchImage'
    'body': 'branchImage()'
  'highlightColorInView:':
    'prefix': 'highlightColorInView:'
    'body': 'highlightColorInView(${1:NSView* controlView})'
  'NSBrowserCell.highlightedBranchImage':
    'prefix': 'highlightedBranchImage'
    'body': 'highlightedBranchImage()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'isLeaf':
    'prefix': 'isLeaf'
    'body': 'isLeaf()'
  'isLoaded':
    'prefix': 'isLoaded'
    'body': 'isLoaded()'
  'reset':
    'prefix': 'reset'
    'body': 'reset()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setAlternateImage:':
    'prefix': 'setAlternateImage:'
    'body': 'setAlternateImage(${1:NSImage* newAltImage})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setLeaf:':
    'prefix': 'setLeaf:'
    'body': 'setLeaf(${1:BOOL flag})'
  'setLoaded:':
    'prefix': 'setLoaded:'
    'body': 'setLoaded(${1:BOOL flag})'
  'URLForImageResource:':
    'prefix': 'URLForImageResource:'
    'body': 'URLForImageResource(${1:NSString* name})'
  'contextHelpForKey:':
    'prefix': 'contextHelpForKey:'
    'body': 'contextHelpForKey(${1:NSString* key})'
  'imageForResource:':
    'prefix': 'imageForResource:'
    'body': 'imageForResource(${1:NSString* name})'
  'NSBundle.loadNibFile:externalNameTable:withZone:':
    'prefix': 'loadNibFile:externalNameTable:withZone:'
    'body': 'loadNibFile(${1:NSString* fileName}, externalNameTable:${2:NSDictionary* context}, withZone:${3:NSZone* zone})'
  'loadNibFile:externalNameTable:withZone:':
    'prefix': 'loadNibFile:externalNameTable:withZone:'
    'body': 'loadNibFile(${1:NSString* fileName}, externalNameTable:${2:NSDictionary* context}, withZone:${3:NSZone* zone})'
  'NSBundle.loadNibNamed:owner:':
    'prefix': 'loadNibNamed:owner:'
    'body': 'loadNibNamed(${1:NSString* nibName}, owner:${2:id owner})'
  'loadNibNamed:owner:topLevelObjects:':
    'prefix': 'loadNibNamed:owner:topLevelObjects:'
    'body': 'loadNibNamed(${1:NSString* nibName}, owner:${2:id owner}, topLevelObjects:${3:NSArray** topLevelObjects})'
  'pathForImageResource:':
    'prefix': 'pathForImageResource:'
    'body': 'pathForImageResource(${1:NSString* name})'
  'pathForSoundResource:':
    'prefix': 'pathForSoundResource:'
    'body': 'pathForSoundResource(${1:NSString* name})'
  'allowsMixedState':
    'prefix': 'allowsMixedState'
    'body': 'allowsMixedState()'
  'alternateImage':
    'prefix': 'alternateImage'
    'body': 'alternateImage()'
  'alternateTitle':
    'prefix': 'alternateTitle'
    'body': 'alternateTitle()'
  'attributedAlternateTitle':
    'prefix': 'attributedAlternateTitle'
    'body': 'attributedAlternateTitle()'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'bezelStyle':
    'prefix': 'bezelStyle'
    'body': 'bezelStyle()'
  'getPeriodicDelay:interval:':
    'prefix': 'getPeriodicDelay:interval:'
    'body': 'getPeriodicDelay(${1:float* delay}, interval:${2:float* interval})'
  'highlight:':
    'prefix': 'highlight:'
    'body': 'highlight(${1:BOOL flag})'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imagePosition':
    'prefix': 'imagePosition'
    'body': 'imagePosition()'
  'isBordered':
    'prefix': 'isBordered'
    'body': 'isBordered()'
  'isTransparent':
    'prefix': 'isTransparent'
    'body': 'isTransparent()'
  'keyEquivalent':
    'prefix': 'keyEquivalent'
    'body': 'KeyEquivalent()'
  'keyEquivalentModifierMask':
    'prefix': 'keyEquivalentModifierMask'
    'body': 'KeyEquivalentModifierMask()'
  'performKeyEquivalent:':
    'prefix': 'performKeyEquivalent:'
    'body': 'performKeyEquivalent(${1:NSEvent* key})'
  'setAllowsMixedState:':
    'prefix': 'setAllowsMixedState:'
    'body': 'setAllowsMixedState(${1:BOOL flag})'
  'setAlternateImage:':
    'prefix': 'setAlternateImage:'
    'body': 'setAlternateImage(${1:NSImage* image})'
  'setAlternateTitle:':
    'prefix': 'setAlternateTitle:'
    'body': 'setAlternateTitle(${1:NSString* aString})'
  'setAttributedAlternateTitle:':
    'prefix': 'setAttributedAlternateTitle:'
    'body': 'setAttributedAlternateTitle(${1:NSAttributedString* obj})'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* aString})'
  'setBezelStyle:':
    'prefix': 'setBezelStyle:'
    'body': 'setBezelStyle(${1:NSBezelStyle bezelStyle})'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setButtonType:':
    'prefix': 'setButtonType:'
    'body': 'setButtonType(${1:NSButtonType aType})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setImagePosition:':
    'prefix': 'setImagePosition:'
    'body': 'setImagePosition(${1:NSCellImagePosition aPosition})'
  'setKeyEquivalent:':
    'prefix': 'setKeyEquivalent:'
    'body': 'setKeyEquivalent(${1:NSString* charCode})'
  'setKeyEquivalentModifierMask:':
    'prefix': 'setKeyEquivalentModifierMask:'
    'body': 'setKeyEquivalentModifierMask(${1:NSUInteger mask})'
  'setNextState':
    'prefix': 'setNextState'
    'body': 'setNextState()'
  'setPeriodicDelay:interval:':
    'prefix': 'setPeriodicDelay:interval:'
    'body': 'setPeriodicDelay(${1:float delay}, interval:${2:float interval})'
  'setShowsBorderOnlyWhileMouseInside:':
    'prefix': 'setShowsBorderOnlyWhileMouseInside:'
    'body': 'setShowsBorderOnlyWhileMouseInside(${1:BOOL show})'
  'setSound:':
    'prefix': 'setSound:'
    'body': 'setSound(${1:NSSound* aSound})'
  'setState:':
    'prefix': 'setState:'
    'body': 'setState(${1:NSInteger value})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setTransparent:':
    'prefix': 'setTransparent:'
    'body': 'setTransparent(${1:BOOL flag})'
  'showsBorderOnlyWhileMouseInside':
    'prefix': 'showsBorderOnlyWhileMouseInside'
    'body': 'showsBorderOnlyWhileMouseInside()'
  'sound':
    'prefix': 'sound'
    'body': 'sound()'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'alternateImage':
    'prefix': 'alternateImage'
    'body': 'alternateImage()'
  'alternateMnemonic':
    'prefix': 'alternateMnemonic'
    'body': 'alternateMnemonic()'
  'alternateMnemonicLocation':
    'prefix': 'alternateMnemonicLocation'
    'body': 'alternateMnemonicLocation()'
  'alternateTitle':
    'prefix': 'alternateTitle'
    'body': 'alternateTitle()'
  'attributedAlternateTitle':
    'prefix': 'attributedAlternateTitle'
    'body': 'attributedAlternateTitle()'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'bezelStyle':
    'prefix': 'bezelStyle'
    'body': 'bezelStyle()'
  'drawBezelWithFrame:inView:':
    'prefix': 'drawBezelWithFrame:inView:'
    'body': 'drawBezelWithFrame(${1:NSRect frame}, inView:${2:NSView* controlView})'
  'drawImage:withFrame:inView:':
    'prefix': 'drawImage:withFrame:inView:'
    'body': 'drawImage(${1:NSImage* image}, withFrame:${2:NSRect frame}, inView:${3:NSView* controlView})'
  'drawTitle:withFrame:inView:':
    'prefix': 'drawTitle:withFrame:inView:'
    'body': 'drawTitle(${1:NSAttributedString* title}, withFrame:${2:NSRect frame}, inView:${3:NSView* controlView})'
  'getPeriodicDelay:interval:':
    'prefix': 'getPeriodicDelay:interval:'
    'body': 'getPeriodicDelay(${1:float* delay}, interval:${2:float* interval})'
  'gradientType':
    'prefix': 'gradientType'
    'body': 'gradientType()'
  'highlightsBy':
    'prefix': 'highlightsBy'
    'body': 'highlightsBy()'
  'imageDimsWhenDisabled':
    'prefix': 'imageDimsWhenDisabled'
    'body': 'imageDimsWhenDisabled()'
  'imagePosition':
    'prefix': 'imagePosition'
    'body': 'imagePosition()'
  'imageScaling':
    'prefix': 'imageScaling'
    'body': 'imageScaling()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'isTransparent':
    'prefix': 'isTransparent'
    'body': 'isTransparent()'
  'keyEquivalent':
    'prefix': 'keyEquivalent'
    'body': 'KeyEquivalent()'
  'keyEquivalentFont':
    'prefix': 'keyEquivalentFont'
    'body': 'KeyEquivalentFont()'
  'keyEquivalentModifierMask':
    'prefix': 'keyEquivalentModifierMask'
    'body': 'KeyEquivalentModifierMask()'
  'mouseEntered:':
    'prefix': 'mouseEntered:'
    'body': 'mouseEntered(${1:NSEvent* event})'
  'mouseExited:':
    'prefix': 'mouseExited:'
    'body': 'mouseExited(${1:NSEvent* event})'
  'performClick:':
    'prefix': 'performClick:'
    'body': 'performClick(${1:id sender})'
  'setAlternateImage:':
    'prefix': 'setAlternateImage:'
    'body': 'setAlternateImage(${1:NSImage* image})'
  'setAlternateMnemonicLocation:':
    'prefix': 'setAlternateMnemonicLocation:'
    'body': 'setAlternateMnemonicLocation(${1:NSUInteger location})'
  'setAlternateTitle:':
    'prefix': 'setAlternateTitle:'
    'body': 'setAlternateTitle(${1:NSString* aString})'
  'setAlternateTitleWithMnemonic:':
    'prefix': 'setAlternateTitleWithMnemonic:'
    'body': 'setAlternateTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setAttributedAlternateTitle:':
    'prefix': 'setAttributedAlternateTitle:'
    'body': 'setAttributedAlternateTitle(${1:NSAttributedString* obj})'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* obj})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBezelStyle:':
    'prefix': 'setBezelStyle:'
    'body': 'setBezelStyle(${1:NSBezelStyle bezelStyle})'
  'setButtonType:':
    'prefix': 'setButtonType:'
    'body': 'setButtonType(${1:NSButtonType aType})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* fontObj})'
  'setGradientType:':
    'prefix': 'setGradientType:'
    'body': 'setGradientType(${1:NSGradientType type})'
  'setHighlightsBy:':
    'prefix': 'setHighlightsBy:'
    'body': 'setHighlightsBy(${1:NSInteger aType})'
  'setImageDimsWhenDisabled:':
    'prefix': 'setImageDimsWhenDisabled:'
    'body': 'setImageDimsWhenDisabled(${1:BOOL flag})'
  'setImagePosition:':
    'prefix': 'setImagePosition:'
    'body': 'setImagePosition(${1:NSCellImagePosition aPosition})'
  'setImageScaling:':
    'prefix': 'setImageScaling:'
    'body': 'setImageScaling(${1:NSImageScaling scaling})'
  'setKeyEquivalent:':
    'prefix': 'setKeyEquivalent:'
    'body': 'setKeyEquivalent(${1:NSString* aKeyEquivalent})'
  'setKeyEquivalentFont:':
    'prefix': 'setKeyEquivalentFont:'
    'body': 'setKeyEquivalentFont(${1:NSFont* fontObj})'
  'setKeyEquivalentFont:size:':
    'prefix': 'setKeyEquivalentFont:size:'
    'body': 'setKeyEquivalentFont(${1:NSString* fontName}, size:${2:CGFloat fontSize})'
  'setKeyEquivalentModifierMask:':
    'prefix': 'setKeyEquivalentModifierMask:'
    'body': 'setKeyEquivalentModifierMask(${1:NSUInteger mask})'
  'setPeriodicDelay:interval:':
    'prefix': 'setPeriodicDelay:interval:'
    'body': 'setPeriodicDelay(${1:float delay}, interval:${2:float interval})'
  'setShowsBorderOnlyWhileMouseInside:':
    'prefix': 'setShowsBorderOnlyWhileMouseInside:'
    'body': 'setShowsBorderOnlyWhileMouseInside(${1:BOOL show})'
  'setShowsStateBy:':
    'prefix': 'setShowsStateBy:'
    'body': 'setShowsStateBy(${1:NSInteger aType})'
  'setSound:':
    'prefix': 'setSound:'
    'body': 'setSound(${1:NSSound* aSound})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setTransparent:':
    'prefix': 'setTransparent:'
    'body': 'setTransparent(${1:BOOL flag})'
  'showsBorderOnlyWhileMouseInside':
    'prefix': 'showsBorderOnlyWhileMouseInside'
    'body': 'showsBorderOnlyWhileMouseInside()'
  'showsStateBy':
    'prefix': 'showsStateBy'
    'body': 'showsStateBy()'
  'sound':
    'prefix': 'sound'
    'body': 'sound()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'CIImage':
    'prefix': 'CIImage'
    'body': 'CIImage()'
  'NSCIImageRep.imageRepWithCIImage:':
    'prefix': 'imageRepWithCIImage:'
    'body': 'imageRepWithCIImage(${1:CIImage* image})'
  'initWithCIImage:':
    'prefix': 'initWithCIImage:'
    'body': 'initWithCIImage(${1:CIImage* image})'
  'initWithSize:depth:separate:alpha:':
    'prefix': 'initWithSize:depth:separate:alpha:'
    'body': 'initWithSize(${1:NSSize size}, depth:${2:NSWindowDepth depth}, separate:${3:BOOL flag}, alpha:${4:BOOL alpha})'
  'initWithWindow:rect:':
    'prefix': 'initWithWindow:rect:'
    'body': 'initWithWindow(${1:NSWindow* win}, rect:${2:NSRect rect})'
  'rect':
    'prefix': 'rect'
    'body': 'rect()'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'acceptsFirstResponder':
    'prefix': 'acceptsFirstResponder'
    'body': 'acceptsFirstResponder()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'allowsEditingTextAttributes':
    'prefix': 'allowsEditingTextAttributes'
    'body': 'allowsEditingTextAttributes()'
  'allowsMixedState':
    'prefix': 'allowsMixedState'
    'body': 'allowsMixedState()'
  'allowsUndo':
    'prefix': 'allowsUndo'
    'body': 'allowsUndo()'
  'attributedStringValue':
    'prefix': 'attributedStringValue'
    'body': 'attributedStringValue()'
  'backgroundStyle':
    'prefix': 'backgroundStyle'
    'body': 'backgroundStyle()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'calcDrawInfo:':
    'prefix': 'calcDrawInfo:'
    'body': 'calcDrawInfo(${1:NSRect aRect})'
  'cellAttribute:':
    'prefix': 'cellAttribute:'
    'body': 'cellAttribute(${1:NSCellAttribute aParameter})'
  'cellSize':
    'prefix': 'cellSize'
    'body': 'cellSize()'
  'cellSizeForBounds:':
    'prefix': 'cellSizeForBounds:'
    'body': 'cellSizeForBounds(${1:NSRect aRect})'
  'compare:':
    'prefix': 'compare:'
    'body': 'compare(${1:id otherCell})'
  'continueTracking:at:inView:':
    'prefix': 'continueTracking:at:inView:'
    'body': 'continueTracking(${1:NSPoint lastPoint}, at:${2:NSPoint currentPoint}, inView:${3:NSView* controlView})'
  'controlSize':
    'prefix': 'controlSize'
    'body': 'controlSize()'
  'controlTint':
    'prefix': 'controlTint'
    'body': 'controlTint()'
  'controlView':
    'prefix': 'controlView'
    'body': 'controlView()'
  'NSCell.defaultFocusRingType':
    'prefix': 'defaultFocusRingType'
    'body': 'defaultFocusRingType()'
  'NSCell.defaultMenu':
    'prefix': 'defaultMenu'
    'body': 'defaultMenu()'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'draggingImageComponentsWithFrame:inView:':
    'prefix': 'draggingImageComponentsWithFrame:inView:'
    'body': 'draggingImageComponentsWithFrame(${1:NSRect frame}, inView:${2:NSView* view})'
  'drawFocusRingMaskWithFrame:inView:':
    'prefix': 'drawFocusRingMaskWithFrame:inView:'
    'body': 'drawFocusRingMaskWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawInteriorWithFrame:inView:':
    'prefix': 'drawInteriorWithFrame:inView:'
    'body': 'drawInteriorWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawWithExpansionFrame:inView:':
    'prefix': 'drawWithExpansionFrame:inView:'
    'body': 'drawWithExpansionFrame(${1:NSRect cellFrame}, inView:${2:NSView* view})'
  'drawWithFrame:inView:':
    'prefix': 'drawWithFrame:inView:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawingRectForBounds:':
    'prefix': 'drawingRectForBounds:'
    'body': 'drawingRectForBounds(${1:NSRect theRect})'
  'editWithFrame:inView:editor:delegate:event:':
    'prefix': 'editWithFrame:inView:editor:delegate:event:'
    'body': 'editWithFrame(${1:NSRect aRect}, inView:${2:NSView* controlView}, editor:${3:NSText* textObj}, delegate:${4:id anObject}, event:${5:NSEvent* theEvent})'
  'endEditing:':
    'prefix': 'endEditing:'
    'body': 'endEditing(${1:NSText* textObj})'
  'entryType':
    'prefix': 'entryType'
    'body': 'entryType()'
  'expansionFrameWithFrame:inView:':
    'prefix': 'expansionFrameWithFrame:inView:'
    'body': 'expansionFrameWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* view})'
  'fieldEditorForView:':
    'prefix': 'fieldEditorForView:'
    'body': 'fieldEditorForView(${1:NSView* aControlView})'
  'floatValue':
    'prefix': 'floatValue'
    'body': 'floatValue()'
  'focusRingMaskBoundsForFrame:inView:':
    'prefix': 'focusRingMaskBoundsForFrame:inView:'
    'body': 'focusRingMaskBoundsForFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'focusRingType':
    'prefix': 'focusRingType'
    'body': 'focusRingType()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'formatter':
    'prefix': 'formatter'
    'body': 'formatter()'
  'getPeriodicDelay:interval:':
    'prefix': 'getPeriodicDelay:interval:'
    'body': 'getPeriodicDelay(${1:float* delay}, interval:${2:float* interval})'
  'hasValidObjectValue':
    'prefix': 'hasValidObjectValue'
    'body': 'hasValidObjectValue()'
  'highlight:withFrame:inView:':
    'prefix': 'highlight:withFrame:inView:'
    'body': 'highlight(${1:BOOL flag}, withFrame:${2:NSRect cellFrame}, inView:${3:NSView* controlView})'
  'highlightColorWithFrame:inView:':
    'prefix': 'highlightColorWithFrame:inView:'
    'body': 'highlightColorWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'hitTestForEvent:inRect:ofView:':
    'prefix': 'hitTestForEvent:inRect:ofView:'
    'body': 'hitTestForEvent(${1:NSEvent* event}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView})'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imageRectForBounds:':
    'prefix': 'imageRectForBounds:'
    'body': 'imageRectForBounds(${1:NSRect theRect})'
  'importsGraphics':
    'prefix': 'importsGraphics'
    'body': 'importsGraphics()'
  'initImageCell:':
    'prefix': 'initImageCell:'
    'body': 'initImageCell(${1:NSImage* image})'
  'initTextCell:':
    'prefix': 'initTextCell:'
    'body': 'initTextCell(${1:NSString* aString})'
  'intValue':
    'prefix': 'intValue'
    'body': 'intValue()'
  'integerValue':
    'prefix': 'integerValue'
    'body': 'integerValue()'
  'interiorBackgroundStyle':
    'prefix': 'interiorBackgroundStyle'
    'body': 'interiorBackgroundStyle()'
  'isBezeled':
    'prefix': 'isBezeled'
    'body': 'isBezeled()'
  'isBordered':
    'prefix': 'isBordered'
    'body': 'isBordered()'
  'isContinuous':
    'prefix': 'isContinuous'
    'body': 'isContinuous()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'isEntryAcceptable:':
    'prefix': 'isEntryAcceptable:'
    'body': 'isEntryAcceptable(${1:NSString* aString})'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'isScrollable':
    'prefix': 'isScrollable'
    'body': 'isScrollable()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'keyEquivalent':
    'prefix': 'keyEquivalent'
    'body': 'KeyEquivalent()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'menuForEvent:inRect:ofView:':
    'prefix': 'menuForEvent:inRect:ofView:'
    'body': 'menuForEvent(${1:NSEvent* event}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* view})'
  'mnemonic':
    'prefix': 'mnemonic'
    'body': 'mnemonic()'
  'mnemonicLocation':
    'prefix': 'mnemonicLocation'
    'body': 'mnemonicLocation()'
  'mouseDownFlags':
    'prefix': 'mouseDownFlags'
    'body': 'mouseDownFlags()'
  'nextState':
    'prefix': 'nextState'
    'body': 'nextState()'
  'objectValue':
    'prefix': 'objectValue'
    'body': 'objectValue()'
  'performClick:':
    'prefix': 'performClick:'
    'body': 'performClick(${1:id sender})'
  'NSCell.prefersTrackingUntilMouseUp':
    'prefix': 'prefersTrackingUntilMouseUp'
    'body': 'prefersTrackingUntilMouseUp()'
  'refusesFirstResponder':
    'prefix': 'refusesFirstResponder'
    'body': 'refusesFirstResponder()'
  'representedObject':
    'prefix': 'representedObject'
    'body': 'representedObject()'
  'resetCursorRect:inView:':
    'prefix': 'resetCursorRect:inView:'
    'body': 'resetCursorRect(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'selectWithFrame:inView:editor:delegate:start:length:':
    'prefix': 'selectWithFrame:inView:editor:delegate:start:length:'
    'body': 'selectWithFrame(${1:NSRect aRect}, inView:${2:NSView* controlView}, editor:${3:NSText* textObj}, delegate:${4:id anObject}, start:${5:NSInteger selStart}, length:${6:NSInteger selLength})'
  'sendActionOn:':
    'prefix': 'sendActionOn:'
    'body': 'sendActionOn(${1:NSInteger mask})'
  'sendsActionOnEndEditing':
    'prefix': 'sendsActionOnEndEditing'
    'body': 'sendsActionOnEndEditing()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSTextAlignment mode})'
  'setAllowsEditingTextAttributes:':
    'prefix': 'setAllowsEditingTextAttributes:'
    'body': 'setAllowsEditingTextAttributes(${1:BOOL flag})'
  'setAllowsMixedState:':
    'prefix': 'setAllowsMixedState:'
    'body': 'setAllowsMixedState(${1:BOOL flag})'
  'setAllowsUndo:':
    'prefix': 'setAllowsUndo:'
    'body': 'setAllowsUndo(${1:BOOL allowsUndo})'
  'setAttributedStringValue:':
    'prefix': 'setAttributedStringValue:'
    'body': 'setAttributedStringValue(${1:NSAttributedString* obj})'
  'setBackgroundStyle:':
    'prefix': 'setBackgroundStyle:'
    'body': 'setBackgroundStyle(${1:NSBackgroundStyle style})'
  'setBaseWritingDirection:':
    'prefix': 'setBaseWritingDirection:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setBezeled:':
    'prefix': 'setBezeled:'
    'body': 'setBezeled(${1:BOOL flag})'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setCellAttribute:to:':
    'prefix': 'setCellAttribute:to:'
    'body': 'setCellAttribute(${1:NSCellAttribute aParameter}, to:${2:NSInteger value})'
  'setContinuous:':
    'prefix': 'setContinuous:'
    'body': 'setContinuous(${1:BOOL flag})'
  'setControlSize:':
    'prefix': 'setControlSize:'
    'body': 'setControlSize(${1:NSControlSize size})'
  'setControlTint:':
    'prefix': 'setControlTint:'
    'body': 'setControlTint(${1:NSControlTint controlTint})'
  'setControlView:':
    'prefix': 'setControlView:'
    'body': 'setControlView(${1:NSView* view})'
  'setDoubleValue:':
    'prefix': 'setDoubleValue:'
    'body': 'setDoubleValue(${1:double aDouble})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL flag})'
  'setEntryType:':
    'prefix': 'setEntryType:'
    'body': 'setEntryType(${1:NSInteger aType})'
  'setFloatValue:':
    'prefix': 'setFloatValue:'
    'body': 'setFloatValue(${1:float aFloat})'
  'setFloatingPointFormat:left:right:':
    'prefix': 'setFloatingPointFormat:left:right:'
    'body': 'setFloatingPointFormat(${1:BOOL autoRange}, left:${2:NSUInteger leftDigits}, right:${3:NSUInteger rightDigits})'
  'setFocusRingType:':
    'prefix': 'setFocusRingType:'
    'body': 'setFocusRingType(${1:NSFocusRingType focusRingType})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* fontObj})'
  'setFormatter:':
    'prefix': 'setFormatter:'
    'body': 'setFormatter(${1:NSFormatter* newFormatter})'
  'setHighlighted:':
    'prefix': 'setHighlighted:'
    'body': 'setHighlighted(${1:BOOL flag})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setImportsGraphics:':
    'prefix': 'setImportsGraphics:'
    'body': 'setImportsGraphics(${1:BOOL flag})'
  'setIntValue:':
    'prefix': 'setIntValue:'
    'body': 'setIntValue(${1:int anInt})'
  'setIntegerValue:':
    'prefix': 'setIntegerValue:'
    'body': 'setIntegerValue(${1:NSInteger anInteger})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode mode})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* aMenu})'
  'setMnemonicLocation:':
    'prefix': 'setMnemonicLocation:'
    'body': 'setMnemonicLocation(${1:NSUInteger location})'
  'setNextState':
    'prefix': 'setNextState'
    'body': 'setNextState()'
  'setObjectValue:':
    'prefix': 'setObjectValue:'
    'body': 'setObjectValue(${1:id obj})'
  'setRefusesFirstResponder:':
    'prefix': 'setRefusesFirstResponder:'
    'body': 'setRefusesFirstResponder(${1:BOOL flag})'
  'setRepresentedObject:':
    'prefix': 'setRepresentedObject:'
    'body': 'setRepresentedObject(${1:id anObject})'
  'setScrollable:':
    'prefix': 'setScrollable:'
    'body': 'setScrollable(${1:BOOL flag})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL flag})'
  'setSendsActionOnEndEditing:':
    'prefix': 'setSendsActionOnEndEditing:'
    'body': 'setSendsActionOnEndEditing(${1:BOOL flag})'
  'setShowsFirstResponder:':
    'prefix': 'setShowsFirstResponder:'
    'body': 'setShowsFirstResponder(${1:BOOL showFR})'
  'setState:':
    'prefix': 'setState:'
    'body': 'setState(${1:NSInteger value})'
  'setStringValue:':
    'prefix': 'setStringValue:'
    'body': 'setStringValue(${1:NSString* aString})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger anInt})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id anObject})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setTruncatesLastVisibleLine:':
    'prefix': 'setTruncatesLastVisibleLine:'
    'body': 'setTruncatesLastVisibleLine(${1:BOOL flag})'
  'setType:':
    'prefix': 'setType:'
    'body': 'setType(${1:NSCellType aType})'
  'setUpFieldEditorAttributes:':
    'prefix': 'setUpFieldEditorAttributes:'
    'body': 'setUpFieldEditorAttributes(${1:NSText* textObj})'
  'setUserInterfaceLayoutDirection:':
    'prefix': 'setUserInterfaceLayoutDirection:'
    'body': 'setUserInterfaceLayoutDirection(${1:NSUserInterfaceLayoutDirection layoutDirection})'
  'setUsesSingleLineMode:':
    'prefix': 'setUsesSingleLineMode:'
    'body': 'setUsesSingleLineMode(${1:BOOL flag})'
  'setWraps:':
    'prefix': 'setWraps:'
    'body': 'setWraps(${1:BOOL flag})'
  'showsFirstResponder':
    'prefix': 'showsFirstResponder'
    'body': 'showsFirstResponder()'
  'startTrackingAt:inView:':
    'prefix': 'startTrackingAt:inView:'
    'body': 'startTrackingAt(${1:NSPoint startPoint}, inView:${2:NSView* controlView})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'stopTracking:at:inView:mouseIsUp:':
    'prefix': 'stopTracking:at:inView:mouseIsUp:'
    'body': 'stopTracking(${1:NSPoint lastPoint}, at:${2:NSPoint stopPoint}, inView:${3:NSView* controlView}, mouseIsUp:${4:BOOL flag})'
  'stringValue':
    'prefix': 'stringValue'
    'body': 'stringValue()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'takeDoubleValueFrom:':
    'prefix': 'takeDoubleValueFrom:'
    'body': 'takeDoubleValueFrom(${1:id sender})'
  'takeFloatValueFrom:':
    'prefix': 'takeFloatValueFrom:'
    'body': 'takeFloatValueFrom(${1:id sender})'
  'takeIntValueFrom:':
    'prefix': 'takeIntValueFrom:'
    'body': 'takeIntValueFrom(${1:id sender})'
  'takeIntegerValueFrom:':
    'prefix': 'takeIntegerValueFrom:'
    'body': 'takeIntegerValueFrom(${1:id sender})'
  'takeObjectValueFrom:':
    'prefix': 'takeObjectValueFrom:'
    'body': 'takeObjectValueFrom(${1:id sender})'
  'takeStringValueFrom:':
    'prefix': 'takeStringValueFrom:'
    'body': 'takeStringValueFrom(${1:id sender})'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleRectForBounds:':
    'prefix': 'titleRectForBounds:'
    'body': 'titleRectForBounds(${1:NSRect theRect})'
  'trackMouse:inRect:ofView:untilMouseUp:':
    'prefix': 'trackMouse:inRect:ofView:untilMouseUp:'
    'body': 'trackMouse(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, untilMouseUp:${4:BOOL flag})'
  'truncatesLastVisibleLine':
    'prefix': 'truncatesLastVisibleLine'
    'body': 'truncatesLastVisibleLine()'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'usesSingleLineMode':
    'prefix': 'usesSingleLineMode'
    'body': 'usesSingleLineMode()'
  'wantsNotificationForMarkedText':
    'prefix': 'wantsNotificationForMarkedText'
    'body': 'wantsNotificationForMarkedText()'
  'wraps':
    'prefix': 'wraps'
    'body': 'wraps()'
  'autoscroll:':
    'prefix': 'autoscroll:'
    'body': 'autoscroll(${1:NSEvent* theEvent})'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'constrainBoundsRect:':
    'prefix': 'constrainBoundsRect:'
    'body': 'constrainBoundsRect(${1:NSRect proposedBounds})'
  'constrainScrollPoint:':
    'prefix': 'constrainScrollPoint:'
    'body': 'constrainScrollPoint(${1:NSPoint newOrigin})'
  'copiesOnScroll':
    'prefix': 'copiesOnScroll'
    'body': 'copiesOnScroll()'
  'documentCursor':
    'prefix': 'documentCursor'
    'body': 'documentCursor()'
  'documentRect':
    'prefix': 'documentRect'
    'body': 'documentRect()'
  'documentView':
    'prefix': 'documentView'
    'body': 'documentView()'
  'documentVisibleRect':
    'prefix': 'documentVisibleRect'
    'body': 'documentVisibleRect()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'scrollToPoint:':
    'prefix': 'scrollToPoint:'
    'body': 'scrollToPoint(${1:NSPoint newOrigin})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setCopiesOnScroll:':
    'prefix': 'setCopiesOnScroll:'
    'body': 'setCopiesOnScroll(${1:BOOL flag})'
  'setDocumentCursor:':
    'prefix': 'setDocumentCursor:'
    'body': 'setDocumentCursor(${1:NSCursor* anObj})'
  'setDocumentView:':
    'prefix': 'setDocumentView:'
    'body': 'setDocumentView(${1:NSView* aView})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'viewBoundsChanged:':
    'prefix': 'viewBoundsChanged:'
    'body': 'viewBoundsChanged(${1:NSNotification* notification})'
  'viewFrameChanged:':
    'prefix': 'viewFrameChanged:'
    'body': 'viewFrameChanged(${1:NSNotification* notification})'
  'decodeNXColor':
    'prefix': 'decodeNXColor'
    'body': 'decodeNXColor()'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'backgroundColors':
    'prefix': 'backgroundColors'
    'body': 'backgroundColors()'
  'content':
    'prefix': 'content'
    'body': 'content()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'draggingImageForItemsAtIndexes:withEvent:offset:':
    'prefix': 'draggingImageForItemsAtIndexes:withEvent:offset:'
    'body': 'draggingImageForItemsAtIndexes(${1:NSIndexSet* indexes}, withEvent:${2:NSEvent* event}, offset:${3:NSPointPointer dragImageOffset})'
  'frameForItemAtIndex:':
    'prefix': 'frameForItemAtIndex:'
    'body': 'frameForItemAtIndex(${1:NSUInteger index})'
  'frameForItemAtIndex:withNumberOfItems:':
    'prefix': 'frameForItemAtIndex:withNumberOfItems:'
    'body': 'frameForItemAtIndex(${1:NSUInteger index}, withNumberOfItems:${2:NSUInteger numberOfItems})'
  'isFirstResponder':
    'prefix': 'isFirstResponder'
    'body': 'isFirstResponder()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'itemAtIndex:':
    'prefix': 'itemAtIndex:'
    'body': 'itemAtIndex(${1:NSUInteger index})'
  'itemPrototype':
    'prefix': 'itemPrototype'
    'body': 'itemPrototype()'
  'maxItemSize':
    'prefix': 'maxItemSize'
    'body': 'maxItemSize()'
  'maxNumberOfColumns':
    'prefix': 'maxNumberOfColumns'
    'body': 'maxNumberOfColumns()'
  'maxNumberOfRows':
    'prefix': 'maxNumberOfRows'
    'body': 'maxNumberOfRows()'
  'minItemSize':
    'prefix': 'minItemSize'
    'body': 'minItemSize()'
  'newItemForRepresentedObject:':
    'prefix': 'newItemForRepresentedObject:'
    'body': 'newItemForRepresentedObject(${1:id object})'
  'selectionIndexes':
    'prefix': 'selectionIndexes'
    'body': 'selectionIndexes()'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL flag})'
  'setBackgroundColors:':
    'prefix': 'setBackgroundColors:'
    'body': 'setBackgroundColors(${1:NSArray* colors})'
  'setContent:':
    'prefix': 'setContent:'
    'body': 'setContent(${1:NSArray* content})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id aDelegate})'
  'setDraggingSourceOperationMask:forLocal:':
    'prefix': 'setDraggingSourceOperationMask:forLocal:'
    'body': 'setDraggingSourceOperationMask(${1:NSDragOperation dragOperationMask}, forLocal:${2:BOOL localDestination})'
  'setItemPrototype:':
    'prefix': 'setItemPrototype:'
    'body': 'setItemPrototype(${1:NSCollectionViewItem* prototype})'
  'setMaxItemSize:':
    'prefix': 'setMaxItemSize:'
    'body': 'setMaxItemSize(${1:NSSize size})'
  'setMaxNumberOfColumns:':
    'prefix': 'setMaxNumberOfColumns:'
    'body': 'setMaxNumberOfColumns(${1:NSUInteger number})'
  'setMaxNumberOfRows:':
    'prefix': 'setMaxNumberOfRows:'
    'body': 'setMaxNumberOfRows(${1:NSUInteger number})'
  'setMinItemSize:':
    'prefix': 'setMinItemSize:'
    'body': 'setMinItemSize(${1:NSSize size})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL flag})'
  'setSelectionIndexes:':
    'prefix': 'setSelectionIndexes:'
    'body': 'setSelectionIndexes(${1:NSIndexSet* indexes})'
  'collectionView':
    'prefix': 'collectionView'
    'body': 'collectionView()'
  'draggingImageComponents':
    'prefix': 'draggingImageComponents'
    'body': 'draggingImageComponents()'
  'imageView':
    'prefix': 'imageView'
    'body': 'imageView()'
  'isSelected':
    'prefix': 'isSelected'
    'body': 'isSelected()'
  'setImageView:':
    'prefix': 'setImageView:'
    'body': 'setImageView(${1:NSImageView* imageView})'
  'setSelected:':
    'prefix': 'setSelected:'
    'body': 'setSelected(${1:BOOL selected})'
  'setTextField:':
    'prefix': 'setTextField:'
    'body': 'setTextField(${1:NSTextField* textField})'
  'textField':
    'prefix': 'textField'
    'body': 'textField()'
  'CGColor':
    'prefix': 'CGColor'
    'body': 'CGColor()'
  'alphaComponent':
    'prefix': 'alphaComponent'
    'body': 'alphaComponent()'
  'NSColor.alternateSelectedControlColor':
    'prefix': 'alternateSelectedControlColor'
    'body': 'alternateSelectedControlColor()'
  'NSColor.alternateSelectedControlTextColor':
    'prefix': 'alternateSelectedControlTextColor'
    'body': 'alternateSelectedControlTextColor()'
  'NSColor.blackColor':
    'prefix': 'blackColor'
    'body': 'blackColor()'
  'blackComponent':
    'prefix': 'blackComponent'
    'body': 'blackComponent()'
  'blendedColorWithFraction:ofColor:':
    'prefix': 'blendedColorWithFraction:ofColor:'
    'body': 'blendedColorWithFraction(${1:CGFloat fraction}, ofColor:${2:NSColor* color})'
  'NSColor.blueColor':
    'prefix': 'blueColor'
    'body': 'blueColor()'
  'blueComponent':
    'prefix': 'blueComponent'
    'body': 'blueComponent()'
  'brightnessComponent':
    'prefix': 'brightnessComponent'
    'body': 'brightnessComponent()'
  'NSColor.brownColor':
    'prefix': 'brownColor'
    'body': 'brownColor()'
  'catalogNameComponent':
    'prefix': 'catalogNameComponent'
    'body': 'catalogNameComponent()'
  'NSColor.clearColor':
    'prefix': 'clearColor'
    'body': 'clearColor()'
  'NSColor.colorForControlTint:':
    'prefix': 'colorForControlTint:'
    'body': 'colorForControlTint(${1:NSControlTint controlTint})'
  'NSColor.colorFromPasteboard:':
    'prefix': 'colorFromPasteboard:'
    'body': 'colorFromPasteboard(${1:NSPasteboard* pasteBoard})'
  'colorNameComponent':
    'prefix': 'colorNameComponent'
    'body': 'colorNameComponent()'
  'colorSpace':
    'prefix': 'colorSpace'
    'body': 'colorSpace()'
  'colorSpaceName':
    'prefix': 'colorSpaceName'
    'body': 'colorSpaceName()'
  'colorUsingColorSpace:':
    'prefix': 'colorUsingColorSpace:'
    'body': 'colorUsingColorSpace(${1:NSColorSpace* space})'
  'colorUsingColorSpaceName:':
    'prefix': 'colorUsingColorSpaceName:'
    'body': 'colorUsingColorSpaceName(${1:NSString* colorSpace})'
  'colorUsingColorSpaceName:device:':
    'prefix': 'colorUsingColorSpaceName:device:'
    'body': 'colorUsingColorSpaceName(${1:NSString* colorSpace}, device:${2:NSDictionary* deviceDescription})'
  'colorWithAlphaComponent:':
    'prefix': 'colorWithAlphaComponent:'
    'body': 'colorWithAlphaComponent(${1:CGFloat alpha})'
  'NSColor.colorWithCGColor:':
    'prefix': 'colorWithCGColor:'
    'body': 'colorWithCGColor(${1:CGColorRef cgColor})'
  'NSColor.colorWithCIColor:':
    'prefix': 'colorWithCIColor:'
    'body': 'colorWithCIColor(${1:CIColor* color})'
  'NSColor.colorWithCalibratedHue:saturation:brightness:alpha:':
    'prefix': 'colorWithCalibratedHue:saturation:brightness:alpha:'
    'body': 'colorWithCalibratedHue(${1:CGFloat hue}, saturation:${2:CGFloat saturation}, brightness:${3:CGFloat brightness}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithCalibratedRed:green:blue:alpha:':
    'prefix': 'colorWithCalibratedRed:green:blue:alpha:'
    'body': 'colorWithCalibratedRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithCalibratedWhite:alpha:':
    'prefix': 'colorWithCalibratedWhite:alpha:'
    'body': 'colorWithCalibratedWhite(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'NSColor.colorWithCatalogName:colorName:':
    'prefix': 'colorWithCatalogName:colorName:'
    'body': 'colorWithCatalogName(${1:NSString* listName}, colorName:${2:NSString* colorName})'
  'NSColor.colorWithColorSpace:components:count:':
    'prefix': 'colorWithColorSpace:components:count:'
    'body': 'colorWithColorSpace(${1:NSColorSpace* space}, components:${2:CGFloat* components}, count:${3:NSInteger numberOfComponents})'
  'NSColor.colorWithDeviceCyan:magenta:yellow:black:alpha:':
    'prefix': 'colorWithDeviceCyan:magenta:yellow:black:alpha:'
    'body': 'colorWithDeviceCyan(${1:CGFloat cyan}, magenta:${2:CGFloat magenta}, yellow:${3:CGFloat yellow}, black:${4:CGFloat black}, alpha:${5:CGFloat alpha})'
  'NSColor.colorWithDeviceHue:saturation:brightness:alpha:':
    'prefix': 'colorWithDeviceHue:saturation:brightness:alpha:'
    'body': 'colorWithDeviceHue(${1:CGFloat hue}, saturation:${2:CGFloat saturation}, brightness:${3:CGFloat brightness}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithDeviceRed:green:blue:alpha:':
    'prefix': 'colorWithDeviceRed:green:blue:alpha:'
    'body': 'colorWithDeviceRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithDeviceWhite:alpha:':
    'prefix': 'colorWithDeviceWhite:alpha:'
    'body': 'colorWithDeviceWhite(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'NSColor.colorWithGenericGamma22White:alpha:':
    'prefix': 'colorWithGenericGamma22White:alpha:'
    'body': 'colorWithGenericGamma22White(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'NSColor.colorWithHue:saturation:brightness:alpha:':
    'prefix': 'colorWithHue:saturation:brightness:alpha:'
    'body': 'colorWithHue(${1:CGFloat hue}, saturation:${2:CGFloat saturation}, brightness:${3:CGFloat brightness}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithPatternImage:':
    'prefix': 'colorWithPatternImage:'
    'body': 'colorWithPatternImage(${1:NSImage* image})'
  'NSColor.colorWithRed:green:blue:alpha:':
    'prefix': 'colorWithRed:green:blue:alpha:'
    'body': 'colorWithRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithSRGBRed:green:blue:alpha:':
    'prefix': 'colorWithSRGBRed:green:blue:alpha:'
    'body': 'colorWithSRGBRed(${1:CGFloat red}, green:${2:CGFloat green}, blue:${3:CGFloat blue}, alpha:${4:CGFloat alpha})'
  'NSColor.colorWithWhite:alpha:':
    'prefix': 'colorWithWhite:alpha:'
    'body': 'colorWithWhite(${1:CGFloat white}, alpha:${2:CGFloat alpha})'
  'NSColor.controlAlternatingRowBackgroundColors':
    'prefix': 'controlAlternatingRowBackgroundColors'
    'body': 'controlAlternatingRowBackgroundColors()'
  'NSColor.controlBackgroundColor':
    'prefix': 'controlBackgroundColor'
    'body': 'controlBackgroundColor()'
  'NSColor.controlColor':
    'prefix': 'controlColor'
    'body': 'controlColor()'
  'NSColor.controlDarkShadowColor':
    'prefix': 'controlDarkShadowColor'
    'body': 'controlDarkShadowColor()'
  'NSColor.controlHighlightColor':
    'prefix': 'controlHighlightColor'
    'body': 'controlHighlightColor()'
  'NSColor.controlLightHighlightColor':
    'prefix': 'controlLightHighlightColor'
    'body': 'controlLightHighlightColor()'
  'NSColor.controlShadowColor':
    'prefix': 'controlShadowColor'
    'body': 'controlShadowColor()'
  'NSColor.controlTextColor':
    'prefix': 'controlTextColor'
    'body': 'controlTextColor()'
  'NSColor.currentControlTint':
    'prefix': 'currentControlTint'
    'body': 'currentControlTint()'
  'NSColor.cyanColor':
    'prefix': 'cyanColor'
    'body': 'cyanColor()'
  'cyanComponent':
    'prefix': 'cyanComponent'
    'body': 'cyanComponent()'
  'NSColor.darkGrayColor':
    'prefix': 'darkGrayColor'
    'body': 'darkGrayColor()'
  'NSColor.disabledControlTextColor':
    'prefix': 'disabledControlTextColor'
    'body': 'disabledControlTextColor()'
  'drawSwatchInRect:':
    'prefix': 'drawSwatchInRect:'
    'body': 'drawSwatchInRect(${1:NSRect rect})'
  'getComponents:':
    'prefix': 'getComponents:'
    'body': 'getComponents(${1:CGFloat* components})'
  'getCyan:magenta:yellow:black:alpha:':
    'prefix': 'getCyan:magenta:yellow:black:alpha:'
    'body': 'getCyan(${1:CGFloat* cyan}, magenta:${2:CGFloat* magenta}, yellow:${3:CGFloat* yellow}, black:${4:CGFloat* black}, alpha:${5:CGFloat* alpha})'
  'getHue:saturation:brightness:alpha:':
    'prefix': 'getHue:saturation:brightness:alpha:'
    'body': 'getHue(${1:CGFloat* hue}, saturation:${2:CGFloat* saturation}, brightness:${3:CGFloat* brightness}, alpha:${4:CGFloat* alpha})'
  'getRed:green:blue:alpha:':
    'prefix': 'getRed:green:blue:alpha:'
    'body': 'getRed(${1:CGFloat* red}, green:${2:CGFloat* green}, blue:${3:CGFloat* blue}, alpha:${4:CGFloat* alpha})'
  'getWhite:alpha:':
    'prefix': 'getWhite:alpha:'
    'body': 'getWhite(${1:CGFloat* white}, alpha:${2:CGFloat* alpha})'
  'NSColor.grayColor':
    'prefix': 'grayColor'
    'body': 'grayColor()'
  'NSColor.greenColor':
    'prefix': 'greenColor'
    'body': 'greenColor()'
  'greenComponent':
    'prefix': 'greenComponent'
    'body': 'greenComponent()'
  'NSColor.gridColor':
    'prefix': 'gridColor'
    'body': 'gridColor()'
  'NSColor.headerColor':
    'prefix': 'headerColor'
    'body': 'headerColor()'
  'NSColor.headerTextColor':
    'prefix': 'headerTextColor'
    'body': 'headerTextColor()'
  'NSColor.highlightColor':
    'prefix': 'highlightColor'
    'body': 'highlightColor()'
  'highlightWithLevel:':
    'prefix': 'highlightWithLevel:'
    'body': 'highlightWithLevel(${1:CGFloat val})'
  'hueComponent':
    'prefix': 'hueComponent'
    'body': 'hueComponent()'
  'NSColor.ignoresAlpha':
    'prefix': 'ignoresAlpha'
    'body': 'ignoresAlpha()'
  'NSColor.keyboardFocusIndicatorColor':
    'prefix': 'keyboardFocusIndicatorColor'
    'body': 'KeyboardFocusIndicatorColor()'
  'NSColor.knobColor':
    'prefix': 'knobColor'
    'body': 'KnobColor()'
  'NSColor.lightGrayColor':
    'prefix': 'lightGrayColor'
    'body': 'lightGrayColor()'
  'localizedCatalogNameComponent':
    'prefix': 'localizedCatalogNameComponent'
    'body': 'localizedCatalogNameComponent()'
  'localizedColorNameComponent':
    'prefix': 'localizedColorNameComponent'
    'body': 'localizedColorNameComponent()'
  'NSColor.magentaColor':
    'prefix': 'magentaColor'
    'body': 'magentaColor()'
  'magentaComponent':
    'prefix': 'magentaComponent'
    'body': 'magentaComponent()'
  'numberOfComponents':
    'prefix': 'numberOfComponents'
    'body': 'numberOfComponents()'
  'NSColor.orangeColor':
    'prefix': 'orangeColor'
    'body': 'orangeColor()'
  'patternImage':
    'prefix': 'patternImage'
    'body': 'patternImage()'
  'NSColor.purpleColor':
    'prefix': 'purpleColor'
    'body': 'purpleColor()'
  'NSColor.redColor':
    'prefix': 'redColor'
    'body': 'redColor()'
  'redComponent':
    'prefix': 'redComponent'
    'body': 'redComponent()'
  'saturationComponent':
    'prefix': 'saturationComponent'
    'body': 'saturationComponent()'
  'NSColor.scrollBarColor':
    'prefix': 'scrollBarColor'
    'body': 'scrollBarColor()'
  'NSColor.secondarySelectedControlColor':
    'prefix': 'secondarySelectedControlColor'
    'body': 'secondarySelectedControlColor()'
  'NSColor.selectedControlColor':
    'prefix': 'selectedControlColor'
    'body': 'selectedControlColor()'
  'NSColor.selectedControlTextColor':
    'prefix': 'selectedControlTextColor'
    'body': 'selectedControlTextColor()'
  'NSColor.selectedKnobColor':
    'prefix': 'selectedKnobColor'
    'body': 'selectedKnobColor()'
  'NSColor.selectedMenuItemColor':
    'prefix': 'selectedMenuItemColor'
    'body': 'selectedMenuItemColor()'
  'NSColor.selectedMenuItemTextColor':
    'prefix': 'selectedMenuItemTextColor'
    'body': 'selectedMenuItemTextColor()'
  'NSColor.selectedTextBackgroundColor':
    'prefix': 'selectedTextBackgroundColor'
    'body': 'selectedTextBackgroundColor()'
  'NSColor.selectedTextColor':
    'prefix': 'selectedTextColor'
    'body': 'selectedTextColor()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setFill':
    'prefix': 'setFill'
    'body': 'setFill()'
  'NSColor.setIgnoresAlpha:':
    'prefix': 'setIgnoresAlpha:'
    'body': 'setIgnoresAlpha(${1:BOOL flag})'
  'setStroke':
    'prefix': 'setStroke'
    'body': 'setStroke()'
  'NSColor.shadowColor':
    'prefix': 'shadowColor'
    'body': 'shadowColor()'
  'shadowWithLevel:':
    'prefix': 'shadowWithLevel:'
    'body': 'shadowWithLevel(${1:CGFloat val})'
  'NSColor.textBackgroundColor':
    'prefix': 'textBackgroundColor'
    'body': 'textBackgroundColor()'
  'NSColor.textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'NSColor.underPageBackgroundColor':
    'prefix': 'underPageBackgroundColor'
    'body': 'underPageBackgroundColor()'
  'NSColor.whiteColor':
    'prefix': 'whiteColor'
    'body': 'whiteColor()'
  'whiteComponent':
    'prefix': 'whiteComponent'
    'body': 'whiteComponent()'
  'NSColor.windowBackgroundColor':
    'prefix': 'windowBackgroundColor'
    'body': 'windowBackgroundColor()'
  'NSColor.windowFrameColor':
    'prefix': 'windowFrameColor'
    'body': 'windowFrameColor()'
  'NSColor.windowFrameTextColor':
    'prefix': 'windowFrameTextColor'
    'body': 'windowFrameTextColor()'
  'writeToPasteboard:':
    'prefix': 'writeToPasteboard:'
    'body': 'writeToPasteboard(${1:NSPasteboard* pasteBoard})'
  'NSColor.yellowColor':
    'prefix': 'yellowColor'
    'body': 'yellowColor()'
  'yellowComponent':
    'prefix': 'yellowComponent'
    'body': 'yellowComponent()'
  'allKeys':
    'prefix': 'allKeys'
    'body': 'allKeys()'
  'NSColorList.availableColorLists':
    'prefix': 'availableColorLists'
    'body': 'availableColorLists()'
  'NSColorList.colorListNamed:':
    'prefix': 'colorListNamed:'
    'body': 'colorListNamed(${1:NSString* name})'
  'colorWithKey:':
    'prefix': 'colorWithKey:'
    'body': 'colorWithKey(${1:NSString* key})'
  'initWithName:':
    'prefix': 'initWithName:'
    'body': 'initWithName(${1:NSString* name})'
  'initWithName:fromFile:':
    'prefix': 'initWithName:fromFile:'
    'body': 'initWithName(${1:NSString* name}, fromFile:${2:NSString* path})'
  'insertColor:key:atIndex:':
    'prefix': 'insertColor:key:atIndex:'
    'body': 'insertColor(${1:NSColor* color}, key:${2:NSString* key}, atIndex:${3:NSUInteger loc})'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'removeColorWithKey:':
    'prefix': 'removeColorWithKey:'
    'body': 'removeColorWithKey(${1:NSString* key})'
  'removeFile':
    'prefix': 'removeFile'
    'body': 'removeFile()'
  'setColor:forKey:':
    'prefix': 'setColor:forKey:'
    'body': 'setColor(${1:NSColor* color}, forKey:${2:NSString* key})'
  'writeToFile:':
    'prefix': 'writeToFile:'
    'body': 'writeToFile(${1:NSString* path})'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'alpha':
    'prefix': 'alpha'
    'body': 'alpha()'
  'attachColorList:':
    'prefix': 'attachColorList:'
    'body': 'attachColorList(${1:NSColorList* colorList})'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'detachColorList:':
    'prefix': 'detachColorList:'
    'body': 'detachColorList(${1:NSColorList* colorList})'
  'NSColorPanel.dragColor:withEvent:fromView:':
    'prefix': 'dragColor:withEvent:fromView:'
    'body': 'dragColor(${1:NSColor* color}, withEvent:${2:NSEvent* theEvent}, fromView:${3:NSView* sourceView})'
  'isContinuous':
    'prefix': 'isContinuous'
    'body': 'isContinuous()'
  'mode':
    'prefix': 'mode'
    'body': 'mode()'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* aView})'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:NSColor* color})'
  'setContinuous:':
    'prefix': 'setContinuous:'
    'body': 'setContinuous(${1:BOOL flag})'
  'setMode:':
    'prefix': 'setMode:'
    'body': 'setMode(${1:NSColorPanelMode mode})'
  'NSColorPanel.setPickerMask:':
    'prefix': 'setPickerMask:'
    'body': 'setPickerMask(${1:NSUInteger mask})'
  'NSColorPanel.setPickerMode:':
    'prefix': 'setPickerMode:'
    'body': 'setPickerMode(${1:NSColorPanelMode mode})'
  'setShowsAlpha:':
    'prefix': 'setShowsAlpha:'
    'body': 'setShowsAlpha(${1:BOOL flag})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id anObject})'
  'NSColorPanel.sharedColorPanel':
    'prefix': 'sharedColorPanel'
    'body': 'sharedColorPanel()'
  'NSColorPanel.sharedColorPanelExists':
    'prefix': 'sharedColorPanelExists'
    'body': 'sharedColorPanelExists()'
  'showsAlpha':
    'prefix': 'showsAlpha'
    'body': 'showsAlpha()'
  'attachColorList:':
    'prefix': 'attachColorList:'
    'body': 'attachColorList(${1:NSColorList* colorList})'
  'buttonToolTip':
    'prefix': 'buttonToolTip'
    'body': 'buttonToolTip()'
  'colorPanel':
    'prefix': 'colorPanel'
    'body': 'colorPanel()'
  'detachColorList:':
    'prefix': 'detachColorList:'
    'body': 'detachColorList(${1:NSColorList* colorList})'
  'initWithPickerMask:colorPanel:':
    'prefix': 'initWithPickerMask:colorPanel:'
    'body': 'initWithPickerMask(${1:NSUInteger mask}, colorPanel:${2:NSColorPanel* owningColorPanel})'
  'insertNewButtonImage:in:':
    'prefix': 'insertNewButtonImage:in:'
    'body': 'insertNewButtonImage(${1:NSImage* newButtonImage}, in:${2:NSButtonCell* buttonCell})'
  'minContentSize':
    'prefix': 'minContentSize'
    'body': 'minContentSize()'
  'provideNewButtonImage':
    'prefix': 'provideNewButtonImage'
    'body': 'provideNewButtonImage()'
  'setMode:':
    'prefix': 'setMode:'
    'body': 'setMode(${1:NSColorPanelMode mode})'
  'viewSizeChanged:':
    'prefix': 'viewSizeChanged:'
    'body': 'viewSizeChanged(${1:id sender})'
  'CGColorSpace':
    'prefix': 'CGColorSpace'
    'body': 'CGColorSpace()'
  'ICCProfileData':
    'prefix': 'ICCProfileData'
    'body': 'ICCProfileData()'
  'NSColorSpace.adobeRGB1998ColorSpace':
    'prefix': 'adobeRGB1998ColorSpace'
    'body': 'adobeRGB1998ColorSpace()'
  'NSColorSpace.availableColorSpacesWithModel:':
    'prefix': 'availableColorSpacesWithModel:'
    'body': 'availableColorSpacesWithModel(${1:NSColorSpaceModel model})'
  'colorSpaceModel':
    'prefix': 'colorSpaceModel'
    'body': 'colorSpaceModel()'
  'colorSyncProfile':
    'prefix': 'colorSyncProfile'
    'body': 'colorSyncProfile()'
  'NSColorSpace.deviceCMYKColorSpace':
    'prefix': 'deviceCMYKColorSpace'
    'body': 'deviceCMYKColorSpace()'
  'NSColorSpace.deviceGrayColorSpace':
    'prefix': 'deviceGrayColorSpace'
    'body': 'deviceGrayColorSpace()'
  'NSColorSpace.deviceRGBColorSpace':
    'prefix': 'deviceRGBColorSpace'
    'body': 'deviceRGBColorSpace()'
  'NSColorSpace.genericCMYKColorSpace':
    'prefix': 'genericCMYKColorSpace'
    'body': 'genericCMYKColorSpace()'
  'NSColorSpace.genericGamma22GrayColorSpace':
    'prefix': 'genericGamma22GrayColorSpace'
    'body': 'genericGamma22GrayColorSpace()'
  'NSColorSpace.genericGrayColorSpace':
    'prefix': 'genericGrayColorSpace'
    'body': 'genericGrayColorSpace()'
  'NSColorSpace.genericRGBColorSpace':
    'prefix': 'genericRGBColorSpace'
    'body': 'genericRGBColorSpace()'
  'initWithCGColorSpace:':
    'prefix': 'initWithCGColorSpace:'
    'body': 'initWithCGColorSpace(${1:CGColorSpaceRef cgColorSpace})'
  'initWithColorSyncProfile:':
    'prefix': 'initWithColorSyncProfile:'
    'body': 'initWithColorSyncProfile(${1:void* prof})'
  'initWithICCProfileData:':
    'prefix': 'initWithICCProfileData:'
    'body': 'initWithICCProfileData(${1:NSData* iccData})'
  'localizedName':
    'prefix': 'localizedName'
    'body': 'localizedName()'
  'numberOfColorComponents':
    'prefix': 'numberOfColorComponents'
    'body': 'numberOfColorComponents()'
  'NSColorSpace.sRGBColorSpace':
    'prefix': 'sRGBColorSpace'
    'body': 'sRGBColorSpace()'
  'activate:':
    'prefix': 'activate:'
    'body': 'activate(${1:BOOL exclusive})'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'deactivate':
    'prefix': 'deactivate'
    'body': 'deactivate()'
  'drawWellInside:':
    'prefix': 'drawWellInside:'
    'body': 'drawWellInside(${1:NSRect insideRect})'
  'isActive':
    'prefix': 'isActive'
    'body': 'isActive()'
  'isBordered':
    'prefix': 'isBordered'
    'body': 'isBordered()'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:NSColor* color})'
  'takeColorFrom:':
    'prefix': 'takeColorFrom:'
    'body': 'takeColorFrom(${1:id sender})'
  'addItemWithObjectValue:':
    'prefix': 'addItemWithObjectValue:'
    'body': 'addItemWithObjectValue(${1:id object})'
  'addItemsWithObjectValues:':
    'prefix': 'addItemsWithObjectValues:'
    'body': 'addItemsWithObjectValues(${1:NSArray* objects})'
  'completes':
    'prefix': 'completes'
    'body': 'completes()'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deselectItemAtIndex:':
    'prefix': 'deselectItemAtIndex:'
    'body': 'deselectItemAtIndex(${1:NSInteger index})'
  'hasVerticalScroller':
    'prefix': 'hasVerticalScroller'
    'body': 'hasVerticalScroller()'
  'indexOfItemWithObjectValue:':
    'prefix': 'indexOfItemWithObjectValue:'
    'body': 'indexOfItemWithObjectValue(${1:id object})'
  'indexOfSelectedItem':
    'prefix': 'indexOfSelectedItem'
    'body': 'indexOfSelectedItem()'
  'insertItemWithObjectValue:atIndex:':
    'prefix': 'insertItemWithObjectValue:atIndex:'
    'body': 'insertItemWithObjectValue(${1:id object}, atIndex:${2:NSInteger index})'
  'intercellSpacing':
    'prefix': 'intercellSpacing'
    'body': 'intercellSpacing()'
  'isButtonBordered':
    'prefix': 'isButtonBordered'
    'body': 'isButtonBordered()'
  'itemHeight':
    'prefix': 'itemHeight'
    'body': 'itemHeight()'
  'itemObjectValueAtIndex:':
    'prefix': 'itemObjectValueAtIndex:'
    'body': 'itemObjectValueAtIndex(${1:NSInteger index})'
  'noteNumberOfItemsChanged':
    'prefix': 'noteNumberOfItemsChanged'
    'body': 'noteNumberOfItemsChanged()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'numberOfVisibleItems':
    'prefix': 'numberOfVisibleItems'
    'body': 'numberOfVisibleItems()'
  'objectValueOfSelectedItem':
    'prefix': 'objectValueOfSelectedItem'
    'body': 'objectValueOfSelectedItem()'
  'objectValues':
    'prefix': 'objectValues'
    'body': 'objectValues()'
  'reloadData':
    'prefix': 'reloadData'
    'body': 'reloadData()'
  'removeAllItems':
    'prefix': 'removeAllItems'
    'body': 'removeAllItems()'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'removeItemWithObjectValue:':
    'prefix': 'removeItemWithObjectValue:'
    'body': 'removeItemWithObjectValue(${1:id object})'
  'scrollItemAtIndexToTop:':
    'prefix': 'scrollItemAtIndexToTop:'
    'body': 'scrollItemAtIndexToTop(${1:NSInteger index})'
  'scrollItemAtIndexToVisible:':
    'prefix': 'scrollItemAtIndexToVisible:'
    'body': 'scrollItemAtIndexToVisible(${1:NSInteger index})'
  'selectItemAtIndex:':
    'prefix': 'selectItemAtIndex:'
    'body': 'selectItemAtIndex(${1:NSInteger index})'
  'selectItemWithObjectValue:':
    'prefix': 'selectItemWithObjectValue:'
    'body': 'selectItemWithObjectValue(${1:id object})'
  'setButtonBordered:':
    'prefix': 'setButtonBordered:'
    'body': 'setButtonBordered(${1:BOOL flag})'
  'setCompletes:':
    'prefix': 'setCompletes:'
    'body': 'setCompletes(${1:BOOL completes})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id aSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setHasVerticalScroller:':
    'prefix': 'setHasVerticalScroller:'
    'body': 'setHasVerticalScroller(${1:BOOL flag})'
  'setIntercellSpacing:':
    'prefix': 'setIntercellSpacing:'
    'body': 'setIntercellSpacing(${1:NSSize aSize})'
  'setItemHeight:':
    'prefix': 'setItemHeight:'
    'body': 'setItemHeight(${1:CGFloat itemHeight})'
  'setNumberOfVisibleItems:':
    'prefix': 'setNumberOfVisibleItems:'
    'body': 'setNumberOfVisibleItems(${1:NSInteger visibleItems})'
  'setUsesDataSource:':
    'prefix': 'setUsesDataSource:'
    'body': 'setUsesDataSource(${1:BOOL flag})'
  'usesDataSource':
    'prefix': 'usesDataSource'
    'body': 'usesDataSource()'
  'addItemWithObjectValue:':
    'prefix': 'addItemWithObjectValue:'
    'body': 'addItemWithObjectValue(${1:id object})'
  'addItemsWithObjectValues:':
    'prefix': 'addItemsWithObjectValues:'
    'body': 'addItemsWithObjectValues(${1:NSArray* objects})'
  'completedString:':
    'prefix': 'completedString:'
    'body': 'completedString(${1:NSString* string})'
  'completes':
    'prefix': 'completes'
    'body': 'completes()'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'deselectItemAtIndex:':
    'prefix': 'deselectItemAtIndex:'
    'body': 'deselectItemAtIndex(${1:NSInteger index})'
  'hasVerticalScroller':
    'prefix': 'hasVerticalScroller'
    'body': 'hasVerticalScroller()'
  'indexOfItemWithObjectValue:':
    'prefix': 'indexOfItemWithObjectValue:'
    'body': 'indexOfItemWithObjectValue(${1:id object})'
  'indexOfSelectedItem':
    'prefix': 'indexOfSelectedItem'
    'body': 'indexOfSelectedItem()'
  'insertItemWithObjectValue:atIndex:':
    'prefix': 'insertItemWithObjectValue:atIndex:'
    'body': 'insertItemWithObjectValue(${1:id object}, atIndex:${2:NSInteger index})'
  'intercellSpacing':
    'prefix': 'intercellSpacing'
    'body': 'intercellSpacing()'
  'isButtonBordered':
    'prefix': 'isButtonBordered'
    'body': 'isButtonBordered()'
  'itemHeight':
    'prefix': 'itemHeight'
    'body': 'itemHeight()'
  'itemObjectValueAtIndex:':
    'prefix': 'itemObjectValueAtIndex:'
    'body': 'itemObjectValueAtIndex(${1:NSInteger index})'
  'noteNumberOfItemsChanged':
    'prefix': 'noteNumberOfItemsChanged'
    'body': 'noteNumberOfItemsChanged()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'numberOfVisibleItems':
    'prefix': 'numberOfVisibleItems'
    'body': 'numberOfVisibleItems()'
  'objectValueOfSelectedItem':
    'prefix': 'objectValueOfSelectedItem'
    'body': 'objectValueOfSelectedItem()'
  'objectValues':
    'prefix': 'objectValues'
    'body': 'objectValues()'
  'reloadData':
    'prefix': 'reloadData'
    'body': 'reloadData()'
  'removeAllItems':
    'prefix': 'removeAllItems'
    'body': 'removeAllItems()'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'removeItemWithObjectValue:':
    'prefix': 'removeItemWithObjectValue:'
    'body': 'removeItemWithObjectValue(${1:id object})'
  'scrollItemAtIndexToTop:':
    'prefix': 'scrollItemAtIndexToTop:'
    'body': 'scrollItemAtIndexToTop(${1:NSInteger index})'
  'scrollItemAtIndexToVisible:':
    'prefix': 'scrollItemAtIndexToVisible:'
    'body': 'scrollItemAtIndexToVisible(${1:NSInteger index})'
  'selectItemAtIndex:':
    'prefix': 'selectItemAtIndex:'
    'body': 'selectItemAtIndex(${1:NSInteger index})'
  'selectItemWithObjectValue:':
    'prefix': 'selectItemWithObjectValue:'
    'body': 'selectItemWithObjectValue(${1:id object})'
  'setButtonBordered:':
    'prefix': 'setButtonBordered:'
    'body': 'setButtonBordered(${1:BOOL flag})'
  'setCompletes:':
    'prefix': 'setCompletes:'
    'body': 'setCompletes(${1:BOOL completes})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id aSource})'
  'setHasVerticalScroller:':
    'prefix': 'setHasVerticalScroller:'
    'body': 'setHasVerticalScroller(${1:BOOL flag})'
  'setIntercellSpacing:':
    'prefix': 'setIntercellSpacing:'
    'body': 'setIntercellSpacing(${1:NSSize aSize})'
  'setItemHeight:':
    'prefix': 'setItemHeight:'
    'body': 'setItemHeight(${1:CGFloat itemHeight})'
  'setNumberOfVisibleItems:':
    'prefix': 'setNumberOfVisibleItems:'
    'body': 'setNumberOfVisibleItems(${1:NSInteger visibleItems})'
  'setUsesDataSource:':
    'prefix': 'setUsesDataSource:'
    'body': 'setUsesDataSource(${1:BOOL flag})'
  'usesDataSource':
    'prefix': 'usesDataSource'
    'body': 'usesDataSource()'
  'abortEditing':
    'prefix': 'abortEditing'
    'body': 'abortEditing()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'allowsExpansionToolTips':
    'prefix': 'allowsExpansionToolTips'
    'body': 'allowsExpansionToolTips()'
  'attributedStringValue':
    'prefix': 'attributedStringValue'
    'body': 'attributedStringValue()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'calcSize':
    'prefix': 'calcSize'
    'body': 'calcSize()'
  'cell':
    'prefix': 'cell'
    'body': 'cell()'
  'NSControl.cellClass':
    'prefix': 'cellClass'
    'body': 'cellClass()'
  'currentEditor':
    'prefix': 'currentEditor'
    'body': 'currentEditor()'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'drawCell:':
    'prefix': 'drawCell:'
    'body': 'drawCell(${1:NSCell* aCell})'
  'drawCellInside:':
    'prefix': 'drawCellInside:'
    'body': 'drawCellInside(${1:NSCell* aCell})'
  'floatValue':
    'prefix': 'floatValue'
    'body': 'floatValue()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'formatter':
    'prefix': 'formatter'
    'body': 'formatter()'
  'ignoresMultiClick':
    'prefix': 'ignoresMultiClick'
    'body': 'ignoresMultiClick()'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:NSRect frameRect})'
  'intValue':
    'prefix': 'intValue'
    'body': 'intValue()'
  'integerValue':
    'prefix': 'integerValue'
    'body': 'integerValue()'
  'invalidateIntrinsicContentSizeForCell:':
    'prefix': 'invalidateIntrinsicContentSizeForCell:'
    'body': 'invalidateIntrinsicContentSizeForCell(${1:NSCell* cell})'
  'isContinuous':
    'prefix': 'isContinuous'
    'body': 'isContinuous()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'mouseDown:':
    'prefix': 'mouseDown:'
    'body': 'mouseDown(${1:NSEvent* theEvent})'
  'objectValue':
    'prefix': 'objectValue'
    'body': 'objectValue()'
  'performClick:':
    'prefix': 'performClick:'
    'body': 'performClick(${1:id sender})'
  'refusesFirstResponder':
    'prefix': 'refusesFirstResponder'
    'body': 'refusesFirstResponder()'
  'selectCell:':
    'prefix': 'selectCell:'
    'body': 'selectCell(${1:NSCell* aCell})'
  'selectedCell':
    'prefix': 'selectedCell'
    'body': 'selectedCell()'
  'selectedTag':
    'prefix': 'selectedTag'
    'body': 'selectedTag()'
  'sendAction:to:':
    'prefix': 'sendAction:to:'
    'body': 'sendAction(${1:SEL theAction}, to:${2:id theTarget})'
  'sendActionOn:':
    'prefix': 'sendActionOn:'
    'body': 'sendActionOn(${1:NSInteger mask})'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSTextAlignment mode})'
  'setAllowsExpansionToolTips:':
    'prefix': 'setAllowsExpansionToolTips:'
    'body': 'setAllowsExpansionToolTips(${1:BOOL value})'
  'setAttributedStringValue:':
    'prefix': 'setAttributedStringValue:'
    'body': 'setAttributedStringValue(${1:NSAttributedString* obj})'
  'setBaseWritingDirection:':
    'prefix': 'setBaseWritingDirection:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setCell:':
    'prefix': 'setCell:'
    'body': 'setCell(${1:NSCell* aCell})'
  'NSControl.setCellClass:':
    'prefix': 'setCellClass:'
    'body': 'setCellClass(${1:Class factoryId})'
  'setContinuous:':
    'prefix': 'setContinuous:'
    'body': 'setContinuous(${1:BOOL flag})'
  'setDoubleValue:':
    'prefix': 'setDoubleValue:'
    'body': 'setDoubleValue(${1:double aDouble})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL flag})'
  'setFloatValue:':
    'prefix': 'setFloatValue:'
    'body': 'setFloatValue(${1:float aFloat})'
  'setFloatingPointFormat:left:right:':
    'prefix': 'setFloatingPointFormat:left:right:'
    'body': 'setFloatingPointFormat(${1:BOOL autoRange}, left:${2:NSUInteger leftDigits}, right:${3:NSUInteger rightDigits})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* fontObj})'
  'setFormatter:':
    'prefix': 'setFormatter:'
    'body': 'setFormatter(${1:NSFormatter* newFormatter})'
  'setIgnoresMultiClick:':
    'prefix': 'setIgnoresMultiClick:'
    'body': 'setIgnoresMultiClick(${1:BOOL flag})'
  'setIntValue:':
    'prefix': 'setIntValue:'
    'body': 'setIntValue(${1:int anInt})'
  'setIntegerValue:':
    'prefix': 'setIntegerValue:'
    'body': 'setIntegerValue(${1:NSInteger anInteger})'
  'setNeedsDisplay':
    'prefix': 'setNeedsDisplay'
    'body': 'setNeedsDisplay()'
  'setObjectValue:':
    'prefix': 'setObjectValue:'
    'body': 'setObjectValue(${1:id obj})'
  'setRefusesFirstResponder:':
    'prefix': 'setRefusesFirstResponder:'
    'body': 'setRefusesFirstResponder(${1:BOOL flag})'
  'setStringValue:':
    'prefix': 'setStringValue:'
    'body': 'setStringValue(${1:NSString* aString})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger anInt})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id anObject})'
  'setUserInterfaceLayoutDirection:':
    'prefix': 'setUserInterfaceLayoutDirection:'
    'body': 'setUserInterfaceLayoutDirection(${1:NSUserInterfaceLayoutDirection value})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'stringValue':
    'prefix': 'stringValue'
    'body': 'stringValue()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'takeDoubleValueFrom:':
    'prefix': 'takeDoubleValueFrom:'
    'body': 'takeDoubleValueFrom(${1:id sender})'
  'takeFloatValueFrom:':
    'prefix': 'takeFloatValueFrom:'
    'body': 'takeFloatValueFrom(${1:id sender})'
  'takeIntValueFrom:':
    'prefix': 'takeIntValueFrom:'
    'body': 'takeIntValueFrom(${1:id sender})'
  'takeIntegerValueFrom:':
    'prefix': 'takeIntegerValueFrom:'
    'body': 'takeIntegerValueFrom(${1:id sender})'
  'takeObjectValueFrom:':
    'prefix': 'takeObjectValueFrom:'
    'body': 'takeObjectValueFrom(${1:id sender})'
  'takeStringValueFrom:':
    'prefix': 'takeStringValueFrom:'
    'body': 'takeStringValueFrom(${1:id sender})'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'updateCell:':
    'prefix': 'updateCell:'
    'body': 'updateCell(${1:NSCell* aCell})'
  'updateCellInside:':
    'prefix': 'updateCellInside:'
    'body': 'updateCellInside(${1:NSCell* aCell})'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'validateEditing':
    'prefix': 'validateEditing'
    'body': 'validateEditing()'
  'commitEditing':
    'prefix': 'commitEditing'
    'body': 'commitEditing()'
  'commitEditingWithDelegate:didCommitSelector:contextInfo:':
    'prefix': 'commitEditingWithDelegate:didCommitSelector:contextInfo:'
    'body': 'commitEditingWithDelegate(${1:id delegate}, didCommitSelector:${2:SEL didCommitSelector}, contextInfo:${3:void* contextInfo})'
  'discardEditing':
    'prefix': 'discardEditing'
    'body': 'discardEditing()'
  'isEditing':
    'prefix': 'isEditing'
    'body': 'isEditing()'
  'objectDidBeginEditing:':
    'prefix': 'objectDidBeginEditing:'
    'body': 'objectDidBeginEditing(${1:id editor})'
  'objectDidEndEditing:':
    'prefix': 'objectDidEndEditing:'
    'body': 'objectDidEndEditing(${1:id editor})'
  'NSCursor.IBeamCursor':
    'prefix': 'IBeamCursor'
    'body': 'IBeamCursor()'
  'NSCursor.IBeamCursorForVerticalLayout':
    'prefix': 'IBeamCursorForVerticalLayout'
    'body': 'IBeamCursorForVerticalLayout()'
  'NSCursor.arrowCursor':
    'prefix': 'arrowCursor'
    'body': 'arrowCursor()'
  'NSCursor.closedHandCursor':
    'prefix': 'closedHandCursor'
    'body': 'closedHandCursor()'
  'NSCursor.contextualMenuCursor':
    'prefix': 'contextualMenuCursor'
    'body': 'contextualMenuCursor()'
  'NSCursor.crosshairCursor':
    'prefix': 'crosshairCursor'
    'body': 'crosshairCursor()'
  'NSCursor.currentCursor':
    'prefix': 'currentCursor'
    'body': 'currentCursor()'
  'NSCursor.currentSystemCursor':
    'prefix': 'currentSystemCursor'
    'body': 'currentSystemCursor()'
  'NSCursor.disappearingItemCursor':
    'prefix': 'disappearingItemCursor'
    'body': 'disappearingItemCursor()'
  'NSCursor.dragCopyCursor':
    'prefix': 'dragCopyCursor'
    'body': 'dragCopyCursor()'
  'NSCursor.dragLinkCursor':
    'prefix': 'dragLinkCursor'
    'body': 'dragLinkCursor()'
  'NSCursor.hide':
    'prefix': 'hide'
    'body': 'hide()'
  'hotSpot':
    'prefix': 'hotSpot'
    'body': 'hotSpot()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:':
    'prefix': 'initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'
    'body': 'initWithImage(${1:NSImage* newImage}, foregroundColorHint:${2:NSColor* fg}, backgroundColorHint:${3:NSColor* bg}, hotSpot:${4:NSPoint hotSpot})'
  'initWithImage:hotSpot:':
    'prefix': 'initWithImage:hotSpot:'
    'body': 'initWithImage(${1:NSImage* newImage}, hotSpot:${2:NSPoint aPoint})'
  'isSetOnMouseEntered':
    'prefix': 'isSetOnMouseEntered'
    'body': 'isSetOnMouseEntered()'
  'isSetOnMouseExited':
    'prefix': 'isSetOnMouseExited'
    'body': 'isSetOnMouseExited()'
  'mouseEntered:':
    'prefix': 'mouseEntered:'
    'body': 'mouseEntered(${1:NSEvent* theEvent})'
  'mouseExited:':
    'prefix': 'mouseExited:'
    'body': 'mouseExited(${1:NSEvent* theEvent})'
  'NSCursor.openHandCursor':
    'prefix': 'openHandCursor'
    'body': 'openHandCursor()'
  'NSCursor.operationNotAllowedCursor':
    'prefix': 'operationNotAllowedCursor'
    'body': 'operationNotAllowedCursor()'
  'NSCursor.pointingHandCursor':
    'prefix': 'pointingHandCursor'
    'body': 'pointingHandCursor()'
  'NSCursor.pop':
    'prefix': 'pop'
    'body': 'pop()'
  'pop':
    'prefix': 'pop'
    'body': 'pop()'
  'push':
    'prefix': 'push'
    'body': 'push()'
  'NSCursor.resizeDownCursor':
    'prefix': 'resizeDownCursor'
    'body': 'resizeDownCursor()'
  'NSCursor.resizeLeftCursor':
    'prefix': 'resizeLeftCursor'
    'body': 'resizeLeftCursor()'
  'NSCursor.resizeLeftRightCursor':
    'prefix': 'resizeLeftRightCursor'
    'body': 'resizeLeftRightCursor()'
  'NSCursor.resizeRightCursor':
    'prefix': 'resizeRightCursor'
    'body': 'resizeRightCursor()'
  'NSCursor.resizeUpCursor':
    'prefix': 'resizeUpCursor'
    'body': 'resizeUpCursor()'
  'NSCursor.resizeUpDownCursor':
    'prefix': 'resizeUpDownCursor'
    'body': 'resizeUpDownCursor()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'NSCursor.setHiddenUntilMouseMoves:':
    'prefix': 'setHiddenUntilMouseMoves:'
    'body': 'setHiddenUntilMouseMoves(${1:BOOL flag})'
  'setOnMouseEntered:':
    'prefix': 'setOnMouseEntered:'
    'body': 'setOnMouseEntered(${1:BOOL flag})'
  'setOnMouseExited:':
    'prefix': 'setOnMouseExited:'
    'body': 'setOnMouseExited(${1:BOOL flag})'
  'NSCursor.unhide':
    'prefix': 'unhide'
    'body': 'unhide()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawSelector':
    'prefix': 'drawSelector'
    'body': 'drawSelector()'
  'drawingHandler':
    'prefix': 'drawingHandler'
    'body': 'drawingHandler()'
  'initWithDrawSelector:delegate:':
    'prefix': 'initWithDrawSelector:delegate:'
    'body': 'initWithDrawSelector(${1:SEL aMethod}, delegate:${2:id anObject})'
  'initWithSize:flipped:drawingHandler:':
    'prefix': 'initWithSize:flipped:drawingHandler:'
    'body': 'initWithSize(${1:NSSize size}, flipped:${2:BOOL drawingHandlerShouldBeCalledWithFlippedContext}, drawingHandler:${3:BOOL (^)(NSRect) drawingHandler})'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'calendar':
    'prefix': 'calendar'
    'body': 'calendar()'
  'datePickerElements':
    'prefix': 'datePickerElements'
    'body': 'datePickerElements()'
  'datePickerMode':
    'prefix': 'datePickerMode'
    'body': 'datePickerMode()'
  'datePickerStyle':
    'prefix': 'datePickerStyle'
    'body': 'datePickerStyle()'
  'dateValue':
    'prefix': 'dateValue'
    'body': 'dateValue()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'isBezeled':
    'prefix': 'isBezeled'
    'body': 'isBezeled()'
  'isBordered':
    'prefix': 'isBordered'
    'body': 'isBordered()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'maxDate':
    'prefix': 'maxDate'
    'body': 'maxDate()'
  'minDate':
    'prefix': 'minDate'
    'body': 'minDate()'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBezeled:':
    'prefix': 'setBezeled:'
    'body': 'setBezeled(${1:BOOL flag})'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setCalendar:':
    'prefix': 'setCalendar:'
    'body': 'setCalendar(${1:NSCalendar* newCalendar})'
  'setDatePickerElements:':
    'prefix': 'setDatePickerElements:'
    'body': 'setDatePickerElements(${1:NSDatePickerElementFlags elementFlags})'
  'setDatePickerMode:':
    'prefix': 'setDatePickerMode:'
    'body': 'setDatePickerMode(${1:NSDatePickerMode newMode})'
  'setDatePickerStyle:':
    'prefix': 'setDatePickerStyle:'
    'body': 'setDatePickerStyle(${1:NSDatePickerStyle newStyle})'
  'setDateValue:':
    'prefix': 'setDateValue:'
    'body': 'setDateValue(${1:NSDate* newStartDate})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* newLocale})'
  'setMaxDate:':
    'prefix': 'setMaxDate:'
    'body': 'setMaxDate(${1:NSDate* date})'
  'setMinDate:':
    'prefix': 'setMinDate:'
    'body': 'setMinDate(${1:NSDate* date})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:NSColor* color})'
  'setTimeInterval:':
    'prefix': 'setTimeInterval:'
    'body': 'setTimeInterval(${1:NSTimeInterval newTimeInterval})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* newTimeZone})'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'timeInterval':
    'prefix': 'timeInterval'
    'body': 'timeInterval()'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'calendar':
    'prefix': 'calendar'
    'body': 'calendar()'
  'datePickerElements':
    'prefix': 'datePickerElements'
    'body': 'datePickerElements()'
  'datePickerMode':
    'prefix': 'datePickerMode'
    'body': 'datePickerMode()'
  'datePickerStyle':
    'prefix': 'datePickerStyle'
    'body': 'datePickerStyle()'
  'dateValue':
    'prefix': 'dateValue'
    'body': 'dateValue()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'locale':
    'prefix': 'locale'
    'body': 'locale()'
  'maxDate':
    'prefix': 'maxDate'
    'body': 'maxDate()'
  'minDate':
    'prefix': 'minDate'
    'body': 'minDate()'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setCalendar:':
    'prefix': 'setCalendar:'
    'body': 'setCalendar(${1:NSCalendar* newCalendar})'
  'setDatePickerElements:':
    'prefix': 'setDatePickerElements:'
    'body': 'setDatePickerElements(${1:NSDatePickerElementFlags elementFlags})'
  'setDatePickerMode:':
    'prefix': 'setDatePickerMode:'
    'body': 'setDatePickerMode(${1:NSDatePickerMode newMode})'
  'setDatePickerStyle:':
    'prefix': 'setDatePickerStyle:'
    'body': 'setDatePickerStyle(${1:NSDatePickerStyle newStyle})'
  'setDateValue:':
    'prefix': 'setDateValue:'
    'body': 'setDateValue(${1:NSDate* newStartDate})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setLocale:':
    'prefix': 'setLocale:'
    'body': 'setLocale(${1:NSLocale* newLocale})'
  'setMaxDate:':
    'prefix': 'setMaxDate:'
    'body': 'setMaxDate(${1:NSDate* date})'
  'setMinDate:':
    'prefix': 'setMinDate:'
    'body': 'setMinDate(${1:NSDate* date})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:NSColor* color})'
  'setTimeInterval:':
    'prefix': 'setTimeInterval:'
    'body': 'setTimeInterval(${1:NSTimeInterval newTimeInterval})'
  'setTimeZone:':
    'prefix': 'setTimeZone:'
    'body': 'setTimeZone(${1:NSTimeZone* newTimeZone})'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'timeInterval':
    'prefix': 'timeInterval'
    'body': 'timeInterval()'
  'timeZone':
    'prefix': 'timeZone'
    'body': 'timeZone()'
  'excludedKeys':
    'prefix': 'excludedKeys'
    'body': 'excludedKeys()'
  'includedKeys':
    'prefix': 'includedKeys'
    'body': 'includedKeys()'
  'initialKey':
    'prefix': 'initialKey'
    'body': 'initialKey()'
  'initialValue':
    'prefix': 'initialValue'
    'body': 'initialValue()'
  'localizedKeyDictionary':
    'prefix': 'localizedKeyDictionary'
    'body': 'localizedKeyDictionary()'
  'localizedKeyTable':
    'prefix': 'localizedKeyTable'
    'body': 'localizedKeyTable()'
  'newObject':
    'prefix': 'newObject'
    'body': 'newObject()'
  'setExcludedKeys:':
    'prefix': 'setExcludedKeys:'
    'body': 'setExcludedKeys(${1:NSArray* keys})'
  'setIncludedKeys:':
    'prefix': 'setIncludedKeys:'
    'body': 'setIncludedKeys(${1:NSArray* keys})'
  'setInitialKey:':
    'prefix': 'setInitialKey:'
    'body': 'setInitialKey(${1:NSString* key})'
  'setInitialValue:':
    'prefix': 'setInitialValue:'
    'body': 'setInitialValue(${1:id value})'
  'setLocalizedKeyDictionary:':
    'prefix': 'setLocalizedKeyDictionary:'
    'body': 'setLocalizedKeyDictionary(${1:NSDictionary* dictionary})'
  'setLocalizedKeyTable:':
    'prefix': 'setLocalizedKeyTable:'
    'body': 'setLocalizedKeyTable(${1:NSString* stringsFileName})'
  'badgeLabel':
    'prefix': 'badgeLabel'
    'body': 'badgeLabel()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'display':
    'prefix': 'display'
    'body': 'display()'
  'owner':
    'prefix': 'owner'
    'body': 'owner()'
  'setBadgeLabel:':
    'prefix': 'setBadgeLabel:'
    'body': 'setBadgeLabel(${1:NSString* string})'
  'setContentView:':
    'prefix': 'setContentView:'
    'body': 'setContentView(${1:NSView* view})'
  'setShowsApplicationBadge:':
    'prefix': 'setShowsApplicationBadge:'
    'body': 'setShowsApplicationBadge(${1:BOOL flag})'
  'showsApplicationBadge':
    'prefix': 'showsApplicationBadge'
    'body': 'showsApplicationBadge()'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'PDFPrintOperation':
    'prefix': 'PDFPrintOperation'
    'body': 'PDFPrintOperation()'
  'addWindowController:':
    'prefix': 'addWindowController:'
    'body': 'addWindowController(${1:NSWindowController* windowController})'
  'autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:':
    'prefix': 'autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'
    'body': 'autosaveDocumentWithDelegate(${1:id delegate}, didAutosaveSelector:${2:SEL didAutosaveSelector}, contextInfo:${3:void* contextInfo})'
  'autosaveWithImplicitCancellability:completionHandler:':
    'prefix': 'autosaveWithImplicitCancellability:completionHandler:'
    'body': 'autosaveWithImplicitCancellability(${1:BOOL autosavingIsImplicitlyCancellable}, completionHandler:${2:void (^)(NSError *) completionHandler})'
  'autosavedContentsFileURL':
    'prefix': 'autosavedContentsFileURL'
    'body': 'autosavedContentsFileURL()'
  'NSDocument.autosavesDrafts':
    'prefix': 'autosavesDrafts'
    'body': 'autosavesDrafts()'
  'NSDocument.autosavesInPlace':
    'prefix': 'autosavesInPlace'
    'body': 'autosavesInPlace()'
  'autosavingFileType':
    'prefix': 'autosavingFileType'
    'body': 'autosavingFileType()'
  'autosavingIsImplicitlyCancellable':
    'prefix': 'autosavingIsImplicitlyCancellable'
    'body': 'autosavingIsImplicitlyCancellable()'
  'backupFileURL':
    'prefix': 'backupFileURL'
    'body': 'backupFileURL()'
  'browseDocumentVersions:':
    'prefix': 'browseDocumentVersions:'
    'body': 'browseDocumentVersions(${1:id sender})'
  'canAsynchronouslyWriteToURL:ofType:forSaveOperation:':
    'prefix': 'canAsynchronouslyWriteToURL:ofType:forSaveOperation:'
    'body': 'canAsynchronouslyWriteToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation})'
  'canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:':
    'prefix': 'canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'
    'body': 'canCloseDocumentWithDelegate(${1:id delegate}, shouldCloseSelector:${2:SEL shouldCloseSelector}, contextInfo:${3:void* contextInfo})'
  'NSDocument.canConcurrentlyReadDocumentsOfType:':
    'prefix': 'canConcurrentlyReadDocumentsOfType:'
    'body': 'canConcurrentlyReadDocumentsOfType(${1:NSString* typeName})'
  'changeCountTokenForSaveOperation:':
    'prefix': 'changeCountTokenForSaveOperation:'
    'body': 'changeCountTokenForSaveOperation(${1:NSSaveOperationType saveOperation})'
  'checkAutosavingSafetyAndReturnError:':
    'prefix': 'checkAutosavingSafetyAndReturnError:'
    'body': 'checkAutosavingSafetyAndReturnError(${1:NSError** outError})'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'continueActivityUsingBlock:':
    'prefix': 'continueActivityUsingBlock:'
    'body': 'continueActivityUsingBlock(${1:void (^)(void) block})'
  'continueAsynchronousWorkOnMainThreadUsingBlock:':
    'prefix': 'continueAsynchronousWorkOnMainThreadUsingBlock:'
    'body': 'continueAsynchronousWorkOnMainThreadUsingBlock(${1:void (^)(void) block})'
  'dataOfType:error:':
    'prefix': 'dataOfType:error:'
    'body': 'dataOfType(${1:NSString* typeName}, error:${2:NSError** outError})'
  'dataRepresentationOfType:':
    'prefix': 'dataRepresentationOfType:'
    'body': 'dataRepresentationOfType(${1:NSString* type})'
  'defaultDraftName':
    'prefix': 'defaultDraftName'
    'body': 'defaultDraftName()'
  'displayName':
    'prefix': 'displayName'
    'body': 'displayName()'
  'duplicateAndReturnError:':
    'prefix': 'duplicateAndReturnError:'
    'body': 'duplicateAndReturnError(${1:NSError** outError})'
  'duplicateDocument:':
    'prefix': 'duplicateDocument:'
    'body': 'duplicateDocument(${1:id sender})'
  'duplicateDocumentWithDelegate:didDuplicateSelector:contextInfo:':
    'prefix': 'duplicateDocumentWithDelegate:didDuplicateSelector:contextInfo:'
    'body': 'duplicateDocumentWithDelegate(${1:id delegate}, didDuplicateSelector:${2:SEL didDuplicateSelector}, contextInfo:${3:void* contextInfo})'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'fileAttributesToWriteToFile:ofType:saveOperation:':
    'prefix': 'fileAttributesToWriteToFile:ofType:saveOperation:'
    'body': 'fileAttributesToWriteToFile(${1:NSString* fullDocumentPath}, ofType:${2:NSString* documentTypeName}, saveOperation:${3:NSSaveOperationType saveOperationType})'
  'fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:':
    'prefix': 'fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'
    'body': 'fileAttributesToWriteToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, originalContentsURL:${4:NSURL* absoluteOriginalContentsURL}, error:${5:NSError** outError})'
  'fileModificationDate':
    'prefix': 'fileModificationDate'
    'body': 'fileModificationDate()'
  'fileName':
    'prefix': 'fileName'
    'body': 'fileName()'
  'fileNameExtensionForType:saveOperation:':
    'prefix': 'fileNameExtensionForType:saveOperation:'
    'body': 'fileNameExtensionForType(${1:NSString* typeName}, saveOperation:${2:NSSaveOperationType saveOperation})'
  'fileNameExtensionWasHiddenInLastRunSavePanel':
    'prefix': 'fileNameExtensionWasHiddenInLastRunSavePanel'
    'body': 'fileNameExtensionWasHiddenInLastRunSavePanel()'
  'fileType':
    'prefix': 'fileType'
    'body': 'fileType()'
  'fileTypeFromLastRunSavePanel':
    'prefix': 'fileTypeFromLastRunSavePanel'
    'body': 'fileTypeFromLastRunSavePanel()'
  'fileURL':
    'prefix': 'fileURL'
    'body': 'fileURL()'
  'fileWrapperOfType:error:':
    'prefix': 'fileWrapperOfType:error:'
    'body': 'fileWrapperOfType(${1:NSString* typeName}, error:${2:NSError** outError})'
  'fileWrapperRepresentationOfType:':
    'prefix': 'fileWrapperRepresentationOfType:'
    'body': 'fileWrapperRepresentationOfType(${1:NSString* type})'
  'handleCloseScriptCommand:':
    'prefix': 'handleCloseScriptCommand:'
    'body': 'handleCloseScriptCommand(${1:NSCloseCommand* command})'
  'handlePrintScriptCommand:':
    'prefix': 'handlePrintScriptCommand:'
    'body': 'handlePrintScriptCommand(${1:NSScriptCommand* command})'
  'handleSaveScriptCommand:':
    'prefix': 'handleSaveScriptCommand:'
    'body': 'handleSaveScriptCommand(${1:NSScriptCommand* command})'
  'hasUnautosavedChanges':
    'prefix': 'hasUnautosavedChanges'
    'body': 'hasUnautosavedChanges()'
  'hasUndoManager':
    'prefix': 'hasUndoManager'
    'body': 'hasUndoManager()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'initForURL:withContentsOfURL:ofType:error:':
    'prefix': 'initForURL:withContentsOfURL:ofType:error:'
    'body': 'initForURL(${1:NSURL* urlOrNil}, withContentsOfURL:${2:NSURL* contentsURL}, ofType:${3:NSString* typeName}, error:${4:NSError** outError})'
  'initWithContentsOfFile:ofType:':
    'prefix': 'initWithContentsOfFile:ofType:'
    'body': 'initWithContentsOfFile(${1:NSString* absolutePath}, ofType:${2:NSString* typeName})'
  'initWithContentsOfURL:ofType:':
    'prefix': 'initWithContentsOfURL:ofType:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, ofType:${2:NSString* typeName})'
  'initWithContentsOfURL:ofType:error:':
    'prefix': 'initWithContentsOfURL:ofType:error:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'initWithType:error:':
    'prefix': 'initWithType:error:'
    'body': 'initWithType(${1:NSString* typeName}, error:${2:NSError** outError})'
  'invalidateRestorableState':
    'prefix': 'invalidateRestorableState'
    'body': 'invalidateRestorableState()'
  'isDocumentEdited':
    'prefix': 'isDocumentEdited'
    'body': 'isDocumentEdited()'
  'isDraft':
    'prefix': 'isDraft'
    'body': 'isDraft()'
  'isEntireFileLoaded':
    'prefix': 'isEntireFileLoaded'
    'body': 'isEntireFileLoaded()'
  'isInViewingMode':
    'prefix': 'isInViewingMode'
    'body': 'isInViewingMode()'
  'isLocked':
    'prefix': 'isLocked'
    'body': 'isLocked()'
  'NSDocument.isNativeType:':
    'prefix': 'isNativeType:'
    'body': 'isNativeType(${1:NSString* type})'
  'keepBackupFile':
    'prefix': 'keepBackupFile'
    'body': 'KeepBackupFile()'
  'lastComponentOfFileName':
    'prefix': 'lastComponentOfFileName'
    'body': 'lastComponentOfFileName()'
  'loadDataRepresentation:ofType:':
    'prefix': 'loadDataRepresentation:ofType:'
    'body': 'loadDataRepresentation(${1:NSData* data}, ofType:${2:NSString* type})'
  'loadFileWrapperRepresentation:ofType:':
    'prefix': 'loadFileWrapperRepresentation:ofType:'
    'body': 'loadFileWrapperRepresentation(${1:NSFileWrapper* wrapper}, ofType:${2:NSString* type})'
  'lockDocument:':
    'prefix': 'lockDocument:'
    'body': 'lockDocument(${1:id sender})'
  'lockDocumentWithCompletionHandler:':
    'prefix': 'lockDocumentWithCompletionHandler:'
    'body': 'lockDocumentWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'lockWithCompletionHandler:':
    'prefix': 'lockWithCompletionHandler:'
    'body': 'lockWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'makeWindowControllers':
    'prefix': 'makeWindowControllers'
    'body': 'makeWindowControllers()'
  'moveDocument:':
    'prefix': 'moveDocument:'
    'body': 'moveDocument(${1:id sender})'
  'moveDocumentToUbiquityContainer:':
    'prefix': 'moveDocumentToUbiquityContainer:'
    'body': 'moveDocumentToUbiquityContainer(${1:id sender})'
  'moveDocumentWithCompletionHandler:':
    'prefix': 'moveDocumentWithCompletionHandler:'
    'body': 'moveDocumentWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'moveToURL:completionHandler:':
    'prefix': 'moveToURL:completionHandler:'
    'body': 'moveToURL(${1:NSURL* url}, completionHandler:${2:void (^)(NSError *) completionHandler})'
  'objectSpecifier':
    'prefix': 'objectSpecifier'
    'body': 'objectSpecifier()'
  'performActivityWithSynchronousWaiting:usingBlock:':
    'prefix': 'performActivityWithSynchronousWaiting:usingBlock:'
    'body': 'performActivityWithSynchronousWaiting(${1:BOOL waitSynchronously}, usingBlock:${2:void (^)(void (^)(void)) block})'
  'performAsynchronousFileAccessUsingBlock:':
    'prefix': 'performAsynchronousFileAccessUsingBlock:'
    'body': 'performAsynchronousFileAccessUsingBlock(${1:void (^)(void (^)(void)) block})'
  'performSynchronousFileAccessUsingBlock:':
    'prefix': 'performSynchronousFileAccessUsingBlock:'
    'body': 'performSynchronousFileAccessUsingBlock(${1:void (^)(void) block})'
  'preparePageLayout:':
    'prefix': 'preparePageLayout:'
    'body': 'preparePageLayout(${1:NSPageLayout* pageLayout})'
  'prepareSavePanel:':
    'prefix': 'prepareSavePanel:'
    'body': 'prepareSavePanel(${1:NSSavePanel* savePanel})'
  'presentError:':
    'prefix': 'presentError:'
    'body': 'presentError(${1:NSError* error})'
  'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:':
    'prefix': 'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'
    'body': 'presentError(${1:NSError* error}, modalForWindow:${2:NSWindow* window}, delegate:${3:id delegate}, didPresentSelector:${4:SEL didPresentSelector}, contextInfo:${5:void* contextInfo})'
  'NSDocument.preservesVersions':
    'prefix': 'preservesVersions'
    'body': 'preservesVersions()'
  'printDocument:':
    'prefix': 'printDocument:'
    'body': 'printDocument(${1:id sender})'
  'printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:':
    'prefix': 'printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'
    'body': 'printDocumentWithSettings(${1:NSDictionary* printSettings}, showPrintPanel:${2:BOOL showPrintPanel}, delegate:${3:id delegate}, didPrintSelector:${4:SEL didPrintSelector}, contextInfo:${5:void* contextInfo})'
  'printInfo':
    'prefix': 'printInfo'
    'body': 'printInfo()'
  'printOperationWithSettings:error:':
    'prefix': 'printOperationWithSettings:error:'
    'body': 'printOperationWithSettings(${1:NSDictionary* printSettings}, error:${2:NSError** outError})'
  'printShowingPrintPanel:':
    'prefix': 'printShowingPrintPanel:'
    'body': 'printShowingPrintPanel(${1:BOOL flag})'
  'readFromData:ofType:error:':
    'prefix': 'readFromData:ofType:error:'
    'body': 'readFromData(${1:NSData* data}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'readFromFile:ofType:':
    'prefix': 'readFromFile:ofType:'
    'body': 'readFromFile(${1:NSString* fileName}, ofType:${2:NSString* type})'
  'readFromFileWrapper:ofType:error:':
    'prefix': 'readFromFileWrapper:ofType:error:'
    'body': 'readFromFileWrapper(${1:NSFileWrapper* fileWrapper}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'readFromURL:ofType:':
    'prefix': 'readFromURL:ofType:'
    'body': 'readFromURL(${1:NSURL* url}, ofType:${2:NSString* type})'
  'readFromURL:ofType:error:':
    'prefix': 'readFromURL:ofType:error:'
    'body': 'readFromURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'NSDocument.readableTypes':
    'prefix': 'readableTypes'
    'body': 'readableTypes()'
  'removeWindowController:':
    'prefix': 'removeWindowController:'
    'body': 'removeWindowController(${1:NSWindowController* windowController})'
  'renameDocument:':
    'prefix': 'renameDocument:'
    'body': 'renameDocument(${1:id sender})'
  'NSDocument.restorableStateKeyPaths':
    'prefix': 'restorableStateKeyPaths'
    'body': 'restorableStateKeyPaths()'
  'restoreDocumentWindowWithIdentifier:state:completionHandler:':
    'prefix': 'restoreDocumentWindowWithIdentifier:state:completionHandler:'
    'body': 'restoreDocumentWindowWithIdentifier(${1:NSString* identifier}, state:${2:NSCoder* state}, completionHandler:${3:void (^)(NSWindow *, NSError *) completionHandler})'
  'restoreStateWithCoder:':
    'prefix': 'restoreStateWithCoder:'
    'body': 'restoreStateWithCoder(${1:NSCoder* coder})'
  'revertDocumentToSaved:':
    'prefix': 'revertDocumentToSaved:'
    'body': 'revertDocumentToSaved(${1:id sender})'
  'revertToContentsOfURL:ofType:error:':
    'prefix': 'revertToContentsOfURL:ofType:error:'
    'body': 'revertToContentsOfURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'revertToSavedFromFile:ofType:':
    'prefix': 'revertToSavedFromFile:ofType:'
    'body': 'revertToSavedFromFile(${1:NSString* fileName}, ofType:${2:NSString* type})'
  'revertToSavedFromURL:ofType:':
    'prefix': 'revertToSavedFromURL:ofType:'
    'body': 'revertToSavedFromURL(${1:NSURL* url}, ofType:${2:NSString* type})'
  'runModalPageLayoutWithPrintInfo:':
    'prefix': 'runModalPageLayoutWithPrintInfo:'
    'body': 'runModalPageLayoutWithPrintInfo(${1:NSPrintInfo* printInfo})'
  'runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:':
    'prefix': 'runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'
    'body': 'runModalPageLayoutWithPrintInfo(${1:NSPrintInfo* printInfo}, delegate:${2:id delegate}, didRunSelector:${3:SEL didRunSelector}, contextInfo:${4:void* contextInfo})'
  'runModalPrintOperation:delegate:didRunSelector:contextInfo:':
    'prefix': 'runModalPrintOperation:delegate:didRunSelector:contextInfo:'
    'body': 'runModalPrintOperation(${1:NSPrintOperation* printOperation}, delegate:${2:id delegate}, didRunSelector:${3:SEL didRunSelector}, contextInfo:${4:void* contextInfo})'
  'runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:':
    'prefix': 'runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'
    'body': 'runModalSavePanelForSaveOperation(${1:NSSaveOperationType saveOperation}, delegate:${2:id delegate}, didSaveSelector:${3:SEL didSaveSelector}, contextInfo:${4:void* contextInfo})'
  'runPageLayout:':
    'prefix': 'runPageLayout:'
    'body': 'runPageLayout(${1:id sender})'
  'saveDocument:':
    'prefix': 'saveDocument:'
    'body': 'saveDocument(${1:id sender})'
  'saveDocumentAs:':
    'prefix': 'saveDocumentAs:'
    'body': 'saveDocumentAs(${1:id sender})'
  'saveDocumentTo:':
    'prefix': 'saveDocumentTo:'
    'body': 'saveDocumentTo(${1:id sender})'
  'saveDocumentToPDF:':
    'prefix': 'saveDocumentToPDF:'
    'body': 'saveDocumentToPDF(${1:id sender})'
  'saveDocumentWithDelegate:didSaveSelector:contextInfo:':
    'prefix': 'saveDocumentWithDelegate:didSaveSelector:contextInfo:'
    'body': 'saveDocumentWithDelegate(${1:id delegate}, didSaveSelector:${2:SEL didSaveSelector}, contextInfo:${3:void* contextInfo})'
  'saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:':
    'prefix': 'saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'
    'body': 'saveToFile(${1:NSString* fileName}, saveOperation:${2:NSSaveOperationType saveOperation}, delegate:${3:id delegate}, didSaveSelector:${4:SEL didSaveSelector}, contextInfo:${5:void* contextInfo})'
  'saveToURL:ofType:forSaveOperation:completionHandler:':
    'prefix': 'saveToURL:ofType:forSaveOperation:completionHandler:'
    'body': 'saveToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, completionHandler:${4:void (^)(NSError *) completionHandler})'
  'saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:':
    'prefix': 'saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'
    'body': 'saveToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, delegate:${4:id delegate}, didSaveSelector:${5:SEL didSaveSelector}, contextInfo:${6:void* contextInfo})'
  'saveToURL:ofType:forSaveOperation:error:':
    'prefix': 'saveToURL:ofType:forSaveOperation:error:'
    'body': 'saveToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, error:${4:NSError** outError})'
  'scheduleAutosaving':
    'prefix': 'scheduleAutosaving'
    'body': 'scheduleAutosaving()'
  'setAutosavedContentsFileURL:':
    'prefix': 'setAutosavedContentsFileURL:'
    'body': 'setAutosavedContentsFileURL(${1:NSURL* url})'
  'setDisplayName:':
    'prefix': 'setDisplayName:'
    'body': 'setDisplayName(${1:NSString* displayNameOrNil})'
  'setDraft:':
    'prefix': 'setDraft:'
    'body': 'setDraft(${1:BOOL flag})'
  'setFileModificationDate:':
    'prefix': 'setFileModificationDate:'
    'body': 'setFileModificationDate(${1:NSDate* modificationDate})'
  'setFileName:':
    'prefix': 'setFileName:'
    'body': 'setFileName(${1:NSString* fileName})'
  'setFileType:':
    'prefix': 'setFileType:'
    'body': 'setFileType(${1:NSString* typeName})'
  'setFileURL:':
    'prefix': 'setFileURL:'
    'body': 'setFileURL(${1:NSURL* url})'
  'setHasUndoManager:':
    'prefix': 'setHasUndoManager:'
    'body': 'setHasUndoManager(${1:BOOL hasUndoManager})'
  'setLastComponentOfFileName:':
    'prefix': 'setLastComponentOfFileName:'
    'body': 'setLastComponentOfFileName(${1:NSString* str})'
  'setPrintInfo:':
    'prefix': 'setPrintInfo:'
    'body': 'setPrintInfo(${1:NSPrintInfo* printInfo})'
  'setUndoManager:':
    'prefix': 'setUndoManager:'
    'body': 'setUndoManager(${1:NSUndoManager* undoManager})'
  'setWindow:':
    'prefix': 'setWindow:'
    'body': 'setWindow(${1:NSWindow* window})'
  'shouldChangePrintInfo:':
    'prefix': 'shouldChangePrintInfo:'
    'body': 'shouldChangePrintInfo(${1:NSPrintInfo* newPrintInfo})'
  'shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:':
    'prefix': 'shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'
    'body': 'shouldCloseWindowController(${1:NSWindowController* windowController}, delegate:${2:id delegate}, shouldCloseSelector:${3:SEL shouldCloseSelector}, contextInfo:${4:void* contextInfo})'
  'shouldRunSavePanelWithAccessoryView':
    'prefix': 'shouldRunSavePanelWithAccessoryView'
    'body': 'shouldRunSavePanelWithAccessoryView()'
  'showWindows':
    'prefix': 'showWindows'
    'body': 'showWindows()'
  'unblockUserInteraction':
    'prefix': 'unblockUserInteraction'
    'body': 'unblockUserInteraction()'
  'undoManager':
    'prefix': 'undoManager'
    'body': 'undoManager()'
  'unlockDocument:':
    'prefix': 'unlockDocument:'
    'body': 'unlockDocument(${1:id sender})'
  'unlockDocumentWithCompletionHandler:':
    'prefix': 'unlockDocumentWithCompletionHandler:'
    'body': 'unlockDocumentWithCompletionHandler(${1:void (^)(BOOL) completionHandler})'
  'unlockWithCompletionHandler:':
    'prefix': 'unlockWithCompletionHandler:'
    'body': 'unlockWithCompletionHandler(${1:void (^)(NSError *) completionHandler})'
  'updateChangeCount:':
    'prefix': 'updateChangeCount:'
    'body': 'updateChangeCount(${1:NSDocumentChangeType change})'
  'updateChangeCountWithToken:forSaveOperation:':
    'prefix': 'updateChangeCountWithToken:forSaveOperation:'
    'body': 'updateChangeCountWithToken(${1:id changeCountToken}, forSaveOperation:${2:NSSaveOperationType saveOperation})'
  'NSDocument.usesUbiquitousStorage':
    'prefix': 'usesUbiquitousStorage'
    'body': 'usesUbiquitousStorage()'
  'validateUserInterfaceItem:':
    'prefix': 'validateUserInterfaceItem:'
    'body': 'validateUserInterfaceItem(${1:id anItem})'
  'willNotPresentError:':
    'prefix': 'willNotPresentError:'
    'body': 'willNotPresentError(${1:NSError* error})'
  'willPresentError:':
    'prefix': 'willPresentError:'
    'body': 'willPresentError(${1:NSError* error})'
  'windowControllerDidLoadNib:':
    'prefix': 'windowControllerDidLoadNib:'
    'body': 'windowControllerDidLoadNib(${1:NSWindowController* windowController})'
  'windowControllerWillLoadNib:':
    'prefix': 'windowControllerWillLoadNib:'
    'body': 'windowControllerWillLoadNib(${1:NSWindowController* windowController})'
  'windowControllers':
    'prefix': 'windowControllers'
    'body': 'windowControllers()'
  'windowForSheet':
    'prefix': 'windowForSheet'
    'body': 'windowForSheet()'
  'windowNibName':
    'prefix': 'windowNibName'
    'body': 'windowNibName()'
  'NSDocument.writableTypes':
    'prefix': 'writableTypes'
    'body': 'writableTypes()'
  'writableTypesForSaveOperation:':
    'prefix': 'writableTypesForSaveOperation:'
    'body': 'writableTypesForSaveOperation(${1:NSSaveOperationType saveOperation})'
  'writeSafelyToURL:ofType:forSaveOperation:error:':
    'prefix': 'writeSafelyToURL:ofType:forSaveOperation:error:'
    'body': 'writeSafelyToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, error:${4:NSError** outError})'
  'writeToFile:ofType:':
    'prefix': 'writeToFile:ofType:'
    'body': 'writeToFile(${1:NSString* fileName}, ofType:${2:NSString* type})'
  'writeToFile:ofType:originalFile:saveOperation:':
    'prefix': 'writeToFile:ofType:originalFile:saveOperation:'
    'body': 'writeToFile(${1:NSString* fullDocumentPath}, ofType:${2:NSString* documentTypeName}, originalFile:${3:NSString* fullOriginalDocumentPath}, saveOperation:${4:NSSaveOperationType saveOperationType})'
  'writeToURL:ofType:':
    'prefix': 'writeToURL:ofType:'
    'body': 'writeToURL(${1:NSURL* url}, ofType:${2:NSString* type})'
  'writeToURL:ofType:error:':
    'prefix': 'writeToURL:ofType:error:'
    'body': 'writeToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'writeToURL:ofType:forSaveOperation:originalContentsURL:error:':
    'prefix': 'writeToURL:ofType:forSaveOperation:originalContentsURL:error:'
    'body': 'writeToURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, originalContentsURL:${4:NSURL* absoluteOriginalContentsURL}, error:${5:NSError** outError})'
  'writeWithBackupToFile:ofType:saveOperation:':
    'prefix': 'writeWithBackupToFile:ofType:saveOperation:'
    'body': 'writeWithBackupToFile(${1:NSString* fullDocumentPath}, ofType:${2:NSString* documentTypeName}, saveOperation:${3:NSSaveOperationType saveOperationType})'
  'URLsFromRunningOpenPanel':
    'prefix': 'URLsFromRunningOpenPanel'
    'body': 'URLsFromRunningOpenPanel()'
  'addDocument:':
    'prefix': 'addDocument:'
    'body': 'addDocument(${1:NSDocument* document})'
  'autosavingDelay':
    'prefix': 'autosavingDelay'
    'body': 'autosavingDelay()'
  'beginOpenPanel:forTypes:completionHandler:':
    'prefix': 'beginOpenPanel:forTypes:completionHandler:'
    'body': 'beginOpenPanel(${1:NSOpenPanel* openPanel}, forTypes:${2:NSArray* inTypes}, completionHandler:${3:void (^)(NSInteger) completionHandler})'
  'beginOpenPanelWithCompletionHandler:':
    'prefix': 'beginOpenPanelWithCompletionHandler:'
    'body': 'beginOpenPanelWithCompletionHandler(${1:void (^)(NSArray *) completionHandler})'
  'clearRecentDocuments:':
    'prefix': 'clearRecentDocuments:'
    'body': 'clearRecentDocuments(${1:id sender})'
  'closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:':
    'prefix': 'closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'
    'body': 'closeAllDocumentsWithDelegate(${1:id delegate}, didCloseAllSelector:${2:SEL didCloseAllSelector}, contextInfo:${3:void* contextInfo})'
  'currentDirectory':
    'prefix': 'currentDirectory'
    'body': 'currentDirectory()'
  'currentDocument':
    'prefix': 'currentDocument'
    'body': 'currentDocument()'
  'defaultType':
    'prefix': 'defaultType'
    'body': 'defaultType()'
  'displayNameForType:':
    'prefix': 'displayNameForType:'
    'body': 'displayNameForType(${1:NSString* typeName})'
  'documentClassForType:':
    'prefix': 'documentClassForType:'
    'body': 'documentClassForType(${1:NSString* typeName})'
  'documentClassNames':
    'prefix': 'documentClassNames'
    'body': 'documentClassNames()'
  'documentForFileName:':
    'prefix': 'documentForFileName:'
    'body': 'documentForFileName(${1:NSString* fileName})'
  'documentForURL:':
    'prefix': 'documentForURL:'
    'body': 'documentForURL(${1:NSURL* url})'
  'documentForWindow:':
    'prefix': 'documentForWindow:'
    'body': 'documentForWindow(${1:NSWindow* window})'
  'documents':
    'prefix': 'documents'
    'body': 'documents()'
  'duplicateDocumentWithContentsOfURL:copying:displayName:error:':
    'prefix': 'duplicateDocumentWithContentsOfURL:copying:displayName:error:'
    'body': 'duplicateDocumentWithContentsOfURL(${1:NSURL* url}, copying:${2:BOOL duplicateByCopying}, displayName:${3:NSString* displayNameOrNil}, error:${4:NSError** outError})'
  'fileExtensionsFromType:':
    'prefix': 'fileExtensionsFromType:'
    'body': 'fileExtensionsFromType(${1:NSString* typeName})'
  'fileNamesFromRunningOpenPanel':
    'prefix': 'fileNamesFromRunningOpenPanel'
    'body': 'fileNamesFromRunningOpenPanel()'
  'hasEditedDocuments':
    'prefix': 'hasEditedDocuments'
    'body': 'hasEditedDocuments()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'makeDocumentForURL:withContentsOfURL:ofType:error:':
    'prefix': 'makeDocumentForURL:withContentsOfURL:ofType:error:'
    'body': 'makeDocumentForURL(${1:NSURL* urlOrNil}, withContentsOfURL:${2:NSURL* contentsURL}, ofType:${3:NSString* typeName}, error:${4:NSError** outError})'
  'makeDocumentWithContentsOfFile:ofType:':
    'prefix': 'makeDocumentWithContentsOfFile:ofType:'
    'body': 'makeDocumentWithContentsOfFile(${1:NSString* fileName}, ofType:${2:NSString* type})'
  'makeDocumentWithContentsOfURL:ofType:':
    'prefix': 'makeDocumentWithContentsOfURL:ofType:'
    'body': 'makeDocumentWithContentsOfURL(${1:NSURL* url}, ofType:${2:NSString* type})'
  'makeDocumentWithContentsOfURL:ofType:error:':
    'prefix': 'makeDocumentWithContentsOfURL:ofType:error:'
    'body': 'makeDocumentWithContentsOfURL(${1:NSURL* url}, ofType:${2:NSString* typeName}, error:${3:NSError** outError})'
  'makeUntitledDocumentOfType:':
    'prefix': 'makeUntitledDocumentOfType:'
    'body': 'makeUntitledDocumentOfType(${1:NSString* type})'
  'makeUntitledDocumentOfType:error:':
    'prefix': 'makeUntitledDocumentOfType:error:'
    'body': 'makeUntitledDocumentOfType(${1:NSString* typeName}, error:${2:NSError** outError})'
  'maximumRecentDocumentCount':
    'prefix': 'maximumRecentDocumentCount'
    'body': 'maximumRecentDocumentCount()'
  'newDocument:':
    'prefix': 'newDocument:'
    'body': 'newDocument(${1:id sender})'
  'noteNewRecentDocument:':
    'prefix': 'noteNewRecentDocument:'
    'body': 'noteNewRecentDocument(${1:NSDocument* document})'
  'noteNewRecentDocumentURL:':
    'prefix': 'noteNewRecentDocumentURL:'
    'body': 'noteNewRecentDocumentURL(${1:NSURL* url})'
  'openDocument:':
    'prefix': 'openDocument:'
    'body': 'openDocument(${1:id sender})'
  'openDocumentWithContentsOfFile:display:':
    'prefix': 'openDocumentWithContentsOfFile:display:'
    'body': 'openDocumentWithContentsOfFile(${1:NSString* fileName}, display:${2:BOOL display})'
  'openDocumentWithContentsOfURL:display:':
    'prefix': 'openDocumentWithContentsOfURL:display:'
    'body': 'openDocumentWithContentsOfURL(${1:NSURL* url}, display:${2:BOOL display})'
  'openDocumentWithContentsOfURL:display:completionHandler:':
    'prefix': 'openDocumentWithContentsOfURL:display:completionHandler:'
    'body': 'openDocumentWithContentsOfURL(${1:NSURL* url}, display:${2:BOOL displayDocument}, completionHandler:${3:void (^)(NSDocument *, BOOL, NSError *) completionHandler})'
  'openDocumentWithContentsOfURL:display:error:':
    'prefix': 'openDocumentWithContentsOfURL:display:error:'
    'body': 'openDocumentWithContentsOfURL(${1:NSURL* url}, display:${2:BOOL displayDocument}, error:${3:NSError** outError})'
  'openUntitledDocumentAndDisplay:error:':
    'prefix': 'openUntitledDocumentAndDisplay:error:'
    'body': 'openUntitledDocumentAndDisplay(${1:BOOL displayDocument}, error:${2:NSError** outError})'
  'openUntitledDocumentOfType:display:':
    'prefix': 'openUntitledDocumentOfType:display:'
    'body': 'openUntitledDocumentOfType(${1:NSString* type}, display:${2:BOOL display})'
  'presentError:':
    'prefix': 'presentError:'
    'body': 'presentError(${1:NSError* error})'
  'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:':
    'prefix': 'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'
    'body': 'presentError(${1:NSError* error}, modalForWindow:${2:NSWindow* window}, delegate:${3:id delegate}, didPresentSelector:${4:SEL didPresentSelector}, contextInfo:${5:void* contextInfo})'
  'recentDocumentURLs':
    'prefix': 'recentDocumentURLs'
    'body': 'recentDocumentURLs()'
  'removeDocument:':
    'prefix': 'removeDocument:'
    'body': 'removeDocument(${1:NSDocument* document})'
  'reopenDocumentForURL:withContentsOfURL:display:completionHandler:':
    'prefix': 'reopenDocumentForURL:withContentsOfURL:display:completionHandler:'
    'body': 'reopenDocumentForURL(${1:NSURL* urlOrNil}, withContentsOfURL:${2:NSURL* contentsURL}, display:${3:BOOL displayDocument}, completionHandler:${4:void (^)(NSDocument *, BOOL, NSError *) completionHandler})'
  'reopenDocumentForURL:withContentsOfURL:error:':
    'prefix': 'reopenDocumentForURL:withContentsOfURL:error:'
    'body': 'reopenDocumentForURL(${1:NSURL* url}, withContentsOfURL:${2:NSURL* contentsURL}, error:${3:NSError** outError})'
  'reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:':
    'prefix': 'reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'
    'body': 'reviewUnsavedDocumentsWithAlertTitle(${1:NSString* title}, cancellable:${2:BOOL cancellable}, delegate:${3:id delegate}, didReviewAllSelector:${4:SEL didReviewAllSelector}, contextInfo:${5:void* contextInfo})'
  'runModalOpenPanel:forTypes:':
    'prefix': 'runModalOpenPanel:forTypes:'
    'body': 'runModalOpenPanel(${1:NSOpenPanel* openPanel}, forTypes:${2:NSArray* types})'
  'saveAllDocuments:':
    'prefix': 'saveAllDocuments:'
    'body': 'saveAllDocuments(${1:id sender})'
  'setAutosavingDelay:':
    'prefix': 'setAutosavingDelay:'
    'body': 'setAutosavingDelay(${1:NSTimeInterval autosavingDelay})'
  'setShouldCreateUI:':
    'prefix': 'setShouldCreateUI:'
    'body': 'setShouldCreateUI(${1:BOOL flag})'
  'NSDocumentController.sharedDocumentController':
    'prefix': 'sharedDocumentController'
    'body': 'sharedDocumentController()'
  'shouldCreateUI':
    'prefix': 'shouldCreateUI'
    'body': 'shouldCreateUI()'
  'typeForContentsOfURL:error:':
    'prefix': 'typeForContentsOfURL:error:'
    'body': 'typeForContentsOfURL(${1:NSURL* url}, error:${2:NSError** outError})'
  'typeFromFileExtension:':
    'prefix': 'typeFromFileExtension:'
    'body': 'typeFromFileExtension(${1:NSString* fileNameExtensionOrHFSFileType})'
  'validateUserInterfaceItem:':
    'prefix': 'validateUserInterfaceItem:'
    'body': 'validateUserInterfaceItem(${1:id anItem})'
  'willPresentError:':
    'prefix': 'willPresentError:'
    'body': 'willPresentError(${1:NSError* error})'
  'contents':
    'prefix': 'contents'
    'body': 'contents()'
  'NSDraggingImageComponent.draggingImageComponentWithKey:':
    'prefix': 'draggingImageComponentWithKey:'
    'body': 'draggingImageComponentWithKey(${1:NSString* key})'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'initWithKey:':
    'prefix': 'initWithKey:'
    'body': 'initWithKey(${1:NSString* key})'
  'key':
    'prefix': 'key'
    'body': 'Key()'
  'setContents:':
    'prefix': 'setContents:'
    'body': 'setContents(${1:id contents})'
  'setFrame:':
    'prefix': 'setFrame:'
    'body': 'setFrame(${1:NSRect frame})'
  'setKey:':
    'prefix': 'setKey:'
    'body': 'setKey(${1:NSString* key})'
  'draggingFrame':
    'prefix': 'draggingFrame'
    'body': 'draggingFrame()'
  'imageComponents':
    'prefix': 'imageComponents'
    'body': 'imageComponents()'
  'imageComponentsProvider':
    'prefix': 'imageComponentsProvider'
    'body': 'imageComponentsProvider()'
  'initWithPasteboardWriter:':
    'prefix': 'initWithPasteboardWriter:'
    'body': 'initWithPasteboardWriter(${1:id pasteboardWriter})'
  'item':
    'prefix': 'item'
    'body': 'item()'
  'setDraggingFrame:':
    'prefix': 'setDraggingFrame:'
    'body': 'setDraggingFrame(${1:NSRect draggingFrame})'
  'setDraggingFrame:contents:':
    'prefix': 'setDraggingFrame:contents:'
    'body': 'setDraggingFrame(${1:NSRect frame}, contents:${2:id contents})'
  'setImageComponentsProvider:':
    'prefix': 'setImageComponentsProvider:'
    'body': 'setImageComponentsProvider(${1:NSArray *(^)(void) imageComponentsProvider})'
  'animatesToStartingPositionsOnCancelOrFail':
    'prefix': 'animatesToStartingPositionsOnCancelOrFail'
    'body': 'animatesToStartingPositionsOnCancelOrFail()'
  'draggingFormation':
    'prefix': 'draggingFormation'
    'body': 'draggingFormation()'
  'draggingLeaderIndex':
    'prefix': 'draggingLeaderIndex'
    'body': 'draggingLeaderIndex()'
  'draggingLocation':
    'prefix': 'draggingLocation'
    'body': 'draggingLocation()'
  'draggingPasteboard':
    'prefix': 'draggingPasteboard'
    'body': 'draggingPasteboard()'
  'draggingSequenceNumber':
    'prefix': 'draggingSequenceNumber'
    'body': 'draggingSequenceNumber()'
  'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:':
    'prefix': 'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'
    'body': 'enumerateDraggingItemsWithOptions(${1:NSDraggingItemEnumerationOptions enumOpts}, forView:${2:NSView* view}, classes:${3:NSArray* classArray}, searchOptions:${4:NSDictionary* searchOptions}, usingBlock:${5:void (^)(NSDraggingItem *, NSInteger, BOOL *) block})'
  'setAnimatesToStartingPositionsOnCancelOrFail:':
    'prefix': 'setAnimatesToStartingPositionsOnCancelOrFail:'
    'body': 'setAnimatesToStartingPositionsOnCancelOrFail(${1:BOOL animatesToStartingPositionsOnCancelOrFail})'
  'setDraggingFormation:':
    'prefix': 'setDraggingFormation:'
    'body': 'setDraggingFormation(${1:NSDraggingFormation draggingFormation})'
  'setDraggingLeaderIndex:':
    'prefix': 'setDraggingLeaderIndex:'
    'body': 'setDraggingLeaderIndex(${1:NSInteger draggingLeaderIndex})'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'close:':
    'prefix': 'close:'
    'body': 'close(${1:id sender})'
  'contentSize':
    'prefix': 'contentSize'
    'body': 'contentSize()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'edge':
    'prefix': 'edge'
    'body': 'edge()'
  'initWithContentSize:preferredEdge:':
    'prefix': 'initWithContentSize:preferredEdge:'
    'body': 'initWithContentSize(${1:NSSize contentSize}, preferredEdge:${2:NSRectEdge edge})'
  'leadingOffset':
    'prefix': 'leadingOffset'
    'body': 'leadingOffset()'
  'maxContentSize':
    'prefix': 'maxContentSize'
    'body': 'maxContentSize()'
  'minContentSize':
    'prefix': 'minContentSize'
    'body': 'minContentSize()'
  'open':
    'prefix': 'open'
    'body': 'open()'
  'open:':
    'prefix': 'open:'
    'body': 'open(${1:id sender})'
  'openOnEdge:':
    'prefix': 'openOnEdge:'
    'body': 'openOnEdge(${1:NSRectEdge edge})'
  'parentWindow':
    'prefix': 'parentWindow'
    'body': 'parentWindow()'
  'preferredEdge':
    'prefix': 'preferredEdge'
    'body': 'preferredEdge()'
  'setContentSize:':
    'prefix': 'setContentSize:'
    'body': 'setContentSize(${1:NSSize size})'
  'setContentView:':
    'prefix': 'setContentView:'
    'body': 'setContentView(${1:NSView* aView})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setLeadingOffset:':
    'prefix': 'setLeadingOffset:'
    'body': 'setLeadingOffset(${1:CGFloat offset})'
  'setMaxContentSize:':
    'prefix': 'setMaxContentSize:'
    'body': 'setMaxContentSize(${1:NSSize size})'
  'setMinContentSize:':
    'prefix': 'setMinContentSize:'
    'body': 'setMinContentSize(${1:NSSize size})'
  'setParentWindow:':
    'prefix': 'setParentWindow:'
    'body': 'setParentWindow(${1:NSWindow* parent})'
  'setPreferredEdge:':
    'prefix': 'setPreferredEdge:'
    'body': 'setPreferredEdge(${1:NSRectEdge edge})'
  'setTrailingOffset:':
    'prefix': 'setTrailingOffset:'
    'body': 'setTrailingOffset(${1:CGFloat offset})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'toggle:':
    'prefix': 'toggle:'
    'body': 'toggle(${1:id sender})'
  'trailingOffset':
    'prefix': 'trailingOffset'
    'body': 'trailingOffset()'
  'EPSRepresentation':
    'prefix': 'EPSRepresentation'
    'body': 'EPSRepresentation()'
  'boundingBox':
    'prefix': 'boundingBox'
    'body': 'boundingBox()'
  'NSEPSImageRep.imageRepWithData:':
    'prefix': 'imageRepWithData:'
    'body': 'imageRepWithData(${1:NSData* epsData})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* epsData})'
  'prepareGState':
    'prefix': 'prepareGState'
    'body': 'prepareGState()'
  'CGEvent':
    'prefix': 'CGEvent'
    'body': 'CGEvent()'
  'absoluteX':
    'prefix': 'absoluteX'
    'body': 'absoluteX()'
  'absoluteY':
    'prefix': 'absoluteY'
    'body': 'absoluteY()'
  'absoluteZ':
    'prefix': 'absoluteZ'
    'body': 'absoluteZ()'
  'NSEvent.addGlobalMonitorForEventsMatchingMask:handler:':
    'prefix': 'addGlobalMonitorForEventsMatchingMask:handler:'
    'body': 'addGlobalMonitorForEventsMatchingMask(${1:NSEventMask mask}, handler:${2:void (^)(NSEvent *) block})'
  'NSEvent.addLocalMonitorForEventsMatchingMask:handler:':
    'prefix': 'addLocalMonitorForEventsMatchingMask:handler:'
    'body': 'addLocalMonitorForEventsMatchingMask(${1:NSEventMask mask}, handler:${2:NSEvent *(^)(NSEvent *) block})'
  'buttonMask':
    'prefix': 'buttonMask'
    'body': 'buttonMask()'
  'buttonNumber':
    'prefix': 'buttonNumber'
    'body': 'buttonNumber()'
  'capabilityMask':
    'prefix': 'capabilityMask'
    'body': 'capabilityMask()'
  'characters':
    'prefix': 'characters'
    'body': 'characters()'
  'charactersIgnoringModifiers':
    'prefix': 'charactersIgnoringModifiers'
    'body': 'charactersIgnoringModifiers()'
  'clickCount':
    'prefix': 'clickCount'
    'body': 'clickCount()'
  'context':
    'prefix': 'context'
    'body': 'context()'
  'data1':
    'prefix': 'data1'
    'body': 'data1()'
  'data2':
    'prefix': 'data2'
    'body': 'data2()'
  'deltaX':
    'prefix': 'deltaX'
    'body': 'deltaX()'
  'deltaY':
    'prefix': 'deltaY'
    'body': 'deltaY()'
  'deltaZ':
    'prefix': 'deltaZ'
    'body': 'deltaZ()'
  'deviceID':
    'prefix': 'deviceID'
    'body': 'deviceID()'
  'NSEvent.doubleClickInterval':
    'prefix': 'doubleClickInterval'
    'body': 'doubleClickInterval()'
  'NSEvent.enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:':
    'prefix': 'enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'
    'body': 'enterExitEventWithType(${1:NSEventType type}, location:${2:NSPoint location}, modifierFlags:${3:NSUInteger flags}, timestamp:${4:NSTimeInterval time}, windowNumber:${5:NSInteger wNum}, context:${6:NSGraphicsContext* context}, eventNumber:${7:NSInteger eNum}, trackingNumber:${8:NSInteger tNum}, userData:${9:void* data})'
  'eventNumber':
    'prefix': 'eventNumber'
    'body': 'eventNumber()'
  'eventRef':
    'prefix': 'eventRef'
    'body': 'eventRef()'
  'NSEvent.eventWithCGEvent:':
    'prefix': 'eventWithCGEvent:'
    'body': 'eventWithCGEvent(${1:CGEventRef cgEvent})'
  'NSEvent.eventWithEventRef:':
    'prefix': 'eventWithEventRef:'
    'body': 'eventWithEventRef(${1:void* eventRef})'
  'hasPreciseScrollingDeltas':
    'prefix': 'hasPreciseScrollingDeltas'
    'body': 'hasPreciseScrollingDeltas()'
  'isARepeat':
    'prefix': 'isARepeat'
    'body': 'isARepeat()'
  'isDirectionInvertedFromDevice':
    'prefix': 'isDirectionInvertedFromDevice'
    'body': 'isDirectionInvertedFromDevice()'
  'isEnteringProximity':
    'prefix': 'isEnteringProximity'
    'body': 'isEnteringProximity()'
  'NSEvent.isMouseCoalescingEnabled':
    'prefix': 'isMouseCoalescingEnabled'
    'body': 'isMouseCoalescingEnabled()'
  'NSEvent.isSwipeTrackingFromScrollEventsEnabled':
    'prefix': 'isSwipeTrackingFromScrollEventsEnabled'
    'body': 'isSwipeTrackingFromScrollEventsEnabled()'
  'keyCode':
    'prefix': 'keyCode'
    'body': 'KeyCode()'
  'NSEvent.keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:':
    'prefix': 'keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:'
    'body': 'KeyEventWithType(${1:NSEventType type}, location:${2:NSPoint location}, modifierFlags:${3:NSUInteger flags}, timestamp:${4:NSTimeInterval time}, windowNumber:${5:NSInteger wNum}, context:${6:NSGraphicsContext* context}, characters:${7:NSString* keys}, charactersIgnoringModifiers:${8:NSString* ukeys}, isARepeat:${9:BOOL flag}, keyCode:${10:unsigned short code})'
  'NSEvent.keyRepeatDelay':
    'prefix': 'keyRepeatDelay'
    'body': 'KeyRepeatDelay()'
  'NSEvent.keyRepeatInterval':
    'prefix': 'keyRepeatInterval'
    'body': 'KeyRepeatInterval()'
  'locationInWindow':
    'prefix': 'locationInWindow'
    'body': 'locationInWindow()'
  'magnification':
    'prefix': 'magnification'
    'body': 'magnification()'
  'NSEvent.modifierFlags':
    'prefix': 'modifierFlags'
    'body': 'modifierFlags()'
  'modifierFlags':
    'prefix': 'modifierFlags'
    'body': 'modifierFlags()'
  'momentumPhase':
    'prefix': 'momentumPhase'
    'body': 'momentumPhase()'
  'NSEvent.mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:':
    'prefix': 'mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:'
    'body': 'mouseEventWithType(${1:NSEventType type}, location:${2:NSPoint location}, modifierFlags:${3:NSUInteger flags}, timestamp:${4:NSTimeInterval time}, windowNumber:${5:NSInteger wNum}, context:${6:NSGraphicsContext* context}, eventNumber:${7:NSInteger eNum}, clickCount:${8:NSInteger cNum}, pressure:${9:float pressure})'
  'NSEvent.mouseLocation':
    'prefix': 'mouseLocation'
    'body': 'mouseLocation()'
  'NSEvent.otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:':
    'prefix': 'otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:'
    'body': 'otherEventWithType(${1:NSEventType type}, location:${2:NSPoint location}, modifierFlags:${3:NSUInteger flags}, timestamp:${4:NSTimeInterval time}, windowNumber:${5:NSInteger wNum}, context:${6:NSGraphicsContext* context}, subtype:${7:short subtype}, data1:${8:NSInteger d1}, data2:${9:NSInteger d2})'
  'phase':
    'prefix': 'phase'
    'body': 'phase()'
  'pointingDeviceID':
    'prefix': 'pointingDeviceID'
    'body': 'pointingDeviceID()'
  'pointingDeviceSerialNumber':
    'prefix': 'pointingDeviceSerialNumber'
    'body': 'pointingDeviceSerialNumber()'
  'pointingDeviceType':
    'prefix': 'pointingDeviceType'
    'body': 'pointingDeviceType()'
  'NSEvent.pressedMouseButtons':
    'prefix': 'pressedMouseButtons'
    'body': 'pressedMouseButtons()'
  'pressure':
    'prefix': 'pressure'
    'body': 'pressure()'
  'NSEvent.removeMonitor:':
    'prefix': 'removeMonitor:'
    'body': 'removeMonitor(${1:id eventMonitor})'
  'rotation':
    'prefix': 'rotation'
    'body': 'rotation()'
  'scrollingDeltaX':
    'prefix': 'scrollingDeltaX'
    'body': 'scrollingDeltaX()'
  'scrollingDeltaY':
    'prefix': 'scrollingDeltaY'
    'body': 'scrollingDeltaY()'
  'NSEvent.setMouseCoalescingEnabled:':
    'prefix': 'setMouseCoalescingEnabled:'
    'body': 'setMouseCoalescingEnabled(${1:BOOL flag})'
  'NSEvent.startPeriodicEventsAfterDelay:withPeriod:':
    'prefix': 'startPeriodicEventsAfterDelay:withPeriod:'
    'body': 'startPeriodicEventsAfterDelay(${1:NSTimeInterval delay}, withPeriod:${2:NSTimeInterval period})'
  'NSEvent.stopPeriodicEvents':
    'prefix': 'stopPeriodicEvents'
    'body': 'stopPeriodicEvents()'
  'subtype':
    'prefix': 'subtype'
    'body': 'subtype()'
  'systemTabletID':
    'prefix': 'systemTabletID'
    'body': 'systemTabletID()'
  'tabletID':
    'prefix': 'tabletID'
    'body': 'tabletID()'
  'tangentialPressure':
    'prefix': 'tangentialPressure'
    'body': 'tangentialPressure()'
  'tilt':
    'prefix': 'tilt'
    'body': 'tilt()'
  'timestamp':
    'prefix': 'timestamp'
    'body': 'timestamp()'
  'touchesMatchingPhase:inView:':
    'prefix': 'touchesMatchingPhase:inView:'
    'body': 'touchesMatchingPhase(${1:NSTouchPhase phase}, inView:${2:NSView* view})'
  'trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:':
    'prefix': 'trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:'
    'body': 'trackSwipeEventWithOptions(${1:NSEventSwipeTrackingOptions options}, dampenAmountThresholdMin:${2:CGFloat minDampenThreshold}, max:${3:CGFloat maxDampenThreshold}, usingHandler:${4:void (^)(CGFloat, NSEventPhase, BOOL, BOOL *) trackingHandler})'
  'trackingArea':
    'prefix': 'trackingArea'
    'body': 'trackingArea()'
  'trackingNumber':
    'prefix': 'trackingNumber'
    'body': 'trackingNumber()'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'uniqueID':
    'prefix': 'uniqueID'
    'body': 'uniqueID()'
  'userData':
    'prefix': 'userData'
    'body': 'userData()'
  'vendorDefined':
    'prefix': 'vendorDefined'
    'body': 'vendorDefined()'
  'vendorID':
    'prefix': 'vendorID'
    'body': 'vendorID()'
  'vendorPointingDeviceType':
    'prefix': 'vendorPointingDeviceType'
    'body': 'vendorPointingDeviceType()'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'windowNumber':
    'prefix': 'windowNumber'
    'body': 'windowNumber()'
  'icon':
    'prefix': 'icon'
    'body': 'icon()'
  'setIcon:':
    'prefix': 'setIcon:'
    'body': 'setIcon(${1:NSImage* icon})'
  'advancementForGlyph:':
    'prefix': 'advancementForGlyph:'
    'body': 'advancementForGlyph(${1:NSGlyph ag})'
  'afmDictionary':
    'prefix': 'afmDictionary'
    'body': 'afmDictionary()'
  'ascender':
    'prefix': 'ascender'
    'body': 'ascender()'
  'NSFont.boldSystemFontOfSize:':
    'prefix': 'boldSystemFontOfSize:'
    'body': 'boldSystemFontOfSize(${1:CGFloat fontSize})'
  'boundingRectForFont':
    'prefix': 'boundingRectForFont'
    'body': 'boundingRectForFont()'
  'boundingRectForGlyph:':
    'prefix': 'boundingRectForGlyph:'
    'body': 'boundingRectForGlyph(${1:NSGlyph aGlyph})'
  'capHeight':
    'prefix': 'capHeight'
    'body': 'capHeight()'
  'NSFont.controlContentFontOfSize:':
    'prefix': 'controlContentFontOfSize:'
    'body': 'controlContentFontOfSize(${1:CGFloat fontSize})'
  'coveredCharacterSet':
    'prefix': 'coveredCharacterSet'
    'body': 'coveredCharacterSet()'
  'defaultLineHeightForFont':
    'prefix': 'defaultLineHeightForFont'
    'body': 'defaultLineHeightForFont()'
  'descender':
    'prefix': 'descender'
    'body': 'descender()'
  'displayName':
    'prefix': 'displayName'
    'body': 'displayName()'
  'encodingScheme':
    'prefix': 'encodingScheme'
    'body': 'encodingScheme()'
  'familyName':
    'prefix': 'familyName'
    'body': 'familyName()'
  'fontDescriptor':
    'prefix': 'fontDescriptor'
    'body': 'fontDescriptor()'
  'fontName':
    'prefix': 'fontName'
    'body': 'fontName()'
  'NSFont.fontWithDescriptor:size:':
    'prefix': 'fontWithDescriptor:size:'
    'body': 'fontWithDescriptor(${1:NSFontDescriptor* fontDescriptor}, size:${2:CGFloat fontSize})'
  'NSFont.fontWithDescriptor:textTransform:':
    'prefix': 'fontWithDescriptor:textTransform:'
    'body': 'fontWithDescriptor(${1:NSFontDescriptor* fontDescriptor}, textTransform:${2:NSAffineTransform* textTransform})'
  'NSFont.fontWithName:matrix:':
    'prefix': 'fontWithName:matrix:'
    'body': 'fontWithName(${1:NSString* fontName}, matrix:${2:CGFloat* fontMatrix})'
  'NSFont.fontWithName:size:':
    'prefix': 'fontWithName:size:'
    'body': 'fontWithName(${1:NSString* fontName}, size:${2:CGFloat fontSize})'
  'getAdvancements:forGlyphs:count:':
    'prefix': 'getAdvancements:forGlyphs:count:'
    'body': 'getAdvancements(${1:NSSizeArray advancements}, forGlyphs:${2:NSGlyph* glyphs}, count:${3:NSUInteger glyphCount})'
  'getAdvancements:forPackedGlyphs:length:':
    'prefix': 'getAdvancements:forPackedGlyphs:length:'
    'body': 'getAdvancements(${1:NSSizeArray advancements}, forPackedGlyphs:${2:void* packedGlyphs}, length:${3:NSUInteger length})'
  'getBoundingRects:forGlyphs:count:':
    'prefix': 'getBoundingRects:forGlyphs:count:'
    'body': 'getBoundingRects(${1:NSRectArray bounds}, forGlyphs:${2:NSGlyph* glyphs}, count:${3:NSUInteger glyphCount})'
  'glyphIsEncoded:':
    'prefix': 'glyphIsEncoded:'
    'body': 'glyphIsEncoded(${1:NSGlyph aGlyph})'
  'glyphPacking':
    'prefix': 'glyphPacking'
    'body': 'glyphPacking()'
  'glyphWithName:':
    'prefix': 'glyphWithName:'
    'body': 'glyphWithName(${1:NSString* aName})'
  'isBaseFont':
    'prefix': 'isBaseFont'
    'body': 'isBaseFont()'
  'isFixedPitch':
    'prefix': 'isFixedPitch'
    'body': 'isFixedPitch()'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'italicAngle':
    'prefix': 'italicAngle'
    'body': 'italicAngle()'
  'NSFont.labelFontOfSize:':
    'prefix': 'labelFontOfSize:'
    'body': 'labelFontOfSize(${1:CGFloat fontSize})'
  'NSFont.labelFontSize':
    'prefix': 'labelFontSize'
    'body': 'labelFontSize()'
  'leading':
    'prefix': 'leading'
    'body': 'leading()'
  'matrix':
    'prefix': 'matrix'
    'body': 'matrix()'
  'maximumAdvancement':
    'prefix': 'maximumAdvancement'
    'body': 'maximumAdvancement()'
  'NSFont.menuBarFontOfSize:':
    'prefix': 'menuBarFontOfSize:'
    'body': 'menuBarFontOfSize(${1:CGFloat fontSize})'
  'NSFont.menuFontOfSize:':
    'prefix': 'menuFontOfSize:'
    'body': 'menuFontOfSize(${1:CGFloat fontSize})'
  'NSFont.messageFontOfSize:':
    'prefix': 'messageFontOfSize:'
    'body': 'messageFontOfSize(${1:CGFloat fontSize})'
  'mostCompatibleStringEncoding':
    'prefix': 'mostCompatibleStringEncoding'
    'body': 'mostCompatibleStringEncoding()'
  'numberOfGlyphs':
    'prefix': 'numberOfGlyphs'
    'body': 'numberOfGlyphs()'
  'NSFont.paletteFontOfSize:':
    'prefix': 'paletteFontOfSize:'
    'body': 'paletteFontOfSize(${1:CGFloat fontSize})'
  'pointSize':
    'prefix': 'pointSize'
    'body': 'pointSize()'
  'positionOfGlyph:forCharacter:struckOverRect:':
    'prefix': 'positionOfGlyph:forCharacter:struckOverRect:'
    'body': 'positionOfGlyph(${1:NSGlyph aGlyph}, forCharacter:${2:unichar aChar}, struckOverRect:${3:NSRect aRect})'
  'positionOfGlyph:precededByGlyph:isNominal:':
    'prefix': 'positionOfGlyph:precededByGlyph:isNominal:'
    'body': 'positionOfGlyph(${1:NSGlyph curGlyph}, precededByGlyph:${2:NSGlyph prevGlyph}, isNominal:${3:BOOL* nominal})'
  'positionOfGlyph:struckOverGlyph:metricsExist:':
    'prefix': 'positionOfGlyph:struckOverGlyph:metricsExist:'
    'body': 'positionOfGlyph(${1:NSGlyph curGlyph}, struckOverGlyph:${2:NSGlyph prevGlyph}, metricsExist:${3:BOOL* exist})'
  'positionOfGlyph:struckOverRect:metricsExist:':
    'prefix': 'positionOfGlyph:struckOverRect:metricsExist:'
    'body': 'positionOfGlyph(${1:NSGlyph aGlyph}, struckOverRect:${2:NSRect aRect}, metricsExist:${3:BOOL* exist})'
  'positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:':
    'prefix': 'positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'
    'body': 'positionOfGlyph(${1:NSGlyph thisGlyph}, withRelation:${2:NSGlyphRelation rel}, toBaseGlyph:${3:NSGlyph baseGlyph}, totalAdvancement:${4:NSSizePointer adv}, metricsExist:${5:BOOL* exist})'
  'positionsForCompositeSequence:numberOfGlyphs:pointArray:':
    'prefix': 'positionsForCompositeSequence:numberOfGlyphs:pointArray:'
    'body': 'positionsForCompositeSequence(${1:NSGlyph* someGlyphs}, numberOfGlyphs:${2:NSInteger numGlyphs}, pointArray:${3:NSPointArray points})'
  'NSFont.preferredFontNames':
    'prefix': 'preferredFontNames'
    'body': 'preferredFontNames()'
  'printerFont':
    'prefix': 'printerFont'
    'body': 'printerFont()'
  'renderingMode':
    'prefix': 'renderingMode'
    'body': 'renderingMode()'
  'screenFont':
    'prefix': 'screenFont'
    'body': 'screenFont()'
  'screenFontWithRenderingMode:':
    'prefix': 'screenFontWithRenderingMode:'
    'body': 'screenFontWithRenderingMode(${1:NSFontRenderingMode renderingMode})'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setInContext:':
    'prefix': 'setInContext:'
    'body': 'setInContext(${1:NSGraphicsContext* graphicsContext})'
  'NSFont.setPreferredFontNames:':
    'prefix': 'setPreferredFontNames:'
    'body': 'setPreferredFontNames(${1:NSArray* fontNameArray})'
  'NSFont.setUserFixedPitchFont:':
    'prefix': 'setUserFixedPitchFont:'
    'body': 'setUserFixedPitchFont(${1:NSFont* aFont})'
  'NSFont.setUserFont:':
    'prefix': 'setUserFont:'
    'body': 'setUserFont(${1:NSFont* aFont})'
  'NSFont.smallSystemFontSize':
    'prefix': 'smallSystemFontSize'
    'body': 'smallSystemFontSize()'
  'NSFont.systemFontOfSize:':
    'prefix': 'systemFontOfSize:'
    'body': 'systemFontOfSize(${1:CGFloat fontSize})'
  'NSFont.systemFontSize':
    'prefix': 'systemFontSize'
    'body': 'systemFontSize()'
  'NSFont.systemFontSizeForControlSize:':
    'prefix': 'systemFontSizeForControlSize:'
    'body': 'systemFontSizeForControlSize(${1:NSControlSize controlSize})'
  'textTransform':
    'prefix': 'textTransform'
    'body': 'textTransform()'
  'NSFont.titleBarFontOfSize:':
    'prefix': 'titleBarFontOfSize:'
    'body': 'titleBarFontOfSize(${1:CGFloat fontSize})'
  'NSFont.toolTipsFontOfSize:':
    'prefix': 'toolTipsFontOfSize:'
    'body': 'toolTipsFontOfSize(${1:CGFloat fontSize})'
  'underlinePosition':
    'prefix': 'underlinePosition'
    'body': 'underlinePosition()'
  'underlineThickness':
    'prefix': 'underlineThickness'
    'body': 'underlineThickness()'
  'NSFont.useFont:':
    'prefix': 'useFont:'
    'body': 'useFont(${1:NSString* fontName})'
  'NSFont.userFixedPitchFontOfSize:':
    'prefix': 'userFixedPitchFontOfSize:'
    'body': 'userFixedPitchFontOfSize(${1:CGFloat fontSize})'
  'NSFont.userFontOfSize:':
    'prefix': 'userFontOfSize:'
    'body': 'userFontOfSize(${1:CGFloat fontSize})'
  'verticalFont':
    'prefix': 'verticalFont'
    'body': 'verticalFont()'
  'widthOfString:':
    'prefix': 'widthOfString:'
    'body': 'widthOfString(${1:NSString* string})'
  'xHeight':
    'prefix': 'xHeight'
    'body': 'xHeight()'
  'NSFontCollection.allFontCollectionNames':
    'prefix': 'allFontCollectionNames'
    'body': 'allFontCollectionNames()'
  'exclusionDescriptors':
    'prefix': 'exclusionDescriptors'
    'body': 'exclusionDescriptors()'
  'NSFontCollection.fontCollectionWithAllAvailableDescriptors':
    'prefix': 'fontCollectionWithAllAvailableDescriptors'
    'body': 'fontCollectionWithAllAvailableDescriptors()'
  'NSFontCollection.fontCollectionWithDescriptors:':
    'prefix': 'fontCollectionWithDescriptors:'
    'body': 'fontCollectionWithDescriptors(${1:NSArray* queryDescriptors})'
  'NSFontCollection.fontCollectionWithLocale:':
    'prefix': 'fontCollectionWithLocale:'
    'body': 'fontCollectionWithLocale(${1:NSLocale* locale})'
  'NSFontCollection.fontCollectionWithName:':
    'prefix': 'fontCollectionWithName:'
    'body': 'fontCollectionWithName(${1:NSString* name})'
  'NSFontCollection.fontCollectionWithName:visibility:':
    'prefix': 'fontCollectionWithName:visibility:'
    'body': 'fontCollectionWithName(${1:NSString* name}, visibility:${2:NSFontCollectionVisibility visibility})'
  'NSFontCollection.hideFontCollectionWithName:visibility:error:':
    'prefix': 'hideFontCollectionWithName:visibility:error:'
    'body': 'hideFontCollectionWithName(${1:NSString* name}, visibility:${2:NSFontCollectionVisibility visibility}, error:${3:NSError** error})'
  'matchingDescriptors':
    'prefix': 'matchingDescriptors'
    'body': 'matchingDescriptors()'
  'matchingDescriptorsForFamily:':
    'prefix': 'matchingDescriptorsForFamily:'
    'body': 'matchingDescriptorsForFamily(${1:NSString* family})'
  'matchingDescriptorsForFamily:options:':
    'prefix': 'matchingDescriptorsForFamily:options:'
    'body': 'matchingDescriptorsForFamily(${1:NSString* family}, options:${2:NSDictionary* options})'
  'matchingDescriptorsWithOptions:':
    'prefix': 'matchingDescriptorsWithOptions:'
    'body': 'matchingDescriptorsWithOptions(${1:NSDictionary* options})'
  'queryDescriptors':
    'prefix': 'queryDescriptors'
    'body': 'queryDescriptors()'
  'NSFontCollection.renameFontCollectionWithName:visibility:toName:error:':
    'prefix': 'renameFontCollectionWithName:visibility:toName:error:'
    'body': 'renameFontCollectionWithName(${1:NSString* name}, visibility:${2:NSFontCollectionVisibility visibility}, toName:${3:NSString* name}, error:${4:NSError** error})'
  'NSFontCollection.showFontCollection:withName:visibility:error:':
    'prefix': 'showFontCollection:withName:visibility:error:'
    'body': 'showFontCollection(${1:NSFontCollection* collection}, withName:${2:NSString* name}, visibility:${3:NSFontCollectionVisibility visibility}, error:${4:NSError** error})'
  'fontAttributes':
    'prefix': 'fontAttributes'
    'body': 'fontAttributes()'
  'fontDescriptorByAddingAttributes:':
    'prefix': 'fontDescriptorByAddingAttributes:'
    'body': 'fontDescriptorByAddingAttributes(${1:NSDictionary* attributes})'
  'fontDescriptorWithFace:':
    'prefix': 'fontDescriptorWithFace:'
    'body': 'fontDescriptorWithFace(${1:NSString* newFace})'
  'fontDescriptorWithFamily:':
    'prefix': 'fontDescriptorWithFamily:'
    'body': 'fontDescriptorWithFamily(${1:NSString* newFamily})'
  'NSFontDescriptor.fontDescriptorWithFontAttributes:':
    'prefix': 'fontDescriptorWithFontAttributes:'
    'body': 'fontDescriptorWithFontAttributes(${1:NSDictionary* attributes})'
  'fontDescriptorWithMatrix:':
    'prefix': 'fontDescriptorWithMatrix:'
    'body': 'fontDescriptorWithMatrix(${1:NSAffineTransform* matrix})'
  'NSFontDescriptor.fontDescriptorWithName:matrix:':
    'prefix': 'fontDescriptorWithName:matrix:'
    'body': 'fontDescriptorWithName(${1:NSString* fontName}, matrix:${2:NSAffineTransform* matrix})'
  'NSFontDescriptor.fontDescriptorWithName:size:':
    'prefix': 'fontDescriptorWithName:size:'
    'body': 'fontDescriptorWithName(${1:NSString* fontName}, size:${2:CGFloat size})'
  'fontDescriptorWithSize:':
    'prefix': 'fontDescriptorWithSize:'
    'body': 'fontDescriptorWithSize(${1:CGFloat newPointSize})'
  'fontDescriptorWithSymbolicTraits:':
    'prefix': 'fontDescriptorWithSymbolicTraits:'
    'body': 'fontDescriptorWithSymbolicTraits(${1:NSFontSymbolicTraits symbolicTraits})'
  'initWithFontAttributes:':
    'prefix': 'initWithFontAttributes:'
    'body': 'initWithFontAttributes(${1:NSDictionary* attributes})'
  'matchingFontDescriptorWithMandatoryKeys:':
    'prefix': 'matchingFontDescriptorWithMandatoryKeys:'
    'body': 'matchingFontDescriptorWithMandatoryKeys(${1:NSSet* mandatoryKeys})'
  'matchingFontDescriptorsWithMandatoryKeys:':
    'prefix': 'matchingFontDescriptorsWithMandatoryKeys:'
    'body': 'matchingFontDescriptorsWithMandatoryKeys(${1:NSSet* mandatoryKeys})'
  'matrix':
    'prefix': 'matrix'
    'body': 'matrix()'
  'objectForKey:':
    'prefix': 'objectForKey:'
    'body': 'objectForKey(${1:NSString* anAttribute})'
  'pointSize':
    'prefix': 'pointSize'
    'body': 'pointSize()'
  'postscriptName':
    'prefix': 'postscriptName'
    'body': 'postscriptName()'
  'symbolicTraits':
    'prefix': 'symbolicTraits'
    'body': 'symbolicTraits()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'addCollection:options:':
    'prefix': 'addCollection:options:'
    'body': 'addCollection(${1:NSString* collectionName}, options:${2:NSInteger collectionOptions})'
  'addFontDescriptors:toCollection:':
    'prefix': 'addFontDescriptors:toCollection:'
    'body': 'addFontDescriptors(${1:NSArray* descriptors}, toCollection:${2:NSString* collectionName})'
  'addFontTrait:':
    'prefix': 'addFontTrait:'
    'body': 'addFontTrait(${1:id sender})'
  'availableFontFamilies':
    'prefix': 'availableFontFamilies'
    'body': 'availableFontFamilies()'
  'availableFontNamesMatchingFontDescriptor:':
    'prefix': 'availableFontNamesMatchingFontDescriptor:'
    'body': 'availableFontNamesMatchingFontDescriptor(${1:NSFontDescriptor* descriptor})'
  'availableFontNamesWithTraits:':
    'prefix': 'availableFontNamesWithTraits:'
    'body': 'availableFontNamesWithTraits(${1:NSFontTraitMask someTraits})'
  'availableFonts':
    'prefix': 'availableFonts'
    'body': 'availableFonts()'
  'availableMembersOfFontFamily:':
    'prefix': 'availableMembersOfFontFamily:'
    'body': 'availableMembersOfFontFamily(${1:NSString* fam})'
  'collectionNames':
    'prefix': 'collectionNames'
    'body': 'collectionNames()'
  'convertAttributes:':
    'prefix': 'convertAttributes:'
    'body': 'convertAttributes(${1:NSDictionary* attributes})'
  'convertFont:':
    'prefix': 'convertFont:'
    'body': 'convertFont(${1:NSFont* fontObj})'
  'convertFont:toFace:':
    'prefix': 'convertFont:toFace:'
    'body': 'convertFont(${1:NSFont* fontObj}, toFace:${2:NSString* typeface})'
  'convertFont:toFamily:':
    'prefix': 'convertFont:toFamily:'
    'body': 'convertFont(${1:NSFont* fontObj}, toFamily:${2:NSString* family})'
  'convertFont:toHaveTrait:':
    'prefix': 'convertFont:toHaveTrait:'
    'body': 'convertFont(${1:NSFont* fontObj}, toHaveTrait:${2:NSFontTraitMask trait})'
  'convertFont:toNotHaveTrait:':
    'prefix': 'convertFont:toNotHaveTrait:'
    'body': 'convertFont(${1:NSFont* fontObj}, toNotHaveTrait:${2:NSFontTraitMask trait})'
  'convertFont:toSize:':
    'prefix': 'convertFont:toSize:'
    'body': 'convertFont(${1:NSFont* fontObj}, toSize:${2:CGFloat size})'
  'convertFontTraits:':
    'prefix': 'convertFontTraits:'
    'body': 'convertFontTraits(${1:NSFontTraitMask traits})'
  'convertWeight:ofFont:':
    'prefix': 'convertWeight:ofFont:'
    'body': 'convertWeight(${1:BOOL upFlag}, ofFont:${2:NSFont* fontObj})'
  'currentFontAction':
    'prefix': 'currentFontAction'
    'body': 'currentFontAction()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'fontDescriptorsInCollection:':
    'prefix': 'fontDescriptorsInCollection:'
    'body': 'fontDescriptorsInCollection(${1:NSString* collectionNames})'
  'fontMenu:':
    'prefix': 'fontMenu:'
    'body': 'fontMenu(${1:BOOL create})'
  'fontNamed:hasTraits:':
    'prefix': 'fontNamed:hasTraits:'
    'body': 'fontNamed(${1:NSString* fName}, hasTraits:${2:NSFontTraitMask someTraits})'
  'fontPanel:':
    'prefix': 'fontPanel:'
    'body': 'fontPanel(${1:BOOL create})'
  'fontWithFamily:traits:weight:size:':
    'prefix': 'fontWithFamily:traits:weight:size:'
    'body': 'fontWithFamily(${1:NSString* family}, traits:${2:NSFontTraitMask traits}, weight:${3:NSInteger weight}, size:${4:CGFloat size})'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'isMultiple':
    'prefix': 'isMultiple'
    'body': 'isMultiple()'
  'localizedNameForFamily:face:':
    'prefix': 'localizedNameForFamily:face:'
    'body': 'localizedNameForFamily(${1:NSString* family}, face:${2:NSString* faceKey})'
  'modifyFont:':
    'prefix': 'modifyFont:'
    'body': 'modifyFont(${1:id sender})'
  'modifyFontViaPanel:':
    'prefix': 'modifyFontViaPanel:'
    'body': 'modifyFontViaPanel(${1:id sender})'
  'orderFrontFontPanel:':
    'prefix': 'orderFrontFontPanel:'
    'body': 'orderFrontFontPanel(${1:id sender})'
  'orderFrontStylesPanel:':
    'prefix': 'orderFrontStylesPanel:'
    'body': 'orderFrontStylesPanel(${1:id sender})'
  'removeCollection:':
    'prefix': 'removeCollection:'
    'body': 'removeCollection(${1:NSString* collectionName})'
  'removeFontDescriptor:fromCollection:':
    'prefix': 'removeFontDescriptor:fromCollection:'
    'body': 'removeFontDescriptor(${1:NSFontDescriptor* descriptor}, fromCollection:${2:NSString* collection})'
  'removeFontTrait:':
    'prefix': 'removeFontTrait:'
    'body': 'removeFontTrait(${1:id sender})'
  'selectedFont':
    'prefix': 'selectedFont'
    'body': 'selectedFont()'
  'sendAction':
    'prefix': 'sendAction'
    'body': 'sendAction()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL flag})'
  'NSFontManager.setFontManagerFactory:':
    'prefix': 'setFontManagerFactory:'
    'body': 'setFontManagerFactory(${1:Class factoryId})'
  'setFontMenu:':
    'prefix': 'setFontMenu:'
    'body': 'setFontMenu(${1:NSMenu* newMenu})'
  'NSFontManager.setFontPanelFactory:':
    'prefix': 'setFontPanelFactory:'
    'body': 'setFontPanelFactory(${1:Class factoryId})'
  'setSelectedAttributes:isMultiple:':
    'prefix': 'setSelectedAttributes:isMultiple:'
    'body': 'setSelectedAttributes(${1:NSDictionary* attributes}, isMultiple:${2:BOOL flag})'
  'setSelectedFont:isMultiple:':
    'prefix': 'setSelectedFont:isMultiple:'
    'body': 'setSelectedFont(${1:NSFont* fontObj}, isMultiple:${2:BOOL flag})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id aTarget})'
  'NSFontManager.sharedFontManager':
    'prefix': 'sharedFontManager'
    'body': 'sharedFontManager()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'traitsOfFont:':
    'prefix': 'traitsOfFont:'
    'body': 'traitsOfFont(${1:NSFont* fontObj})'
  'weightOfFont:':
    'prefix': 'weightOfFont:'
    'body': 'weightOfFont(${1:NSFont* fontObj})'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'panelConvertFont:':
    'prefix': 'panelConvertFont:'
    'body': 'panelConvertFont(${1:NSFont* fontObj})'
  'reloadDefaultFontFamilies':
    'prefix': 'reloadDefaultFontFamilies'
    'body': 'reloadDefaultFontFamilies()'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* aView})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL flag})'
  'setPanelFont:isMultiple:':
    'prefix': 'setPanelFont:isMultiple:'
    'body': 'setPanelFont(${1:NSFont* fontObj}, isMultiple:${2:BOOL flag})'
  'NSFontPanel.sharedFontPanel':
    'prefix': 'sharedFontPanel'
    'body': 'sharedFontPanel()'
  'NSFontPanel.sharedFontPanelExists':
    'prefix': 'sharedFontPanelExists'
    'body': 'sharedFontPanelExists()'
  'worksWhenModal':
    'prefix': 'worksWhenModal'
    'body': 'worksWhenModal()'
  'addEntry:':
    'prefix': 'addEntry:'
    'body': 'addEntry(${1:NSString* title})'
  'cellAtIndex:':
    'prefix': 'cellAtIndex:'
    'body': 'cellAtIndex(${1:NSInteger index})'
  'drawCellAtIndex:':
    'prefix': 'drawCellAtIndex:'
    'body': 'drawCellAtIndex(${1:NSInteger index})'
  'indexOfCellWithTag:':
    'prefix': 'indexOfCellWithTag:'
    'body': 'indexOfCellWithTag(${1:NSInteger aTag})'
  'indexOfSelectedItem':
    'prefix': 'indexOfSelectedItem'
    'body': 'indexOfSelectedItem()'
  'insertEntry:atIndex:':
    'prefix': 'insertEntry:atIndex:'
    'body': 'insertEntry(${1:NSString* title}, atIndex:${2:NSInteger index})'
  'preferredTextFieldWidth':
    'prefix': 'preferredTextFieldWidth'
    'body': 'preferredTextFieldWidth()'
  'removeEntryAtIndex:':
    'prefix': 'removeEntryAtIndex:'
    'body': 'removeEntryAtIndex(${1:NSInteger index})'
  'selectTextAtIndex:':
    'prefix': 'selectTextAtIndex:'
    'body': 'selectTextAtIndex(${1:NSInteger index})'
  'setBezeled:':
    'prefix': 'setBezeled:'
    'body': 'setBezeled(${1:BOOL flag})'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setEntryWidth:':
    'prefix': 'setEntryWidth:'
    'body': 'setEntryWidth(${1:CGFloat width})'
  'setFrameSize:':
    'prefix': 'setFrameSize:'
    'body': 'setFrameSize(${1:NSSize newSize})'
  'setInterlineSpacing:':
    'prefix': 'setInterlineSpacing:'
    'body': 'setInterlineSpacing(${1:CGFloat spacing})'
  'setPreferredTextFieldWidth:':
    'prefix': 'setPreferredTextFieldWidth:'
    'body': 'setPreferredTextFieldWidth(${1:CGFloat preferredWidth})'
  'setTextAlignment:':
    'prefix': 'setTextAlignment:'
    'body': 'setTextAlignment(${1:NSTextAlignment mode})'
  'setTextBaseWritingDirection:':
    'prefix': 'setTextBaseWritingDirection:'
    'body': 'setTextBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setTextFont:':
    'prefix': 'setTextFont:'
    'body': 'setTextFont(${1:NSFont* fontObj})'
  'setTitleAlignment:':
    'prefix': 'setTitleAlignment:'
    'body': 'setTitleAlignment(${1:NSTextAlignment mode})'
  'setTitleBaseWritingDirection:':
    'prefix': 'setTitleBaseWritingDirection:'
    'body': 'setTitleBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setTitleFont:':
    'prefix': 'setTitleFont:'
    'body': 'setTitleFont(${1:NSFont* fontObj})'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'initTextCell:':
    'prefix': 'initTextCell:'
    'body': 'initTextCell(${1:NSString* aString})'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'placeholderAttributedString':
    'prefix': 'placeholderAttributedString'
    'body': 'placeholderAttributedString()'
  'placeholderString':
    'prefix': 'placeholderString'
    'body': 'placeholderString()'
  'preferredTextFieldWidth':
    'prefix': 'preferredTextFieldWidth'
    'body': 'preferredTextFieldWidth()'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* obj})'
  'setPlaceholderAttributedString:':
    'prefix': 'setPlaceholderAttributedString:'
    'body': 'setPlaceholderAttributedString(${1:NSAttributedString* string})'
  'setPlaceholderString:':
    'prefix': 'setPlaceholderString:'
    'body': 'setPlaceholderString(${1:NSString* string})'
  'setPreferredTextFieldWidth:':
    'prefix': 'setPreferredTextFieldWidth:'
    'body': 'setPreferredTextFieldWidth(${1:CGFloat preferredWidth})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleAlignment:':
    'prefix': 'setTitleAlignment:'
    'body': 'setTitleAlignment(${1:NSTextAlignment mode})'
  'setTitleBaseWritingDirection:':
    'prefix': 'setTitleBaseWritingDirection:'
    'body': 'setTitleBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setTitleFont:':
    'prefix': 'setTitleFont:'
    'body': 'setTitleFont(${1:NSFont* fontObj})'
  'setTitleWidth:':
    'prefix': 'setTitleWidth:'
    'body': 'setTitleWidth(${1:CGFloat width})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleAlignment':
    'prefix': 'titleAlignment'
    'body': 'titleAlignment()'
  'titleBaseWritingDirection':
    'prefix': 'titleBaseWritingDirection'
    'body': 'titleBaseWritingDirection()'
  'titleFont':
    'prefix': 'titleFont'
    'body': 'titleFont()'
  'titleWidth':
    'prefix': 'titleWidth'
    'body': 'titleWidth()'
  'titleWidth:':
    'prefix': 'titleWidth:'
    'body': 'titleWidth(${1:NSSize aSize})'
  'generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:':
    'prefix': 'generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'
    'body': 'generateGlyphsForGlyphStorage(${1:id glyphStorage}, desiredNumberOfCharacters:${2:NSUInteger nChars}, glyphIndex:${3:NSUInteger* glyphIndex}, characterIndex:${4:NSUInteger* charIndex})'
  'NSGlyphGenerator.sharedGlyphGenerator':
    'prefix': 'sharedGlyphGenerator'
    'body': 'sharedGlyphGenerator()'
  'characterCollection':
    'prefix': 'characterCollection'
    'body': 'characterCollection()'
  'characterIdentifier':
    'prefix': 'characterIdentifier'
    'body': 'characterIdentifier()'
  'NSGlyphInfo.glyphInfoWithCharacterIdentifier:collection:baseString:':
    'prefix': 'glyphInfoWithCharacterIdentifier:collection:baseString:'
    'body': 'glyphInfoWithCharacterIdentifier(${1:NSUInteger cid}, collection:${2:NSCharacterCollection characterCollection}, baseString:${3:NSString* theString})'
  'NSGlyphInfo.glyphInfoWithGlyph:forFont:baseString:':
    'prefix': 'glyphInfoWithGlyph:forFont:baseString:'
    'body': 'glyphInfoWithGlyph(${1:NSGlyph glyph}, forFont:${2:NSFont* font}, baseString:${3:NSString* theString})'
  'NSGlyphInfo.glyphInfoWithGlyphName:forFont:baseString:':
    'prefix': 'glyphInfoWithGlyphName:forFont:baseString:'
    'body': 'glyphInfoWithGlyphName(${1:NSString* glyphName}, forFont:${2:NSFont* font}, baseString:${3:NSString* theString})'
  'glyphName':
    'prefix': 'glyphName'
    'body': 'glyphName()'
  'colorSpace':
    'prefix': 'colorSpace'
    'body': 'colorSpace()'
  'drawFromCenter:radius:toCenter:radius:options:':
    'prefix': 'drawFromCenter:radius:toCenter:radius:options:'
    'body': 'drawFromCenter(${1:NSPoint startCenter}, radius:${2:CGFloat startRadius}, toCenter:${3:NSPoint endCenter}, radius:${4:CGFloat endRadius}, options:${5:NSGradientDrawingOptions options})'
  'drawFromPoint:toPoint:options:':
    'prefix': 'drawFromPoint:toPoint:options:'
    'body': 'drawFromPoint(${1:NSPoint startingPoint}, toPoint:${2:NSPoint endingPoint}, options:${3:NSGradientDrawingOptions options})'
  'drawInBezierPath:angle:':
    'prefix': 'drawInBezierPath:angle:'
    'body': 'drawInBezierPath(${1:NSBezierPath* path}, angle:${2:CGFloat angle})'
  'drawInBezierPath:relativeCenterPosition:':
    'prefix': 'drawInBezierPath:relativeCenterPosition:'
    'body': 'drawInBezierPath(${1:NSBezierPath* path}, relativeCenterPosition:${2:NSPoint relativeCenterPosition})'
  'drawInRect:angle:':
    'prefix': 'drawInRect:angle:'
    'body': 'drawInRect(${1:NSRect rect}, angle:${2:CGFloat angle})'
  'drawInRect:relativeCenterPosition:':
    'prefix': 'drawInRect:relativeCenterPosition:'
    'body': 'drawInRect(${1:NSRect rect}, relativeCenterPosition:${2:NSPoint relativeCenterPosition})'
  'getColor:location:atIndex:':
    'prefix': 'getColor:location:atIndex:'
    'body': 'getColor(${1:NSColor** color}, location:${2:CGFloat* location}, atIndex:${3:NSInteger index})'
  'initWithColors:':
    'prefix': 'initWithColors:'
    'body': 'initWithColors(${1:NSArray* colorArray})'
  'initWithColors:atLocations:colorSpace:':
    'prefix': 'initWithColors:atLocations:colorSpace:'
    'body': 'initWithColors(${1:NSArray* colorArray}, atLocations:${2:CGFloat* locations}, colorSpace:${3:NSColorSpace* colorSpace})'
  'initWithColorsAndLocations:':
    'prefix': 'initWithColorsAndLocations:'
    'body': 'initWithColorsAndLocations(${1:NSColor* firstColor})'
  'initWithStartingColor:endingColor:':
    'prefix': 'initWithStartingColor:endingColor:'
    'body': 'initWithStartingColor(${1:NSColor* startingColor}, endingColor:${2:NSColor* endingColor})'
  'interpolatedColorAtLocation:':
    'prefix': 'interpolatedColorAtLocation:'
    'body': 'interpolatedColorAtLocation(${1:CGFloat location})'
  'numberOfColorStops':
    'prefix': 'numberOfColorStops'
    'body': 'numberOfColorStops()'
  'CIContext':
    'prefix': 'CIContext'
    'body': 'CIContext()'
  'attributes':
    'prefix': 'attributes'
    'body': 'attributes()'
  'colorRenderingIntent':
    'prefix': 'colorRenderingIntent'
    'body': 'colorRenderingIntent()'
  'compositingOperation':
    'prefix': 'compositingOperation'
    'body': 'compositingOperation()'
  'NSGraphicsContext.currentContext':
    'prefix': 'currentContext'
    'body': 'currentContext()'
  'NSGraphicsContext.currentContextDrawingToScreen':
    'prefix': 'currentContextDrawingToScreen'
    'body': 'currentContextDrawingToScreen()'
  'flushGraphics':
    'prefix': 'flushGraphics'
    'body': 'flushGraphics()'
  'NSGraphicsContext.graphicsContextWithAttributes:':
    'prefix': 'graphicsContextWithAttributes:'
    'body': 'graphicsContextWithAttributes(${1:NSDictionary* attributes})'
  'NSGraphicsContext.graphicsContextWithBitmapImageRep:':
    'prefix': 'graphicsContextWithBitmapImageRep:'
    'body': 'graphicsContextWithBitmapImageRep(${1:NSBitmapImageRep* bitmapRep})'
  'NSGraphicsContext.graphicsContextWithGraphicsPort:flipped:':
    'prefix': 'graphicsContextWithGraphicsPort:flipped:'
    'body': 'graphicsContextWithGraphicsPort(${1:void* graphicsPort}, flipped:${2:BOOL initialFlippedState})'
  'NSGraphicsContext.graphicsContextWithWindow:':
    'prefix': 'graphicsContextWithWindow:'
    'body': 'graphicsContextWithWindow(${1:NSWindow* window})'
  'graphicsPort':
    'prefix': 'graphicsPort'
    'body': 'graphicsPort()'
  'imageInterpolation':
    'prefix': 'imageInterpolation'
    'body': 'imageInterpolation()'
  'isDrawingToScreen':
    'prefix': 'isDrawingToScreen'
    'body': 'isDrawingToScreen()'
  'isFlipped':
    'prefix': 'isFlipped'
    'body': 'isFlipped()'
  'patternPhase':
    'prefix': 'patternPhase'
    'body': 'patternPhase()'
  'NSGraphicsContext.restoreGraphicsState':
    'prefix': 'restoreGraphicsState'
    'body': 'restoreGraphicsState()'
  'restoreGraphicsState':
    'prefix': 'restoreGraphicsState'
    'body': 'restoreGraphicsState()'
  'NSGraphicsContext.saveGraphicsState':
    'prefix': 'saveGraphicsState'
    'body': 'saveGraphicsState()'
  'saveGraphicsState':
    'prefix': 'saveGraphicsState'
    'body': 'saveGraphicsState()'
  'setColorRenderingIntent:':
    'prefix': 'setColorRenderingIntent:'
    'body': 'setColorRenderingIntent(${1:NSColorRenderingIntent renderingIntent})'
  'setCompositingOperation:':
    'prefix': 'setCompositingOperation:'
    'body': 'setCompositingOperation(${1:NSCompositingOperation operation})'
  'NSGraphicsContext.setCurrentContext:':
    'prefix': 'setCurrentContext:'
    'body': 'setCurrentContext(${1:NSGraphicsContext* context})'
  'NSGraphicsContext.setGraphicsState:':
    'prefix': 'setGraphicsState:'
    'body': 'setGraphicsState(${1:NSInteger gState})'
  'setImageInterpolation:':
    'prefix': 'setImageInterpolation:'
    'body': 'setImageInterpolation(${1:NSImageInterpolation interpolation})'
  'setPatternPhase:':
    'prefix': 'setPatternPhase:'
    'body': 'setPatternPhase(${1:NSPoint phase})'
  'setShouldAntialias:':
    'prefix': 'setShouldAntialias:'
    'body': 'setShouldAntialias(${1:BOOL antialias})'
  'shouldAntialias':
    'prefix': 'shouldAntialias'
    'body': 'shouldAntialias()'
  'contextHelpForObject:':
    'prefix': 'contextHelpForObject:'
    'body': 'contextHelpForObject(${1:id object})'
  'findString:inBook:':
    'prefix': 'findString:inBook:'
    'body': 'findString(${1:NSString* query}, inBook:${2:NSString* book})'
  'NSHelpManager.isContextHelpModeActive':
    'prefix': 'isContextHelpModeActive'
    'body': 'isContextHelpModeActive()'
  'openHelpAnchor:inBook:':
    'prefix': 'openHelpAnchor:inBook:'
    'body': 'openHelpAnchor(${1:NSString* anchor}, inBook:${2:NSString* book})'
  'registerBooksInBundle:':
    'prefix': 'registerBooksInBundle:'
    'body': 'registerBooksInBundle(${1:NSBundle* bundle})'
  'removeContextHelpForObject:':
    'prefix': 'removeContextHelpForObject:'
    'body': 'removeContextHelpForObject(${1:id object})'
  'setContextHelp:forObject:':
    'prefix': 'setContextHelp:forObject:'
    'body': 'setContextHelp(${1:NSAttributedString* attrString}, forObject:${2:id object})'
  'NSHelpManager.setContextHelpModeActive:':
    'prefix': 'setContextHelpModeActive:'
    'body': 'setContextHelpModeActive(${1:BOOL active})'
  'NSHelpManager.sharedHelpManager':
    'prefix': 'sharedHelpManager'
    'body': 'sharedHelpManager()'
  'showContextHelpForObject:locationHint:':
    'prefix': 'showContextHelpForObject:locationHint:'
    'body': 'showContextHelpForObject(${1:id object}, locationHint:${2:NSPoint pt})'
  'CGImageForProposedRect:context:hints:':
    'prefix': 'CGImageForProposedRect:context:hints:'
    'body': 'CGImageForProposedRect(${1:NSRect* proposedDestRect}, context:${2:NSGraphicsContext* referenceContext}, hints:${3:NSDictionary* hints})'
  'TIFFRepresentation':
    'prefix': 'TIFFRepresentation'
    'body': 'TIFFRepresentation()'
  'TIFFRepresentationUsingCompression:factor:':
    'prefix': 'TIFFRepresentationUsingCompression:factor:'
    'body': 'TIFFRepresentationUsingCompression(${1:NSTIFFCompression comp}, factor:${2:float aFloat})'
  'accessibilityDescription':
    'prefix': 'accessibilityDescription'
    'body': 'accessibilityDescription()'
  'addRepresentation:':
    'prefix': 'addRepresentation:'
    'body': 'addRepresentation(${1:NSImageRep* imageRep})'
  'addRepresentations:':
    'prefix': 'addRepresentations:'
    'body': 'addRepresentations(${1:NSArray* imageReps})'
  'alignmentRect':
    'prefix': 'alignmentRect'
    'body': 'alignmentRect()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'bestRepresentationForDevice:':
    'prefix': 'bestRepresentationForDevice:'
    'body': 'bestRepresentationForDevice(${1:NSDictionary* deviceDescription})'
  'bestRepresentationForRect:context:hints:':
    'prefix': 'bestRepresentationForRect:context:hints:'
    'body': 'bestRepresentationForRect(${1:NSRect rect}, context:${2:NSGraphicsContext* referenceContext}, hints:${3:NSDictionary* hints})'
  'cacheDepthMatchesImageDepth':
    'prefix': 'cacheDepthMatchesImageDepth'
    'body': 'cacheDepthMatchesImageDepth()'
  'cacheMode':
    'prefix': 'cacheMode'
    'body': 'cacheMode()'
  'NSImage.canInitWithPasteboard:':
    'prefix': 'canInitWithPasteboard:'
    'body': 'canInitWithPasteboard(${1:NSPasteboard* pasteboard})'
  'cancelIncrementalLoad':
    'prefix': 'cancelIncrementalLoad'
    'body': 'cancelIncrementalLoad()'
  'compositeToPoint:fromRect:operation:':
    'prefix': 'compositeToPoint:fromRect:operation:'
    'body': 'compositeToPoint(${1:NSPoint point}, fromRect:${2:NSRect rect}, operation:${3:NSCompositingOperation op})'
  'compositeToPoint:fromRect:operation:fraction:':
    'prefix': 'compositeToPoint:fromRect:operation:fraction:'
    'body': 'compositeToPoint(${1:NSPoint point}, fromRect:${2:NSRect rect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat delta})'
  'compositeToPoint:operation:':
    'prefix': 'compositeToPoint:operation:'
    'body': 'compositeToPoint(${1:NSPoint point}, operation:${2:NSCompositingOperation op})'
  'compositeToPoint:operation:fraction:':
    'prefix': 'compositeToPoint:operation:fraction:'
    'body': 'compositeToPoint(${1:NSPoint point}, operation:${2:NSCompositingOperation op}, fraction:${3:CGFloat delta})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dissolveToPoint:fraction:':
    'prefix': 'dissolveToPoint:fraction:'
    'body': 'dissolveToPoint(${1:NSPoint point}, fraction:${2:CGFloat aFloat})'
  'dissolveToPoint:fromRect:fraction:':
    'prefix': 'dissolveToPoint:fromRect:fraction:'
    'body': 'dissolveToPoint(${1:NSPoint point}, fromRect:${2:NSRect rect}, fraction:${3:CGFloat aFloat})'
  'drawAtPoint:fromRect:operation:fraction:':
    'prefix': 'drawAtPoint:fromRect:operation:fraction:'
    'body': 'drawAtPoint(${1:NSPoint point}, fromRect:${2:NSRect fromRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat delta})'
  'drawInRect:':
    'prefix': 'drawInRect:'
    'body': 'drawInRect(${1:NSRect rect})'
  'drawInRect:fromRect:operation:fraction:':
    'prefix': 'drawInRect:fromRect:operation:fraction:'
    'body': 'drawInRect(${1:NSRect rect}, fromRect:${2:NSRect fromRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat delta})'
  'drawInRect:fromRect:operation:fraction:respectFlipped:hints:':
    'prefix': 'drawInRect:fromRect:operation:fraction:respectFlipped:hints:'
    'body': 'drawInRect(${1:NSRect dstSpacePortionRect}, fromRect:${2:NSRect srcSpacePortionRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat requestedAlpha}, respectFlipped:${5:BOOL respectContextIsFlipped}, hints:${6:NSDictionary* hints})'
  'drawRepresentation:inRect:':
    'prefix': 'drawRepresentation:inRect:'
    'body': 'drawRepresentation(${1:NSImageRep* imageRep}, inRect:${2:NSRect rect})'
  'hitTestRect:withImageDestinationRect:context:hints:flipped:':
    'prefix': 'hitTestRect:withImageDestinationRect:context:hints:flipped:'
    'body': 'hitTestRect(${1:NSRect testRectDestSpace}, withImageDestinationRect:${2:NSRect imageRectDestSpace}, context:${3:NSGraphicsContext* context}, hints:${4:NSDictionary* hints}, flipped:${5:BOOL flipped})'
  'NSImage.imageFileTypes':
    'prefix': 'imageFileTypes'
    'body': 'imageFileTypes()'
  'NSImage.imageNamed:':
    'prefix': 'imageNamed:'
    'body': 'imageNamed(${1:NSString* name})'
  'NSImage.imagePasteboardTypes':
    'prefix': 'imagePasteboardTypes'
    'body': 'imagePasteboardTypes()'
  'NSImage.imageTypes':
    'prefix': 'imageTypes'
    'body': 'imageTypes()'
  'NSImage.imageUnfilteredFileTypes':
    'prefix': 'imageUnfilteredFileTypes'
    'body': 'imageUnfilteredFileTypes()'
  'NSImage.imageUnfilteredPasteboardTypes':
    'prefix': 'imageUnfilteredPasteboardTypes'
    'body': 'imageUnfilteredPasteboardTypes()'
  'NSImage.imageUnfilteredTypes':
    'prefix': 'imageUnfilteredTypes'
    'body': 'imageUnfilteredTypes()'
  'NSImage.imageWithSize:flipped:drawingHandler:':
    'prefix': 'imageWithSize:flipped:drawingHandler:'
    'body': 'imageWithSize(${1:NSSize size}, flipped:${2:BOOL drawingHandlerShouldBeCalledWithFlippedContext}, drawingHandler:${3:BOOL (^)(NSRect) drawingHandler})'
  'initByReferencingFile:':
    'prefix': 'initByReferencingFile:'
    'body': 'initByReferencingFile(${1:NSString* fileName})'
  'initByReferencingURL:':
    'prefix': 'initByReferencingURL:'
    'body': 'initByReferencingURL(${1:NSURL* url})'
  'initWithCGImage:size:':
    'prefix': 'initWithCGImage:size:'
    'body': 'initWithCGImage(${1:CGImageRef cgImage}, size:${2:NSSize size})'
  'initWithContentsOfFile:':
    'prefix': 'initWithContentsOfFile:'
    'body': 'initWithContentsOfFile(${1:NSString* fileName})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* url})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithDataIgnoringOrientation:':
    'prefix': 'initWithDataIgnoringOrientation:'
    'body': 'initWithDataIgnoringOrientation(${1:NSData* data})'
  'initWithIconRef:':
    'prefix': 'initWithIconRef:'
    'body': 'initWithIconRef(${1:IconRef iconRef})'
  'initWithPasteboard:':
    'prefix': 'initWithPasteboard:'
    'body': 'initWithPasteboard(${1:NSPasteboard* pasteboard})'
  'initWithSize:':
    'prefix': 'initWithSize:'
    'body': 'initWithSize(${1:NSSize aSize})'
  'isCachedSeparately':
    'prefix': 'isCachedSeparately'
    'body': 'isCachedSeparately()'
  'isDataRetained':
    'prefix': 'isDataRetained'
    'body': 'isDataRetained()'
  'isFlipped':
    'prefix': 'isFlipped'
    'body': 'isFlipped()'
  'isTemplate':
    'prefix': 'isTemplate'
    'body': 'isTemplate()'
  'isValid':
    'prefix': 'isValid'
    'body': 'isValid()'
  'layerContentsForContentsScale:':
    'prefix': 'layerContentsForContentsScale:'
    'body': 'layerContentsForContentsScale(${1:CGFloat layerContentsScale})'
  'lockFocus':
    'prefix': 'lockFocus'
    'body': 'lockFocus()'
  'lockFocusFlipped:':
    'prefix': 'lockFocusFlipped:'
    'body': 'lockFocusFlipped(${1:BOOL flipped})'
  'lockFocusOnRepresentation:':
    'prefix': 'lockFocusOnRepresentation:'
    'body': 'lockFocusOnRepresentation(${1:NSImageRep* imageRepresentation})'
  'matchesOnMultipleResolution':
    'prefix': 'matchesOnMultipleResolution'
    'body': 'matchesOnMultipleResolution()'
  'matchesOnlyOnBestFittingAxis':
    'prefix': 'matchesOnlyOnBestFittingAxis'
    'body': 'matchesOnlyOnBestFittingAxis()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'prefersColorMatch':
    'prefix': 'prefersColorMatch'
    'body': 'prefersColorMatch()'
  'recache':
    'prefix': 'recache'
    'body': 'recache()'
  'recommendedLayerContentsScale:':
    'prefix': 'recommendedLayerContentsScale:'
    'body': 'recommendedLayerContentsScale(${1:CGFloat preferredContentsScale})'
  'removeRepresentation:':
    'prefix': 'removeRepresentation:'
    'body': 'removeRepresentation(${1:NSImageRep* imageRep})'
  'representations':
    'prefix': 'representations'
    'body': 'representations()'
  'scalesWhenResized':
    'prefix': 'scalesWhenResized'
    'body': 'scalesWhenResized()'
  'setAccessibilityDescription:':
    'prefix': 'setAccessibilityDescription:'
    'body': 'setAccessibilityDescription(${1:NSString* description})'
  'setAlignmentRect:':
    'prefix': 'setAlignmentRect:'
    'body': 'setAlignmentRect(${1:NSRect rect})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* aColor})'
  'setCacheDepthMatchesImageDepth:':
    'prefix': 'setCacheDepthMatchesImageDepth:'
    'body': 'setCacheDepthMatchesImageDepth(${1:BOOL flag})'
  'setCacheMode:':
    'prefix': 'setCacheMode:'
    'body': 'setCacheMode(${1:NSImageCacheMode mode})'
  'setCachedSeparately:':
    'prefix': 'setCachedSeparately:'
    'body': 'setCachedSeparately(${1:BOOL flag})'
  'setDataRetained:':
    'prefix': 'setDataRetained:'
    'body': 'setDataRetained(${1:BOOL flag})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setFlipped:':
    'prefix': 'setFlipped:'
    'body': 'setFlipped(${1:BOOL flag})'
  'setMatchesOnMultipleResolution:':
    'prefix': 'setMatchesOnMultipleResolution:'
    'body': 'setMatchesOnMultipleResolution(${1:BOOL flag})'
  'setMatchesOnlyOnBestFittingAxis:':
    'prefix': 'setMatchesOnlyOnBestFittingAxis:'
    'body': 'setMatchesOnlyOnBestFittingAxis(${1:BOOL flag})'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* string})'
  'setPrefersColorMatch:':
    'prefix': 'setPrefersColorMatch:'
    'body': 'setPrefersColorMatch(${1:BOOL flag})'
  'setScalesWhenResized:':
    'prefix': 'setScalesWhenResized:'
    'body': 'setScalesWhenResized(${1:BOOL flag})'
  'setSize:':
    'prefix': 'setSize:'
    'body': 'setSize(${1:NSSize aSize})'
  'setTemplate:':
    'prefix': 'setTemplate:'
    'body': 'setTemplate(${1:BOOL isTemplate})'
  'setUsesEPSOnResolutionMismatch:':
    'prefix': 'setUsesEPSOnResolutionMismatch:'
    'body': 'setUsesEPSOnResolutionMismatch(${1:BOOL flag})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'unlockFocus':
    'prefix': 'unlockFocus'
    'body': 'unlockFocus()'
  'usesEPSOnResolutionMismatch':
    'prefix': 'usesEPSOnResolutionMismatch'
    'body': 'usesEPSOnResolutionMismatch()'
  'imageAlignment':
    'prefix': 'imageAlignment'
    'body': 'imageAlignment()'
  'imageFrameStyle':
    'prefix': 'imageFrameStyle'
    'body': 'imageFrameStyle()'
  'imageScaling':
    'prefix': 'imageScaling'
    'body': 'imageScaling()'
  'setImageAlignment:':
    'prefix': 'setImageAlignment:'
    'body': 'setImageAlignment(${1:NSImageAlignment newAlign})'
  'setImageFrameStyle:':
    'prefix': 'setImageFrameStyle:'
    'body': 'setImageFrameStyle(${1:NSImageFrameStyle newStyle})'
  'setImageScaling:':
    'prefix': 'setImageScaling:'
    'body': 'setImageScaling(${1:NSImageScaling newScaling})'
  'CGImageForProposedRect:context:hints:':
    'prefix': 'CGImageForProposedRect:context:hints:'
    'body': 'CGImageForProposedRect(${1:NSRect* proposedDestRect}, context:${2:NSGraphicsContext* context}, hints:${3:NSDictionary* hints})'
  'bitsPerSample':
    'prefix': 'bitsPerSample'
    'body': 'bitsPerSample()'
  'NSImageRep.canInitWithData:':
    'prefix': 'canInitWithData:'
    'body': 'canInitWithData(${1:NSData* data})'
  'NSImageRep.canInitWithPasteboard:':
    'prefix': 'canInitWithPasteboard:'
    'body': 'canInitWithPasteboard(${1:NSPasteboard* pasteboard})'
  'colorSpaceName':
    'prefix': 'colorSpaceName'
    'body': 'colorSpaceName()'
  'draw':
    'prefix': 'draw'
    'body': 'draw()'
  'drawAtPoint:':
    'prefix': 'drawAtPoint:'
    'body': 'drawAtPoint(${1:NSPoint point})'
  'drawInRect:':
    'prefix': 'drawInRect:'
    'body': 'drawInRect(${1:NSRect rect})'
  'drawInRect:fromRect:operation:fraction:respectFlipped:hints:':
    'prefix': 'drawInRect:fromRect:operation:fraction:respectFlipped:hints:'
    'body': 'drawInRect(${1:NSRect dstSpacePortionRect}, fromRect:${2:NSRect srcSpacePortionRect}, operation:${3:NSCompositingOperation op}, fraction:${4:CGFloat requestedAlpha}, respectFlipped:${5:BOOL respectContextIsFlipped}, hints:${6:NSDictionary* hints})'
  'hasAlpha':
    'prefix': 'hasAlpha'
    'body': 'hasAlpha()'
  'NSImageRep.imageFileTypes':
    'prefix': 'imageFileTypes'
    'body': 'imageFileTypes()'
  'NSImageRep.imagePasteboardTypes':
    'prefix': 'imagePasteboardTypes'
    'body': 'imagePasteboardTypes()'
  'NSImageRep.imageRepClassForData:':
    'prefix': 'imageRepClassForData:'
    'body': 'imageRepClassForData(${1:NSData* data})'
  'NSImageRep.imageRepClassForFileType:':
    'prefix': 'imageRepClassForFileType:'
    'body': 'imageRepClassForFileType(${1:NSString* type})'
  'NSImageRep.imageRepClassForPasteboardType:':
    'prefix': 'imageRepClassForPasteboardType:'
    'body': 'imageRepClassForPasteboardType(${1:NSString* type})'
  'NSImageRep.imageRepClassForType:':
    'prefix': 'imageRepClassForType:'
    'body': 'imageRepClassForType(${1:NSString* type})'
  'NSImageRep.imageRepWithContentsOfFile:':
    'prefix': 'imageRepWithContentsOfFile:'
    'body': 'imageRepWithContentsOfFile(${1:NSString* filename})'
  'NSImageRep.imageRepWithContentsOfURL:':
    'prefix': 'imageRepWithContentsOfURL:'
    'body': 'imageRepWithContentsOfURL(${1:NSURL* url})'
  'NSImageRep.imageRepWithPasteboard:':
    'prefix': 'imageRepWithPasteboard:'
    'body': 'imageRepWithPasteboard(${1:NSPasteboard* pasteboard})'
  'NSImageRep.imageRepsWithContentsOfFile:':
    'prefix': 'imageRepsWithContentsOfFile:'
    'body': 'imageRepsWithContentsOfFile(${1:NSString* filename})'
  'NSImageRep.imageRepsWithContentsOfURL:':
    'prefix': 'imageRepsWithContentsOfURL:'
    'body': 'imageRepsWithContentsOfURL(${1:NSURL* url})'
  'NSImageRep.imageRepsWithPasteboard:':
    'prefix': 'imageRepsWithPasteboard:'
    'body': 'imageRepsWithPasteboard(${1:NSPasteboard* pasteboard})'
  'NSImageRep.imageTypes':
    'prefix': 'imageTypes'
    'body': 'imageTypes()'
  'NSImageRep.imageUnfilteredFileTypes':
    'prefix': 'imageUnfilteredFileTypes'
    'body': 'imageUnfilteredFileTypes()'
  'NSImageRep.imageUnfilteredPasteboardTypes':
    'prefix': 'imageUnfilteredPasteboardTypes'
    'body': 'imageUnfilteredPasteboardTypes()'
  'NSImageRep.imageUnfilteredTypes':
    'prefix': 'imageUnfilteredTypes'
    'body': 'imageUnfilteredTypes()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'pixelsHigh':
    'prefix': 'pixelsHigh'
    'body': 'pixelsHigh()'
  'pixelsWide':
    'prefix': 'pixelsWide'
    'body': 'pixelsWide()'
  'NSImageRep.registerImageRepClass:':
    'prefix': 'registerImageRepClass:'
    'body': 'registerImageRepClass(${1:Class imageRepClass})'
  'NSImageRep.registeredImageRepClasses':
    'prefix': 'registeredImageRepClasses'
    'body': 'registeredImageRepClasses()'
  'setAlpha:':
    'prefix': 'setAlpha:'
    'body': 'setAlpha(${1:BOOL flag})'
  'setBitsPerSample:':
    'prefix': 'setBitsPerSample:'
    'body': 'setBitsPerSample(${1:NSInteger anInt})'
  'setColorSpaceName:':
    'prefix': 'setColorSpaceName:'
    'body': 'setColorSpaceName(${1:NSString* string})'
  'setOpaque:':
    'prefix': 'setOpaque:'
    'body': 'setOpaque(${1:BOOL flag})'
  'setPixelsHigh:':
    'prefix': 'setPixelsHigh:'
    'body': 'setPixelsHigh(${1:NSInteger anInt})'
  'setPixelsWide:':
    'prefix': 'setPixelsWide:'
    'body': 'setPixelsWide(${1:NSInteger anInt})'
  'setSize:':
    'prefix': 'setSize:'
    'body': 'setSize(${1:NSSize aSize})'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'NSImageRep.unregisterImageRepClass:':
    'prefix': 'unregisterImageRepClass:'
    'body': 'unregisterImageRepClass(${1:Class imageRepClass})'
  'allowsCutCopyPaste':
    'prefix': 'allowsCutCopyPaste'
    'body': 'allowsCutCopyPaste()'
  'animates':
    'prefix': 'animates'
    'body': 'animates()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imageAlignment':
    'prefix': 'imageAlignment'
    'body': 'imageAlignment()'
  'imageFrameStyle':
    'prefix': 'imageFrameStyle'
    'body': 'imageFrameStyle()'
  'imageScaling':
    'prefix': 'imageScaling'
    'body': 'imageScaling()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'setAllowsCutCopyPaste:':
    'prefix': 'setAllowsCutCopyPaste:'
    'body': 'setAllowsCutCopyPaste(${1:BOOL allow})'
  'setAnimates:':
    'prefix': 'setAnimates:'
    'body': 'setAnimates(${1:BOOL flag})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL yn})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* newImage})'
  'setImageAlignment:':
    'prefix': 'setImageAlignment:'
    'body': 'setImageAlignment(${1:NSImageAlignment newAlign})'
  'setImageFrameStyle:':
    'prefix': 'setImageFrameStyle:'
    'body': 'setImageFrameStyle(${1:NSImageFrameStyle newStyle})'
  'setImageScaling:':
    'prefix': 'setImageScaling:'
    'body': 'setImageScaling(${1:NSImageScaling newScaling})'
  'NSInputManager.currentInputManager':
    'prefix': 'currentInputManager'
    'body': 'currentInputManager()'
  'NSInputManager.cycleToNextInputLanguage:':
    'prefix': 'cycleToNextInputLanguage:'
    'body': 'cycleToNextInputLanguage(${1:id sender})'
  'NSInputManager.cycleToNextInputServerInLanguage:':
    'prefix': 'cycleToNextInputServerInLanguage:'
    'body': 'cycleToNextInputServerInLanguage(${1:id sender})'
  'handleMouseEvent:':
    'prefix': 'handleMouseEvent:'
    'body': 'handleMouseEvent(${1:NSEvent* theMouseEvent})'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithName:host:':
    'prefix': 'initWithName:host:'
    'body': 'initWithName(${1:NSString* inputServerName}, host:${2:NSString* hostName})'
  'language':
    'prefix': 'language'
    'body': 'language()'
  'localizedInputManagerName':
    'prefix': 'localizedInputManagerName'
    'body': 'localizedInputManagerName()'
  'markedTextAbandoned:':
    'prefix': 'markedTextAbandoned:'
    'body': 'markedTextAbandoned(${1:id cli})'
  'markedTextSelectionChanged:client:':
    'prefix': 'markedTextSelectionChanged:client:'
    'body': 'markedTextSelectionChanged(${1:NSRange newSel}, client:${2:id cli})'
  'server':
    'prefix': 'server'
    'body': 'server()'
  'wantsToDelayTextChangeNotifications':
    'prefix': 'wantsToDelayTextChangeNotifications'
    'body': 'wantsToDelayTextChangeNotifications()'
  'wantsToHandleMouseEvents':
    'prefix': 'wantsToHandleMouseEvents'
    'body': 'wantsToHandleMouseEvents()'
  'wantsToInterpretAllKeystrokes':
    'prefix': 'wantsToInterpretAllKeystrokes'
    'body': 'wantsToInterpretAllKeystrokes()'
  'initWithDelegate:name:':
    'prefix': 'initWithDelegate:name:'
    'body': 'initWithDelegate(${1:id aDelegate}, name:${2:NSString* name})'
  'constant':
    'prefix': 'constant'
    'body': 'constant()'
  'NSLayoutConstraint.constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:':
    'prefix': 'constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'
    'body': 'constraintWithItem(${1:id view1}, attribute:${2:NSLayoutAttribute attr1}, relatedBy:${3:NSLayoutRelation relation}, toItem:${4:id view2}, attribute:${5:NSLayoutAttribute attr2}, multiplier:${6:CGFloat multiplier}, constant:${7:CGFloat c})'
  'NSLayoutConstraint.constraintsWithVisualFormat:options:metrics:views:':
    'prefix': 'constraintsWithVisualFormat:options:metrics:views:'
    'body': 'constraintsWithVisualFormat(${1:NSString* format}, options:${2:NSLayoutFormatOptions opts}, metrics:${3:NSDictionary* metrics}, views:${4:NSDictionary* views})'
  'firstAttribute':
    'prefix': 'firstAttribute'
    'body': 'firstAttribute()'
  'firstItem':
    'prefix': 'firstItem'
    'body': 'firstItem()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'multiplier':
    'prefix': 'multiplier'
    'body': 'multiplier()'
  'priority':
    'prefix': 'priority'
    'body': 'priority()'
  'relation':
    'prefix': 'relation'
    'body': 'relation()'
  'secondAttribute':
    'prefix': 'secondAttribute'
    'body': 'secondAttribute()'
  'secondItem':
    'prefix': 'secondItem'
    'body': 'secondItem()'
  'setConstant:':
    'prefix': 'setConstant:'
    'body': 'setConstant(${1:CGFloat constant})'
  'setIdentifier:':
    'prefix': 'setIdentifier:'
    'body': 'setIdentifier(${1:NSString* identifier})'
  'setPriority:':
    'prefix': 'setPriority:'
    'body': 'setPriority(${1:NSLayoutPriority priority})'
  'setShouldBeArchived:':
    'prefix': 'setShouldBeArchived:'
    'body': 'setShouldBeArchived(${1:BOOL shouldBeArchived})'
  'shouldBeArchived':
    'prefix': 'shouldBeArchived'
    'body': 'shouldBeArchived()'
  'addTemporaryAttribute:value:forCharacterRange:':
    'prefix': 'addTemporaryAttribute:value:forCharacterRange:'
    'body': 'addTemporaryAttribute(${1:NSString* attrName}, value:${2:id value}, forCharacterRange:${3:NSRange charRange})'
  'addTemporaryAttributes:forCharacterRange:':
    'prefix': 'addTemporaryAttributes:forCharacterRange:'
    'body': 'addTemporaryAttributes(${1:NSDictionary* attrs}, forCharacterRange:${2:NSRange charRange})'
  'addTextContainer:':
    'prefix': 'addTextContainer:'
    'body': 'addTextContainer(${1:NSTextContainer* container})'
  'allowsNonContiguousLayout':
    'prefix': 'allowsNonContiguousLayout'
    'body': 'allowsNonContiguousLayout()'
  'attachmentSizeForGlyphAtIndex:':
    'prefix': 'attachmentSizeForGlyphAtIndex:'
    'body': 'attachmentSizeForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'backgroundLayoutEnabled':
    'prefix': 'backgroundLayoutEnabled'
    'body': 'backgroundLayoutEnabled()'
  'boundingRectForGlyphRange:inTextContainer:':
    'prefix': 'boundingRectForGlyphRange:inTextContainer:'
    'body': 'boundingRectForGlyphRange(${1:NSRange glyphRange}, inTextContainer:${2:NSTextContainer* container})'
  'boundsRectForTextBlock:atIndex:effectiveRange:':
    'prefix': 'boundsRectForTextBlock:atIndex:effectiveRange:'
    'body': 'boundsRectForTextBlock(${1:NSTextBlock* block}, atIndex:${2:NSUInteger glyphIndex}, effectiveRange:${3:NSRangePointer effectiveGlyphRange})'
  'boundsRectForTextBlock:glyphRange:':
    'prefix': 'boundsRectForTextBlock:glyphRange:'
    'body': 'boundsRectForTextBlock(${1:NSTextBlock* block}, glyphRange:${2:NSRange glyphRange})'
  'characterIndexForGlyphAtIndex:':
    'prefix': 'characterIndexForGlyphAtIndex:'
    'body': 'characterIndexForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:':
    'prefix': 'characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'
    'body': 'characterIndexForPoint(${1:NSPoint point}, inTextContainer:${2:NSTextContainer* container}, fractionOfDistanceBetweenInsertionPoints:${3:CGFloat* partialFraction})'
  'characterRangeForGlyphRange:actualGlyphRange:':
    'prefix': 'characterRangeForGlyphRange:actualGlyphRange:'
    'body': 'characterRangeForGlyphRange(${1:NSRange glyphRange}, actualGlyphRange:${2:NSRangePointer actualGlyphRange})'
  'defaultAttachmentScaling':
    'prefix': 'defaultAttachmentScaling'
    'body': 'defaultAttachmentScaling()'
  'defaultBaselineOffsetForFont:':
    'prefix': 'defaultBaselineOffsetForFont:'
    'body': 'defaultBaselineOffsetForFont(${1:NSFont* theFont})'
  'defaultLineHeightForFont:':
    'prefix': 'defaultLineHeightForFont:'
    'body': 'defaultLineHeightForFont(${1:NSFont* theFont})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deleteGlyphsInRange:':
    'prefix': 'deleteGlyphsInRange:'
    'body': 'deleteGlyphsInRange(${1:NSRange glyphRange})'
  'drawBackgroundForGlyphRange:atPoint:':
    'prefix': 'drawBackgroundForGlyphRange:atPoint:'
    'body': 'drawBackgroundForGlyphRange(${1:NSRange glyphsToShow}, atPoint:${2:NSPoint origin})'
  'drawGlyphsForGlyphRange:atPoint:':
    'prefix': 'drawGlyphsForGlyphRange:atPoint:'
    'body': 'drawGlyphsForGlyphRange(${1:NSRange glyphsToShow}, atPoint:${2:NSPoint origin})'
  'drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'drawStrikethroughForGlyphRange(${1:NSRange glyphRange}, strikethroughType:${2:NSInteger strikethroughVal}, baselineOffset:${3:CGFloat baselineOffset}, lineFragmentRect:${4:NSRect lineRect}, lineFragmentGlyphRange:${5:NSRange lineGlyphRange}, containerOrigin:${6:NSPoint containerOrigin})'
  'drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'drawUnderlineForGlyphRange(${1:NSRange glyphRange}, underlineType:${2:NSInteger underlineVal}, baselineOffset:${3:CGFloat baselineOffset}, lineFragmentRect:${4:NSRect lineRect}, lineFragmentGlyphRange:${5:NSRange lineGlyphRange}, containerOrigin:${6:NSPoint containerOrigin})'
  'drawsOutsideLineFragmentForGlyphAtIndex:':
    'prefix': 'drawsOutsideLineFragmentForGlyphAtIndex:'
    'body': 'drawsOutsideLineFragmentForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'ensureGlyphsForCharacterRange:':
    'prefix': 'ensureGlyphsForCharacterRange:'
    'body': 'ensureGlyphsForCharacterRange(${1:NSRange charRange})'
  'ensureGlyphsForGlyphRange:':
    'prefix': 'ensureGlyphsForGlyphRange:'
    'body': 'ensureGlyphsForGlyphRange(${1:NSRange glyphRange})'
  'ensureLayoutForBoundingRect:inTextContainer:':
    'prefix': 'ensureLayoutForBoundingRect:inTextContainer:'
    'body': 'ensureLayoutForBoundingRect(${1:NSRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'ensureLayoutForCharacterRange:':
    'prefix': 'ensureLayoutForCharacterRange:'
    'body': 'ensureLayoutForCharacterRange(${1:NSRange charRange})'
  'ensureLayoutForGlyphRange:':
    'prefix': 'ensureLayoutForGlyphRange:'
    'body': 'ensureLayoutForGlyphRange(${1:NSRange glyphRange})'
  'ensureLayoutForTextContainer:':
    'prefix': 'ensureLayoutForTextContainer:'
    'body': 'ensureLayoutForTextContainer(${1:NSTextContainer* container})'
  'extraLineFragmentRect':
    'prefix': 'extraLineFragmentRect'
    'body': 'extraLineFragmentRect()'
  'extraLineFragmentTextContainer':
    'prefix': 'extraLineFragmentTextContainer'
    'body': 'extraLineFragmentTextContainer()'
  'extraLineFragmentUsedRect':
    'prefix': 'extraLineFragmentUsedRect'
    'body': 'extraLineFragmentUsedRect()'
  'fillBackgroundRectArray:count:forCharacterRange:color:':
    'prefix': 'fillBackgroundRectArray:count:forCharacterRange:color:'
    'body': 'fillBackgroundRectArray(${1:NSRectArray rectArray}, count:${2:NSUInteger rectCount}, forCharacterRange:${3:NSRange charRange}, color:${4:NSColor* color})'
  'firstTextView':
    'prefix': 'firstTextView'
    'body': 'firstTextView()'
  'firstUnlaidCharacterIndex':
    'prefix': 'firstUnlaidCharacterIndex'
    'body': 'firstUnlaidCharacterIndex()'
  'firstUnlaidGlyphIndex':
    'prefix': 'firstUnlaidGlyphIndex'
    'body': 'firstUnlaidGlyphIndex()'
  'fractionOfDistanceThroughGlyphForPoint:inTextContainer:':
    'prefix': 'fractionOfDistanceThroughGlyphForPoint:inTextContainer:'
    'body': 'fractionOfDistanceThroughGlyphForPoint(${1:NSPoint point}, inTextContainer:${2:NSTextContainer* container})'
  'getFirstUnlaidCharacterIndex:glyphIndex:':
    'prefix': 'getFirstUnlaidCharacterIndex:glyphIndex:'
    'body': 'getFirstUnlaidCharacterIndex(${1:NSUInteger* charIndex}, glyphIndex:${2:NSUInteger* glyphIndex})'
  'getGlyphs:range:':
    'prefix': 'getGlyphs:range:'
    'body': 'getGlyphs(${1:NSGlyph* glyphArray}, range:${2:NSRange glyphRange})'
  'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:':
    'prefix': 'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'
    'body': 'getGlyphsInRange(${1:NSRange glyphRange}, glyphs:${2:NSGlyph* glyphBuffer}, characterIndexes:${3:NSUInteger* charIndexBuffer}, glyphInscriptions:${4:NSGlyphInscription* inscribeBuffer}, elasticBits:${5:BOOL* elasticBuffer})'
  'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:':
    'prefix': 'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'
    'body': 'getGlyphsInRange(${1:NSRange glyphRange}, glyphs:${2:NSGlyph* glyphBuffer}, characterIndexes:${3:NSUInteger* charIndexBuffer}, glyphInscriptions:${4:NSGlyphInscription* inscribeBuffer}, elasticBits:${5:BOOL* elasticBuffer}, bidiLevels:${6:unsigned char* bidiLevelBuffer})'
  'getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:':
    'prefix': 'getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'
    'body': 'getLineFragmentInsertionPointsForCharacterAtIndex(${1:NSUInteger charIndex}, alternatePositions:${2:BOOL aFlag}, inDisplayOrder:${3:BOOL dFlag}, positions:${4:CGFloat* positions}, characterIndexes:${5:NSUInteger* charIndexes})'
  'glyphAtIndex:':
    'prefix': 'glyphAtIndex:'
    'body': 'glyphAtIndex(${1:NSUInteger glyphIndex})'
  'glyphAtIndex:isValidIndex:':
    'prefix': 'glyphAtIndex:isValidIndex:'
    'body': 'glyphAtIndex(${1:NSUInteger glyphIndex}, isValidIndex:${2:BOOL* isValidIndex})'
  'glyphGenerator':
    'prefix': 'glyphGenerator'
    'body': 'glyphGenerator()'
  'glyphIndexForCharacterAtIndex:':
    'prefix': 'glyphIndexForCharacterAtIndex:'
    'body': 'glyphIndexForCharacterAtIndex(${1:NSUInteger charIndex})'
  'glyphIndexForPoint:inTextContainer:':
    'prefix': 'glyphIndexForPoint:inTextContainer:'
    'body': 'glyphIndexForPoint(${1:NSPoint point}, inTextContainer:${2:NSTextContainer* container})'
  'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:':
    'prefix': 'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'
    'body': 'glyphIndexForPoint(${1:NSPoint point}, inTextContainer:${2:NSTextContainer* container}, fractionOfDistanceThroughGlyph:${3:CGFloat* partialFraction})'
  'glyphRangeForBoundingRect:inTextContainer:':
    'prefix': 'glyphRangeForBoundingRect:inTextContainer:'
    'body': 'glyphRangeForBoundingRect(${1:NSRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:':
    'prefix': 'glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'
    'body': 'glyphRangeForBoundingRectWithoutAdditionalLayout(${1:NSRect bounds}, inTextContainer:${2:NSTextContainer* container})'
  'glyphRangeForCharacterRange:actualCharacterRange:':
    'prefix': 'glyphRangeForCharacterRange:actualCharacterRange:'
    'body': 'glyphRangeForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'glyphRangeForTextContainer:':
    'prefix': 'glyphRangeForTextContainer:'
    'body': 'glyphRangeForTextContainer(${1:NSTextContainer* container})'
  'hasNonContiguousLayout':
    'prefix': 'hasNonContiguousLayout'
    'body': 'hasNonContiguousLayout()'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'insertGlyph:atGlyphIndex:characterIndex:':
    'prefix': 'insertGlyph:atGlyphIndex:characterIndex:'
    'body': 'insertGlyph(${1:NSGlyph glyph}, atGlyphIndex:${2:NSUInteger glyphIndex}, characterIndex:${3:NSUInteger charIndex})'
  'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:':
    'prefix': 'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'
    'body': 'insertGlyphs(${1:NSGlyph* glyphs}, length:${2:NSUInteger length}, forStartingGlyphAtIndex:${3:NSUInteger glyphIndex}, characterIndex:${4:NSUInteger charIndex})'
  'insertTextContainer:atIndex:':
    'prefix': 'insertTextContainer:atIndex:'
    'body': 'insertTextContainer(${1:NSTextContainer* container}, atIndex:${2:NSUInteger index})'
  'intAttribute:forGlyphAtIndex:':
    'prefix': 'intAttribute:forGlyphAtIndex:'
    'body': 'intAttribute(${1:NSInteger attributeTag}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'invalidateDisplayForCharacterRange:':
    'prefix': 'invalidateDisplayForCharacterRange:'
    'body': 'invalidateDisplayForCharacterRange(${1:NSRange charRange})'
  'invalidateDisplayForGlyphRange:':
    'prefix': 'invalidateDisplayForGlyphRange:'
    'body': 'invalidateDisplayForGlyphRange(${1:NSRange glyphRange})'
  'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:':
    'prefix': 'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'
    'body': 'invalidateGlyphsForCharacterRange(${1:NSRange charRange}, changeInLength:${2:NSInteger delta}, actualCharacterRange:${3:NSRangePointer actualCharRange})'
  'invalidateGlyphsOnLayoutInvalidationForGlyphRange:':
    'prefix': 'invalidateGlyphsOnLayoutInvalidationForGlyphRange:'
    'body': 'invalidateGlyphsOnLayoutInvalidationForGlyphRange(${1:NSRange glyphRange})'
  'invalidateLayoutForCharacterRange:actualCharacterRange:':
    'prefix': 'invalidateLayoutForCharacterRange:actualCharacterRange:'
    'body': 'invalidateLayoutForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:':
    'prefix': 'invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'
    'body': 'invalidateLayoutForCharacterRange(${1:NSRange charRange}, isSoft:${2:BOOL flag}, actualCharacterRange:${3:NSRangePointer actualCharRange})'
  'isValidGlyphIndex:':
    'prefix': 'isValidGlyphIndex:'
    'body': 'isValidGlyphIndex(${1:NSUInteger glyphIndex})'
  'layoutManagerOwnsFirstResponderInWindow:':
    'prefix': 'layoutManagerOwnsFirstResponderInWindow:'
    'body': 'layoutManagerOwnsFirstResponderInWindow(${1:NSWindow* window})'
  'layoutOptions':
    'prefix': 'layoutOptions'
    'body': 'layoutOptions()'
  'layoutRectForTextBlock:atIndex:effectiveRange:':
    'prefix': 'layoutRectForTextBlock:atIndex:effectiveRange:'
    'body': 'layoutRectForTextBlock(${1:NSTextBlock* block}, atIndex:${2:NSUInteger glyphIndex}, effectiveRange:${3:NSRangePointer effectiveGlyphRange})'
  'layoutRectForTextBlock:glyphRange:':
    'prefix': 'layoutRectForTextBlock:glyphRange:'
    'body': 'layoutRectForTextBlock(${1:NSTextBlock* block}, glyphRange:${2:NSRange glyphRange})'
  'lineFragmentRectForGlyphAtIndex:effectiveRange:':
    'prefix': 'lineFragmentRectForGlyphAtIndex:effectiveRange:'
    'body': 'lineFragmentRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
    'prefix': 'lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'
    'body': 'lineFragmentRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange}, withoutAdditionalLayout:${3:BOOL flag})'
  'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:':
    'prefix': 'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'
    'body': 'lineFragmentUsedRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
    'prefix': 'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'
    'body': 'lineFragmentUsedRectForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange}, withoutAdditionalLayout:${3:BOOL flag})'
  'locationForGlyphAtIndex:':
    'prefix': 'locationForGlyphAtIndex:'
    'body': 'locationForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'notShownAttributeForGlyphAtIndex:':
    'prefix': 'notShownAttributeForGlyphAtIndex:'
    'body': 'notShownAttributeForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'numberOfGlyphs':
    'prefix': 'numberOfGlyphs'
    'body': 'numberOfGlyphs()'
  'rangeOfNominallySpacedGlyphsContainingIndex:':
    'prefix': 'rangeOfNominallySpacedGlyphsContainingIndex:'
    'body': 'rangeOfNominallySpacedGlyphsContainingIndex(${1:NSUInteger glyphIndex})'
  'rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:':
    'prefix': 'rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'
    'body': 'rectArrayForCharacterRange(${1:NSRange charRange}, withinSelectedCharacterRange:${2:NSRange selCharRange}, inTextContainer:${3:NSTextContainer* container}, rectCount:${4:NSUInteger* rectCount})'
  'rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:':
    'prefix': 'rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'
    'body': 'rectArrayForGlyphRange(${1:NSRange glyphRange}, withinSelectedGlyphRange:${2:NSRange selGlyphRange}, inTextContainer:${3:NSTextContainer* container}, rectCount:${4:NSUInteger* rectCount})'
  'removeTemporaryAttribute:forCharacterRange:':
    'prefix': 'removeTemporaryAttribute:forCharacterRange:'
    'body': 'removeTemporaryAttribute(${1:NSString* attrName}, forCharacterRange:${2:NSRange charRange})'
  'removeTextContainerAtIndex:':
    'prefix': 'removeTextContainerAtIndex:'
    'body': 'removeTextContainerAtIndex(${1:NSUInteger index})'
  'replaceGlyphAtIndex:withGlyph:':
    'prefix': 'replaceGlyphAtIndex:withGlyph:'
    'body': 'replaceGlyphAtIndex(${1:NSUInteger glyphIndex}, withGlyph:${2:NSGlyph newGlyph})'
  'replaceTextStorage:':
    'prefix': 'replaceTextStorage:'
    'body': 'replaceTextStorage(${1:NSTextStorage* newTextStorage})'
  'rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:':
    'prefix': 'rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'
    'body': 'rulerAccessoryViewForTextView(${1:NSTextView* view}, paragraphStyle:${2:NSParagraphStyle* style}, ruler:${3:NSRulerView* ruler}, enabled:${4:BOOL isEnabled})'
  'rulerMarkersForTextView:paragraphStyle:ruler:':
    'prefix': 'rulerMarkersForTextView:paragraphStyle:ruler:'
    'body': 'rulerMarkersForTextView(${1:NSTextView* view}, paragraphStyle:${2:NSParagraphStyle* style}, ruler:${3:NSRulerView* ruler})'
  'setAllowsNonContiguousLayout:':
    'prefix': 'setAllowsNonContiguousLayout:'
    'body': 'setAllowsNonContiguousLayout(${1:BOOL flag})'
  'setAttachmentSize:forGlyphRange:':
    'prefix': 'setAttachmentSize:forGlyphRange:'
    'body': 'setAttachmentSize(${1:NSSize attachmentSize}, forGlyphRange:${2:NSRange glyphRange})'
  'setBackgroundLayoutEnabled:':
    'prefix': 'setBackgroundLayoutEnabled:'
    'body': 'setBackgroundLayoutEnabled(${1:BOOL flag})'
  'setBoundsRect:forTextBlock:glyphRange:':
    'prefix': 'setBoundsRect:forTextBlock:glyphRange:'
    'body': 'setBoundsRect(${1:NSRect rect}, forTextBlock:${2:NSTextBlock* block}, glyphRange:${3:NSRange glyphRange})'
  'setCharacterIndex:forGlyphAtIndex:':
    'prefix': 'setCharacterIndex:forGlyphAtIndex:'
    'body': 'setCharacterIndex(${1:NSUInteger charIndex}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'setDefaultAttachmentScaling:':
    'prefix': 'setDefaultAttachmentScaling:'
    'body': 'setDefaultAttachmentScaling(${1:NSImageScaling scaling})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDrawsOutsideLineFragment:forGlyphAtIndex:':
    'prefix': 'setDrawsOutsideLineFragment:forGlyphAtIndex:'
    'body': 'setDrawsOutsideLineFragment(${1:BOOL flag}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'setExtraLineFragmentRect:usedRect:textContainer:':
    'prefix': 'setExtraLineFragmentRect:usedRect:textContainer:'
    'body': 'setExtraLineFragmentRect(${1:NSRect fragmentRect}, usedRect:${2:NSRect usedRect}, textContainer:${3:NSTextContainer* container})'
  'setGlyphGenerator:':
    'prefix': 'setGlyphGenerator:'
    'body': 'setGlyphGenerator(${1:NSGlyphGenerator* glyphGenerator})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:float factor})'
  'setIntAttribute:value:forGlyphAtIndex:':
    'prefix': 'setIntAttribute:value:forGlyphAtIndex:'
    'body': 'setIntAttribute(${1:NSInteger attributeTag}, value:${2:NSInteger val}, forGlyphAtIndex:${3:NSUInteger glyphIndex})'
  'setLayoutRect:forTextBlock:glyphRange:':
    'prefix': 'setLayoutRect:forTextBlock:glyphRange:'
    'body': 'setLayoutRect(${1:NSRect rect}, forTextBlock:${2:NSTextBlock* block}, glyphRange:${3:NSRange glyphRange})'
  'setLineFragmentRect:forGlyphRange:usedRect:':
    'prefix': 'setLineFragmentRect:forGlyphRange:usedRect:'
    'body': 'setLineFragmentRect(${1:NSRect fragmentRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:NSRect usedRect})'
  'setLocation:forStartOfGlyphRange:':
    'prefix': 'setLocation:forStartOfGlyphRange:'
    'body': 'setLocation(${1:NSPoint location}, forStartOfGlyphRange:${2:NSRange glyphRange})'
  'setLocations:startingGlyphIndexes:count:forGlyphRange:':
    'prefix': 'setLocations:startingGlyphIndexes:count:forGlyphRange:'
    'body': 'setLocations(${1:NSPointArray locations}, startingGlyphIndexes:${2:NSUInteger* glyphIndexes}, count:${3:NSUInteger count}, forGlyphRange:${4:NSRange glyphRange})'
  'setNotShownAttribute:forGlyphAtIndex:':
    'prefix': 'setNotShownAttribute:forGlyphAtIndex:'
    'body': 'setNotShownAttribute(${1:BOOL flag}, forGlyphAtIndex:${2:NSUInteger glyphIndex})'
  'setShowsControlCharacters:':
    'prefix': 'setShowsControlCharacters:'
    'body': 'setShowsControlCharacters(${1:BOOL flag})'
  'setShowsInvisibleCharacters:':
    'prefix': 'setShowsInvisibleCharacters:'
    'body': 'setShowsInvisibleCharacters(${1:BOOL flag})'
  'setTemporaryAttributes:forCharacterRange:':
    'prefix': 'setTemporaryAttributes:forCharacterRange:'
    'body': 'setTemporaryAttributes(${1:NSDictionary* attrs}, forCharacterRange:${2:NSRange charRange})'
  'setTextContainer:forGlyphRange:':
    'prefix': 'setTextContainer:forGlyphRange:'
    'body': 'setTextContainer(${1:NSTextContainer* container}, forGlyphRange:${2:NSRange glyphRange})'
  'setTextStorage:':
    'prefix': 'setTextStorage:'
    'body': 'setTextStorage(${1:NSTextStorage* textStorage})'
  'setTypesetter:':
    'prefix': 'setTypesetter:'
    'body': 'setTypesetter(${1:NSTypesetter* typesetter})'
  'setTypesetterBehavior:':
    'prefix': 'setTypesetterBehavior:'
    'body': 'setTypesetterBehavior(${1:NSTypesetterBehavior theBehavior})'
  'setUsesFontLeading:':
    'prefix': 'setUsesFontLeading:'
    'body': 'setUsesFontLeading(${1:BOOL flag})'
  'setUsesScreenFonts:':
    'prefix': 'setUsesScreenFonts:'
    'body': 'setUsesScreenFonts(${1:BOOL flag})'
  'showAttachmentCell:inRect:characterIndex:':
    'prefix': 'showAttachmentCell:inRect:characterIndex:'
    'body': 'showAttachmentCell(${1:NSCell* cell}, inRect:${2:NSRect rect}, characterIndex:${3:NSUInteger attachmentIndex})'
  'showCGGlyphs:positions:count:font:matrix:attributes:inContext:':
    'prefix': 'showCGGlyphs:positions:count:font:matrix:attributes:inContext:'
    'body': 'showCGGlyphs(${1:CGGlyph* glyphs}, positions:${2:NSPoint* positions}, count:${3:NSUInteger glyphCount}, font:${4:NSFont* font}, matrix:${5:NSAffineTransform* textMatrix}, attributes:${6:NSDictionary* attributes}, inContext:${7:NSGraphicsContext* graphicsContext})'
  'showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:':
    'prefix': 'showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'
    'body': 'showPackedGlyphs(${1:char* glyphs}, length:${2:NSUInteger glyphLen}, glyphRange:${3:NSRange glyphRange}, atPoint:${4:NSPoint point}, font:${5:NSFont* font}, color:${6:NSColor* color}, printingAdjustment:${7:NSSize printingAdjustment})'
  'showsControlCharacters':
    'prefix': 'showsControlCharacters'
    'body': 'showsControlCharacters()'
  'showsInvisibleCharacters':
    'prefix': 'showsInvisibleCharacters'
    'body': 'showsInvisibleCharacters()'
  'strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'strikethroughGlyphRange(${1:NSRange glyphRange}, strikethroughType:${2:NSInteger strikethroughVal}, lineFragmentRect:${3:NSRect lineRect}, lineFragmentGlyphRange:${4:NSRange lineGlyphRange}, containerOrigin:${5:NSPoint containerOrigin})'
  'substituteFontForFont:':
    'prefix': 'substituteFontForFont:'
    'body': 'substituteFontForFont(${1:NSFont* originalFont})'
  'temporaryAttribute:atCharacterIndex:effectiveRange:':
    'prefix': 'temporaryAttribute:atCharacterIndex:effectiveRange:'
    'body': 'temporaryAttribute(${1:NSString* attrName}, atCharacterIndex:${2:NSUInteger location}, effectiveRange:${3:NSRangePointer range})'
  'temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:':
    'prefix': 'temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'
    'body': 'temporaryAttribute(${1:NSString* attrName}, atCharacterIndex:${2:NSUInteger location}, longestEffectiveRange:${3:NSRangePointer range}, inRange:${4:NSRange rangeLimit})'
  'temporaryAttributesAtCharacterIndex:effectiveRange:':
    'prefix': 'temporaryAttributesAtCharacterIndex:effectiveRange:'
    'body': 'temporaryAttributesAtCharacterIndex(${1:NSUInteger charIndex}, effectiveRange:${2:NSRangePointer effectiveCharRange})'
  'temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:':
    'prefix': 'temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'
    'body': 'temporaryAttributesAtCharacterIndex(${1:NSUInteger location}, longestEffectiveRange:${2:NSRangePointer range}, inRange:${3:NSRange rangeLimit})'
  'textContainerChangedGeometry:':
    'prefix': 'textContainerChangedGeometry:'
    'body': 'textContainerChangedGeometry(${1:NSTextContainer* container})'
  'textContainerChangedTextView:':
    'prefix': 'textContainerChangedTextView:'
    'body': 'textContainerChangedTextView(${1:NSTextContainer* container})'
  'textContainerForGlyphAtIndex:effectiveRange:':
    'prefix': 'textContainerForGlyphAtIndex:effectiveRange:'
    'body': 'textContainerForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange})'
  'textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
    'prefix': 'textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'
    'body': 'textContainerForGlyphAtIndex(${1:NSUInteger glyphIndex}, effectiveRange:${2:NSRangePointer effectiveGlyphRange}, withoutAdditionalLayout:${3:BOOL flag})'
  'textContainers':
    'prefix': 'textContainers'
    'body': 'textContainers()'
  'textStorage':
    'prefix': 'textStorage'
    'body': 'textStorage()'
  'textStorage:edited:range:changeInLength:invalidatedRange:':
    'prefix': 'textStorage:edited:range:changeInLength:invalidatedRange:'
    'body': 'textStorage(${1:NSTextStorage* str}, edited:${2:NSUInteger editedMask}, range:${3:NSRange newCharRange}, changeInLength:${4:NSInteger delta}, invalidatedRange:${5:NSRange invalidatedCharRange})'
  'textViewForBeginningOfSelection':
    'prefix': 'textViewForBeginningOfSelection'
    'body': 'textViewForBeginningOfSelection()'
  'typesetter':
    'prefix': 'typesetter'
    'body': 'typesetter()'
  'typesetterBehavior':
    'prefix': 'typesetterBehavior'
    'body': 'typesetterBehavior()'
  'underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
    'prefix': 'underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'
    'body': 'underlineGlyphRange(${1:NSRange glyphRange}, underlineType:${2:NSInteger underlineVal}, lineFragmentRect:${3:NSRect lineRect}, lineFragmentGlyphRange:${4:NSRange lineGlyphRange}, containerOrigin:${5:NSPoint containerOrigin})'
  'usedRectForTextContainer:':
    'prefix': 'usedRectForTextContainer:'
    'body': 'usedRectForTextContainer(${1:NSTextContainer* container})'
  'usesFontLeading':
    'prefix': 'usesFontLeading'
    'body': 'usesFontLeading()'
  'usesScreenFonts':
    'prefix': 'usesScreenFonts'
    'body': 'usesScreenFonts()'
  'criticalValue':
    'prefix': 'criticalValue'
    'body': 'criticalValue()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'numberOfMajorTickMarks':
    'prefix': 'numberOfMajorTickMarks'
    'body': 'numberOfMajorTickMarks()'
  'numberOfTickMarks':
    'prefix': 'numberOfTickMarks'
    'body': 'numberOfTickMarks()'
  'rectOfTickMarkAtIndex:':
    'prefix': 'rectOfTickMarkAtIndex:'
    'body': 'rectOfTickMarkAtIndex(${1:NSInteger index})'
  'setCriticalValue:':
    'prefix': 'setCriticalValue:'
    'body': 'setCriticalValue(${1:double criticalValue})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double maxValue})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double minValue})'
  'setNumberOfMajorTickMarks:':
    'prefix': 'setNumberOfMajorTickMarks:'
    'body': 'setNumberOfMajorTickMarks(${1:NSInteger count})'
  'setNumberOfTickMarks:':
    'prefix': 'setNumberOfTickMarks:'
    'body': 'setNumberOfTickMarks(${1:NSInteger count})'
  'setTickMarkPosition:':
    'prefix': 'setTickMarkPosition:'
    'body': 'setTickMarkPosition(${1:NSTickMarkPosition position})'
  'setWarningValue:':
    'prefix': 'setWarningValue:'
    'body': 'setWarningValue(${1:double warningValue})'
  'tickMarkPosition':
    'prefix': 'tickMarkPosition'
    'body': 'tickMarkPosition()'
  'tickMarkValueAtIndex:':
    'prefix': 'tickMarkValueAtIndex:'
    'body': 'tickMarkValueAtIndex(${1:NSInteger index})'
  'warningValue':
    'prefix': 'warningValue'
    'body': 'warningValue()'
  'criticalValue':
    'prefix': 'criticalValue'
    'body': 'criticalValue()'
  'initWithLevelIndicatorStyle:':
    'prefix': 'initWithLevelIndicatorStyle:'
    'body': 'initWithLevelIndicatorStyle(${1:NSLevelIndicatorStyle levelIndicatorStyle})'
  'levelIndicatorStyle':
    'prefix': 'levelIndicatorStyle'
    'body': 'levelIndicatorStyle()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'numberOfMajorTickMarks':
    'prefix': 'numberOfMajorTickMarks'
    'body': 'numberOfMajorTickMarks()'
  'numberOfTickMarks':
    'prefix': 'numberOfTickMarks'
    'body': 'numberOfTickMarks()'
  'rectOfTickMarkAtIndex:':
    'prefix': 'rectOfTickMarkAtIndex:'
    'body': 'rectOfTickMarkAtIndex(${1:NSInteger index})'
  'setCriticalValue:':
    'prefix': 'setCriticalValue:'
    'body': 'setCriticalValue(${1:double criticalValue})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setLevelIndicatorStyle:':
    'prefix': 'setLevelIndicatorStyle:'
    'body': 'setLevelIndicatorStyle(${1:NSLevelIndicatorStyle levelIndicatorStyle})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double maxValue})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double minValue})'
  'setNumberOfMajorTickMarks:':
    'prefix': 'setNumberOfMajorTickMarks:'
    'body': 'setNumberOfMajorTickMarks(${1:NSInteger count})'
  'setNumberOfTickMarks:':
    'prefix': 'setNumberOfTickMarks:'
    'body': 'setNumberOfTickMarks(${1:NSInteger count})'
  'setTickMarkPosition:':
    'prefix': 'setTickMarkPosition:'
    'body': 'setTickMarkPosition(${1:NSTickMarkPosition position})'
  'setWarningValue:':
    'prefix': 'setWarningValue:'
    'body': 'setWarningValue(${1:double warningValue})'
  'tickMarkPosition':
    'prefix': 'tickMarkPosition'
    'body': 'tickMarkPosition()'
  'tickMarkValueAtIndex:':
    'prefix': 'tickMarkValueAtIndex:'
    'body': 'tickMarkValueAtIndex(${1:NSInteger index})'
  'warningValue':
    'prefix': 'warningValue'
    'body': 'warningValue()'
  'acceptsFirstMouse:':
    'prefix': 'acceptsFirstMouse:'
    'body': 'acceptsFirstMouse(${1:NSEvent* theEvent})'
  'addColumn':
    'prefix': 'addColumn'
    'body': 'addColumn()'
  'addColumnWithCells:':
    'prefix': 'addColumnWithCells:'
    'body': 'addColumnWithCells(${1:NSArray* newCells})'
  'addRow':
    'prefix': 'addRow'
    'body': 'addRow()'
  'addRowWithCells:':
    'prefix': 'addRowWithCells:'
    'body': 'addRowWithCells(${1:NSArray* newCells})'
  'allowsEmptySelection':
    'prefix': 'allowsEmptySelection'
    'body': 'allowsEmptySelection()'
  'autorecalculatesCellSize':
    'prefix': 'autorecalculatesCellSize'
    'body': 'autorecalculatesCellSize()'
  'autosizesCells':
    'prefix': 'autosizesCells'
    'body': 'autosizesCells()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'cellAtRow:column:':
    'prefix': 'cellAtRow:column:'
    'body': 'cellAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'cellBackgroundColor':
    'prefix': 'cellBackgroundColor'
    'body': 'cellBackgroundColor()'
  'cellClass':
    'prefix': 'cellClass'
    'body': 'cellClass()'
  'cellFrameAtRow:column:':
    'prefix': 'cellFrameAtRow:column:'
    'body': 'cellFrameAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'cellSize':
    'prefix': 'cellSize'
    'body': 'cellSize()'
  'cellWithTag:':
    'prefix': 'cellWithTag:'
    'body': 'cellWithTag(${1:NSInteger anInt})'
  'cells':
    'prefix': 'cells'
    'body': 'cells()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deselectAllCells':
    'prefix': 'deselectAllCells'
    'body': 'deselectAllCells()'
  'deselectSelectedCell':
    'prefix': 'deselectSelectedCell'
    'body': 'deselectSelectedCell()'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'drawCellAtRow:column:':
    'prefix': 'drawCellAtRow:column:'
    'body': 'drawCellAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'drawsCellBackground':
    'prefix': 'drawsCellBackground'
    'body': 'drawsCellBackground()'
  'getNumberOfRows:columns:':
    'prefix': 'getNumberOfRows:columns:'
    'body': 'getNumberOfRows(${1:NSInteger* rowCount}, columns:${2:NSInteger* colCount})'
  'getRow:column:forPoint:':
    'prefix': 'getRow:column:forPoint:'
    'body': 'getRow(${1:NSInteger* row}, column:${2:NSInteger* col}, forPoint:${3:NSPoint aPoint})'
  'getRow:column:ofCell:':
    'prefix': 'getRow:column:ofCell:'
    'body': 'getRow(${1:NSInteger* row}, column:${2:NSInteger* col}, ofCell:${3:NSCell* aCell})'
  'highlightCell:atRow:column:':
    'prefix': 'highlightCell:atRow:column:'
    'body': 'highlightCell(${1:BOOL flag}, atRow:${2:NSInteger row}, column:${3:NSInteger col})'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:NSRect frameRect})'
  'initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:':
    'prefix': 'initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'
    'body': 'initWithFrame(${1:NSRect frameRect}, mode:${2:NSMatrixMode aMode}, cellClass:${3:Class factoryId}, numberOfRows:${4:NSInteger rowsHigh}, numberOfColumns:${5:NSInteger colsWide})'
  'initWithFrame:mode:prototype:numberOfRows:numberOfColumns:':
    'prefix': 'initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'
    'body': 'initWithFrame(${1:NSRect frameRect}, mode:${2:NSMatrixMode aMode}, prototype:${3:NSCell* aCell}, numberOfRows:${4:NSInteger rowsHigh}, numberOfColumns:${5:NSInteger colsWide})'
  'insertColumn:':
    'prefix': 'insertColumn:'
    'body': 'insertColumn(${1:NSInteger column})'
  'insertColumn:withCells:':
    'prefix': 'insertColumn:withCells:'
    'body': 'insertColumn(${1:NSInteger column}, withCells:${2:NSArray* newCells})'
  'insertRow:':
    'prefix': 'insertRow:'
    'body': 'insertRow(${1:NSInteger row})'
  'insertRow:withCells:':
    'prefix': 'insertRow:withCells:'
    'body': 'insertRow(${1:NSInteger row}, withCells:${2:NSArray* newCells})'
  'intercellSpacing':
    'prefix': 'intercellSpacing'
    'body': 'intercellSpacing()'
  'isAutoscroll':
    'prefix': 'isAutoscroll'
    'body': 'isAutoscroll()'
  'isSelectionByRect':
    'prefix': 'isSelectionByRect'
    'body': 'isSelectionByRect()'
  'keyCell':
    'prefix': 'keyCell'
    'body': 'KeyCell()'
  'makeCellAtRow:column:':
    'prefix': 'makeCellAtRow:column:'
    'body': 'makeCellAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'mode':
    'prefix': 'mode'
    'body': 'mode()'
  'mouseDown:':
    'prefix': 'mouseDown:'
    'body': 'mouseDown(${1:NSEvent* theEvent})'
  'mouseDownFlags':
    'prefix': 'mouseDownFlags'
    'body': 'mouseDownFlags()'
  'numberOfColumns':
    'prefix': 'numberOfColumns'
    'body': 'numberOfColumns()'
  'numberOfRows':
    'prefix': 'numberOfRows'
    'body': 'numberOfRows()'
  'performKeyEquivalent:':
    'prefix': 'performKeyEquivalent:'
    'body': 'performKeyEquivalent(${1:NSEvent* theEvent})'
  'prototype':
    'prefix': 'prototype'
    'body': 'prototype()'
  'putCell:atRow:column:':
    'prefix': 'putCell:atRow:column:'
    'body': 'putCell(${1:NSCell* newCell}, atRow:${2:NSInteger row}, column:${3:NSInteger col})'
  'removeColumn:':
    'prefix': 'removeColumn:'
    'body': 'removeColumn(${1:NSInteger col})'
  'removeRow:':
    'prefix': 'removeRow:'
    'body': 'removeRow(${1:NSInteger row})'
  'renewRows:columns:':
    'prefix': 'renewRows:columns:'
    'body': 'renewRows(${1:NSInteger newRows}, columns:${2:NSInteger newCols})'
  'resetCursorRects':
    'prefix': 'resetCursorRects'
    'body': 'resetCursorRects()'
  'scrollCellToVisibleAtRow:column:':
    'prefix': 'scrollCellToVisibleAtRow:column:'
    'body': 'scrollCellToVisibleAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectCellAtRow:column:':
    'prefix': 'selectCellAtRow:column:'
    'body': 'selectCellAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'selectCellWithTag:':
    'prefix': 'selectCellWithTag:'
    'body': 'selectCellWithTag(${1:NSInteger anInt})'
  'selectText:':
    'prefix': 'selectText:'
    'body': 'selectText(${1:id sender})'
  'selectTextAtRow:column:':
    'prefix': 'selectTextAtRow:column:'
    'body': 'selectTextAtRow(${1:NSInteger row}, column:${2:NSInteger col})'
  'selectedCell':
    'prefix': 'selectedCell'
    'body': 'selectedCell()'
  'selectedCells':
    'prefix': 'selectedCells'
    'body': 'selectedCells()'
  'selectedColumn':
    'prefix': 'selectedColumn'
    'body': 'selectedColumn()'
  'selectedRow':
    'prefix': 'selectedRow'
    'body': 'selectedRow()'
  'sendAction':
    'prefix': 'sendAction'
    'body': 'sendAction()'
  'sendAction:to:forAllCells:':
    'prefix': 'sendAction:to:forAllCells:'
    'body': 'sendAction(${1:SEL aSelector}, to:${2:id anObject}, forAllCells:${3:BOOL flag})'
  'sendDoubleAction':
    'prefix': 'sendDoubleAction'
    'body': 'sendDoubleAction()'
  'setAllowsEmptySelection:':
    'prefix': 'setAllowsEmptySelection:'
    'body': 'setAllowsEmptySelection(${1:BOOL flag})'
  'setAutorecalculatesCellSize:':
    'prefix': 'setAutorecalculatesCellSize:'
    'body': 'setAutorecalculatesCellSize(${1:BOOL flag})'
  'setAutoscroll:':
    'prefix': 'setAutoscroll:'
    'body': 'setAutoscroll(${1:BOOL flag})'
  'setAutosizesCells:':
    'prefix': 'setAutosizesCells:'
    'body': 'setAutosizesCells(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setCellBackgroundColor:':
    'prefix': 'setCellBackgroundColor:'
    'body': 'setCellBackgroundColor(${1:NSColor* color})'
  'setCellClass:':
    'prefix': 'setCellClass:'
    'body': 'setCellClass(${1:Class factoryId})'
  'setCellSize:':
    'prefix': 'setCellSize:'
    'body': 'setCellSize(${1:NSSize aSize})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL aSelector})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setDrawsCellBackground:':
    'prefix': 'setDrawsCellBackground:'
    'body': 'setDrawsCellBackground(${1:BOOL flag})'
  'setIntercellSpacing:':
    'prefix': 'setIntercellSpacing:'
    'body': 'setIntercellSpacing(${1:NSSize aSize})'
  'setKeyCell:':
    'prefix': 'setKeyCell:'
    'body': 'setKeyCell(${1:NSCell* keyCell})'
  'setMode:':
    'prefix': 'setMode:'
    'body': 'setMode(${1:NSMatrixMode aMode})'
  'setPrototype:':
    'prefix': 'setPrototype:'
    'body': 'setPrototype(${1:NSCell* aCell})'
  'setScrollable:':
    'prefix': 'setScrollable:'
    'body': 'setScrollable(${1:BOOL flag})'
  'setSelectionByRect:':
    'prefix': 'setSelectionByRect:'
    'body': 'setSelectionByRect(${1:BOOL flag})'
  'setSelectionFrom:to:anchor:highlight:':
    'prefix': 'setSelectionFrom:to:anchor:highlight:'
    'body': 'setSelectionFrom(${1:NSInteger startPos}, to:${2:NSInteger endPos}, anchor:${3:NSInteger anchorPos}, highlight:${4:BOOL lit})'
  'setState:atRow:column:':
    'prefix': 'setState:atRow:column:'
    'body': 'setState(${1:NSInteger value}, atRow:${2:NSInteger row}, column:${3:NSInteger col})'
  'setTabKeyTraversesCells:':
    'prefix': 'setTabKeyTraversesCells:'
    'body': 'setTabKeyTraversesCells(${1:BOOL flag})'
  'setToolTip:forCell:':
    'prefix': 'setToolTip:forCell:'
    'body': 'setToolTip(${1:NSString* toolTipString}, forCell:${2:NSCell* cell})'
  'setValidateSize:':
    'prefix': 'setValidateSize:'
    'body': 'setValidateSize(${1:BOOL flag})'
  'sizeToCells':
    'prefix': 'sizeToCells'
    'body': 'sizeToCells()'
  'sortUsingFunction:context:':
    'prefix': 'sortUsingFunction:context:'
    'body': 'sortUsingFunction(${1:NSInteger (*)(id, id, void *) compare}, context:${2:void* context})'
  'sortUsingSelector:':
    'prefix': 'sortUsingSelector:'
    'body': 'sortUsingSelector(${1:SEL comparator})'
  'tabKeyTraversesCells':
    'prefix': 'tabKeyTraversesCells'
    'body': 'tabKeyTraversesCells()'
  'textDidBeginEditing:':
    'prefix': 'textDidBeginEditing:'
    'body': 'textDidBeginEditing(${1:NSNotification* notification})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:NSNotification* notification})'
  'textDidEndEditing:':
    'prefix': 'textDidEndEditing:'
    'body': 'textDidEndEditing(${1:NSNotification* notification})'
  'textShouldBeginEditing:':
    'prefix': 'textShouldBeginEditing:'
    'body': 'textShouldBeginEditing(${1:NSText* textObject})'
  'textShouldEndEditing:':
    'prefix': 'textShouldEndEditing:'
    'body': 'textShouldEndEditing(${1:NSText* textObject})'
  'toolTipForCell:':
    'prefix': 'toolTipForCell:'
    'body': 'toolTipForCell(${1:NSCell* cell})'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'isVisible':
    'prefix': 'isVisible'
    'body': 'isVisible()'
  'mediaLibraries':
    'prefix': 'mediaLibraries'
    'body': 'mediaLibraries()'
  'setFrame:':
    'prefix': 'setFrame:'
    'body': 'setFrame(${1:NSRect frame})'
  'setMediaLibraries:':
    'prefix': 'setMediaLibraries:'
    'body': 'setMediaLibraries(${1:NSMediaLibrary mediaLibraries})'
  'setVisible:':
    'prefix': 'setVisible:'
    'body': 'setVisible(${1:BOOL visible})'
  'NSMediaLibraryBrowserController.sharedMediaLibraryBrowserController':
    'prefix': 'sharedMediaLibraryBrowserController'
    'body': 'sharedMediaLibraryBrowserController()'
  'togglePanel:':
    'prefix': 'togglePanel:'
    'body': 'togglePanel(${1:id sender})'
  'addItem:':
    'prefix': 'addItem:'
    'body': 'addItem(${1:NSMenuItem* newItem})'
  'addItemWithTitle:action:keyEquivalent:':
    'prefix': 'addItemWithTitle:action:keyEquivalent:'
    'body': 'addItemWithTitle(${1:NSString* aString}, action:${2:SEL aSelector}, keyEquivalent:${3:NSString* charCode})'
  'allowsContextMenuPlugIns':
    'prefix': 'allowsContextMenuPlugIns'
    'body': 'allowsContextMenuPlugIns()'
  'attachedMenu':
    'prefix': 'attachedMenu'
    'body': 'attachedMenu()'
  'autoenablesItems':
    'prefix': 'autoenablesItems'
    'body': 'autoenablesItems()'
  'cancelTracking':
    'prefix': 'cancelTracking'
    'body': 'cancelTracking()'
  'cancelTrackingWithoutAnimation':
    'prefix': 'cancelTrackingWithoutAnimation'
    'body': 'cancelTrackingWithoutAnimation()'
  'contextMenuRepresentation':
    'prefix': 'contextMenuRepresentation'
    'body': 'contextMenuRepresentation()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'helpRequested:':
    'prefix': 'helpRequested:'
    'body': 'helpRequested(${1:NSEvent* eventPtr})'
  'highlightedItem':
    'prefix': 'highlightedItem'
    'body': 'highlightedItem()'
  'indexOfItem:':
    'prefix': 'indexOfItem:'
    'body': 'indexOfItem(${1:NSMenuItem* index})'
  'indexOfItemWithRepresentedObject:':
    'prefix': 'indexOfItemWithRepresentedObject:'
    'body': 'indexOfItemWithRepresentedObject(${1:id object})'
  'indexOfItemWithSubmenu:':
    'prefix': 'indexOfItemWithSubmenu:'
    'body': 'indexOfItemWithSubmenu(${1:NSMenu* submenu})'
  'indexOfItemWithTag:':
    'prefix': 'indexOfItemWithTag:'
    'body': 'indexOfItemWithTag(${1:NSInteger aTag})'
  'indexOfItemWithTarget:andAction:':
    'prefix': 'indexOfItemWithTarget:andAction:'
    'body': 'indexOfItemWithTarget(${1:id target}, andAction:${2:SEL actionSelector})'
  'indexOfItemWithTitle:':
    'prefix': 'indexOfItemWithTitle:'
    'body': 'indexOfItemWithTitle(${1:NSString* aTitle})'
  'initWithTitle:':
    'prefix': 'initWithTitle:'
    'body': 'initWithTitle(${1:NSString* aTitle})'
  'insertItem:atIndex:':
    'prefix': 'insertItem:atIndex:'
    'body': 'insertItem(${1:NSMenuItem* newItem}, atIndex:${2:NSInteger index})'
  'insertItemWithTitle:action:keyEquivalent:atIndex:':
    'prefix': 'insertItemWithTitle:action:keyEquivalent:atIndex:'
    'body': 'insertItemWithTitle(${1:NSString* aString}, action:${2:SEL aSelector}, keyEquivalent:${3:NSString* charCode}, atIndex:${4:NSInteger index})'
  'isAttached':
    'prefix': 'isAttached'
    'body': 'isAttached()'
  'isTornOff':
    'prefix': 'isTornOff'
    'body': 'isTornOff()'
  'itemArray':
    'prefix': 'itemArray'
    'body': 'itemArray()'
  'itemAtIndex:':
    'prefix': 'itemAtIndex:'
    'body': 'itemAtIndex(${1:NSInteger index})'
  'itemChanged:':
    'prefix': 'itemChanged:'
    'body': 'itemChanged(${1:NSMenuItem* item})'
  'itemWithTag:':
    'prefix': 'itemWithTag:'
    'body': 'itemWithTag(${1:NSInteger tag})'
  'itemWithTitle:':
    'prefix': 'itemWithTitle:'
    'body': 'itemWithTitle(${1:NSString* aTitle})'
  'locationForSubmenu:':
    'prefix': 'locationForSubmenu:'
    'body': 'locationForSubmenu(${1:NSMenu* aSubmenu})'
  'menuBarHeight':
    'prefix': 'menuBarHeight'
    'body': 'menuBarHeight()'
  'NSMenu.menuBarVisible':
    'prefix': 'menuBarVisible'
    'body': 'menuBarVisible()'
  'menuChangedMessagesEnabled':
    'prefix': 'menuChangedMessagesEnabled'
    'body': 'menuChangedMessagesEnabled()'
  'menuRepresentation':
    'prefix': 'menuRepresentation'
    'body': 'menuRepresentation()'
  'NSMenu.menuZone':
    'prefix': 'menuZone'
    'body': 'menuZone()'
  'minimumWidth':
    'prefix': 'minimumWidth'
    'body': 'minimumWidth()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'performActionForItemAtIndex:':
    'prefix': 'performActionForItemAtIndex:'
    'body': 'performActionForItemAtIndex(${1:NSInteger index})'
  'performKeyEquivalent:':
    'prefix': 'performKeyEquivalent:'
    'body': 'performKeyEquivalent(${1:NSEvent* theEvent})'
  'NSMenu.popUpContextMenu:withEvent:forView:':
    'prefix': 'popUpContextMenu:withEvent:forView:'
    'body': 'popUpContextMenu(${1:NSMenu* menu}, withEvent:${2:NSEvent* event}, forView:${3:NSView* view})'
  'NSMenu.popUpContextMenu:withEvent:forView:withFont:':
    'prefix': 'popUpContextMenu:withEvent:forView:withFont:'
    'body': 'popUpContextMenu(${1:NSMenu* menu}, withEvent:${2:NSEvent* event}, forView:${3:NSView* view}, withFont:${4:NSFont* font})'
  'popUpMenuPositioningItem:atLocation:inView:':
    'prefix': 'popUpMenuPositioningItem:atLocation:inView:'
    'body': 'popUpMenuPositioningItem(${1:NSMenuItem* item}, atLocation:${2:NSPoint location}, inView:${3:NSView* view})'
  'propertiesToUpdate':
    'prefix': 'propertiesToUpdate'
    'body': 'propertiesToUpdate()'
  'removeAllItems':
    'prefix': 'removeAllItems'
    'body': 'removeAllItems()'
  'removeItem:':
    'prefix': 'removeItem:'
    'body': 'removeItem(${1:NSMenuItem* item})'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'setAllowsContextMenuPlugIns:':
    'prefix': 'setAllowsContextMenuPlugIns:'
    'body': 'setAllowsContextMenuPlugIns(${1:BOOL allows})'
  'setAutoenablesItems:':
    'prefix': 'setAutoenablesItems:'
    'body': 'setAutoenablesItems(${1:BOOL flag})'
  'setContextMenuRepresentation:':
    'prefix': 'setContextMenuRepresentation:'
    'body': 'setContextMenuRepresentation(${1:id menuRep})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* font})'
  'NSMenu.setMenuBarVisible:':
    'prefix': 'setMenuBarVisible:'
    'body': 'setMenuBarVisible(${1:BOOL visible})'
  'setMenuChangedMessagesEnabled:':
    'prefix': 'setMenuChangedMessagesEnabled:'
    'body': 'setMenuChangedMessagesEnabled(${1:BOOL flag})'
  'setMenuRepresentation:':
    'prefix': 'setMenuRepresentation:'
    'body': 'setMenuRepresentation(${1:id menuRep})'
  'NSMenu.setMenuZone:':
    'prefix': 'setMenuZone:'
    'body': 'setMenuZone(${1:NSZone* aZone})'
  'setMinimumWidth:':
    'prefix': 'setMinimumWidth:'
    'body': 'setMinimumWidth(${1:CGFloat width})'
  'setShowsStateColumn:':
    'prefix': 'setShowsStateColumn:'
    'body': 'setShowsStateColumn(${1:BOOL showsState})'
  'setSubmenu:forItem:':
    'prefix': 'setSubmenu:forItem:'
    'body': 'setSubmenu(${1:NSMenu* aMenu}, forItem:${2:NSMenuItem* anItem})'
  'setSupermenu:':
    'prefix': 'setSupermenu:'
    'body': 'setSupermenu(${1:NSMenu* supermenu})'
  'setTearOffMenuRepresentation:':
    'prefix': 'setTearOffMenuRepresentation:'
    'body': 'setTearOffMenuRepresentation(${1:id menuRep})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'showsStateColumn':
    'prefix': 'showsStateColumn'
    'body': 'showsStateColumn()'
  'size':
    'prefix': 'size'
    'body': 'size()'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'submenuAction:':
    'prefix': 'submenuAction:'
    'body': 'submenuAction(${1:id sender})'
  'supermenu':
    'prefix': 'supermenu'
    'body': 'supermenu()'
  'tearOffMenuRepresentation':
    'prefix': 'tearOffMenuRepresentation'
    'body': 'tearOffMenuRepresentation()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'update':
    'prefix': 'update'
    'body': 'update()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'hasSubmenu':
    'prefix': 'hasSubmenu'
    'body': 'hasSubmenu()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'indentationLevel':
    'prefix': 'indentationLevel'
    'body': 'indentationLevel()'
  'initWithTitle:action:keyEquivalent:':
    'prefix': 'initWithTitle:action:keyEquivalent:'
    'body': 'initWithTitle(${1:NSString* aString}, action:${2:SEL aSelector}, keyEquivalent:${3:NSString* charCode})'
  'isAlternate':
    'prefix': 'isAlternate'
    'body': 'isAlternate()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isHiddenOrHasHiddenAncestor':
    'prefix': 'isHiddenOrHasHiddenAncestor'
    'body': 'isHiddenOrHasHiddenAncestor()'
  'isHighlighted':
    'prefix': 'isHighlighted'
    'body': 'isHighlighted()'
  'isSeparatorItem':
    'prefix': 'isSeparatorItem'
    'body': 'isSeparatorItem()'
  'keyEquivalent':
    'prefix': 'keyEquivalent'
    'body': 'KeyEquivalent()'
  'keyEquivalentModifierMask':
    'prefix': 'keyEquivalentModifierMask'
    'body': 'KeyEquivalentModifierMask()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'mixedStateImage':
    'prefix': 'mixedStateImage'
    'body': 'mixedStateImage()'
  'mnemonic':
    'prefix': 'mnemonic'
    'body': 'mnemonic()'
  'mnemonicLocation':
    'prefix': 'mnemonicLocation'
    'body': 'mnemonicLocation()'
  'offStateImage':
    'prefix': 'offStateImage'
    'body': 'offStateImage()'
  'onStateImage':
    'prefix': 'onStateImage'
    'body': 'onStateImage()'
  'parentItem':
    'prefix': 'parentItem'
    'body': 'parentItem()'
  'representedObject':
    'prefix': 'representedObject'
    'body': 'representedObject()'
  'NSMenuItem.separatorItem':
    'prefix': 'separatorItem'
    'body': 'separatorItem()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL aSelector})'
  'setAlternate:':
    'prefix': 'setAlternate:'
    'body': 'setAlternate(${1:BOOL isAlternate})'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* string})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL flag})'
  'setHidden:':
    'prefix': 'setHidden:'
    'body': 'setHidden(${1:BOOL hidden})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* menuImage})'
  'setIndentationLevel:':
    'prefix': 'setIndentationLevel:'
    'body': 'setIndentationLevel(${1:NSInteger indentationLevel})'
  'setKeyEquivalent:':
    'prefix': 'setKeyEquivalent:'
    'body': 'setKeyEquivalent(${1:NSString* aKeyEquivalent})'
  'setKeyEquivalentModifierMask:':
    'prefix': 'setKeyEquivalentModifierMask:'
    'body': 'setKeyEquivalentModifierMask(${1:NSUInteger mask})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setMixedStateImage:':
    'prefix': 'setMixedStateImage:'
    'body': 'setMixedStateImage(${1:NSImage* image})'
  'setMnemonicLocation:':
    'prefix': 'setMnemonicLocation:'
    'body': 'setMnemonicLocation(${1:NSUInteger location})'
  'setOffStateImage:':
    'prefix': 'setOffStateImage:'
    'body': 'setOffStateImage(${1:NSImage* image})'
  'setOnStateImage:':
    'prefix': 'setOnStateImage:'
    'body': 'setOnStateImage(${1:NSImage* image})'
  'setRepresentedObject:':
    'prefix': 'setRepresentedObject:'
    'body': 'setRepresentedObject(${1:id anObject})'
  'setState:':
    'prefix': 'setState:'
    'body': 'setState(${1:NSInteger state})'
  'setSubmenu:':
    'prefix': 'setSubmenu:'
    'body': 'setSubmenu(${1:NSMenu* submenu})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger anInt})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id anObject})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'setToolTip:':
    'prefix': 'setToolTip:'
    'body': 'setToolTip(${1:NSString* toolTip})'
  'NSMenuItem.setUsesUserKeyEquivalents:':
    'prefix': 'setUsesUserKeyEquivalents:'
    'body': 'setUsesUserKeyEquivalents(${1:BOOL flag})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'state':
    'prefix': 'state'
    'body': 'state()'
  'submenu':
    'prefix': 'submenu'
    'body': 'submenu()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'toolTip':
    'prefix': 'toolTip'
    'body': 'toolTip()'
  'userKeyEquivalent':
    'prefix': 'userKeyEquivalent'
    'body': 'userKeyEquivalent()'
  'NSMenuItem.usesUserKeyEquivalents':
    'prefix': 'usesUserKeyEquivalents'
    'body': 'usesUserKeyEquivalents()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'calcSize':
    'prefix': 'calcSize'
    'body': 'calcSize()'
  'drawBorderAndBackgroundWithFrame:inView:':
    'prefix': 'drawBorderAndBackgroundWithFrame:inView:'
    'body': 'drawBorderAndBackgroundWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawImageWithFrame:inView:':
    'prefix': 'drawImageWithFrame:inView:'
    'body': 'drawImageWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawKeyEquivalentWithFrame:inView:':
    'prefix': 'drawKeyEquivalentWithFrame:inView:'
    'body': 'drawKeyEquivalentWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawSeparatorItemWithFrame:inView:':
    'prefix': 'drawSeparatorItemWithFrame:inView:'
    'body': 'drawSeparatorItemWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawStateImageWithFrame:inView:':
    'prefix': 'drawStateImageWithFrame:inView:'
    'body': 'drawStateImageWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawTitleWithFrame:inView:':
    'prefix': 'drawTitleWithFrame:inView:'
    'body': 'drawTitleWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'imageWidth':
    'prefix': 'imageWidth'
    'body': 'imageWidth()'
  'keyEquivalentRectForBounds:':
    'prefix': 'keyEquivalentRectForBounds:'
    'body': 'KeyEquivalentRectForBounds(${1:NSRect cellFrame})'
  'keyEquivalentWidth':
    'prefix': 'keyEquivalentWidth'
    'body': 'KeyEquivalentWidth()'
  'menuItem':
    'prefix': 'menuItem'
    'body': 'menuItem()'
  'menuView':
    'prefix': 'menuView'
    'body': 'menuView()'
  'needsDisplay':
    'prefix': 'needsDisplay'
    'body': 'needsDisplay()'
  'needsSizing':
    'prefix': 'needsSizing'
    'body': 'needsSizing()'
  'setMenuItem:':
    'prefix': 'setMenuItem:'
    'body': 'setMenuItem(${1:NSMenuItem* item})'
  'setMenuView:':
    'prefix': 'setMenuView:'
    'body': 'setMenuView(${1:NSMenuView* menuView})'
  'setNeedsDisplay:':
    'prefix': 'setNeedsDisplay:'
    'body': 'setNeedsDisplay(${1:BOOL flag})'
  'setNeedsSizing:':
    'prefix': 'setNeedsSizing:'
    'body': 'setNeedsSizing(${1:BOOL flag})'
  'stateImageRectForBounds:':
    'prefix': 'stateImageRectForBounds:'
    'body': 'stateImageRectForBounds(${1:NSRect cellFrame})'
  'stateImageWidth':
    'prefix': 'stateImageWidth'
    'body': 'stateImageWidth()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'titleRectForBounds:':
    'prefix': 'titleRectForBounds:'
    'body': 'titleRectForBounds(${1:NSRect cellFrame})'
  'titleWidth':
    'prefix': 'titleWidth'
    'body': 'titleWidth()'
  'QTMovie':
    'prefix': 'QTMovie'
    'body': 'QTMovie()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'NSMovie.canInitWithPasteboard:':
    'prefix': 'canInitWithPasteboard:'
    'body': 'canInitWithPasteboard(${1:NSPasteboard* pasteboard})'
  'initWithMovie:':
    'prefix': 'initWithMovie:'
    'body': 'initWithMovie(${1:void* movie})'
  'initWithPasteboard:':
    'prefix': 'initWithPasteboard:'
    'body': 'initWithPasteboard(${1:NSPasteboard* pasteboard})'
  'initWithURL:byReference:':
    'prefix': 'initWithURL:byReference:'
    'body': 'initWithURL(${1:NSURL* url}, byReference:${2:BOOL byRef})'
  'NSMovie.movieUnfilteredFileTypes':
    'prefix': 'movieUnfilteredFileTypes'
    'body': 'movieUnfilteredFileTypes()'
  'NSMovie.movieUnfilteredPasteboardTypes':
    'prefix': 'movieUnfilteredPasteboardTypes'
    'body': 'movieUnfilteredPasteboardTypes()'
  'applyFontTraits:range:':
    'prefix': 'applyFontTraits:range:'
    'body': 'applyFontTraits(${1:NSFontTraitMask traitMask}, range:${2:NSRange range})'
  'fixAttachmentAttributeInRange:':
    'prefix': 'fixAttachmentAttributeInRange:'
    'body': 'fixAttachmentAttributeInRange(${1:NSRange range})'
  'fixAttributesInRange:':
    'prefix': 'fixAttributesInRange:'
    'body': 'fixAttributesInRange(${1:NSRange range})'
  'fixFontAttributeInRange:':
    'prefix': 'fixFontAttributeInRange:'
    'body': 'fixFontAttributeInRange(${1:NSRange range})'
  'fixParagraphStyleAttributeInRange:':
    'prefix': 'fixParagraphStyleAttributeInRange:'
    'body': 'fixParagraphStyleAttributeInRange(${1:NSRange range})'
  'readFromData:options:documentAttributes:':
    'prefix': 'readFromData:options:documentAttributes:'
    'body': 'readFromData(${1:NSData* data}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict})'
  'readFromData:options:documentAttributes:error:':
    'prefix': 'readFromData:options:documentAttributes:error:'
    'body': 'readFromData(${1:NSData* data}, options:${2:NSDictionary* opts}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'readFromURL:options:documentAttributes:':
    'prefix': 'readFromURL:options:documentAttributes:'
    'body': 'readFromURL(${1:NSURL* url}, options:${2:NSDictionary* options}, documentAttributes:${3:NSDictionary** dict})'
  'readFromURL:options:documentAttributes:error:':
    'prefix': 'readFromURL:options:documentAttributes:error:'
    'body': 'readFromURL(${1:NSURL* url}, options:${2:NSDictionary* opts}, documentAttributes:${3:NSDictionary** dict}, error:${4:NSError** error})'
  'setAlignment:range:':
    'prefix': 'setAlignment:range:'
    'body': 'setAlignment(${1:NSTextAlignment alignment}, range:${2:NSRange range})'
  'setBaseWritingDirection:range:':
    'prefix': 'setBaseWritingDirection:range:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection}, range:${2:NSRange range})'
  'subscriptRange:':
    'prefix': 'subscriptRange:'
    'body': 'subscriptRange(${1:NSRange range})'
  'superscriptRange:':
    'prefix': 'superscriptRange:'
    'body': 'superscriptRange(${1:NSRange range})'
  'unscriptRange:':
    'prefix': 'unscriptRange:'
    'body': 'unscriptRange(${1:NSRange range})'
  'updateAttachmentsFromPath:':
    'prefix': 'updateAttachmentsFromPath:'
    'body': 'updateAttachmentsFromPath(${1:NSString* path})'
  'addQueryForDescriptors:':
    'prefix': 'addQueryForDescriptors:'
    'body': 'addQueryForDescriptors(${1:NSArray* descriptors})'
  'removeQueryForDescriptors:':
    'prefix': 'removeQueryForDescriptors:'
    'body': 'removeQueryForDescriptors(${1:NSArray* descriptors})'
  'setExclusionDescriptors:':
    'prefix': 'setExclusionDescriptors:'
    'body': 'setExclusionDescriptors(${1:NSArray* descriptors})'
  'setQueryDescriptors:':
    'prefix': 'setQueryDescriptors:'
    'body': 'setQueryDescriptors(${1:NSArray* descriptors})'
  'addTabStop:':
    'prefix': 'addTabStop:'
    'body': 'addTabStop(${1:NSTextTab* anObject})'
  'removeTabStop:':
    'prefix': 'removeTabStop:'
    'body': 'removeTabStop(${1:NSTextTab* anObject})'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSTextAlignment alignment})'
  'setBaseWritingDirection:':
    'prefix': 'setBaseWritingDirection:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setDefaultTabInterval:':
    'prefix': 'setDefaultTabInterval:'
    'body': 'setDefaultTabInterval(${1:CGFloat aFloat})'
  'setFirstLineHeadIndent:':
    'prefix': 'setFirstLineHeadIndent:'
    'body': 'setFirstLineHeadIndent(${1:CGFloat aFloat})'
  'setHeadIndent:':
    'prefix': 'setHeadIndent:'
    'body': 'setHeadIndent(${1:CGFloat aFloat})'
  'setHeaderLevel:':
    'prefix': 'setHeaderLevel:'
    'body': 'setHeaderLevel(${1:NSInteger level})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:float aFactor})'
  'setLineBreakMode:':
    'prefix': 'setLineBreakMode:'
    'body': 'setLineBreakMode(${1:NSLineBreakMode mode})'
  'setLineHeightMultiple:':
    'prefix': 'setLineHeightMultiple:'
    'body': 'setLineHeightMultiple(${1:CGFloat aFloat})'
  'setLineSpacing:':
    'prefix': 'setLineSpacing:'
    'body': 'setLineSpacing(${1:CGFloat aFloat})'
  'setMaximumLineHeight:':
    'prefix': 'setMaximumLineHeight:'
    'body': 'setMaximumLineHeight(${1:CGFloat aFloat})'
  'setMinimumLineHeight:':
    'prefix': 'setMinimumLineHeight:'
    'body': 'setMinimumLineHeight(${1:CGFloat aFloat})'
  'setParagraphSpacing:':
    'prefix': 'setParagraphSpacing:'
    'body': 'setParagraphSpacing(${1:CGFloat aFloat})'
  'setParagraphSpacingBefore:':
    'prefix': 'setParagraphSpacingBefore:'
    'body': 'setParagraphSpacingBefore(${1:CGFloat aFloat})'
  'setParagraphStyle:':
    'prefix': 'setParagraphStyle:'
    'body': 'setParagraphStyle(${1:NSParagraphStyle* obj})'
  'setTabStops:':
    'prefix': 'setTabStops:'
    'body': 'setTabStops(${1:NSArray* array})'
  'setTailIndent:':
    'prefix': 'setTailIndent:'
    'body': 'setTailIndent(${1:CGFloat aFloat})'
  'setTextBlocks:':
    'prefix': 'setTextBlocks:'
    'body': 'setTextBlocks(${1:NSArray* array})'
  'setTextLists:':
    'prefix': 'setTextLists:'
    'body': 'setTextLists(${1:NSArray* array})'
  'setTighteningFactorForTruncation:':
    'prefix': 'setTighteningFactorForTruncation:'
    'body': 'setTighteningFactorForTruncation(${1:float aFactor})'
  'initWithContentsOfURL:':
    'prefix': 'initWithContentsOfURL:'
    'body': 'initWithContentsOfURL(${1:NSURL* nibFileURL})'
  'initWithNibData:bundle:':
    'prefix': 'initWithNibData:bundle:'
    'body': 'initWithNibData(${1:NSData* nibData}, bundle:${2:NSBundle* bundle})'
  'initWithNibNamed:bundle:':
    'prefix': 'initWithNibNamed:bundle:'
    'body': 'initWithNibNamed(${1:NSString* nibName}, bundle:${2:NSBundle* bundle})'
  'instantiateNibWithExternalNameTable:':
    'prefix': 'instantiateNibWithExternalNameTable:'
    'body': 'instantiateNibWithExternalNameTable(${1:NSDictionary* externalNameTable})'
  'instantiateNibWithOwner:topLevelObjects:':
    'prefix': 'instantiateNibWithOwner:topLevelObjects:'
    'body': 'instantiateNibWithOwner(${1:id owner}, topLevelObjects:${2:NSArray** topLevelObjects})'
  'instantiateWithOwner:topLevelObjects:':
    'prefix': 'instantiateWithOwner:topLevelObjects:'
    'body': 'instantiateWithOwner(${1:id owner}, topLevelObjects:${2:NSArray** topLevelObjects})'
  'destination':
    'prefix': 'destination'
    'body': 'destination()'
  'establishConnection':
    'prefix': 'establishConnection'
    'body': 'establishConnection()'
  'label':
    'prefix': 'label'
    'body': 'label()'
  'replaceObject:withObject:':
    'prefix': 'replaceObject:withObject:'
    'body': 'replaceObject(${1:id oldObject}, withObject:${2:id newObject})'
  'setDestination:':
    'prefix': 'setDestination:'
    'body': 'setDestination(${1:id destination})'
  'setLabel:':
    'prefix': 'setLabel:'
    'body': 'setLabel(${1:NSString* label})'
  'setSource:':
    'prefix': 'setSource:'
    'body': 'setSource(${1:id source})'
  'source':
    'prefix': 'source'
    'body': 'source()'
  'establishConnection':
    'prefix': 'establishConnection'
    'body': 'establishConnection()'
  'establishConnection':
    'prefix': 'establishConnection'
    'body': 'establishConnection()'
  'accessibilityActionDescription:':
    'prefix': 'accessibilityActionDescription:'
    'body': 'accessibilityActionDescription(${1:NSString* action})'
  'accessibilityActionNames':
    'prefix': 'accessibilityActionNames'
    'body': 'accessibilityActionNames()'
  'accessibilityArrayAttributeCount:':
    'prefix': 'accessibilityArrayAttributeCount:'
    'body': 'accessibilityArrayAttributeCount(${1:NSString* attribute})'
  'accessibilityArrayAttributeValues:index:maxCount:':
    'prefix': 'accessibilityArrayAttributeValues:index:maxCount:'
    'body': 'accessibilityArrayAttributeValues(${1:NSString* attribute}, index:${2:NSUInteger index}, maxCount:${3:NSUInteger maxCount})'
  'accessibilityAttributeNames':
    'prefix': 'accessibilityAttributeNames'
    'body': 'accessibilityAttributeNames()'
  'accessibilityAttributeValue:':
    'prefix': 'accessibilityAttributeValue:'
    'body': 'accessibilityAttributeValue(${1:NSString* attribute})'
  'accessibilityAttributeValue:forParameter:':
    'prefix': 'accessibilityAttributeValue:forParameter:'
    'body': 'accessibilityAttributeValue(${1:NSString* attribute}, forParameter:${2:id parameter})'
  'accessibilityFocusedUIElement':
    'prefix': 'accessibilityFocusedUIElement'
    'body': 'accessibilityFocusedUIElement()'
  'accessibilityHitTest:':
    'prefix': 'accessibilityHitTest:'
    'body': 'accessibilityHitTest(${1:NSPoint point})'
  'accessibilityIndexOfChild:':
    'prefix': 'accessibilityIndexOfChild:'
    'body': 'accessibilityIndexOfChild(${1:id child})'
  'accessibilityIsAttributeSettable:':
    'prefix': 'accessibilityIsAttributeSettable:'
    'body': 'accessibilityIsAttributeSettable(${1:NSString* attribute})'
  'accessibilityIsIgnored':
    'prefix': 'accessibilityIsIgnored'
    'body': 'accessibilityIsIgnored()'
  'accessibilityNotifiesWhenDestroyed':
    'prefix': 'accessibilityNotifiesWhenDestroyed'
    'body': 'accessibilityNotifiesWhenDestroyed()'
  'accessibilityParameterizedAttributeNames':
    'prefix': 'accessibilityParameterizedAttributeNames'
    'body': 'accessibilityParameterizedAttributeNames()'
  'accessibilityPerformAction:':
    'prefix': 'accessibilityPerformAction:'
    'body': 'accessibilityPerformAction(${1:NSString* action})'
  'accessibilitySetOverrideValue:forAttribute:':
    'prefix': 'accessibilitySetOverrideValue:forAttribute:'
    'body': 'accessibilitySetOverrideValue(${1:id value}, forAttribute:${2:NSString* attribute})'
  'accessibilitySetValue:forAttribute:':
    'prefix': 'accessibilitySetValue:forAttribute:'
    'body': 'accessibilitySetValue(${1:id value}, forAttribute:${2:NSString* attribute})'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'activeConversationChanged:toNewConversation:':
    'prefix': 'activeConversationChanged:toNewConversation:'
    'body': 'activeConversationChanged(${1:id sender}, toNewConversation:${2:NSInteger newConversation})'
  'activeConversationWillChange:fromOldConversation:':
    'prefix': 'activeConversationWillChange:fromOldConversation:'
    'body': 'activeConversationWillChange(${1:id sender}, fromOldConversation:${2:NSInteger oldConversation})'
  'alertShowHelp:':
    'prefix': 'alertShowHelp:'
    'body': 'alertShowHelp(${1:NSAlert* alert})'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'alphaControlAddedOrRemoved:':
    'prefix': 'alphaControlAddedOrRemoved:'
    'body': 'alphaControlAddedOrRemoved(${1:id sender})'
  'animatesToDestination':
    'prefix': 'animatesToDestination'
    'body': 'animatesToDestination()'
  'animation:didReachProgressMark:':
    'prefix': 'animation:didReachProgressMark:'
    'body': 'animation(${1:NSAnimation* animation}, didReachProgressMark:${2:NSAnimationProgress progress})'
  'animation:valueForProgress:':
    'prefix': 'animation:valueForProgress:'
    'body': 'animation(${1:NSAnimation* animation}, valueForProgress:${2:NSAnimationProgress progress})'
  'animationDidEnd:':
    'prefix': 'animationDidEnd:'
    'body': 'animationDidEnd(${1:NSAnimation* animation})'
  'animationDidStop:':
    'prefix': 'animationDidStop:'
    'body': 'animationDidStop(${1:NSAnimation* animation})'
  'animationForKey:':
    'prefix': 'animationForKey:'
    'body': 'animationForKey(${1:NSString* key})'
  'animationShouldStart:':
    'prefix': 'animationShouldStart:'
    'body': 'animationShouldStart(${1:NSAnimation* animation})'
  'animations':
    'prefix': 'animations'
    'body': 'animations()'
  'animator':
    'prefix': 'animator'
    'body': 'animator()'
  'appearance':
    'prefix': 'appearance'
    'body': 'appearance()'
  'application:delegateHandlesKey:':
    'prefix': 'application:delegateHandlesKey:'
    'body': 'application(${1:NSApplication* sender}, delegateHandlesKey:${2:NSString* key})'
  'application:didDecodeRestorableState:':
    'prefix': 'application:didDecodeRestorableState:'
    'body': 'application(${1:NSApplication* app}, didDecodeRestorableState:${2:NSCoder* coder})'
  'application:didFailToRegisterForRemoteNotificationsWithError:':
    'prefix': 'application:didFailToRegisterForRemoteNotificationsWithError:'
    'body': 'application(${1:NSApplication* application}, didFailToRegisterForRemoteNotificationsWithError:${2:NSError* error})'
  'application:didReceiveRemoteNotification:':
    'prefix': 'application:didReceiveRemoteNotification:'
    'body': 'application(${1:NSApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo})'
  'application:didRegisterForRemoteNotificationsWithDeviceToken:':
    'prefix': 'application:didRegisterForRemoteNotificationsWithDeviceToken:'
    'body': 'application(${1:NSApplication* application}, didRegisterForRemoteNotificationsWithDeviceToken:${2:NSData* deviceToken})'
  'application:openFile:':
    'prefix': 'application:openFile:'
    'body': 'application(${1:NSApplication* sender}, openFile:${2:NSString* filename})'
  'application:openFileWithoutUI:':
    'prefix': 'application:openFileWithoutUI:'
    'body': 'application(${1:id sender}, openFileWithoutUI:${2:NSString* filename})'
  'application:openFiles:':
    'prefix': 'application:openFiles:'
    'body': 'application(${1:NSApplication* sender}, openFiles:${2:NSArray* filenames})'
  'application:openTempFile:':
    'prefix': 'application:openTempFile:'
    'body': 'application(${1:NSApplication* sender}, openTempFile:${2:NSString* filename})'
  'application:printFile:':
    'prefix': 'application:printFile:'
    'body': 'application(${1:NSApplication* sender}, printFile:${2:NSString* filename})'
  'application:printFiles:withSettings:showPrintPanels:':
    'prefix': 'application:printFiles:withSettings:showPrintPanels:'
    'body': 'application(${1:NSApplication* application}, printFiles:${2:NSArray* fileNames}, withSettings:${3:NSDictionary* printSettings}, showPrintPanels:${4:BOOL showPrintPanels})'
  'application:willEncodeRestorableState:':
    'prefix': 'application:willEncodeRestorableState:'
    'body': 'application(${1:NSApplication* app}, willEncodeRestorableState:${2:NSCoder* coder})'
  'application:willPresentError:':
    'prefix': 'application:willPresentError:'
    'body': 'application(${1:NSApplication* application}, willPresentError:${2:NSError* error})'
  'applicationDidBecomeActive:':
    'prefix': 'applicationDidBecomeActive:'
    'body': 'applicationDidBecomeActive(${1:NSNotification* notification})'
  'applicationDidChangeOcclusionState:':
    'prefix': 'applicationDidChangeOcclusionState:'
    'body': 'applicationDidChangeOcclusionState(${1:NSNotification* notification})'
  'applicationDidChangeScreenParameters:':
    'prefix': 'applicationDidChangeScreenParameters:'
    'body': 'applicationDidChangeScreenParameters(${1:NSNotification* notification})'
  'applicationDidFinishLaunching:':
    'prefix': 'applicationDidFinishLaunching:'
    'body': 'applicationDidFinishLaunching(${1:NSNotification* notification})'
  'applicationDidHide:':
    'prefix': 'applicationDidHide:'
    'body': 'applicationDidHide(${1:NSNotification* notification})'
  'applicationDidResignActive:':
    'prefix': 'applicationDidResignActive:'
    'body': 'applicationDidResignActive(${1:NSNotification* notification})'
  'applicationDidUnhide:':
    'prefix': 'applicationDidUnhide:'
    'body': 'applicationDidUnhide(${1:NSNotification* notification})'
  'applicationDidUpdate:':
    'prefix': 'applicationDidUpdate:'
    'body': 'applicationDidUpdate(${1:NSNotification* notification})'
  'applicationDockMenu:':
    'prefix': 'applicationDockMenu:'
    'body': 'applicationDockMenu(${1:NSApplication* sender})'
  'applicationOpenUntitledFile:':
    'prefix': 'applicationOpenUntitledFile:'
    'body': 'applicationOpenUntitledFile(${1:NSApplication* sender})'
  'applicationShouldHandleReopen:hasVisibleWindows:':
    'prefix': 'applicationShouldHandleReopen:hasVisibleWindows:'
    'body': 'applicationShouldHandleReopen(${1:NSApplication* sender}, hasVisibleWindows:${2:BOOL flag})'
  'applicationShouldOpenUntitledFile:':
    'prefix': 'applicationShouldOpenUntitledFile:'
    'body': 'applicationShouldOpenUntitledFile(${1:NSApplication* sender})'
  'applicationShouldTerminate:':
    'prefix': 'applicationShouldTerminate:'
    'body': 'applicationShouldTerminate(${1:NSApplication* sender})'
  'applicationShouldTerminateAfterLastWindowClosed:':
    'prefix': 'applicationShouldTerminateAfterLastWindowClosed:'
    'body': 'applicationShouldTerminateAfterLastWindowClosed(${1:NSApplication* sender})'
  'applicationWillBecomeActive:':
    'prefix': 'applicationWillBecomeActive:'
    'body': 'applicationWillBecomeActive(${1:NSNotification* notification})'
  'applicationWillFinishLaunching:':
    'prefix': 'applicationWillFinishLaunching:'
    'body': 'applicationWillFinishLaunching(${1:NSNotification* notification})'
  'applicationWillHide:':
    'prefix': 'applicationWillHide:'
    'body': 'applicationWillHide(${1:NSNotification* notification})'
  'applicationWillResignActive:':
    'prefix': 'applicationWillResignActive:'
    'body': 'applicationWillResignActive(${1:NSNotification* notification})'
  'applicationWillTerminate:':
    'prefix': 'applicationWillTerminate:'
    'body': 'applicationWillTerminate(${1:NSNotification* notification})'
  'applicationWillUnhide:':
    'prefix': 'applicationWillUnhide:'
    'body': 'applicationWillUnhide(${1:NSNotification* notification})'
  'applicationWillUpdate:':
    'prefix': 'applicationWillUpdate:'
    'body': 'applicationWillUpdate(${1:NSNotification* notification})'
  'attachColorList:':
    'prefix': 'attachColorList:'
    'body': 'attachColorList(${1:NSColorList* colorList})'
  'attachment':
    'prefix': 'attachment'
    'body': 'attachment()'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'attributedSubstringForProposedRange:actualRange:':
    'prefix': 'attributedSubstringForProposedRange:actualRange:'
    'body': 'attributedSubstringForProposedRange(${1:NSRange aRange}, actualRange:${2:NSRangePointer actualRange})'
  'attributedSubstringFromRange:':
    'prefix': 'attributedSubstringFromRange:'
    'body': 'attributedSubstringFromRange(${1:NSRange theRange})'
  'awakeFromNib':
    'prefix': 'awakeFromNib'
    'body': 'awakeFromNib()'
  'baselineDeltaForCharacterAtIndex:':
    'prefix': 'baselineDeltaForCharacterAtIndex:'
    'body': 'baselineDeltaForCharacterAtIndex(${1:NSUInteger anIndex})'
  'bind:toObject:withKeyPath:options:':
    'prefix': 'bind:toObject:withKeyPath:options:'
    'body': 'bind(${1:NSString* binding}, toObject:${2:id observable}, withKeyPath:${3:NSString* keyPath}, options:${4:NSDictionary* options})'
  'browser:acceptDrop:atRow:column:dropOperation:':
    'prefix': 'browser:acceptDrop:atRow:column:dropOperation:'
    'body': 'browser(${1:NSBrowser* browser}, acceptDrop:${2:id info}, atRow:${3:NSInteger row}, column:${4:NSInteger column}, dropOperation:${5:NSBrowserDropOperation dropOperation})'
  'browser:canDragRowsWithIndexes:inColumn:withEvent:':
    'prefix': 'browser:canDragRowsWithIndexes:inColumn:withEvent:'
    'body': 'browser(${1:NSBrowser* browser}, canDragRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, withEvent:${4:NSEvent* event})'
  'browser:child:ofItem:':
    'prefix': 'browser:child:ofItem:'
    'body': 'browser(${1:NSBrowser* browser}, child:${2:NSInteger index}, ofItem:${3:id item})'
  'browser:createRowsForColumn:inMatrix:':
    'prefix': 'browser:createRowsForColumn:inMatrix:'
    'body': 'browser(${1:NSBrowser* sender}, createRowsForColumn:${2:NSInteger column}, inMatrix:${3:NSMatrix* matrix})'
  'browser:didChangeLastColumn:toColumn:':
    'prefix': 'browser:didChangeLastColumn:toColumn:'
    'body': 'browser(${1:NSBrowser* browser}, didChangeLastColumn:${2:NSInteger oldLastColumn}, toColumn:${3:NSInteger column})'
  'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:':
    'prefix': 'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'
    'body': 'browser(${1:NSBrowser* browser}, draggingImageForRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, withEvent:${4:NSEvent* event}, offset:${5:NSPointPointer dragImageOffset})'
  'browser:headerViewControllerForItem:':
    'prefix': 'browser:headerViewControllerForItem:'
    'body': 'browser(${1:NSBrowser* browser}, headerViewControllerForItem:${2:id item})'
  'browser:heightOfRow:inColumn:':
    'prefix': 'browser:heightOfRow:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, heightOfRow:${2:NSInteger row}, inColumn:${3:NSInteger columnIndex})'
  'browser:isColumnValid:':
    'prefix': 'browser:isColumnValid:'
    'body': 'browser(${1:NSBrowser* sender}, isColumnValid:${2:NSInteger column})'
  'browser:isLeafItem:':
    'prefix': 'browser:isLeafItem:'
    'body': 'browser(${1:NSBrowser* browser}, isLeafItem:${2:id item})'
  'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:':
    'prefix': 'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedRowsWithIndexes:${3:NSIndexSet* rowIndexes}, inColumn:${4:NSInteger column})'
  'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:':
    'prefix': 'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'
    'body': 'browser(${1:NSBrowser* browser}, nextTypeSelectMatchFromRow:${2:NSInteger startRow}, toRow:${3:NSInteger endRow}, inColumn:${4:NSInteger column}, forString:${5:NSString* searchString})'
  'browser:numberOfChildrenOfItem:':
    'prefix': 'browser:numberOfChildrenOfItem:'
    'body': 'browser(${1:NSBrowser* browser}, numberOfChildrenOfItem:${2:id item})'
  'browser:numberOfRowsInColumn:':
    'prefix': 'browser:numberOfRowsInColumn:'
    'body': 'browser(${1:NSBrowser* sender}, numberOfRowsInColumn:${2:NSInteger column})'
  'browser:objectValueForItem:':
    'prefix': 'browser:objectValueForItem:'
    'body': 'browser(${1:NSBrowser* browser}, objectValueForItem:${2:id item})'
  'browser:previewViewControllerForLeafItem:':
    'prefix': 'browser:previewViewControllerForLeafItem:'
    'body': 'browser(${1:NSBrowser* browser}, previewViewControllerForLeafItem:${2:id item})'
  'browser:selectCellWithString:inColumn:':
    'prefix': 'browser:selectCellWithString:inColumn:'
    'body': 'browser(${1:NSBrowser* sender}, selectCellWithString:${2:NSString* title}, inColumn:${3:NSInteger column})'
  'browser:selectRow:inColumn:':
    'prefix': 'browser:selectRow:inColumn:'
    'body': 'browser(${1:NSBrowser* sender}, selectRow:${2:NSInteger row}, inColumn:${3:NSInteger column})'
  'browser:selectionIndexesForProposedSelection:inColumn:':
    'prefix': 'browser:selectionIndexesForProposedSelection:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes}, inColumn:${3:NSInteger column})'
  'browser:setObjectValue:forItem:':
    'prefix': 'browser:setObjectValue:forItem:'
    'body': 'browser(${1:NSBrowser* browser}, setObjectValue:${2:id object}, forItem:${3:id item})'
  'browser:shouldEditItem:':
    'prefix': 'browser:shouldEditItem:'
    'body': 'browser(${1:NSBrowser* browser}, shouldEditItem:${2:id item})'
  'browser:shouldShowCellExpansionForRow:column:':
    'prefix': 'browser:shouldShowCellExpansionForRow:column:'
    'body': 'browser(${1:NSBrowser* browser}, shouldShowCellExpansionForRow:${2:NSInteger row}, column:${3:NSInteger column})'
  'browser:shouldSizeColumn:forUserResize:toWidth:':
    'prefix': 'browser:shouldSizeColumn:forUserResize:toWidth:'
    'body': 'browser(${1:NSBrowser* browser}, shouldSizeColumn:${2:NSInteger columnIndex}, forUserResize:${3:BOOL forUserResize}, toWidth:${4:CGFloat suggestedWidth})'
  'browser:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'browser:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'browser(${1:NSBrowser* browser}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'browser:sizeToFitWidthOfColumn:':
    'prefix': 'browser:sizeToFitWidthOfColumn:'
    'body': 'browser(${1:NSBrowser* browser}, sizeToFitWidthOfColumn:${2:NSInteger columnIndex})'
  'browser:titleOfColumn:':
    'prefix': 'browser:titleOfColumn:'
    'body': 'browser(${1:NSBrowser* sender}, titleOfColumn:${2:NSInteger column})'
  'browser:typeSelectStringForRow:inColumn:':
    'prefix': 'browser:typeSelectStringForRow:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, typeSelectStringForRow:${2:NSInteger row}, inColumn:${3:NSInteger column})'
  'browser:validateDrop:proposedRow:column:dropOperation:':
    'prefix': 'browser:validateDrop:proposedRow:column:dropOperation:'
    'body': 'browser(${1:NSBrowser* browser}, validateDrop:${2:id info}, proposedRow:${3:NSInteger* row}, column:${4:NSInteger* column}, dropOperation:${5:NSBrowserDropOperation* dropOperation})'
  'browser:willDisplayCell:atRow:column:':
    'prefix': 'browser:willDisplayCell:atRow:column:'
    'body': 'browser(${1:NSBrowser* sender}, willDisplayCell:${2:id cell}, atRow:${3:NSInteger row}, column:${4:NSInteger column})'
  'browser:writeRowsWithIndexes:inColumn:toPasteboard:':
    'prefix': 'browser:writeRowsWithIndexes:inColumn:toPasteboard:'
    'body': 'browser(${1:NSBrowser* browser}, writeRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, toPasteboard:${4:NSPasteboard* pasteboard})'
  'browserColumnConfigurationDidChange:':
    'prefix': 'browserColumnConfigurationDidChange:'
    'body': 'browserColumnConfigurationDidChange(${1:NSNotification* notification})'
  'browserDidScroll:':
    'prefix': 'browserDidScroll:'
    'body': 'browserDidScroll(${1:NSBrowser* sender})'
  'browserWillScroll:':
    'prefix': 'browserWillScroll:'
    'body': 'browserWillScroll(${1:NSBrowser* sender})'
  'buttonToolTip':
    'prefix': 'buttonToolTip'
    'body': 'buttonToolTip()'
  'canBeDisabled':
    'prefix': 'canBeDisabled'
    'body': 'canBeDisabled()'
  'cellBaselineOffset':
    'prefix': 'cellBaselineOffset'
    'body': 'cellBaselineOffset()'
  'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'cellFrameForTextContainer(${1:NSTextContainer* textContainer}, proposedLineFragment:${2:NSRect lineFrag}, glyphPosition:${3:NSPoint position}, characterIndex:${4:NSUInteger charIndex})'
  'cellSize':
    'prefix': 'cellSize'
    'body': 'cellSize()'
  'changeColor:':
    'prefix': 'changeColor:'
    'body': 'changeColor(${1:id sender})'
  'changeFont:':
    'prefix': 'changeFont:'
    'body': 'changeFont(${1:id sender})'
  'changeSpelling:':
    'prefix': 'changeSpelling:'
    'body': 'changeSpelling(${1:id sender})'
  'characterIndexForPoint:':
    'prefix': 'characterIndexForPoint:'
    'body': 'characterIndexForPoint(${1:NSPoint aPoint})'
  'collectionView:acceptDrop:index:dropOperation:':
    'prefix': 'collectionView:acceptDrop:index:dropOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, acceptDrop:${2:id draggingInfo}, index:${3:NSInteger index}, dropOperation:${4:NSCollectionViewDropOperation dropOperation})'
  'collectionView:canDragItemsAtIndexes:withEvent:':
    'prefix': 'collectionView:canDragItemsAtIndexes:withEvent:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, canDragItemsAtIndexes:${2:NSIndexSet* indexes}, withEvent:${3:NSEvent* event})'
  'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:':
    'prefix': 'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingImageForItemsAtIndexes:${2:NSIndexSet* indexes}, withEvent:${3:NSEvent* event}, offset:${4:NSPointPointer dragImageOffset})'
  'collectionView:draggingSession:endedAtPoint:dragOperation:':
    'prefix': 'collectionView:draggingSession:endedAtPoint:dragOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, dragOperation:${4:NSDragOperation operation})'
  'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:':
    'prefix': 'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forItemsAtIndexes:${4:NSIndexSet* indexes})'
  'collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:':
    'prefix': 'collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropURL}, forDraggedItemsAtIndexes:${3:NSIndexSet* indexes})'
  'collectionView:pasteboardWriterForItemAtIndex:':
    'prefix': 'collectionView:pasteboardWriterForItemAtIndex:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, pasteboardWriterForItemAtIndex:${2:NSUInteger index})'
  'collectionView:updateDraggingItemsForDrag:':
    'prefix': 'collectionView:updateDraggingItemsForDrag:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'collectionView:validateDrop:proposedIndex:dropOperation:':
    'prefix': 'collectionView:validateDrop:proposedIndex:dropOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, validateDrop:${2:id draggingInfo}, proposedIndex:${3:NSInteger* proposedDropIndex}, dropOperation:${4:NSCollectionViewDropOperation* proposedDropOperation})'
  'collectionView:writeItemsAtIndexes:toPasteboard:':
    'prefix': 'collectionView:writeItemsAtIndexes:toPasteboard:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, writeItemsAtIndexes:${2:NSIndexSet* indexes}, toPasteboard:${3:NSPasteboard* pasteboard})'
  'comboBox:completedString:':
    'prefix': 'comboBox:completedString:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, completedString:${2:NSString* string})'
  'comboBox:indexOfItemWithStringValue:':
    'prefix': 'comboBox:indexOfItemWithStringValue:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, indexOfItemWithStringValue:${2:NSString* string})'
  'comboBox:objectValueForItemAtIndex:':
    'prefix': 'comboBox:objectValueForItemAtIndex:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, objectValueForItemAtIndex:${2:NSInteger index})'
  'comboBoxCell:completedString:':
    'prefix': 'comboBoxCell:completedString:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, completedString:${2:NSString* uncompletedString})'
  'comboBoxCell:indexOfItemWithStringValue:':
    'prefix': 'comboBoxCell:indexOfItemWithStringValue:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, indexOfItemWithStringValue:${2:NSString* string})'
  'comboBoxCell:objectValueForItemAtIndex:':
    'prefix': 'comboBoxCell:objectValueForItemAtIndex:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, objectValueForItemAtIndex:${2:NSInteger index})'
  'comboBoxSelectionDidChange:':
    'prefix': 'comboBoxSelectionDidChange:'
    'body': 'comboBoxSelectionDidChange(${1:NSNotification* notification})'
  'comboBoxSelectionIsChanging:':
    'prefix': 'comboBoxSelectionIsChanging:'
    'body': 'comboBoxSelectionIsChanging(${1:NSNotification* notification})'
  'comboBoxWillDismiss:':
    'prefix': 'comboBoxWillDismiss:'
    'body': 'comboBoxWillDismiss(${1:NSNotification* notification})'
  'comboBoxWillPopUp:':
    'prefix': 'comboBoxWillPopUp:'
    'body': 'comboBoxWillPopUp(${1:NSNotification* notification})'
  'commitEditing':
    'prefix': 'commitEditing'
    'body': 'commitEditing()'
  'commitEditingAndReturnError:':
    'prefix': 'commitEditingAndReturnError:'
    'body': 'commitEditingAndReturnError(${1:NSError** error})'
  'commitEditingWithDelegate:didCommitSelector:contextInfo:':
    'prefix': 'commitEditingWithDelegate:didCommitSelector:contextInfo:'
    'body': 'commitEditingWithDelegate(${1:id delegate}, didCommitSelector:${2:SEL didCommitSelector}, contextInfo:${3:void* contextInfo})'
  'concludeDragOperation:':
    'prefix': 'concludeDragOperation:'
    'body': 'concludeDragOperation(${1:id sender})'
  'confinementRectForMenu:onScreen:':
    'prefix': 'confinementRectForMenu:onScreen:'
    'body': 'confinementRectForMenu(${1:NSMenu* menu}, onScreen:${2:NSScreen* screen})'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'contentViewAtIndex:effectiveCharacterRange:':
    'prefix': 'contentViewAtIndex:effectiveCharacterRange:'
    'body': 'contentViewAtIndex(${1:NSUInteger index}, effectiveCharacterRange:${2:NSRangePointer outRange})'
  'control:didFailToFormatString:errorDescription:':
    'prefix': 'control:didFailToFormatString:errorDescription:'
    'body': 'control(${1:NSControl* control}, didFailToFormatString:${2:NSString* string}, errorDescription:${3:NSString* error})'
  'control:didFailToValidatePartialString:errorDescription:':
    'prefix': 'control:didFailToValidatePartialString:errorDescription:'
    'body': 'control(${1:NSControl* control}, didFailToValidatePartialString:${2:NSString* string}, errorDescription:${3:NSString* error})'
  'control:isValidObject:':
    'prefix': 'control:isValidObject:'
    'body': 'control(${1:NSControl* control}, isValidObject:${2:id obj})'
  'control:textShouldBeginEditing:':
    'prefix': 'control:textShouldBeginEditing:'
    'body': 'control(${1:NSControl* control}, textShouldBeginEditing:${2:NSText* fieldEditor})'
  'control:textShouldEndEditing:':
    'prefix': 'control:textShouldEndEditing:'
    'body': 'control(${1:NSControl* control}, textShouldEndEditing:${2:NSText* fieldEditor})'
  'control:textView:completions:forPartialWordRange:indexOfSelectedItem:':
    'prefix': 'control:textView:completions:forPartialWordRange:indexOfSelectedItem:'
    'body': 'control(${1:NSControl* control}, textView:${2:NSTextView* textView}, completions:${3:NSArray* words}, forPartialWordRange:${4:NSRange charRange}, indexOfSelectedItem:${5:NSInteger* index})'
  'control:textView:doCommandBySelector:':
    'prefix': 'control:textView:doCommandBySelector:'
    'body': 'control(${1:NSControl* control}, textView:${2:NSTextView* textView}, doCommandBySelector:${3:SEL commandSelector})'
  'controlTextDidBeginEditing:':
    'prefix': 'controlTextDidBeginEditing:'
    'body': 'controlTextDidBeginEditing(${1:NSNotification* obj})'
  'controlTextDidChange:':
    'prefix': 'controlTextDidChange:'
    'body': 'controlTextDidChange(${1:NSNotification* obj})'
  'controlTextDidEndEditing:':
    'prefix': 'controlTextDidEndEditing:'
    'body': 'controlTextDidEndEditing(${1:NSNotification* obj})'
  'conversationIdentifier':
    'prefix': 'conversationIdentifier'
    'body': 'conversationIdentifier()'
  'currentMode':
    'prefix': 'currentMode'
    'body': 'currentMode()'
  'customWindowsToEnterFullScreenForWindow:':
    'prefix': 'customWindowsToEnterFullScreenForWindow:'
    'body': 'customWindowsToEnterFullScreenForWindow(${1:NSWindow* window})'
  'customWindowsToEnterFullScreenForWindow:onScreen:':
    'prefix': 'customWindowsToEnterFullScreenForWindow:onScreen:'
    'body': 'customWindowsToEnterFullScreenForWindow(${1:NSWindow* window}, onScreen:${2:NSScreen* screen})'
  'customWindowsToExitFullScreenForWindow:':
    'prefix': 'customWindowsToExitFullScreenForWindow:'
    'body': 'customWindowsToExitFullScreenForWindow(${1:NSWindow* window})'
  'datePickerCell:validateProposedDateValue:timeInterval:':
    'prefix': 'datePickerCell:validateProposedDateValue:timeInterval:'
    'body': 'datePickerCell(${1:NSDatePickerCell* aDatePickerCell}, validateProposedDateValue:${2:NSDate** proposedDateValue}, timeInterval:${3:NSTimeInterval* proposedTimeInterval})'
  'NSObject.defaultAnimationForKey:':
    'prefix': 'defaultAnimationForKey:'
    'body': 'defaultAnimationForKey(${1:NSString* key})'
  'NSObject.defaultPlaceholderForMarker:withBinding:':
    'prefix': 'defaultPlaceholderForMarker:withBinding:'
    'body': 'defaultPlaceholderForMarker(${1:id marker}, withBinding:${2:NSString* binding})'
  'detachColorList:':
    'prefix': 'detachColorList:'
    'body': 'detachColorList(${1:NSColorList* colorList})'
  'detachableWindowForPopover:':
    'prefix': 'detachableWindowForPopover:'
    'body': 'detachableWindowForPopover(${1:NSPopover* popover})'
  'didReplaceCharacters':
    'prefix': 'didReplaceCharacters'
    'body': 'didReplaceCharacters()'
  'discardEditing':
    'prefix': 'discardEditing'
    'body': 'discardEditing()'
  'doCommandBySelector:':
    'prefix': 'doCommandBySelector:'
    'body': 'doCommandBySelector(${1:SEL aSelector})'
  'doCommandBySelector:client:':
    'prefix': 'doCommandBySelector:client:'
    'body': 'doCommandBySelector(${1:SEL aSelector}, client:${2:id sender})'
  'dockMenu':
    'prefix': 'dockMenu'
    'body': 'dockMenu()'
  'draggedImage':
    'prefix': 'draggedImage'
    'body': 'draggedImage()'
  'draggedImage:beganAt:':
    'prefix': 'draggedImage:beganAt:'
    'body': 'draggedImage(${1:NSImage* image}, beganAt:${2:NSPoint screenPoint})'
  'draggedImage:endedAt:deposited:':
    'prefix': 'draggedImage:endedAt:deposited:'
    'body': 'draggedImage(${1:NSImage* image}, endedAt:${2:NSPoint screenPoint}, deposited:${3:BOOL flag})'
  'draggedImage:endedAt:operation:':
    'prefix': 'draggedImage:endedAt:operation:'
    'body': 'draggedImage(${1:NSImage* image}, endedAt:${2:NSPoint screenPoint}, operation:${3:NSDragOperation operation})'
  'draggedImage:movedTo:':
    'prefix': 'draggedImage:movedTo:'
    'body': 'draggedImage(${1:NSImage* image}, movedTo:${2:NSPoint screenPoint})'
  'draggedImageLocation':
    'prefix': 'draggedImageLocation'
    'body': 'draggedImageLocation()'
  'draggingDestinationWindow':
    'prefix': 'draggingDestinationWindow'
    'body': 'draggingDestinationWindow()'
  'draggingEnded:':
    'prefix': 'draggingEnded:'
    'body': 'draggingEnded(${1:id sender})'
  'draggingEntered:':
    'prefix': 'draggingEntered:'
    'body': 'draggingEntered(${1:id sender})'
  'draggingExited:':
    'prefix': 'draggingExited:'
    'body': 'draggingExited(${1:id sender})'
  'draggingFormation':
    'prefix': 'draggingFormation'
    'body': 'draggingFormation()'
  'draggingLocation':
    'prefix': 'draggingLocation'
    'body': 'draggingLocation()'
  'draggingPasteboard':
    'prefix': 'draggingPasteboard'
    'body': 'draggingPasteboard()'
  'draggingSequenceNumber':
    'prefix': 'draggingSequenceNumber'
    'body': 'draggingSequenceNumber()'
  'draggingSession:endedAtPoint:operation:':
    'prefix': 'draggingSession:endedAtPoint:operation:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, endedAtPoint:${2:NSPoint screenPoint}, operation:${3:NSDragOperation operation})'
  'draggingSession:movedToPoint:':
    'prefix': 'draggingSession:movedToPoint:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, movedToPoint:${2:NSPoint screenPoint})'
  'draggingSession:sourceOperationMaskForDraggingContext:':
    'prefix': 'draggingSession:sourceOperationMaskForDraggingContext:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, sourceOperationMaskForDraggingContext:${2:NSDraggingContext context})'
  'draggingSession:willBeginAtPoint:':
    'prefix': 'draggingSession:willBeginAtPoint:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, willBeginAtPoint:${2:NSPoint screenPoint})'
  'draggingSource':
    'prefix': 'draggingSource'
    'body': 'draggingSource()'
  'draggingSourceOperationMask':
    'prefix': 'draggingSourceOperationMask'
    'body': 'draggingSourceOperationMask()'
  'draggingSourceOperationMaskForLocal:':
    'prefix': 'draggingSourceOperationMaskForLocal:'
    'body': 'draggingSourceOperationMaskForLocal(${1:BOOL flag})'
  'draggingUpdated:':
    'prefix': 'draggingUpdated:'
    'body': 'draggingUpdated(${1:id sender})'
  'drawCharactersInRange:forContentView:':
    'prefix': 'drawCharactersInRange:forContentView:'
    'body': 'drawCharactersInRange(${1:NSRange range}, forContentView:${2:NSView* view})'
  'drawWithFrame:inView:':
    'prefix': 'drawWithFrame:inView:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawWithFrame:inView:characterIndex:':
    'prefix': 'drawWithFrame:inView:characterIndex:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView}, characterIndex:${3:NSUInteger charIndex})'
  'drawWithFrame:inView:characterIndex:layoutManager:':
    'prefix': 'drawWithFrame:inView:characterIndex:layoutManager:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView}, characterIndex:${3:NSUInteger charIndex}, layoutManager:${4:NSLayoutManager* layoutManager})'
  'drawerDidClose:':
    'prefix': 'drawerDidClose:'
    'body': 'drawerDidClose(${1:NSNotification* notification})'
  'drawerDidOpen:':
    'prefix': 'drawerDidOpen:'
    'body': 'drawerDidOpen(${1:NSNotification* notification})'
  'drawerShouldClose:':
    'prefix': 'drawerShouldClose:'
    'body': 'drawerShouldClose(${1:NSDrawer* sender})'
  'drawerShouldOpen:':
    'prefix': 'drawerShouldOpen:'
    'body': 'drawerShouldOpen(${1:NSDrawer* sender})'
  'drawerWillClose:':
    'prefix': 'drawerWillClose:'
    'body': 'drawerWillClose(${1:NSNotification* notification})'
  'drawerWillOpen:':
    'prefix': 'drawerWillOpen:'
    'body': 'drawerWillOpen(${1:NSNotification* notification})'
  'drawerWillResizeContents:toSize:':
    'prefix': 'drawerWillResizeContents:toSize:'
    'body': 'drawerWillResizeContents(${1:NSDrawer* sender}, toSize:${2:NSSize contentSize})'
  'drawsVerticallyForCharacterAtIndex:':
    'prefix': 'drawsVerticallyForCharacterAtIndex:'
    'body': 'drawsVerticallyForCharacterAtIndex(${1:NSUInteger charIndex})'
  'effectiveAppearance':
    'prefix': 'effectiveAppearance'
    'body': 'effectiveAppearance()'
  'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:':
    'prefix': 'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'
    'body': 'enumerateDraggingItemsWithOptions(${1:NSDraggingItemEnumerationOptions enumOpts}, forView:${2:NSView* view}, classes:${3:NSArray* classArray}, searchOptions:${4:NSDictionary* searchOptions}, usingBlock:${5:void (^)(NSDraggingItem *, NSInteger, BOOL *) block})'
  'NSObject.exposeBinding:':
    'prefix': 'exposeBinding:'
    'body': 'exposeBinding(${1:NSString* binding})'
  'exposedBindings':
    'prefix': 'exposedBindings'
    'body': 'exposedBindings()'
  'findBarView':
    'prefix': 'findBarView'
    'body': 'findBarView()'
  'findBarViewDidChangeHeight':
    'prefix': 'findBarViewDidChangeHeight'
    'body': 'findBarViewDidChangeHeight()'
  'firstRectForCharacterRange:':
    'prefix': 'firstRectForCharacterRange:'
    'body': 'firstRectForCharacterRange(${1:NSRange theRange})'
  'firstRectForCharacterRange:actualRange:':
    'prefix': 'firstRectForCharacterRange:actualRange:'
    'body': 'firstRectForCharacterRange(${1:NSRange aRange}, actualRange:${2:NSRangePointer actualRange})'
  'firstSelectedRange':
    'prefix': 'firstSelectedRange'
    'body': 'firstSelectedRange()'
  'fontManager:willIncludeFont:':
    'prefix': 'fontManager:willIncludeFont:'
    'body': 'fontManager(${1:id sender}, willIncludeFont:${2:NSString* fontName})'
  'fractionOfDistanceThroughGlyphForPoint:':
    'prefix': 'fractionOfDistanceThroughGlyphForPoint:'
    'body': 'fractionOfDistanceThroughGlyphForPoint(${1:NSPoint aPoint})'
  'hasMarkedText':
    'prefix': 'hasMarkedText'
    'body': 'hasMarkedText()'
  'highlight:withFrame:inView:':
    'prefix': 'highlight:withFrame:inView:'
    'body': 'highlight(${1:BOOL flag}, withFrame:${2:NSRect cellFrame}, inView:${3:NSView* controlView})'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'ignoreModifierKeysForDraggingSession:':
    'prefix': 'ignoreModifierKeysForDraggingSession:'
    'body': 'ignoreModifierKeysForDraggingSession(${1:NSDraggingSession* session})'
  'ignoreModifierKeysWhileDragging':
    'prefix': 'ignoreModifierKeysWhileDragging'
    'body': 'ignoreModifierKeysWhileDragging()'
  'ignoreSpelling:':
    'prefix': 'ignoreSpelling:'
    'body': 'ignoreSpelling(${1:id sender})'
  'image:didLoadPartOfRepresentation:withValidRows:':
    'prefix': 'image:didLoadPartOfRepresentation:withValidRows:'
    'body': 'image(${1:NSImage* image}, didLoadPartOfRepresentation:${2:NSImageRep* rep}, withValidRows:${3:NSInteger rows})'
  'image:didLoadRepresentation:withStatus:':
    'prefix': 'image:didLoadRepresentation:withStatus:'
    'body': 'image(${1:NSImage* image}, didLoadRepresentation:${2:NSImageRep* rep}, withStatus:${3:NSImageLoadStatus status})'
  'image:didLoadRepresentationHeader:':
    'prefix': 'image:didLoadRepresentationHeader:'
    'body': 'image(${1:NSImage* image}, didLoadRepresentationHeader:${2:NSImageRep* rep})'
  'image:willLoadRepresentation:':
    'prefix': 'image:willLoadRepresentation:'
    'body': 'image(${1:NSImage* image}, willLoadRepresentation:${2:NSImageRep* rep})'
  'imageDidNotDraw:inRect:':
    'prefix': 'imageDidNotDraw:inRect:'
    'body': 'imageDidNotDraw(${1:id sender}, inRect:${2:NSRect aRect})'
  'infoForBinding:':
    'prefix': 'infoForBinding:'
    'body': 'infoForBinding(${1:NSString* binding})'
  'initWithPasteboardPropertyList:ofType:':
    'prefix': 'initWithPasteboardPropertyList:ofType:'
    'body': 'initWithPasteboardPropertyList(${1:id propertyList}, ofType:${2:NSString* type})'
  'initWithPickerMask:colorPanel:':
    'prefix': 'initWithPickerMask:colorPanel:'
    'body': 'initWithPickerMask(${1:NSUInteger mask}, colorPanel:${2:NSColorPanel* owningColorPanel})'
  'inputClientBecomeActive:':
    'prefix': 'inputClientBecomeActive:'
    'body': 'inputClientBecomeActive(${1:id sender})'
  'inputClientDisabled:':
    'prefix': 'inputClientDisabled:'
    'body': 'inputClientDisabled(${1:id sender})'
  'inputClientEnabled:':
    'prefix': 'inputClientEnabled:'
    'body': 'inputClientEnabled(${1:id sender})'
  'inputClientResignActive:':
    'prefix': 'inputClientResignActive:'
    'body': 'inputClientResignActive(${1:id sender})'
  'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:':
    'prefix': 'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'
    'body': 'insertGlyphs(${1:NSGlyph* glyphs}, length:${2:NSUInteger length}, forStartingGlyphAtIndex:${3:NSUInteger glyphIndex}, characterIndex:${4:NSUInteger charIndex})'
  'insertNewButtonImage:in:':
    'prefix': 'insertNewButtonImage:in:'
    'body': 'insertNewButtonImage(${1:NSImage* newButtonImage}, in:${2:NSButtonCell* buttonCell})'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:id aString})'
  'insertText:client:':
    'prefix': 'insertText:client:'
    'body': 'insertText(${1:id aString}, client:${2:id sender})'
  'insertText:replacementRange:':
    'prefix': 'insertText:replacementRange:'
    'body': 'insertText(${1:id aString}, replacementRange:${2:NSRange replacementRange})'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isExplicitlyIncluded':
    'prefix': 'isExplicitlyIncluded'
    'body': 'isExplicitlyIncluded()'
  'isFindBarVisible':
    'prefix': 'isFindBarVisible'
    'body': 'isFindBarVisible()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'key':
    'prefix': 'key'
    'body': 'Key()'
  'keyPathsForValuesAffectingPreview':
    'prefix': 'keyPathsForValuesAffectingPreview'
    'body': 'KeyPathsForValuesAffectingPreview()'
  'layer:shouldInheritContentsScale:fromWindow:':
    'prefix': 'layer:shouldInheritContentsScale:fromWindow:'
    'body': 'layer(${1:CALayer* layer}, shouldInheritContentsScale:${2:CGFloat newScale}, fromWindow:${3:NSWindow* window})'
  'layoutManager:didCompleteLayoutForTextContainer:atEnd:':
    'prefix': 'layoutManager:didCompleteLayoutForTextContainer:atEnd:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, didCompleteLayoutForTextContainer:${2:NSTextContainer* textContainer}, atEnd:${3:BOOL layoutFinishedFlag})'
  'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:':
    'prefix': 'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldUseTemporaryAttributes:${2:NSDictionary* attrs}, forDrawingToScreen:${3:BOOL toScreen}, atCharacterIndex:${4:NSUInteger charIndex}, effectiveRange:${5:NSRangePointer effectiveCharRange})'
  'layoutManagerDidInvalidateLayout:':
    'prefix': 'layoutManagerDidInvalidateLayout:'
    'body': 'layoutManagerDidInvalidateLayout(${1:NSLayoutManager* sender})'
  'layoutOptions':
    'prefix': 'layoutOptions'
    'body': 'layoutOptions()'
  'layoutOrientation':
    'prefix': 'layoutOrientation'
    'body': 'layoutOrientation()'
  'localizedKey':
    'prefix': 'localizedKey'
    'body': 'localizedKey()'
  'localizedSummaryItems':
    'prefix': 'localizedSummaryItems'
    'body': 'localizedSummaryItems()'
  'localizedTitlesForItem:':
    'prefix': 'localizedTitlesForItem:'
    'body': 'localizedTitlesForItem(${1:id item})'
  'markedRange':
    'prefix': 'markedRange'
    'body': 'markedRange()'
  'markedTextAbandoned:':
    'prefix': 'markedTextAbandoned:'
    'body': 'markedTextAbandoned(${1:id sender})'
  'markedTextSelectionChanged:client:':
    'prefix': 'markedTextSelectionChanged:client:'
    'body': 'markedTextSelectionChanged(${1:NSRange newSel}, client:${2:id sender})'
  'menu:updateItem:atIndex:shouldCancel:':
    'prefix': 'menu:updateItem:atIndex:shouldCancel:'
    'body': 'menu(${1:NSMenu* menu}, updateItem:${2:NSMenuItem* item}, atIndex:${3:NSInteger index}, shouldCancel:${4:BOOL shouldCancel})'
  'menu:willHighlightItem:':
    'prefix': 'menu:willHighlightItem:'
    'body': 'menu(${1:NSMenu* menu}, willHighlightItem:${2:NSMenuItem* item})'
  'menuDidClose:':
    'prefix': 'menuDidClose:'
    'body': 'menuDidClose(${1:NSMenu* menu})'
  'menuHasKeyEquivalent:forEvent:target:action:':
    'prefix': 'menuHasKeyEquivalent:forEvent:target:action:'
    'body': 'menuHasKeyEquivalent(${1:NSMenu* menu}, forEvent:${2:NSEvent* event}, target:${3:id* target}, action:${4:SEL* action})'
  'menuNeedsUpdate:':
    'prefix': 'menuNeedsUpdate:'
    'body': 'menuNeedsUpdate(${1:NSMenu* menu})'
  'menuWillOpen:':
    'prefix': 'menuWillOpen:'
    'body': 'menuWillOpen(${1:NSMenu* menu})'
  'minContentSize':
    'prefix': 'minContentSize'
    'body': 'minContentSize()'
  'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseDownOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseDraggedOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseUpOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'namesOfPromisedFilesDroppedAtDestination:':
    'prefix': 'namesOfPromisedFilesDroppedAtDestination:'
    'body': 'namesOfPromisedFilesDroppedAtDestination(${1:NSURL* dropDestination})'
  'numberOfItemsInComboBox:':
    'prefix': 'numberOfItemsInComboBox:'
    'body': 'numberOfItemsInComboBox(${1:NSComboBox* aComboBox})'
  'numberOfItemsInComboBoxCell:':
    'prefix': 'numberOfItemsInComboBoxCell:'
    'body': 'numberOfItemsInComboBoxCell(${1:NSComboBoxCell* comboBoxCell})'
  'numberOfItemsInMenu:':
    'prefix': 'numberOfItemsInMenu:'
    'body': 'numberOfItemsInMenu(${1:NSMenu* menu})'
  'numberOfRowsInTableView:':
    'prefix': 'numberOfRowsInTableView:'
    'body': 'numberOfRowsInTableView(${1:NSTableView* tableView})'
  'numberOfValidItemsForDrop':
    'prefix': 'numberOfValidItemsForDrop'
    'body': 'numberOfValidItemsForDrop()'
  'objectDidBeginEditing:':
    'prefix': 'objectDidBeginEditing:'
    'body': 'objectDidBeginEditing(${1:id editor})'
  'objectDidEndEditing:':
    'prefix': 'objectDidEndEditing:'
    'body': 'objectDidEndEditing(${1:id editor})'
  'optionDescriptionsForBinding:':
    'prefix': 'optionDescriptionsForBinding:'
    'body': 'optionDescriptionsForBinding(${1:NSString* aBinding})'
  'outlineView:acceptDrop:item:childIndex:':
    'prefix': 'outlineView:acceptDrop:item:childIndex:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, acceptDrop:${2:id info}, item:${3:id item}, childIndex:${4:NSInteger index})'
  'outlineView:child:ofItem:':
    'prefix': 'outlineView:child:ofItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, child:${2:NSInteger index}, ofItem:${3:id item})'
  'outlineView:dataCellForTableColumn:item:':
    'prefix': 'outlineView:dataCellForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, dataCellForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:didAddRowView:forRow:':
    'prefix': 'outlineView:didAddRowView:forRow:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didAddRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'outlineView:didClickTableColumn:':
    'prefix': 'outlineView:didClickTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didClickTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:didDragTableColumn:':
    'prefix': 'outlineView:didDragTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didDragTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:didRemoveRowView:forRow:':
    'prefix': 'outlineView:didRemoveRowView:forRow:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didRemoveRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'outlineView:draggingSession:endedAtPoint:operation:':
    'prefix': 'outlineView:draggingSession:endedAtPoint:operation:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, operation:${4:NSDragOperation operation})'
  'outlineView:draggingSession:willBeginAtPoint:forItems:':
    'prefix': 'outlineView:draggingSession:willBeginAtPoint:forItems:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forItems:${4:NSArray* draggedItems})'
  'outlineView:heightOfRowByItem:':
    'prefix': 'outlineView:heightOfRowByItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, heightOfRowByItem:${2:id item})'
  'outlineView:isGroupItem:':
    'prefix': 'outlineView:isGroupItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, isGroupItem:${2:id item})'
  'outlineView:isItemExpandable:':
    'prefix': 'outlineView:isItemExpandable:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, isItemExpandable:${2:id item})'
  'outlineView:itemForPersistentObject:':
    'prefix': 'outlineView:itemForPersistentObject:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, itemForPersistentObject:${2:id object})'
  'outlineView:mouseDownInHeaderOfTableColumn:':
    'prefix': 'outlineView:mouseDownInHeaderOfTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, mouseDownInHeaderOfTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:':
    'prefix': 'outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedItems:${3:NSArray* items})'
  'outlineView:nextTypeSelectMatchFromItem:toItem:forString:':
    'prefix': 'outlineView:nextTypeSelectMatchFromItem:toItem:forString:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, nextTypeSelectMatchFromItem:${2:id startItem}, toItem:${3:id endItem}, forString:${4:NSString* searchString})'
  'outlineView:numberOfChildrenOfItem:':
    'prefix': 'outlineView:numberOfChildrenOfItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, numberOfChildrenOfItem:${2:id item})'
  'outlineView:objectValueForTableColumn:byItem:':
    'prefix': 'outlineView:objectValueForTableColumn:byItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, objectValueForTableColumn:${2:NSTableColumn* tableColumn}, byItem:${3:id item})'
  'outlineView:pasteboardWriterForItem:':
    'prefix': 'outlineView:pasteboardWriterForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, pasteboardWriterForItem:${2:id item})'
  'outlineView:persistentObjectForItem:':
    'prefix': 'outlineView:persistentObjectForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, persistentObjectForItem:${2:id item})'
  'outlineView:rowViewForItem:':
    'prefix': 'outlineView:rowViewForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, rowViewForItem:${2:id item})'
  'outlineView:selectionIndexesForProposedSelection:':
    'prefix': 'outlineView:selectionIndexesForProposedSelection:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes})'
  'outlineView:setObjectValue:forTableColumn:byItem:':
    'prefix': 'outlineView:setObjectValue:forTableColumn:byItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, setObjectValue:${2:id object}, forTableColumn:${3:NSTableColumn* tableColumn}, byItem:${4:id item})'
  'outlineView:shouldCollapseItem:':
    'prefix': 'outlineView:shouldCollapseItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldCollapseItem:${2:id item})'
  'outlineView:shouldEditTableColumn:item:':
    'prefix': 'outlineView:shouldEditTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldEditTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:shouldExpandItem:':
    'prefix': 'outlineView:shouldExpandItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldExpandItem:${2:id item})'
  'outlineView:shouldReorderColumn:toColumn:':
    'prefix': 'outlineView:shouldReorderColumn:toColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldReorderColumn:${2:NSInteger columnIndex}, toColumn:${3:NSInteger newColumnIndex})'
  'outlineView:shouldSelectItem:':
    'prefix': 'outlineView:shouldSelectItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldSelectItem:${2:id item})'
  'outlineView:shouldSelectTableColumn:':
    'prefix': 'outlineView:shouldSelectTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldSelectTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:shouldShowCellExpansionForTableColumn:item:':
    'prefix': 'outlineView:shouldShowCellExpansionForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldShowCellExpansionForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:shouldShowOutlineCellForItem:':
    'prefix': 'outlineView:shouldShowOutlineCellForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldShowOutlineCellForItem:${2:id item})'
  'outlineView:shouldTrackCell:forTableColumn:item:':
    'prefix': 'outlineView:shouldTrackCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldTrackCell:${2:NSCell* cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'outlineView:sizeToFitWidthOfColumn:':
    'prefix': 'outlineView:sizeToFitWidthOfColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, sizeToFitWidthOfColumn:${2:NSInteger column})'
  'outlineView:sortDescriptorsDidChange:':
    'prefix': 'outlineView:sortDescriptorsDidChange:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, sortDescriptorsDidChange:${2:NSArray* oldDescriptors})'
  'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:':
    'prefix': 'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, toolTipForCell:${2:NSCell* cell}, rect:${3:NSRectPointer rect}, tableColumn:${4:NSTableColumn* tableColumn}, item:${5:id item}, mouseLocation:${6:NSPoint mouseLocation})'
  'outlineView:typeSelectStringForTableColumn:item:':
    'prefix': 'outlineView:typeSelectStringForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, typeSelectStringForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:updateDraggingItemsForDrag:':
    'prefix': 'outlineView:updateDraggingItemsForDrag:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'outlineView:validateDrop:proposedItem:proposedChildIndex:':
    'prefix': 'outlineView:validateDrop:proposedItem:proposedChildIndex:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, validateDrop:${2:id info}, proposedItem:${3:id item}, proposedChildIndex:${4:NSInteger index})'
  'outlineView:viewForTableColumn:item:':
    'prefix': 'outlineView:viewForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, viewForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:willDisplayCell:forTableColumn:item:':
    'prefix': 'outlineView:willDisplayCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, willDisplayCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineView:willDisplayOutlineCell:forTableColumn:item:':
    'prefix': 'outlineView:willDisplayOutlineCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, willDisplayOutlineCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineView:writeItems:toPasteboard:':
    'prefix': 'outlineView:writeItems:toPasteboard:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, writeItems:${2:NSArray* items}, toPasteboard:${3:NSPasteboard* pasteboard})'
  'outlineViewColumnDidMove:':
    'prefix': 'outlineViewColumnDidMove:'
    'body': 'outlineViewColumnDidMove(${1:NSNotification* notification})'
  'outlineViewColumnDidResize:':
    'prefix': 'outlineViewColumnDidResize:'
    'body': 'outlineViewColumnDidResize(${1:NSNotification* notification})'
  'outlineViewItemDidCollapse:':
    'prefix': 'outlineViewItemDidCollapse:'
    'body': 'outlineViewItemDidCollapse(${1:NSNotification* notification})'
  'outlineViewItemDidExpand:':
    'prefix': 'outlineViewItemDidExpand:'
    'body': 'outlineViewItemDidExpand(${1:NSNotification* notification})'
  'outlineViewItemWillCollapse:':
    'prefix': 'outlineViewItemWillCollapse:'
    'body': 'outlineViewItemWillCollapse(${1:NSNotification* notification})'
  'outlineViewItemWillExpand:':
    'prefix': 'outlineViewItemWillExpand:'
    'body': 'outlineViewItemWillExpand(${1:NSNotification* notification})'
  'outlineViewSelectionDidChange:':
    'prefix': 'outlineViewSelectionDidChange:'
    'body': 'outlineViewSelectionDidChange(${1:NSNotification* notification})'
  'outlineViewSelectionIsChanging:':
    'prefix': 'outlineViewSelectionIsChanging:'
    'body': 'outlineViewSelectionIsChanging(${1:NSNotification* notification})'
  'pageController:didTransitionToObject:':
    'prefix': 'pageController:didTransitionToObject:'
    'body': 'pageController(${1:NSPageController* pageController}, didTransitionToObject:${2:id object})'
  'pageController:frameForObject:':
    'prefix': 'pageController:frameForObject:'
    'body': 'pageController(${1:NSPageController* pageController}, frameForObject:${2:id object})'
  'pageController:identifierForObject:':
    'prefix': 'pageController:identifierForObject:'
    'body': 'pageController(${1:NSPageController* pageController}, identifierForObject:${2:id object})'
  'pageController:prepareViewController:withObject:':
    'prefix': 'pageController:prepareViewController:withObject:'
    'body': 'pageController(${1:NSPageController* pageController}, prepareViewController:${2:NSViewController* viewController}, withObject:${3:id object})'
  'pageController:viewControllerForIdentifier:':
    'prefix': 'pageController:viewControllerForIdentifier:'
    'body': 'pageController(${1:NSPageController* pageController}, viewControllerForIdentifier:${2:NSString* identifier})'
  'pageControllerDidEndLiveTransition:':
    'prefix': 'pageControllerDidEndLiveTransition:'
    'body': 'pageControllerDidEndLiveTransition(${1:NSPageController* pageController})'
  'pageControllerWillStartLiveTransition:':
    'prefix': 'pageControllerWillStartLiveTransition:'
    'body': 'pageControllerWillStartLiveTransition(${1:NSPageController* pageController})'
  'panel:compareFilename:with:caseSensitive:':
    'prefix': 'panel:compareFilename:with:caseSensitive:'
    'body': 'panel(${1:id sender}, compareFilename:${2:NSString* name1}, with:${3:NSString* name2}, caseSensitive:${4:BOOL caseSensitive})'
  'panel:didChangeToDirectoryURL:':
    'prefix': 'panel:didChangeToDirectoryURL:'
    'body': 'panel(${1:id sender}, didChangeToDirectoryURL:${2:NSURL* url})'
  'panel:directoryDidChange:':
    'prefix': 'panel:directoryDidChange:'
    'body': 'panel(${1:id sender}, directoryDidChange:${2:NSString* path})'
  'panel:isValidFilename:':
    'prefix': 'panel:isValidFilename:'
    'body': 'panel(${1:id sender}, isValidFilename:${2:NSString* filename})'
  'panel:shouldEnableURL:':
    'prefix': 'panel:shouldEnableURL:'
    'body': 'panel(${1:id sender}, shouldEnableURL:${2:NSURL* url})'
  'panel:shouldShowFilename:':
    'prefix': 'panel:shouldShowFilename:'
    'body': 'panel(${1:id sender}, shouldShowFilename:${2:NSString* filename})'
  'panel:userEnteredFilename:confirmed:':
    'prefix': 'panel:userEnteredFilename:confirmed:'
    'body': 'panel(${1:id sender}, userEnteredFilename:${2:NSString* filename}, confirmed:${3:BOOL okFlag})'
  'panel:validateURL:error:':
    'prefix': 'panel:validateURL:error:'
    'body': 'panel(${1:id sender}, validateURL:${2:NSURL* url}, error:${3:NSError** outError})'
  'panel:willExpand:':
    'prefix': 'panel:willExpand:'
    'body': 'panel(${1:id sender}, willExpand:${2:BOOL expanding})'
  'panelSelectionDidChange:':
    'prefix': 'panelSelectionDidChange:'
    'body': 'panelSelectionDidChange(${1:id sender})'
  'pasteboard:item:provideDataForType:':
    'prefix': 'pasteboard:item:provideDataForType:'
    'body': 'pasteboard(${1:NSPasteboard* pasteboard}, item:${2:NSPasteboardItem* item}, provideDataForType:${3:NSString* type})'
  'pasteboard:provideDataForType:':
    'prefix': 'pasteboard:provideDataForType:'
    'body': 'pasteboard(${1:NSPasteboard* sender}, provideDataForType:${2:NSString* type})'
  'pasteboardChangedOwner:':
    'prefix': 'pasteboardChangedOwner:'
    'body': 'pasteboardChangedOwner(${1:NSPasteboard* sender})'
  'pasteboardFinishedWithDataProvider:':
    'prefix': 'pasteboardFinishedWithDataProvider:'
    'body': 'pasteboardFinishedWithDataProvider(${1:NSPasteboard* pasteboard})'
  'pasteboardPropertyListForType:':
    'prefix': 'pasteboardPropertyListForType:'
    'body': 'pasteboardPropertyListForType(${1:NSString* type})'
  'pathCell:willDisplayOpenPanel:':
    'prefix': 'pathCell:willDisplayOpenPanel:'
    'body': 'pathCell(${1:NSPathCell* pathCell}, willDisplayOpenPanel:${2:NSOpenPanel* openPanel})'
  'pathCell:willPopUpMenu:':
    'prefix': 'pathCell:willPopUpMenu:'
    'body': 'pathCell(${1:NSPathCell* pathCell}, willPopUpMenu:${2:NSMenu* menu})'
  'pathControl:acceptDrop:':
    'prefix': 'pathControl:acceptDrop:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, acceptDrop:${2:id info})'
  'pathControl:shouldDragPathComponentCell:withPasteboard:':
    'prefix': 'pathControl:shouldDragPathComponentCell:withPasteboard:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, shouldDragPathComponentCell:${2:NSPathComponentCell* pathComponentCell}, withPasteboard:${3:NSPasteboard* pasteboard})'
  'pathControl:validateDrop:':
    'prefix': 'pathControl:validateDrop:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, validateDrop:${2:id info})'
  'pathControl:willDisplayOpenPanel:':
    'prefix': 'pathControl:willDisplayOpenPanel:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, willDisplayOpenPanel:${2:NSOpenPanel* openPanel})'
  'pathControl:willPopUpMenu:':
    'prefix': 'pathControl:willPopUpMenu:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, willPopUpMenu:${2:NSMenu* menu})'
  'performActionForItem:':
    'prefix': 'performActionForItem:'
    'body': 'performActionForItem(${1:id item})'
  'performDragOperation:':
    'prefix': 'performDragOperation:'
    'body': 'performDragOperation(${1:id sender})'
  'popoverDidClose:':
    'prefix': 'popoverDidClose:'
    'body': 'popoverDidClose(${1:NSNotification* notification})'
  'popoverDidShow:':
    'prefix': 'popoverDidShow:'
    'body': 'popoverDidShow(${1:NSNotification* notification})'
  'popoverShouldClose:':
    'prefix': 'popoverShouldClose:'
    'body': 'popoverShouldClose(${1:NSPopover* popover})'
  'popoverWillClose:':
    'prefix': 'popoverWillClose:'
    'body': 'popoverWillClose(${1:NSNotification* notification})'
  'popoverWillShow:':
    'prefix': 'popoverWillShow:'
    'body': 'popoverWillShow(${1:NSNotification* notification})'
  'prepareForDragOperation:':
    'prefix': 'prepareForDragOperation:'
    'body': 'prepareForDragOperation(${1:id sender})'
  'provideNewButtonImage':
    'prefix': 'provideNewButtonImage'
    'body': 'provideNewButtonImage()'
  'provideNewView:':
    'prefix': 'provideNewView:'
    'body': 'provideNewView(${1:BOOL initialRequest})'
  'readSelectionFromPasteboard:':
    'prefix': 'readSelectionFromPasteboard:'
    'body': 'readSelectionFromPasteboard(${1:NSPasteboard* pboard})'
  'NSObject.readableTypesForPasteboard:':
    'prefix': 'readableTypesForPasteboard:'
    'body': 'readableTypesForPasteboard(${1:NSPasteboard* pasteboard})'
  'NSObject.readingOptionsForType:pasteboard:':
    'prefix': 'readingOptionsForType:pasteboard:'
    'body': 'readingOptionsForType(${1:NSString* type}, pasteboard:${2:NSPasteboard* pasteboard})'
  'rectsForCharacterRange:':
    'prefix': 'rectsForCharacterRange:'
    'body': 'rectsForCharacterRange(${1:NSRange range})'
  'replaceCharactersInRange:withString:':
    'prefix': 'replaceCharactersInRange:withString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withString:${2:NSString* string})'
  'NSObject.restoreWindowWithIdentifier:state:completionHandler:':
    'prefix': 'restoreWindowWithIdentifier:state:completionHandler:'
    'body': 'restoreWindowWithIdentifier(${1:NSString* identifier}, state:${2:NSCoder* state}, completionHandler:${3:void (^)(NSWindow *, NSError *) completionHandler})'
  'rootItemForBrowser:':
    'prefix': 'rootItemForBrowser:'
    'body': 'rootItemForBrowser(${1:NSBrowser* browser})'
  'ruleEditor:child:forCriterion:withRowType:':
    'prefix': 'ruleEditor:child:forCriterion:withRowType:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, child:${2:NSInteger index}, forCriterion:${3:id criterion}, withRowType:${4:NSRuleEditorRowType rowType})'
  'ruleEditor:displayValueForCriterion:inRow:':
    'prefix': 'ruleEditor:displayValueForCriterion:inRow:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, displayValueForCriterion:${2:id criterion}, inRow:${3:NSInteger row})'
  'ruleEditor:numberOfChildrenForCriterion:withRowType:':
    'prefix': 'ruleEditor:numberOfChildrenForCriterion:withRowType:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, numberOfChildrenForCriterion:${2:id criterion}, withRowType:${3:NSRuleEditorRowType rowType})'
  'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:':
    'prefix': 'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, predicatePartsForCriterion:${2:id criterion}, withDisplayValue:${3:id value}, inRow:${4:NSInteger row})'
  'ruleEditorRowsDidChange:':
    'prefix': 'ruleEditorRowsDidChange:'
    'body': 'ruleEditorRowsDidChange(${1:NSNotification* notification})'
  'scrollRangeToVisible:':
    'prefix': 'scrollRangeToVisible:'
    'body': 'scrollRangeToVisible(${1:NSRange range})'
  'searchForItemsWithSearchString:resultLimit:matchedItemHandler:':
    'prefix': 'searchForItemsWithSearchString:resultLimit:matchedItemHandler:'
    'body': 'searchForItemsWithSearchString(${1:NSString* searchString}, resultLimit:${2:NSInteger resultLimit}, matchedItemHandler:${3:void (^)(NSArray *) handleMatchedItems})'
  'selectedRange':
    'prefix': 'selectedRange'
    'body': 'selectedRange()'
  'selectedRanges':
    'prefix': 'selectedRanges'
    'body': 'selectedRanges()'
  'selectionShouldChangeInOutlineView:':
    'prefix': 'selectionShouldChangeInOutlineView:'
    'body': 'selectionShouldChangeInOutlineView(${1:NSOutlineView* outlineView})'
  'selectionShouldChangeInTableView:':
    'prefix': 'selectionShouldChangeInTableView:'
    'body': 'selectionShouldChangeInTableView(${1:NSTableView* tableView})'
  'setAnimatesToDestination:':
    'prefix': 'setAnimatesToDestination:'
    'body': 'setAnimatesToDestination(${1:BOOL animatesToDestination})'
  'setAnimations:':
    'prefix': 'setAnimations:'
    'body': 'setAnimations(${1:NSDictionary* animations})'
  'setAppearance:':
    'prefix': 'setAppearance:'
    'body': 'setAppearance(${1:NSAppearance* appearance})'
  'setAttachment:':
    'prefix': 'setAttachment:'
    'body': 'setAttachment(${1:NSTextAttachment* anObject})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:NSColor* newColor})'
  'NSObject.setDefaultPlaceholder:forMarker:withBinding:':
    'prefix': 'setDefaultPlaceholder:forMarker:withBinding:'
    'body': 'setDefaultPlaceholder(${1:id placeholder}, forMarker:${2:id marker}, withBinding:${3:NSString* binding})'
  'setDockTile:':
    'prefix': 'setDockTile:'
    'body': 'setDockTile(${1:NSDockTile* dockTile})'
  'setDraggingFormation:':
    'prefix': 'setDraggingFormation:'
    'body': 'setDraggingFormation(${1:NSDraggingFormation draggingFormation})'
  'setFindBarView:':
    'prefix': 'setFindBarView:'
    'body': 'setFindBarView(${1:NSView* findBarView})'
  'setFindBarVisible:':
    'prefix': 'setFindBarVisible:'
    'body': 'setFindBarVisible(${1:BOOL findBarVisible})'
  'setIdentifier:':
    'prefix': 'setIdentifier:'
    'body': 'setIdentifier(${1:NSString* identifier})'
  'setIntAttribute:value:forGlyphAtIndex:':
    'prefix': 'setIntAttribute:value:forGlyphAtIndex:'
    'body': 'setIntAttribute(${1:NSInteger attributeTag}, value:${2:NSInteger val}, forGlyphAtIndex:${3:NSUInteger glyphIndex})'
  'setKey:':
    'prefix': 'setKey:'
    'body': 'setKey(${1:NSString* key})'
  'setLocalizedKey:':
    'prefix': 'setLocalizedKey:'
    'body': 'setLocalizedKey(${1:NSString* localizedKey})'
  'setMarkedText:selectedRange:':
    'prefix': 'setMarkedText:selectedRange:'
    'body': 'setMarkedText(${1:id aString}, selectedRange:${2:NSRange selRange})'
  'setMarkedText:selectedRange:replacementRange:':
    'prefix': 'setMarkedText:selectedRange:replacementRange:'
    'body': 'setMarkedText(${1:id aString}, selectedRange:${2:NSRange selectedRange}, replacementRange:${3:NSRange replacementRange})'
  'setMode:':
    'prefix': 'setMode:'
    'body': 'setMode(${1:NSColorPanelMode mode})'
  'setNumberOfValidItemsForDrop:':
    'prefix': 'setNumberOfValidItemsForDrop:'
    'body': 'setNumberOfValidItemsForDrop(${1:NSInteger numberOfValidItemsForDrop})'
  'setSelectedRanges:':
    'prefix': 'setSelectedRanges:'
    'body': 'setSelectedRanges(${1:NSArray* selectedRanges})'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:id value})'
  'sharingService:didFailToShareItems:error:':
    'prefix': 'sharingService:didFailToShareItems:error:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, didFailToShareItems:${2:NSArray* items}, error:${3:NSError* error})'
  'sharingService:didShareItems:':
    'prefix': 'sharingService:didShareItems:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, didShareItems:${2:NSArray* items})'
  'sharingService:sourceFrameOnScreenForShareItem:':
    'prefix': 'sharingService:sourceFrameOnScreenForShareItem:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, sourceFrameOnScreenForShareItem:${2:id item})'
  'sharingService:sourceWindowForShareItems:sharingContentScope:':
    'prefix': 'sharingService:sourceWindowForShareItems:sharingContentScope:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, sourceWindowForShareItems:${2:NSArray* items}, sharingContentScope:${3:NSSharingContentScope* sharingContentScope})'
  'sharingService:transitionImageForShareItem:contentRect:':
    'prefix': 'sharingService:transitionImageForShareItem:contentRect:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, transitionImageForShareItem:${2:id item}, contentRect:${3:NSRect* contentRect})'
  'sharingService:willShareItems:':
    'prefix': 'sharingService:willShareItems:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, willShareItems:${2:NSArray* items})'
  'sharingServicePicker:delegateForSharingService:':
    'prefix': 'sharingServicePicker:delegateForSharingService:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, delegateForSharingService:${2:NSSharingService* sharingService})'
  'sharingServicePicker:didChooseSharingService:':
    'prefix': 'sharingServicePicker:didChooseSharingService:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, didChooseSharingService:${2:NSSharingService* service})'
  'sharingServicePicker:sharingServicesForItems:proposedSharingServices:':
    'prefix': 'sharingServicePicker:sharingServicesForItems:proposedSharingServices:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, sharingServicesForItems:${2:NSArray* items}, proposedSharingServices:${3:NSArray* proposedServices})'
  'shouldReplaceCharactersInRanges:withStrings:':
    'prefix': 'shouldReplaceCharactersInRanges:withStrings:'
    'body': 'shouldReplaceCharactersInRanges(${1:NSArray* ranges}, withStrings:${2:NSArray* strings})'
  'showAllHelpTopicsForSearchString:':
    'prefix': 'showAllHelpTopicsForSearchString:'
    'body': 'showAllHelpTopicsForSearchString(${1:NSString* searchString})'
  'slideDraggedImageTo:':
    'prefix': 'slideDraggedImageTo:'
    'body': 'slideDraggedImageTo(${1:NSPoint screenPoint})'
  'sound:didFinishPlaying:':
    'prefix': 'sound:didFinishPlaying:'
    'body': 'sound(${1:NSSound* sound}, didFinishPlaying:${2:BOOL aBool})'
  'speechRecognizer:didRecognizeCommand:':
    'prefix': 'speechRecognizer:didRecognizeCommand:'
    'body': 'speechRecognizer(${1:NSSpeechRecognizer* sender}, didRecognizeCommand:${2:id command})'
  'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:':
    'prefix': 'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didEncounterErrorAtIndex:${2:NSUInteger characterIndex}, ofString:${3:NSString* string}, message:${4:NSString* message})'
  'speechSynthesizer:didEncounterSyncMessage:':
    'prefix': 'speechSynthesizer:didEncounterSyncMessage:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didEncounterSyncMessage:${2:NSString* message})'
  'speechSynthesizer:didFinishSpeaking:':
    'prefix': 'speechSynthesizer:didFinishSpeaking:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didFinishSpeaking:${2:BOOL finishedSpeaking})'
  'speechSynthesizer:willSpeakPhoneme:':
    'prefix': 'speechSynthesizer:willSpeakPhoneme:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, willSpeakPhoneme:${2:short phonemeOpcode})'
  'speechSynthesizer:willSpeakWord:ofString:':
    'prefix': 'speechSynthesizer:willSpeakWord:ofString:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, willSpeakWord:${2:NSRange characterRange}, ofString:${3:NSString* string})'
  'splitView:additionalEffectiveRectOfDividerAtIndex:':
    'prefix': 'splitView:additionalEffectiveRectOfDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, additionalEffectiveRectOfDividerAtIndex:${2:NSInteger dividerIndex})'
  'splitView:canCollapseSubview:':
    'prefix': 'splitView:canCollapseSubview:'
    'body': 'splitView(${1:NSSplitView* splitView}, canCollapseSubview:${2:NSView* subview})'
  'splitView:constrainMaxCoordinate:ofSubviewAt:':
    'prefix': 'splitView:constrainMaxCoordinate:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainMaxCoordinate:${2:CGFloat proposedMaximumPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:constrainMinCoordinate:ofSubviewAt:':
    'prefix': 'splitView:constrainMinCoordinate:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainMinCoordinate:${2:CGFloat proposedMinimumPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:constrainSplitPosition:ofSubviewAt:':
    'prefix': 'splitView:constrainSplitPosition:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainSplitPosition:${2:CGFloat proposedPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:':
    'prefix': 'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, effectiveRect:${2:NSRect proposedEffectiveRect}, forDrawnRect:${3:NSRect drawnRect}, ofDividerAtIndex:${4:NSInteger dividerIndex})'
  'splitView:resizeSubviewsWithOldSize:':
    'prefix': 'splitView:resizeSubviewsWithOldSize:'
    'body': 'splitView(${1:NSSplitView* splitView}, resizeSubviewsWithOldSize:${2:NSSize oldSize})'
  'splitView:shouldAdjustSizeOfSubview:':
    'prefix': 'splitView:shouldAdjustSizeOfSubview:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldAdjustSizeOfSubview:${2:NSView* view})'
  'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:':
    'prefix': 'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldCollapseSubview:${2:NSView* subview}, forDoubleClickOnDividerAtIndex:${3:NSInteger dividerIndex})'
  'splitView:shouldHideDividerAtIndex:':
    'prefix': 'splitView:shouldHideDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldHideDividerAtIndex:${2:NSInteger dividerIndex})'
  'splitViewDidResizeSubviews:':
    'prefix': 'splitViewDidResizeSubviews:'
    'body': 'splitViewDidResizeSubviews(${1:NSNotification* notification})'
  'splitViewWillResizeSubviews:':
    'prefix': 'splitViewWillResizeSubviews:'
    'body': 'splitViewWillResizeSubviews(${1:NSNotification* notification})'
  'stackView:didReattachViews:':
    'prefix': 'stackView:didReattachViews:'
    'body': 'stackView(${1:NSStackView* stackView}, didReattachViews:${2:NSArray* views})'
  'stackView:willDetachViews:':
    'prefix': 'stackView:willDetachViews:'
    'body': 'stackView(${1:NSStackView* stackView}, willDetachViews:${2:NSArray* views})'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'stringAtIndex:effectiveRange:endsWithSearchBoundary:':
    'prefix': 'stringAtIndex:effectiveRange:endsWithSearchBoundary:'
    'body': 'stringAtIndex(${1:NSUInteger characterIndex}, effectiveRange:${2:NSRangePointer outRange}, endsWithSearchBoundary:${3:BOOL* outFlag})'
  'stringLength':
    'prefix': 'stringLength'
    'body': 'stringLength()'
  'supportsMode:':
    'prefix': 'supportsMode:'
    'body': 'supportsMode(${1:NSColorPanelMode mode})'
  'tabView:didSelectTabViewItem:':
    'prefix': 'tabView:didSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, didSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabView:shouldSelectTabViewItem:':
    'prefix': 'tabView:shouldSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, shouldSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabView:willSelectTabViewItem:':
    'prefix': 'tabView:willSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, willSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabViewDidChangeNumberOfTabViewItems:':
    'prefix': 'tabViewDidChangeNumberOfTabViewItems:'
    'body': 'tabViewDidChangeNumberOfTabViewItems(${1:NSTabView* tabView})'
  'tableView:acceptDrop:row:dropOperation:':
    'prefix': 'tableView:acceptDrop:row:dropOperation:'
    'body': 'tableView(${1:NSTableView* tableView}, acceptDrop:${2:id info}, row:${3:NSInteger row}, dropOperation:${4:NSTableViewDropOperation dropOperation})'
  'tableView:dataCellForTableColumn:row:':
    'prefix': 'tableView:dataCellForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, dataCellForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:didAddRowView:forRow:':
    'prefix': 'tableView:didAddRowView:forRow:'
    'body': 'tableView(${1:NSTableView* tableView}, didAddRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'tableView:didClickTableColumn:':
    'prefix': 'tableView:didClickTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, didClickTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:didDragTableColumn:':
    'prefix': 'tableView:didDragTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, didDragTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:didRemoveRowView:forRow:':
    'prefix': 'tableView:didRemoveRowView:forRow:'
    'body': 'tableView(${1:NSTableView* tableView}, didRemoveRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'tableView:draggingSession:endedAtPoint:operation:':
    'prefix': 'tableView:draggingSession:endedAtPoint:operation:'
    'body': 'tableView(${1:NSTableView* tableView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, operation:${4:NSDragOperation operation})'
  'tableView:draggingSession:willBeginAtPoint:forRowIndexes:':
    'prefix': 'tableView:draggingSession:willBeginAtPoint:forRowIndexes:'
    'body': 'tableView(${1:NSTableView* tableView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forRowIndexes:${4:NSIndexSet* rowIndexes})'
  'tableView:heightOfRow:':
    'prefix': 'tableView:heightOfRow:'
    'body': 'tableView(${1:NSTableView* tableView}, heightOfRow:${2:NSInteger row})'
  'tableView:isGroupRow:':
    'prefix': 'tableView:isGroupRow:'
    'body': 'tableView(${1:NSTableView* tableView}, isGroupRow:${2:NSInteger row})'
  'tableView:mouseDownInHeaderOfTableColumn:':
    'prefix': 'tableView:mouseDownInHeaderOfTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, mouseDownInHeaderOfTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:':
    'prefix': 'tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'
    'body': 'tableView(${1:NSTableView* tableView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedRowsWithIndexes:${3:NSIndexSet* indexSet})'
  'tableView:nextTypeSelectMatchFromRow:toRow:forString:':
    'prefix': 'tableView:nextTypeSelectMatchFromRow:toRow:forString:'
    'body': 'tableView(${1:NSTableView* tableView}, nextTypeSelectMatchFromRow:${2:NSInteger startRow}, toRow:${3:NSInteger endRow}, forString:${4:NSString* searchString})'
  'tableView:objectValueForTableColumn:row:':
    'prefix': 'tableView:objectValueForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, objectValueForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:pasteboardWriterForRow:':
    'prefix': 'tableView:pasteboardWriterForRow:'
    'body': 'tableView(${1:NSTableView* tableView}, pasteboardWriterForRow:${2:NSInteger row})'
  'tableView:rowViewForRow:':
    'prefix': 'tableView:rowViewForRow:'
    'body': 'tableView(${1:NSTableView* tableView}, rowViewForRow:${2:NSInteger row})'
  'tableView:selectionIndexesForProposedSelection:':
    'prefix': 'tableView:selectionIndexesForProposedSelection:'
    'body': 'tableView(${1:NSTableView* tableView}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes})'
  'tableView:setObjectValue:forTableColumn:row:':
    'prefix': 'tableView:setObjectValue:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, setObjectValue:${2:id object}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableView:shouldEditTableColumn:row:':
    'prefix': 'tableView:shouldEditTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldEditTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:shouldReorderColumn:toColumn:':
    'prefix': 'tableView:shouldReorderColumn:toColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldReorderColumn:${2:NSInteger columnIndex}, toColumn:${3:NSInteger newColumnIndex})'
  'tableView:shouldSelectRow:':
    'prefix': 'tableView:shouldSelectRow:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldSelectRow:${2:NSInteger row})'
  'tableView:shouldSelectTableColumn:':
    'prefix': 'tableView:shouldSelectTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldSelectTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:shouldShowCellExpansionForTableColumn:row:':
    'prefix': 'tableView:shouldShowCellExpansionForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldShowCellExpansionForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:shouldTrackCell:forTableColumn:row:':
    'prefix': 'tableView:shouldTrackCell:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldTrackCell:${2:NSCell* cell}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableView:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'tableView:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'tableView:sizeToFitWidthOfColumn:':
    'prefix': 'tableView:sizeToFitWidthOfColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, sizeToFitWidthOfColumn:${2:NSInteger column})'
  'tableView:sortDescriptorsDidChange:':
    'prefix': 'tableView:sortDescriptorsDidChange:'
    'body': 'tableView(${1:NSTableView* tableView}, sortDescriptorsDidChange:${2:NSArray* oldDescriptors})'
  'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:':
    'prefix': 'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'
    'body': 'tableView(${1:NSTableView* tableView}, toolTipForCell:${2:NSCell* cell}, rect:${3:NSRectPointer rect}, tableColumn:${4:NSTableColumn* tableColumn}, row:${5:NSInteger row}, mouseLocation:${6:NSPoint mouseLocation})'
  'tableView:typeSelectStringForTableColumn:row:':
    'prefix': 'tableView:typeSelectStringForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, typeSelectStringForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:updateDraggingItemsForDrag:':
    'prefix': 'tableView:updateDraggingItemsForDrag:'
    'body': 'tableView(${1:NSTableView* tableView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'tableView:validateDrop:proposedRow:proposedDropOperation:':
    'prefix': 'tableView:validateDrop:proposedRow:proposedDropOperation:'
    'body': 'tableView(${1:NSTableView* tableView}, validateDrop:${2:id info}, proposedRow:${3:NSInteger row}, proposedDropOperation:${4:NSTableViewDropOperation dropOperation})'
  'tableView:viewForTableColumn:row:':
    'prefix': 'tableView:viewForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, viewForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:willDisplayCell:forTableColumn:row:':
    'prefix': 'tableView:willDisplayCell:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, willDisplayCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableView:writeRows:toPasteboard:':
    'prefix': 'tableView:writeRows:toPasteboard:'
    'body': 'tableView(${1:NSTableView* tableView}, writeRows:${2:NSArray* rows}, toPasteboard:${3:NSPasteboard* pboard})'
  'tableView:writeRowsWithIndexes:toPasteboard:':
    'prefix': 'tableView:writeRowsWithIndexes:toPasteboard:'
    'body': 'tableView(${1:NSTableView* tableView}, writeRowsWithIndexes:${2:NSIndexSet* rowIndexes}, toPasteboard:${3:NSPasteboard* pboard})'
  'tableViewColumnDidMove:':
    'prefix': 'tableViewColumnDidMove:'
    'body': 'tableViewColumnDidMove(${1:NSNotification* notification})'
  'tableViewColumnDidResize:':
    'prefix': 'tableViewColumnDidResize:'
    'body': 'tableViewColumnDidResize(${1:NSNotification* notification})'
  'tableViewSelectionDidChange:':
    'prefix': 'tableViewSelectionDidChange:'
    'body': 'tableViewSelectionDidChange(${1:NSNotification* notification})'
  'tableViewSelectionIsChanging:':
    'prefix': 'tableViewSelectionIsChanging:'
    'body': 'tableViewSelectionIsChanging(${1:NSNotification* notification})'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'terminate:':
    'prefix': 'terminate:'
    'body': 'terminate(${1:id sender})'
  'textDidBeginEditing:':
    'prefix': 'textDidBeginEditing:'
    'body': 'textDidBeginEditing(${1:NSNotification* notification})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:NSNotification* notification})'
  'textDidEndEditing:':
    'prefix': 'textDidEndEditing:'
    'body': 'textDidEndEditing(${1:NSNotification* notification})'
  'textShouldBeginEditing:':
    'prefix': 'textShouldBeginEditing:'
    'body': 'textShouldBeginEditing(${1:NSText* textObject})'
  'textShouldEndEditing:':
    'prefix': 'textShouldEndEditing:'
    'body': 'textShouldEndEditing(${1:NSText* textObject})'
  'textStorageDidProcessEditing:':
    'prefix': 'textStorageDidProcessEditing:'
    'body': 'textStorageDidProcessEditing(${1:NSNotification* notification})'
  'textStorageWillProcessEditing:':
    'prefix': 'textStorageWillProcessEditing:'
    'body': 'textStorageWillProcessEditing(${1:NSNotification* notification})'
  'textView:URLForContentsOfTextAttachment:atIndex:':
    'prefix': 'textView:URLForContentsOfTextAttachment:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, URLForContentsOfTextAttachment:${2:NSTextAttachment* textAttachment}, atIndex:${3:NSUInteger charIndex})'
  'textView:clickedOnCell:inRect:':
    'prefix': 'textView:clickedOnCell:inRect:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame})'
  'textView:clickedOnCell:inRect:atIndex:':
    'prefix': 'textView:clickedOnCell:inRect:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame}, atIndex:${4:NSUInteger charIndex})'
  'textView:clickedOnLink:':
    'prefix': 'textView:clickedOnLink:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnLink:${2:id link})'
  'textView:clickedOnLink:atIndex:':
    'prefix': 'textView:clickedOnLink:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnLink:${2:id link}, atIndex:${3:NSUInteger charIndex})'
  'textView:completions:forPartialWordRange:indexOfSelectedItem:':
    'prefix': 'textView:completions:forPartialWordRange:indexOfSelectedItem:'
    'body': 'textView(${1:NSTextView* textView}, completions:${2:NSArray* words}, forPartialWordRange:${3:NSRange charRange}, indexOfSelectedItem:${4:NSInteger* index})'
  'textView:didCheckTextInRange:types:options:results:orthography:wordCount:':
    'prefix': 'textView:didCheckTextInRange:types:options:results:orthography:wordCount:'
    'body': 'textView(${1:NSTextView* view}, didCheckTextInRange:${2:NSRange range}, types:${3:NSTextCheckingTypes checkingTypes}, options:${4:NSDictionary* options}, results:${5:NSArray* results}, orthography:${6:NSOrthography* orthography}, wordCount:${7:NSInteger wordCount})'
  'textView:doCommandBySelector:':
    'prefix': 'textView:doCommandBySelector:'
    'body': 'textView(${1:NSTextView* textView}, doCommandBySelector:${2:SEL commandSelector})'
  'textView:doubleClickedOnCell:inRect:':
    'prefix': 'textView:doubleClickedOnCell:inRect:'
    'body': 'textView(${1:NSTextView* textView}, doubleClickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame})'
  'textView:doubleClickedOnCell:inRect:atIndex:':
    'prefix': 'textView:doubleClickedOnCell:inRect:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, doubleClickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame}, atIndex:${4:NSUInteger charIndex})'
  'textView:draggedCell:inRect:event:':
    'prefix': 'textView:draggedCell:inRect:event:'
    'body': 'textView(${1:NSTextView* view}, draggedCell:${2:id cell}, inRect:${3:NSRect rect}, event:${4:NSEvent* event})'
  'textView:draggedCell:inRect:event:atIndex:':
    'prefix': 'textView:draggedCell:inRect:event:atIndex:'
    'body': 'textView(${1:NSTextView* view}, draggedCell:${2:id cell}, inRect:${3:NSRect rect}, event:${4:NSEvent* event}, atIndex:${5:NSUInteger charIndex})'
  'textView:menu:forEvent:atIndex:':
    'prefix': 'textView:menu:forEvent:atIndex:'
    'body': 'textView(${1:NSTextView* view}, menu:${2:NSMenu* menu}, forEvent:${3:NSEvent* event}, atIndex:${4:NSUInteger charIndex})'
  'textView:shouldChangeTextInRange:replacementString:':
    'prefix': 'textView:shouldChangeTextInRange:replacementString:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTextInRange:${2:NSRange affectedCharRange}, replacementString:${3:NSString* replacementString})'
  'textView:shouldChangeTextInRanges:replacementStrings:':
    'prefix': 'textView:shouldChangeTextInRanges:replacementStrings:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTextInRanges:${2:NSArray* affectedRanges}, replacementStrings:${3:NSArray* replacementStrings})'
  'textView:shouldChangeTypingAttributes:toAttributes:':
    'prefix': 'textView:shouldChangeTypingAttributes:toAttributes:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTypingAttributes:${2:NSDictionary* oldTypingAttributes}, toAttributes:${3:NSDictionary* newTypingAttributes})'
  'textView:shouldSetSpellingState:range:':
    'prefix': 'textView:shouldSetSpellingState:range:'
    'body': 'textView(${1:NSTextView* textView}, shouldSetSpellingState:${2:NSInteger value}, range:${3:NSRange affectedCharRange})'
  'textView:willChangeSelectionFromCharacterRange:toCharacterRange:':
    'prefix': 'textView:willChangeSelectionFromCharacterRange:toCharacterRange:'
    'body': 'textView(${1:NSTextView* textView}, willChangeSelectionFromCharacterRange:${2:NSRange oldSelectedCharRange}, toCharacterRange:${3:NSRange newSelectedCharRange})'
  'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:':
    'prefix': 'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'
    'body': 'textView(${1:NSTextView* textView}, willChangeSelectionFromCharacterRanges:${2:NSArray* oldSelectedCharRanges}, toCharacterRanges:${3:NSArray* newSelectedCharRanges})'
  'textView:willCheckTextInRange:options:types:':
    'prefix': 'textView:willCheckTextInRange:options:types:'
    'body': 'textView(${1:NSTextView* view}, willCheckTextInRange:${2:NSRange range}, options:${3:NSDictionary* options}, types:${4:NSTextCheckingTypes* checkingTypes})'
  'textView:willDisplayToolTip:forCharacterAtIndex:':
    'prefix': 'textView:willDisplayToolTip:forCharacterAtIndex:'
    'body': 'textView(${1:NSTextView* textView}, willDisplayToolTip:${2:NSString* tooltip}, forCharacterAtIndex:${3:NSUInteger characterIndex})'
  'textView:willShowSharingServicePicker:forItems:':
    'prefix': 'textView:willShowSharingServicePicker:forItems:'
    'body': 'textView(${1:NSTextView* textView}, willShowSharingServicePicker:${2:NSSharingServicePicker* servicePicker}, forItems:${3:NSArray* items})'
  'textView:writablePasteboardTypesForCell:atIndex:':
    'prefix': 'textView:writablePasteboardTypesForCell:atIndex:'
    'body': 'textView(${1:NSTextView* view}, writablePasteboardTypesForCell:${2:id cell}, atIndex:${3:NSUInteger charIndex})'
  'textView:writeCell:atIndex:toPasteboard:type:':
    'prefix': 'textView:writeCell:atIndex:toPasteboard:type:'
    'body': 'textView(${1:NSTextView* view}, writeCell:${2:id cell}, atIndex:${3:NSUInteger charIndex}, toPasteboard:${4:NSPasteboard* pboard}, type:${5:NSString* type})'
  'textViewDidChangeSelection:':
    'prefix': 'textViewDidChangeSelection:'
    'body': 'textViewDidChangeSelection(${1:NSNotification* notification})'
  'textViewDidChangeTypingAttributes:':
    'prefix': 'textViewDidChangeTypingAttributes:'
    'body': 'textViewDidChangeTypingAttributes(${1:NSNotification* notification})'
  'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:':
    'prefix': 'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, completionsForSubstring:${2:NSString* substring}, indexOfToken:${3:NSInteger tokenIndex}, indexOfSelectedItem:${4:NSInteger* selectedIndex})'
  'tokenField:displayStringForRepresentedObject:':
    'prefix': 'tokenField:displayStringForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, displayStringForRepresentedObject:${2:id representedObject})'
  'tokenField:editingStringForRepresentedObject:':
    'prefix': 'tokenField:editingStringForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, editingStringForRepresentedObject:${2:id representedObject})'
  'tokenField:hasMenuForRepresentedObject:':
    'prefix': 'tokenField:hasMenuForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, hasMenuForRepresentedObject:${2:id representedObject})'
  'tokenField:menuForRepresentedObject:':
    'prefix': 'tokenField:menuForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, menuForRepresentedObject:${2:id representedObject})'
  'tokenField:readFromPasteboard:':
    'prefix': 'tokenField:readFromPasteboard:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, readFromPasteboard:${2:NSPasteboard* pboard})'
  'tokenField:representedObjectForEditingString:':
    'prefix': 'tokenField:representedObjectForEditingString:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, representedObjectForEditingString:${2:NSString* editingString})'
  'tokenField:shouldAddObjects:atIndex:':
    'prefix': 'tokenField:shouldAddObjects:atIndex:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, shouldAddObjects:${2:NSArray* tokens}, atIndex:${3:NSUInteger index})'
  'tokenField:styleForRepresentedObject:':
    'prefix': 'tokenField:styleForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, styleForRepresentedObject:${2:id representedObject})'
  'tokenField:writeRepresentedObjects:toPasteboard:':
    'prefix': 'tokenField:writeRepresentedObjects:toPasteboard:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, writeRepresentedObjects:${2:NSArray* objects}, toPasteboard:${3:NSPasteboard* pboard})'
  'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:':
    'prefix': 'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, completionsForSubstring:${2:NSString* substring}, indexOfToken:${3:NSInteger tokenIndex}, indexOfSelectedItem:${4:NSInteger* selectedIndex})'
  'tokenFieldCell:displayStringForRepresentedObject:':
    'prefix': 'tokenFieldCell:displayStringForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, displayStringForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:editingStringForRepresentedObject:':
    'prefix': 'tokenFieldCell:editingStringForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, editingStringForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:hasMenuForRepresentedObject:':
    'prefix': 'tokenFieldCell:hasMenuForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, hasMenuForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:menuForRepresentedObject:':
    'prefix': 'tokenFieldCell:menuForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, menuForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:readFromPasteboard:':
    'prefix': 'tokenFieldCell:readFromPasteboard:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, readFromPasteboard:${2:NSPasteboard* pboard})'
  'tokenFieldCell:representedObjectForEditingString:':
    'prefix': 'tokenFieldCell:representedObjectForEditingString:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, representedObjectForEditingString:${2:NSString* editingString})'
  'tokenFieldCell:shouldAddObjects:atIndex:':
    'prefix': 'tokenFieldCell:shouldAddObjects:atIndex:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, shouldAddObjects:${2:NSArray* tokens}, atIndex:${3:NSUInteger index})'
  'tokenFieldCell:styleForRepresentedObject:':
    'prefix': 'tokenFieldCell:styleForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, styleForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:writeRepresentedObjects:toPasteboard:':
    'prefix': 'tokenFieldCell:writeRepresentedObjects:toPasteboard:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, writeRepresentedObjects:${2:NSArray* objects}, toPasteboard:${3:NSPasteboard* pboard})'
  'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:':
    'prefix': 'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'
    'body': 'toolbar(${1:NSToolbar* toolbar}, itemForItemIdentifier:${2:NSString* itemIdentifier}, willBeInsertedIntoToolbar:${3:BOOL flag})'
  'toolbarAllowedItemIdentifiers:':
    'prefix': 'toolbarAllowedItemIdentifiers:'
    'body': 'toolbarAllowedItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarDefaultItemIdentifiers:':
    'prefix': 'toolbarDefaultItemIdentifiers:'
    'body': 'toolbarDefaultItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarDidRemoveItem:':
    'prefix': 'toolbarDidRemoveItem:'
    'body': 'toolbarDidRemoveItem(${1:NSNotification* notification})'
  'toolbarSelectableItemIdentifiers:':
    'prefix': 'toolbarSelectableItemIdentifiers:'
    'body': 'toolbarSelectableItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarWillAddItem:':
    'prefix': 'toolbarWillAddItem:'
    'body': 'toolbarWillAddItem(${1:NSNotification* notification})'
  'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:':
    'prefix': 'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'
    'body': 'trackMouse(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, atCharacterIndex:${4:NSUInteger charIndex}, untilMouseUp:${5:BOOL flag})'
  'trackMouse:inRect:ofView:untilMouseUp:':
    'prefix': 'trackMouse:inRect:ofView:untilMouseUp:'
    'body': 'trackMouse(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, untilMouseUp:${4:BOOL flag})'
  'unbind:':
    'prefix': 'unbind:'
    'body': 'unbind(${1:NSString* binding})'
  'undoManagerForTextView:':
    'prefix': 'undoManagerForTextView:'
    'body': 'undoManagerForTextView(${1:NSTextView* view})'
  'unmarkText':
    'prefix': 'unmarkText'
    'body': 'unmarkText()'
  'updateDraggingItemsForDrag:':
    'prefix': 'updateDraggingItemsForDrag:'
    'body': 'updateDraggingItemsForDrag(${1:id sender})'
  'validAttributesForMarkedText':
    'prefix': 'validAttributesForMarkedText'
    'body': 'validAttributesForMarkedText()'
  'validModesForFontPanel:':
    'prefix': 'validModesForFontPanel:'
    'body': 'validModesForFontPanel(${1:NSFontPanel* fontPanel})'
  'validateMenuItem:':
    'prefix': 'validateMenuItem:'
    'body': 'validateMenuItem(${1:NSMenuItem* menuItem})'
  'validateToolbarItem:':
    'prefix': 'validateToolbarItem:'
    'body': 'validateToolbarItem(${1:NSToolbarItem* theItem})'
  'validateUserInterfaceItem:':
    'prefix': 'validateUserInterfaceItem:'
    'body': 'validateUserInterfaceItem(${1:id anItem})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'valueClassForBinding:':
    'prefix': 'valueClassForBinding:'
    'body': 'valueClassForBinding(${1:NSString* binding})'
  'view:stringForToolTip:point:userData:':
    'prefix': 'view:stringForToolTip:point:userData:'
    'body': 'view(${1:NSView* view}, stringForToolTip:${2:NSToolTipTag tag}, point:${3:NSPoint point}, userData:${4:void* data})'
  'viewSizeChanged:':
    'prefix': 'viewSizeChanged:'
    'body': 'viewSizeChanged(${1:id sender})'
  'visibleCharacterRanges':
    'prefix': 'visibleCharacterRanges'
    'body': 'visibleCharacterRanges()'
  'wantsPeriodicDraggingUpdates':
    'prefix': 'wantsPeriodicDraggingUpdates'
    'body': 'wantsPeriodicDraggingUpdates()'
  'wantsToDelayTextChangeNotifications':
    'prefix': 'wantsToDelayTextChangeNotifications'
    'body': 'wantsToDelayTextChangeNotifications()'
  'wantsToHandleMouseEvents':
    'prefix': 'wantsToHandleMouseEvents'
    'body': 'wantsToHandleMouseEvents()'
  'wantsToInterpretAllKeystrokes':
    'prefix': 'wantsToInterpretAllKeystrokes'
    'body': 'wantsToInterpretAllKeystrokes()'
  'wantsToTrackMouse':
    'prefix': 'wantsToTrackMouse'
    'body': 'wantsToTrackMouse()'
  'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:':
    'prefix': 'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'
    'body': 'wantsToTrackMouseForEvent(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, atCharacterIndex:${4:NSUInteger charIndex})'
  'window:didDecodeRestorableState:':
    'prefix': 'window:didDecodeRestorableState:'
    'body': 'window(${1:NSWindow* window}, didDecodeRestorableState:${2:NSCoder* state})'
  'window:shouldDragDocumentWithEvent:from:withPasteboard:':
    'prefix': 'window:shouldDragDocumentWithEvent:from:withPasteboard:'
    'body': 'window(${1:NSWindow* window}, shouldDragDocumentWithEvent:${2:NSEvent* event}, from:${3:NSPoint dragImageLocation}, withPasteboard:${4:NSPasteboard* pasteboard})'
  'window:shouldPopUpDocumentPathMenu:':
    'prefix': 'window:shouldPopUpDocumentPathMenu:'
    'body': 'window(${1:NSWindow* window}, shouldPopUpDocumentPathMenu:${2:NSMenu* menu})'
  'window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:':
    'prefix': 'window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToEnterFullScreenOnScreen:${2:NSScreen* screen}, withDuration:${3:NSTimeInterval duration})'
  'window:startCustomAnimationToEnterFullScreenWithDuration:':
    'prefix': 'window:startCustomAnimationToEnterFullScreenWithDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToEnterFullScreenWithDuration:${2:NSTimeInterval duration})'
  'window:startCustomAnimationToExitFullScreenWithDuration:':
    'prefix': 'window:startCustomAnimationToExitFullScreenWithDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToExitFullScreenWithDuration:${2:NSTimeInterval duration})'
  'window:willEncodeRestorableState:':
    'prefix': 'window:willEncodeRestorableState:'
    'body': 'window(${1:NSWindow* window}, willEncodeRestorableState:${2:NSCoder* state})'
  'window:willPositionSheet:usingRect:':
    'prefix': 'window:willPositionSheet:usingRect:'
    'body': 'window(${1:NSWindow* window}, willPositionSheet:${2:NSWindow* sheet}, usingRect:${3:NSRect rect})'
  'window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:':
    'prefix': 'window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'
    'body': 'window(${1:NSWindow* window}, willResizeForVersionBrowserWithMaxPreferredSize:${2:NSSize maxPreferredFrameSize}, maxAllowedSize:${3:NSSize maxAllowedFrameSize})'
  'window:willUseFullScreenContentSize:':
    'prefix': 'window:willUseFullScreenContentSize:'
    'body': 'window(${1:NSWindow* window}, willUseFullScreenContentSize:${2:NSSize proposedSize})'
  'window:willUseFullScreenPresentationOptions:':
    'prefix': 'window:willUseFullScreenPresentationOptions:'
    'body': 'window(${1:NSWindow* window}, willUseFullScreenPresentationOptions:${2:NSApplicationPresentationOptions proposedOptions})'
  'windowDidBecomeKey:':
    'prefix': 'windowDidBecomeKey:'
    'body': 'windowDidBecomeKey(${1:NSNotification* notification})'
  'windowDidBecomeMain:':
    'prefix': 'windowDidBecomeMain:'
    'body': 'windowDidBecomeMain(${1:NSNotification* notification})'
  'windowDidChangeBackingProperties:':
    'prefix': 'windowDidChangeBackingProperties:'
    'body': 'windowDidChangeBackingProperties(${1:NSNotification* notification})'
  'windowDidChangeOcclusionState:':
    'prefix': 'windowDidChangeOcclusionState:'
    'body': 'windowDidChangeOcclusionState(${1:NSNotification* notification})'
  'windowDidChangeScreen:':
    'prefix': 'windowDidChangeScreen:'
    'body': 'windowDidChangeScreen(${1:NSNotification* notification})'
  'windowDidChangeScreenProfile:':
    'prefix': 'windowDidChangeScreenProfile:'
    'body': 'windowDidChangeScreenProfile(${1:NSNotification* notification})'
  'windowDidDeminiaturize:':
    'prefix': 'windowDidDeminiaturize:'
    'body': 'windowDidDeminiaturize(${1:NSNotification* notification})'
  'windowDidEndLiveResize:':
    'prefix': 'windowDidEndLiveResize:'
    'body': 'windowDidEndLiveResize(${1:NSNotification* notification})'
  'windowDidEndSheet:':
    'prefix': 'windowDidEndSheet:'
    'body': 'windowDidEndSheet(${1:NSNotification* notification})'
  'windowDidEnterFullScreen:':
    'prefix': 'windowDidEnterFullScreen:'
    'body': 'windowDidEnterFullScreen(${1:NSNotification* notification})'
  'windowDidEnterVersionBrowser:':
    'prefix': 'windowDidEnterVersionBrowser:'
    'body': 'windowDidEnterVersionBrowser(${1:NSNotification* notification})'
  'windowDidExitFullScreen:':
    'prefix': 'windowDidExitFullScreen:'
    'body': 'windowDidExitFullScreen(${1:NSNotification* notification})'
  'windowDidExitVersionBrowser:':
    'prefix': 'windowDidExitVersionBrowser:'
    'body': 'windowDidExitVersionBrowser(${1:NSNotification* notification})'
  'windowDidExpose:':
    'prefix': 'windowDidExpose:'
    'body': 'windowDidExpose(${1:NSNotification* notification})'
  'windowDidFailToEnterFullScreen:':
    'prefix': 'windowDidFailToEnterFullScreen:'
    'body': 'windowDidFailToEnterFullScreen(${1:NSWindow* window})'
  'windowDidFailToExitFullScreen:':
    'prefix': 'windowDidFailToExitFullScreen:'
    'body': 'windowDidFailToExitFullScreen(${1:NSWindow* window})'
  'windowDidMiniaturize:':
    'prefix': 'windowDidMiniaturize:'
    'body': 'windowDidMiniaturize(${1:NSNotification* notification})'
  'windowDidMove:':
    'prefix': 'windowDidMove:'
    'body': 'windowDidMove(${1:NSNotification* notification})'
  'windowDidResignKey:':
    'prefix': 'windowDidResignKey:'
    'body': 'windowDidResignKey(${1:NSNotification* notification})'
  'windowDidResignMain:':
    'prefix': 'windowDidResignMain:'
    'body': 'windowDidResignMain(${1:NSNotification* notification})'
  'windowDidResize:':
    'prefix': 'windowDidResize:'
    'body': 'windowDidResize(${1:NSNotification* notification})'
  'windowDidUpdate:':
    'prefix': 'windowDidUpdate:'
    'body': 'windowDidUpdate(${1:NSNotification* notification})'
  'windowLevel':
    'prefix': 'windowLevel'
    'body': 'windowLevel()'
  'windowShouldClose:':
    'prefix': 'windowShouldClose:'
    'body': 'windowShouldClose(${1:id sender})'
  'windowShouldZoom:toFrame:':
    'prefix': 'windowShouldZoom:toFrame:'
    'body': 'windowShouldZoom(${1:NSWindow* window}, toFrame:${2:NSRect newFrame})'
  'windowWillBeginSheet:':
    'prefix': 'windowWillBeginSheet:'
    'body': 'windowWillBeginSheet(${1:NSNotification* notification})'
  'windowWillClose:':
    'prefix': 'windowWillClose:'
    'body': 'windowWillClose(${1:NSNotification* notification})'
  'windowWillEnterFullScreen:':
    'prefix': 'windowWillEnterFullScreen:'
    'body': 'windowWillEnterFullScreen(${1:NSNotification* notification})'
  'windowWillEnterVersionBrowser:':
    'prefix': 'windowWillEnterVersionBrowser:'
    'body': 'windowWillEnterVersionBrowser(${1:NSNotification* notification})'
  'windowWillExitFullScreen:':
    'prefix': 'windowWillExitFullScreen:'
    'body': 'windowWillExitFullScreen(${1:NSNotification* notification})'
  'windowWillExitVersionBrowser:':
    'prefix': 'windowWillExitVersionBrowser:'
    'body': 'windowWillExitVersionBrowser(${1:NSNotification* notification})'
  'windowWillMiniaturize:':
    'prefix': 'windowWillMiniaturize:'
    'body': 'windowWillMiniaturize(${1:NSNotification* notification})'
  'windowWillMove:':
    'prefix': 'windowWillMove:'
    'body': 'windowWillMove(${1:NSNotification* notification})'
  'windowWillResize:toSize:':
    'prefix': 'windowWillResize:toSize:'
    'body': 'windowWillResize(${1:NSWindow* sender}, toSize:${2:NSSize frameSize})'
  'windowWillReturnFieldEditor:toObject:':
    'prefix': 'windowWillReturnFieldEditor:toObject:'
    'body': 'windowWillReturnFieldEditor(${1:NSWindow* sender}, toObject:${2:id client})'
  'windowWillReturnUndoManager:':
    'prefix': 'windowWillReturnUndoManager:'
    'body': 'windowWillReturnUndoManager(${1:NSWindow* window})'
  'windowWillStartLiveResize:':
    'prefix': 'windowWillStartLiveResize:'
    'body': 'windowWillStartLiveResize(${1:NSNotification* notification})'
  'windowWillUseStandardFrame:defaultFrame:':
    'prefix': 'windowWillUseStandardFrame:defaultFrame:'
    'body': 'windowWillUseStandardFrame(${1:NSWindow* window}, defaultFrame:${2:NSRect newFrame})'
  'writableTypesForPasteboard:':
    'prefix': 'writableTypesForPasteboard:'
    'body': 'writableTypesForPasteboard(${1:NSPasteboard* pasteboard})'
  'writeSelectionToPasteboard:types:':
    'prefix': 'writeSelectionToPasteboard:types:'
    'body': 'writeSelectionToPasteboard(${1:NSPasteboard* pboard}, types:${2:NSArray* types})'
  'writingOptionsForType:pasteboard:':
    'prefix': 'writingOptionsForType:pasteboard:'
    'body': 'writingOptionsForType(${1:NSString* type}, pasteboard:${2:NSPasteboard* pasteboard})'
  'add:':
    'prefix': 'add:'
    'body': 'add(${1:id sender})'
  'addObject:':
    'prefix': 'addObject:'
    'body': 'addObject(${1:id object})'
  'automaticallyPreparesContent':
    'prefix': 'automaticallyPreparesContent'
    'body': 'automaticallyPreparesContent()'
  'canAdd':
    'prefix': 'canAdd'
    'body': 'canAdd()'
  'canRemove':
    'prefix': 'canRemove'
    'body': 'canRemove()'
  'content':
    'prefix': 'content'
    'body': 'content()'
  'defaultFetchRequest':
    'prefix': 'defaultFetchRequest'
    'body': 'defaultFetchRequest()'
  'entityName':
    'prefix': 'entityName'
    'body': 'entityName()'
  'fetch:':
    'prefix': 'fetch:'
    'body': 'fetch(${1:id sender})'
  'fetchPredicate':
    'prefix': 'fetchPredicate'
    'body': 'fetchPredicate()'
  'fetchWithRequest:merge:error:':
    'prefix': 'fetchWithRequest:merge:error:'
    'body': 'fetchWithRequest(${1:NSFetchRequest* fetchRequest}, merge:${2:BOOL merge}, error:${3:NSError** error})'
  'initWithContent:':
    'prefix': 'initWithContent:'
    'body': 'initWithContent(${1:id content})'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'managedObjectContext':
    'prefix': 'managedObjectContext'
    'body': 'managedObjectContext()'
  'newObject':
    'prefix': 'newObject'
    'body': 'newObject()'
  'objectClass':
    'prefix': 'objectClass'
    'body': 'objectClass()'
  'prepareContent':
    'prefix': 'prepareContent'
    'body': 'prepareContent()'
  'remove:':
    'prefix': 'remove:'
    'body': 'remove(${1:id sender})'
  'removeObject:':
    'prefix': 'removeObject:'
    'body': 'removeObject(${1:id object})'
  'selectedObjects':
    'prefix': 'selectedObjects'
    'body': 'selectedObjects()'
  'selection':
    'prefix': 'selection'
    'body': 'selection()'
  'setAutomaticallyPreparesContent:':
    'prefix': 'setAutomaticallyPreparesContent:'
    'body': 'setAutomaticallyPreparesContent(${1:BOOL flag})'
  'setContent:':
    'prefix': 'setContent:'
    'body': 'setContent(${1:id content})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setEntityName:':
    'prefix': 'setEntityName:'
    'body': 'setEntityName(${1:NSString* entityName})'
  'setFetchPredicate:':
    'prefix': 'setFetchPredicate:'
    'body': 'setFetchPredicate(${1:NSPredicate* predicate})'
  'setManagedObjectContext:':
    'prefix': 'setManagedObjectContext:'
    'body': 'setManagedObjectContext(${1:NSManagedObjectContext* managedObjectContext})'
  'setObjectClass:':
    'prefix': 'setObjectClass:'
    'body': 'setObjectClass(${1:Class objectClass})'
  'setUsesLazyFetching:':
    'prefix': 'setUsesLazyFetching:'
    'body': 'setUsesLazyFetching(${1:BOOL enabled})'
  'usesLazyFetching':
    'prefix': 'usesLazyFetching'
    'body': 'usesLazyFetching()'
  'validateUserInterfaceItem:':
    'prefix': 'validateUserInterfaceItem:'
    'body': 'validateUserInterfaceItem(${1:id item})'
  'CGLContextObj':
    'prefix': 'CGLContextObj'
    'body': 'CGLContextObj()'
  'NSOpenGLContext.clearCurrentContext':
    'prefix': 'clearCurrentContext'
    'body': 'clearCurrentContext()'
  'clearDrawable':
    'prefix': 'clearDrawable'
    'body': 'clearDrawable()'
  'copyAttributesFromContext:withMask:':
    'prefix': 'copyAttributesFromContext:withMask:'
    'body': 'copyAttributesFromContext(${1:NSOpenGLContext* context}, withMask:${2:GLbitfield mask})'
  'createTexture:fromView:internalFormat:':
    'prefix': 'createTexture:fromView:internalFormat:'
    'body': 'createTexture(${1:GLenum target}, fromView:${2:NSView* view}, internalFormat:${3:GLenum format})'
  'NSOpenGLContext.currentContext':
    'prefix': 'currentContext'
    'body': 'currentContext()'
  'currentVirtualScreen':
    'prefix': 'currentVirtualScreen'
    'body': 'currentVirtualScreen()'
  'flushBuffer':
    'prefix': 'flushBuffer'
    'body': 'flushBuffer()'
  'getValues:forParameter:':
    'prefix': 'getValues:forParameter:'
    'body': 'getValues(${1:GLint* vals}, forParameter:${2:NSOpenGLContextParameter param})'
  'initWithCGLContextObj:':
    'prefix': 'initWithCGLContextObj:'
    'body': 'initWithCGLContextObj(${1:void* context})'
  'initWithFormat:shareContext:':
    'prefix': 'initWithFormat:shareContext:'
    'body': 'initWithFormat(${1:NSOpenGLPixelFormat* format}, shareContext:${2:NSOpenGLContext* share})'
  'makeCurrentContext':
    'prefix': 'makeCurrentContext'
    'body': 'makeCurrentContext()'
  'pixelBuffer':
    'prefix': 'pixelBuffer'
    'body': 'pixelBuffer()'
  'pixelBufferCubeMapFace':
    'prefix': 'pixelBufferCubeMapFace'
    'body': 'pixelBufferCubeMapFace()'
  'pixelBufferMipMapLevel':
    'prefix': 'pixelBufferMipMapLevel'
    'body': 'pixelBufferMipMapLevel()'
  'setCurrentVirtualScreen:':
    'prefix': 'setCurrentVirtualScreen:'
    'body': 'setCurrentVirtualScreen(${1:GLint screen})'
  'setFullScreen':
    'prefix': 'setFullScreen'
    'body': 'setFullScreen()'
  'setOffScreen:width:height:rowbytes:':
    'prefix': 'setOffScreen:width:height:rowbytes:'
    'body': 'setOffScreen(${1:void* baseaddr}, width:${2:GLsizei width}, height:${3:GLsizei height}, rowbytes:${4:GLint rowbytes})'
  'setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:':
    'prefix': 'setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'
    'body': 'setPixelBuffer(${1:NSOpenGLPixelBuffer* pixelBuffer}, cubeMapFace:${2:GLenum face}, mipMapLevel:${3:GLint level}, currentVirtualScreen:${4:GLint screen})'
  'setTextureImageToPixelBuffer:colorBuffer:':
    'prefix': 'setTextureImageToPixelBuffer:colorBuffer:'
    'body': 'setTextureImageToPixelBuffer(${1:NSOpenGLPixelBuffer* pixelBuffer}, colorBuffer:${2:GLenum source})'
  'setValues:forParameter:':
    'prefix': 'setValues:forParameter:'
    'body': 'setValues(${1:GLint* vals}, forParameter:${2:NSOpenGLContextParameter param})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'update':
    'prefix': 'update'
    'body': 'update()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:':
    'prefix': 'canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'
    'body': 'canDrawInOpenGLContext(${1:NSOpenGLContext* context}, pixelFormat:${2:NSOpenGLPixelFormat* pixelFormat}, forLayerTime:${3:CFTimeInterval t}, displayTime:${4:CVTimeStamp* ts})'
  'drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:':
    'prefix': 'drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'
    'body': 'drawInOpenGLContext(${1:NSOpenGLContext* context}, pixelFormat:${2:NSOpenGLPixelFormat* pixelFormat}, forLayerTime:${3:CFTimeInterval t}, displayTime:${4:CVTimeStamp* ts})'
  'openGLContext':
    'prefix': 'openGLContext'
    'body': 'openGLContext()'
  'openGLContextForPixelFormat:':
    'prefix': 'openGLContextForPixelFormat:'
    'body': 'openGLContextForPixelFormat(${1:NSOpenGLPixelFormat* pixelFormat})'
  'openGLPixelFormat':
    'prefix': 'openGLPixelFormat'
    'body': 'openGLPixelFormat()'
  'openGLPixelFormatForDisplayMask:':
    'prefix': 'openGLPixelFormatForDisplayMask:'
    'body': 'openGLPixelFormatForDisplayMask(${1:uint32_t mask})'
  'setOpenGLContext:':
    'prefix': 'setOpenGLContext:'
    'body': 'setOpenGLContext(${1:NSOpenGLContext* openGLContext})'
  'setOpenGLPixelFormat:':
    'prefix': 'setOpenGLPixelFormat:'
    'body': 'setOpenGLPixelFormat(${1:NSOpenGLPixelFormat* openGLPixelFormat})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'CGLPBufferObj':
    'prefix': 'CGLPBufferObj'
    'body': 'CGLPBufferObj()'
  'initWithCGLPBufferObj:':
    'prefix': 'initWithCGLPBufferObj:'
    'body': 'initWithCGLPBufferObj(${1:void* pbuffer})'
  'initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:':
    'prefix': 'initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'
    'body': 'initWithTextureTarget(${1:GLenum target}, textureInternalFormat:${2:GLenum format}, textureMaxMipMapLevel:${3:GLint maxLevel}, pixelsWide:${4:GLsizei pixelsWide}, pixelsHigh:${5:GLsizei pixelsHigh})'
  'pixelsHigh':
    'prefix': 'pixelsHigh'
    'body': 'pixelsHigh()'
  'pixelsWide':
    'prefix': 'pixelsWide'
    'body': 'pixelsWide()'
  'textureInternalFormat':
    'prefix': 'textureInternalFormat'
    'body': 'textureInternalFormat()'
  'textureMaxMipMapLevel':
    'prefix': 'textureMaxMipMapLevel'
    'body': 'textureMaxMipMapLevel()'
  'textureTarget':
    'prefix': 'textureTarget'
    'body': 'textureTarget()'
  'CGLPixelFormatObj':
    'prefix': 'CGLPixelFormatObj'
    'body': 'CGLPixelFormatObj()'
  'attributes':
    'prefix': 'attributes'
    'body': 'attributes()'
  'getValues:forAttribute:forVirtualScreen:':
    'prefix': 'getValues:forAttribute:forVirtualScreen:'
    'body': 'getValues(${1:GLint* vals}, forAttribute:${2:NSOpenGLPixelFormatAttribute attrib}, forVirtualScreen:${3:GLint screen})'
  'initWithAttributes:':
    'prefix': 'initWithAttributes:'
    'body': 'initWithAttributes(${1:NSOpenGLPixelFormatAttribute* attribs})'
  'initWithCGLPixelFormatObj:':
    'prefix': 'initWithCGLPixelFormatObj:'
    'body': 'initWithCGLPixelFormatObj(${1:void* format})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* attribs})'
  'numberOfVirtualScreens':
    'prefix': 'numberOfVirtualScreens'
    'body': 'numberOfVirtualScreens()'
  'setAttributes:':
    'prefix': 'setAttributes:'
    'body': 'setAttributes(${1:NSData* attribs})'
  'clearGLContext':
    'prefix': 'clearGLContext'
    'body': 'clearGLContext()'
  'NSOpenGLView.defaultPixelFormat':
    'prefix': 'defaultPixelFormat'
    'body': 'defaultPixelFormat()'
  'initWithFrame:pixelFormat:':
    'prefix': 'initWithFrame:pixelFormat:'
    'body': 'initWithFrame(${1:NSRect frameRect}, pixelFormat:${2:NSOpenGLPixelFormat* format})'
  'openGLContext':
    'prefix': 'openGLContext'
    'body': 'openGLContext()'
  'pixelFormat':
    'prefix': 'pixelFormat'
    'body': 'pixelFormat()'
  'prepareOpenGL':
    'prefix': 'prepareOpenGL'
    'body': 'prepareOpenGL()'
  'reshape':
    'prefix': 'reshape'
    'body': 'reshape()'
  'setOpenGLContext:':
    'prefix': 'setOpenGLContext:'
    'body': 'setOpenGLContext(${1:NSOpenGLContext* context})'
  'setPixelFormat:':
    'prefix': 'setPixelFormat:'
    'body': 'setPixelFormat(${1:NSOpenGLPixelFormat* pixelFormat})'
  'update':
    'prefix': 'update'
    'body': 'update()'
  'URLs':
    'prefix': 'URLs'
    'body': 'URLs()'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:':
    'prefix': 'beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'
    'body': 'beginForDirectory(${1:NSString* path}, file:${2:NSString* name}, types:${3:NSArray* fileTypes}, modelessDelegate:${4:id delegate}, didEndSelector:${5:SEL didEndSelector}, contextInfo:${6:void* contextInfo})'
  'beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'
    'body': 'beginSheetForDirectory(${1:NSString* path}, file:${2:NSString* name}, types:${3:NSArray* fileTypes}, modalForWindow:${4:NSWindow* docWindow}, modalDelegate:${5:id delegate}, didEndSelector:${6:SEL didEndSelector}, contextInfo:${7:void* contextInfo})'
  'canChooseDirectories':
    'prefix': 'canChooseDirectories'
    'body': 'canChooseDirectories()'
  'canChooseFiles':
    'prefix': 'canChooseFiles'
    'body': 'canChooseFiles()'
  'filenames':
    'prefix': 'filenames'
    'body': 'filenames()'
  'NSOpenPanel.openPanel':
    'prefix': 'openPanel'
    'body': 'openPanel()'
  'resolvesAliases':
    'prefix': 'resolvesAliases'
    'body': 'resolvesAliases()'
  'runModalForDirectory:file:types:':
    'prefix': 'runModalForDirectory:file:types:'
    'body': 'runModalForDirectory(${1:NSString* path}, file:${2:NSString* name}, types:${3:NSArray* fileTypes})'
  'runModalForTypes:':
    'prefix': 'runModalForTypes:'
    'body': 'runModalForTypes(${1:NSArray* fileTypes})'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL flag})'
  'setCanChooseDirectories:':
    'prefix': 'setCanChooseDirectories:'
    'body': 'setCanChooseDirectories(${1:BOOL flag})'
  'setCanChooseFiles:':
    'prefix': 'setCanChooseFiles:'
    'body': 'setCanChooseFiles(${1:BOOL flag})'
  'setResolvesAliases:':
    'prefix': 'setResolvesAliases:'
    'body': 'setResolvesAliases(${1:BOOL flag})'
  'autoresizesOutlineColumn':
    'prefix': 'autoresizesOutlineColumn'
    'body': 'autoresizesOutlineColumn()'
  'autosaveExpandedItems':
    'prefix': 'autosaveExpandedItems'
    'body': 'autosaveExpandedItems()'
  'collapseItem:':
    'prefix': 'collapseItem:'
    'body': 'collapseItem(${1:id item})'
  'collapseItem:collapseChildren:':
    'prefix': 'collapseItem:collapseChildren:'
    'body': 'collapseItem(${1:id item}, collapseChildren:${2:BOOL collapseChildren})'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'expandItem:':
    'prefix': 'expandItem:'
    'body': 'expandItem(${1:id item})'
  'expandItem:expandChildren:':
    'prefix': 'expandItem:expandChildren:'
    'body': 'expandItem(${1:id item}, expandChildren:${2:BOOL expandChildren})'
  'frameOfOutlineCellAtRow:':
    'prefix': 'frameOfOutlineCellAtRow:'
    'body': 'frameOfOutlineCellAtRow(${1:NSInteger row})'
  'indentationMarkerFollowsCell':
    'prefix': 'indentationMarkerFollowsCell'
    'body': 'indentationMarkerFollowsCell()'
  'indentationPerLevel':
    'prefix': 'indentationPerLevel'
    'body': 'indentationPerLevel()'
  'insertItemsAtIndexes:inParent:withAnimation:':
    'prefix': 'insertItemsAtIndexes:inParent:withAnimation:'
    'body': 'insertItemsAtIndexes(${1:NSIndexSet* indexes}, inParent:${2:id parent}, withAnimation:${3:NSTableViewAnimationOptions animationOptions})'
  'isExpandable:':
    'prefix': 'isExpandable:'
    'body': 'isExpandable(${1:id item})'
  'isItemExpanded:':
    'prefix': 'isItemExpanded:'
    'body': 'isItemExpanded(${1:id item})'
  'itemAtRow:':
    'prefix': 'itemAtRow:'
    'body': 'itemAtRow(${1:NSInteger row})'
  'levelForItem:':
    'prefix': 'levelForItem:'
    'body': 'levelForItem(${1:id item})'
  'levelForRow:':
    'prefix': 'levelForRow:'
    'body': 'levelForRow(${1:NSInteger row})'
  'moveItemAtIndex:inParent:toIndex:inParent:':
    'prefix': 'moveItemAtIndex:inParent:toIndex:inParent:'
    'body': 'moveItemAtIndex(${1:NSInteger fromIndex}, inParent:${2:id oldParent}, toIndex:${3:NSInteger toIndex}, inParent:${4:id newParent})'
  'outlineTableColumn':
    'prefix': 'outlineTableColumn'
    'body': 'outlineTableColumn()'
  'parentForItem:':
    'prefix': 'parentForItem:'
    'body': 'parentForItem(${1:id item})'
  'reloadItem:':
    'prefix': 'reloadItem:'
    'body': 'reloadItem(${1:id item})'
  'reloadItem:reloadChildren:':
    'prefix': 'reloadItem:reloadChildren:'
    'body': 'reloadItem(${1:id item}, reloadChildren:${2:BOOL reloadChildren})'
  'removeItemsAtIndexes:inParent:withAnimation:':
    'prefix': 'removeItemsAtIndexes:inParent:withAnimation:'
    'body': 'removeItemsAtIndexes(${1:NSIndexSet* indexes}, inParent:${2:id parent}, withAnimation:${3:NSTableViewAnimationOptions animationOptions})'
  'rowForItem:':
    'prefix': 'rowForItem:'
    'body': 'rowForItem(${1:id item})'
  'setAutoresizesOutlineColumn:':
    'prefix': 'setAutoresizesOutlineColumn:'
    'body': 'setAutoresizesOutlineColumn(${1:BOOL resize})'
  'setAutosaveExpandedItems:':
    'prefix': 'setAutosaveExpandedItems:'
    'body': 'setAutosaveExpandedItems(${1:BOOL save})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id aSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDropItem:dropChildIndex:':
    'prefix': 'setDropItem:dropChildIndex:'
    'body': 'setDropItem(${1:id item}, dropChildIndex:${2:NSInteger index})'
  'setIndentationMarkerFollowsCell:':
    'prefix': 'setIndentationMarkerFollowsCell:'
    'body': 'setIndentationMarkerFollowsCell(${1:BOOL drawInCell})'
  'setIndentationPerLevel:':
    'prefix': 'setIndentationPerLevel:'
    'body': 'setIndentationPerLevel(${1:CGFloat indentationPerLevel})'
  'setOutlineTableColumn:':
    'prefix': 'setOutlineTableColumn:'
    'body': 'setOutlineTableColumn(${1:NSTableColumn* outlineTableColumn})'
  'setUserInterfaceLayoutDirection:':
    'prefix': 'setUserInterfaceLayoutDirection:'
    'body': 'setUserInterfaceLayoutDirection(${1:NSUserInterfaceLayoutDirection value})'
  'shouldCollapseAutoExpandedItemsForDeposited:':
    'prefix': 'shouldCollapseAutoExpandedItemsForDeposited:'
    'body': 'shouldCollapseAutoExpandedItemsForDeposited(${1:BOOL deposited})'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'PDFRepresentation':
    'prefix': 'PDFRepresentation'
    'body': 'PDFRepresentation()'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'currentPage':
    'prefix': 'currentPage'
    'body': 'currentPage()'
  'NSPDFImageRep.imageRepWithData:':
    'prefix': 'imageRepWithData:'
    'body': 'imageRepWithData(${1:NSData* pdfData})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* pdfData})'
  'pageCount':
    'prefix': 'pageCount'
    'body': 'pageCount()'
  'setCurrentPage:':
    'prefix': 'setCurrentPage:'
    'body': 'setCurrentPage(${1:NSInteger page})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'attributes':
    'prefix': 'attributes'
    'body': 'attributes()'
  'isFileExtensionHidden':
    'prefix': 'isFileExtensionHidden'
    'body': 'isFileExtensionHidden()'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'paperSize':
    'prefix': 'paperSize'
    'body': 'paperSize()'
  'setFileExtensionHidden:':
    'prefix': 'setFileExtensionHidden:'
    'body': 'setFileExtensionHidden(${1:BOOL fileExtensionHidden})'
  'setOrientation:':
    'prefix': 'setOrientation:'
    'body': 'setOrientation(${1:NSPaperOrientation orientation})'
  'setPaperSize:':
    'prefix': 'setPaperSize:'
    'body': 'setPaperSize(${1:NSSize paperSize})'
  'setTagNames:':
    'prefix': 'setTagNames:'
    'body': 'setTagNames(${1:NSArray* tagNames})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* URL})'
  'tagNames':
    'prefix': 'tagNames'
    'body': 'tagNames()'
  'accessoryController':
    'prefix': 'accessoryController'
    'body': 'accessoryController()'
  'beginSheetWithPDFInfo:modalForWindow:completionHandler:':
    'prefix': 'beginSheetWithPDFInfo:modalForWindow:completionHandler:'
    'body': 'beginSheetWithPDFInfo(${1:NSPDFInfo* pdfInfo}, modalForWindow:${2:NSWindow* docWindow}, completionHandler:${3:void (^)(NSInteger) completionHandler})'
  'defaultFileName':
    'prefix': 'defaultFileName'
    'body': 'defaultFileName()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'NSPDFPanel.panel':
    'prefix': 'panel'
    'body': 'panel()'
  'setAccessoryController:':
    'prefix': 'setAccessoryController:'
    'body': 'setAccessoryController(${1:NSViewController* accessoryController})'
  'setDefaultFileName:':
    'prefix': 'setDefaultFileName:'
    'body': 'setDefaultFileName(${1:NSString* defaultFileName})'
  'setOptions:':
    'prefix': 'setOptions:'
    'body': 'setOptions(${1:NSPDFPanelOptions options})'
  'PICTRepresentation':
    'prefix': 'PICTRepresentation'
    'body': 'PICTRepresentation()'
  'boundingBox':
    'prefix': 'boundingBox'
    'body': 'boundingBox()'
  'NSPICTImageRep.imageRepWithData:':
    'prefix': 'imageRepWithData:'
    'body': 'imageRepWithData(${1:NSData* pictData})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* pictData})'
  'arrangedObjects':
    'prefix': 'arrangedObjects'
    'body': 'arrangedObjects()'
  'completeTransition':
    'prefix': 'completeTransition'
    'body': 'completeTransition()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'navigateBack:':
    'prefix': 'navigateBack:'
    'body': 'navigateBack(${1:id sender})'
  'navigateForward:':
    'prefix': 'navigateForward:'
    'body': 'navigateForward(${1:id sender})'
  'navigateForwardToObject:':
    'prefix': 'navigateForwardToObject:'
    'body': 'navigateForwardToObject(${1:id object})'
  'selectedIndex':
    'prefix': 'selectedIndex'
    'body': 'selectedIndex()'
  'selectedViewController':
    'prefix': 'selectedViewController'
    'body': 'selectedViewController()'
  'setArrangedObjects:':
    'prefix': 'setArrangedObjects:'
    'body': 'setArrangedObjects(${1:NSArray* arrangedObjects})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setSelectedIndex:':
    'prefix': 'setSelectedIndex:'
    'body': 'setSelectedIndex(${1:NSInteger selectedIndex})'
  'setTransitionStyle:':
    'prefix': 'setTransitionStyle:'
    'body': 'setTransitionStyle(${1:NSPageControllerTransitionStyle transitionStyle})'
  'takeSelectedIndexFrom:':
    'prefix': 'takeSelectedIndexFrom:'
    'body': 'takeSelectedIndexFrom(${1:id sender})'
  'transitionStyle':
    'prefix': 'transitionStyle'
    'body': 'transitionStyle()'
  'accessoryControllers':
    'prefix': 'accessoryControllers'
    'body': 'accessoryControllers()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'addAccessoryController:':
    'prefix': 'addAccessoryController:'
    'body': 'addAccessoryController(${1:NSViewController* accessoryController})'
  'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'
    'body': 'beginSheetWithPrintInfo(${1:NSPrintInfo* printInfo}, modalForWindow:${2:NSWindow* docWindow}, delegate:${3:id delegate}, didEndSelector:${4:SEL didEndSelector}, contextInfo:${5:void* contextInfo})'
  'NSPageLayout.pageLayout':
    'prefix': 'pageLayout'
    'body': 'pageLayout()'
  'printInfo':
    'prefix': 'printInfo'
    'body': 'printInfo()'
  'readPrintInfo':
    'prefix': 'readPrintInfo'
    'body': 'readPrintInfo()'
  'removeAccessoryController:':
    'prefix': 'removeAccessoryController:'
    'body': 'removeAccessoryController(${1:NSViewController* accessoryController})'
  'runModal':
    'prefix': 'runModal'
    'body': 'runModal()'
  'runModalWithPrintInfo:':
    'prefix': 'runModalWithPrintInfo:'
    'body': 'runModalWithPrintInfo(${1:NSPrintInfo* printInfo})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* accessoryView})'
  'writePrintInfo':
    'prefix': 'writePrintInfo'
    'body': 'writePrintInfo()'
  'becomesKeyOnlyIfNeeded':
    'prefix': 'becomesKeyOnlyIfNeeded'
    'body': 'becomesKeyOnlyIfNeeded()'
  'isFloatingPanel':
    'prefix': 'isFloatingPanel'
    'body': 'isFloatingPanel()'
  'setBecomesKeyOnlyIfNeeded:':
    'prefix': 'setBecomesKeyOnlyIfNeeded:'
    'body': 'setBecomesKeyOnlyIfNeeded(${1:BOOL flag})'
  'setFloatingPanel:':
    'prefix': 'setFloatingPanel:'
    'body': 'setFloatingPanel(${1:BOOL flag})'
  'setWorksWhenModal:':
    'prefix': 'setWorksWhenModal:'
    'body': 'setWorksWhenModal(${1:BOOL flag})'
  'worksWhenModal':
    'prefix': 'worksWhenModal'
    'body': 'worksWhenModal()'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'NSParagraphStyle.defaultParagraphStyle':
    'prefix': 'defaultParagraphStyle'
    'body': 'defaultParagraphStyle()'
  'defaultTabInterval':
    'prefix': 'defaultTabInterval'
    'body': 'defaultTabInterval()'
  'NSParagraphStyle.defaultWritingDirectionForLanguage:':
    'prefix': 'defaultWritingDirectionForLanguage:'
    'body': 'defaultWritingDirectionForLanguage(${1:NSString* languageName})'
  'firstLineHeadIndent':
    'prefix': 'firstLineHeadIndent'
    'body': 'firstLineHeadIndent()'
  'headIndent':
    'prefix': 'headIndent'
    'body': 'headIndent()'
  'headerLevel':
    'prefix': 'headerLevel'
    'body': 'headerLevel()'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'lineBreakMode':
    'prefix': 'lineBreakMode'
    'body': 'lineBreakMode()'
  'lineHeightMultiple':
    'prefix': 'lineHeightMultiple'
    'body': 'lineHeightMultiple()'
  'lineSpacing':
    'prefix': 'lineSpacing'
    'body': 'lineSpacing()'
  'maximumLineHeight':
    'prefix': 'maximumLineHeight'
    'body': 'maximumLineHeight()'
  'minimumLineHeight':
    'prefix': 'minimumLineHeight'
    'body': 'minimumLineHeight()'
  'paragraphSpacing':
    'prefix': 'paragraphSpacing'
    'body': 'paragraphSpacing()'
  'paragraphSpacingBefore':
    'prefix': 'paragraphSpacingBefore'
    'body': 'paragraphSpacingBefore()'
  'tabStops':
    'prefix': 'tabStops'
    'body': 'tabStops()'
  'tailIndent':
    'prefix': 'tailIndent'
    'body': 'tailIndent()'
  'textBlocks':
    'prefix': 'textBlocks'
    'body': 'textBlocks()'
  'textLists':
    'prefix': 'textLists'
    'body': 'textLists()'
  'tighteningFactorForTruncation':
    'prefix': 'tighteningFactorForTruncation'
    'body': 'tighteningFactorForTruncation()'
  'addTypes:owner:':
    'prefix': 'addTypes:owner:'
    'body': 'addTypes(${1:NSArray* newTypes}, owner:${2:id newOwner})'
  'availableTypeFromArray:':
    'prefix': 'availableTypeFromArray:'
    'body': 'availableTypeFromArray(${1:NSArray* types})'
  'canReadItemWithDataConformingToTypes:':
    'prefix': 'canReadItemWithDataConformingToTypes:'
    'body': 'canReadItemWithDataConformingToTypes(${1:NSArray* types})'
  'canReadObjectForClasses:options:':
    'prefix': 'canReadObjectForClasses:options:'
    'body': 'canReadObjectForClasses(${1:NSArray* classArray}, options:${2:NSDictionary* options})'
  'changeCount':
    'prefix': 'changeCount'
    'body': 'changeCount()'
  'clearContents':
    'prefix': 'clearContents'
    'body': 'clearContents()'
  'dataForType:':
    'prefix': 'dataForType:'
    'body': 'dataForType(${1:NSString* dataType})'
  'declareTypes:owner:':
    'prefix': 'declareTypes:owner:'
    'body': 'declareTypes(${1:NSArray* newTypes}, owner:${2:id newOwner})'
  'NSPasteboard.generalPasteboard':
    'prefix': 'generalPasteboard'
    'body': 'generalPasteboard()'
  'indexOfPasteboardItem:':
    'prefix': 'indexOfPasteboardItem:'
    'body': 'indexOfPasteboardItem(${1:NSPasteboardItem* pasteboardItem})'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'NSPasteboard.pasteboardByFilteringData:ofType:':
    'prefix': 'pasteboardByFilteringData:ofType:'
    'body': 'pasteboardByFilteringData(${1:NSData* data}, ofType:${2:NSString* type})'
  'NSPasteboard.pasteboardByFilteringFile:':
    'prefix': 'pasteboardByFilteringFile:'
    'body': 'pasteboardByFilteringFile(${1:NSString* filename})'
  'NSPasteboard.pasteboardByFilteringTypesInPasteboard:':
    'prefix': 'pasteboardByFilteringTypesInPasteboard:'
    'body': 'pasteboardByFilteringTypesInPasteboard(${1:NSPasteboard* pboard})'
  'pasteboardItems':
    'prefix': 'pasteboardItems'
    'body': 'pasteboardItems()'
  'NSPasteboard.pasteboardWithName:':
    'prefix': 'pasteboardWithName:'
    'body': 'pasteboardWithName(${1:NSString* name})'
  'NSPasteboard.pasteboardWithUniqueName':
    'prefix': 'pasteboardWithUniqueName'
    'body': 'pasteboardWithUniqueName()'
  'propertyListForType:':
    'prefix': 'propertyListForType:'
    'body': 'propertyListForType(${1:NSString* dataType})'
  'readFileContentsType:toFile:':
    'prefix': 'readFileContentsType:toFile:'
    'body': 'readFileContentsType(${1:NSString* type}, toFile:${2:NSString* filename})'
  'readFileWrapper':
    'prefix': 'readFileWrapper'
    'body': 'readFileWrapper()'
  'readObjectsForClasses:options:':
    'prefix': 'readObjectsForClasses:options:'
    'body': 'readObjectsForClasses(${1:NSArray* classArray}, options:${2:NSDictionary* options})'
  'releaseGlobally':
    'prefix': 'releaseGlobally'
    'body': 'releaseGlobally()'
  'setData:forType:':
    'prefix': 'setData:forType:'
    'body': 'setData(${1:NSData* data}, forType:${2:NSString* dataType})'
  'setPropertyList:forType:':
    'prefix': 'setPropertyList:forType:'
    'body': 'setPropertyList(${1:id plist}, forType:${2:NSString* dataType})'
  'setString:forType:':
    'prefix': 'setString:forType:'
    'body': 'setString(${1:NSString* string}, forType:${2:NSString* dataType})'
  'stringForType:':
    'prefix': 'stringForType:'
    'body': 'stringForType(${1:NSString* dataType})'
  'types':
    'prefix': 'types'
    'body': 'types()'
  'NSPasteboard.typesFilterableTo:':
    'prefix': 'typesFilterableTo:'
    'body': 'typesFilterableTo(${1:NSString* type})'
  'writeFileContents:':
    'prefix': 'writeFileContents:'
    'body': 'writeFileContents(${1:NSString* filename})'
  'writeFileWrapper:':
    'prefix': 'writeFileWrapper:'
    'body': 'writeFileWrapper(${1:NSFileWrapper* wrapper})'
  'writeObjects:':
    'prefix': 'writeObjects:'
    'body': 'writeObjects(${1:NSArray* objects})'
  'availableTypeFromArray:':
    'prefix': 'availableTypeFromArray:'
    'body': 'availableTypeFromArray(${1:NSArray* types})'
  'dataForType:':
    'prefix': 'dataForType:'
    'body': 'dataForType(${1:NSString* type})'
  'propertyListForType:':
    'prefix': 'propertyListForType:'
    'body': 'propertyListForType(${1:NSString* type})'
  'setData:forType:':
    'prefix': 'setData:forType:'
    'body': 'setData(${1:NSData* data}, forType:${2:NSString* type})'
  'setDataProvider:forTypes:':
    'prefix': 'setDataProvider:forTypes:'
    'body': 'setDataProvider(${1:id dataProvider}, forTypes:${2:NSArray* types})'
  'setPropertyList:forType:':
    'prefix': 'setPropertyList:forType:'
    'body': 'setPropertyList(${1:id propertyList}, forType:${2:NSString* type})'
  'setString:forType:':
    'prefix': 'setString:forType:'
    'body': 'setString(${1:NSString* string}, forType:${2:NSString* type})'
  'stringForType:':
    'prefix': 'stringForType:'
    'body': 'stringForType(${1:NSString* type})'
  'types':
    'prefix': 'types'
    'body': 'types()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'allowedTypes':
    'prefix': 'allowedTypes'
    'body': 'allowedTypes()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'clickedPathComponentCell':
    'prefix': 'clickedPathComponentCell'
    'body': 'clickedPathComponentCell()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'mouseEntered:withFrame:inView:':
    'prefix': 'mouseEntered:withFrame:inView:'
    'body': 'mouseEntered(${1:NSEvent* event}, withFrame:${2:NSRect frame}, inView:${3:NSView* view})'
  'mouseExited:withFrame:inView:':
    'prefix': 'mouseExited:withFrame:inView:'
    'body': 'mouseExited(${1:NSEvent* event}, withFrame:${2:NSRect frame}, inView:${3:NSView* view})'
  'pathComponentCellAtPoint:withFrame:inView:':
    'prefix': 'pathComponentCellAtPoint:withFrame:inView:'
    'body': 'pathComponentCellAtPoint(${1:NSPoint point}, withFrame:${2:NSRect frame}, inView:${3:NSView* view})'
  'NSPathCell.pathComponentCellClass':
    'prefix': 'pathComponentCellClass'
    'body': 'pathComponentCellClass()'
  'pathComponentCells':
    'prefix': 'pathComponentCells'
    'body': 'pathComponentCells()'
  'pathStyle':
    'prefix': 'pathStyle'
    'body': 'pathStyle()'
  'placeholderAttributedString':
    'prefix': 'placeholderAttributedString'
    'body': 'placeholderAttributedString()'
  'placeholderString':
    'prefix': 'placeholderString'
    'body': 'placeholderString()'
  'rectOfPathComponentCell:withFrame:inView:':
    'prefix': 'rectOfPathComponentCell:withFrame:inView:'
    'body': 'rectOfPathComponentCell(${1:NSPathComponentCell* cell}, withFrame:${2:NSRect frame}, inView:${3:NSView* view})'
  'setAllowedTypes:':
    'prefix': 'setAllowedTypes:'
    'body': 'setAllowedTypes(${1:NSArray* allowedTypes})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setControlSize:':
    'prefix': 'setControlSize:'
    'body': 'setControlSize(${1:NSControlSize size})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id value})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL action})'
  'setObjectValue:':
    'prefix': 'setObjectValue:'
    'body': 'setObjectValue(${1:id obj})'
  'setPathComponentCells:':
    'prefix': 'setPathComponentCells:'
    'body': 'setPathComponentCells(${1:NSArray* cells})'
  'setPathStyle:':
    'prefix': 'setPathStyle:'
    'body': 'setPathStyle(${1:NSPathStyle style})'
  'setPlaceholderAttributedString:':
    'prefix': 'setPlaceholderAttributedString:'
    'body': 'setPlaceholderAttributedString(${1:NSAttributedString* string})'
  'setPlaceholderString:':
    'prefix': 'setPlaceholderString:'
    'body': 'setPlaceholderString(${1:NSString* string})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* url})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* value})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* url})'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'clickedPathComponentCell':
    'prefix': 'clickedPathComponentCell'
    'body': 'clickedPathComponentCell()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'pathComponentCells':
    'prefix': 'pathComponentCells'
    'body': 'pathComponentCells()'
  'pathStyle':
    'prefix': 'pathStyle'
    'body': 'pathStyle()'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL action})'
  'setDraggingSourceOperationMask:forLocal:':
    'prefix': 'setDraggingSourceOperationMask:forLocal:'
    'body': 'setDraggingSourceOperationMask(${1:NSDragOperation mask}, forLocal:${2:BOOL isLocal})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setPathComponentCells:':
    'prefix': 'setPathComponentCells:'
    'body': 'setPathComponentCells(${1:NSArray* cells})'
  'setPathStyle:':
    'prefix': 'setPathStyle:'
    'body': 'setPathStyle(${1:NSPathStyle style})'
  'setURL:':
    'prefix': 'setURL:'
    'body': 'setURL(${1:NSURL* url})'
  'configurePersistentStoreCoordinatorForURL:ofType:error:':
    'prefix': 'configurePersistentStoreCoordinatorForURL:ofType:error:'
    'body': 'configurePersistentStoreCoordinatorForURL(${1:NSURL* url}, ofType:${2:NSString* fileType}, error:${3:NSError** error})'
  'configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:':
    'prefix': 'configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'
    'body': 'configurePersistentStoreCoordinatorForURL(${1:NSURL* url}, ofType:${2:NSString* fileType}, modelConfiguration:${3:NSString* configuration}, storeOptions:${4:NSDictionary* storeOptions}, error:${5:NSError** error})'
  'managedObjectContext':
    'prefix': 'managedObjectContext'
    'body': 'managedObjectContext()'
  'managedObjectModel':
    'prefix': 'managedObjectModel'
    'body': 'managedObjectModel()'
  'persistentStoreTypeForFileType:':
    'prefix': 'persistentStoreTypeForFileType:'
    'body': 'persistentStoreTypeForFileType(${1:NSString* fileType})'
  'readFromURL:ofType:error:':
    'prefix': 'readFromURL:ofType:error:'
    'body': 'readFromURL(${1:NSURL* absoluteURL}, ofType:${2:NSString* typeName}, error:${3:NSError** error})'
  'revertToContentsOfURL:ofType:error:':
    'prefix': 'revertToContentsOfURL:ofType:error:'
    'body': 'revertToContentsOfURL(${1:NSURL* inAbsoluteURL}, ofType:${2:NSString* inTypeName}, error:${3:NSError** outError})'
  'setManagedObjectContext:':
    'prefix': 'setManagedObjectContext:'
    'body': 'setManagedObjectContext(${1:NSManagedObjectContext* managedObjectContext})'
  'writeToURL:ofType:forSaveOperation:originalContentsURL:error:':
    'prefix': 'writeToURL:ofType:forSaveOperation:originalContentsURL:error:'
    'body': 'writeToURL(${1:NSURL* absoluteURL}, ofType:${2:NSString* typeName}, forSaveOperation:${3:NSSaveOperationType saveOperation}, originalContentsURL:${4:NSURL* absoluteOriginalContentsURL}, error:${5:NSError** error})'
  'addItemWithTitle:':
    'prefix': 'addItemWithTitle:'
    'body': 'addItemWithTitle(${1:NSString* title})'
  'addItemsWithTitles:':
    'prefix': 'addItemsWithTitles:'
    'body': 'addItemsWithTitles(${1:NSArray* itemTitles})'
  'autoenablesItems':
    'prefix': 'autoenablesItems'
    'body': 'autoenablesItems()'
  'indexOfItem:':
    'prefix': 'indexOfItem:'
    'body': 'indexOfItem(${1:NSMenuItem* item})'
  'indexOfItemWithRepresentedObject:':
    'prefix': 'indexOfItemWithRepresentedObject:'
    'body': 'indexOfItemWithRepresentedObject(${1:id obj})'
  'indexOfItemWithTag:':
    'prefix': 'indexOfItemWithTag:'
    'body': 'indexOfItemWithTag(${1:NSInteger tag})'
  'indexOfItemWithTarget:andAction:':
    'prefix': 'indexOfItemWithTarget:andAction:'
    'body': 'indexOfItemWithTarget(${1:id target}, andAction:${2:SEL actionSelector})'
  'indexOfItemWithTitle:':
    'prefix': 'indexOfItemWithTitle:'
    'body': 'indexOfItemWithTitle(${1:NSString* title})'
  'indexOfSelectedItem':
    'prefix': 'indexOfSelectedItem'
    'body': 'indexOfSelectedItem()'
  'initWithFrame:pullsDown:':
    'prefix': 'initWithFrame:pullsDown:'
    'body': 'initWithFrame(${1:NSRect buttonFrame}, pullsDown:${2:BOOL flag})'
  'insertItemWithTitle:atIndex:':
    'prefix': 'insertItemWithTitle:atIndex:'
    'body': 'insertItemWithTitle(${1:NSString* title}, atIndex:${2:NSInteger index})'
  'itemArray':
    'prefix': 'itemArray'
    'body': 'itemArray()'
  'itemAtIndex:':
    'prefix': 'itemAtIndex:'
    'body': 'itemAtIndex(${1:NSInteger index})'
  'itemTitleAtIndex:':
    'prefix': 'itemTitleAtIndex:'
    'body': 'itemTitleAtIndex(${1:NSInteger index})'
  'itemTitles':
    'prefix': 'itemTitles'
    'body': 'itemTitles()'
  'itemWithTitle:':
    'prefix': 'itemWithTitle:'
    'body': 'itemWithTitle(${1:NSString* title})'
  'lastItem':
    'prefix': 'lastItem'
    'body': 'lastItem()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'preferredEdge':
    'prefix': 'preferredEdge'
    'body': 'preferredEdge()'
  'pullsDown':
    'prefix': 'pullsDown'
    'body': 'pullsDown()'
  'removeAllItems':
    'prefix': 'removeAllItems'
    'body': 'removeAllItems()'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'removeItemWithTitle:':
    'prefix': 'removeItemWithTitle:'
    'body': 'removeItemWithTitle(${1:NSString* title})'
  'selectItem:':
    'prefix': 'selectItem:'
    'body': 'selectItem(${1:NSMenuItem* item})'
  'selectItemAtIndex:':
    'prefix': 'selectItemAtIndex:'
    'body': 'selectItemAtIndex(${1:NSInteger index})'
  'selectItemWithTag:':
    'prefix': 'selectItemWithTag:'
    'body': 'selectItemWithTag(${1:NSInteger tag})'
  'selectItemWithTitle:':
    'prefix': 'selectItemWithTitle:'
    'body': 'selectItemWithTitle(${1:NSString* title})'
  'selectedItem':
    'prefix': 'selectedItem'
    'body': 'selectedItem()'
  'setAutoenablesItems:':
    'prefix': 'setAutoenablesItems:'
    'body': 'setAutoenablesItems(${1:BOOL flag})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setPreferredEdge:':
    'prefix': 'setPreferredEdge:'
    'body': 'setPreferredEdge(${1:NSRectEdge edge})'
  'setPullsDown:':
    'prefix': 'setPullsDown:'
    'body': 'setPullsDown(${1:BOOL flag})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'synchronizeTitleAndSelectedItem':
    'prefix': 'synchronizeTitleAndSelectedItem'
    'body': 'synchronizeTitleAndSelectedItem()'
  'titleOfSelectedItem':
    'prefix': 'titleOfSelectedItem'
    'body': 'titleOfSelectedItem()'
  'addItemWithTitle:':
    'prefix': 'addItemWithTitle:'
    'body': 'addItemWithTitle(${1:NSString* title})'
  'addItemsWithTitles:':
    'prefix': 'addItemsWithTitles:'
    'body': 'addItemsWithTitles(${1:NSArray* itemTitles})'
  'altersStateOfSelectedItem':
    'prefix': 'altersStateOfSelectedItem'
    'body': 'altersStateOfSelectedItem()'
  'arrowPosition':
    'prefix': 'arrowPosition'
    'body': 'arrowPosition()'
  'attachPopUpWithFrame:inView:':
    'prefix': 'attachPopUpWithFrame:inView:'
    'body': 'attachPopUpWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'autoenablesItems':
    'prefix': 'autoenablesItems'
    'body': 'autoenablesItems()'
  'dismissPopUp':
    'prefix': 'dismissPopUp'
    'body': 'dismissPopUp()'
  'indexOfItem:':
    'prefix': 'indexOfItem:'
    'body': 'indexOfItem(${1:NSMenuItem* item})'
  'indexOfItemWithRepresentedObject:':
    'prefix': 'indexOfItemWithRepresentedObject:'
    'body': 'indexOfItemWithRepresentedObject(${1:id obj})'
  'indexOfItemWithTag:':
    'prefix': 'indexOfItemWithTag:'
    'body': 'indexOfItemWithTag(${1:NSInteger tag})'
  'indexOfItemWithTarget:andAction:':
    'prefix': 'indexOfItemWithTarget:andAction:'
    'body': 'indexOfItemWithTarget(${1:id target}, andAction:${2:SEL actionSelector})'
  'indexOfItemWithTitle:':
    'prefix': 'indexOfItemWithTitle:'
    'body': 'indexOfItemWithTitle(${1:NSString* title})'
  'indexOfSelectedItem':
    'prefix': 'indexOfSelectedItem'
    'body': 'indexOfSelectedItem()'
  'initTextCell:pullsDown:':
    'prefix': 'initTextCell:pullsDown:'
    'body': 'initTextCell(${1:NSString* stringValue}, pullsDown:${2:BOOL pullDown})'
  'insertItemWithTitle:atIndex:':
    'prefix': 'insertItemWithTitle:atIndex:'
    'body': 'insertItemWithTitle(${1:NSString* title}, atIndex:${2:NSInteger index})'
  'itemArray':
    'prefix': 'itemArray'
    'body': 'itemArray()'
  'itemAtIndex:':
    'prefix': 'itemAtIndex:'
    'body': 'itemAtIndex(${1:NSInteger index})'
  'itemTitleAtIndex:':
    'prefix': 'itemTitleAtIndex:'
    'body': 'itemTitleAtIndex(${1:NSInteger index})'
  'itemTitles':
    'prefix': 'itemTitles'
    'body': 'itemTitles()'
  'itemWithTitle:':
    'prefix': 'itemWithTitle:'
    'body': 'itemWithTitle(${1:NSString* title})'
  'lastItem':
    'prefix': 'lastItem'
    'body': 'lastItem()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'numberOfItems':
    'prefix': 'numberOfItems'
    'body': 'numberOfItems()'
  'objectValue':
    'prefix': 'objectValue'
    'body': 'objectValue()'
  'performClickWithFrame:inView:':
    'prefix': 'performClickWithFrame:inView:'
    'body': 'performClickWithFrame(${1:NSRect frame}, inView:${2:NSView* controlView})'
  'preferredEdge':
    'prefix': 'preferredEdge'
    'body': 'preferredEdge()'
  'pullsDown':
    'prefix': 'pullsDown'
    'body': 'pullsDown()'
  'removeAllItems':
    'prefix': 'removeAllItems'
    'body': 'removeAllItems()'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'removeItemWithTitle:':
    'prefix': 'removeItemWithTitle:'
    'body': 'removeItemWithTitle(${1:NSString* title})'
  'selectItem:':
    'prefix': 'selectItem:'
    'body': 'selectItem(${1:NSMenuItem* item})'
  'selectItemAtIndex:':
    'prefix': 'selectItemAtIndex:'
    'body': 'selectItemAtIndex(${1:NSInteger index})'
  'selectItemWithTag:':
    'prefix': 'selectItemWithTag:'
    'body': 'selectItemWithTag(${1:NSInteger tag})'
  'selectItemWithTitle:':
    'prefix': 'selectItemWithTitle:'
    'body': 'selectItemWithTitle(${1:NSString* title})'
  'selectedItem':
    'prefix': 'selectedItem'
    'body': 'selectedItem()'
  'setAltersStateOfSelectedItem:':
    'prefix': 'setAltersStateOfSelectedItem:'
    'body': 'setAltersStateOfSelectedItem(${1:BOOL flag})'
  'setArrowPosition:':
    'prefix': 'setArrowPosition:'
    'body': 'setArrowPosition(${1:NSPopUpArrowPosition position})'
  'setAutoenablesItems:':
    'prefix': 'setAutoenablesItems:'
    'body': 'setAutoenablesItems(${1:BOOL flag})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setObjectValue:':
    'prefix': 'setObjectValue:'
    'body': 'setObjectValue(${1:id obj})'
  'setPreferredEdge:':
    'prefix': 'setPreferredEdge:'
    'body': 'setPreferredEdge(${1:NSRectEdge edge})'
  'setPullsDown:':
    'prefix': 'setPullsDown:'
    'body': 'setPullsDown(${1:BOOL flag})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setUsesItemFromMenu:':
    'prefix': 'setUsesItemFromMenu:'
    'body': 'setUsesItemFromMenu(${1:BOOL flag})'
  'synchronizeTitleAndSelectedItem':
    'prefix': 'synchronizeTitleAndSelectedItem'
    'body': 'synchronizeTitleAndSelectedItem()'
  'titleOfSelectedItem':
    'prefix': 'titleOfSelectedItem'
    'body': 'titleOfSelectedItem()'
  'usesItemFromMenu':
    'prefix': 'usesItemFromMenu'
    'body': 'usesItemFromMenu()'
  'animates':
    'prefix': 'animates'
    'body': 'animates()'
  'appearance':
    'prefix': 'appearance'
    'body': 'appearance()'
  'behavior':
    'prefix': 'behavior'
    'body': 'behavior()'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'contentSize':
    'prefix': 'contentSize'
    'body': 'contentSize()'
  'contentViewController':
    'prefix': 'contentViewController'
    'body': 'contentViewController()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'isShown':
    'prefix': 'isShown'
    'body': 'isShown()'
  'performClose:':
    'prefix': 'performClose:'
    'body': 'performClose(${1:id sender})'
  'positioningRect':
    'prefix': 'positioningRect'
    'body': 'positioningRect()'
  'setAnimates:':
    'prefix': 'setAnimates:'
    'body': 'setAnimates(${1:BOOL animates})'
  'setAppearance:':
    'prefix': 'setAppearance:'
    'body': 'setAppearance(${1:NSPopoverAppearance appearance})'
  'setBehavior:':
    'prefix': 'setBehavior:'
    'body': 'setBehavior(${1:NSPopoverBehavior behavior})'
  'setContentSize:':
    'prefix': 'setContentSize:'
    'body': 'setContentSize(${1:NSSize contentSize})'
  'setContentViewController:':
    'prefix': 'setContentViewController:'
    'body': 'setContentViewController(${1:NSViewController* contentViewController})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setPositioningRect:':
    'prefix': 'setPositioningRect:'
    'body': 'setPositioningRect(${1:NSRect positioningRect})'
  'showRelativeToRect:ofView:preferredEdge:':
    'prefix': 'showRelativeToRect:ofView:preferredEdge:'
    'body': 'showRelativeToRect(${1:NSRect positioningRect}, ofView:${2:NSView* positioningView}, preferredEdge:${3:NSRectEdge preferredEdge})'
  'rowTemplates':
    'prefix': 'rowTemplates'
    'body': 'rowTemplates()'
  'setRowTemplates:':
    'prefix': 'setRowTemplates:'
    'body': 'setRowTemplates(${1:NSArray* rowTemplates})'
  'compoundTypes':
    'prefix': 'compoundTypes'
    'body': 'compoundTypes()'
  'displayableSubpredicatesOfPredicate:':
    'prefix': 'displayableSubpredicatesOfPredicate:'
    'body': 'displayableSubpredicatesOfPredicate(${1:NSPredicate* predicate})'
  'initWithCompoundTypes:':
    'prefix': 'initWithCompoundTypes:'
    'body': 'initWithCompoundTypes(${1:NSArray* compoundTypes})'
  'initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:':
    'prefix': 'initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:'
    'body': 'initWithLeftExpressions(${1:NSArray* leftExpressions}, rightExpressionAttributeType:${2:NSAttributeType attributeType}, modifier:${3:NSComparisonPredicateModifier modifier}, operators:${4:NSArray* operators}, options:${5:NSUInteger options})'
  'initWithLeftExpressions:rightExpressions:modifier:operators:options:':
    'prefix': 'initWithLeftExpressions:rightExpressions:modifier:operators:options:'
    'body': 'initWithLeftExpressions(${1:NSArray* leftExpressions}, rightExpressions:${2:NSArray* rightExpressions}, modifier:${3:NSComparisonPredicateModifier modifier}, operators:${4:NSArray* operators}, options:${5:NSUInteger options})'
  'leftExpressions':
    'prefix': 'leftExpressions'
    'body': 'leftExpressions()'
  'matchForPredicate:':
    'prefix': 'matchForPredicate:'
    'body': 'matchForPredicate(${1:NSPredicate* predicate})'
  'modifier':
    'prefix': 'modifier'
    'body': 'modifier()'
  'operators':
    'prefix': 'operators'
    'body': 'operators()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'predicateWithSubpredicates:':
    'prefix': 'predicateWithSubpredicates:'
    'body': 'predicateWithSubpredicates(${1:NSArray* subpredicates})'
  'rightExpressionAttributeType':
    'prefix': 'rightExpressionAttributeType'
    'body': 'rightExpressionAttributeType()'
  'rightExpressions':
    'prefix': 'rightExpressions'
    'body': 'rightExpressions()'
  'setPredicate:':
    'prefix': 'setPredicate:'
    'body': 'setPredicate(${1:NSPredicate* predicate})'
  'templateViews':
    'prefix': 'templateViews'
    'body': 'templateViews()'
  'NSPredicateEditorRowTemplate.templatesWithAttributeKeyPaths:inEntityDescription:':
    'prefix': 'templatesWithAttributeKeyPaths:inEntityDescription:'
    'body': 'templatesWithAttributeKeyPaths(${1:NSArray* keyPaths}, inEntityDescription:${2:NSEntityDescription* entityDescription})'
  'PMPageFormat':
    'prefix': 'PMPageFormat'
    'body': 'PMPageFormat()'
  'PMPrintSession':
    'prefix': 'PMPrintSession'
    'body': 'PMPrintSession()'
  'PMPrintSettings':
    'prefix': 'PMPrintSettings'
    'body': 'PMPrintSettings()'
  'bottomMargin':
    'prefix': 'bottomMargin'
    'body': 'bottomMargin()'
  'NSPrintInfo.defaultPrinter':
    'prefix': 'defaultPrinter'
    'body': 'defaultPrinter()'
  'dictionary':
    'prefix': 'dictionary'
    'body': 'dictionary()'
  'horizontalPagination':
    'prefix': 'horizontalPagination'
    'body': 'horizontalPagination()'
  'imageablePageBounds':
    'prefix': 'imageablePageBounds'
    'body': 'imageablePageBounds()'
  'initWithDictionary:':
    'prefix': 'initWithDictionary:'
    'body': 'initWithDictionary(${1:NSDictionary* attributes})'
  'isHorizontallyCentered':
    'prefix': 'isHorizontallyCentered'
    'body': 'isHorizontallyCentered()'
  'isSelectionOnly':
    'prefix': 'isSelectionOnly'
    'body': 'isSelectionOnly()'
  'isVerticallyCentered':
    'prefix': 'isVerticallyCentered'
    'body': 'isVerticallyCentered()'
  'jobDisposition':
    'prefix': 'jobDisposition'
    'body': 'jobDisposition()'
  'leftMargin':
    'prefix': 'leftMargin'
    'body': 'leftMargin()'
  'localizedPaperName':
    'prefix': 'localizedPaperName'
    'body': 'localizedPaperName()'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'paperName':
    'prefix': 'paperName'
    'body': 'paperName()'
  'paperSize':
    'prefix': 'paperSize'
    'body': 'paperSize()'
  'printSettings':
    'prefix': 'printSettings'
    'body': 'printSettings()'
  'printer':
    'prefix': 'printer'
    'body': 'printer()'
  'rightMargin':
    'prefix': 'rightMargin'
    'body': 'rightMargin()'
  'scalingFactor':
    'prefix': 'scalingFactor'
    'body': 'scalingFactor()'
  'setBottomMargin:':
    'prefix': 'setBottomMargin:'
    'body': 'setBottomMargin(${1:CGFloat margin})'
  'NSPrintInfo.setDefaultPrinter:':
    'prefix': 'setDefaultPrinter:'
    'body': 'setDefaultPrinter(${1:NSPrinter* printer})'
  'setHorizontalPagination:':
    'prefix': 'setHorizontalPagination:'
    'body': 'setHorizontalPagination(${1:NSPrintingPaginationMode mode})'
  'setHorizontallyCentered:':
    'prefix': 'setHorizontallyCentered:'
    'body': 'setHorizontallyCentered(${1:BOOL flag})'
  'setJobDisposition:':
    'prefix': 'setJobDisposition:'
    'body': 'setJobDisposition(${1:NSString* disposition})'
  'setLeftMargin:':
    'prefix': 'setLeftMargin:'
    'body': 'setLeftMargin(${1:CGFloat margin})'
  'setOrientation:':
    'prefix': 'setOrientation:'
    'body': 'setOrientation(${1:NSPaperOrientation orientation})'
  'setPaperName:':
    'prefix': 'setPaperName:'
    'body': 'setPaperName(${1:NSString* name})'
  'setPaperSize:':
    'prefix': 'setPaperSize:'
    'body': 'setPaperSize(${1:NSSize size})'
  'setPrinter:':
    'prefix': 'setPrinter:'
    'body': 'setPrinter(${1:NSPrinter* printer})'
  'setRightMargin:':
    'prefix': 'setRightMargin:'
    'body': 'setRightMargin(${1:CGFloat margin})'
  'setScalingFactor:':
    'prefix': 'setScalingFactor:'
    'body': 'setScalingFactor(${1:CGFloat scalingFactor})'
  'setSelectionOnly:':
    'prefix': 'setSelectionOnly:'
    'body': 'setSelectionOnly(${1:BOOL selectionOnly})'
  'NSPrintInfo.setSharedPrintInfo:':
    'prefix': 'setSharedPrintInfo:'
    'body': 'setSharedPrintInfo(${1:NSPrintInfo* printInfo})'
  'setTopMargin:':
    'prefix': 'setTopMargin:'
    'body': 'setTopMargin(${1:CGFloat margin})'
  'setUpPrintOperationDefaultValues':
    'prefix': 'setUpPrintOperationDefaultValues'
    'body': 'setUpPrintOperationDefaultValues()'
  'setVerticalPagination:':
    'prefix': 'setVerticalPagination:'
    'body': 'setVerticalPagination(${1:NSPrintingPaginationMode mode})'
  'setVerticallyCentered:':
    'prefix': 'setVerticallyCentered:'
    'body': 'setVerticallyCentered(${1:BOOL flag})'
  'NSPrintInfo.sharedPrintInfo':
    'prefix': 'sharedPrintInfo'
    'body': 'sharedPrintInfo()'
  'NSPrintInfo.sizeForPaperName:':
    'prefix': 'sizeForPaperName:'
    'body': 'sizeForPaperName(${1:NSString* name})'
  'takeSettingsFromPDFInfo:':
    'prefix': 'takeSettingsFromPDFInfo:'
    'body': 'takeSettingsFromPDFInfo(${1:NSPDFInfo* inPDFInfo})'
  'topMargin':
    'prefix': 'topMargin'
    'body': 'topMargin()'
  'updateFromPMPageFormat':
    'prefix': 'updateFromPMPageFormat'
    'body': 'updateFromPMPageFormat()'
  'updateFromPMPrintSettings':
    'prefix': 'updateFromPMPrintSettings'
    'body': 'updateFromPMPrintSettings()'
  'verticalPagination':
    'prefix': 'verticalPagination'
    'body': 'verticalPagination()'
  'NSPrintOperation.EPSOperationWithView:insideRect:toData:':
    'prefix': 'EPSOperationWithView:insideRect:toData:'
    'body': 'EPSOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toData:${3:NSMutableData* data})'
  'NSPrintOperation.EPSOperationWithView:insideRect:toData:printInfo:':
    'prefix': 'EPSOperationWithView:insideRect:toData:printInfo:'
    'body': 'EPSOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toData:${3:NSMutableData* data}, printInfo:${4:NSPrintInfo* printInfo})'
  'NSPrintOperation.EPSOperationWithView:insideRect:toPath:printInfo:':
    'prefix': 'EPSOperationWithView:insideRect:toPath:printInfo:'
    'body': 'EPSOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toPath:${3:NSString* path}, printInfo:${4:NSPrintInfo* printInfo})'
  'NSPrintOperation.PDFOperationWithView:insideRect:toData:':
    'prefix': 'PDFOperationWithView:insideRect:toData:'
    'body': 'PDFOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toData:${3:NSMutableData* data})'
  'NSPrintOperation.PDFOperationWithView:insideRect:toData:printInfo:':
    'prefix': 'PDFOperationWithView:insideRect:toData:printInfo:'
    'body': 'PDFOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toData:${3:NSMutableData* data}, printInfo:${4:NSPrintInfo* printInfo})'
  'NSPrintOperation.PDFOperationWithView:insideRect:toPath:printInfo:':
    'prefix': 'PDFOperationWithView:insideRect:toPath:printInfo:'
    'body': 'PDFOperationWithView(${1:NSView* view}, insideRect:${2:NSRect rect}, toPath:${3:NSString* path}, printInfo:${4:NSPrintInfo* printInfo})'
  'PDFPanel':
    'prefix': 'PDFPanel'
    'body': 'PDFPanel()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'canSpawnSeparateThread':
    'prefix': 'canSpawnSeparateThread'
    'body': 'canSpawnSeparateThread()'
  'cleanUpOperation':
    'prefix': 'cleanUpOperation'
    'body': 'cleanUpOperation()'
  'context':
    'prefix': 'context'
    'body': 'context()'
  'createContext':
    'prefix': 'createContext'
    'body': 'createContext()'
  'NSPrintOperation.currentOperation':
    'prefix': 'currentOperation'
    'body': 'currentOperation()'
  'currentPage':
    'prefix': 'currentPage'
    'body': 'currentPage()'
  'deliverResult':
    'prefix': 'deliverResult'
    'body': 'deliverResult()'
  'destroyContext':
    'prefix': 'destroyContext'
    'body': 'destroyContext()'
  'isCopyingOperation':
    'prefix': 'isCopyingOperation'
    'body': 'isCopyingOperation()'
  'jobStyleHint':
    'prefix': 'jobStyleHint'
    'body': 'jobStyleHint()'
  'jobTitle':
    'prefix': 'jobTitle'
    'body': 'jobTitle()'
  'pageOrder':
    'prefix': 'pageOrder'
    'body': 'pageOrder()'
  'pageRange':
    'prefix': 'pageRange'
    'body': 'pageRange()'
  'preferredRenderingQuality':
    'prefix': 'preferredRenderingQuality'
    'body': 'preferredRenderingQuality()'
  'printInfo':
    'prefix': 'printInfo'
    'body': 'printInfo()'
  'NSPrintOperation.printOperationWithView:':
    'prefix': 'printOperationWithView:'
    'body': 'printOperationWithView(${1:NSView* view})'
  'NSPrintOperation.printOperationWithView:printInfo:':
    'prefix': 'printOperationWithView:printInfo:'
    'body': 'printOperationWithView(${1:NSView* view}, printInfo:${2:NSPrintInfo* printInfo})'
  'printPanel':
    'prefix': 'printPanel'
    'body': 'printPanel()'
  'runOperation':
    'prefix': 'runOperation'
    'body': 'runOperation()'
  'runOperationModalForWindow:delegate:didRunSelector:contextInfo:':
    'prefix': 'runOperationModalForWindow:delegate:didRunSelector:contextInfo:'
    'body': 'runOperationModalForWindow(${1:NSWindow* docWindow}, delegate:${2:id delegate}, didRunSelector:${3:SEL didRunSelector}, contextInfo:${4:void* contextInfo})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* view})'
  'setCanSpawnSeparateThread:':
    'prefix': 'setCanSpawnSeparateThread:'
    'body': 'setCanSpawnSeparateThread(${1:BOOL canSpawnSeparateThread})'
  'NSPrintOperation.setCurrentOperation:':
    'prefix': 'setCurrentOperation:'
    'body': 'setCurrentOperation(${1:NSPrintOperation* operation})'
  'setJobStyleHint:':
    'prefix': 'setJobStyleHint:'
    'body': 'setJobStyleHint(${1:NSString* hint})'
  'setJobTitle:':
    'prefix': 'setJobTitle:'
    'body': 'setJobTitle(${1:NSString* jobTitle})'
  'setPDFPanel:':
    'prefix': 'setPDFPanel:'
    'body': 'setPDFPanel(${1:NSPDFPanel* panel})'
  'setPageOrder:':
    'prefix': 'setPageOrder:'
    'body': 'setPageOrder(${1:NSPrintingPageOrder pageOrder})'
  'setPrintInfo:':
    'prefix': 'setPrintInfo:'
    'body': 'setPrintInfo(${1:NSPrintInfo* printInfo})'
  'setPrintPanel:':
    'prefix': 'setPrintPanel:'
    'body': 'setPrintPanel(${1:NSPrintPanel* panel})'
  'setShowPanels:':
    'prefix': 'setShowPanels:'
    'body': 'setShowPanels(${1:BOOL flag})'
  'setShowsPrintPanel:':
    'prefix': 'setShowsPrintPanel:'
    'body': 'setShowsPrintPanel(${1:BOOL flag})'
  'setShowsProgressPanel:':
    'prefix': 'setShowsProgressPanel:'
    'body': 'setShowsProgressPanel(${1:BOOL flag})'
  'showPanels':
    'prefix': 'showPanels'
    'body': 'showPanels()'
  'showsPrintPanel':
    'prefix': 'showsPrintPanel'
    'body': 'showsPrintPanel()'
  'showsProgressPanel':
    'prefix': 'showsProgressPanel'
    'body': 'showsProgressPanel()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'accessoryControllers':
    'prefix': 'accessoryControllers'
    'body': 'accessoryControllers()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'addAccessoryController:':
    'prefix': 'addAccessoryController:'
    'body': 'addAccessoryController(${1:NSViewController* accessoryController})'
  'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'
    'body': 'beginSheetWithPrintInfo(${1:NSPrintInfo* printInfo}, modalForWindow:${2:NSWindow* docWindow}, delegate:${3:id delegate}, didEndSelector:${4:SEL didEndSelector}, contextInfo:${5:void* contextInfo})'
  'defaultButtonTitle':
    'prefix': 'defaultButtonTitle'
    'body': 'defaultButtonTitle()'
  'finalWritePrintInfo':
    'prefix': 'finalWritePrintInfo'
    'body': 'finalWritePrintInfo()'
  'helpAnchor':
    'prefix': 'helpAnchor'
    'body': 'helpAnchor()'
  'jobStyleHint':
    'prefix': 'jobStyleHint'
    'body': 'jobStyleHint()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'printInfo':
    'prefix': 'printInfo'
    'body': 'printInfo()'
  'NSPrintPanel.printPanel':
    'prefix': 'printPanel'
    'body': 'printPanel()'
  'removeAccessoryController:':
    'prefix': 'removeAccessoryController:'
    'body': 'removeAccessoryController(${1:NSViewController* accessoryController})'
  'runModal':
    'prefix': 'runModal'
    'body': 'runModal()'
  'runModalWithPrintInfo:':
    'prefix': 'runModalWithPrintInfo:'
    'body': 'runModalWithPrintInfo(${1:NSPrintInfo* printInfo})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* accessoryView})'
  'setDefaultButtonTitle:':
    'prefix': 'setDefaultButtonTitle:'
    'body': 'setDefaultButtonTitle(${1:NSString* defaultButtonTitle})'
  'setHelpAnchor:':
    'prefix': 'setHelpAnchor:'
    'body': 'setHelpAnchor(${1:NSString* helpAnchor})'
  'setJobStyleHint:':
    'prefix': 'setJobStyleHint:'
    'body': 'setJobStyleHint(${1:NSString* hint})'
  'setOptions:':
    'prefix': 'setOptions:'
    'body': 'setOptions(${1:NSPrintPanelOptions options})'
  'updateFromPrintInfo':
    'prefix': 'updateFromPrintInfo'
    'body': 'updateFromPrintInfo()'
  'acceptsBinary':
    'prefix': 'acceptsBinary'
    'body': 'acceptsBinary()'
  'booleanForKey:inTable:':
    'prefix': 'booleanForKey:inTable:'
    'body': 'booleanForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'deviceDescription':
    'prefix': 'deviceDescription'
    'body': 'deviceDescription()'
  'domain':
    'prefix': 'domain'
    'body': 'domain()'
  'floatForKey:inTable:':
    'prefix': 'floatForKey:inTable:'
    'body': 'floatForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'host':
    'prefix': 'host'
    'body': 'host()'
  'imageRectForPaper:':
    'prefix': 'imageRectForPaper:'
    'body': 'imageRectForPaper(${1:NSString* paperName})'
  'intForKey:inTable:':
    'prefix': 'intForKey:inTable:'
    'body': 'intForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'isColor':
    'prefix': 'isColor'
    'body': 'isColor()'
  'isFontAvailable:':
    'prefix': 'isFontAvailable:'
    'body': 'isFontAvailable(${1:NSString* faceName})'
  'isKey:inTable:':
    'prefix': 'isKey:inTable:'
    'body': 'isKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'isOutputStackInReverseOrder':
    'prefix': 'isOutputStackInReverseOrder'
    'body': 'isOutputStackInReverseOrder()'
  'languageLevel':
    'prefix': 'languageLevel'
    'body': 'languageLevel()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'note':
    'prefix': 'note'
    'body': 'note()'
  'pageSizeForPaper:':
    'prefix': 'pageSizeForPaper:'
    'body': 'pageSizeForPaper(${1:NSString* paperName})'
  'NSPrinter.printerNames':
    'prefix': 'printerNames'
    'body': 'printerNames()'
  'NSPrinter.printerTypes':
    'prefix': 'printerTypes'
    'body': 'printerTypes()'
  'NSPrinter.printerWithName:':
    'prefix': 'printerWithName:'
    'body': 'printerWithName(${1:NSString* name})'
  'NSPrinter.printerWithName:domain:includeUnavailable:':
    'prefix': 'printerWithName:domain:includeUnavailable:'
    'body': 'printerWithName(${1:NSString* name}, domain:${2:NSString* domain}, includeUnavailable:${3:BOOL flag})'
  'NSPrinter.printerWithType:':
    'prefix': 'printerWithType:'
    'body': 'printerWithType(${1:NSString* type})'
  'rectForKey:inTable:':
    'prefix': 'rectForKey:inTable:'
    'body': 'rectForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'sizeForKey:inTable:':
    'prefix': 'sizeForKey:inTable:'
    'body': 'sizeForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'statusForTable:':
    'prefix': 'statusForTable:'
    'body': 'statusForTable(${1:NSString* tableName})'
  'stringForKey:inTable:':
    'prefix': 'stringForKey:inTable:'
    'body': 'stringForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'stringListForKey:inTable:':
    'prefix': 'stringListForKey:inTable:'
    'body': 'stringListForKey(${1:NSString* key}, inTable:${2:NSString* table})'
  'type':
    'prefix': 'type'
    'body': 'type()'
  'animate:':
    'prefix': 'animate:'
    'body': 'animate(${1:id sender})'
  'animationDelay':
    'prefix': 'animationDelay'
    'body': 'animationDelay()'
  'controlSize':
    'prefix': 'controlSize'
    'body': 'controlSize()'
  'controlTint':
    'prefix': 'controlTint'
    'body': 'controlTint()'
  'doubleValue':
    'prefix': 'doubleValue'
    'body': 'doubleValue()'
  'incrementBy:':
    'prefix': 'incrementBy:'
    'body': 'incrementBy(${1:double delta})'
  'isBezeled':
    'prefix': 'isBezeled'
    'body': 'isBezeled()'
  'isDisplayedWhenStopped':
    'prefix': 'isDisplayedWhenStopped'
    'body': 'isDisplayedWhenStopped()'
  'isIndeterminate':
    'prefix': 'isIndeterminate'
    'body': 'isIndeterminate()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'setAnimationDelay:':
    'prefix': 'setAnimationDelay:'
    'body': 'setAnimationDelay(${1:NSTimeInterval delay})'
  'setBezeled:':
    'prefix': 'setBezeled:'
    'body': 'setBezeled(${1:BOOL flag})'
  'setControlSize:':
    'prefix': 'setControlSize:'
    'body': 'setControlSize(${1:NSControlSize size})'
  'setControlTint:':
    'prefix': 'setControlTint:'
    'body': 'setControlTint(${1:NSControlTint tint})'
  'setDisplayedWhenStopped:':
    'prefix': 'setDisplayedWhenStopped:'
    'body': 'setDisplayedWhenStopped(${1:BOOL isDisplayed})'
  'setDoubleValue:':
    'prefix': 'setDoubleValue:'
    'body': 'setDoubleValue(${1:double doubleValue})'
  'setIndeterminate:':
    'prefix': 'setIndeterminate:'
    'body': 'setIndeterminate(${1:BOOL flag})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double newMaximum})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double newMinimum})'
  'setStyle:':
    'prefix': 'setStyle:'
    'body': 'setStyle(${1:NSProgressIndicatorStyle style})'
  'setUsesThreadedAnimation:':
    'prefix': 'setUsesThreadedAnimation:'
    'body': 'setUsesThreadedAnimation(${1:BOOL threadedAnimation})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'startAnimation:':
    'prefix': 'startAnimation:'
    'body': 'startAnimation(${1:id sender})'
  'stopAnimation:':
    'prefix': 'stopAnimation:'
    'body': 'stopAnimation(${1:id sender})'
  'style':
    'prefix': 'style'
    'body': 'style()'
  'usesThreadedAnimation':
    'prefix': 'usesThreadedAnimation'
    'body': 'usesThreadedAnimation()'
  'acceptsFirstResponder':
    'prefix': 'acceptsFirstResponder'
    'body': 'acceptsFirstResponder()'
  'becomeFirstResponder':
    'prefix': 'becomeFirstResponder'
    'body': 'becomeFirstResponder()'
  'beginGestureWithEvent:':
    'prefix': 'beginGestureWithEvent:'
    'body': 'beginGestureWithEvent(${1:NSEvent* event})'
  'cancelOperation:':
    'prefix': 'cancelOperation:'
    'body': 'cancelOperation(${1:id sender})'
  'capitalizeWord:':
    'prefix': 'capitalizeWord:'
    'body': 'capitalizeWord(${1:id sender})'
  'centerSelectionInVisibleArea:':
    'prefix': 'centerSelectionInVisibleArea:'
    'body': 'centerSelectionInVisibleArea(${1:id sender})'
  'changeCaseOfLetter:':
    'prefix': 'changeCaseOfLetter:'
    'body': 'changeCaseOfLetter(${1:id sender})'
  'complete:':
    'prefix': 'complete:'
    'body': 'complete(${1:id sender})'
  'cursorUpdate:':
    'prefix': 'cursorUpdate:'
    'body': 'cursorUpdate(${1:NSEvent* event})'
  'deleteBackward:':
    'prefix': 'deleteBackward:'
    'body': 'deleteBackward(${1:id sender})'
  'deleteBackwardByDecomposingPreviousCharacter:':
    'prefix': 'deleteBackwardByDecomposingPreviousCharacter:'
    'body': 'deleteBackwardByDecomposingPreviousCharacter(${1:id sender})'
  'deleteForward:':
    'prefix': 'deleteForward:'
    'body': 'deleteForward(${1:id sender})'
  'deleteToBeginningOfLine:':
    'prefix': 'deleteToBeginningOfLine:'
    'body': 'deleteToBeginningOfLine(${1:id sender})'
  'deleteToBeginningOfParagraph:':
    'prefix': 'deleteToBeginningOfParagraph:'
    'body': 'deleteToBeginningOfParagraph(${1:id sender})'
  'deleteToEndOfLine:':
    'prefix': 'deleteToEndOfLine:'
    'body': 'deleteToEndOfLine(${1:id sender})'
  'deleteToEndOfParagraph:':
    'prefix': 'deleteToEndOfParagraph:'
    'body': 'deleteToEndOfParagraph(${1:id sender})'
  'deleteToMark:':
    'prefix': 'deleteToMark:'
    'body': 'deleteToMark(${1:id sender})'
  'deleteWordBackward:':
    'prefix': 'deleteWordBackward:'
    'body': 'deleteWordBackward(${1:id sender})'
  'deleteWordForward:':
    'prefix': 'deleteWordForward:'
    'body': 'deleteWordForward(${1:id sender})'
  'doCommandBySelector:':
    'prefix': 'doCommandBySelector:'
    'body': 'doCommandBySelector(${1:SEL aSelector})'
  'encodeRestorableStateWithCoder:':
    'prefix': 'encodeRestorableStateWithCoder:'
    'body': 'encodeRestorableStateWithCoder(${1:NSCoder* coder})'
  'endGestureWithEvent:':
    'prefix': 'endGestureWithEvent:'
    'body': 'endGestureWithEvent(${1:NSEvent* event})'
  'flagsChanged:':
    'prefix': 'flagsChanged:'
    'body': 'flagsChanged(${1:NSEvent* theEvent})'
  'flushBufferedKeyEvents':
    'prefix': 'flushBufferedKeyEvents'
    'body': 'flushBufferedKeyEvents()'
  'helpRequested:':
    'prefix': 'helpRequested:'
    'body': 'helpRequested(${1:NSEvent* eventPtr})'
  'indent:':
    'prefix': 'indent:'
    'body': 'indent(${1:id sender})'
  'insertBacktab:':
    'prefix': 'insertBacktab:'
    'body': 'insertBacktab(${1:id sender})'
  'insertContainerBreak:':
    'prefix': 'insertContainerBreak:'
    'body': 'insertContainerBreak(${1:id sender})'
  'insertDoubleQuoteIgnoringSubstitution:':
    'prefix': 'insertDoubleQuoteIgnoringSubstitution:'
    'body': 'insertDoubleQuoteIgnoringSubstitution(${1:id sender})'
  'insertLineBreak:':
    'prefix': 'insertLineBreak:'
    'body': 'insertLineBreak(${1:id sender})'
  'insertNewline:':
    'prefix': 'insertNewline:'
    'body': 'insertNewline(${1:id sender})'
  'insertNewlineIgnoringFieldEditor:':
    'prefix': 'insertNewlineIgnoringFieldEditor:'
    'body': 'insertNewlineIgnoringFieldEditor(${1:id sender})'
  'insertParagraphSeparator:':
    'prefix': 'insertParagraphSeparator:'
    'body': 'insertParagraphSeparator(${1:id sender})'
  'insertSingleQuoteIgnoringSubstitution:':
    'prefix': 'insertSingleQuoteIgnoringSubstitution:'
    'body': 'insertSingleQuoteIgnoringSubstitution(${1:id sender})'
  'insertTab:':
    'prefix': 'insertTab:'
    'body': 'insertTab(${1:id sender})'
  'insertTabIgnoringFieldEditor:':
    'prefix': 'insertTabIgnoringFieldEditor:'
    'body': 'insertTabIgnoringFieldEditor(${1:id sender})'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:id insertString})'
  'interfaceStyle':
    'prefix': 'interfaceStyle'
    'body': 'interfaceStyle()'
  'interpretKeyEvents:':
    'prefix': 'interpretKeyEvents:'
    'body': 'interpretKeyEvents(${1:NSArray* eventArray})'
  'invalidateRestorableState':
    'prefix': 'invalidateRestorableState'
    'body': 'invalidateRestorableState()'
  'keyDown:':
    'prefix': 'keyDown:'
    'body': 'KeyDown(${1:NSEvent* theEvent})'
  'keyUp:':
    'prefix': 'keyUp:'
    'body': 'KeyUp(${1:NSEvent* theEvent})'
  'lowercaseWord:':
    'prefix': 'lowercaseWord:'
    'body': 'lowercaseWord(${1:id sender})'
  'magnifyWithEvent:':
    'prefix': 'magnifyWithEvent:'
    'body': 'magnifyWithEvent(${1:NSEvent* event})'
  'makeBaseWritingDirectionLeftToRight:':
    'prefix': 'makeBaseWritingDirectionLeftToRight:'
    'body': 'makeBaseWritingDirectionLeftToRight(${1:id sender})'
  'makeBaseWritingDirectionNatural:':
    'prefix': 'makeBaseWritingDirectionNatural:'
    'body': 'makeBaseWritingDirectionNatural(${1:id sender})'
  'makeBaseWritingDirectionRightToLeft:':
    'prefix': 'makeBaseWritingDirectionRightToLeft:'
    'body': 'makeBaseWritingDirectionRightToLeft(${1:id sender})'
  'makeTextWritingDirectionLeftToRight:':
    'prefix': 'makeTextWritingDirectionLeftToRight:'
    'body': 'makeTextWritingDirectionLeftToRight(${1:id sender})'
  'makeTextWritingDirectionNatural:':
    'prefix': 'makeTextWritingDirectionNatural:'
    'body': 'makeTextWritingDirectionNatural(${1:id sender})'
  'makeTextWritingDirectionRightToLeft:':
    'prefix': 'makeTextWritingDirectionRightToLeft:'
    'body': 'makeTextWritingDirectionRightToLeft(${1:id sender})'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'mouseDown:':
    'prefix': 'mouseDown:'
    'body': 'mouseDown(${1:NSEvent* theEvent})'
  'mouseDragged:':
    'prefix': 'mouseDragged:'
    'body': 'mouseDragged(${1:NSEvent* theEvent})'
  'mouseEntered:':
    'prefix': 'mouseEntered:'
    'body': 'mouseEntered(${1:NSEvent* theEvent})'
  'mouseExited:':
    'prefix': 'mouseExited:'
    'body': 'mouseExited(${1:NSEvent* theEvent})'
  'mouseMoved:':
    'prefix': 'mouseMoved:'
    'body': 'mouseMoved(${1:NSEvent* theEvent})'
  'mouseUp:':
    'prefix': 'mouseUp:'
    'body': 'mouseUp(${1:NSEvent* theEvent})'
  'moveBackward:':
    'prefix': 'moveBackward:'
    'body': 'moveBackward(${1:id sender})'
  'moveBackwardAndModifySelection:':
    'prefix': 'moveBackwardAndModifySelection:'
    'body': 'moveBackwardAndModifySelection(${1:id sender})'
  'moveDown:':
    'prefix': 'moveDown:'
    'body': 'moveDown(${1:id sender})'
  'moveDownAndModifySelection:':
    'prefix': 'moveDownAndModifySelection:'
    'body': 'moveDownAndModifySelection(${1:id sender})'
  'moveForward:':
    'prefix': 'moveForward:'
    'body': 'moveForward(${1:id sender})'
  'moveForwardAndModifySelection:':
    'prefix': 'moveForwardAndModifySelection:'
    'body': 'moveForwardAndModifySelection(${1:id sender})'
  'moveLeft:':
    'prefix': 'moveLeft:'
    'body': 'moveLeft(${1:id sender})'
  'moveLeftAndModifySelection:':
    'prefix': 'moveLeftAndModifySelection:'
    'body': 'moveLeftAndModifySelection(${1:id sender})'
  'moveParagraphBackwardAndModifySelection:':
    'prefix': 'moveParagraphBackwardAndModifySelection:'
    'body': 'moveParagraphBackwardAndModifySelection(${1:id sender})'
  'moveParagraphForwardAndModifySelection:':
    'prefix': 'moveParagraphForwardAndModifySelection:'
    'body': 'moveParagraphForwardAndModifySelection(${1:id sender})'
  'moveRight:':
    'prefix': 'moveRight:'
    'body': 'moveRight(${1:id sender})'
  'moveRightAndModifySelection:':
    'prefix': 'moveRightAndModifySelection:'
    'body': 'moveRightAndModifySelection(${1:id sender})'
  'moveToBeginningOfDocument:':
    'prefix': 'moveToBeginningOfDocument:'
    'body': 'moveToBeginningOfDocument(${1:id sender})'
  'moveToBeginningOfDocumentAndModifySelection:':
    'prefix': 'moveToBeginningOfDocumentAndModifySelection:'
    'body': 'moveToBeginningOfDocumentAndModifySelection(${1:id sender})'
  'moveToBeginningOfLine:':
    'prefix': 'moveToBeginningOfLine:'
    'body': 'moveToBeginningOfLine(${1:id sender})'
  'moveToBeginningOfLineAndModifySelection:':
    'prefix': 'moveToBeginningOfLineAndModifySelection:'
    'body': 'moveToBeginningOfLineAndModifySelection(${1:id sender})'
  'moveToBeginningOfParagraph:':
    'prefix': 'moveToBeginningOfParagraph:'
    'body': 'moveToBeginningOfParagraph(${1:id sender})'
  'moveToBeginningOfParagraphAndModifySelection:':
    'prefix': 'moveToBeginningOfParagraphAndModifySelection:'
    'body': 'moveToBeginningOfParagraphAndModifySelection(${1:id sender})'
  'moveToEndOfDocument:':
    'prefix': 'moveToEndOfDocument:'
    'body': 'moveToEndOfDocument(${1:id sender})'
  'moveToEndOfDocumentAndModifySelection:':
    'prefix': 'moveToEndOfDocumentAndModifySelection:'
    'body': 'moveToEndOfDocumentAndModifySelection(${1:id sender})'
  'moveToEndOfLine:':
    'prefix': 'moveToEndOfLine:'
    'body': 'moveToEndOfLine(${1:id sender})'
  'moveToEndOfLineAndModifySelection:':
    'prefix': 'moveToEndOfLineAndModifySelection:'
    'body': 'moveToEndOfLineAndModifySelection(${1:id sender})'
  'moveToEndOfParagraph:':
    'prefix': 'moveToEndOfParagraph:'
    'body': 'moveToEndOfParagraph(${1:id sender})'
  'moveToEndOfParagraphAndModifySelection:':
    'prefix': 'moveToEndOfParagraphAndModifySelection:'
    'body': 'moveToEndOfParagraphAndModifySelection(${1:id sender})'
  'moveToLeftEndOfLine:':
    'prefix': 'moveToLeftEndOfLine:'
    'body': 'moveToLeftEndOfLine(${1:id sender})'
  'moveToLeftEndOfLineAndModifySelection:':
    'prefix': 'moveToLeftEndOfLineAndModifySelection:'
    'body': 'moveToLeftEndOfLineAndModifySelection(${1:id sender})'
  'moveToRightEndOfLine:':
    'prefix': 'moveToRightEndOfLine:'
    'body': 'moveToRightEndOfLine(${1:id sender})'
  'moveToRightEndOfLineAndModifySelection:':
    'prefix': 'moveToRightEndOfLineAndModifySelection:'
    'body': 'moveToRightEndOfLineAndModifySelection(${1:id sender})'
  'moveUp:':
    'prefix': 'moveUp:'
    'body': 'moveUp(${1:id sender})'
  'moveUpAndModifySelection:':
    'prefix': 'moveUpAndModifySelection:'
    'body': 'moveUpAndModifySelection(${1:id sender})'
  'moveWordBackward:':
    'prefix': 'moveWordBackward:'
    'body': 'moveWordBackward(${1:id sender})'
  'moveWordBackwardAndModifySelection:':
    'prefix': 'moveWordBackwardAndModifySelection:'
    'body': 'moveWordBackwardAndModifySelection(${1:id sender})'
  'moveWordForward:':
    'prefix': 'moveWordForward:'
    'body': 'moveWordForward(${1:id sender})'
  'moveWordForwardAndModifySelection:':
    'prefix': 'moveWordForwardAndModifySelection:'
    'body': 'moveWordForwardAndModifySelection(${1:id sender})'
  'moveWordLeft:':
    'prefix': 'moveWordLeft:'
    'body': 'moveWordLeft(${1:id sender})'
  'moveWordLeftAndModifySelection:':
    'prefix': 'moveWordLeftAndModifySelection:'
    'body': 'moveWordLeftAndModifySelection(${1:id sender})'
  'moveWordRight:':
    'prefix': 'moveWordRight:'
    'body': 'moveWordRight(${1:id sender})'
  'moveWordRightAndModifySelection:':
    'prefix': 'moveWordRightAndModifySelection:'
    'body': 'moveWordRightAndModifySelection(${1:id sender})'
  'nextResponder':
    'prefix': 'nextResponder'
    'body': 'nextResponder()'
  'noResponderFor:':
    'prefix': 'noResponderFor:'
    'body': 'noResponderFor(${1:SEL eventSelector})'
  'otherMouseDown:':
    'prefix': 'otherMouseDown:'
    'body': 'otherMouseDown(${1:NSEvent* theEvent})'
  'otherMouseDragged:':
    'prefix': 'otherMouseDragged:'
    'body': 'otherMouseDragged(${1:NSEvent* theEvent})'
  'otherMouseUp:':
    'prefix': 'otherMouseUp:'
    'body': 'otherMouseUp(${1:NSEvent* theEvent})'
  'pageDown:':
    'prefix': 'pageDown:'
    'body': 'pageDown(${1:id sender})'
  'pageDownAndModifySelection:':
    'prefix': 'pageDownAndModifySelection:'
    'body': 'pageDownAndModifySelection(${1:id sender})'
  'pageUp:':
    'prefix': 'pageUp:'
    'body': 'pageUp(${1:id sender})'
  'pageUpAndModifySelection:':
    'prefix': 'pageUpAndModifySelection:'
    'body': 'pageUpAndModifySelection(${1:id sender})'
  'performKeyEquivalent:':
    'prefix': 'performKeyEquivalent:'
    'body': 'performKeyEquivalent(${1:NSEvent* theEvent})'
  'performMnemonic:':
    'prefix': 'performMnemonic:'
    'body': 'performMnemonic(${1:NSString* theString})'
  'performTextFinderAction:':
    'prefix': 'performTextFinderAction:'
    'body': 'performTextFinderAction(${1:id sender})'
  'presentError:':
    'prefix': 'presentError:'
    'body': 'presentError(${1:NSError* error})'
  'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:':
    'prefix': 'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'
    'body': 'presentError(${1:NSError* error}, modalForWindow:${2:NSWindow* window}, delegate:${3:id delegate}, didPresentSelector:${4:SEL didPresentSelector}, contextInfo:${5:void* contextInfo})'
  'quickLookPreviewItems:':
    'prefix': 'quickLookPreviewItems:'
    'body': 'quickLookPreviewItems(${1:id sender})'
  'quickLookWithEvent:':
    'prefix': 'quickLookWithEvent:'
    'body': 'quickLookWithEvent(${1:NSEvent* event})'
  'resignFirstResponder':
    'prefix': 'resignFirstResponder'
    'body': 'resignFirstResponder()'
  'NSResponder.restorableStateKeyPaths':
    'prefix': 'restorableStateKeyPaths'
    'body': 'restorableStateKeyPaths()'
  'restoreStateWithCoder:':
    'prefix': 'restoreStateWithCoder:'
    'body': 'restoreStateWithCoder(${1:NSCoder* coder})'
  'rightMouseDown:':
    'prefix': 'rightMouseDown:'
    'body': 'rightMouseDown(${1:NSEvent* theEvent})'
  'rightMouseDragged:':
    'prefix': 'rightMouseDragged:'
    'body': 'rightMouseDragged(${1:NSEvent* theEvent})'
  'rightMouseUp:':
    'prefix': 'rightMouseUp:'
    'body': 'rightMouseUp(${1:NSEvent* theEvent})'
  'rotateWithEvent:':
    'prefix': 'rotateWithEvent:'
    'body': 'rotateWithEvent(${1:NSEvent* event})'
  'scrollLineDown:':
    'prefix': 'scrollLineDown:'
    'body': 'scrollLineDown(${1:id sender})'
  'scrollLineUp:':
    'prefix': 'scrollLineUp:'
    'body': 'scrollLineUp(${1:id sender})'
  'scrollPageDown:':
    'prefix': 'scrollPageDown:'
    'body': 'scrollPageDown(${1:id sender})'
  'scrollPageUp:':
    'prefix': 'scrollPageUp:'
    'body': 'scrollPageUp(${1:id sender})'
  'scrollToBeginningOfDocument:':
    'prefix': 'scrollToBeginningOfDocument:'
    'body': 'scrollToBeginningOfDocument(${1:id sender})'
  'scrollToEndOfDocument:':
    'prefix': 'scrollToEndOfDocument:'
    'body': 'scrollToEndOfDocument(${1:id sender})'
  'scrollWheel:':
    'prefix': 'scrollWheel:'
    'body': 'scrollWheel(${1:NSEvent* theEvent})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectLine:':
    'prefix': 'selectLine:'
    'body': 'selectLine(${1:id sender})'
  'selectParagraph:':
    'prefix': 'selectParagraph:'
    'body': 'selectParagraph(${1:id sender})'
  'selectToMark:':
    'prefix': 'selectToMark:'
    'body': 'selectToMark(${1:id sender})'
  'selectWord:':
    'prefix': 'selectWord:'
    'body': 'selectWord(${1:id sender})'
  'setInterfaceStyle:':
    'prefix': 'setInterfaceStyle:'
    'body': 'setInterfaceStyle(${1:NSInterfaceStyle interfaceStyle})'
  'setMark:':
    'prefix': 'setMark:'
    'body': 'setMark(${1:id sender})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setNextResponder:':
    'prefix': 'setNextResponder:'
    'body': 'setNextResponder(${1:NSResponder* aResponder})'
  'shouldBeTreatedAsInkEvent:':
    'prefix': 'shouldBeTreatedAsInkEvent:'
    'body': 'shouldBeTreatedAsInkEvent(${1:NSEvent* theEvent})'
  'showContextHelp:':
    'prefix': 'showContextHelp:'
    'body': 'showContextHelp(${1:id sender})'
  'smartMagnifyWithEvent:':
    'prefix': 'smartMagnifyWithEvent:'
    'body': 'smartMagnifyWithEvent(${1:NSEvent* event})'
  'supplementalTargetForAction:sender:':
    'prefix': 'supplementalTargetForAction:sender:'
    'body': 'supplementalTargetForAction(${1:SEL action}, sender:${2:id sender})'
  'swapWithMark:':
    'prefix': 'swapWithMark:'
    'body': 'swapWithMark(${1:id sender})'
  'swipeWithEvent:':
    'prefix': 'swipeWithEvent:'
    'body': 'swipeWithEvent(${1:NSEvent* event})'
  'tabletPoint:':
    'prefix': 'tabletPoint:'
    'body': 'tabletPoint(${1:NSEvent* theEvent})'
  'tabletProximity:':
    'prefix': 'tabletProximity:'
    'body': 'tabletProximity(${1:NSEvent* theEvent})'
  'touchesBeganWithEvent:':
    'prefix': 'touchesBeganWithEvent:'
    'body': 'touchesBeganWithEvent(${1:NSEvent* event})'
  'touchesCancelledWithEvent:':
    'prefix': 'touchesCancelledWithEvent:'
    'body': 'touchesCancelledWithEvent(${1:NSEvent* event})'
  'touchesEndedWithEvent:':
    'prefix': 'touchesEndedWithEvent:'
    'body': 'touchesEndedWithEvent(${1:NSEvent* event})'
  'touchesMovedWithEvent:':
    'prefix': 'touchesMovedWithEvent:'
    'body': 'touchesMovedWithEvent(${1:NSEvent* event})'
  'transpose:':
    'prefix': 'transpose:'
    'body': 'transpose(${1:id sender})'
  'transposeWords:':
    'prefix': 'transposeWords:'
    'body': 'transposeWords(${1:id sender})'
  'tryToPerform:with:':
    'prefix': 'tryToPerform:with:'
    'body': 'tryToPerform(${1:SEL anAction}, with:${2:id anObject})'
  'undoManager':
    'prefix': 'undoManager'
    'body': 'undoManager()'
  'uppercaseWord:':
    'prefix': 'uppercaseWord:'
    'body': 'uppercaseWord(${1:id sender})'
  'validRequestorForSendType:returnType:':
    'prefix': 'validRequestorForSendType:returnType:'
    'body': 'validRequestorForSendType(${1:NSString* sendType}, returnType:${2:NSString* returnType})'
  'validateProposedFirstResponder:forEvent:':
    'prefix': 'validateProposedFirstResponder:forEvent:'
    'body': 'validateProposedFirstResponder(${1:NSResponder* responder}, forEvent:${2:NSEvent* event})'
  'wantsForwardedScrollEventsForAxis:':
    'prefix': 'wantsForwardedScrollEventsForAxis:'
    'body': 'wantsForwardedScrollEventsForAxis(${1:NSEventGestureAxis axis})'
  'wantsScrollEventsForSwipeTrackingOnAxis:':
    'prefix': 'wantsScrollEventsForSwipeTrackingOnAxis:'
    'body': 'wantsScrollEventsForSwipeTrackingOnAxis(${1:NSEventGestureAxis axis})'
  'willPresentError:':
    'prefix': 'willPresentError:'
    'body': 'willPresentError(${1:NSError* error})'
  'yank:':
    'prefix': 'yank:'
    'body': 'yank(${1:id sender})'
  'addRow:':
    'prefix': 'addRow:'
    'body': 'addRow(${1:id sender})'
  'canRemoveAllRows':
    'prefix': 'canRemoveAllRows'
    'body': 'canRemoveAllRows()'
  'criteriaForRow:':
    'prefix': 'criteriaForRow:'
    'body': 'criteriaForRow(${1:NSInteger row})'
  'criteriaKeyPath':
    'prefix': 'criteriaKeyPath'
    'body': 'criteriaKeyPath()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'displayValuesForRow:':
    'prefix': 'displayValuesForRow:'
    'body': 'displayValuesForRow(${1:NSInteger row})'
  'displayValuesKeyPath':
    'prefix': 'displayValuesKeyPath'
    'body': 'displayValuesKeyPath()'
  'formattingDictionary':
    'prefix': 'formattingDictionary'
    'body': 'formattingDictionary()'
  'formattingStringsFilename':
    'prefix': 'formattingStringsFilename'
    'body': 'formattingStringsFilename()'
  'insertRowAtIndex:withType:asSubrowOfRow:animate:':
    'prefix': 'insertRowAtIndex:withType:asSubrowOfRow:animate:'
    'body': 'insertRowAtIndex(${1:NSInteger rowIndex}, withType:${2:NSRuleEditorRowType rowType}, asSubrowOfRow:${3:NSInteger parentRow}, animate:${4:BOOL shouldAnimate})'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'nestingMode':
    'prefix': 'nestingMode'
    'body': 'nestingMode()'
  'numberOfRows':
    'prefix': 'numberOfRows'
    'body': 'numberOfRows()'
  'parentRowForRow:':
    'prefix': 'parentRowForRow:'
    'body': 'parentRowForRow(${1:NSInteger rowIndex})'
  'predicate':
    'prefix': 'predicate'
    'body': 'predicate()'
  'predicateForRow:':
    'prefix': 'predicateForRow:'
    'body': 'predicateForRow(${1:NSInteger row})'
  'reloadCriteria':
    'prefix': 'reloadCriteria'
    'body': 'reloadCriteria()'
  'reloadPredicate':
    'prefix': 'reloadPredicate'
    'body': 'reloadPredicate()'
  'removeRowAtIndex:':
    'prefix': 'removeRowAtIndex:'
    'body': 'removeRowAtIndex(${1:NSInteger rowIndex})'
  'removeRowsAtIndexes:includeSubrows:':
    'prefix': 'removeRowsAtIndexes:includeSubrows:'
    'body': 'removeRowsAtIndexes(${1:NSIndexSet* rowIndexes}, includeSubrows:${2:BOOL includeSubrows})'
  'rowClass':
    'prefix': 'rowClass'
    'body': 'rowClass()'
  'rowForDisplayValue:':
    'prefix': 'rowForDisplayValue:'
    'body': 'rowForDisplayValue(${1:id displayValue})'
  'rowHeight':
    'prefix': 'rowHeight'
    'body': 'rowHeight()'
  'rowTypeForRow:':
    'prefix': 'rowTypeForRow:'
    'body': 'rowTypeForRow(${1:NSInteger rowIndex})'
  'rowTypeKeyPath':
    'prefix': 'rowTypeKeyPath'
    'body': 'rowTypeKeyPath()'
  'selectRowIndexes:byExtendingSelection:':
    'prefix': 'selectRowIndexes:byExtendingSelection:'
    'body': 'selectRowIndexes(${1:NSIndexSet* indexes}, byExtendingSelection:${2:BOOL extend})'
  'selectedRowIndexes':
    'prefix': 'selectedRowIndexes'
    'body': 'selectedRowIndexes()'
  'setCanRemoveAllRows:':
    'prefix': 'setCanRemoveAllRows:'
    'body': 'setCanRemoveAllRows(${1:BOOL val})'
  'setCriteria:andDisplayValues:forRowAtIndex:':
    'prefix': 'setCriteria:andDisplayValues:forRowAtIndex:'
    'body': 'setCriteria(${1:NSArray* criteria}, andDisplayValues:${2:NSArray* values}, forRowAtIndex:${3:NSInteger rowIndex})'
  'setCriteriaKeyPath:':
    'prefix': 'setCriteriaKeyPath:'
    'body': 'setCriteriaKeyPath(${1:NSString* keyPath})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDisplayValuesKeyPath:':
    'prefix': 'setDisplayValuesKeyPath:'
    'body': 'setDisplayValuesKeyPath(${1:NSString* keyPath})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL editable})'
  'setFormattingDictionary:':
    'prefix': 'setFormattingDictionary:'
    'body': 'setFormattingDictionary(${1:NSDictionary* dictionary})'
  'setFormattingStringsFilename:':
    'prefix': 'setFormattingStringsFilename:'
    'body': 'setFormattingStringsFilename(${1:NSString* stringsFilename})'
  'setNestingMode:':
    'prefix': 'setNestingMode:'
    'body': 'setNestingMode(${1:NSRuleEditorNestingMode mode})'
  'setRowClass:':
    'prefix': 'setRowClass:'
    'body': 'setRowClass(${1:Class rowClass})'
  'setRowHeight:':
    'prefix': 'setRowHeight:'
    'body': 'setRowHeight(${1:CGFloat height})'
  'setRowTypeKeyPath:':
    'prefix': 'setRowTypeKeyPath:'
    'body': 'setRowTypeKeyPath(${1:NSString* keyPath})'
  'setSubrowsKeyPath:':
    'prefix': 'setSubrowsKeyPath:'
    'body': 'setSubrowsKeyPath(${1:NSString* keyPath})'
  'subrowIndexesForRow:':
    'prefix': 'subrowIndexesForRow:'
    'body': 'subrowIndexesForRow(${1:NSInteger rowIndex})'
  'subrowsKeyPath':
    'prefix': 'subrowsKeyPath'
    'body': 'subrowsKeyPath()'
  'drawRect:':
    'prefix': 'drawRect:'
    'body': 'drawRect(${1:NSRect rect})'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'imageOrigin':
    'prefix': 'imageOrigin'
    'body': 'imageOrigin()'
  'imageRectInRuler':
    'prefix': 'imageRectInRuler'
    'body': 'imageRectInRuler()'
  'initWithRulerView:markerLocation:image:imageOrigin:':
    'prefix': 'initWithRulerView:markerLocation:image:imageOrigin:'
    'body': 'initWithRulerView(${1:NSRulerView* ruler}, markerLocation:${2:CGFloat location}, image:${3:NSImage* image}, imageOrigin:${4:NSPoint imageOrigin})'
  'isDragging':
    'prefix': 'isDragging'
    'body': 'isDragging()'
  'isMovable':
    'prefix': 'isMovable'
    'body': 'isMovable()'
  'isRemovable':
    'prefix': 'isRemovable'
    'body': 'isRemovable()'
  'markerLocation':
    'prefix': 'markerLocation'
    'body': 'markerLocation()'
  'representedObject':
    'prefix': 'representedObject'
    'body': 'representedObject()'
  'ruler':
    'prefix': 'ruler'
    'body': 'ruler()'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setImageOrigin:':
    'prefix': 'setImageOrigin:'
    'body': 'setImageOrigin(${1:NSPoint imageOrigin})'
  'setMarkerLocation:':
    'prefix': 'setMarkerLocation:'
    'body': 'setMarkerLocation(${1:CGFloat location})'
  'setMovable:':
    'prefix': 'setMovable:'
    'body': 'setMovable(${1:BOOL flag})'
  'setRemovable:':
    'prefix': 'setRemovable:'
    'body': 'setRemovable(${1:BOOL flag})'
  'setRepresentedObject:':
    'prefix': 'setRepresentedObject:'
    'body': 'setRepresentedObject(${1:id representedObject})'
  'thicknessRequiredInRuler':
    'prefix': 'thicknessRequiredInRuler'
    'body': 'thicknessRequiredInRuler()'
  'trackMouse:adding:':
    'prefix': 'trackMouse:adding:'
    'body': 'trackMouse(${1:NSEvent* mouseDownEvent}, adding:${2:BOOL isAdding})'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'addMarker:':
    'prefix': 'addMarker:'
    'body': 'addMarker(${1:NSRulerMarker* marker})'
  'baselineLocation':
    'prefix': 'baselineLocation'
    'body': 'baselineLocation()'
  'clientView':
    'prefix': 'clientView'
    'body': 'clientView()'
  'drawHashMarksAndLabelsInRect:':
    'prefix': 'drawHashMarksAndLabelsInRect:'
    'body': 'drawHashMarksAndLabelsInRect(${1:NSRect rect})'
  'drawMarkersInRect:':
    'prefix': 'drawMarkersInRect:'
    'body': 'drawMarkersInRect(${1:NSRect rect})'
  'initWithScrollView:orientation:':
    'prefix': 'initWithScrollView:orientation:'
    'body': 'initWithScrollView(${1:NSScrollView* scrollView}, orientation:${2:NSRulerOrientation orientation})'
  'invalidateHashMarks':
    'prefix': 'invalidateHashMarks'
    'body': 'invalidateHashMarks()'
  'isFlipped':
    'prefix': 'isFlipped'
    'body': 'isFlipped()'
  'markers':
    'prefix': 'markers'
    'body': 'markers()'
  'measurementUnits':
    'prefix': 'measurementUnits'
    'body': 'measurementUnits()'
  'moveRulerlineFromLocation:toLocation:':
    'prefix': 'moveRulerlineFromLocation:toLocation:'
    'body': 'moveRulerlineFromLocation(${1:CGFloat oldLocation}, toLocation:${2:CGFloat newLocation})'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'originOffset':
    'prefix': 'originOffset'
    'body': 'originOffset()'
  'NSRulerView.registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:':
    'prefix': 'registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:'
    'body': 'registerUnitWithName(${1:NSString* unitName}, abbreviation:${2:NSString* abbreviation}, unitToPointsConversionFactor:${3:CGFloat conversionFactor}, stepUpCycle:${4:NSArray* stepUpCycle}, stepDownCycle:${5:NSArray* stepDownCycle})'
  'removeMarker:':
    'prefix': 'removeMarker:'
    'body': 'removeMarker(${1:NSRulerMarker* marker})'
  'requiredThickness':
    'prefix': 'requiredThickness'
    'body': 'requiredThickness()'
  'reservedThicknessForAccessoryView':
    'prefix': 'reservedThicknessForAccessoryView'
    'body': 'reservedThicknessForAccessoryView()'
  'reservedThicknessForMarkers':
    'prefix': 'reservedThicknessForMarkers'
    'body': 'reservedThicknessForMarkers()'
  'ruleThickness':
    'prefix': 'ruleThickness'
    'body': 'ruleThickness()'
  'scrollView':
    'prefix': 'scrollView'
    'body': 'scrollView()'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* accessory})'
  'setClientView:':
    'prefix': 'setClientView:'
    'body': 'setClientView(${1:NSView* client})'
  'setMarkers:':
    'prefix': 'setMarkers:'
    'body': 'setMarkers(${1:NSArray* markers})'
  'setMeasurementUnits:':
    'prefix': 'setMeasurementUnits:'
    'body': 'setMeasurementUnits(${1:NSString* unitName})'
  'setOrientation:':
    'prefix': 'setOrientation:'
    'body': 'setOrientation(${1:NSRulerOrientation orientation})'
  'setOriginOffset:':
    'prefix': 'setOriginOffset:'
    'body': 'setOriginOffset(${1:CGFloat offset})'
  'setReservedThicknessForAccessoryView:':
    'prefix': 'setReservedThicknessForAccessoryView:'
    'body': 'setReservedThicknessForAccessoryView(${1:CGFloat thickness})'
  'setReservedThicknessForMarkers:':
    'prefix': 'setReservedThicknessForMarkers:'
    'body': 'setReservedThicknessForMarkers(${1:CGFloat thickness})'
  'setRuleThickness:':
    'prefix': 'setRuleThickness:'
    'body': 'setRuleThickness(${1:CGFloat thickness})'
  'setScrollView:':
    'prefix': 'setScrollView:'
    'body': 'setScrollView(${1:NSScrollView* scrollView})'
  'trackMarker:withMouseEvent:':
    'prefix': 'trackMarker:withMouseEvent:'
    'body': 'trackMarker(${1:NSRulerMarker* marker}, withMouseEvent:${2:NSEvent* event})'
  'activateWithOptions:':
    'prefix': 'activateWithOptions:'
    'body': 'activateWithOptions(${1:NSApplicationActivationOptions options})'
  'activationPolicy':
    'prefix': 'activationPolicy'
    'body': 'activationPolicy()'
  'bundleIdentifier':
    'prefix': 'bundleIdentifier'
    'body': 'bundleIdentifier()'
  'bundleURL':
    'prefix': 'bundleURL'
    'body': 'bundleURL()'
  'NSRunningApplication.currentApplication':
    'prefix': 'currentApplication'
    'body': 'currentApplication()'
  'executableArchitecture':
    'prefix': 'executableArchitecture'
    'body': 'executableArchitecture()'
  'executableURL':
    'prefix': 'executableURL'
    'body': 'executableURL()'
  'forceTerminate':
    'prefix': 'forceTerminate'
    'body': 'forceTerminate()'
  'hide':
    'prefix': 'hide'
    'body': 'hide()'
  'icon':
    'prefix': 'icon'
    'body': 'icon()'
  'isActive':
    'prefix': 'isActive'
    'body': 'isActive()'
  'isFinishedLaunching':
    'prefix': 'isFinishedLaunching'
    'body': 'isFinishedLaunching()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isTerminated':
    'prefix': 'isTerminated'
    'body': 'isTerminated()'
  'launchDate':
    'prefix': 'launchDate'
    'body': 'launchDate()'
  'localizedName':
    'prefix': 'localizedName'
    'body': 'localizedName()'
  'ownsMenuBar':
    'prefix': 'ownsMenuBar'
    'body': 'ownsMenuBar()'
  'processIdentifier':
    'prefix': 'processIdentifier'
    'body': 'processIdentifier()'
  'NSRunningApplication.runningApplicationWithProcessIdentifier:':
    'prefix': 'runningApplicationWithProcessIdentifier:'
    'body': 'runningApplicationWithProcessIdentifier(${1:pid_t pid})'
  'NSRunningApplication.runningApplicationsWithBundleIdentifier:':
    'prefix': 'runningApplicationsWithBundleIdentifier:'
    'body': 'runningApplicationsWithBundleIdentifier(${1:NSString* bundleIdentifier})'
  'terminate':
    'prefix': 'terminate'
    'body': 'terminate()'
  'NSRunningApplication.terminateAutomaticallyTerminableApplications':
    'prefix': 'terminateAutomaticallyTerminableApplications'
    'body': 'terminateAutomaticallyTerminableApplications()'
  'unhide':
    'prefix': 'unhide'
    'body': 'unhide()'
  'URL':
    'prefix': 'URL'
    'body': 'URL()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'allowedFileTypes':
    'prefix': 'allowedFileTypes'
    'body': 'allowedFileTypes()'
  'allowsOtherFileTypes':
    'prefix': 'allowsOtherFileTypes'
    'body': 'allowsOtherFileTypes()'
  'beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:':
    'prefix': 'beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'
    'body': 'beginSheetForDirectory(${1:NSString* path}, file:${2:NSString* name}, modalForWindow:${3:NSWindow* docWindow}, modalDelegate:${4:id delegate}, didEndSelector:${5:SEL didEndSelector}, contextInfo:${6:void* contextInfo})'
  'beginSheetModalForWindow:completionHandler:':
    'prefix': 'beginSheetModalForWindow:completionHandler:'
    'body': 'beginSheetModalForWindow(${1:NSWindow* window}, completionHandler:${2:void (^)(NSInteger) handler})'
  'beginWithCompletionHandler:':
    'prefix': 'beginWithCompletionHandler:'
    'body': 'beginWithCompletionHandler(${1:void (^)(NSInteger) handler})'
  'canCreateDirectories':
    'prefix': 'canCreateDirectories'
    'body': 'canCreateDirectories()'
  'canSelectHiddenExtension':
    'prefix': 'canSelectHiddenExtension'
    'body': 'canSelectHiddenExtension()'
  'cancel:':
    'prefix': 'cancel:'
    'body': 'cancel(${1:id sender})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'directory':
    'prefix': 'directory'
    'body': 'directory()'
  'directoryURL':
    'prefix': 'directoryURL'
    'body': 'directoryURL()'
  'filename':
    'prefix': 'filename'
    'body': 'filename()'
  'isExpanded':
    'prefix': 'isExpanded'
    'body': 'isExpanded()'
  'isExtensionHidden':
    'prefix': 'isExtensionHidden'
    'body': 'isExtensionHidden()'
  'message':
    'prefix': 'message'
    'body': 'message()'
  'nameFieldLabel':
    'prefix': 'nameFieldLabel'
    'body': 'nameFieldLabel()'
  'nameFieldStringValue':
    'prefix': 'nameFieldStringValue'
    'body': 'nameFieldStringValue()'
  'ok:':
    'prefix': 'ok:'
    'body': 'ok(${1:id sender})'
  'prompt':
    'prefix': 'prompt'
    'body': 'prompt()'
  'requiredFileType':
    'prefix': 'requiredFileType'
    'body': 'requiredFileType()'
  'runModal':
    'prefix': 'runModal'
    'body': 'runModal()'
  'runModalForDirectory:file:':
    'prefix': 'runModalForDirectory:file:'
    'body': 'runModalForDirectory(${1:NSString* path}, file:${2:NSString* name})'
  'NSSavePanel.savePanel':
    'prefix': 'savePanel'
    'body': 'savePanel()'
  'selectText:':
    'prefix': 'selectText:'
    'body': 'selectText(${1:id sender})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* view})'
  'setAllowedFileTypes:':
    'prefix': 'setAllowedFileTypes:'
    'body': 'setAllowedFileTypes(${1:NSArray* types})'
  'setAllowsOtherFileTypes:':
    'prefix': 'setAllowsOtherFileTypes:'
    'body': 'setAllowsOtherFileTypes(${1:BOOL flag})'
  'setCanCreateDirectories:':
    'prefix': 'setCanCreateDirectories:'
    'body': 'setCanCreateDirectories(${1:BOOL flag})'
  'setCanSelectHiddenExtension:':
    'prefix': 'setCanSelectHiddenExtension:'
    'body': 'setCanSelectHiddenExtension(${1:BOOL flag})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDirectory:':
    'prefix': 'setDirectory:'
    'body': 'setDirectory(${1:NSString* path})'
  'setDirectoryURL:':
    'prefix': 'setDirectoryURL:'
    'body': 'setDirectoryURL(${1:NSURL* url})'
  'setExtensionHidden:':
    'prefix': 'setExtensionHidden:'
    'body': 'setExtensionHidden(${1:BOOL flag})'
  'setMessage:':
    'prefix': 'setMessage:'
    'body': 'setMessage(${1:NSString* message})'
  'setNameFieldLabel:':
    'prefix': 'setNameFieldLabel:'
    'body': 'setNameFieldLabel(${1:NSString* label})'
  'setNameFieldStringValue:':
    'prefix': 'setNameFieldStringValue:'
    'body': 'setNameFieldStringValue(${1:NSString* value})'
  'setPrompt:':
    'prefix': 'setPrompt:'
    'body': 'setPrompt(${1:NSString* prompt})'
  'setRequiredFileType:':
    'prefix': 'setRequiredFileType:'
    'body': 'setRequiredFileType(${1:NSString* type})'
  'setShowsHiddenFiles:':
    'prefix': 'setShowsHiddenFiles:'
    'body': 'setShowsHiddenFiles(${1:BOOL flag})'
  'setShowsTagField:':
    'prefix': 'setShowsTagField:'
    'body': 'setShowsTagField(${1:BOOL flag})'
  'setTagNames:':
    'prefix': 'setTagNames:'
    'body': 'setTagNames(${1:NSArray* tagNames})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setTreatsFilePackagesAsDirectories:':
    'prefix': 'setTreatsFilePackagesAsDirectories:'
    'body': 'setTreatsFilePackagesAsDirectories(${1:BOOL flag})'
  'showsHiddenFiles':
    'prefix': 'showsHiddenFiles'
    'body': 'showsHiddenFiles()'
  'showsTagField':
    'prefix': 'showsTagField'
    'body': 'showsTagField()'
  'tagNames':
    'prefix': 'tagNames'
    'body': 'tagNames()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'treatsFilePackagesAsDirectories':
    'prefix': 'treatsFilePackagesAsDirectories'
    'body': 'treatsFilePackagesAsDirectories()'
  'validateVisibleColumns':
    'prefix': 'validateVisibleColumns'
    'body': 'validateVisibleColumns()'
  'backingAlignedRect:options:':
    'prefix': 'backingAlignedRect:options:'
    'body': 'backingAlignedRect(${1:NSRect aRect}, options:${2:NSAlignmentOptions options})'
  'backingScaleFactor':
    'prefix': 'backingScaleFactor'
    'body': 'backingScaleFactor()'
  'colorSpace':
    'prefix': 'colorSpace'
    'body': 'colorSpace()'
  'convertRectFromBacking:':
    'prefix': 'convertRectFromBacking:'
    'body': 'convertRectFromBacking(${1:NSRect aRect})'
  'convertRectToBacking:':
    'prefix': 'convertRectToBacking:'
    'body': 'convertRectToBacking(${1:NSRect aRect})'
  'NSScreen.deepestScreen':
    'prefix': 'deepestScreen'
    'body': 'deepestScreen()'
  'depth':
    'prefix': 'depth'
    'body': 'depth()'
  'deviceDescription':
    'prefix': 'deviceDescription'
    'body': 'deviceDescription()'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'NSScreen.mainScreen':
    'prefix': 'mainScreen'
    'body': 'mainScreen()'
  'NSScreen.screens':
    'prefix': 'screens'
    'body': 'screens()'
  'NSScreen.screensHaveSeparateSpaces':
    'prefix': 'screensHaveSeparateSpaces'
    'body': 'screensHaveSeparateSpaces()'
  'supportedWindowDepths':
    'prefix': 'supportedWindowDepths'
    'body': 'supportedWindowDepths()'
  'userSpaceScaleFactor':
    'prefix': 'userSpaceScaleFactor'
    'body': 'userSpaceScaleFactor()'
  'visibleFrame':
    'prefix': 'visibleFrame'
    'body': 'visibleFrame()'
  'addFloatingSubview:forAxis:':
    'prefix': 'addFloatingSubview:forAxis:'
    'body': 'addFloatingSubview(${1:NSView* view}, forAxis:${2:NSEventGestureAxis axis})'
  'allowsMagnification':
    'prefix': 'allowsMagnification'
    'body': 'allowsMagnification()'
  'autohidesScrollers':
    'prefix': 'autohidesScrollers'
    'body': 'autohidesScrollers()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'borderType':
    'prefix': 'borderType'
    'body': 'borderType()'
  'contentSize':
    'prefix': 'contentSize'
    'body': 'contentSize()'
  'NSScrollView.contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:':
    'prefix': 'contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:'
    'body': 'contentSizeForFrameSize(${1:NSSize fSize}, hasHorizontalScroller:${2:BOOL hFlag}, hasVerticalScroller:${3:BOOL vFlag}, borderType:${4:NSBorderType aType})'
  'NSScrollView.contentSizeForFrameSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:':
    'prefix': 'contentSizeForFrameSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'
    'body': 'contentSizeForFrameSize(${1:NSSize fSize}, horizontalScrollerClass:${2:Class horizontalScrollerClass}, verticalScrollerClass:${3:Class verticalScrollerClass}, borderType:${4:NSBorderType aType}, controlSize:${5:NSControlSize controlSize}, scrollerStyle:${6:NSScrollerStyle scrollerStyle})'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'documentCursor':
    'prefix': 'documentCursor'
    'body': 'documentCursor()'
  'documentView':
    'prefix': 'documentView'
    'body': 'documentView()'
  'documentVisibleRect':
    'prefix': 'documentVisibleRect'
    'body': 'documentVisibleRect()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'findBarPosition':
    'prefix': 'findBarPosition'
    'body': 'findBarPosition()'
  'flashScrollers':
    'prefix': 'flashScrollers'
    'body': 'flashScrollers()'
  'NSScrollView.frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:':
    'prefix': 'frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:'
    'body': 'frameSizeForContentSize(${1:NSSize cSize}, hasHorizontalScroller:${2:BOOL hFlag}, hasVerticalScroller:${3:BOOL vFlag}, borderType:${4:NSBorderType aType})'
  'NSScrollView.frameSizeForContentSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:':
    'prefix': 'frameSizeForContentSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'
    'body': 'frameSizeForContentSize(${1:NSSize cSize}, horizontalScrollerClass:${2:Class horizontalScrollerClass}, verticalScrollerClass:${3:Class verticalScrollerClass}, borderType:${4:NSBorderType aType}, controlSize:${5:NSControlSize controlSize}, scrollerStyle:${6:NSScrollerStyle scrollerStyle})'
  'hasHorizontalRuler':
    'prefix': 'hasHorizontalRuler'
    'body': 'hasHorizontalRuler()'
  'hasHorizontalScroller':
    'prefix': 'hasHorizontalScroller'
    'body': 'hasHorizontalScroller()'
  'hasVerticalRuler':
    'prefix': 'hasVerticalRuler'
    'body': 'hasVerticalRuler()'
  'hasVerticalScroller':
    'prefix': 'hasVerticalScroller'
    'body': 'hasVerticalScroller()'
  'horizontalLineScroll':
    'prefix': 'horizontalLineScroll'
    'body': 'horizontalLineScroll()'
  'horizontalPageScroll':
    'prefix': 'horizontalPageScroll'
    'body': 'horizontalPageScroll()'
  'horizontalRulerView':
    'prefix': 'horizontalRulerView'
    'body': 'horizontalRulerView()'
  'horizontalScrollElasticity':
    'prefix': 'horizontalScrollElasticity'
    'body': 'horizontalScrollElasticity()'
  'horizontalScroller':
    'prefix': 'horizontalScroller'
    'body': 'horizontalScroller()'
  'lineScroll':
    'prefix': 'lineScroll'
    'body': 'lineScroll()'
  'magnification':
    'prefix': 'magnification'
    'body': 'magnification()'
  'magnifyToFitRect:':
    'prefix': 'magnifyToFitRect:'
    'body': 'magnifyToFitRect(${1:NSRect rect})'
  'maxMagnification':
    'prefix': 'maxMagnification'
    'body': 'maxMagnification()'
  'minMagnification':
    'prefix': 'minMagnification'
    'body': 'minMagnification()'
  'pageScroll':
    'prefix': 'pageScroll'
    'body': 'pageScroll()'
  'reflectScrolledClipView:':
    'prefix': 'reflectScrolledClipView:'
    'body': 'reflectScrolledClipView(${1:NSClipView* cView})'
  'NSScrollView.rulerViewClass':
    'prefix': 'rulerViewClass'
    'body': 'rulerViewClass()'
  'rulersVisible':
    'prefix': 'rulersVisible'
    'body': 'rulersVisible()'
  'scrollWheel:':
    'prefix': 'scrollWheel:'
    'body': 'scrollWheel(${1:NSEvent* theEvent})'
  'scrollerKnobStyle':
    'prefix': 'scrollerKnobStyle'
    'body': 'scrollerKnobStyle()'
  'scrollerStyle':
    'prefix': 'scrollerStyle'
    'body': 'scrollerStyle()'
  'scrollsDynamically':
    'prefix': 'scrollsDynamically'
    'body': 'scrollsDynamically()'
  'setAllowsMagnification:':
    'prefix': 'setAllowsMagnification:'
    'body': 'setAllowsMagnification(${1:BOOL allowsMagnification})'
  'setAutohidesScrollers:':
    'prefix': 'setAutohidesScrollers:'
    'body': 'setAutohidesScrollers(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBorderType:':
    'prefix': 'setBorderType:'
    'body': 'setBorderType(${1:NSBorderType aType})'
  'setContentView:':
    'prefix': 'setContentView:'
    'body': 'setContentView(${1:NSClipView* contentView})'
  'setDocumentCursor:':
    'prefix': 'setDocumentCursor:'
    'body': 'setDocumentCursor(${1:NSCursor* anObj})'
  'setDocumentView:':
    'prefix': 'setDocumentView:'
    'body': 'setDocumentView(${1:NSView* aView})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setFindBarPosition:':
    'prefix': 'setFindBarPosition:'
    'body': 'setFindBarPosition(${1:NSScrollViewFindBarPosition position})'
  'setHasHorizontalRuler:':
    'prefix': 'setHasHorizontalRuler:'
    'body': 'setHasHorizontalRuler(${1:BOOL flag})'
  'setHasHorizontalScroller:':
    'prefix': 'setHasHorizontalScroller:'
    'body': 'setHasHorizontalScroller(${1:BOOL flag})'
  'setHasVerticalRuler:':
    'prefix': 'setHasVerticalRuler:'
    'body': 'setHasVerticalRuler(${1:BOOL flag})'
  'setHasVerticalScroller:':
    'prefix': 'setHasVerticalScroller:'
    'body': 'setHasVerticalScroller(${1:BOOL flag})'
  'setHorizontalLineScroll:':
    'prefix': 'setHorizontalLineScroll:'
    'body': 'setHorizontalLineScroll(${1:CGFloat value})'
  'setHorizontalPageScroll:':
    'prefix': 'setHorizontalPageScroll:'
    'body': 'setHorizontalPageScroll(${1:CGFloat value})'
  'setHorizontalRulerView:':
    'prefix': 'setHorizontalRulerView:'
    'body': 'setHorizontalRulerView(${1:NSRulerView* ruler})'
  'setHorizontalScrollElasticity:':
    'prefix': 'setHorizontalScrollElasticity:'
    'body': 'setHorizontalScrollElasticity(${1:NSScrollElasticity elasticity})'
  'setHorizontalScroller:':
    'prefix': 'setHorizontalScroller:'
    'body': 'setHorizontalScroller(${1:NSScroller* anObject})'
  'setLineScroll:':
    'prefix': 'setLineScroll:'
    'body': 'setLineScroll(${1:CGFloat value})'
  'setMagnification:':
    'prefix': 'setMagnification:'
    'body': 'setMagnification(${1:CGFloat magnification})'
  'setMagnification:centeredAtPoint:':
    'prefix': 'setMagnification:centeredAtPoint:'
    'body': 'setMagnification(${1:CGFloat magnification}, centeredAtPoint:${2:NSPoint point})'
  'setMaxMagnification:':
    'prefix': 'setMaxMagnification:'
    'body': 'setMaxMagnification(${1:CGFloat maxMagnification})'
  'setMinMagnification:':
    'prefix': 'setMinMagnification:'
    'body': 'setMinMagnification(${1:CGFloat minMagnification})'
  'setPageScroll:':
    'prefix': 'setPageScroll:'
    'body': 'setPageScroll(${1:CGFloat value})'
  'NSScrollView.setRulerViewClass:':
    'prefix': 'setRulerViewClass:'
    'body': 'setRulerViewClass(${1:Class rulerViewClass})'
  'setRulersVisible:':
    'prefix': 'setRulersVisible:'
    'body': 'setRulersVisible(${1:BOOL flag})'
  'setScrollerKnobStyle:':
    'prefix': 'setScrollerKnobStyle:'
    'body': 'setScrollerKnobStyle(${1:NSScrollerKnobStyle newScrollerKnobStyle})'
  'setScrollerStyle:':
    'prefix': 'setScrollerStyle:'
    'body': 'setScrollerStyle(${1:NSScrollerStyle newScrollerStyle})'
  'setScrollsDynamically:':
    'prefix': 'setScrollsDynamically:'
    'body': 'setScrollsDynamically(${1:BOOL flag})'
  'setUsesPredominantAxisScrolling:':
    'prefix': 'setUsesPredominantAxisScrolling:'
    'body': 'setUsesPredominantAxisScrolling(${1:BOOL predominantAxisScrolling})'
  'setVerticalLineScroll:':
    'prefix': 'setVerticalLineScroll:'
    'body': 'setVerticalLineScroll(${1:CGFloat value})'
  'setVerticalPageScroll:':
    'prefix': 'setVerticalPageScroll:'
    'body': 'setVerticalPageScroll(${1:CGFloat value})'
  'setVerticalRulerView:':
    'prefix': 'setVerticalRulerView:'
    'body': 'setVerticalRulerView(${1:NSRulerView* ruler})'
  'setVerticalScrollElasticity:':
    'prefix': 'setVerticalScrollElasticity:'
    'body': 'setVerticalScrollElasticity(${1:NSScrollElasticity elasticity})'
  'setVerticalScroller:':
    'prefix': 'setVerticalScroller:'
    'body': 'setVerticalScroller(${1:NSScroller* anObject})'
  'tile':
    'prefix': 'tile'
    'body': 'tile()'
  'usesPredominantAxisScrolling':
    'prefix': 'usesPredominantAxisScrolling'
    'body': 'usesPredominantAxisScrolling()'
  'verticalLineScroll':
    'prefix': 'verticalLineScroll'
    'body': 'verticalLineScroll()'
  'verticalPageScroll':
    'prefix': 'verticalPageScroll'
    'body': 'verticalPageScroll()'
  'verticalRulerView':
    'prefix': 'verticalRulerView'
    'body': 'verticalRulerView()'
  'verticalScrollElasticity':
    'prefix': 'verticalScrollElasticity'
    'body': 'verticalScrollElasticity()'
  'verticalScroller':
    'prefix': 'verticalScroller'
    'body': 'verticalScroller()'
  'arrowsPosition':
    'prefix': 'arrowsPosition'
    'body': 'arrowsPosition()'
  'checkSpaceForParts':
    'prefix': 'checkSpaceForParts'
    'body': 'checkSpaceForParts()'
  'controlSize':
    'prefix': 'controlSize'
    'body': 'controlSize()'
  'controlTint':
    'prefix': 'controlTint'
    'body': 'controlTint()'
  'drawArrow:highlight:':
    'prefix': 'drawArrow:highlight:'
    'body': 'drawArrow(${1:NSScrollerArrow whichArrow}, highlight:${2:BOOL flag})'
  'drawKnob':
    'prefix': 'drawKnob'
    'body': 'drawKnob()'
  'drawKnobSlotInRect:highlight:':
    'prefix': 'drawKnobSlotInRect:highlight:'
    'body': 'drawKnobSlotInRect(${1:NSRect slotRect}, highlight:${2:BOOL flag})'
  'drawParts':
    'prefix': 'drawParts'
    'body': 'drawParts()'
  'highlight:':
    'prefix': 'highlight:'
    'body': 'highlight(${1:BOOL flag})'
  'hitPart':
    'prefix': 'hitPart'
    'body': 'hitPart()'
  'NSScroller.isCompatibleWithOverlayScrollers':
    'prefix': 'isCompatibleWithOverlayScrollers'
    'body': 'isCompatibleWithOverlayScrollers()'
  'knobProportion':
    'prefix': 'knobProportion'
    'body': 'KnobProportion()'
  'knobStyle':
    'prefix': 'knobStyle'
    'body': 'KnobStyle()'
  'NSScroller.preferredScrollerStyle':
    'prefix': 'preferredScrollerStyle'
    'body': 'preferredScrollerStyle()'
  'rectForPart:':
    'prefix': 'rectForPart:'
    'body': 'rectForPart(${1:NSScrollerPart partCode})'
  'scrollerStyle':
    'prefix': 'scrollerStyle'
    'body': 'scrollerStyle()'
  'NSScroller.scrollerWidth':
    'prefix': 'scrollerWidth'
    'body': 'scrollerWidth()'
  'NSScroller.scrollerWidthForControlSize:':
    'prefix': 'scrollerWidthForControlSize:'
    'body': 'scrollerWidthForControlSize(${1:NSControlSize controlSize})'
  'NSScroller.scrollerWidthForControlSize:scrollerStyle:':
    'prefix': 'scrollerWidthForControlSize:scrollerStyle:'
    'body': 'scrollerWidthForControlSize(${1:NSControlSize controlSize}, scrollerStyle:${2:NSScrollerStyle scrollerStyle})'
  'setArrowsPosition:':
    'prefix': 'setArrowsPosition:'
    'body': 'setArrowsPosition(${1:NSScrollArrowPosition where})'
  'setControlSize:':
    'prefix': 'setControlSize:'
    'body': 'setControlSize(${1:NSControlSize controlSize})'
  'setControlTint:':
    'prefix': 'setControlTint:'
    'body': 'setControlTint(${1:NSControlTint controlTint})'
  'setFloatValue:knobProportion:':
    'prefix': 'setFloatValue:knobProportion:'
    'body': 'setFloatValue(${1:float aFloat}, knobProportion:${2:CGFloat proportion})'
  'setKnobProportion:':
    'prefix': 'setKnobProportion:'
    'body': 'setKnobProportion(${1:CGFloat proportion})'
  'setKnobStyle:':
    'prefix': 'setKnobStyle:'
    'body': 'setKnobStyle(${1:NSScrollerKnobStyle newKnobStyle})'
  'setScrollerStyle:':
    'prefix': 'setScrollerStyle:'
    'body': 'setScrollerStyle(${1:NSScrollerStyle newScrollerStyle})'
  'testPart:':
    'prefix': 'testPart:'
    'body': 'testPart(${1:NSPoint thePoint})'
  'trackKnob:':
    'prefix': 'trackKnob:'
    'body': 'trackKnob(${1:NSEvent* theEvent})'
  'trackScrollButtons:':
    'prefix': 'trackScrollButtons:'
    'body': 'trackScrollButtons(${1:NSEvent* theEvent})'
  'usableParts':
    'prefix': 'usableParts'
    'body': 'usableParts()'
  'recentSearches':
    'prefix': 'recentSearches'
    'body': 'recentSearches()'
  'recentsAutosaveName':
    'prefix': 'recentsAutosaveName'
    'body': 'recentsAutosaveName()'
  'setRecentSearches:':
    'prefix': 'setRecentSearches:'
    'body': 'setRecentSearches(${1:NSArray* searches})'
  'setRecentsAutosaveName:':
    'prefix': 'setRecentsAutosaveName:'
    'body': 'setRecentsAutosaveName(${1:NSString* string})'
  'cancelButtonCell':
    'prefix': 'cancelButtonCell'
    'body': 'cancelButtonCell()'
  'cancelButtonRectForBounds:':
    'prefix': 'cancelButtonRectForBounds:'
    'body': 'cancelButtonRectForBounds(${1:NSRect rect})'
  'maximumRecents':
    'prefix': 'maximumRecents'
    'body': 'maximumRecents()'
  'recentSearches':
    'prefix': 'recentSearches'
    'body': 'recentSearches()'
  'recentsAutosaveName':
    'prefix': 'recentsAutosaveName'
    'body': 'recentsAutosaveName()'
  'resetCancelButtonCell':
    'prefix': 'resetCancelButtonCell'
    'body': 'resetCancelButtonCell()'
  'resetSearchButtonCell':
    'prefix': 'resetSearchButtonCell'
    'body': 'resetSearchButtonCell()'
  'searchButtonCell':
    'prefix': 'searchButtonCell'
    'body': 'searchButtonCell()'
  'searchButtonRectForBounds:':
    'prefix': 'searchButtonRectForBounds:'
    'body': 'searchButtonRectForBounds(${1:NSRect rect})'
  'searchMenuTemplate':
    'prefix': 'searchMenuTemplate'
    'body': 'searchMenuTemplate()'
  'searchTextRectForBounds:':
    'prefix': 'searchTextRectForBounds:'
    'body': 'searchTextRectForBounds(${1:NSRect rect})'
  'sendsSearchStringImmediately':
    'prefix': 'sendsSearchStringImmediately'
    'body': 'sendsSearchStringImmediately()'
  'sendsWholeSearchString':
    'prefix': 'sendsWholeSearchString'
    'body': 'sendsWholeSearchString()'
  'setCancelButtonCell:':
    'prefix': 'setCancelButtonCell:'
    'body': 'setCancelButtonCell(${1:NSButtonCell* cell})'
  'setMaximumRecents:':
    'prefix': 'setMaximumRecents:'
    'body': 'setMaximumRecents(${1:NSInteger maxRecents})'
  'setRecentSearches:':
    'prefix': 'setRecentSearches:'
    'body': 'setRecentSearches(${1:NSArray* searches})'
  'setRecentsAutosaveName:':
    'prefix': 'setRecentsAutosaveName:'
    'body': 'setRecentsAutosaveName(${1:NSString* string})'
  'setSearchButtonCell:':
    'prefix': 'setSearchButtonCell:'
    'body': 'setSearchButtonCell(${1:NSButtonCell* cell})'
  'setSearchMenuTemplate:':
    'prefix': 'setSearchMenuTemplate:'
    'body': 'setSearchMenuTemplate(${1:NSMenu* menu})'
  'setSendsSearchStringImmediately:':
    'prefix': 'setSendsSearchStringImmediately:'
    'body': 'setSendsSearchStringImmediately(${1:BOOL flag})'
  'setSendsWholeSearchString:':
    'prefix': 'setSendsWholeSearchString:'
    'body': 'setSendsWholeSearchString(${1:BOOL flag})'
  'echosBullets':
    'prefix': 'echosBullets'
    'body': 'echosBullets()'
  'setEchosBullets:':
    'prefix': 'setEchosBullets:'
    'body': 'setEchosBullets(${1:BOOL flag})'
  'drawSegment:inFrame:withView:':
    'prefix': 'drawSegment:inFrame:withView:'
    'body': 'drawSegment(${1:NSInteger segment}, inFrame:${2:NSRect frame}, withView:${3:NSView* controlView})'
  'imageForSegment:':
    'prefix': 'imageForSegment:'
    'body': 'imageForSegment(${1:NSInteger segment})'
  'imageScalingForSegment:':
    'prefix': 'imageScalingForSegment:'
    'body': 'imageScalingForSegment(${1:NSInteger segment})'
  'interiorBackgroundStyleForSegment:':
    'prefix': 'interiorBackgroundStyleForSegment:'
    'body': 'interiorBackgroundStyleForSegment(${1:NSInteger segment})'
  'isEnabledForSegment:':
    'prefix': 'isEnabledForSegment:'
    'body': 'isEnabledForSegment(${1:NSInteger segment})'
  'isSelectedForSegment:':
    'prefix': 'isSelectedForSegment:'
    'body': 'isSelectedForSegment(${1:NSInteger segment})'
  'labelForSegment:':
    'prefix': 'labelForSegment:'
    'body': 'labelForSegment(${1:NSInteger segment})'
  'makeNextSegmentKey':
    'prefix': 'makeNextSegmentKey'
    'body': 'makeNextSegmentKey()'
  'makePreviousSegmentKey':
    'prefix': 'makePreviousSegmentKey'
    'body': 'makePreviousSegmentKey()'
  'menuForSegment:':
    'prefix': 'menuForSegment:'
    'body': 'menuForSegment(${1:NSInteger segment})'
  'segmentCount':
    'prefix': 'segmentCount'
    'body': 'segmentCount()'
  'segmentStyle':
    'prefix': 'segmentStyle'
    'body': 'segmentStyle()'
  'selectSegmentWithTag:':
    'prefix': 'selectSegmentWithTag:'
    'body': 'selectSegmentWithTag(${1:NSInteger tag})'
  'selectedSegment':
    'prefix': 'selectedSegment'
    'body': 'selectedSegment()'
  'setEnabled:forSegment:':
    'prefix': 'setEnabled:forSegment:'
    'body': 'setEnabled(${1:BOOL enabled}, forSegment:${2:NSInteger segment})'
  'setImage:forSegment:':
    'prefix': 'setImage:forSegment:'
    'body': 'setImage(${1:NSImage* image}, forSegment:${2:NSInteger segment})'
  'setImageScaling:forSegment:':
    'prefix': 'setImageScaling:forSegment:'
    'body': 'setImageScaling(${1:NSImageScaling scaling}, forSegment:${2:NSInteger segment})'
  'setLabel:forSegment:':
    'prefix': 'setLabel:forSegment:'
    'body': 'setLabel(${1:NSString* label}, forSegment:${2:NSInteger segment})'
  'setMenu:forSegment:':
    'prefix': 'setMenu:forSegment:'
    'body': 'setMenu(${1:NSMenu* menu}, forSegment:${2:NSInteger segment})'
  'setSegmentCount:':
    'prefix': 'setSegmentCount:'
    'body': 'setSegmentCount(${1:NSInteger count})'
  'setSegmentStyle:':
    'prefix': 'setSegmentStyle:'
    'body': 'setSegmentStyle(${1:NSSegmentStyle segmentStyle})'
  'setSelected:forSegment:':
    'prefix': 'setSelected:forSegment:'
    'body': 'setSelected(${1:BOOL selected}, forSegment:${2:NSInteger segment})'
  'setSelectedSegment:':
    'prefix': 'setSelectedSegment:'
    'body': 'setSelectedSegment(${1:NSInteger selectedSegment})'
  'setTag:forSegment:':
    'prefix': 'setTag:forSegment:'
    'body': 'setTag(${1:NSInteger tag}, forSegment:${2:NSInteger segment})'
  'setToolTip:forSegment:':
    'prefix': 'setToolTip:forSegment:'
    'body': 'setToolTip(${1:NSString* toolTip}, forSegment:${2:NSInteger segment})'
  'setTrackingMode:':
    'prefix': 'setTrackingMode:'
    'body': 'setTrackingMode(${1:NSSegmentSwitchTracking trackingMode})'
  'setWidth:forSegment:':
    'prefix': 'setWidth:forSegment:'
    'body': 'setWidth(${1:CGFloat width}, forSegment:${2:NSInteger segment})'
  'tagForSegment:':
    'prefix': 'tagForSegment:'
    'body': 'tagForSegment(${1:NSInteger segment})'
  'toolTipForSegment:':
    'prefix': 'toolTipForSegment:'
    'body': 'toolTipForSegment(${1:NSInteger segment})'
  'trackingMode':
    'prefix': 'trackingMode'
    'body': 'trackingMode()'
  'widthForSegment:':
    'prefix': 'widthForSegment:'
    'body': 'widthForSegment(${1:NSInteger segment})'
  'imageForSegment:':
    'prefix': 'imageForSegment:'
    'body': 'imageForSegment(${1:NSInteger segment})'
  'imageScalingForSegment:':
    'prefix': 'imageScalingForSegment:'
    'body': 'imageScalingForSegment(${1:NSInteger segment})'
  'isEnabledForSegment:':
    'prefix': 'isEnabledForSegment:'
    'body': 'isEnabledForSegment(${1:NSInteger segment})'
  'isSelectedForSegment:':
    'prefix': 'isSelectedForSegment:'
    'body': 'isSelectedForSegment(${1:NSInteger segment})'
  'labelForSegment:':
    'prefix': 'labelForSegment:'
    'body': 'labelForSegment(${1:NSInteger segment})'
  'menuForSegment:':
    'prefix': 'menuForSegment:'
    'body': 'menuForSegment(${1:NSInteger segment})'
  'segmentCount':
    'prefix': 'segmentCount'
    'body': 'segmentCount()'
  'segmentStyle':
    'prefix': 'segmentStyle'
    'body': 'segmentStyle()'
  'selectSegmentWithTag:':
    'prefix': 'selectSegmentWithTag:'
    'body': 'selectSegmentWithTag(${1:NSInteger tag})'
  'selectedSegment':
    'prefix': 'selectedSegment'
    'body': 'selectedSegment()'
  'setEnabled:forSegment:':
    'prefix': 'setEnabled:forSegment:'
    'body': 'setEnabled(${1:BOOL enabled}, forSegment:${2:NSInteger segment})'
  'setImage:forSegment:':
    'prefix': 'setImage:forSegment:'
    'body': 'setImage(${1:NSImage* image}, forSegment:${2:NSInteger segment})'
  'setImageScaling:forSegment:':
    'prefix': 'setImageScaling:forSegment:'
    'body': 'setImageScaling(${1:NSImageScaling scaling}, forSegment:${2:NSInteger segment})'
  'setLabel:forSegment:':
    'prefix': 'setLabel:forSegment:'
    'body': 'setLabel(${1:NSString* label}, forSegment:${2:NSInteger segment})'
  'setMenu:forSegment:':
    'prefix': 'setMenu:forSegment:'
    'body': 'setMenu(${1:NSMenu* menu}, forSegment:${2:NSInteger segment})'
  'setSegmentCount:':
    'prefix': 'setSegmentCount:'
    'body': 'setSegmentCount(${1:NSInteger count})'
  'setSegmentStyle:':
    'prefix': 'setSegmentStyle:'
    'body': 'setSegmentStyle(${1:NSSegmentStyle segmentStyle})'
  'setSelected:forSegment:':
    'prefix': 'setSelected:forSegment:'
    'body': 'setSelected(${1:BOOL selected}, forSegment:${2:NSInteger segment})'
  'setSelectedSegment:':
    'prefix': 'setSelectedSegment:'
    'body': 'setSelectedSegment(${1:NSInteger selectedSegment})'
  'setWidth:forSegment:':
    'prefix': 'setWidth:forSegment:'
    'body': 'setWidth(${1:CGFloat width}, forSegment:${2:NSInteger segment})'
  'widthForSegment:':
    'prefix': 'widthForSegment:'
    'body': 'widthForSegment(${1:NSInteger segment})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'set':
    'prefix': 'set'
    'body': 'set()'
  'setShadowBlurRadius:':
    'prefix': 'setShadowBlurRadius:'
    'body': 'setShadowBlurRadius(${1:CGFloat val})'
  'setShadowColor:':
    'prefix': 'setShadowColor:'
    'body': 'setShadowColor(${1:NSColor* color})'
  'setShadowOffset:':
    'prefix': 'setShadowOffset:'
    'body': 'setShadowOffset(${1:NSSize offset})'
  'shadowBlurRadius':
    'prefix': 'shadowBlurRadius'
    'body': 'shadowBlurRadius()'
  'shadowColor':
    'prefix': 'shadowColor'
    'body': 'shadowColor()'
  'shadowOffset':
    'prefix': 'shadowOffset'
    'body': 'shadowOffset()'
  'accountName':
    'prefix': 'accountName'
    'body': 'accountName()'
  'alternateImage':
    'prefix': 'alternateImage'
    'body': 'alternateImage()'
  'attachmentFileURLs':
    'prefix': 'attachmentFileURLs'
    'body': 'attachmentFileURLs()'
  'canPerformWithItems:':
    'prefix': 'canPerformWithItems:'
    'body': 'canPerformWithItems(${1:NSArray* items})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithTitle:image:alternateImage:handler:':
    'prefix': 'initWithTitle:image:alternateImage:handler:'
    'body': 'initWithTitle(${1:NSString* title}, image:${2:NSImage* image}, alternateImage:${3:NSImage* alternateImage}, handler:${4:void (^)(void) block})'
  'menuItemTitle':
    'prefix': 'menuItemTitle'
    'body': 'menuItemTitle()'
  'messageBody':
    'prefix': 'messageBody'
    'body': 'messageBody()'
  'performWithItems:':
    'prefix': 'performWithItems:'
    'body': 'performWithItems(${1:NSArray* items})'
  'permanentLink':
    'prefix': 'permanentLink'
    'body': 'permanentLink()'
  'recipients':
    'prefix': 'recipients'
    'body': 'recipients()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setMenuItemTitle:':
    'prefix': 'setMenuItemTitle:'
    'body': 'setMenuItemTitle(${1:NSString* menuItemTitle})'
  'setRecipients:':
    'prefix': 'setRecipients:'
    'body': 'setRecipients(${1:NSArray* recipients})'
  'setSubject:':
    'prefix': 'setSubject:'
    'body': 'setSubject(${1:NSString* subject})'
  'NSSharingService.sharingServiceNamed:':
    'prefix': 'sharingServiceNamed:'
    'body': 'sharingServiceNamed(${1:NSString* serviceName})'
  'NSSharingService.sharingServicesForItems:':
    'prefix': 'sharingServicesForItems:'
    'body': 'sharingServicesForItems(${1:NSArray* items})'
  'subject':
    'prefix': 'subject'
    'body': 'subject()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithItems:':
    'prefix': 'initWithItems:'
    'body': 'initWithItems(${1:NSArray* items})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'showRelativeToRect:ofView:preferredEdge:':
    'prefix': 'showRelativeToRect:ofView:preferredEdge:'
    'body': 'showRelativeToRect(${1:NSRect rect}, ofView:${2:NSView* view}, preferredEdge:${3:NSRectEdge preferredEdge})'
  'acceptsFirstMouse:':
    'prefix': 'acceptsFirstMouse:'
    'body': 'acceptsFirstMouse(${1:NSEvent* theEvent})'
  'allowsTickMarkValuesOnly':
    'prefix': 'allowsTickMarkValuesOnly'
    'body': 'allowsTickMarkValuesOnly()'
  'altIncrementValue':
    'prefix': 'altIncrementValue'
    'body': 'altIncrementValue()'
  'closestTickMarkValueToValue:':
    'prefix': 'closestTickMarkValueToValue:'
    'body': 'closestTickMarkValueToValue(${1:double value})'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'indexOfTickMarkAtPoint:':
    'prefix': 'indexOfTickMarkAtPoint:'
    'body': 'indexOfTickMarkAtPoint(${1:NSPoint point})'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'knobThickness':
    'prefix': 'knobThickness'
    'body': 'KnobThickness()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'numberOfTickMarks':
    'prefix': 'numberOfTickMarks'
    'body': 'numberOfTickMarks()'
  'rectOfTickMarkAtIndex:':
    'prefix': 'rectOfTickMarkAtIndex:'
    'body': 'rectOfTickMarkAtIndex(${1:NSInteger index})'
  'setAllowsTickMarkValuesOnly:':
    'prefix': 'setAllowsTickMarkValuesOnly:'
    'body': 'setAllowsTickMarkValuesOnly(${1:BOOL yorn})'
  'setAltIncrementValue:':
    'prefix': 'setAltIncrementValue:'
    'body': 'setAltIncrementValue(${1:double incValue})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* backgroundImage})'
  'setKnobThickness:':
    'prefix': 'setKnobThickness:'
    'body': 'setKnobThickness(${1:CGFloat aFloat})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double aDouble})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double aDouble})'
  'setNumberOfTickMarks:':
    'prefix': 'setNumberOfTickMarks:'
    'body': 'setNumberOfTickMarks(${1:NSInteger count})'
  'setTickMarkPosition:':
    'prefix': 'setTickMarkPosition:'
    'body': 'setTickMarkPosition(${1:NSTickMarkPosition position})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleCell:':
    'prefix': 'setTitleCell:'
    'body': 'setTitleCell(${1:NSCell* aCell})'
  'setTitleColor:':
    'prefix': 'setTitleColor:'
    'body': 'setTitleColor(${1:NSColor* newColor})'
  'setTitleFont:':
    'prefix': 'setTitleFont:'
    'body': 'setTitleFont(${1:NSFont* fontObj})'
  'tickMarkPosition':
    'prefix': 'tickMarkPosition'
    'body': 'tickMarkPosition()'
  'tickMarkValueAtIndex:':
    'prefix': 'tickMarkValueAtIndex:'
    'body': 'tickMarkValueAtIndex(${1:NSInteger index})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleCell':
    'prefix': 'titleCell'
    'body': 'titleCell()'
  'titleColor':
    'prefix': 'titleColor'
    'body': 'titleColor()'
  'titleFont':
    'prefix': 'titleFont'
    'body': 'titleFont()'
  'allowsTickMarkValuesOnly':
    'prefix': 'allowsTickMarkValuesOnly'
    'body': 'allowsTickMarkValuesOnly()'
  'altIncrementValue':
    'prefix': 'altIncrementValue'
    'body': 'altIncrementValue()'
  'barRectFlipped:':
    'prefix': 'barRectFlipped:'
    'body': 'barRectFlipped(${1:BOOL flipped})'
  'closestTickMarkValueToValue:':
    'prefix': 'closestTickMarkValueToValue:'
    'body': 'closestTickMarkValueToValue(${1:double value})'
  'drawBarInside:flipped:':
    'prefix': 'drawBarInside:flipped:'
    'body': 'drawBarInside(${1:NSRect aRect}, flipped:${2:BOOL flipped})'
  'drawKnob':
    'prefix': 'drawKnob'
    'body': 'drawKnob()'
  'drawKnob:':
    'prefix': 'drawKnob:'
    'body': 'drawKnob(${1:NSRect knobRect})'
  'drawTickMarks':
    'prefix': 'drawTickMarks'
    'body': 'drawTickMarks()'
  'indexOfTickMarkAtPoint:':
    'prefix': 'indexOfTickMarkAtPoint:'
    'body': 'indexOfTickMarkAtPoint(${1:NSPoint point})'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'knobRectFlipped:':
    'prefix': 'knobRectFlipped:'
    'body': 'KnobRectFlipped(${1:BOOL flipped})'
  'knobThickness':
    'prefix': 'knobThickness'
    'body': 'KnobThickness()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'numberOfTickMarks':
    'prefix': 'numberOfTickMarks'
    'body': 'numberOfTickMarks()'
  'NSSliderCell.prefersTrackingUntilMouseUp':
    'prefix': 'prefersTrackingUntilMouseUp'
    'body': 'prefersTrackingUntilMouseUp()'
  'rectOfTickMarkAtIndex:':
    'prefix': 'rectOfTickMarkAtIndex:'
    'body': 'rectOfTickMarkAtIndex(${1:NSInteger index})'
  'setAllowsTickMarkValuesOnly:':
    'prefix': 'setAllowsTickMarkValuesOnly:'
    'body': 'setAllowsTickMarkValuesOnly(${1:BOOL yorn})'
  'setAltIncrementValue:':
    'prefix': 'setAltIncrementValue:'
    'body': 'setAltIncrementValue(${1:double incValue})'
  'setKnobThickness:':
    'prefix': 'setKnobThickness:'
    'body': 'setKnobThickness(${1:CGFloat aFloat})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double aDouble})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double aDouble})'
  'setNumberOfTickMarks:':
    'prefix': 'setNumberOfTickMarks:'
    'body': 'setNumberOfTickMarks(${1:NSInteger count})'
  'setSliderType:':
    'prefix': 'setSliderType:'
    'body': 'setSliderType(${1:NSSliderType sliderType})'
  'setTickMarkPosition:':
    'prefix': 'setTickMarkPosition:'
    'body': 'setTickMarkPosition(${1:NSTickMarkPosition position})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleCell:':
    'prefix': 'setTitleCell:'
    'body': 'setTitleCell(${1:NSCell* aCell})'
  'setTitleColor:':
    'prefix': 'setTitleColor:'
    'body': 'setTitleColor(${1:NSColor* newColor})'
  'setTitleFont:':
    'prefix': 'setTitleFont:'
    'body': 'setTitleFont(${1:NSFont* fontObj})'
  'sliderType':
    'prefix': 'sliderType'
    'body': 'sliderType()'
  'tickMarkPosition':
    'prefix': 'tickMarkPosition'
    'body': 'tickMarkPosition()'
  'tickMarkValueAtIndex:':
    'prefix': 'tickMarkValueAtIndex:'
    'body': 'tickMarkValueAtIndex(${1:NSInteger index})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'titleCell':
    'prefix': 'titleCell'
    'body': 'titleCell()'
  'titleColor':
    'prefix': 'titleColor'
    'body': 'titleColor()'
  'titleFont':
    'prefix': 'titleFont'
    'body': 'titleFont()'
  'trackRect':
    'prefix': 'trackRect'
    'body': 'trackRect()'
  'NSSound.canInitWithPasteboard:':
    'prefix': 'canInitWithPasteboard:'
    'body': 'canInitWithPasteboard(${1:NSPasteboard* pasteboard})'
  'channelMapping':
    'prefix': 'channelMapping'
    'body': 'channelMapping()'
  'currentTime':
    'prefix': 'currentTime'
    'body': 'currentTime()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'duration':
    'prefix': 'duration'
    'body': 'duration()'
  'initWithContentsOfFile:byReference:':
    'prefix': 'initWithContentsOfFile:byReference:'
    'body': 'initWithContentsOfFile(${1:NSString* path}, byReference:${2:BOOL byRef})'
  'initWithContentsOfURL:byReference:':
    'prefix': 'initWithContentsOfURL:byReference:'
    'body': 'initWithContentsOfURL(${1:NSURL* url}, byReference:${2:BOOL byRef})'
  'initWithData:':
    'prefix': 'initWithData:'
    'body': 'initWithData(${1:NSData* data})'
  'initWithPasteboard:':
    'prefix': 'initWithPasteboard:'
    'body': 'initWithPasteboard(${1:NSPasteboard* pasteboard})'
  'isPlaying':
    'prefix': 'isPlaying'
    'body': 'isPlaying()'
  'loops':
    'prefix': 'loops'
    'body': 'loops()'
  'name':
    'prefix': 'name'
    'body': 'name()'
  'pause':
    'prefix': 'pause'
    'body': 'pause()'
  'play':
    'prefix': 'play'
    'body': 'play()'
  'playbackDeviceIdentifier':
    'prefix': 'playbackDeviceIdentifier'
    'body': 'playbackDeviceIdentifier()'
  'resume':
    'prefix': 'resume'
    'body': 'resume()'
  'setChannelMapping:':
    'prefix': 'setChannelMapping:'
    'body': 'setChannelMapping(${1:NSArray* channelMapping})'
  'setCurrentTime:':
    'prefix': 'setCurrentTime:'
    'body': 'setCurrentTime(${1:NSTimeInterval seconds})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id aDelegate})'
  'setLoops:':
    'prefix': 'setLoops:'
    'body': 'setLoops(${1:BOOL val})'
  'setName:':
    'prefix': 'setName:'
    'body': 'setName(${1:NSString* string})'
  'setPlaybackDeviceIdentifier:':
    'prefix': 'setPlaybackDeviceIdentifier:'
    'body': 'setPlaybackDeviceIdentifier(${1:NSString* deviceUID})'
  'setVolume:':
    'prefix': 'setVolume:'
    'body': 'setVolume(${1:float volume})'
  'NSSound.soundNamed:':
    'prefix': 'soundNamed:'
    'body': 'soundNamed(${1:NSString* name})'
  'NSSound.soundUnfilteredFileTypes':
    'prefix': 'soundUnfilteredFileTypes'
    'body': 'soundUnfilteredFileTypes()'
  'NSSound.soundUnfilteredPasteboardTypes':
    'prefix': 'soundUnfilteredPasteboardTypes'
    'body': 'soundUnfilteredPasteboardTypes()'
  'NSSound.soundUnfilteredTypes':
    'prefix': 'soundUnfilteredTypes'
    'body': 'soundUnfilteredTypes()'
  'stop':
    'prefix': 'stop'
    'body': 'stop()'
  'volume':
    'prefix': 'volume'
    'body': 'volume()'
  'writeToPasteboard:':
    'prefix': 'writeToPasteboard:'
    'body': 'writeToPasteboard(${1:NSPasteboard* pasteboard})'
  'blocksOtherRecognizers':
    'prefix': 'blocksOtherRecognizers'
    'body': 'blocksOtherRecognizers()'
  'commands':
    'prefix': 'commands'
    'body': 'commands()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'displayedCommandsTitle':
    'prefix': 'displayedCommandsTitle'
    'body': 'displayedCommandsTitle()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'listensInForegroundOnly':
    'prefix': 'listensInForegroundOnly'
    'body': 'listensInForegroundOnly()'
  'setBlocksOtherRecognizers:':
    'prefix': 'setBlocksOtherRecognizers:'
    'body': 'setBlocksOtherRecognizers(${1:BOOL flag})'
  'setCommands:':
    'prefix': 'setCommands:'
    'body': 'setCommands(${1:NSArray* commands})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDisplayedCommandsTitle:':
    'prefix': 'setDisplayedCommandsTitle:'
    'body': 'setDisplayedCommandsTitle(${1:NSString* title})'
  'setListensInForegroundOnly:':
    'prefix': 'setListensInForegroundOnly:'
    'body': 'setListensInForegroundOnly(${1:BOOL flag})'
  'startListening':
    'prefix': 'startListening'
    'body': 'startListening()'
  'stopListening':
    'prefix': 'stopListening'
    'body': 'stopListening()'
  'addSpeechDictionary:':
    'prefix': 'addSpeechDictionary:'
    'body': 'addSpeechDictionary(${1:NSDictionary* speechDictionary})'
  'NSSpeechSynthesizer.attributesForVoice:':
    'prefix': 'attributesForVoice:'
    'body': 'attributesForVoice(${1:NSString* voice})'
  'NSSpeechSynthesizer.availableVoices':
    'prefix': 'availableVoices'
    'body': 'availableVoices()'
  'continueSpeaking':
    'prefix': 'continueSpeaking'
    'body': 'continueSpeaking()'
  'NSSpeechSynthesizer.defaultVoice':
    'prefix': 'defaultVoice'
    'body': 'defaultVoice()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'initWithVoice:':
    'prefix': 'initWithVoice:'
    'body': 'initWithVoice(${1:NSString* voice})'
  'NSSpeechSynthesizer.isAnyApplicationSpeaking':
    'prefix': 'isAnyApplicationSpeaking'
    'body': 'isAnyApplicationSpeaking()'
  'isSpeaking':
    'prefix': 'isSpeaking'
    'body': 'isSpeaking()'
  'objectForProperty:error:':
    'prefix': 'objectForProperty:error:'
    'body': 'objectForProperty(${1:NSString* property}, error:${2:NSError** outError})'
  'pauseSpeakingAtBoundary:':
    'prefix': 'pauseSpeakingAtBoundary:'
    'body': 'pauseSpeakingAtBoundary(${1:NSSpeechBoundary boundary})'
  'phonemesFromText:':
    'prefix': 'phonemesFromText:'
    'body': 'phonemesFromText(${1:NSString* text})'
  'rate':
    'prefix': 'rate'
    'body': 'rate()'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setObject:forProperty:error:':
    'prefix': 'setObject:forProperty:error:'
    'body': 'setObject(${1:id object}, forProperty:${2:NSString* property}, error:${3:NSError** outError})'
  'setRate:':
    'prefix': 'setRate:'
    'body': 'setRate(${1:float rate})'
  'setUsesFeedbackWindow:':
    'prefix': 'setUsesFeedbackWindow:'
    'body': 'setUsesFeedbackWindow(${1:BOOL flag})'
  'setVoice:':
    'prefix': 'setVoice:'
    'body': 'setVoice(${1:NSString* voice})'
  'setVolume:':
    'prefix': 'setVolume:'
    'body': 'setVolume(${1:float volume})'
  'startSpeakingString:':
    'prefix': 'startSpeakingString:'
    'body': 'startSpeakingString(${1:NSString* string})'
  'startSpeakingString:toURL:':
    'prefix': 'startSpeakingString:toURL:'
    'body': 'startSpeakingString(${1:NSString* string}, toURL:${2:NSURL* url})'
  'stopSpeaking':
    'prefix': 'stopSpeaking'
    'body': 'stopSpeaking()'
  'stopSpeakingAtBoundary:':
    'prefix': 'stopSpeakingAtBoundary:'
    'body': 'stopSpeakingAtBoundary(${1:NSSpeechBoundary boundary})'
  'usesFeedbackWindow':
    'prefix': 'usesFeedbackWindow'
    'body': 'usesFeedbackWindow()'
  'voice':
    'prefix': 'voice'
    'body': 'voice()'
  'volume':
    'prefix': 'volume'
    'body': 'volume()'
  'accessoryView':
    'prefix': 'accessoryView'
    'body': 'accessoryView()'
  'automaticallyIdentifiesLanguages':
    'prefix': 'automaticallyIdentifiesLanguages'
    'body': 'automaticallyIdentifiesLanguages()'
  'availableLanguages':
    'prefix': 'availableLanguages'
    'body': 'availableLanguages()'
  'checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:':
    'prefix': 'checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'
    'body': 'checkGrammarOfString(${1:NSString* stringToCheck}, startingAt:${2:NSInteger startingOffset}, language:${3:NSString* language}, wrap:${4:BOOL wrapFlag}, inSpellDocumentWithTag:${5:NSInteger tag}, details:${6:NSArray** details})'
  'checkSpellingOfString:startingAt:':
    'prefix': 'checkSpellingOfString:startingAt:'
    'body': 'checkSpellingOfString(${1:NSString* stringToCheck}, startingAt:${2:NSInteger startingOffset})'
  'checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:':
    'prefix': 'checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'
    'body': 'checkSpellingOfString(${1:NSString* stringToCheck}, startingAt:${2:NSInteger startingOffset}, language:${3:NSString* language}, wrap:${4:BOOL wrapFlag}, inSpellDocumentWithTag:${5:NSInteger tag}, wordCount:${6:NSInteger* wordCount})'
  'checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:':
    'prefix': 'checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:'
    'body': 'checkString(${1:NSString* stringToCheck}, range:${2:NSRange range}, types:${3:NSTextCheckingTypes checkingTypes}, options:${4:NSDictionary* options}, inSpellDocumentWithTag:${5:NSInteger tag}, orthography:${6:NSOrthography** orthography}, wordCount:${7:NSInteger* wordCount})'
  'closeSpellDocumentWithTag:':
    'prefix': 'closeSpellDocumentWithTag:'
    'body': 'closeSpellDocumentWithTag(${1:NSInteger tag})'
  'completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:':
    'prefix': 'completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'
    'body': 'completionsForPartialWordRange(${1:NSRange range}, inString:${2:NSString* string}, language:${3:NSString* language}, inSpellDocumentWithTag:${4:NSInteger tag})'
  'correctionForWordRange:inString:language:inSpellDocumentWithTag:':
    'prefix': 'correctionForWordRange:inString:language:inSpellDocumentWithTag:'
    'body': 'correctionForWordRange(${1:NSRange range}, inString:${2:NSString* string}, language:${3:NSString* language}, inSpellDocumentWithTag:${4:NSInteger tag})'
  'countWordsInString:language:':
    'prefix': 'countWordsInString:language:'
    'body': 'countWordsInString(${1:NSString* stringToCount}, language:${2:NSString* language})'
  'dismissCorrectionIndicatorForView:':
    'prefix': 'dismissCorrectionIndicatorForView:'
    'body': 'dismissCorrectionIndicatorForView(${1:NSView* view})'
  'forgetWord:':
    'prefix': 'forgetWord:'
    'body': 'forgetWord(${1:NSString* word})'
  'guessesForWord:':
    'prefix': 'guessesForWord:'
    'body': 'guessesForWord(${1:NSString* word})'
  'guessesForWordRange:inString:language:inSpellDocumentWithTag:':
    'prefix': 'guessesForWordRange:inString:language:inSpellDocumentWithTag:'
    'body': 'guessesForWordRange(${1:NSRange range}, inString:${2:NSString* string}, language:${3:NSString* language}, inSpellDocumentWithTag:${4:NSInteger tag})'
  'hasLearnedWord:':
    'prefix': 'hasLearnedWord:'
    'body': 'hasLearnedWord(${1:NSString* word})'
  'ignoreWord:inSpellDocumentWithTag:':
    'prefix': 'ignoreWord:inSpellDocumentWithTag:'
    'body': 'ignoreWord(${1:NSString* wordToIgnore}, inSpellDocumentWithTag:${2:NSInteger tag})'
  'ignoredWordsInSpellDocumentWithTag:':
    'prefix': 'ignoredWordsInSpellDocumentWithTag:'
    'body': 'ignoredWordsInSpellDocumentWithTag(${1:NSInteger tag})'
  'NSSpellChecker.isAutomaticDashSubstitutionEnabled':
    'prefix': 'isAutomaticDashSubstitutionEnabled'
    'body': 'isAutomaticDashSubstitutionEnabled()'
  'NSSpellChecker.isAutomaticQuoteSubstitutionEnabled':
    'prefix': 'isAutomaticQuoteSubstitutionEnabled'
    'body': 'isAutomaticQuoteSubstitutionEnabled()'
  'NSSpellChecker.isAutomaticSpellingCorrectionEnabled':
    'prefix': 'isAutomaticSpellingCorrectionEnabled'
    'body': 'isAutomaticSpellingCorrectionEnabled()'
  'NSSpellChecker.isAutomaticTextReplacementEnabled':
    'prefix': 'isAutomaticTextReplacementEnabled'
    'body': 'isAutomaticTextReplacementEnabled()'
  'language':
    'prefix': 'language'
    'body': 'language()'
  'languageForWordRange:inString:orthography:':
    'prefix': 'languageForWordRange:inString:orthography:'
    'body': 'languageForWordRange(${1:NSRange range}, inString:${2:NSString* string}, orthography:${3:NSOrthography* orthography})'
  'learnWord:':
    'prefix': 'learnWord:'
    'body': 'learnWord(${1:NSString* word})'
  'menuForResult:string:options:atLocation:inView:':
    'prefix': 'menuForResult:string:options:atLocation:inView:'
    'body': 'menuForResult(${1:NSTextCheckingResult* result}, string:${2:NSString* checkedString}, options:${3:NSDictionary* options}, atLocation:${4:NSPoint location}, inView:${5:NSView* view})'
  'recordResponse:toCorrection:forWord:language:inSpellDocumentWithTag:':
    'prefix': 'recordResponse:toCorrection:forWord:language:inSpellDocumentWithTag:'
    'body': 'recordResponse(${1:NSCorrectionResponse response}, toCorrection:${2:NSString* correction}, forWord:${3:NSString* word}, language:${4:NSString* language}, inSpellDocumentWithTag:${5:NSInteger tag})'
  'requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:':
    'prefix': 'requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:'
    'body': 'requestCheckingOfString(${1:NSString* stringToCheck}, range:${2:NSRange range}, types:${3:NSTextCheckingTypes checkingTypes}, options:${4:NSDictionary* options}, inSpellDocumentWithTag:${5:NSInteger tag}, completionHandler:${6:void (^)(NSInteger, NSArray *, NSOrthography *, NSInteger) completionHandler})'
  'setAccessoryView:':
    'prefix': 'setAccessoryView:'
    'body': 'setAccessoryView(${1:NSView* aView})'
  'setAutomaticallyIdentifiesLanguages:':
    'prefix': 'setAutomaticallyIdentifiesLanguages:'
    'body': 'setAutomaticallyIdentifiesLanguages(${1:BOOL flag})'
  'setIgnoredWords:inSpellDocumentWithTag:':
    'prefix': 'setIgnoredWords:inSpellDocumentWithTag:'
    'body': 'setIgnoredWords(${1:NSArray* words}, inSpellDocumentWithTag:${2:NSInteger tag})'
  'setLanguage:':
    'prefix': 'setLanguage:'
    'body': 'setLanguage(${1:NSString* language})'
  'setSubstitutionsPanelAccessoryViewController:':
    'prefix': 'setSubstitutionsPanelAccessoryViewController:'
    'body': 'setSubstitutionsPanelAccessoryViewController(${1:NSViewController* accessoryController})'
  'setWordFieldStringValue:':
    'prefix': 'setWordFieldStringValue:'
    'body': 'setWordFieldStringValue(${1:NSString* aString})'
  'NSSpellChecker.sharedSpellChecker':
    'prefix': 'sharedSpellChecker'
    'body': 'sharedSpellChecker()'
  'NSSpellChecker.sharedSpellCheckerExists':
    'prefix': 'sharedSpellCheckerExists'
    'body': 'sharedSpellCheckerExists()'
  'showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:':
    'prefix': 'showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:'
    'body': 'showCorrectionIndicatorOfType(${1:NSCorrectionIndicatorType type}, primaryString:${2:NSString* primaryString}, alternativeStrings:${3:NSArray* alternativeStrings}, forStringInRect:${4:NSRect rectOfTypedString}, view:${5:NSView* view}, completionHandler:${6:void (^)(NSString *) completionBlock})'
  'spellingPanel':
    'prefix': 'spellingPanel'
    'body': 'spellingPanel()'
  'substitutionsPanel':
    'prefix': 'substitutionsPanel'
    'body': 'substitutionsPanel()'
  'substitutionsPanelAccessoryViewController':
    'prefix': 'substitutionsPanelAccessoryViewController'
    'body': 'substitutionsPanelAccessoryViewController()'
  'NSSpellChecker.uniqueSpellDocumentTag':
    'prefix': 'uniqueSpellDocumentTag'
    'body': 'uniqueSpellDocumentTag()'
  'unlearnWord:':
    'prefix': 'unlearnWord:'
    'body': 'unlearnWord(${1:NSString* word})'
  'updatePanels':
    'prefix': 'updatePanels'
    'body': 'updatePanels()'
  'updateSpellingPanelWithGrammarString:detail:':
    'prefix': 'updateSpellingPanelWithGrammarString:detail:'
    'body': 'updateSpellingPanelWithGrammarString(${1:NSString* string}, detail:${2:NSDictionary* detail})'
  'updateSpellingPanelWithMisspelledWord:':
    'prefix': 'updateSpellingPanelWithMisspelledWord:'
    'body': 'updateSpellingPanelWithMisspelledWord(${1:NSString* word})'
  'userPreferredLanguages':
    'prefix': 'userPreferredLanguages'
    'body': 'userPreferredLanguages()'
  'userQuotesArrayForLanguage:':
    'prefix': 'userQuotesArrayForLanguage:'
    'body': 'userQuotesArrayForLanguage(${1:NSString* language})'
  'userReplacementsDictionary':
    'prefix': 'userReplacementsDictionary'
    'body': 'userReplacementsDictionary()'
  'adjustSubviews':
    'prefix': 'adjustSubviews'
    'body': 'adjustSubviews()'
  'autosaveName':
    'prefix': 'autosaveName'
    'body': 'autosaveName()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'dividerColor':
    'prefix': 'dividerColor'
    'body': 'dividerColor()'
  'dividerStyle':
    'prefix': 'dividerStyle'
    'body': 'dividerStyle()'
  'dividerThickness':
    'prefix': 'dividerThickness'
    'body': 'dividerThickness()'
  'drawDividerInRect:':
    'prefix': 'drawDividerInRect:'
    'body': 'drawDividerInRect(${1:NSRect rect})'
  'holdingPriorityForSubviewAtIndex:':
    'prefix': 'holdingPriorityForSubviewAtIndex:'
    'body': 'holdingPriorityForSubviewAtIndex(${1:NSInteger subviewIndex})'
  'isPaneSplitter':
    'prefix': 'isPaneSplitter'
    'body': 'isPaneSplitter()'
  'isSubviewCollapsed:':
    'prefix': 'isSubviewCollapsed:'
    'body': 'isSubviewCollapsed(${1:NSView* subview})'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'maxPossiblePositionOfDividerAtIndex:':
    'prefix': 'maxPossiblePositionOfDividerAtIndex:'
    'body': 'maxPossiblePositionOfDividerAtIndex(${1:NSInteger dividerIndex})'
  'minPossiblePositionOfDividerAtIndex:':
    'prefix': 'minPossiblePositionOfDividerAtIndex:'
    'body': 'minPossiblePositionOfDividerAtIndex(${1:NSInteger dividerIndex})'
  'setAutosaveName:':
    'prefix': 'setAutosaveName:'
    'body': 'setAutosaveName(${1:NSString* autosaveName})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDividerStyle:':
    'prefix': 'setDividerStyle:'
    'body': 'setDividerStyle(${1:NSSplitViewDividerStyle dividerStyle})'
  'setHoldingPriority:forSubviewAtIndex:':
    'prefix': 'setHoldingPriority:forSubviewAtIndex:'
    'body': 'setHoldingPriority(${1:NSLayoutPriority priority}, forSubviewAtIndex:${2:NSInteger subviewIndex})'
  'setIsPaneSplitter:':
    'prefix': 'setIsPaneSplitter:'
    'body': 'setIsPaneSplitter(${1:BOOL flag})'
  'setPosition:ofDividerAtIndex:':
    'prefix': 'setPosition:ofDividerAtIndex:'
    'body': 'setPosition(${1:CGFloat position}, ofDividerAtIndex:${2:NSInteger dividerIndex})'
  'setVertical:':
    'prefix': 'setVertical:'
    'body': 'setVertical(${1:BOOL flag})'
  'addView:inGravity:':
    'prefix': 'addView:inGravity:'
    'body': 'addView(${1:NSView* aView}, inGravity:${2:NSStackViewGravity gravity})'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'clippingResistancePriorityForOrientation:':
    'prefix': 'clippingResistancePriorityForOrientation:'
    'body': 'clippingResistancePriorityForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'customSpacingAfterView:':
    'prefix': 'customSpacingAfterView:'
    'body': 'customSpacingAfterView(${1:NSView* aView})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'detachedViews':
    'prefix': 'detachedViews'
    'body': 'detachedViews()'
  'edgeInsets':
    'prefix': 'edgeInsets'
    'body': 'edgeInsets()'
  'hasEqualSpacing':
    'prefix': 'hasEqualSpacing'
    'body': 'hasEqualSpacing()'
  'huggingPriorityForOrientation:':
    'prefix': 'huggingPriorityForOrientation:'
    'body': 'huggingPriorityForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'insertView:atIndex:inGravity:':
    'prefix': 'insertView:atIndex:inGravity:'
    'body': 'insertView(${1:NSView* aView}, atIndex:${2:NSUInteger index}, inGravity:${3:NSStackViewGravity gravity})'
  'orientation':
    'prefix': 'orientation'
    'body': 'orientation()'
  'removeView:':
    'prefix': 'removeView:'
    'body': 'removeView(${1:NSView* aView})'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSLayoutAttribute alignment})'
  'setClippingResistancePriority:forOrientation:':
    'prefix': 'setClippingResistancePriority:forOrientation:'
    'body': 'setClippingResistancePriority(${1:NSLayoutPriority clippingResistancePriority}, forOrientation:${2:NSLayoutConstraintOrientation orientation})'
  'setCustomSpacing:afterView:':
    'prefix': 'setCustomSpacing:afterView:'
    'body': 'setCustomSpacing(${1:CGFloat spacing}, afterView:${2:NSView* aView})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setEdgeInsets:':
    'prefix': 'setEdgeInsets:'
    'body': 'setEdgeInsets(${1:NSEdgeInsets edgeInsets})'
  'setHasEqualSpacing:':
    'prefix': 'setHasEqualSpacing:'
    'body': 'setHasEqualSpacing(${1:BOOL hasEqualSpacing})'
  'setHuggingPriority:forOrientation:':
    'prefix': 'setHuggingPriority:forOrientation:'
    'body': 'setHuggingPriority(${1:NSLayoutPriority huggingPriority}, forOrientation:${2:NSLayoutConstraintOrientation orientation})'
  'setOrientation:':
    'prefix': 'setOrientation:'
    'body': 'setOrientation(${1:NSUserInterfaceLayoutOrientation orientation})'
  'setSpacing:':
    'prefix': 'setSpacing:'
    'body': 'setSpacing(${1:CGFloat spacing})'
  'setViews:inGravity:':
    'prefix': 'setViews:inGravity:'
    'body': 'setViews(${1:NSArray* views}, inGravity:${2:NSStackViewGravity gravity})'
  'setVisibilityPriority:forView:':
    'prefix': 'setVisibilityPriority:forView:'
    'body': 'setVisibilityPriority(${1:NSStackViewVisibilityPriority priority}, forView:${2:NSView* aView})'
  'spacing':
    'prefix': 'spacing'
    'body': 'spacing()'
  'NSStackView.stackViewWithViews:':
    'prefix': 'stackViewWithViews:'
    'body': 'stackViewWithViews(${1:NSArray* views})'
  'views':
    'prefix': 'views'
    'body': 'views()'
  'viewsInGravity:':
    'prefix': 'viewsInGravity:'
    'body': 'viewsInGravity(${1:NSStackViewGravity gravity})'
  'visibilityPriorityForView:':
    'prefix': 'visibilityPriorityForView:'
    'body': 'visibilityPriorityForView(${1:NSView* aView})'
  'isVertical':
    'prefix': 'isVertical'
    'body': 'isVertical()'
  'removeStatusItem:':
    'prefix': 'removeStatusItem:'
    'body': 'removeStatusItem(${1:NSStatusItem* item})'
  'statusItemWithLength:':
    'prefix': 'statusItemWithLength:'
    'body': 'statusItemWithLength(${1:CGFloat length})'
  'NSStatusBar.systemStatusBar':
    'prefix': 'systemStatusBar'
    'body': 'systemStatusBar()'
  'thickness':
    'prefix': 'thickness'
    'body': 'thickness()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'alternateImage':
    'prefix': 'alternateImage'
    'body': 'alternateImage()'
  'attributedTitle':
    'prefix': 'attributedTitle'
    'body': 'attributedTitle()'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'drawStatusBarBackgroundInRect:withHighlight:':
    'prefix': 'drawStatusBarBackgroundInRect:withHighlight:'
    'body': 'drawStatusBarBackgroundInRect(${1:NSRect rect}, withHighlight:${2:BOOL highlight})'
  'highlightMode':
    'prefix': 'highlightMode'
    'body': 'highlightMode()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'length':
    'prefix': 'length'
    'body': 'length()'
  'menu':
    'prefix': 'menu'
    'body': 'menu()'
  'popUpStatusItemMenu:':
    'prefix': 'popUpStatusItemMenu:'
    'body': 'popUpStatusItemMenu(${1:NSMenu* menu})'
  'sendActionOn:':
    'prefix': 'sendActionOn:'
    'body': 'sendActionOn(${1:NSInteger mask})'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL action})'
  'setAlternateImage:':
    'prefix': 'setAlternateImage:'
    'body': 'setAlternateImage(${1:NSImage* image})'
  'setAttributedTitle:':
    'prefix': 'setAttributedTitle:'
    'body': 'setAttributedTitle(${1:NSAttributedString* title})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL action})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setHighlightMode:':
    'prefix': 'setHighlightMode:'
    'body': 'setHighlightMode(${1:BOOL highlightMode})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setLength:':
    'prefix': 'setLength:'
    'body': 'setLength(${1:CGFloat length})'
  'setMenu:':
    'prefix': 'setMenu:'
    'body': 'setMenu(${1:NSMenu* menu})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id target})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setToolTip:':
    'prefix': 'setToolTip:'
    'body': 'setToolTip(${1:NSString* toolTip})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'statusBar':
    'prefix': 'statusBar'
    'body': 'statusBar()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'toolTip':
    'prefix': 'toolTip'
    'body': 'toolTip()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'autorepeat':
    'prefix': 'autorepeat'
    'body': 'autorepeat()'
  'increment':
    'prefix': 'increment'
    'body': 'increment()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'setAutorepeat:':
    'prefix': 'setAutorepeat:'
    'body': 'setAutorepeat(${1:BOOL autorepeat})'
  'setIncrement:':
    'prefix': 'setIncrement:'
    'body': 'setIncrement(${1:double increment})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double maxValue})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double minValue})'
  'setValueWraps:':
    'prefix': 'setValueWraps:'
    'body': 'setValueWraps(${1:BOOL valueWraps})'
  'valueWraps':
    'prefix': 'valueWraps'
    'body': 'valueWraps()'
  'autorepeat':
    'prefix': 'autorepeat'
    'body': 'autorepeat()'
  'increment':
    'prefix': 'increment'
    'body': 'increment()'
  'maxValue':
    'prefix': 'maxValue'
    'body': 'maxValue()'
  'minValue':
    'prefix': 'minValue'
    'body': 'minValue()'
  'setAutorepeat:':
    'prefix': 'setAutorepeat:'
    'body': 'setAutorepeat(${1:BOOL autorepeat})'
  'setIncrement:':
    'prefix': 'setIncrement:'
    'body': 'setIncrement(${1:double increment})'
  'setMaxValue:':
    'prefix': 'setMaxValue:'
    'body': 'setMaxValue(${1:double maxValue})'
  'setMinValue:':
    'prefix': 'setMinValue:'
    'body': 'setMinValue(${1:double minValue})'
  'setValueWraps:':
    'prefix': 'setValueWraps:'
    'body': 'setValueWraps(${1:BOOL valueWraps})'
  'valueWraps':
    'prefix': 'valueWraps'
    'body': 'valueWraps()'
  'boundingRectWithSize:options:attributes:':
    'prefix': 'boundingRectWithSize:options:attributes:'
    'body': 'boundingRectWithSize(${1:NSSize size}, options:${2:NSStringDrawingOptions options}, attributes:${3:NSDictionary* attributes})'
  'drawAtPoint:withAttributes:':
    'prefix': 'drawAtPoint:withAttributes:'
    'body': 'drawAtPoint(${1:NSPoint point}, withAttributes:${2:NSDictionary* attrs})'
  'drawInRect:withAttributes:':
    'prefix': 'drawInRect:withAttributes:'
    'body': 'drawInRect(${1:NSRect rect}, withAttributes:${2:NSDictionary* attrs})'
  'drawWithRect:options:attributes:':
    'prefix': 'drawWithRect:options:attributes:'
    'body': 'drawWithRect(${1:NSRect rect}, options:${2:NSStringDrawingOptions options}, attributes:${3:NSDictionary* attributes})'
  'sizeWithAttributes:':
    'prefix': 'sizeWithAttributes:'
    'body': 'sizeWithAttributes(${1:NSDictionary* attrs})'
  'addTabViewItem:':
    'prefix': 'addTabViewItem:'
    'body': 'addTabViewItem(${1:NSTabViewItem* tabViewItem})'
  'allowsTruncatedLabels':
    'prefix': 'allowsTruncatedLabels'
    'body': 'allowsTruncatedLabels()'
  'contentRect':
    'prefix': 'contentRect'
    'body': 'contentRect()'
  'controlSize':
    'prefix': 'controlSize'
    'body': 'controlSize()'
  'controlTint':
    'prefix': 'controlTint'
    'body': 'controlTint()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'indexOfTabViewItem:':
    'prefix': 'indexOfTabViewItem:'
    'body': 'indexOfTabViewItem(${1:NSTabViewItem* tabViewItem})'
  'indexOfTabViewItemWithIdentifier:':
    'prefix': 'indexOfTabViewItemWithIdentifier:'
    'body': 'indexOfTabViewItemWithIdentifier(${1:id identifier})'
  'insertTabViewItem:atIndex:':
    'prefix': 'insertTabViewItem:atIndex:'
    'body': 'insertTabViewItem(${1:NSTabViewItem* tabViewItem}, atIndex:${2:NSInteger index})'
  'minimumSize':
    'prefix': 'minimumSize'
    'body': 'minimumSize()'
  'numberOfTabViewItems':
    'prefix': 'numberOfTabViewItems'
    'body': 'numberOfTabViewItems()'
  'removeTabViewItem:':
    'prefix': 'removeTabViewItem:'
    'body': 'removeTabViewItem(${1:NSTabViewItem* tabViewItem})'
  'selectFirstTabViewItem:':
    'prefix': 'selectFirstTabViewItem:'
    'body': 'selectFirstTabViewItem(${1:id sender})'
  'selectLastTabViewItem:':
    'prefix': 'selectLastTabViewItem:'
    'body': 'selectLastTabViewItem(${1:id sender})'
  'selectNextTabViewItem:':
    'prefix': 'selectNextTabViewItem:'
    'body': 'selectNextTabViewItem(${1:id sender})'
  'selectPreviousTabViewItem:':
    'prefix': 'selectPreviousTabViewItem:'
    'body': 'selectPreviousTabViewItem(${1:id sender})'
  'selectTabViewItem:':
    'prefix': 'selectTabViewItem:'
    'body': 'selectTabViewItem(${1:NSTabViewItem* tabViewItem})'
  'selectTabViewItemAtIndex:':
    'prefix': 'selectTabViewItemAtIndex:'
    'body': 'selectTabViewItemAtIndex(${1:NSInteger index})'
  'selectTabViewItemWithIdentifier:':
    'prefix': 'selectTabViewItemWithIdentifier:'
    'body': 'selectTabViewItemWithIdentifier(${1:id identifier})'
  'selectedTabViewItem':
    'prefix': 'selectedTabViewItem'
    'body': 'selectedTabViewItem()'
  'setAllowsTruncatedLabels:':
    'prefix': 'setAllowsTruncatedLabels:'
    'body': 'setAllowsTruncatedLabels(${1:BOOL allowTruncatedLabels})'
  'setControlSize:':
    'prefix': 'setControlSize:'
    'body': 'setControlSize(${1:NSControlSize controlSize})'
  'setControlTint:':
    'prefix': 'setControlTint:'
    'body': 'setControlTint(${1:NSControlTint controlTint})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* font})'
  'setTabViewType:':
    'prefix': 'setTabViewType:'
    'body': 'setTabViewType(${1:NSTabViewType tabViewType})'
  'tabViewItemAtIndex:':
    'prefix': 'tabViewItemAtIndex:'
    'body': 'tabViewItemAtIndex(${1:NSInteger index})'
  'tabViewItemAtPoint:':
    'prefix': 'tabViewItemAtPoint:'
    'body': 'tabViewItemAtPoint(${1:NSPoint point})'
  'tabViewItems':
    'prefix': 'tabViewItems'
    'body': 'tabViewItems()'
  'tabViewType':
    'prefix': 'tabViewType'
    'body': 'tabViewType()'
  'takeSelectedTabViewItemFromSender:':
    'prefix': 'takeSelectedTabViewItemFromSender:'
    'body': 'takeSelectedTabViewItemFromSender(${1:id sender})'
  'color':
    'prefix': 'color'
    'body': 'color()'
  'drawLabel:inRect:':
    'prefix': 'drawLabel:inRect:'
    'body': 'drawLabel(${1:BOOL shouldTruncateLabel}, inRect:${2:NSRect labelRect})'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'initWithIdentifier:':
    'prefix': 'initWithIdentifier:'
    'body': 'initWithIdentifier(${1:id identifier})'
  'initialFirstResponder':
    'prefix': 'initialFirstResponder'
    'body': 'initialFirstResponder()'
  'label':
    'prefix': 'label'
    'body': 'label()'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:NSColor* color})'
  'setIdentifier:':
    'prefix': 'setIdentifier:'
    'body': 'setIdentifier(${1:id identifier})'
  'setInitialFirstResponder:':
    'prefix': 'setInitialFirstResponder:'
    'body': 'setInitialFirstResponder(${1:NSView* view})'
  'setLabel:':
    'prefix': 'setLabel:'
    'body': 'setLabel(${1:NSString* label})'
  'setToolTip:':
    'prefix': 'setToolTip:'
    'body': 'setToolTip(${1:NSString* toolTip})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'sizeOfLabel:':
    'prefix': 'sizeOfLabel:'
    'body': 'sizeOfLabel(${1:BOOL computeMin})'
  'tabState':
    'prefix': 'tabState'
    'body': 'tabState()'
  'tabView':
    'prefix': 'tabView'
    'body': 'tabView()'
  'toolTip':
    'prefix': 'toolTip'
    'body': 'toolTip()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'backgroundStyle':
    'prefix': 'backgroundStyle'
    'body': 'backgroundStyle()'
  'draggingImageComponents':
    'prefix': 'draggingImageComponents'
    'body': 'draggingImageComponents()'
  'imageView':
    'prefix': 'imageView'
    'body': 'imageView()'
  'objectValue':
    'prefix': 'objectValue'
    'body': 'objectValue()'
  'rowSizeStyle':
    'prefix': 'rowSizeStyle'
    'body': 'rowSizeStyle()'
  'setBackgroundStyle:':
    'prefix': 'setBackgroundStyle:'
    'body': 'setBackgroundStyle(${1:NSBackgroundStyle backgroundStyle})'
  'setImageView:':
    'prefix': 'setImageView:'
    'body': 'setImageView(${1:NSImageView* imageView})'
  'setObjectValue:':
    'prefix': 'setObjectValue:'
    'body': 'setObjectValue(${1:id objectValue})'
  'setRowSizeStyle:':
    'prefix': 'setRowSizeStyle:'
    'body': 'setRowSizeStyle(${1:NSTableViewRowSizeStyle rowSizeStyle})'
  'setTextField:':
    'prefix': 'setTextField:'
    'body': 'setTextField(${1:NSTextField* textField})'
  'textField':
    'prefix': 'textField'
    'body': 'textField()'
  'dataCell':
    'prefix': 'dataCell'
    'body': 'dataCell()'
  'dataCellForRow:':
    'prefix': 'dataCellForRow:'
    'body': 'dataCellForRow(${1:NSInteger row})'
  'headerCell':
    'prefix': 'headerCell'
    'body': 'headerCell()'
  'headerToolTip':
    'prefix': 'headerToolTip'
    'body': 'headerToolTip()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'initWithIdentifier:':
    'prefix': 'initWithIdentifier:'
    'body': 'initWithIdentifier(${1:NSString* identifier})'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isResizable':
    'prefix': 'isResizable'
    'body': 'isResizable()'
  'maxWidth':
    'prefix': 'maxWidth'
    'body': 'maxWidth()'
  'minWidth':
    'prefix': 'minWidth'
    'body': 'minWidth()'
  'resizingMask':
    'prefix': 'resizingMask'
    'body': 'resizingMask()'
  'setDataCell:':
    'prefix': 'setDataCell:'
    'body': 'setDataCell(${1:NSCell* cell})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setHeaderCell:':
    'prefix': 'setHeaderCell:'
    'body': 'setHeaderCell(${1:NSCell* cell})'
  'setHeaderToolTip:':
    'prefix': 'setHeaderToolTip:'
    'body': 'setHeaderToolTip(${1:NSString* string})'
  'setHidden:':
    'prefix': 'setHidden:'
    'body': 'setHidden(${1:BOOL hidden})'
  'setIdentifier:':
    'prefix': 'setIdentifier:'
    'body': 'setIdentifier(${1:NSString* identifier})'
  'setMaxWidth:':
    'prefix': 'setMaxWidth:'
    'body': 'setMaxWidth(${1:CGFloat maxWidth})'
  'setMinWidth:':
    'prefix': 'setMinWidth:'
    'body': 'setMinWidth(${1:CGFloat minWidth})'
  'setResizable:':
    'prefix': 'setResizable:'
    'body': 'setResizable(${1:BOOL flag})'
  'setResizingMask:':
    'prefix': 'setResizingMask:'
    'body': 'setResizingMask(${1:NSUInteger resizingMask})'
  'setSortDescriptorPrototype:':
    'prefix': 'setSortDescriptorPrototype:'
    'body': 'setSortDescriptorPrototype(${1:NSSortDescriptor* sortDescriptor})'
  'setTableView:':
    'prefix': 'setTableView:'
    'body': 'setTableView(${1:NSTableView* tableView})'
  'setWidth:':
    'prefix': 'setWidth:'
    'body': 'setWidth(${1:CGFloat width})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'sortDescriptorPrototype':
    'prefix': 'sortDescriptorPrototype'
    'body': 'sortDescriptorPrototype()'
  'tableView':
    'prefix': 'tableView'
    'body': 'tableView()'
  'width':
    'prefix': 'width'
    'body': 'width()'
  'drawSortIndicatorWithFrame:inView:ascending:priority:':
    'prefix': 'drawSortIndicatorWithFrame:inView:ascending:priority:'
    'body': 'drawSortIndicatorWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView}, ascending:${3:BOOL ascending}, priority:${4:NSInteger priority})'
  'sortIndicatorRectForBounds:':
    'prefix': 'sortIndicatorRectForBounds:'
    'body': 'sortIndicatorRectForBounds(${1:NSRect theRect})'
  'columnAtPoint:':
    'prefix': 'columnAtPoint:'
    'body': 'columnAtPoint(${1:NSPoint point})'
  'draggedColumn':
    'prefix': 'draggedColumn'
    'body': 'draggedColumn()'
  'draggedDistance':
    'prefix': 'draggedDistance'
    'body': 'draggedDistance()'
  'headerRectOfColumn:':
    'prefix': 'headerRectOfColumn:'
    'body': 'headerRectOfColumn(${1:NSInteger column})'
  'resizedColumn':
    'prefix': 'resizedColumn'
    'body': 'resizedColumn()'
  'setTableView:':
    'prefix': 'setTableView:'
    'body': 'setTableView(${1:NSTableView* tableView})'
  'tableView':
    'prefix': 'tableView'
    'body': 'tableView()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'draggingDestinationFeedbackStyle':
    'prefix': 'draggingDestinationFeedbackStyle'
    'body': 'draggingDestinationFeedbackStyle()'
  'drawBackgroundInRect:':
    'prefix': 'drawBackgroundInRect:'
    'body': 'drawBackgroundInRect(${1:NSRect dirtyRect})'
  'drawDraggingDestinationFeedbackInRect:':
    'prefix': 'drawDraggingDestinationFeedbackInRect:'
    'body': 'drawDraggingDestinationFeedbackInRect(${1:NSRect dirtyRect})'
  'drawSelectionInRect:':
    'prefix': 'drawSelectionInRect:'
    'body': 'drawSelectionInRect(${1:NSRect dirtyRect})'
  'drawSeparatorInRect:':
    'prefix': 'drawSeparatorInRect:'
    'body': 'drawSeparatorInRect(${1:NSRect dirtyRect})'
  'indentationForDropOperation':
    'prefix': 'indentationForDropOperation'
    'body': 'indentationForDropOperation()'
  'interiorBackgroundStyle':
    'prefix': 'interiorBackgroundStyle'
    'body': 'interiorBackgroundStyle()'
  'isEmphasized':
    'prefix': 'isEmphasized'
    'body': 'isEmphasized()'
  'isFloating':
    'prefix': 'isFloating'
    'body': 'isFloating()'
  'isGroupRowStyle':
    'prefix': 'isGroupRowStyle'
    'body': 'isGroupRowStyle()'
  'isSelected':
    'prefix': 'isSelected'
    'body': 'isSelected()'
  'isTargetForDropOperation':
    'prefix': 'isTargetForDropOperation'
    'body': 'isTargetForDropOperation()'
  'numberOfColumns':
    'prefix': 'numberOfColumns'
    'body': 'numberOfColumns()'
  'selectionHighlightStyle':
    'prefix': 'selectionHighlightStyle'
    'body': 'selectionHighlightStyle()'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* backgroundColor})'
  'setDraggingDestinationFeedbackStyle:':
    'prefix': 'setDraggingDestinationFeedbackStyle:'
    'body': 'setDraggingDestinationFeedbackStyle(${1:NSTableViewDraggingDestinationFeedbackStyle draggingDestinationFeedbackStyle})'
  'setEmphasized:':
    'prefix': 'setEmphasized:'
    'body': 'setEmphasized(${1:BOOL emphasized})'
  'setFloating:':
    'prefix': 'setFloating:'
    'body': 'setFloating(${1:BOOL floating})'
  'setGroupRowStyle:':
    'prefix': 'setGroupRowStyle:'
    'body': 'setGroupRowStyle(${1:BOOL groupRowStyle})'
  'setIndentationForDropOperation:':
    'prefix': 'setIndentationForDropOperation:'
    'body': 'setIndentationForDropOperation(${1:CGFloat indentationForDropOperation})'
  'setSelected:':
    'prefix': 'setSelected:'
    'body': 'setSelected(${1:BOOL selected})'
  'setSelectionHighlightStyle:':
    'prefix': 'setSelectionHighlightStyle:'
    'body': 'setSelectionHighlightStyle(${1:NSTableViewSelectionHighlightStyle selectionHighlightStyle})'
  'setTargetForDropOperation:':
    'prefix': 'setTargetForDropOperation:'
    'body': 'setTargetForDropOperation(${1:BOOL targetForDropOperation})'
  'viewAtColumn:':
    'prefix': 'viewAtColumn:'
    'body': 'viewAtColumn(${1:NSInteger column})'
  'addTableColumn:':
    'prefix': 'addTableColumn:'
    'body': 'addTableColumn(${1:NSTableColumn* tableColumn})'
  'allowsColumnReordering':
    'prefix': 'allowsColumnReordering'
    'body': 'allowsColumnReordering()'
  'allowsColumnResizing':
    'prefix': 'allowsColumnResizing'
    'body': 'allowsColumnResizing()'
  'allowsColumnSelection':
    'prefix': 'allowsColumnSelection'
    'body': 'allowsColumnSelection()'
  'allowsEmptySelection':
    'prefix': 'allowsEmptySelection'
    'body': 'allowsEmptySelection()'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'allowsTypeSelect':
    'prefix': 'allowsTypeSelect'
    'body': 'allowsTypeSelect()'
  'autoresizesAllColumnsToFit':
    'prefix': 'autoresizesAllColumnsToFit'
    'body': 'autoresizesAllColumnsToFit()'
  'autosaveName':
    'prefix': 'autosaveName'
    'body': 'autosaveName()'
  'autosaveTableColumns':
    'prefix': 'autosaveTableColumns'
    'body': 'autosaveTableColumns()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'beginUpdates':
    'prefix': 'beginUpdates'
    'body': 'beginUpdates()'
  'canDragRowsWithIndexes:atPoint:':
    'prefix': 'canDragRowsWithIndexes:atPoint:'
    'body': 'canDragRowsWithIndexes(${1:NSIndexSet* rowIndexes}, atPoint:${2:NSPoint mouseDownPoint})'
  'clickedColumn':
    'prefix': 'clickedColumn'
    'body': 'clickedColumn()'
  'clickedRow':
    'prefix': 'clickedRow'
    'body': 'clickedRow()'
  'columnAtPoint:':
    'prefix': 'columnAtPoint:'
    'body': 'columnAtPoint(${1:NSPoint point})'
  'columnAutoresizingStyle':
    'prefix': 'columnAutoresizingStyle'
    'body': 'columnAutoresizingStyle()'
  'columnForView:':
    'prefix': 'columnForView:'
    'body': 'columnForView(${1:NSView* view})'
  'columnIndexesInRect:':
    'prefix': 'columnIndexesInRect:'
    'body': 'columnIndexesInRect(${1:NSRect rect})'
  'columnWithIdentifier:':
    'prefix': 'columnWithIdentifier:'
    'body': 'columnWithIdentifier(${1:NSString* identifier})'
  'columnsInRect:':
    'prefix': 'columnsInRect:'
    'body': 'columnsInRect(${1:NSRect rect})'
  'cornerView':
    'prefix': 'cornerView'
    'body': 'cornerView()'
  'dataSource':
    'prefix': 'dataSource'
    'body': 'dataSource()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deselectAll:':
    'prefix': 'deselectAll:'
    'body': 'deselectAll(${1:id sender})'
  'deselectColumn:':
    'prefix': 'deselectColumn:'
    'body': 'deselectColumn(${1:NSInteger column})'
  'deselectRow:':
    'prefix': 'deselectRow:'
    'body': 'deselectRow(${1:NSInteger row})'
  'didAddRowView:forRow:':
    'prefix': 'didAddRowView:forRow:'
    'body': 'didAddRowView(${1:NSTableRowView* rowView}, forRow:${2:NSInteger row})'
  'didRemoveRowView:forRow:':
    'prefix': 'didRemoveRowView:forRow:'
    'body': 'didRemoveRowView(${1:NSTableRowView* rowView}, forRow:${2:NSInteger row})'
  'doubleAction':
    'prefix': 'doubleAction'
    'body': 'doubleAction()'
  'dragImageForRows:event:dragImageOffset:':
    'prefix': 'dragImageForRows:event:dragImageOffset:'
    'body': 'dragImageForRows(${1:NSArray* dragRows}, event:${2:NSEvent* dragEvent}, dragImageOffset:${3:NSPointPointer dragImageOffset})'
  'dragImageForRowsWithIndexes:tableColumns:event:offset:':
    'prefix': 'dragImageForRowsWithIndexes:tableColumns:event:offset:'
    'body': 'dragImageForRowsWithIndexes(${1:NSIndexSet* dragRows}, tableColumns:${2:NSArray* tableColumns}, event:${3:NSEvent* dragEvent}, offset:${4:NSPointPointer dragImageOffset})'
  'draggingDestinationFeedbackStyle':
    'prefix': 'draggingDestinationFeedbackStyle'
    'body': 'draggingDestinationFeedbackStyle()'
  'drawBackgroundInClipRect:':
    'prefix': 'drawBackgroundInClipRect:'
    'body': 'drawBackgroundInClipRect(${1:NSRect clipRect})'
  'drawGridInClipRect:':
    'prefix': 'drawGridInClipRect:'
    'body': 'drawGridInClipRect(${1:NSRect clipRect})'
  'drawRow:clipRect:':
    'prefix': 'drawRow:clipRect:'
    'body': 'drawRow(${1:NSInteger row}, clipRect:${2:NSRect clipRect})'
  'drawsGrid':
    'prefix': 'drawsGrid'
    'body': 'drawsGrid()'
  'editColumn:row:withEvent:select:':
    'prefix': 'editColumn:row:withEvent:select:'
    'body': 'editColumn(${1:NSInteger column}, row:${2:NSInteger row}, withEvent:${3:NSEvent* theEvent}, select:${4:BOOL select})'
  'editedColumn':
    'prefix': 'editedColumn'
    'body': 'editedColumn()'
  'editedRow':
    'prefix': 'editedRow'
    'body': 'editedRow()'
  'effectiveRowSizeStyle':
    'prefix': 'effectiveRowSizeStyle'
    'body': 'effectiveRowSizeStyle()'
  'endUpdates':
    'prefix': 'endUpdates'
    'body': 'endUpdates()'
  'enumerateAvailableRowViewsUsingBlock:':
    'prefix': 'enumerateAvailableRowViewsUsingBlock:'
    'body': 'enumerateAvailableRowViewsUsingBlock(${1:void (^)(NSTableRowView *, NSInteger) handler})'
  'floatsGroupRows':
    'prefix': 'floatsGroupRows'
    'body': 'floatsGroupRows()'
  'focusedColumn':
    'prefix': 'focusedColumn'
    'body': 'focusedColumn()'
  'frameOfCellAtColumn:row:':
    'prefix': 'frameOfCellAtColumn:row:'
    'body': 'frameOfCellAtColumn(${1:NSInteger column}, row:${2:NSInteger row})'
  'gridColor':
    'prefix': 'gridColor'
    'body': 'gridColor()'
  'gridStyleMask':
    'prefix': 'gridStyleMask'
    'body': 'gridStyleMask()'
  'headerView':
    'prefix': 'headerView'
    'body': 'headerView()'
  'highlightSelectionInClipRect:':
    'prefix': 'highlightSelectionInClipRect:'
    'body': 'highlightSelectionInClipRect(${1:NSRect clipRect})'
  'highlightedTableColumn':
    'prefix': 'highlightedTableColumn'
    'body': 'highlightedTableColumn()'
  'indicatorImageInTableColumn:':
    'prefix': 'indicatorImageInTableColumn:'
    'body': 'indicatorImageInTableColumn(${1:NSTableColumn* tableColumn})'
  'insertRowsAtIndexes:withAnimation:':
    'prefix': 'insertRowsAtIndexes:withAnimation:'
    'body': 'insertRowsAtIndexes(${1:NSIndexSet* indexes}, withAnimation:${2:NSTableViewAnimationOptions animationOptions})'
  'intercellSpacing':
    'prefix': 'intercellSpacing'
    'body': 'intercellSpacing()'
  'isColumnSelected:':
    'prefix': 'isColumnSelected:'
    'body': 'isColumnSelected(${1:NSInteger column})'
  'isRowSelected:':
    'prefix': 'isRowSelected:'
    'body': 'isRowSelected(${1:NSInteger row})'
  'makeViewWithIdentifier:owner:':
    'prefix': 'makeViewWithIdentifier:owner:'
    'body': 'makeViewWithIdentifier(${1:NSString* identifier}, owner:${2:id owner})'
  'moveColumn:toColumn:':
    'prefix': 'moveColumn:toColumn:'
    'body': 'moveColumn(${1:NSInteger oldIndex}, toColumn:${2:NSInteger newIndex})'
  'moveRowAtIndex:toIndex:':
    'prefix': 'moveRowAtIndex:toIndex:'
    'body': 'moveRowAtIndex(${1:NSInteger oldIndex}, toIndex:${2:NSInteger newIndex})'
  'noteHeightOfRowsWithIndexesChanged:':
    'prefix': 'noteHeightOfRowsWithIndexesChanged:'
    'body': 'noteHeightOfRowsWithIndexesChanged(${1:NSIndexSet* indexSet})'
  'noteNumberOfRowsChanged':
    'prefix': 'noteNumberOfRowsChanged'
    'body': 'noteNumberOfRowsChanged()'
  'numberOfColumns':
    'prefix': 'numberOfColumns'
    'body': 'numberOfColumns()'
  'numberOfRows':
    'prefix': 'numberOfRows'
    'body': 'numberOfRows()'
  'numberOfSelectedColumns':
    'prefix': 'numberOfSelectedColumns'
    'body': 'numberOfSelectedColumns()'
  'numberOfSelectedRows':
    'prefix': 'numberOfSelectedRows'
    'body': 'numberOfSelectedRows()'
  'performClickOnCellAtColumn:row:':
    'prefix': 'performClickOnCellAtColumn:row:'
    'body': 'performClickOnCellAtColumn(${1:NSInteger column}, row:${2:NSInteger row})'
  'preparedCellAtColumn:row:':
    'prefix': 'preparedCellAtColumn:row:'
    'body': 'preparedCellAtColumn(${1:NSInteger column}, row:${2:NSInteger row})'
  'rectOfColumn:':
    'prefix': 'rectOfColumn:'
    'body': 'rectOfColumn(${1:NSInteger column})'
  'rectOfRow:':
    'prefix': 'rectOfRow:'
    'body': 'rectOfRow(${1:NSInteger row})'
  'registerNib:forIdentifier:':
    'prefix': 'registerNib:forIdentifier:'
    'body': 'registerNib(${1:NSNib* nib}, forIdentifier:${2:NSString* identifier})'
  'registeredNibsByIdentifier':
    'prefix': 'registeredNibsByIdentifier'
    'body': 'registeredNibsByIdentifier()'
  'reloadData':
    'prefix': 'reloadData'
    'body': 'reloadData()'
  'reloadDataForRowIndexes:columnIndexes:':
    'prefix': 'reloadDataForRowIndexes:columnIndexes:'
    'body': 'reloadDataForRowIndexes(${1:NSIndexSet* rowIndexes}, columnIndexes:${2:NSIndexSet* columnIndexes})'
  'removeRowsAtIndexes:withAnimation:':
    'prefix': 'removeRowsAtIndexes:withAnimation:'
    'body': 'removeRowsAtIndexes(${1:NSIndexSet* indexes}, withAnimation:${2:NSTableViewAnimationOptions animationOptions})'
  'removeTableColumn:':
    'prefix': 'removeTableColumn:'
    'body': 'removeTableColumn(${1:NSTableColumn* tableColumn})'
  'rowAtPoint:':
    'prefix': 'rowAtPoint:'
    'body': 'rowAtPoint(${1:NSPoint point})'
  'rowForView:':
    'prefix': 'rowForView:'
    'body': 'rowForView(${1:NSView* view})'
  'rowHeight':
    'prefix': 'rowHeight'
    'body': 'rowHeight()'
  'rowSizeStyle':
    'prefix': 'rowSizeStyle'
    'body': 'rowSizeStyle()'
  'rowViewAtRow:makeIfNecessary:':
    'prefix': 'rowViewAtRow:makeIfNecessary:'
    'body': 'rowViewAtRow(${1:NSInteger row}, makeIfNecessary:${2:BOOL makeIfNecessary})'
  'rowsInRect:':
    'prefix': 'rowsInRect:'
    'body': 'rowsInRect(${1:NSRect rect})'
  'scrollColumnToVisible:':
    'prefix': 'scrollColumnToVisible:'
    'body': 'scrollColumnToVisible(${1:NSInteger column})'
  'scrollRowToVisible:':
    'prefix': 'scrollRowToVisible:'
    'body': 'scrollRowToVisible(${1:NSInteger row})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectColumn:byExtendingSelection:':
    'prefix': 'selectColumn:byExtendingSelection:'
    'body': 'selectColumn(${1:NSInteger column}, byExtendingSelection:${2:BOOL extend})'
  'selectColumnIndexes:byExtendingSelection:':
    'prefix': 'selectColumnIndexes:byExtendingSelection:'
    'body': 'selectColumnIndexes(${1:NSIndexSet* indexes}, byExtendingSelection:${2:BOOL extend})'
  'selectRow:byExtendingSelection:':
    'prefix': 'selectRow:byExtendingSelection:'
    'body': 'selectRow(${1:NSInteger row}, byExtendingSelection:${2:BOOL extend})'
  'selectRowIndexes:byExtendingSelection:':
    'prefix': 'selectRowIndexes:byExtendingSelection:'
    'body': 'selectRowIndexes(${1:NSIndexSet* indexes}, byExtendingSelection:${2:BOOL extend})'
  'selectedColumn':
    'prefix': 'selectedColumn'
    'body': 'selectedColumn()'
  'selectedColumnEnumerator':
    'prefix': 'selectedColumnEnumerator'
    'body': 'selectedColumnEnumerator()'
  'selectedColumnIndexes':
    'prefix': 'selectedColumnIndexes'
    'body': 'selectedColumnIndexes()'
  'selectedRow':
    'prefix': 'selectedRow'
    'body': 'selectedRow()'
  'selectedRowEnumerator':
    'prefix': 'selectedRowEnumerator'
    'body': 'selectedRowEnumerator()'
  'selectedRowIndexes':
    'prefix': 'selectedRowIndexes'
    'body': 'selectedRowIndexes()'
  'selectionHighlightStyle':
    'prefix': 'selectionHighlightStyle'
    'body': 'selectionHighlightStyle()'
  'setAllowsColumnReordering:':
    'prefix': 'setAllowsColumnReordering:'
    'body': 'setAllowsColumnReordering(${1:BOOL flag})'
  'setAllowsColumnResizing:':
    'prefix': 'setAllowsColumnResizing:'
    'body': 'setAllowsColumnResizing(${1:BOOL flag})'
  'setAllowsColumnSelection:':
    'prefix': 'setAllowsColumnSelection:'
    'body': 'setAllowsColumnSelection(${1:BOOL flag})'
  'setAllowsEmptySelection:':
    'prefix': 'setAllowsEmptySelection:'
    'body': 'setAllowsEmptySelection(${1:BOOL flag})'
  'setAllowsMultipleSelection:':
    'prefix': 'setAllowsMultipleSelection:'
    'body': 'setAllowsMultipleSelection(${1:BOOL flag})'
  'setAllowsTypeSelect:':
    'prefix': 'setAllowsTypeSelect:'
    'body': 'setAllowsTypeSelect(${1:BOOL value})'
  'setAutoresizesAllColumnsToFit:':
    'prefix': 'setAutoresizesAllColumnsToFit:'
    'body': 'setAutoresizesAllColumnsToFit(${1:BOOL flag})'
  'setAutosaveName:':
    'prefix': 'setAutosaveName:'
    'body': 'setAutosaveName(${1:NSString* name})'
  'setAutosaveTableColumns:':
    'prefix': 'setAutosaveTableColumns:'
    'body': 'setAutosaveTableColumns(${1:BOOL save})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setColumnAutoresizingStyle:':
    'prefix': 'setColumnAutoresizingStyle:'
    'body': 'setColumnAutoresizingStyle(${1:NSTableViewColumnAutoresizingStyle style})'
  'setCornerView:':
    'prefix': 'setCornerView:'
    'body': 'setCornerView(${1:NSView* cornerView})'
  'setDataSource:':
    'prefix': 'setDataSource:'
    'body': 'setDataSource(${1:id aSource})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDoubleAction:':
    'prefix': 'setDoubleAction:'
    'body': 'setDoubleAction(${1:SEL aSelector})'
  'setDraggingDestinationFeedbackStyle:':
    'prefix': 'setDraggingDestinationFeedbackStyle:'
    'body': 'setDraggingDestinationFeedbackStyle(${1:NSTableViewDraggingDestinationFeedbackStyle style})'
  'setDraggingSourceOperationMask:forLocal:':
    'prefix': 'setDraggingSourceOperationMask:forLocal:'
    'body': 'setDraggingSourceOperationMask(${1:NSDragOperation mask}, forLocal:${2:BOOL isLocal})'
  'setDrawsGrid:':
    'prefix': 'setDrawsGrid:'
    'body': 'setDrawsGrid(${1:BOOL flag})'
  'setDropRow:dropOperation:':
    'prefix': 'setDropRow:dropOperation:'
    'body': 'setDropRow(${1:NSInteger row}, dropOperation:${2:NSTableViewDropOperation dropOperation})'
  'setFloatsGroupRows:':
    'prefix': 'setFloatsGroupRows:'
    'body': 'setFloatsGroupRows(${1:BOOL value})'
  'setFocusedColumn:':
    'prefix': 'setFocusedColumn:'
    'body': 'setFocusedColumn(${1:NSInteger focusedColumn})'
  'setGridColor:':
    'prefix': 'setGridColor:'
    'body': 'setGridColor(${1:NSColor* color})'
  'setGridStyleMask:':
    'prefix': 'setGridStyleMask:'
    'body': 'setGridStyleMask(${1:NSTableViewGridLineStyle gridStyle})'
  'setHeaderView:':
    'prefix': 'setHeaderView:'
    'body': 'setHeaderView(${1:NSTableHeaderView* headerView})'
  'setHighlightedTableColumn:':
    'prefix': 'setHighlightedTableColumn:'
    'body': 'setHighlightedTableColumn(${1:NSTableColumn* tableColumn})'
  'setIndicatorImage:inTableColumn:':
    'prefix': 'setIndicatorImage:inTableColumn:'
    'body': 'setIndicatorImage(${1:NSImage* anImage}, inTableColumn:${2:NSTableColumn* tableColumn})'
  'setIntercellSpacing:':
    'prefix': 'setIntercellSpacing:'
    'body': 'setIntercellSpacing(${1:NSSize aSize})'
  'setRowHeight:':
    'prefix': 'setRowHeight:'
    'body': 'setRowHeight(${1:CGFloat rowHeight})'
  'setRowSizeStyle:':
    'prefix': 'setRowSizeStyle:'
    'body': 'setRowSizeStyle(${1:NSTableViewRowSizeStyle rowSizeStyle})'
  'setSelectionHighlightStyle:':
    'prefix': 'setSelectionHighlightStyle:'
    'body': 'setSelectionHighlightStyle(${1:NSTableViewSelectionHighlightStyle selectionHighlightStyle})'
  'setSortDescriptors:':
    'prefix': 'setSortDescriptors:'
    'body': 'setSortDescriptors(${1:NSArray* array})'
  'setUsesAlternatingRowBackgroundColors:':
    'prefix': 'setUsesAlternatingRowBackgroundColors:'
    'body': 'setUsesAlternatingRowBackgroundColors(${1:BOOL useAlternatingRowColors})'
  'setVerticalMotionCanBeginDrag:':
    'prefix': 'setVerticalMotionCanBeginDrag:'
    'body': 'setVerticalMotionCanBeginDrag(${1:BOOL flag})'
  'shouldFocusCell:atColumn:row:':
    'prefix': 'shouldFocusCell:atColumn:row:'
    'body': 'shouldFocusCell(${1:NSCell* cell}, atColumn:${2:NSInteger column}, row:${3:NSInteger row})'
  'sizeLastColumnToFit':
    'prefix': 'sizeLastColumnToFit'
    'body': 'sizeLastColumnToFit()'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'sortDescriptors':
    'prefix': 'sortDescriptors'
    'body': 'sortDescriptors()'
  'tableColumnWithIdentifier:':
    'prefix': 'tableColumnWithIdentifier:'
    'body': 'tableColumnWithIdentifier(${1:NSString* identifier})'
  'tableColumns':
    'prefix': 'tableColumns'
    'body': 'tableColumns()'
  'textDidBeginEditing:':
    'prefix': 'textDidBeginEditing:'
    'body': 'textDidBeginEditing(${1:NSNotification* notification})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:NSNotification* notification})'
  'textDidEndEditing:':
    'prefix': 'textDidEndEditing:'
    'body': 'textDidEndEditing(${1:NSNotification* notification})'
  'textShouldBeginEditing:':
    'prefix': 'textShouldBeginEditing:'
    'body': 'textShouldBeginEditing(${1:NSText* textObject})'
  'textShouldEndEditing:':
    'prefix': 'textShouldEndEditing:'
    'body': 'textShouldEndEditing(${1:NSText* textObject})'
  'tile':
    'prefix': 'tile'
    'body': 'tile()'
  'usesAlternatingRowBackgroundColors':
    'prefix': 'usesAlternatingRowBackgroundColors'
    'body': 'usesAlternatingRowBackgroundColors()'
  'verticalMotionCanBeginDrag':
    'prefix': 'verticalMotionCanBeginDrag'
    'body': 'verticalMotionCanBeginDrag()'
  'viewAtColumn:row:makeIfNecessary:':
    'prefix': 'viewAtColumn:row:makeIfNecessary:'
    'body': 'viewAtColumn(${1:NSInteger column}, row:${2:NSInteger row}, makeIfNecessary:${3:BOOL makeIfNecessary})'
  'RTFDFromRange:':
    'prefix': 'RTFDFromRange:'
    'body': 'RTFDFromRange(${1:NSRange range})'
  'RTFFromRange:':
    'prefix': 'RTFFromRange:'
    'body': 'RTFFromRange(${1:NSRange range})'
  'alignCenter:':
    'prefix': 'alignCenter:'
    'body': 'alignCenter(${1:id sender})'
  'alignLeft:':
    'prefix': 'alignLeft:'
    'body': 'alignLeft(${1:id sender})'
  'alignRight:':
    'prefix': 'alignRight:'
    'body': 'alignRight(${1:id sender})'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'baseWritingDirection':
    'prefix': 'baseWritingDirection'
    'body': 'baseWritingDirection()'
  'changeFont:':
    'prefix': 'changeFont:'
    'body': 'changeFont(${1:id sender})'
  'checkSpelling:':
    'prefix': 'checkSpelling:'
    'body': 'checkSpelling(${1:id sender})'
  'copy:':
    'prefix': 'copy:'
    'body': 'copy(${1:id sender})'
  'copyFont:':
    'prefix': 'copyFont:'
    'body': 'copyFont(${1:id sender})'
  'copyRuler:':
    'prefix': 'copyRuler:'
    'body': 'copyRuler(${1:id sender})'
  'cut:':
    'prefix': 'cut:'
    'body': 'cut(${1:id sender})'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'delete:':
    'prefix': 'delete:'
    'body': 'delete(${1:id sender})'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'importsGraphics':
    'prefix': 'importsGraphics'
    'body': 'importsGraphics()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isFieldEditor':
    'prefix': 'isFieldEditor'
    'body': 'isFieldEditor()'
  'isHorizontallyResizable':
    'prefix': 'isHorizontallyResizable'
    'body': 'isHorizontallyResizable()'
  'isRichText':
    'prefix': 'isRichText'
    'body': 'isRichText()'
  'isRulerVisible':
    'prefix': 'isRulerVisible'
    'body': 'isRulerVisible()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'isVerticallyResizable':
    'prefix': 'isVerticallyResizable'
    'body': 'isVerticallyResizable()'
  'maxSize':
    'prefix': 'maxSize'
    'body': 'maxSize()'
  'minSize':
    'prefix': 'minSize'
    'body': 'minSize()'
  'paste:':
    'prefix': 'paste:'
    'body': 'paste(${1:id sender})'
  'pasteFont:':
    'prefix': 'pasteFont:'
    'body': 'pasteFont(${1:id sender})'
  'pasteRuler:':
    'prefix': 'pasteRuler:'
    'body': 'pasteRuler(${1:id sender})'
  'readRTFDFromFile:':
    'prefix': 'readRTFDFromFile:'
    'body': 'readRTFDFromFile(${1:NSString* path})'
  'replaceCharactersInRange:withRTF:':
    'prefix': 'replaceCharactersInRange:withRTF:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withRTF:${2:NSData* rtfData})'
  'replaceCharactersInRange:withRTFD:':
    'prefix': 'replaceCharactersInRange:withRTFD:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withRTFD:${2:NSData* rtfdData})'
  'replaceCharactersInRange:withString:':
    'prefix': 'replaceCharactersInRange:withString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withString:${2:NSString* aString})'
  'scrollRangeToVisible:':
    'prefix': 'scrollRangeToVisible:'
    'body': 'scrollRangeToVisible(${1:NSRange range})'
  'selectAll:':
    'prefix': 'selectAll:'
    'body': 'selectAll(${1:id sender})'
  'selectedRange':
    'prefix': 'selectedRange'
    'body': 'selectedRange()'
  'setAlignment:':
    'prefix': 'setAlignment:'
    'body': 'setAlignment(${1:NSTextAlignment mode})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBaseWritingDirection:':
    'prefix': 'setBaseWritingDirection:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setFieldEditor:':
    'prefix': 'setFieldEditor:'
    'body': 'setFieldEditor(${1:BOOL flag})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* obj})'
  'setFont:range:':
    'prefix': 'setFont:range:'
    'body': 'setFont(${1:NSFont* font}, range:${2:NSRange range})'
  'setHorizontallyResizable:':
    'prefix': 'setHorizontallyResizable:'
    'body': 'setHorizontallyResizable(${1:BOOL flag})'
  'setImportsGraphics:':
    'prefix': 'setImportsGraphics:'
    'body': 'setImportsGraphics(${1:BOOL flag})'
  'setMaxSize:':
    'prefix': 'setMaxSize:'
    'body': 'setMaxSize(${1:NSSize newMaxSize})'
  'setMinSize:':
    'prefix': 'setMinSize:'
    'body': 'setMinSize(${1:NSSize newMinSize})'
  'setRichText:':
    'prefix': 'setRichText:'
    'body': 'setRichText(${1:BOOL flag})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL flag})'
  'setSelectedRange:':
    'prefix': 'setSelectedRange:'
    'body': 'setSelectedRange(${1:NSRange range})'
  'setString:':
    'prefix': 'setString:'
    'body': 'setString(${1:NSString* string})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:NSColor* color})'
  'setTextColor:range:':
    'prefix': 'setTextColor:range:'
    'body': 'setTextColor(${1:NSColor* color}, range:${2:NSRange range})'
  'setUsesFontPanel:':
    'prefix': 'setUsesFontPanel:'
    'body': 'setUsesFontPanel(${1:BOOL flag})'
  'setVerticallyResizable:':
    'prefix': 'setVerticallyResizable:'
    'body': 'setVerticallyResizable(${1:BOOL flag})'
  'showGuessPanel:':
    'prefix': 'showGuessPanel:'
    'body': 'showGuessPanel(${1:id sender})'
  'sizeToFit':
    'prefix': 'sizeToFit'
    'body': 'sizeToFit()'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'subscript:':
    'prefix': 'subscript:'
    'body': 'subscript(${1:id sender})'
  'superscript:':
    'prefix': 'superscript:'
    'body': 'superscript(${1:id sender})'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'toggleRuler:':
    'prefix': 'toggleRuler:'
    'body': 'toggleRuler(${1:id sender})'
  'underline:':
    'prefix': 'underline:'
    'body': 'underline(${1:id sender})'
  'unscript:':
    'prefix': 'unscript:'
    'body': 'unscript(${1:id sender})'
  'usesFontPanel':
    'prefix': 'usesFontPanel'
    'body': 'usesFontPanel()'
  'writeRTFDToFile:atomically:':
    'prefix': 'writeRTFDToFile:atomically:'
    'body': 'writeRTFDToFile(${1:NSString* path}, atomically:${2:BOOL flag})'
  'alternativeStrings':
    'prefix': 'alternativeStrings'
    'body': 'alternativeStrings()'
  'initWithPrimaryString:alternativeStrings:':
    'prefix': 'initWithPrimaryString:alternativeStrings:'
    'body': 'initWithPrimaryString(${1:NSString* primaryString}, alternativeStrings:${2:NSArray* alternativeStrings})'
  'noteSelectedAlternativeString:':
    'prefix': 'noteSelectedAlternativeString:'
    'body': 'noteSelectedAlternativeString(${1:NSString* alternativeString})'
  'primaryString':
    'prefix': 'primaryString'
    'body': 'primaryString()'
  'attachmentCell':
    'prefix': 'attachmentCell'
    'body': 'attachmentCell()'
  'fileWrapper':
    'prefix': 'fileWrapper'
    'body': 'fileWrapper()'
  'initWithFileWrapper:':
    'prefix': 'initWithFileWrapper:'
    'body': 'initWithFileWrapper(${1:NSFileWrapper* fileWrapper})'
  'setAttachmentCell:':
    'prefix': 'setAttachmentCell:'
    'body': 'setAttachmentCell(${1:id cell})'
  'setFileWrapper:':
    'prefix': 'setFileWrapper:'
    'body': 'setFileWrapper(${1:NSFileWrapper* fileWrapper})'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'borderColorForEdge:':
    'prefix': 'borderColorForEdge:'
    'body': 'borderColorForEdge(${1:NSRectEdge edge})'
  'boundsRectForContentRect:inRect:textContainer:characterRange:':
    'prefix': 'boundsRectForContentRect:inRect:textContainer:characterRange:'
    'body': 'boundsRectForContentRect(${1:NSRect contentRect}, inRect:${2:NSRect rect}, textContainer:${3:NSTextContainer* textContainer}, characterRange:${4:NSRange charRange})'
  'contentWidth':
    'prefix': 'contentWidth'
    'body': 'contentWidth()'
  'contentWidthValueType':
    'prefix': 'contentWidthValueType'
    'body': 'contentWidthValueType()'
  'drawBackgroundWithFrame:inView:characterRange:layoutManager:':
    'prefix': 'drawBackgroundWithFrame:inView:characterRange:layoutManager:'
    'body': 'drawBackgroundWithFrame(${1:NSRect frameRect}, inView:${2:NSView* controlView}, characterRange:${3:NSRange charRange}, layoutManager:${4:NSLayoutManager* layoutManager})'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'rectForLayoutAtPoint:inRect:textContainer:characterRange:':
    'prefix': 'rectForLayoutAtPoint:inRect:textContainer:characterRange:'
    'body': 'rectForLayoutAtPoint(${1:NSPoint startingPoint}, inRect:${2:NSRect rect}, textContainer:${3:NSTextContainer* textContainer}, characterRange:${4:NSRange charRange})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBorderColor:':
    'prefix': 'setBorderColor:'
    'body': 'setBorderColor(${1:NSColor* color})'
  'setBorderColor:forEdge:':
    'prefix': 'setBorderColor:forEdge:'
    'body': 'setBorderColor(${1:NSColor* color}, forEdge:${2:NSRectEdge edge})'
  'setContentWidth:type:':
    'prefix': 'setContentWidth:type:'
    'body': 'setContentWidth(${1:CGFloat val}, type:${2:NSTextBlockValueType type})'
  'setValue:type:forDimension:':
    'prefix': 'setValue:type:forDimension:'
    'body': 'setValue(${1:CGFloat val}, type:${2:NSTextBlockValueType type}, forDimension:${3:NSTextBlockDimension dimension})'
  'setVerticalAlignment:':
    'prefix': 'setVerticalAlignment:'
    'body': 'setVerticalAlignment(${1:NSTextBlockVerticalAlignment alignment})'
  'setWidth:type:forLayer:':
    'prefix': 'setWidth:type:forLayer:'
    'body': 'setWidth(${1:CGFloat val}, type:${2:NSTextBlockValueType type}, forLayer:${3:NSTextBlockLayer layer})'
  'setWidth:type:forLayer:edge:':
    'prefix': 'setWidth:type:forLayer:edge:'
    'body': 'setWidth(${1:CGFloat val}, type:${2:NSTextBlockValueType type}, forLayer:${3:NSTextBlockLayer layer}, edge:${4:NSRectEdge edge})'
  'valueForDimension:':
    'prefix': 'valueForDimension:'
    'body': 'valueForDimension(${1:NSTextBlockDimension dimension})'
  'valueTypeForDimension:':
    'prefix': 'valueTypeForDimension:'
    'body': 'valueTypeForDimension(${1:NSTextBlockDimension dimension})'
  'verticalAlignment':
    'prefix': 'verticalAlignment'
    'body': 'verticalAlignment()'
  'widthForLayer:edge:':
    'prefix': 'widthForLayer:edge:'
    'body': 'widthForLayer(${1:NSTextBlockLayer layer}, edge:${2:NSRectEdge edge})'
  'widthValueTypeForLayer:edge:':
    'prefix': 'widthValueTypeForLayer:edge:'
    'body': 'widthValueTypeForLayer(${1:NSTextBlockLayer layer}, edge:${2:NSRectEdge edge})'
  'containerSize':
    'prefix': 'containerSize'
    'body': 'containerSize()'
  'containsPoint:':
    'prefix': 'containsPoint:'
    'body': 'containsPoint(${1:NSPoint point})'
  'heightTracksTextView':
    'prefix': 'heightTracksTextView'
    'body': 'heightTracksTextView()'
  'initWithContainerSize:':
    'prefix': 'initWithContainerSize:'
    'body': 'initWithContainerSize(${1:NSSize size})'
  'isSimpleRectangularTextContainer':
    'prefix': 'isSimpleRectangularTextContainer'
    'body': 'isSimpleRectangularTextContainer()'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'lineFragmentPadding':
    'prefix': 'lineFragmentPadding'
    'body': 'lineFragmentPadding()'
  'lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:':
    'prefix': 'lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'
    'body': 'lineFragmentRectForProposedRect(${1:NSRect proposedRect}, sweepDirection:${2:NSLineSweepDirection sweepDirection}, movementDirection:${3:NSLineMovementDirection movementDirection}, remainingRect:${4:NSRectPointer remainingRect})'
  'replaceLayoutManager:':
    'prefix': 'replaceLayoutManager:'
    'body': 'replaceLayoutManager(${1:NSLayoutManager* newLayoutManager})'
  'setContainerSize:':
    'prefix': 'setContainerSize:'
    'body': 'setContainerSize(${1:NSSize size})'
  'setHeightTracksTextView:':
    'prefix': 'setHeightTracksTextView:'
    'body': 'setHeightTracksTextView(${1:BOOL flag})'
  'setLayoutManager:':
    'prefix': 'setLayoutManager:'
    'body': 'setLayoutManager(${1:NSLayoutManager* layoutManager})'
  'setLineFragmentPadding:':
    'prefix': 'setLineFragmentPadding:'
    'body': 'setLineFragmentPadding(${1:CGFloat pad})'
  'setTextView:':
    'prefix': 'setTextView:'
    'body': 'setTextView(${1:NSTextView* textView})'
  'setWidthTracksTextView:':
    'prefix': 'setWidthTracksTextView:'
    'body': 'setWidthTracksTextView(${1:BOOL flag})'
  'textView':
    'prefix': 'textView'
    'body': 'textView()'
  'widthTracksTextView':
    'prefix': 'widthTracksTextView'
    'body': 'widthTracksTextView()'
  'acceptsFirstResponder':
    'prefix': 'acceptsFirstResponder'
    'body': 'acceptsFirstResponder()'
  'allowsEditingTextAttributes':
    'prefix': 'allowsEditingTextAttributes'
    'body': 'allowsEditingTextAttributes()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'bezelStyle':
    'prefix': 'bezelStyle'
    'body': 'bezelStyle()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'importsGraphics':
    'prefix': 'importsGraphics'
    'body': 'importsGraphics()'
  'isBezeled':
    'prefix': 'isBezeled'
    'body': 'isBezeled()'
  'isBordered':
    'prefix': 'isBordered'
    'body': 'isBordered()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'preferredMaxLayoutWidth':
    'prefix': 'preferredMaxLayoutWidth'
    'body': 'preferredMaxLayoutWidth()'
  'selectText:':
    'prefix': 'selectText:'
    'body': 'selectText(${1:id sender})'
  'setAllowsEditingTextAttributes:':
    'prefix': 'setAllowsEditingTextAttributes:'
    'body': 'setAllowsEditingTextAttributes(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBezelStyle:':
    'prefix': 'setBezelStyle:'
    'body': 'setBezelStyle(${1:NSTextFieldBezelStyle style})'
  'setBezeled:':
    'prefix': 'setBezeled:'
    'body': 'setBezeled(${1:BOOL flag})'
  'setBordered:':
    'prefix': 'setBordered:'
    'body': 'setBordered(${1:BOOL flag})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setImportsGraphics:':
    'prefix': 'setImportsGraphics:'
    'body': 'setImportsGraphics(${1:BOOL flag})'
  'setPreferredMaxLayoutWidth:':
    'prefix': 'setPreferredMaxLayoutWidth:'
    'body': 'setPreferredMaxLayoutWidth(${1:CGFloat width})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL flag})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:NSColor* color})'
  'setTitleWithMnemonic:':
    'prefix': 'setTitleWithMnemonic:'
    'body': 'setTitleWithMnemonic(${1:NSString* stringWithAmpersand})'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'textDidBeginEditing:':
    'prefix': 'textDidBeginEditing:'
    'body': 'textDidBeginEditing(${1:NSNotification* notification})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:NSNotification* notification})'
  'textDidEndEditing:':
    'prefix': 'textDidEndEditing:'
    'body': 'textDidEndEditing(${1:NSNotification* notification})'
  'textShouldBeginEditing:':
    'prefix': 'textShouldBeginEditing:'
    'body': 'textShouldBeginEditing(${1:NSText* textObject})'
  'textShouldEndEditing:':
    'prefix': 'textShouldEndEditing:'
    'body': 'textShouldEndEditing(${1:NSText* textObject})'
  'allowedInputSourceLocales':
    'prefix': 'allowedInputSourceLocales'
    'body': 'allowedInputSourceLocales()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'bezelStyle':
    'prefix': 'bezelStyle'
    'body': 'bezelStyle()'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'placeholderAttributedString':
    'prefix': 'placeholderAttributedString'
    'body': 'placeholderAttributedString()'
  'placeholderString':
    'prefix': 'placeholderString'
    'body': 'placeholderString()'
  'setAllowedInputSourceLocales:':
    'prefix': 'setAllowedInputSourceLocales:'
    'body': 'setAllowedInputSourceLocales(${1:NSArray* localeIdentifiers})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBezelStyle:':
    'prefix': 'setBezelStyle:'
    'body': 'setBezelStyle(${1:NSTextFieldBezelStyle style})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setPlaceholderAttributedString:':
    'prefix': 'setPlaceholderAttributedString:'
    'body': 'setPlaceholderAttributedString(${1:NSAttributedString* string})'
  'setPlaceholderString:':
    'prefix': 'setPlaceholderString:'
    'body': 'setPlaceholderString(${1:NSString* string})'
  'setTextColor:':
    'prefix': 'setTextColor:'
    'body': 'setTextColor(${1:NSColor* color})'
  'setUpFieldEditorAttributes:':
    'prefix': 'setUpFieldEditorAttributes:'
    'body': 'setUpFieldEditorAttributes(${1:NSText* textObj})'
  'setWantsNotificationForMarkedText:':
    'prefix': 'setWantsNotificationForMarkedText:'
    'body': 'setWantsNotificationForMarkedText(${1:BOOL flag})'
  'textColor':
    'prefix': 'textColor'
    'body': 'textColor()'
  'cancelFindIndicator':
    'prefix': 'cancelFindIndicator'
    'body': 'cancelFindIndicator()'
  'client':
    'prefix': 'client'
    'body': 'client()'
  'NSTextFinder.drawIncrementalMatchHighlightInRect:':
    'prefix': 'drawIncrementalMatchHighlightInRect:'
    'body': 'drawIncrementalMatchHighlightInRect(${1:NSRect rect})'
  'findBarContainer':
    'prefix': 'findBarContainer'
    'body': 'findBarContainer()'
  'findIndicatorNeedsUpdate':
    'prefix': 'findIndicatorNeedsUpdate'
    'body': 'findIndicatorNeedsUpdate()'
  'incrementalMatchRanges':
    'prefix': 'incrementalMatchRanges'
    'body': 'incrementalMatchRanges()'
  'incrementalSearchingShouldDimContentView':
    'prefix': 'incrementalSearchingShouldDimContentView'
    'body': 'incrementalSearchingShouldDimContentView()'
  'init':
    'prefix': 'init'
    'body': 'init()'
  'isIncrementalSearchingEnabled':
    'prefix': 'isIncrementalSearchingEnabled'
    'body': 'isIncrementalSearchingEnabled()'
  'noteClientStringWillChange':
    'prefix': 'noteClientStringWillChange'
    'body': 'noteClientStringWillChange()'
  'performAction:':
    'prefix': 'performAction:'
    'body': 'performAction(${1:NSTextFinderAction op})'
  'setClient:':
    'prefix': 'setClient:'
    'body': 'setClient(${1:id client})'
  'setFindBarContainer:':
    'prefix': 'setFindBarContainer:'
    'body': 'setFindBarContainer(${1:id findBarContainer})'
  'setFindIndicatorNeedsUpdate:':
    'prefix': 'setFindIndicatorNeedsUpdate:'
    'body': 'setFindIndicatorNeedsUpdate(${1:BOOL findIndicatorNeedsUpdate})'
  'setIncrementalSearchingEnabled:':
    'prefix': 'setIncrementalSearchingEnabled:'
    'body': 'setIncrementalSearchingEnabled(${1:BOOL incrementalSearchingEnabled})'
  'setIncrementalSearchingShouldDimContentView:':
    'prefix': 'setIncrementalSearchingShouldDimContentView:'
    'body': 'setIncrementalSearchingShouldDimContentView(${1:BOOL incrementalSearchingShouldDimContentView})'
  'validateAction:':
    'prefix': 'validateAction:'
    'body': 'validateAction(${1:NSTextFinderAction op})'
  'acceptsGlyphInfo':
    'prefix': 'acceptsGlyphInfo'
    'body': 'acceptsGlyphInfo()'
  'activate':
    'prefix': 'activate'
    'body': 'activate()'
  'allowedInputSourceLocales':
    'prefix': 'allowedInputSourceLocales'
    'body': 'allowedInputSourceLocales()'
  'client':
    'prefix': 'client'
    'body': 'client()'
  'NSTextInputContext.currentInputContext':
    'prefix': 'currentInputContext'
    'body': 'currentInputContext()'
  'deactivate':
    'prefix': 'deactivate'
    'body': 'deactivate()'
  'discardMarkedText':
    'prefix': 'discardMarkedText'
    'body': 'discardMarkedText()'
  'handleEvent:':
    'prefix': 'handleEvent:'
    'body': 'handleEvent(${1:NSEvent* theEvent})'
  'initWithClient:':
    'prefix': 'initWithClient:'
    'body': 'initWithClient(${1:id theClient})'
  'invalidateCharacterCoordinates':
    'prefix': 'invalidateCharacterCoordinates'
    'body': 'invalidateCharacterCoordinates()'
  'keyboardInputSources':
    'prefix': 'keyboardInputSources'
    'body': 'KeyboardInputSources()'
  'NSTextInputContext.localizedNameForInputSource:':
    'prefix': 'localizedNameForInputSource:'
    'body': 'localizedNameForInputSource(${1:NSString* inputSourceIdentifier})'
  'selectedKeyboardInputSource':
    'prefix': 'selectedKeyboardInputSource'
    'body': 'selectedKeyboardInputSource()'
  'setAcceptsGlyphInfo:':
    'prefix': 'setAcceptsGlyphInfo:'
    'body': 'setAcceptsGlyphInfo(${1:BOOL acceptsGlyphInfo})'
  'setAllowedInputSourceLocales:':
    'prefix': 'setAllowedInputSourceLocales:'
    'body': 'setAllowedInputSourceLocales(${1:NSArray* allowedInputSourceLocales})'
  'setSelectedKeyboardInputSource:':
    'prefix': 'setSelectedKeyboardInputSource:'
    'body': 'setSelectedKeyboardInputSource(${1:NSString* selectedKeyboardInputSource})'
  'initWithMarkerFormat:options:':
    'prefix': 'initWithMarkerFormat:options:'
    'body': 'initWithMarkerFormat(${1:NSString* format}, options:${2:NSUInteger mask})'
  'listOptions':
    'prefix': 'listOptions'
    'body': 'listOptions()'
  'markerForItemNumber:':
    'prefix': 'markerForItemNumber:'
    'body': 'markerForItemNumber(${1:NSInteger itemNum})'
  'markerFormat':
    'prefix': 'markerFormat'
    'body': 'markerFormat()'
  'setStartingItemNumber:':
    'prefix': 'setStartingItemNumber:'
    'body': 'setStartingItemNumber(${1:NSInteger itemNum})'
  'startingItemNumber':
    'prefix': 'startingItemNumber'
    'body': 'startingItemNumber()'
  'addLayoutManager:':
    'prefix': 'addLayoutManager:'
    'body': 'addLayoutManager(${1:NSLayoutManager* obj})'
  'attributeRuns':
    'prefix': 'attributeRuns'
    'body': 'attributeRuns()'
  'changeInLength':
    'prefix': 'changeInLength'
    'body': 'changeInLength()'
  'characters':
    'prefix': 'characters'
    'body': 'characters()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'edited:range:changeInLength:':
    'prefix': 'edited:range:changeInLength:'
    'body': 'edited(${1:NSUInteger editedMask}, range:${2:NSRange range}, changeInLength:${3:NSInteger delta})'
  'editedMask':
    'prefix': 'editedMask'
    'body': 'editedMask()'
  'editedRange':
    'prefix': 'editedRange'
    'body': 'editedRange()'
  'ensureAttributesAreFixedInRange:':
    'prefix': 'ensureAttributesAreFixedInRange:'
    'body': 'ensureAttributesAreFixedInRange(${1:NSRange range})'
  'fixesAttributesLazily':
    'prefix': 'fixesAttributesLazily'
    'body': 'fixesAttributesLazily()'
  'font':
    'prefix': 'font'
    'body': 'font()'
  'foregroundColor':
    'prefix': 'foregroundColor'
    'body': 'foregroundColor()'
  'invalidateAttributesInRange:':
    'prefix': 'invalidateAttributesInRange:'
    'body': 'invalidateAttributesInRange(${1:NSRange range})'
  'layoutManagers':
    'prefix': 'layoutManagers'
    'body': 'layoutManagers()'
  'paragraphs':
    'prefix': 'paragraphs'
    'body': 'paragraphs()'
  'processEditing':
    'prefix': 'processEditing'
    'body': 'processEditing()'
  'removeLayoutManager:':
    'prefix': 'removeLayoutManager:'
    'body': 'removeLayoutManager(${1:NSLayoutManager* obj})'
  'setAttributeRuns:':
    'prefix': 'setAttributeRuns:'
    'body': 'setAttributeRuns(${1:NSArray* attributeRuns})'
  'setCharacters:':
    'prefix': 'setCharacters:'
    'body': 'setCharacters(${1:NSArray* characters})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setFont:':
    'prefix': 'setFont:'
    'body': 'setFont(${1:NSFont* font})'
  'setForegroundColor:':
    'prefix': 'setForegroundColor:'
    'body': 'setForegroundColor(${1:NSColor* color})'
  'setParagraphs:':
    'prefix': 'setParagraphs:'
    'body': 'setParagraphs(${1:NSArray* paragraphs})'
  'setWords:':
    'prefix': 'setWords:'
    'body': 'setWords(${1:NSArray* words})'
  'words':
    'prefix': 'words'
    'body': 'words()'
  'alignment':
    'prefix': 'alignment'
    'body': 'alignment()'
  'initWithTextAlignment:location:options:':
    'prefix': 'initWithTextAlignment:location:options:'
    'body': 'initWithTextAlignment(${1:NSTextAlignment alignment}, location:${2:CGFloat loc}, options:${3:NSDictionary* options})'
  'initWithType:location:':
    'prefix': 'initWithType:location:'
    'body': 'initWithType(${1:NSTextTabType type}, location:${2:CGFloat loc})'
  'location':
    'prefix': 'location'
    'body': 'location()'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'tabStopType':
    'prefix': 'tabStopType'
    'body': 'tabStopType()'
  'boundsRectForBlock:contentRect:inRect:textContainer:characterRange:':
    'prefix': 'boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'
    'body': 'boundsRectForBlock(${1:NSTextTableBlock* block}, contentRect:${2:NSRect contentRect}, inRect:${3:NSRect rect}, textContainer:${4:NSTextContainer* textContainer}, characterRange:${5:NSRange charRange})'
  'collapsesBorders':
    'prefix': 'collapsesBorders'
    'body': 'collapsesBorders()'
  'drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:':
    'prefix': 'drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'
    'body': 'drawBackgroundForBlock(${1:NSTextTableBlock* block}, withFrame:${2:NSRect frameRect}, inView:${3:NSView* controlView}, characterRange:${4:NSRange charRange}, layoutManager:${5:NSLayoutManager* layoutManager})'
  'hidesEmptyCells':
    'prefix': 'hidesEmptyCells'
    'body': 'hidesEmptyCells()'
  'layoutAlgorithm':
    'prefix': 'layoutAlgorithm'
    'body': 'layoutAlgorithm()'
  'numberOfColumns':
    'prefix': 'numberOfColumns'
    'body': 'numberOfColumns()'
  'rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:':
    'prefix': 'rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'
    'body': 'rectForBlock(${1:NSTextTableBlock* block}, layoutAtPoint:${2:NSPoint startingPoint}, inRect:${3:NSRect rect}, textContainer:${4:NSTextContainer* textContainer}, characterRange:${5:NSRange charRange})'
  'setCollapsesBorders:':
    'prefix': 'setCollapsesBorders:'
    'body': 'setCollapsesBorders(${1:BOOL flag})'
  'setHidesEmptyCells:':
    'prefix': 'setHidesEmptyCells:'
    'body': 'setHidesEmptyCells(${1:BOOL flag})'
  'setLayoutAlgorithm:':
    'prefix': 'setLayoutAlgorithm:'
    'body': 'setLayoutAlgorithm(${1:NSTextTableLayoutAlgorithm algorithm})'
  'setNumberOfColumns:':
    'prefix': 'setNumberOfColumns:'
    'body': 'setNumberOfColumns(${1:NSUInteger numCols})'
  'columnSpan':
    'prefix': 'columnSpan'
    'body': 'columnSpan()'
  'initWithTable:startingRow:rowSpan:startingColumn:columnSpan:':
    'prefix': 'initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'
    'body': 'initWithTable(${1:NSTextTable* table}, startingRow:${2:NSInteger row}, rowSpan:${3:NSInteger rowSpan}, startingColumn:${4:NSInteger col}, columnSpan:${5:NSInteger colSpan})'
  'rowSpan':
    'prefix': 'rowSpan'
    'body': 'rowSpan()'
  'startingColumn':
    'prefix': 'startingColumn'
    'body': 'startingColumn()'
  'startingRow':
    'prefix': 'startingRow'
    'body': 'startingRow()'
  'table':
    'prefix': 'table'
    'body': 'table()'
  'acceptableDragTypes':
    'prefix': 'acceptableDragTypes'
    'body': 'acceptableDragTypes()'
  'acceptsGlyphInfo':
    'prefix': 'acceptsGlyphInfo'
    'body': 'acceptsGlyphInfo()'
  'alignJustified:':
    'prefix': 'alignJustified:'
    'body': 'alignJustified(${1:id sender})'
  'allowedInputSourceLocales':
    'prefix': 'allowedInputSourceLocales'
    'body': 'allowedInputSourceLocales()'
  'allowsDocumentBackgroundColorChange':
    'prefix': 'allowsDocumentBackgroundColorChange'
    'body': 'allowsDocumentBackgroundColorChange()'
  'allowsImageEditing':
    'prefix': 'allowsImageEditing'
    'body': 'allowsImageEditing()'
  'allowsUndo':
    'prefix': 'allowsUndo'
    'body': 'allowsUndo()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'breakUndoCoalescing':
    'prefix': 'breakUndoCoalescing'
    'body': 'breakUndoCoalescing()'
  'changeAttributes:':
    'prefix': 'changeAttributes:'
    'body': 'changeAttributes(${1:id sender})'
  'changeColor:':
    'prefix': 'changeColor:'
    'body': 'changeColor(${1:id sender})'
  'changeDocumentBackgroundColor:':
    'prefix': 'changeDocumentBackgroundColor:'
    'body': 'changeDocumentBackgroundColor(${1:id sender})'
  'changeLayoutOrientation:':
    'prefix': 'changeLayoutOrientation:'
    'body': 'changeLayoutOrientation(${1:id sender})'
  'characterIndexForInsertionAtPoint:':
    'prefix': 'characterIndexForInsertionAtPoint:'
    'body': 'characterIndexForInsertionAtPoint(${1:NSPoint point})'
  'checkTextInDocument:':
    'prefix': 'checkTextInDocument:'
    'body': 'checkTextInDocument(${1:id sender})'
  'checkTextInRange:types:options:':
    'prefix': 'checkTextInRange:types:options:'
    'body': 'checkTextInRange(${1:NSRange range}, types:${2:NSTextCheckingTypes checkingTypes}, options:${3:NSDictionary* options})'
  'checkTextInSelection:':
    'prefix': 'checkTextInSelection:'
    'body': 'checkTextInSelection(${1:id sender})'
  'cleanUpAfterDragOperation':
    'prefix': 'cleanUpAfterDragOperation'
    'body': 'cleanUpAfterDragOperation()'
  'clickedOnLink:atIndex:':
    'prefix': 'clickedOnLink:atIndex:'
    'body': 'clickedOnLink(${1:id link}, atIndex:${2:NSUInteger charIndex})'
  'complete:':
    'prefix': 'complete:'
    'body': 'complete(${1:id sender})'
  'completionsForPartialWordRange:indexOfSelectedItem:':
    'prefix': 'completionsForPartialWordRange:indexOfSelectedItem:'
    'body': 'completionsForPartialWordRange(${1:NSRange charRange}, indexOfSelectedItem:${2:NSInteger* index})'
  'defaultParagraphStyle':
    'prefix': 'defaultParagraphStyle'
    'body': 'defaultParagraphStyle()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'didChangeText':
    'prefix': 'didChangeText'
    'body': 'didChangeText()'
  'displaysLinkToolTips':
    'prefix': 'displaysLinkToolTips'
    'body': 'displaysLinkToolTips()'
  'dragImageForSelectionWithEvent:origin:':
    'prefix': 'dragImageForSelectionWithEvent:origin:'
    'body': 'dragImageForSelectionWithEvent(${1:NSEvent* event}, origin:${2:NSPointPointer origin})'
  'dragOperationForDraggingInfo:type:':
    'prefix': 'dragOperationForDraggingInfo:type:'
    'body': 'dragOperationForDraggingInfo(${1:id dragInfo}, type:${2:NSString* type})'
  'dragSelectionWithEvent:offset:slideBack:':
    'prefix': 'dragSelectionWithEvent:offset:slideBack:'
    'body': 'dragSelectionWithEvent(${1:NSEvent* event}, offset:${2:NSSize mouseOffset}, slideBack:${3:BOOL slideBack})'
  'drawInsertionPointInRect:color:turnedOn:':
    'prefix': 'drawInsertionPointInRect:color:turnedOn:'
    'body': 'drawInsertionPointInRect(${1:NSRect rect}, color:${2:NSColor* color}, turnedOn:${3:BOOL flag})'
  'drawViewBackgroundInRect:':
    'prefix': 'drawViewBackgroundInRect:'
    'body': 'drawViewBackgroundInRect(${1:NSRect rect})'
  'drawsBackground':
    'prefix': 'drawsBackground'
    'body': 'drawsBackground()'
  'enabledTextCheckingTypes':
    'prefix': 'enabledTextCheckingTypes'
    'body': 'enabledTextCheckingTypes()'
  'handleTextCheckingResults:forRange:types:options:orthography:wordCount:':
    'prefix': 'handleTextCheckingResults:forRange:types:options:orthography:wordCount:'
    'body': 'handleTextCheckingResults(${1:NSArray* results}, forRange:${2:NSRange range}, types:${3:NSTextCheckingTypes checkingTypes}, options:${4:NSDictionary* options}, orthography:${5:NSOrthography* orthography}, wordCount:${6:NSInteger wordCount})'
  'importsGraphics':
    'prefix': 'importsGraphics'
    'body': 'importsGraphics()'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:NSRect frameRect})'
  'initWithFrame:textContainer:':
    'prefix': 'initWithFrame:textContainer:'
    'body': 'initWithFrame(${1:NSRect frameRect}, textContainer:${2:NSTextContainer* container})'
  'insertCompletion:forPartialWordRange:movement:isFinal:':
    'prefix': 'insertCompletion:forPartialWordRange:movement:isFinal:'
    'body': 'insertCompletion(${1:NSString* word}, forPartialWordRange:${2:NSRange charRange}, movement:${3:NSInteger movement}, isFinal:${4:BOOL flag})'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:id insertString})'
  'insertionPointColor':
    'prefix': 'insertionPointColor'
    'body': 'insertionPointColor()'
  'invalidateTextContainerOrigin':
    'prefix': 'invalidateTextContainerOrigin'
    'body': 'invalidateTextContainerOrigin()'
  'isAutomaticDashSubstitutionEnabled':
    'prefix': 'isAutomaticDashSubstitutionEnabled'
    'body': 'isAutomaticDashSubstitutionEnabled()'
  'isAutomaticDataDetectionEnabled':
    'prefix': 'isAutomaticDataDetectionEnabled'
    'body': 'isAutomaticDataDetectionEnabled()'
  'isAutomaticLinkDetectionEnabled':
    'prefix': 'isAutomaticLinkDetectionEnabled'
    'body': 'isAutomaticLinkDetectionEnabled()'
  'isAutomaticQuoteSubstitutionEnabled':
    'prefix': 'isAutomaticQuoteSubstitutionEnabled'
    'body': 'isAutomaticQuoteSubstitutionEnabled()'
  'isAutomaticSpellingCorrectionEnabled':
    'prefix': 'isAutomaticSpellingCorrectionEnabled'
    'body': 'isAutomaticSpellingCorrectionEnabled()'
  'isAutomaticTextReplacementEnabled':
    'prefix': 'isAutomaticTextReplacementEnabled'
    'body': 'isAutomaticTextReplacementEnabled()'
  'isCoalescingUndo':
    'prefix': 'isCoalescingUndo'
    'body': 'isCoalescingUndo()'
  'isContinuousSpellCheckingEnabled':
    'prefix': 'isContinuousSpellCheckingEnabled'
    'body': 'isContinuousSpellCheckingEnabled()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isFieldEditor':
    'prefix': 'isFieldEditor'
    'body': 'isFieldEditor()'
  'isGrammarCheckingEnabled':
    'prefix': 'isGrammarCheckingEnabled'
    'body': 'isGrammarCheckingEnabled()'
  'isIncrementalSearchingEnabled':
    'prefix': 'isIncrementalSearchingEnabled'
    'body': 'isIncrementalSearchingEnabled()'
  'isRichText':
    'prefix': 'isRichText'
    'body': 'isRichText()'
  'isRulerVisible':
    'prefix': 'isRulerVisible'
    'body': 'isRulerVisible()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'linkTextAttributes':
    'prefix': 'linkTextAttributes'
    'body': 'linkTextAttributes()'
  'loosenKerning:':
    'prefix': 'loosenKerning:'
    'body': 'loosenKerning(${1:id sender})'
  'lowerBaseline:':
    'prefix': 'lowerBaseline:'
    'body': 'lowerBaseline(${1:id sender})'
  'markedTextAttributes':
    'prefix': 'markedTextAttributes'
    'body': 'markedTextAttributes()'
  'orderFrontLinkPanel:':
    'prefix': 'orderFrontLinkPanel:'
    'body': 'orderFrontLinkPanel(${1:id sender})'
  'orderFrontListPanel:':
    'prefix': 'orderFrontListPanel:'
    'body': 'orderFrontListPanel(${1:id sender})'
  'orderFrontSharingServicePicker:':
    'prefix': 'orderFrontSharingServicePicker:'
    'body': 'orderFrontSharingServicePicker(${1:id sender})'
  'orderFrontSpacingPanel:':
    'prefix': 'orderFrontSpacingPanel:'
    'body': 'orderFrontSpacingPanel(${1:id sender})'
  'orderFrontSubstitutionsPanel:':
    'prefix': 'orderFrontSubstitutionsPanel:'
    'body': 'orderFrontSubstitutionsPanel(${1:id sender})'
  'orderFrontTablePanel:':
    'prefix': 'orderFrontTablePanel:'
    'body': 'orderFrontTablePanel(${1:id sender})'
  'outline:':
    'prefix': 'outline:'
    'body': 'outline(${1:id sender})'
  'pasteAsPlainText:':
    'prefix': 'pasteAsPlainText:'
    'body': 'pasteAsPlainText(${1:id sender})'
  'pasteAsRichText:':
    'prefix': 'pasteAsRichText:'
    'body': 'pasteAsRichText(${1:id sender})'
  'performFindPanelAction:':
    'prefix': 'performFindPanelAction:'
    'body': 'performFindPanelAction(${1:id sender})'
  'preferredPasteboardTypeFromArray:restrictedToTypesFromArray:':
    'prefix': 'preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'
    'body': 'preferredPasteboardTypeFromArray(${1:NSArray* availableTypes}, restrictedToTypesFromArray:${2:NSArray* allowedTypes})'
  'quickLookPreviewableItemsInRanges:':
    'prefix': 'quickLookPreviewableItemsInRanges:'
    'body': 'quickLookPreviewableItemsInRanges(${1:NSArray* ranges})'
  'raiseBaseline:':
    'prefix': 'raiseBaseline:'
    'body': 'raiseBaseline(${1:id sender})'
  'rangeForUserCharacterAttributeChange':
    'prefix': 'rangeForUserCharacterAttributeChange'
    'body': 'rangeForUserCharacterAttributeChange()'
  'rangeForUserCompletion':
    'prefix': 'rangeForUserCompletion'
    'body': 'rangeForUserCompletion()'
  'rangeForUserParagraphAttributeChange':
    'prefix': 'rangeForUserParagraphAttributeChange'
    'body': 'rangeForUserParagraphAttributeChange()'
  'rangeForUserTextChange':
    'prefix': 'rangeForUserTextChange'
    'body': 'rangeForUserTextChange()'
  'rangesForUserCharacterAttributeChange':
    'prefix': 'rangesForUserCharacterAttributeChange'
    'body': 'rangesForUserCharacterAttributeChange()'
  'rangesForUserParagraphAttributeChange':
    'prefix': 'rangesForUserParagraphAttributeChange'
    'body': 'rangesForUserParagraphAttributeChange()'
  'rangesForUserTextChange':
    'prefix': 'rangesForUserTextChange'
    'body': 'rangesForUserTextChange()'
  'readSelectionFromPasteboard:':
    'prefix': 'readSelectionFromPasteboard:'
    'body': 'readSelectionFromPasteboard(${1:NSPasteboard* pboard})'
  'readSelectionFromPasteboard:type:':
    'prefix': 'readSelectionFromPasteboard:type:'
    'body': 'readSelectionFromPasteboard(${1:NSPasteboard* pboard}, type:${2:NSString* type})'
  'readablePasteboardTypes':
    'prefix': 'readablePasteboardTypes'
    'body': 'readablePasteboardTypes()'
  'NSTextView.registerForServices':
    'prefix': 'registerForServices'
    'body': 'registerForServices()'
  'replaceTextContainer:':
    'prefix': 'replaceTextContainer:'
    'body': 'replaceTextContainer(${1:NSTextContainer* newContainer})'
  'rulerView:didAddMarker:':
    'prefix': 'rulerView:didAddMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didAddMarker:${2:NSRulerMarker* marker})'
  'rulerView:didMoveMarker:':
    'prefix': 'rulerView:didMoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didMoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:didRemoveMarker:':
    'prefix': 'rulerView:didRemoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didRemoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:handleMouseDown:':
    'prefix': 'rulerView:handleMouseDown:'
    'body': 'rulerView(${1:NSRulerView* ruler}, handleMouseDown:${2:NSEvent* event})'
  'rulerView:shouldAddMarker:':
    'prefix': 'rulerView:shouldAddMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldAddMarker:${2:NSRulerMarker* marker})'
  'rulerView:shouldMoveMarker:':
    'prefix': 'rulerView:shouldMoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldMoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:shouldRemoveMarker:':
    'prefix': 'rulerView:shouldRemoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldRemoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:willAddMarker:atLocation:':
    'prefix': 'rulerView:willAddMarker:atLocation:'
    'body': 'rulerView(${1:NSRulerView* ruler}, willAddMarker:${2:NSRulerMarker* marker}, atLocation:${3:CGFloat location})'
  'rulerView:willMoveMarker:toLocation:':
    'prefix': 'rulerView:willMoveMarker:toLocation:'
    'body': 'rulerView(${1:NSRulerView* ruler}, willMoveMarker:${2:NSRulerMarker* marker}, toLocation:${3:CGFloat location})'
  'selectedRanges':
    'prefix': 'selectedRanges'
    'body': 'selectedRanges()'
  'selectedTextAttributes':
    'prefix': 'selectedTextAttributes'
    'body': 'selectedTextAttributes()'
  'selectionAffinity':
    'prefix': 'selectionAffinity'
    'body': 'selectionAffinity()'
  'selectionGranularity':
    'prefix': 'selectionGranularity'
    'body': 'selectionGranularity()'
  'selectionRangeForProposedRange:granularity:':
    'prefix': 'selectionRangeForProposedRange:granularity:'
    'body': 'selectionRangeForProposedRange(${1:NSRange proposedCharRange}, granularity:${2:NSSelectionGranularity granularity})'
  'setAcceptsGlyphInfo:':
    'prefix': 'setAcceptsGlyphInfo:'
    'body': 'setAcceptsGlyphInfo(${1:BOOL flag})'
  'setAlignment:range:':
    'prefix': 'setAlignment:range:'
    'body': 'setAlignment(${1:NSTextAlignment alignment}, range:${2:NSRange range})'
  'setAllowedInputSourceLocales:':
    'prefix': 'setAllowedInputSourceLocales:'
    'body': 'setAllowedInputSourceLocales(${1:NSArray* localeIdentifiers})'
  'setAllowsDocumentBackgroundColorChange:':
    'prefix': 'setAllowsDocumentBackgroundColorChange:'
    'body': 'setAllowsDocumentBackgroundColorChange(${1:BOOL flag})'
  'setAllowsImageEditing:':
    'prefix': 'setAllowsImageEditing:'
    'body': 'setAllowsImageEditing(${1:BOOL flag})'
  'setAllowsUndo:':
    'prefix': 'setAllowsUndo:'
    'body': 'setAllowsUndo(${1:BOOL flag})'
  'setAutomaticDashSubstitutionEnabled:':
    'prefix': 'setAutomaticDashSubstitutionEnabled:'
    'body': 'setAutomaticDashSubstitutionEnabled(${1:BOOL flag})'
  'setAutomaticDataDetectionEnabled:':
    'prefix': 'setAutomaticDataDetectionEnabled:'
    'body': 'setAutomaticDataDetectionEnabled(${1:BOOL flag})'
  'setAutomaticLinkDetectionEnabled:':
    'prefix': 'setAutomaticLinkDetectionEnabled:'
    'body': 'setAutomaticLinkDetectionEnabled(${1:BOOL flag})'
  'setAutomaticQuoteSubstitutionEnabled:':
    'prefix': 'setAutomaticQuoteSubstitutionEnabled:'
    'body': 'setAutomaticQuoteSubstitutionEnabled(${1:BOOL flag})'
  'setAutomaticSpellingCorrectionEnabled:':
    'prefix': 'setAutomaticSpellingCorrectionEnabled:'
    'body': 'setAutomaticSpellingCorrectionEnabled(${1:BOOL flag})'
  'setAutomaticTextReplacementEnabled:':
    'prefix': 'setAutomaticTextReplacementEnabled:'
    'body': 'setAutomaticTextReplacementEnabled(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBaseWritingDirection:range:':
    'prefix': 'setBaseWritingDirection:range:'
    'body': 'setBaseWritingDirection(${1:NSWritingDirection writingDirection}, range:${2:NSRange range})'
  'setConstrainedFrameSize:':
    'prefix': 'setConstrainedFrameSize:'
    'body': 'setConstrainedFrameSize(${1:NSSize desiredSize})'
  'setContinuousSpellCheckingEnabled:':
    'prefix': 'setContinuousSpellCheckingEnabled:'
    'body': 'setContinuousSpellCheckingEnabled(${1:BOOL flag})'
  'setDefaultParagraphStyle:':
    'prefix': 'setDefaultParagraphStyle:'
    'body': 'setDefaultParagraphStyle(${1:NSParagraphStyle* paragraphStyle})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDisplaysLinkToolTips:':
    'prefix': 'setDisplaysLinkToolTips:'
    'body': 'setDisplaysLinkToolTips(${1:BOOL flag})'
  'setDrawsBackground:':
    'prefix': 'setDrawsBackground:'
    'body': 'setDrawsBackground(${1:BOOL flag})'
  'setEditable:':
    'prefix': 'setEditable:'
    'body': 'setEditable(${1:BOOL flag})'
  'setEnabledTextCheckingTypes:':
    'prefix': 'setEnabledTextCheckingTypes:'
    'body': 'setEnabledTextCheckingTypes(${1:NSTextCheckingTypes checkingTypes})'
  'setFieldEditor:':
    'prefix': 'setFieldEditor:'
    'body': 'setFieldEditor(${1:BOOL flag})'
  'setGrammarCheckingEnabled:':
    'prefix': 'setGrammarCheckingEnabled:'
    'body': 'setGrammarCheckingEnabled(${1:BOOL flag})'
  'setImportsGraphics:':
    'prefix': 'setImportsGraphics:'
    'body': 'setImportsGraphics(${1:BOOL flag})'
  'setIncrementalSearchingEnabled:':
    'prefix': 'setIncrementalSearchingEnabled:'
    'body': 'setIncrementalSearchingEnabled(${1:BOOL flag})'
  'setInsertionPointColor:':
    'prefix': 'setInsertionPointColor:'
    'body': 'setInsertionPointColor(${1:NSColor* color})'
  'setLayoutOrientation:':
    'prefix': 'setLayoutOrientation:'
    'body': 'setLayoutOrientation(${1:NSTextLayoutOrientation theOrientation})'
  'setLinkTextAttributes:':
    'prefix': 'setLinkTextAttributes:'
    'body': 'setLinkTextAttributes(${1:NSDictionary* attributeDictionary})'
  'setMarkedTextAttributes:':
    'prefix': 'setMarkedTextAttributes:'
    'body': 'setMarkedTextAttributes(${1:NSDictionary* attributeDictionary})'
  'setNeedsDisplayInRect:avoidAdditionalLayout:':
    'prefix': 'setNeedsDisplayInRect:avoidAdditionalLayout:'
    'body': 'setNeedsDisplayInRect(${1:NSRect rect}, avoidAdditionalLayout:${2:BOOL flag})'
  'setRichText:':
    'prefix': 'setRichText:'
    'body': 'setRichText(${1:BOOL flag})'
  'setRulerVisible:':
    'prefix': 'setRulerVisible:'
    'body': 'setRulerVisible(${1:BOOL flag})'
  'setSelectable:':
    'prefix': 'setSelectable:'
    'body': 'setSelectable(${1:BOOL flag})'
  'setSelectedRange:':
    'prefix': 'setSelectedRange:'
    'body': 'setSelectedRange(${1:NSRange charRange})'
  'setSelectedRange:affinity:stillSelecting:':
    'prefix': 'setSelectedRange:affinity:stillSelecting:'
    'body': 'setSelectedRange(${1:NSRange charRange}, affinity:${2:NSSelectionAffinity affinity}, stillSelecting:${3:BOOL stillSelectingFlag})'
  'setSelectedRanges:':
    'prefix': 'setSelectedRanges:'
    'body': 'setSelectedRanges(${1:NSArray* ranges})'
  'setSelectedRanges:affinity:stillSelecting:':
    'prefix': 'setSelectedRanges:affinity:stillSelecting:'
    'body': 'setSelectedRanges(${1:NSArray* ranges}, affinity:${2:NSSelectionAffinity affinity}, stillSelecting:${3:BOOL stillSelectingFlag})'
  'setSelectedTextAttributes:':
    'prefix': 'setSelectedTextAttributes:'
    'body': 'setSelectedTextAttributes(${1:NSDictionary* attributeDictionary})'
  'setSelectionGranularity:':
    'prefix': 'setSelectionGranularity:'
    'body': 'setSelectionGranularity(${1:NSSelectionGranularity granularity})'
  'setSmartInsertDeleteEnabled:':
    'prefix': 'setSmartInsertDeleteEnabled:'
    'body': 'setSmartInsertDeleteEnabled(${1:BOOL flag})'
  'setSpellingState:range:':
    'prefix': 'setSpellingState:range:'
    'body': 'setSpellingState(${1:NSInteger value}, range:${2:NSRange charRange})'
  'setTextContainer:':
    'prefix': 'setTextContainer:'
    'body': 'setTextContainer(${1:NSTextContainer* container})'
  'setTextContainerInset:':
    'prefix': 'setTextContainerInset:'
    'body': 'setTextContainerInset(${1:NSSize inset})'
  'setTypingAttributes:':
    'prefix': 'setTypingAttributes:'
    'body': 'setTypingAttributes(${1:NSDictionary* attrs})'
  'setUsesFindBar:':
    'prefix': 'setUsesFindBar:'
    'body': 'setUsesFindBar(${1:BOOL flag})'
  'setUsesFindPanel:':
    'prefix': 'setUsesFindPanel:'
    'body': 'setUsesFindPanel(${1:BOOL flag})'
  'setUsesFontPanel:':
    'prefix': 'setUsesFontPanel:'
    'body': 'setUsesFontPanel(${1:BOOL flag})'
  'setUsesInspectorBar:':
    'prefix': 'setUsesInspectorBar:'
    'body': 'setUsesInspectorBar(${1:BOOL flag})'
  'setUsesRuler:':
    'prefix': 'setUsesRuler:'
    'body': 'setUsesRuler(${1:BOOL flag})'
  'shouldChangeTextInRange:replacementString:':
    'prefix': 'shouldChangeTextInRange:replacementString:'
    'body': 'shouldChangeTextInRange(${1:NSRange affectedCharRange}, replacementString:${2:NSString* replacementString})'
  'shouldChangeTextInRanges:replacementStrings:':
    'prefix': 'shouldChangeTextInRanges:replacementStrings:'
    'body': 'shouldChangeTextInRanges(${1:NSArray* affectedRanges}, replacementStrings:${2:NSArray* replacementStrings})'
  'shouldDrawInsertionPoint':
    'prefix': 'shouldDrawInsertionPoint'
    'body': 'shouldDrawInsertionPoint()'
  'showFindIndicatorForRange:':
    'prefix': 'showFindIndicatorForRange:'
    'body': 'showFindIndicatorForRange(${1:NSRange charRange})'
  'smartDeleteRangeForProposedRange:':
    'prefix': 'smartDeleteRangeForProposedRange:'
    'body': 'smartDeleteRangeForProposedRange(${1:NSRange proposedCharRange})'
  'smartInsertAfterStringForString:replacingRange:':
    'prefix': 'smartInsertAfterStringForString:replacingRange:'
    'body': 'smartInsertAfterStringForString(${1:NSString* pasteString}, replacingRange:${2:NSRange charRangeToReplace})'
  'smartInsertBeforeStringForString:replacingRange:':
    'prefix': 'smartInsertBeforeStringForString:replacingRange:'
    'body': 'smartInsertBeforeStringForString(${1:NSString* pasteString}, replacingRange:${2:NSRange charRangeToReplace})'
  'smartInsertDeleteEnabled':
    'prefix': 'smartInsertDeleteEnabled'
    'body': 'smartInsertDeleteEnabled()'
  'smartInsertForString:replacingRange:beforeString:afterString:':
    'prefix': 'smartInsertForString:replacingRange:beforeString:afterString:'
    'body': 'smartInsertForString(${1:NSString* pasteString}, replacingRange:${2:NSRange charRangeToReplace}, beforeString:${3:NSString** beforeString}, afterString:${4:NSString** afterString})'
  'spellCheckerDocumentTag':
    'prefix': 'spellCheckerDocumentTag'
    'body': 'spellCheckerDocumentTag()'
  'startSpeaking:':
    'prefix': 'startSpeaking:'
    'body': 'startSpeaking(${1:id sender})'
  'stopSpeaking:':
    'prefix': 'stopSpeaking:'
    'body': 'stopSpeaking(${1:id sender})'
  'textContainer':
    'prefix': 'textContainer'
    'body': 'textContainer()'
  'textContainerInset':
    'prefix': 'textContainerInset'
    'body': 'textContainerInset()'
  'textContainerOrigin':
    'prefix': 'textContainerOrigin'
    'body': 'textContainerOrigin()'
  'textStorage':
    'prefix': 'textStorage'
    'body': 'textStorage()'
  'tightenKerning:':
    'prefix': 'tightenKerning:'
    'body': 'tightenKerning(${1:id sender})'
  'toggleAutomaticDashSubstitution:':
    'prefix': 'toggleAutomaticDashSubstitution:'
    'body': 'toggleAutomaticDashSubstitution(${1:id sender})'
  'toggleAutomaticDataDetection:':
    'prefix': 'toggleAutomaticDataDetection:'
    'body': 'toggleAutomaticDataDetection(${1:id sender})'
  'toggleAutomaticLinkDetection:':
    'prefix': 'toggleAutomaticLinkDetection:'
    'body': 'toggleAutomaticLinkDetection(${1:id sender})'
  'toggleAutomaticQuoteSubstitution:':
    'prefix': 'toggleAutomaticQuoteSubstitution:'
    'body': 'toggleAutomaticQuoteSubstitution(${1:id sender})'
  'toggleAutomaticSpellingCorrection:':
    'prefix': 'toggleAutomaticSpellingCorrection:'
    'body': 'toggleAutomaticSpellingCorrection(${1:id sender})'
  'toggleAutomaticTextReplacement:':
    'prefix': 'toggleAutomaticTextReplacement:'
    'body': 'toggleAutomaticTextReplacement(${1:id sender})'
  'toggleBaseWritingDirection:':
    'prefix': 'toggleBaseWritingDirection:'
    'body': 'toggleBaseWritingDirection(${1:id sender})'
  'toggleContinuousSpellChecking:':
    'prefix': 'toggleContinuousSpellChecking:'
    'body': 'toggleContinuousSpellChecking(${1:id sender})'
  'toggleGrammarChecking:':
    'prefix': 'toggleGrammarChecking:'
    'body': 'toggleGrammarChecking(${1:id sender})'
  'toggleQuickLookPreviewPanel:':
    'prefix': 'toggleQuickLookPreviewPanel:'
    'body': 'toggleQuickLookPreviewPanel(${1:id sender})'
  'toggleSmartInsertDelete:':
    'prefix': 'toggleSmartInsertDelete:'
    'body': 'toggleSmartInsertDelete(${1:id sender})'
  'toggleTraditionalCharacterShape:':
    'prefix': 'toggleTraditionalCharacterShape:'
    'body': 'toggleTraditionalCharacterShape(${1:id sender})'
  'turnOffKerning:':
    'prefix': 'turnOffKerning:'
    'body': 'turnOffKerning(${1:id sender})'
  'turnOffLigatures:':
    'prefix': 'turnOffLigatures:'
    'body': 'turnOffLigatures(${1:id sender})'
  'typingAttributes':
    'prefix': 'typingAttributes'
    'body': 'typingAttributes()'
  'updateDragTypeRegistration':
    'prefix': 'updateDragTypeRegistration'
    'body': 'updateDragTypeRegistration()'
  'updateFontPanel':
    'prefix': 'updateFontPanel'
    'body': 'updateFontPanel()'
  'updateInsertionPointStateAndRestartTimer:':
    'prefix': 'updateInsertionPointStateAndRestartTimer:'
    'body': 'updateInsertionPointStateAndRestartTimer(${1:BOOL restartFlag})'
  'updateQuickLookPreviewPanel':
    'prefix': 'updateQuickLookPreviewPanel'
    'body': 'updateQuickLookPreviewPanel()'
  'updateRuler':
    'prefix': 'updateRuler'
    'body': 'updateRuler()'
  'useAllLigatures:':
    'prefix': 'useAllLigatures:'
    'body': 'useAllLigatures(${1:id sender})'
  'useStandardKerning:':
    'prefix': 'useStandardKerning:'
    'body': 'useStandardKerning(${1:id sender})'
  'useStandardLigatures:':
    'prefix': 'useStandardLigatures:'
    'body': 'useStandardLigatures(${1:id sender})'
  'usesFindBar':
    'prefix': 'usesFindBar'
    'body': 'usesFindBar()'
  'usesFindPanel':
    'prefix': 'usesFindPanel'
    'body': 'usesFindPanel()'
  'usesFontPanel':
    'prefix': 'usesFontPanel'
    'body': 'usesFontPanel()'
  'usesInspectorBar':
    'prefix': 'usesInspectorBar'
    'body': 'usesInspectorBar()'
  'usesRuler':
    'prefix': 'usesRuler'
    'body': 'usesRuler()'
  'validRequestorForSendType:returnType:':
    'prefix': 'validRequestorForSendType:returnType:'
    'body': 'validRequestorForSendType(${1:NSString* sendType}, returnType:${2:NSString* returnType})'
  'writablePasteboardTypes':
    'prefix': 'writablePasteboardTypes'
    'body': 'writablePasteboardTypes()'
  'writeSelectionToPasteboard:type:':
    'prefix': 'writeSelectionToPasteboard:type:'
    'body': 'writeSelectionToPasteboard(${1:NSPasteboard* pboard}, type:${2:NSString* type})'
  'writeSelectionToPasteboard:types:':
    'prefix': 'writeSelectionToPasteboard:types:'
    'body': 'writeSelectionToPasteboard(${1:NSPasteboard* pboard}, types:${2:NSArray* types})'
  'completionDelay':
    'prefix': 'completionDelay'
    'body': 'completionDelay()'
  'NSTokenField.defaultCompletionDelay':
    'prefix': 'defaultCompletionDelay'
    'body': 'defaultCompletionDelay()'
  'NSTokenField.defaultTokenizingCharacterSet':
    'prefix': 'defaultTokenizingCharacterSet'
    'body': 'defaultTokenizingCharacterSet()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'setCompletionDelay:':
    'prefix': 'setCompletionDelay:'
    'body': 'setCompletionDelay(${1:NSTimeInterval delay})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setTokenStyle:':
    'prefix': 'setTokenStyle:'
    'body': 'setTokenStyle(${1:NSTokenStyle style})'
  'setTokenizingCharacterSet:':
    'prefix': 'setTokenizingCharacterSet:'
    'body': 'setTokenizingCharacterSet(${1:NSCharacterSet* characterSet})'
  'tokenStyle':
    'prefix': 'tokenStyle'
    'body': 'tokenStyle()'
  'tokenizingCharacterSet':
    'prefix': 'tokenizingCharacterSet'
    'body': 'tokenizingCharacterSet()'
  'completionDelay':
    'prefix': 'completionDelay'
    'body': 'completionDelay()'
  'NSTokenFieldCell.defaultCompletionDelay':
    'prefix': 'defaultCompletionDelay'
    'body': 'defaultCompletionDelay()'
  'NSTokenFieldCell.defaultTokenizingCharacterSet':
    'prefix': 'defaultTokenizingCharacterSet'
    'body': 'defaultTokenizingCharacterSet()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'setCompletionDelay:':
    'prefix': 'setCompletionDelay:'
    'body': 'setCompletionDelay(${1:NSTimeInterval delay})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setTokenStyle:':
    'prefix': 'setTokenStyle:'
    'body': 'setTokenStyle(${1:NSTokenStyle style})'
  'setTokenizingCharacterSet:':
    'prefix': 'setTokenizingCharacterSet:'
    'body': 'setTokenizingCharacterSet(${1:NSCharacterSet* characterSet})'
  'tokenStyle':
    'prefix': 'tokenStyle'
    'body': 'tokenStyle()'
  'tokenizingCharacterSet':
    'prefix': 'tokenizingCharacterSet'
    'body': 'tokenizingCharacterSet()'
  'allowsUserCustomization':
    'prefix': 'allowsUserCustomization'
    'body': 'allowsUserCustomization()'
  'autosavesConfiguration':
    'prefix': 'autosavesConfiguration'
    'body': 'autosavesConfiguration()'
  'configurationDictionary':
    'prefix': 'configurationDictionary'
    'body': 'configurationDictionary()'
  'customizationPaletteIsRunning':
    'prefix': 'customizationPaletteIsRunning'
    'body': 'customizationPaletteIsRunning()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'displayMode':
    'prefix': 'displayMode'
    'body': 'displayMode()'
  'fullScreenAccessoryView':
    'prefix': 'fullScreenAccessoryView'
    'body': 'fullScreenAccessoryView()'
  'fullScreenAccessoryViewMaxHeight':
    'prefix': 'fullScreenAccessoryViewMaxHeight'
    'body': 'fullScreenAccessoryViewMaxHeight()'
  'fullScreenAccessoryViewMinHeight':
    'prefix': 'fullScreenAccessoryViewMinHeight'
    'body': 'fullScreenAccessoryViewMinHeight()'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'initWithIdentifier:':
    'prefix': 'initWithIdentifier:'
    'body': 'initWithIdentifier(${1:NSString* identifier})'
  'insertItemWithItemIdentifier:atIndex:':
    'prefix': 'insertItemWithItemIdentifier:atIndex:'
    'body': 'insertItemWithItemIdentifier(${1:NSString* itemIdentifier}, atIndex:${2:NSInteger index})'
  'isVisible':
    'prefix': 'isVisible'
    'body': 'isVisible()'
  'items':
    'prefix': 'items'
    'body': 'items()'
  'removeItemAtIndex:':
    'prefix': 'removeItemAtIndex:'
    'body': 'removeItemAtIndex(${1:NSInteger index})'
  'runCustomizationPalette:':
    'prefix': 'runCustomizationPalette:'
    'body': 'runCustomizationPalette(${1:id sender})'
  'selectedItemIdentifier':
    'prefix': 'selectedItemIdentifier'
    'body': 'selectedItemIdentifier()'
  'setAllowsUserCustomization:':
    'prefix': 'setAllowsUserCustomization:'
    'body': 'setAllowsUserCustomization(${1:BOOL allowCustomization})'
  'setAutosavesConfiguration:':
    'prefix': 'setAutosavesConfiguration:'
    'body': 'setAutosavesConfiguration(${1:BOOL flag})'
  'setConfigurationFromDictionary:':
    'prefix': 'setConfigurationFromDictionary:'
    'body': 'setConfigurationFromDictionary(${1:NSDictionary* configDict})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id delegate})'
  'setDisplayMode:':
    'prefix': 'setDisplayMode:'
    'body': 'setDisplayMode(${1:NSToolbarDisplayMode displayMode})'
  'setFullScreenAccessoryView:':
    'prefix': 'setFullScreenAccessoryView:'
    'body': 'setFullScreenAccessoryView(${1:NSView* view})'
  'setFullScreenAccessoryViewMaxHeight:':
    'prefix': 'setFullScreenAccessoryViewMaxHeight:'
    'body': 'setFullScreenAccessoryViewMaxHeight(${1:CGFloat maxHeight})'
  'setFullScreenAccessoryViewMinHeight:':
    'prefix': 'setFullScreenAccessoryViewMinHeight:'
    'body': 'setFullScreenAccessoryViewMinHeight(${1:CGFloat minHeight})'
  'setSelectedItemIdentifier:':
    'prefix': 'setSelectedItemIdentifier:'
    'body': 'setSelectedItemIdentifier(${1:NSString* itemIdentifier})'
  'setShowsBaselineSeparator:':
    'prefix': 'setShowsBaselineSeparator:'
    'body': 'setShowsBaselineSeparator(${1:BOOL flag})'
  'setSizeMode:':
    'prefix': 'setSizeMode:'
    'body': 'setSizeMode(${1:NSToolbarSizeMode sizeMode})'
  'setVisible:':
    'prefix': 'setVisible:'
    'body': 'setVisible(${1:BOOL shown})'
  'showsBaselineSeparator':
    'prefix': 'showsBaselineSeparator'
    'body': 'showsBaselineSeparator()'
  'sizeMode':
    'prefix': 'sizeMode'
    'body': 'sizeMode()'
  'validateVisibleItems':
    'prefix': 'validateVisibleItems'
    'body': 'validateVisibleItems()'
  'visibleItems':
    'prefix': 'visibleItems'
    'body': 'visibleItems()'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'allowsDuplicatesInToolbar':
    'prefix': 'allowsDuplicatesInToolbar'
    'body': 'allowsDuplicatesInToolbar()'
  'autovalidates':
    'prefix': 'autovalidates'
    'body': 'autovalidates()'
  'image':
    'prefix': 'image'
    'body': 'image()'
  'initWithItemIdentifier:':
    'prefix': 'initWithItemIdentifier:'
    'body': 'initWithItemIdentifier(${1:NSString* itemIdentifier})'
  'isEnabled':
    'prefix': 'isEnabled'
    'body': 'isEnabled()'
  'itemIdentifier':
    'prefix': 'itemIdentifier'
    'body': 'itemIdentifier()'
  'label':
    'prefix': 'label'
    'body': 'label()'
  'maxSize':
    'prefix': 'maxSize'
    'body': 'maxSize()'
  'menuFormRepresentation':
    'prefix': 'menuFormRepresentation'
    'body': 'menuFormRepresentation()'
  'minSize':
    'prefix': 'minSize'
    'body': 'minSize()'
  'paletteLabel':
    'prefix': 'paletteLabel'
    'body': 'paletteLabel()'
  'setAction:':
    'prefix': 'setAction:'
    'body': 'setAction(${1:SEL action})'
  'setAutovalidates:':
    'prefix': 'setAutovalidates:'
    'body': 'setAutovalidates(${1:BOOL resistance})'
  'setEnabled:':
    'prefix': 'setEnabled:'
    'body': 'setEnabled(${1:BOOL enabled})'
  'setImage:':
    'prefix': 'setImage:'
    'body': 'setImage(${1:NSImage* image})'
  'setLabel:':
    'prefix': 'setLabel:'
    'body': 'setLabel(${1:NSString* label})'
  'setMaxSize:':
    'prefix': 'setMaxSize:'
    'body': 'setMaxSize(${1:NSSize size})'
  'setMenuFormRepresentation:':
    'prefix': 'setMenuFormRepresentation:'
    'body': 'setMenuFormRepresentation(${1:NSMenuItem* menuItem})'
  'setMinSize:':
    'prefix': 'setMinSize:'
    'body': 'setMinSize(${1:NSSize size})'
  'setPaletteLabel:':
    'prefix': 'setPaletteLabel:'
    'body': 'setPaletteLabel(${1:NSString* paletteLabel})'
  'setTag:':
    'prefix': 'setTag:'
    'body': 'setTag(${1:NSInteger tag})'
  'setTarget:':
    'prefix': 'setTarget:'
    'body': 'setTarget(${1:id target})'
  'setToolTip:':
    'prefix': 'setToolTip:'
    'body': 'setToolTip(${1:NSString* toolTip})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'setVisibilityPriority:':
    'prefix': 'setVisibilityPriority:'
    'body': 'setVisibilityPriority(${1:NSInteger visibilityPriority})'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'target':
    'prefix': 'target'
    'body': 'target()'
  'toolTip':
    'prefix': 'toolTip'
    'body': 'toolTip()'
  'toolbar':
    'prefix': 'toolbar'
    'body': 'toolbar()'
  'validate':
    'prefix': 'validate'
    'body': 'validate()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'visibilityPriority':
    'prefix': 'visibilityPriority'
    'body': 'visibilityPriority()'
  'setSubitems:':
    'prefix': 'setSubitems:'
    'body': 'setSubitems(${1:NSArray* subitems})'
  'subitems':
    'prefix': 'subitems'
    'body': 'subitems()'
  'device':
    'prefix': 'device'
    'body': 'device()'
  'deviceSize':
    'prefix': 'deviceSize'
    'body': 'deviceSize()'
  'identity':
    'prefix': 'identity'
    'body': 'identity()'
  'isResting':
    'prefix': 'isResting'
    'body': 'isResting()'
  'normalizedPosition':
    'prefix': 'normalizedPosition'
    'body': 'normalizedPosition()'
  'phase':
    'prefix': 'phase'
    'body': 'phase()'
  'initWithRect:options:owner:userInfo:':
    'prefix': 'initWithRect:options:owner:userInfo:'
    'body': 'initWithRect(${1:NSRect rect}, options:${2:NSTrackingAreaOptions options}, owner:${3:id owner}, userInfo:${4:NSDictionary* userInfo})'
  'options':
    'prefix': 'options'
    'body': 'options()'
  'owner':
    'prefix': 'owner'
    'body': 'owner()'
  'rect':
    'prefix': 'rect'
    'body': 'rect()'
  'userInfo':
    'prefix': 'userInfo'
    'body': 'userInfo()'
  'add:':
    'prefix': 'add:'
    'body': 'add(${1:id sender})'
  'addChild:':
    'prefix': 'addChild:'
    'body': 'addChild(${1:id sender})'
  'addSelectionIndexPaths:':
    'prefix': 'addSelectionIndexPaths:'
    'body': 'addSelectionIndexPaths(${1:NSArray* indexPaths})'
  'alwaysUsesMultipleValuesMarker':
    'prefix': 'alwaysUsesMultipleValuesMarker'
    'body': 'alwaysUsesMultipleValuesMarker()'
  'arrangedObjects':
    'prefix': 'arrangedObjects'
    'body': 'arrangedObjects()'
  'avoidsEmptySelection':
    'prefix': 'avoidsEmptySelection'
    'body': 'avoidsEmptySelection()'
  'canAddChild':
    'prefix': 'canAddChild'
    'body': 'canAddChild()'
  'canInsert':
    'prefix': 'canInsert'
    'body': 'canInsert()'
  'canInsertChild':
    'prefix': 'canInsertChild'
    'body': 'canInsertChild()'
  'childrenKeyPath':
    'prefix': 'childrenKeyPath'
    'body': 'childrenKeyPath()'
  'childrenKeyPathForNode:':
    'prefix': 'childrenKeyPathForNode:'
    'body': 'childrenKeyPathForNode(${1:NSTreeNode* node})'
  'content':
    'prefix': 'content'
    'body': 'content()'
  'countKeyPath':
    'prefix': 'countKeyPath'
    'body': 'countKeyPath()'
  'countKeyPathForNode:':
    'prefix': 'countKeyPathForNode:'
    'body': 'countKeyPathForNode(${1:NSTreeNode* node})'
  'insert:':
    'prefix': 'insert:'
    'body': 'insert(${1:id sender})'
  'insertChild:':
    'prefix': 'insertChild:'
    'body': 'insertChild(${1:id sender})'
  'insertObject:atArrangedObjectIndexPath:':
    'prefix': 'insertObject:atArrangedObjectIndexPath:'
    'body': 'insertObject(${1:id object}, atArrangedObjectIndexPath:${2:NSIndexPath* indexPath})'
  'insertObjects:atArrangedObjectIndexPaths:':
    'prefix': 'insertObjects:atArrangedObjectIndexPaths:'
    'body': 'insertObjects(${1:NSArray* objects}, atArrangedObjectIndexPaths:${2:NSArray* indexPaths})'
  'leafKeyPath':
    'prefix': 'leafKeyPath'
    'body': 'leafKeyPath()'
  'leafKeyPathForNode:':
    'prefix': 'leafKeyPathForNode:'
    'body': 'leafKeyPathForNode(${1:NSTreeNode* node})'
  'moveNode:toIndexPath:':
    'prefix': 'moveNode:toIndexPath:'
    'body': 'moveNode(${1:NSTreeNode* node}, toIndexPath:${2:NSIndexPath* indexPath})'
  'moveNodes:toIndexPath:':
    'prefix': 'moveNodes:toIndexPath:'
    'body': 'moveNodes(${1:NSArray* nodes}, toIndexPath:${2:NSIndexPath* startingIndexPath})'
  'preservesSelection':
    'prefix': 'preservesSelection'
    'body': 'preservesSelection()'
  'rearrangeObjects':
    'prefix': 'rearrangeObjects'
    'body': 'rearrangeObjects()'
  'remove:':
    'prefix': 'remove:'
    'body': 'remove(${1:id sender})'
  'removeObjectAtArrangedObjectIndexPath:':
    'prefix': 'removeObjectAtArrangedObjectIndexPath:'
    'body': 'removeObjectAtArrangedObjectIndexPath(${1:NSIndexPath* indexPath})'
  'removeObjectsAtArrangedObjectIndexPaths:':
    'prefix': 'removeObjectsAtArrangedObjectIndexPaths:'
    'body': 'removeObjectsAtArrangedObjectIndexPaths(${1:NSArray* indexPaths})'
  'removeSelectionIndexPaths:':
    'prefix': 'removeSelectionIndexPaths:'
    'body': 'removeSelectionIndexPaths(${1:NSArray* indexPaths})'
  'selectedNodes':
    'prefix': 'selectedNodes'
    'body': 'selectedNodes()'
  'selectedObjects':
    'prefix': 'selectedObjects'
    'body': 'selectedObjects()'
  'selectionIndexPath':
    'prefix': 'selectionIndexPath'
    'body': 'selectionIndexPath()'
  'selectionIndexPaths':
    'prefix': 'selectionIndexPaths'
    'body': 'selectionIndexPaths()'
  'selectsInsertedObjects':
    'prefix': 'selectsInsertedObjects'
    'body': 'selectsInsertedObjects()'
  'setAlwaysUsesMultipleValuesMarker:':
    'prefix': 'setAlwaysUsesMultipleValuesMarker:'
    'body': 'setAlwaysUsesMultipleValuesMarker(${1:BOOL flag})'
  'setAvoidsEmptySelection:':
    'prefix': 'setAvoidsEmptySelection:'
    'body': 'setAvoidsEmptySelection(${1:BOOL flag})'
  'setChildrenKeyPath:':
    'prefix': 'setChildrenKeyPath:'
    'body': 'setChildrenKeyPath(${1:NSString* keyPath})'
  'setContent:':
    'prefix': 'setContent:'
    'body': 'setContent(${1:id content})'
  'setCountKeyPath:':
    'prefix': 'setCountKeyPath:'
    'body': 'setCountKeyPath(${1:NSString* keyPath})'
  'setLeafKeyPath:':
    'prefix': 'setLeafKeyPath:'
    'body': 'setLeafKeyPath(${1:NSString* keyPath})'
  'setPreservesSelection:':
    'prefix': 'setPreservesSelection:'
    'body': 'setPreservesSelection(${1:BOOL flag})'
  'setSelectionIndexPath:':
    'prefix': 'setSelectionIndexPath:'
    'body': 'setSelectionIndexPath(${1:NSIndexPath* indexPath})'
  'setSelectionIndexPaths:':
    'prefix': 'setSelectionIndexPaths:'
    'body': 'setSelectionIndexPaths(${1:NSArray* indexPaths})'
  'setSelectsInsertedObjects:':
    'prefix': 'setSelectsInsertedObjects:'
    'body': 'setSelectsInsertedObjects(${1:BOOL flag})'
  'setSortDescriptors:':
    'prefix': 'setSortDescriptors:'
    'body': 'setSortDescriptors(${1:NSArray* sortDescriptors})'
  'sortDescriptors':
    'prefix': 'sortDescriptors'
    'body': 'sortDescriptors()'
  'childNodes':
    'prefix': 'childNodes'
    'body': 'childNodes()'
  'descendantNodeAtIndexPath:':
    'prefix': 'descendantNodeAtIndexPath:'
    'body': 'descendantNodeAtIndexPath(${1:NSIndexPath* indexPath})'
  'indexPath':
    'prefix': 'indexPath'
    'body': 'indexPath()'
  'initWithRepresentedObject:':
    'prefix': 'initWithRepresentedObject:'
    'body': 'initWithRepresentedObject(${1:id modelObject})'
  'isLeaf':
    'prefix': 'isLeaf'
    'body': 'isLeaf()'
  'mutableChildNodes':
    'prefix': 'mutableChildNodes'
    'body': 'mutableChildNodes()'
  'parentNode':
    'prefix': 'parentNode'
    'body': 'parentNode()'
  'representedObject':
    'prefix': 'representedObject'
    'body': 'representedObject()'
  'sortWithSortDescriptors:recursively:':
    'prefix': 'sortWithSortDescriptors:recursively:'
    'body': 'sortWithSortDescriptors(${1:NSArray* sortDescriptors}, recursively:${2:BOOL recursively})'
  'NSTreeNode.treeNodeWithRepresentedObject:':
    'prefix': 'treeNodeWithRepresentedObject:'
    'body': 'treeNodeWithRepresentedObject(${1:id modelObject})'
  'actionForControlCharacterAtIndex:':
    'prefix': 'actionForControlCharacterAtIndex:'
    'body': 'actionForControlCharacterAtIndex(${1:NSUInteger charIndex})'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'attributesForExtraLineFragment':
    'prefix': 'attributesForExtraLineFragment'
    'body': 'attributesForExtraLineFragment()'
  'baselineOffsetInLayoutManager:glyphIndex:':
    'prefix': 'baselineOffsetInLayoutManager:glyphIndex:'
    'body': 'baselineOffsetInLayoutManager(${1:NSLayoutManager* layoutMgr}, glyphIndex:${2:NSUInteger glyphIndex})'
  'beginLineWithGlyphAtIndex:':
    'prefix': 'beginLineWithGlyphAtIndex:'
    'body': 'beginLineWithGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'beginParagraph':
    'prefix': 'beginParagraph'
    'body': 'beginParagraph()'
  'bidiProcessingEnabled':
    'prefix': 'bidiProcessingEnabled'
    'body': 'bidiProcessingEnabled()'
  'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'boundingBoxForControlGlyphAtIndex(${1:NSUInteger glyphIndex}, forTextContainer:${2:NSTextContainer* textContainer}, proposedLineFragment:${3:NSRect proposedRect}, glyphPosition:${4:NSPoint glyphPosition}, characterIndex:${5:NSUInteger charIndex})'
  'characterRangeForGlyphRange:actualGlyphRange:':
    'prefix': 'characterRangeForGlyphRange:actualGlyphRange:'
    'body': 'characterRangeForGlyphRange(${1:NSRange glyphRange}, actualGlyphRange:${2:NSRangePointer actualGlyphRange})'
  'currentParagraphStyle':
    'prefix': 'currentParagraphStyle'
    'body': 'currentParagraphStyle()'
  'currentTextContainer':
    'prefix': 'currentTextContainer'
    'body': 'currentTextContainer()'
  'NSTypesetter.defaultTypesetterBehavior':
    'prefix': 'defaultTypesetterBehavior'
    'body': 'defaultTypesetterBehavior()'
  'deleteGlyphsInRange:':
    'prefix': 'deleteGlyphsInRange:'
    'body': 'deleteGlyphsInRange(${1:NSRange glyphRange})'
  'endLineWithGlyphRange:':
    'prefix': 'endLineWithGlyphRange:'
    'body': 'endLineWithGlyphRange(${1:NSRange lineGlyphRange})'
  'endParagraph':
    'prefix': 'endParagraph'
    'body': 'endParagraph()'
  'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:':
    'prefix': 'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'
    'body': 'getGlyphsInRange(${1:NSRange glyphsRange}, glyphs:${2:NSGlyph* glyphBuffer}, characterIndexes:${3:NSUInteger* charIndexBuffer}, glyphInscriptions:${4:NSGlyphInscription* inscribeBuffer}, elasticBits:${5:BOOL* elasticBuffer}, bidiLevels:${6:unsigned char* bidiLevelBuffer})'
  'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:':
    'prefix': 'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'
    'body': 'getLineFragmentRect(${1:NSRectPointer lineFragmentRect}, usedRect:${2:NSRectPointer lineFragmentUsedRect}, forParagraphSeparatorGlyphRange:${3:NSRange paragraphSeparatorGlyphRange}, atProposedOrigin:${4:NSPoint lineOrigin})'
  'getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:':
    'prefix': 'getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'
    'body': 'getLineFragmentRect(${1:NSRectPointer lineFragmentRect}, usedRect:${2:NSRectPointer lineFragmentUsedRect}, remainingRect:${3:NSRectPointer remainingRect}, forStartingGlyphAtIndex:${4:NSUInteger startingGlyphIndex}, proposedRect:${5:NSRect proposedRect}, lineSpacing:${6:CGFloat lineSpacing}, paragraphSpacingBefore:${7:CGFloat paragraphSpacingBefore}, paragraphSpacingAfter:${8:CGFloat paragraphSpacingAfter})'
  'glyphRangeForCharacterRange:actualCharacterRange:':
    'prefix': 'glyphRangeForCharacterRange:actualCharacterRange:'
    'body': 'glyphRangeForCharacterRange(${1:NSRange charRange}, actualCharacterRange:${2:NSRangePointer actualCharRange})'
  'hyphenCharacterForGlyphAtIndex:':
    'prefix': 'hyphenCharacterForGlyphAtIndex:'
    'body': 'hyphenCharacterForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'hyphenationFactor':
    'prefix': 'hyphenationFactor'
    'body': 'hyphenationFactor()'
  'hyphenationFactorForGlyphAtIndex:':
    'prefix': 'hyphenationFactorForGlyphAtIndex:'
    'body': 'hyphenationFactorForGlyphAtIndex(${1:NSUInteger glyphIndex})'
  'insertGlyph:atGlyphIndex:characterIndex:':
    'prefix': 'insertGlyph:atGlyphIndex:characterIndex:'
    'body': 'insertGlyph(${1:NSGlyph glyph}, atGlyphIndex:${2:NSUInteger glyphIndex}, characterIndex:${3:NSUInteger characterIndex})'
  'layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:':
    'prefix': 'layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:'
    'body': 'layoutCharactersInRange(${1:NSRange characterRange}, forLayoutManager:${2:NSLayoutManager* layoutManager}, maximumNumberOfLineFragments:${3:NSUInteger maxNumLines})'
  'layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:':
    'prefix': 'layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'
    'body': 'layoutGlyphsInLayoutManager(${1:NSLayoutManager* layoutManager}, startingAtGlyphIndex:${2:NSUInteger startGlyphIndex}, maxNumberOfLineFragments:${3:NSUInteger maxNumLines}, nextGlyphIndex:${4:NSUInteger* nextGlyph})'
  'layoutManager':
    'prefix': 'layoutManager'
    'body': 'layoutManager()'
  'layoutParagraphAtPoint:':
    'prefix': 'layoutParagraphAtPoint:'
    'body': 'layoutParagraphAtPoint(${1:NSPointPointer lineFragmentOrigin})'
  'lineFragmentPadding':
    'prefix': 'lineFragmentPadding'
    'body': 'lineFragmentPadding()'
  'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'lineSpacingAfterGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'paragraphCharacterRange':
    'prefix': 'paragraphCharacterRange'
    'body': 'paragraphCharacterRange()'
  'paragraphGlyphRange':
    'prefix': 'paragraphGlyphRange'
    'body': 'paragraphGlyphRange()'
  'paragraphSeparatorCharacterRange':
    'prefix': 'paragraphSeparatorCharacterRange'
    'body': 'paragraphSeparatorCharacterRange()'
  'paragraphSeparatorGlyphRange':
    'prefix': 'paragraphSeparatorGlyphRange'
    'body': 'paragraphSeparatorGlyphRange()'
  'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'paragraphSpacingAfterGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:':
    'prefix': 'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'
    'body': 'paragraphSpacingBeforeGlyphAtIndex(${1:NSUInteger glyphIndex}, withProposedLineFragmentRect:${2:NSRect rect})'
  'NSTypesetter.printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:':
    'prefix': 'printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'
    'body': 'printingAdjustmentInLayoutManager(${1:NSLayoutManager* layoutMgr}, forNominallySpacedGlyphRange:${2:NSRange nominallySpacedGlyphsRange}, packedGlyphs:${3:unsigned char* packedGlyphs}, count:${4:NSUInteger packedGlyphsCount})'
  'setAttachmentSize:forGlyphRange:':
    'prefix': 'setAttachmentSize:forGlyphRange:'
    'body': 'setAttachmentSize(${1:NSSize attachmentSize}, forGlyphRange:${2:NSRange glyphRange})'
  'setAttributedString:':
    'prefix': 'setAttributedString:'
    'body': 'setAttributedString(${1:NSAttributedString* attrString})'
  'setBidiLevels:forGlyphRange:':
    'prefix': 'setBidiLevels:forGlyphRange:'
    'body': 'setBidiLevels(${1:uint8_t* levels}, forGlyphRange:${2:NSRange glyphRange})'
  'setBidiProcessingEnabled:':
    'prefix': 'setBidiProcessingEnabled:'
    'body': 'setBidiProcessingEnabled(${1:BOOL flag})'
  'setDrawsOutsideLineFragment:forGlyphRange:':
    'prefix': 'setDrawsOutsideLineFragment:forGlyphRange:'
    'body': 'setDrawsOutsideLineFragment(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setHardInvalidation:forGlyphRange:':
    'prefix': 'setHardInvalidation:forGlyphRange:'
    'body': 'setHardInvalidation(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setHyphenationFactor:':
    'prefix': 'setHyphenationFactor:'
    'body': 'setHyphenationFactor(${1:float factor})'
  'setLineFragmentPadding:':
    'prefix': 'setLineFragmentPadding:'
    'body': 'setLineFragmentPadding(${1:CGFloat padding})'
  'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:':
    'prefix': 'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'
    'body': 'setLineFragmentRect(${1:NSRect fragmentRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:NSRect usedRect}, baselineOffset:${4:CGFloat baselineOffset})'
  'setLocation:withAdvancements:forStartOfGlyphRange:':
    'prefix': 'setLocation:withAdvancements:forStartOfGlyphRange:'
    'body': 'setLocation(${1:NSPoint location}, withAdvancements:${2:CGFloat* advancements}, forStartOfGlyphRange:${3:NSRange glyphRange})'
  'setNotShownAttribute:forGlyphRange:':
    'prefix': 'setNotShownAttribute:forGlyphRange:'
    'body': 'setNotShownAttribute(${1:BOOL flag}, forGlyphRange:${2:NSRange glyphRange})'
  'setParagraphGlyphRange:separatorGlyphRange:':
    'prefix': 'setParagraphGlyphRange:separatorGlyphRange:'
    'body': 'setParagraphGlyphRange(${1:NSRange paragraphRange}, separatorGlyphRange:${2:NSRange paragraphSeparatorRange})'
  'setTypesetterBehavior:':
    'prefix': 'setTypesetterBehavior:'
    'body': 'setTypesetterBehavior(${1:NSTypesetterBehavior behavior})'
  'setUsesFontLeading:':
    'prefix': 'setUsesFontLeading:'
    'body': 'setUsesFontLeading(${1:BOOL flag})'
  'NSTypesetter.sharedSystemTypesetter':
    'prefix': 'sharedSystemTypesetter'
    'body': 'sharedSystemTypesetter()'
  'NSTypesetter.sharedSystemTypesetterForBehavior:':
    'prefix': 'sharedSystemTypesetterForBehavior:'
    'body': 'sharedSystemTypesetterForBehavior(${1:NSTypesetterBehavior theBehavior})'
  'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:':
    'prefix': 'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'
    'body': 'shouldBreakLineByHyphenatingBeforeCharacterAtIndex(${1:NSUInteger charIndex})'
  'shouldBreakLineByWordBeforeCharacterAtIndex:':
    'prefix': 'shouldBreakLineByWordBeforeCharacterAtIndex:'
    'body': 'shouldBreakLineByWordBeforeCharacterAtIndex(${1:NSUInteger charIndex})'
  'substituteFontForFont:':
    'prefix': 'substituteFontForFont:'
    'body': 'substituteFontForFont(${1:NSFont* originalFont})'
  'substituteGlyphsInRange:withGlyphs:':
    'prefix': 'substituteGlyphsInRange:withGlyphs:'
    'body': 'substituteGlyphsInRange(${1:NSRange glyphRange}, withGlyphs:${2:NSGlyph* glyphs})'
  'textContainers':
    'prefix': 'textContainers'
    'body': 'textContainers()'
  'textTabForGlyphLocation:writingDirection:maxLocation:':
    'prefix': 'textTabForGlyphLocation:writingDirection:maxLocation:'
    'body': 'textTabForGlyphLocation(${1:CGFloat glyphLocation}, writingDirection:${2:NSWritingDirection direction}, maxLocation:${3:CGFloat maxLocation})'
  'typesetterBehavior':
    'prefix': 'typesetterBehavior'
    'body': 'typesetterBehavior()'
  'usesFontLeading':
    'prefix': 'usesFontLeading'
    'body': 'usesFontLeading()'
  'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:':
    'prefix': 'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'
    'body': 'willSetLineFragmentRect(${1:NSRectPointer lineRect}, forGlyphRange:${2:NSRange glyphRange}, usedRect:${3:NSRectPointer usedRect}, baselineOffset:${4:CGFloat* baselineOffset})'
  'NSURL.URLFromPasteboard:':
    'prefix': 'URLFromPasteboard:'
    'body': 'URLFromPasteboard(${1:NSPasteboard* pasteBoard})'
  'writeToPasteboard:':
    'prefix': 'writeToPasteboard:'
    'body': 'writeToPasteboard(${1:NSPasteboard* pasteBoard})'
  'appliesImmediately':
    'prefix': 'appliesImmediately'
    'body': 'appliesImmediately()'
  'defaults':
    'prefix': 'defaults'
    'body': 'defaults()'
  'hasUnappliedChanges':
    'prefix': 'hasUnappliedChanges'
    'body': 'hasUnappliedChanges()'
  'initWithDefaults:initialValues:':
    'prefix': 'initWithDefaults:initialValues:'
    'body': 'initWithDefaults(${1:NSUserDefaults* defaults}, initialValues:${2:NSDictionary* initialValues})'
  'initialValues':
    'prefix': 'initialValues'
    'body': 'initialValues()'
  'revert:':
    'prefix': 'revert:'
    'body': 'revert(${1:id sender})'
  'revertToInitialValues:':
    'prefix': 'revertToInitialValues:'
    'body': 'revertToInitialValues(${1:id sender})'
  'save:':
    'prefix': 'save:'
    'body': 'save(${1:id sender})'
  'setAppliesImmediately:':
    'prefix': 'setAppliesImmediately:'
    'body': 'setAppliesImmediately(${1:BOOL flag})'
  'setInitialValues:':
    'prefix': 'setInitialValues:'
    'body': 'setInitialValues(${1:NSDictionary* initialValues})'
  'NSUserDefaultsController.sharedUserDefaultsController':
    'prefix': 'sharedUserDefaultsController'
    'body': 'sharedUserDefaultsController()'
  'values':
    'prefix': 'values'
    'body': 'values()'
  'acceptsFirstMouse:':
    'prefix': 'acceptsFirstMouse:'
    'body': 'acceptsFirstMouse(${1:NSEvent* theEvent})'
  'acceptsTouchEvents':
    'prefix': 'acceptsTouchEvents'
    'body': 'acceptsTouchEvents()'
  'addConstraint:':
    'prefix': 'addConstraint:'
    'body': 'addConstraint(${1:NSLayoutConstraint* constraint})'
  'addConstraints:':
    'prefix': 'addConstraints:'
    'body': 'addConstraints(${1:NSArray* constraints})'
  'addCursorRect:cursor:':
    'prefix': 'addCursorRect:cursor:'
    'body': 'addCursorRect(${1:NSRect aRect}, cursor:${2:NSCursor* anObj})'
  'addSubview:':
    'prefix': 'addSubview:'
    'body': 'addSubview(${1:NSView* aView})'
  'addSubview:positioned:relativeTo:':
    'prefix': 'addSubview:positioned:relativeTo:'
    'body': 'addSubview(${1:NSView* aView}, positioned:${2:NSWindowOrderingMode place}, relativeTo:${3:NSView* otherView})'
  'addToolTipRect:owner:userData:':
    'prefix': 'addToolTipRect:owner:userData:'
    'body': 'addToolTipRect(${1:NSRect aRect}, owner:${2:id anObject}, userData:${3:void* data})'
  'addTrackingArea:':
    'prefix': 'addTrackingArea:'
    'body': 'addTrackingArea(${1:NSTrackingArea* trackingArea})'
  'addTrackingRect:owner:userData:assumeInside:':
    'prefix': 'addTrackingRect:owner:userData:assumeInside:'
    'body': 'addTrackingRect(${1:NSRect aRect}, owner:${2:id anObject}, userData:${3:void* data}, assumeInside:${4:BOOL flag})'
  'adjustPageHeightNew:top:bottom:limit:':
    'prefix': 'adjustPageHeightNew:top:bottom:limit:'
    'body': 'adjustPageHeightNew(${1:CGFloat* newBottom}, top:${2:CGFloat oldTop}, bottom:${3:CGFloat oldBottom}, limit:${4:CGFloat bottomLimit})'
  'adjustPageWidthNew:left:right:limit:':
    'prefix': 'adjustPageWidthNew:left:right:limit:'
    'body': 'adjustPageWidthNew(${1:CGFloat* newRight}, left:${2:CGFloat oldLeft}, right:${3:CGFloat oldRight}, limit:${4:CGFloat rightLimit})'
  'adjustScroll:':
    'prefix': 'adjustScroll:'
    'body': 'adjustScroll(${1:NSRect newVisible})'
  'alignmentRectForFrame:':
    'prefix': 'alignmentRectForFrame:'
    'body': 'alignmentRectForFrame(${1:NSRect frame})'
  'alignmentRectInsets':
    'prefix': 'alignmentRectInsets'
    'body': 'alignmentRectInsets()'
  'allocateGState':
    'prefix': 'allocateGState'
    'body': 'allocateGState()'
  'alphaValue':
    'prefix': 'alphaValue'
    'body': 'alphaValue()'
  'ancestorSharedWithView:':
    'prefix': 'ancestorSharedWithView:'
    'body': 'ancestorSharedWithView(${1:NSView* aView})'
  'autoresizesSubviews':
    'prefix': 'autoresizesSubviews'
    'body': 'autoresizesSubviews()'
  'autoresizingMask':
    'prefix': 'autoresizingMask'
    'body': 'autoresizingMask()'
  'autoscroll:':
    'prefix': 'autoscroll:'
    'body': 'autoscroll(${1:NSEvent* theEvent})'
  'backgroundFilters':
    'prefix': 'backgroundFilters'
    'body': 'backgroundFilters()'
  'backingAlignedRect:options:':
    'prefix': 'backingAlignedRect:options:'
    'body': 'backingAlignedRect(${1:NSRect aRect}, options:${2:NSAlignmentOptions options})'
  'baselineOffsetFromBottom':
    'prefix': 'baselineOffsetFromBottom'
    'body': 'baselineOffsetFromBottom()'
  'beginDocument':
    'prefix': 'beginDocument'
    'body': 'beginDocument()'
  'beginDraggingSessionWithItems:event:source:':
    'prefix': 'beginDraggingSessionWithItems:event:source:'
    'body': 'beginDraggingSessionWithItems(${1:NSArray* items}, event:${2:NSEvent* event}, source:${3:id source})'
  'beginPageInRect:atPlacement:':
    'prefix': 'beginPageInRect:atPlacement:'
    'body': 'beginPageInRect(${1:NSRect aRect}, atPlacement:${2:NSPoint location})'
  'bitmapImageRepForCachingDisplayInRect:':
    'prefix': 'bitmapImageRepForCachingDisplayInRect:'
    'body': 'bitmapImageRepForCachingDisplayInRect(${1:NSRect rect})'
  'bounds':
    'prefix': 'bounds'
    'body': 'bounds()'
  'boundsRotation':
    'prefix': 'boundsRotation'
    'body': 'boundsRotation()'
  'cacheDisplayInRect:toBitmapImageRep:':
    'prefix': 'cacheDisplayInRect:toBitmapImageRep:'
    'body': 'cacheDisplayInRect(${1:NSRect rect}, toBitmapImageRep:${2:NSBitmapImageRep* bitmapImageRep})'
  'canBecomeKeyView':
    'prefix': 'canBecomeKeyView'
    'body': 'canBecomeKeyView()'
  'canDraw':
    'prefix': 'canDraw'
    'body': 'canDraw()'
  'canDrawConcurrently':
    'prefix': 'canDrawConcurrently'
    'body': 'canDrawConcurrently()'
  'canDrawSubviewsIntoLayer':
    'prefix': 'canDrawSubviewsIntoLayer'
    'body': 'canDrawSubviewsIntoLayer()'
  'centerScanRect:':
    'prefix': 'centerScanRect:'
    'body': 'centerScanRect(${1:NSRect aRect})'
  'compositingFilter':
    'prefix': 'compositingFilter'
    'body': 'compositingFilter()'
  'constraints':
    'prefix': 'constraints'
    'body': 'constraints()'
  'constraintsAffectingLayoutForOrientation:':
    'prefix': 'constraintsAffectingLayoutForOrientation:'
    'body': 'constraintsAffectingLayoutForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'contentCompressionResistancePriorityForOrientation:':
    'prefix': 'contentCompressionResistancePriorityForOrientation:'
    'body': 'contentCompressionResistancePriorityForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'contentFilters':
    'prefix': 'contentFilters'
    'body': 'contentFilters()'
  'contentHuggingPriorityForOrientation:':
    'prefix': 'contentHuggingPriorityForOrientation:'
    'body': 'contentHuggingPriorityForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'convertPoint:fromView:':
    'prefix': 'convertPoint:fromView:'
    'body': 'convertPoint(${1:NSPoint aPoint}, fromView:${2:NSView* aView})'
  'convertPoint:toView:':
    'prefix': 'convertPoint:toView:'
    'body': 'convertPoint(${1:NSPoint aPoint}, toView:${2:NSView* aView})'
  'convertPointFromBacking:':
    'prefix': 'convertPointFromBacking:'
    'body': 'convertPointFromBacking(${1:NSPoint aPoint})'
  'convertPointFromBase:':
    'prefix': 'convertPointFromBase:'
    'body': 'convertPointFromBase(${1:NSPoint aPoint})'
  'convertPointFromLayer:':
    'prefix': 'convertPointFromLayer:'
    'body': 'convertPointFromLayer(${1:NSPoint aPoint})'
  'convertPointToBacking:':
    'prefix': 'convertPointToBacking:'
    'body': 'convertPointToBacking(${1:NSPoint aPoint})'
  'convertPointToBase:':
    'prefix': 'convertPointToBase:'
    'body': 'convertPointToBase(${1:NSPoint aPoint})'
  'convertPointToLayer:':
    'prefix': 'convertPointToLayer:'
    'body': 'convertPointToLayer(${1:NSPoint aPoint})'
  'convertRect:fromView:':
    'prefix': 'convertRect:fromView:'
    'body': 'convertRect(${1:NSRect aRect}, fromView:${2:NSView* aView})'
  'convertRect:toView:':
    'prefix': 'convertRect:toView:'
    'body': 'convertRect(${1:NSRect aRect}, toView:${2:NSView* aView})'
  'convertRectFromBacking:':
    'prefix': 'convertRectFromBacking:'
    'body': 'convertRectFromBacking(${1:NSRect aRect})'
  'convertRectFromBase:':
    'prefix': 'convertRectFromBase:'
    'body': 'convertRectFromBase(${1:NSRect aRect})'
  'convertRectFromLayer:':
    'prefix': 'convertRectFromLayer:'
    'body': 'convertRectFromLayer(${1:NSRect aRect})'
  'convertRectToBacking:':
    'prefix': 'convertRectToBacking:'
    'body': 'convertRectToBacking(${1:NSRect aRect})'
  'convertRectToBase:':
    'prefix': 'convertRectToBase:'
    'body': 'convertRectToBase(${1:NSRect aRect})'
  'convertRectToLayer:':
    'prefix': 'convertRectToLayer:'
    'body': 'convertRectToLayer(${1:NSRect aRect})'
  'convertSize:fromView:':
    'prefix': 'convertSize:fromView:'
    'body': 'convertSize(${1:NSSize aSize}, fromView:${2:NSView* aView})'
  'convertSize:toView:':
    'prefix': 'convertSize:toView:'
    'body': 'convertSize(${1:NSSize aSize}, toView:${2:NSView* aView})'
  'convertSizeFromBacking:':
    'prefix': 'convertSizeFromBacking:'
    'body': 'convertSizeFromBacking(${1:NSSize aSize})'
  'convertSizeFromBase:':
    'prefix': 'convertSizeFromBase:'
    'body': 'convertSizeFromBase(${1:NSSize aSize})'
  'convertSizeFromLayer:':
    'prefix': 'convertSizeFromLayer:'
    'body': 'convertSizeFromLayer(${1:NSSize aSize})'
  'convertSizeToBacking:':
    'prefix': 'convertSizeToBacking:'
    'body': 'convertSizeToBacking(${1:NSSize aSize})'
  'convertSizeToBase:':
    'prefix': 'convertSizeToBase:'
    'body': 'convertSizeToBase(${1:NSSize aSize})'
  'convertSizeToLayer:':
    'prefix': 'convertSizeToLayer:'
    'body': 'convertSizeToLayer(${1:NSSize aSize})'
  'dataWithEPSInsideRect:':
    'prefix': 'dataWithEPSInsideRect:'
    'body': 'dataWithEPSInsideRect(${1:NSRect rect})'
  'dataWithPDFInsideRect:':
    'prefix': 'dataWithPDFInsideRect:'
    'body': 'dataWithPDFInsideRect(${1:NSRect rect})'
  'NSView.defaultFocusRingType':
    'prefix': 'defaultFocusRingType'
    'body': 'defaultFocusRingType()'
  'NSView.defaultMenu':
    'prefix': 'defaultMenu'
    'body': 'defaultMenu()'
  'didAddSubview:':
    'prefix': 'didAddSubview:'
    'body': 'didAddSubview(${1:NSView* subview})'
  'discardCursorRects':
    'prefix': 'discardCursorRects'
    'body': 'discardCursorRects()'
  'display':
    'prefix': 'display'
    'body': 'display()'
  'displayIfNeeded':
    'prefix': 'displayIfNeeded'
    'body': 'displayIfNeeded()'
  'displayIfNeededIgnoringOpacity':
    'prefix': 'displayIfNeededIgnoringOpacity'
    'body': 'displayIfNeededIgnoringOpacity()'
  'displayIfNeededInRect:':
    'prefix': 'displayIfNeededInRect:'
    'body': 'displayIfNeededInRect(${1:NSRect rect})'
  'displayIfNeededInRectIgnoringOpacity:':
    'prefix': 'displayIfNeededInRectIgnoringOpacity:'
    'body': 'displayIfNeededInRectIgnoringOpacity(${1:NSRect rect})'
  'displayRect:':
    'prefix': 'displayRect:'
    'body': 'displayRect(${1:NSRect rect})'
  'displayRectIgnoringOpacity:':
    'prefix': 'displayRectIgnoringOpacity:'
    'body': 'displayRectIgnoringOpacity(${1:NSRect rect})'
  'displayRectIgnoringOpacity:inContext:':
    'prefix': 'displayRectIgnoringOpacity:inContext:'
    'body': 'displayRectIgnoringOpacity(${1:NSRect aRect}, inContext:${2:NSGraphicsContext* context})'
  'dragFile:fromRect:slideBack:event:':
    'prefix': 'dragFile:fromRect:slideBack:event:'
    'body': 'dragFile(${1:NSString* filename}, fromRect:${2:NSRect rect}, slideBack:${3:BOOL aFlag}, event:${4:NSEvent* event})'
  'dragImage:at:offset:event:pasteboard:source:slideBack:':
    'prefix': 'dragImage:at:offset:event:pasteboard:source:slideBack:'
    'body': 'dragImage(${1:NSImage* anImage}, at:${2:NSPoint viewLocation}, offset:${3:NSSize initialOffset}, event:${4:NSEvent* event}, pasteboard:${5:NSPasteboard* pboard}, source:${6:id sourceObj}, slideBack:${7:BOOL slideFlag})'
  'dragPromisedFilesOfTypes:fromRect:source:slideBack:event:':
    'prefix': 'dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'
    'body': 'dragPromisedFilesOfTypes(${1:NSArray* typeArray}, fromRect:${2:NSRect rect}, source:${3:id sourceObject}, slideBack:${4:BOOL aFlag}, event:${5:NSEvent* event})'
  'drawFocusRingMask':
    'prefix': 'drawFocusRingMask'
    'body': 'drawFocusRingMask()'
  'drawPageBorderWithSize:':
    'prefix': 'drawPageBorderWithSize:'
    'body': 'drawPageBorderWithSize(${1:NSSize borderSize})'
  'drawRect:':
    'prefix': 'drawRect:'
    'body': 'drawRect(${1:NSRect dirtyRect})'
  'drawSheetBorderWithSize:':
    'prefix': 'drawSheetBorderWithSize:'
    'body': 'drawSheetBorderWithSize(${1:NSSize borderSize})'
  'enclosingMenuItem':
    'prefix': 'enclosingMenuItem'
    'body': 'enclosingMenuItem()'
  'enclosingScrollView':
    'prefix': 'enclosingScrollView'
    'body': 'enclosingScrollView()'
  'endDocument':
    'prefix': 'endDocument'
    'body': 'endDocument()'
  'endPage':
    'prefix': 'endPage'
    'body': 'endPage()'
  'enterFullScreenMode:withOptions:':
    'prefix': 'enterFullScreenMode:withOptions:'
    'body': 'enterFullScreenMode(${1:NSScreen* screen}, withOptions:${2:NSDictionary* options})'
  'exerciseAmbiguityInLayout':
    'prefix': 'exerciseAmbiguityInLayout'
    'body': 'exerciseAmbiguityInLayout()'
  'exitFullScreenModeWithOptions:':
    'prefix': 'exitFullScreenModeWithOptions:'
    'body': 'exitFullScreenModeWithOptions(${1:NSDictionary* options})'
  'fittingSize':
    'prefix': 'fittingSize'
    'body': 'fittingSize()'
  'focusRingMaskBounds':
    'prefix': 'focusRingMaskBounds'
    'body': 'focusRingMaskBounds()'
  'focusRingType':
    'prefix': 'focusRingType'
    'body': 'focusRingType()'
  'NSView.focusView':
    'prefix': 'focusView'
    'body': 'focusView()'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'frameCenterRotation':
    'prefix': 'frameCenterRotation'
    'body': 'frameCenterRotation()'
  'frameForAlignmentRect:':
    'prefix': 'frameForAlignmentRect:'
    'body': 'frameForAlignmentRect(${1:NSRect alignmentRect})'
  'frameRotation':
    'prefix': 'frameRotation'
    'body': 'frameRotation()'
  'gState':
    'prefix': 'gState'
    'body': 'gState()'
  'getRectsBeingDrawn:count:':
    'prefix': 'getRectsBeingDrawn:count:'
    'body': 'getRectsBeingDrawn(${1:NSRect** rects}, count:${2:NSInteger* count})'
  'getRectsExposedDuringLiveResize:count:':
    'prefix': 'getRectsExposedDuringLiveResize:count:'
    'body': 'getRectsExposedDuringLiveResize(${1:NSRect* exposedRects}, count:${2:NSInteger* count})'
  'hasAmbiguousLayout':
    'prefix': 'hasAmbiguousLayout'
    'body': 'hasAmbiguousLayout()'
  'heightAdjustLimit':
    'prefix': 'heightAdjustLimit'
    'body': 'heightAdjustLimit()'
  'hitTest:':
    'prefix': 'hitTest:'
    'body': 'hitTest(${1:NSPoint aPoint})'
  'inLiveResize':
    'prefix': 'inLiveResize'
    'body': 'inLiveResize()'
  'initWithFrame:':
    'prefix': 'initWithFrame:'
    'body': 'initWithFrame(${1:NSRect frameRect})'
  'inputContext':
    'prefix': 'inputContext'
    'body': 'inputContext()'
  'intrinsicContentSize':
    'prefix': 'intrinsicContentSize'
    'body': 'intrinsicContentSize()'
  'invalidateIntrinsicContentSize':
    'prefix': 'invalidateIntrinsicContentSize'
    'body': 'invalidateIntrinsicContentSize()'
  'NSView.isCompatibleWithResponsiveScrolling':
    'prefix': 'isCompatibleWithResponsiveScrolling'
    'body': 'isCompatibleWithResponsiveScrolling()'
  'isDescendantOf:':
    'prefix': 'isDescendantOf:'
    'body': 'isDescendantOf(${1:NSView* aView})'
  'isDrawingFindIndicator':
    'prefix': 'isDrawingFindIndicator'
    'body': 'isDrawingFindIndicator()'
  'isFlipped':
    'prefix': 'isFlipped'
    'body': 'isFlipped()'
  'isHidden':
    'prefix': 'isHidden'
    'body': 'isHidden()'
  'isHiddenOrHasHiddenAncestor':
    'prefix': 'isHiddenOrHasHiddenAncestor'
    'body': 'isHiddenOrHasHiddenAncestor()'
  'isInFullScreenMode':
    'prefix': 'isInFullScreenMode'
    'body': 'isInFullScreenMode()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'isRotatedFromBase':
    'prefix': 'isRotatedFromBase'
    'body': 'isRotatedFromBase()'
  'isRotatedOrScaledFromBase':
    'prefix': 'isRotatedOrScaledFromBase'
    'body': 'isRotatedOrScaledFromBase()'
  'knowsPageRange:':
    'prefix': 'knowsPageRange:'
    'body': 'KnowsPageRange(${1:NSRangePointer range})'
  'layer':
    'prefix': 'layer'
    'body': 'layer()'
  'layerContentsPlacement':
    'prefix': 'layerContentsPlacement'
    'body': 'layerContentsPlacement()'
  'layerContentsRedrawPolicy':
    'prefix': 'layerContentsRedrawPolicy'
    'body': 'layerContentsRedrawPolicy()'
  'layerUsesCoreImageFilters':
    'prefix': 'layerUsesCoreImageFilters'
    'body': 'layerUsesCoreImageFilters()'
  'layout':
    'prefix': 'layout'
    'body': 'layout()'
  'layoutSubtreeIfNeeded':
    'prefix': 'layoutSubtreeIfNeeded'
    'body': 'layoutSubtreeIfNeeded()'
  'locationOfPrintRect:':
    'prefix': 'locationOfPrintRect:'
    'body': 'locationOfPrintRect(${1:NSRect aRect})'
  'lockFocus':
    'prefix': 'lockFocus'
    'body': 'lockFocus()'
  'lockFocusIfCanDraw':
    'prefix': 'lockFocusIfCanDraw'
    'body': 'lockFocusIfCanDraw()'
  'lockFocusIfCanDrawInContext:':
    'prefix': 'lockFocusIfCanDrawInContext:'
    'body': 'lockFocusIfCanDrawInContext(${1:NSGraphicsContext* context})'
  'makeBackingLayer':
    'prefix': 'makeBackingLayer'
    'body': 'makeBackingLayer()'
  'menuForEvent:':
    'prefix': 'menuForEvent:'
    'body': 'menuForEvent(${1:NSEvent* event})'
  'mouse:inRect:':
    'prefix': 'mouse:inRect:'
    'body': 'mouse(${1:NSPoint aPoint}, inRect:${2:NSRect aRect})'
  'mouseDownCanMoveWindow':
    'prefix': 'mouseDownCanMoveWindow'
    'body': 'mouseDownCanMoveWindow()'
  'needsDisplay':
    'prefix': 'needsDisplay'
    'body': 'needsDisplay()'
  'needsLayout':
    'prefix': 'needsLayout'
    'body': 'needsLayout()'
  'needsPanelToBecomeKey':
    'prefix': 'needsPanelToBecomeKey'
    'body': 'needsPanelToBecomeKey()'
  'needsToDrawRect:':
    'prefix': 'needsToDrawRect:'
    'body': 'needsToDrawRect(${1:NSRect aRect})'
  'needsUpdateConstraints':
    'prefix': 'needsUpdateConstraints'
    'body': 'needsUpdateConstraints()'
  'nextKeyView':
    'prefix': 'nextKeyView'
    'body': 'nextKeyView()'
  'nextValidKeyView':
    'prefix': 'nextValidKeyView'
    'body': 'nextValidKeyView()'
  'noteFocusRingMaskChanged':
    'prefix': 'noteFocusRingMaskChanged'
    'body': 'noteFocusRingMaskChanged()'
  'opaqueAncestor':
    'prefix': 'opaqueAncestor'
    'body': 'opaqueAncestor()'
  'pageFooter':
    'prefix': 'pageFooter'
    'body': 'pageFooter()'
  'pageHeader':
    'prefix': 'pageHeader'
    'body': 'pageHeader()'
  'performKeyEquivalent:':
    'prefix': 'performKeyEquivalent:'
    'body': 'performKeyEquivalent(${1:NSEvent* theEvent})'
  'performMnemonic:':
    'prefix': 'performMnemonic:'
    'body': 'performMnemonic(${1:NSString* theString})'
  'postsBoundsChangedNotifications':
    'prefix': 'postsBoundsChangedNotifications'
    'body': 'postsBoundsChangedNotifications()'
  'postsFrameChangedNotifications':
    'prefix': 'postsFrameChangedNotifications'
    'body': 'postsFrameChangedNotifications()'
  'prepareContentInRect:':
    'prefix': 'prepareContentInRect:'
    'body': 'prepareContentInRect(${1:NSRect rect})'
  'prepareForReuse':
    'prefix': 'prepareForReuse'
    'body': 'prepareForReuse()'
  'preparedContentRect':
    'prefix': 'preparedContentRect'
    'body': 'preparedContentRect()'
  'preservesContentDuringLiveResize':
    'prefix': 'preservesContentDuringLiveResize'
    'body': 'preservesContentDuringLiveResize()'
  'previousKeyView':
    'prefix': 'previousKeyView'
    'body': 'previousKeyView()'
  'previousValidKeyView':
    'prefix': 'previousValidKeyView'
    'body': 'previousValidKeyView()'
  'print:':
    'prefix': 'print:'
    'body': 'print(${1:id sender})'
  'printJobTitle':
    'prefix': 'printJobTitle'
    'body': 'printJobTitle()'
  'rectForPage:':
    'prefix': 'rectForPage:'
    'body': 'rectForPage(${1:NSInteger page})'
  'rectForSmartMagnificationAtPoint:inRect:':
    'prefix': 'rectForSmartMagnificationAtPoint:inRect:'
    'body': 'rectForSmartMagnificationAtPoint(${1:NSPoint location}, inRect:${2:NSRect visibleRect})'
  'rectPreservedDuringLiveResize':
    'prefix': 'rectPreservedDuringLiveResize'
    'body': 'rectPreservedDuringLiveResize()'
  'reflectScrolledClipView:':
    'prefix': 'reflectScrolledClipView:'
    'body': 'reflectScrolledClipView(${1:NSClipView* aClipView})'
  'registerForDraggedTypes:':
    'prefix': 'registerForDraggedTypes:'
    'body': 'registerForDraggedTypes(${1:NSArray* newTypes})'
  'registeredDraggedTypes':
    'prefix': 'registeredDraggedTypes'
    'body': 'registeredDraggedTypes()'
  'releaseGState':
    'prefix': 'releaseGState'
    'body': 'releaseGState()'
  'removeAllToolTips':
    'prefix': 'removeAllToolTips'
    'body': 'removeAllToolTips()'
  'removeConstraint:':
    'prefix': 'removeConstraint:'
    'body': 'removeConstraint(${1:NSLayoutConstraint* constraint})'
  'removeConstraints:':
    'prefix': 'removeConstraints:'
    'body': 'removeConstraints(${1:NSArray* constraints})'
  'removeCursorRect:cursor:':
    'prefix': 'removeCursorRect:cursor:'
    'body': 'removeCursorRect(${1:NSRect aRect}, cursor:${2:NSCursor* anObj})'
  'removeFromSuperview':
    'prefix': 'removeFromSuperview'
    'body': 'removeFromSuperview()'
  'removeFromSuperviewWithoutNeedingDisplay':
    'prefix': 'removeFromSuperviewWithoutNeedingDisplay'
    'body': 'removeFromSuperviewWithoutNeedingDisplay()'
  'removeToolTip:':
    'prefix': 'removeToolTip:'
    'body': 'removeToolTip(${1:NSToolTipTag tag})'
  'removeTrackingArea:':
    'prefix': 'removeTrackingArea:'
    'body': 'removeTrackingArea(${1:NSTrackingArea* trackingArea})'
  'removeTrackingRect:':
    'prefix': 'removeTrackingRect:'
    'body': 'removeTrackingRect(${1:NSTrackingRectTag tag})'
  'renewGState':
    'prefix': 'renewGState'
    'body': 'renewGState()'
  'replaceSubview:with:':
    'prefix': 'replaceSubview:with:'
    'body': 'replaceSubview(${1:NSView* oldView}, with:${2:NSView* newView})'
  'NSView.requiresConstraintBasedLayout':
    'prefix': 'requiresConstraintBasedLayout'
    'body': 'requiresConstraintBasedLayout()'
  'resetCursorRects':
    'prefix': 'resetCursorRects'
    'body': 'resetCursorRects()'
  'resizeSubviewsWithOldSize:':
    'prefix': 'resizeSubviewsWithOldSize:'
    'body': 'resizeSubviewsWithOldSize(${1:NSSize oldSize})'
  'resizeWithOldSuperviewSize:':
    'prefix': 'resizeWithOldSuperviewSize:'
    'body': 'resizeWithOldSuperviewSize(${1:NSSize oldSize})'
  'rotateByAngle:':
    'prefix': 'rotateByAngle:'
    'body': 'rotateByAngle(${1:CGFloat angle})'
  'rulerView:didAddMarker:':
    'prefix': 'rulerView:didAddMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didAddMarker:${2:NSRulerMarker* marker})'
  'rulerView:didMoveMarker:':
    'prefix': 'rulerView:didMoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didMoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:didRemoveMarker:':
    'prefix': 'rulerView:didRemoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, didRemoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:handleMouseDown:':
    'prefix': 'rulerView:handleMouseDown:'
    'body': 'rulerView(${1:NSRulerView* ruler}, handleMouseDown:${2:NSEvent* event})'
  'rulerView:locationForPoint:':
    'prefix': 'rulerView:locationForPoint:'
    'body': 'rulerView(${1:NSRulerView* ruler}, locationForPoint:${2:NSPoint aPoint})'
  'rulerView:pointForLocation:':
    'prefix': 'rulerView:pointForLocation:'
    'body': 'rulerView(${1:NSRulerView* ruler}, pointForLocation:${2:CGFloat aPoint})'
  'rulerView:shouldAddMarker:':
    'prefix': 'rulerView:shouldAddMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldAddMarker:${2:NSRulerMarker* marker})'
  'rulerView:shouldMoveMarker:':
    'prefix': 'rulerView:shouldMoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldMoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:shouldRemoveMarker:':
    'prefix': 'rulerView:shouldRemoveMarker:'
    'body': 'rulerView(${1:NSRulerView* ruler}, shouldRemoveMarker:${2:NSRulerMarker* marker})'
  'rulerView:willAddMarker:atLocation:':
    'prefix': 'rulerView:willAddMarker:atLocation:'
    'body': 'rulerView(${1:NSRulerView* ruler}, willAddMarker:${2:NSRulerMarker* marker}, atLocation:${3:CGFloat location})'
  'rulerView:willMoveMarker:toLocation:':
    'prefix': 'rulerView:willMoveMarker:toLocation:'
    'body': 'rulerView(${1:NSRulerView* ruler}, willMoveMarker:${2:NSRulerMarker* marker}, toLocation:${3:CGFloat location})'
  'rulerView:willSetClientView:':
    'prefix': 'rulerView:willSetClientView:'
    'body': 'rulerView(${1:NSRulerView* ruler}, willSetClientView:${2:NSView* newClient})'
  'scaleUnitSquareToSize:':
    'prefix': 'scaleUnitSquareToSize:'
    'body': 'scaleUnitSquareToSize(${1:NSSize newUnitSize})'
  'scrollClipView:toPoint:':
    'prefix': 'scrollClipView:toPoint:'
    'body': 'scrollClipView(${1:NSClipView* aClipView}, toPoint:${2:NSPoint aPoint})'
  'scrollPoint:':
    'prefix': 'scrollPoint:'
    'body': 'scrollPoint(${1:NSPoint aPoint})'
  'scrollRect:by:':
    'prefix': 'scrollRect:by:'
    'body': 'scrollRect(${1:NSRect aRect}, by:${2:NSSize delta})'
  'scrollRectToVisible:':
    'prefix': 'scrollRectToVisible:'
    'body': 'scrollRectToVisible(${1:NSRect aRect})'
  'setAcceptsTouchEvents:':
    'prefix': 'setAcceptsTouchEvents:'
    'body': 'setAcceptsTouchEvents(${1:BOOL flag})'
  'setAlphaValue:':
    'prefix': 'setAlphaValue:'
    'body': 'setAlphaValue(${1:CGFloat viewAlpha})'
  'setAutoresizesSubviews:':
    'prefix': 'setAutoresizesSubviews:'
    'body': 'setAutoresizesSubviews(${1:BOOL flag})'
  'setAutoresizingMask:':
    'prefix': 'setAutoresizingMask:'
    'body': 'setAutoresizingMask(${1:NSUInteger mask})'
  'setBackgroundFilters:':
    'prefix': 'setBackgroundFilters:'
    'body': 'setBackgroundFilters(${1:NSArray* filters})'
  'setBounds:':
    'prefix': 'setBounds:'
    'body': 'setBounds(${1:NSRect aRect})'
  'setBoundsOrigin:':
    'prefix': 'setBoundsOrigin:'
    'body': 'setBoundsOrigin(${1:NSPoint newOrigin})'
  'setBoundsRotation:':
    'prefix': 'setBoundsRotation:'
    'body': 'setBoundsRotation(${1:CGFloat angle})'
  'setBoundsSize:':
    'prefix': 'setBoundsSize:'
    'body': 'setBoundsSize(${1:NSSize newSize})'
  'setCanDrawConcurrently:':
    'prefix': 'setCanDrawConcurrently:'
    'body': 'setCanDrawConcurrently(${1:BOOL flag})'
  'setCanDrawSubviewsIntoLayer:':
    'prefix': 'setCanDrawSubviewsIntoLayer:'
    'body': 'setCanDrawSubviewsIntoLayer(${1:BOOL flag})'
  'setCompositingFilter:':
    'prefix': 'setCompositingFilter:'
    'body': 'setCompositingFilter(${1:CIFilter* filter})'
  'setContentCompressionResistancePriority:forOrientation:':
    'prefix': 'setContentCompressionResistancePriority:forOrientation:'
    'body': 'setContentCompressionResistancePriority(${1:NSLayoutPriority priority}, forOrientation:${2:NSLayoutConstraintOrientation orientation})'
  'setContentFilters:':
    'prefix': 'setContentFilters:'
    'body': 'setContentFilters(${1:NSArray* filters})'
  'setContentHuggingPriority:forOrientation:':
    'prefix': 'setContentHuggingPriority:forOrientation:'
    'body': 'setContentHuggingPriority(${1:NSLayoutPriority priority}, forOrientation:${2:NSLayoutConstraintOrientation orientation})'
  'setFocusRingType:':
    'prefix': 'setFocusRingType:'
    'body': 'setFocusRingType(${1:NSFocusRingType focusRingType})'
  'setFrame:':
    'prefix': 'setFrame:'
    'body': 'setFrame(${1:NSRect frameRect})'
  'setFrameCenterRotation:':
    'prefix': 'setFrameCenterRotation:'
    'body': 'setFrameCenterRotation(${1:CGFloat angle})'
  'setFrameOrigin:':
    'prefix': 'setFrameOrigin:'
    'body': 'setFrameOrigin(${1:NSPoint newOrigin})'
  'setFrameRotation:':
    'prefix': 'setFrameRotation:'
    'body': 'setFrameRotation(${1:CGFloat angle})'
  'setFrameSize:':
    'prefix': 'setFrameSize:'
    'body': 'setFrameSize(${1:NSSize newSize})'
  'setHidden:':
    'prefix': 'setHidden:'
    'body': 'setHidden(${1:BOOL flag})'
  'setKeyboardFocusRingNeedsDisplayInRect:':
    'prefix': 'setKeyboardFocusRingNeedsDisplayInRect:'
    'body': 'setKeyboardFocusRingNeedsDisplayInRect(${1:NSRect rect})'
  'setLayer:':
    'prefix': 'setLayer:'
    'body': 'setLayer(${1:CALayer* newLayer})'
  'setLayerContentsPlacement:':
    'prefix': 'setLayerContentsPlacement:'
    'body': 'setLayerContentsPlacement(${1:NSViewLayerContentsPlacement newPlacement})'
  'setLayerContentsRedrawPolicy:':
    'prefix': 'setLayerContentsRedrawPolicy:'
    'body': 'setLayerContentsRedrawPolicy(${1:NSViewLayerContentsRedrawPolicy newPolicy})'
  'setLayerUsesCoreImageFilters:':
    'prefix': 'setLayerUsesCoreImageFilters:'
    'body': 'setLayerUsesCoreImageFilters(${1:BOOL usesFilters})'
  'setNeedsDisplay:':
    'prefix': 'setNeedsDisplay:'
    'body': 'setNeedsDisplay(${1:BOOL flag})'
  'setNeedsDisplayInRect:':
    'prefix': 'setNeedsDisplayInRect:'
    'body': 'setNeedsDisplayInRect(${1:NSRect invalidRect})'
  'setNeedsLayout:':
    'prefix': 'setNeedsLayout:'
    'body': 'setNeedsLayout(${1:BOOL flag})'
  'setNeedsUpdateConstraints:':
    'prefix': 'setNeedsUpdateConstraints:'
    'body': 'setNeedsUpdateConstraints(${1:BOOL flag})'
  'setNextKeyView:':
    'prefix': 'setNextKeyView:'
    'body': 'setNextKeyView(${1:NSView* next})'
  'setPostsBoundsChangedNotifications:':
    'prefix': 'setPostsBoundsChangedNotifications:'
    'body': 'setPostsBoundsChangedNotifications(${1:BOOL flag})'
  'setPostsFrameChangedNotifications:':
    'prefix': 'setPostsFrameChangedNotifications:'
    'body': 'setPostsFrameChangedNotifications(${1:BOOL flag})'
  'setPreparedContentRect:':
    'prefix': 'setPreparedContentRect:'
    'body': 'setPreparedContentRect(${1:NSRect preparedContentRect})'
  'setShadow:':
    'prefix': 'setShadow:'
    'body': 'setShadow(${1:NSShadow* shadow})'
  'setSubviews:':
    'prefix': 'setSubviews:'
    'body': 'setSubviews(${1:NSArray* newSubviews})'
  'setToolTip:':
    'prefix': 'setToolTip:'
    'body': 'setToolTip(${1:NSString* string})'
  'setTranslatesAutoresizingMaskIntoConstraints:':
    'prefix': 'setTranslatesAutoresizingMaskIntoConstraints:'
    'body': 'setTranslatesAutoresizingMaskIntoConstraints(${1:BOOL flag})'
  'setUpGState':
    'prefix': 'setUpGState'
    'body': 'setUpGState()'
  'setUserInterfaceLayoutDirection:':
    'prefix': 'setUserInterfaceLayoutDirection:'
    'body': 'setUserInterfaceLayoutDirection(${1:NSUserInterfaceLayoutDirection value})'
  'setWantsBestResolutionOpenGLSurface:':
    'prefix': 'setWantsBestResolutionOpenGLSurface:'
    'body': 'setWantsBestResolutionOpenGLSurface(${1:BOOL flag})'
  'setWantsLayer:':
    'prefix': 'setWantsLayer:'
    'body': 'setWantsLayer(${1:BOOL flag})'
  'setWantsRestingTouches:':
    'prefix': 'setWantsRestingTouches:'
    'body': 'setWantsRestingTouches(${1:BOOL flag})'
  'shadow':
    'prefix': 'shadow'
    'body': 'shadow()'
  'shouldDelayWindowOrderingForEvent:':
    'prefix': 'shouldDelayWindowOrderingForEvent:'
    'body': 'shouldDelayWindowOrderingForEvent(${1:NSEvent* theEvent})'
  'shouldDrawColor':
    'prefix': 'shouldDrawColor'
    'body': 'shouldDrawColor()'
  'showDefinitionForAttributedString:atPoint:':
    'prefix': 'showDefinitionForAttributedString:atPoint:'
    'body': 'showDefinitionForAttributedString(${1:NSAttributedString* attrString}, atPoint:${2:NSPoint textBaselineOrigin})'
  'showDefinitionForAttributedString:range:options:baselineOriginProvider:':
    'prefix': 'showDefinitionForAttributedString:range:options:baselineOriginProvider:'
    'body': 'showDefinitionForAttributedString(${1:NSAttributedString* attrString}, range:${2:NSRange targetRange}, options:${3:NSDictionary* options}, baselineOriginProvider:${4:NSPoint (^)(NSRange) originProvider})'
  'sortSubviewsUsingFunction:context:':
    'prefix': 'sortSubviewsUsingFunction:context:'
    'body': 'sortSubviewsUsingFunction(${1:NSComparisonResult (*)(id, id, void *) compare}, context:${2:void* context})'
  'subviews':
    'prefix': 'subviews'
    'body': 'subviews()'
  'superview':
    'prefix': 'superview'
    'body': 'superview()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'toolTip':
    'prefix': 'toolTip'
    'body': 'toolTip()'
  'trackingAreas':
    'prefix': 'trackingAreas'
    'body': 'trackingAreas()'
  'translateOriginToPoint:':
    'prefix': 'translateOriginToPoint:'
    'body': 'translateOriginToPoint(${1:NSPoint translation})'
  'translateRectsNeedingDisplayInRect:by:':
    'prefix': 'translateRectsNeedingDisplayInRect:by:'
    'body': 'translateRectsNeedingDisplayInRect(${1:NSRect clipRect}, by:${2:NSSize delta})'
  'translatesAutoresizingMaskIntoConstraints':
    'prefix': 'translatesAutoresizingMaskIntoConstraints'
    'body': 'translatesAutoresizingMaskIntoConstraints()'
  'unlockFocus':
    'prefix': 'unlockFocus'
    'body': 'unlockFocus()'
  'unregisterDraggedTypes':
    'prefix': 'unregisterDraggedTypes'
    'body': 'unregisterDraggedTypes()'
  'updateConstraints':
    'prefix': 'updateConstraints'
    'body': 'updateConstraints()'
  'updateConstraintsForSubtreeIfNeeded':
    'prefix': 'updateConstraintsForSubtreeIfNeeded'
    'body': 'updateConstraintsForSubtreeIfNeeded()'
  'updateLayer':
    'prefix': 'updateLayer'
    'body': 'updateLayer()'
  'updateTrackingAreas':
    'prefix': 'updateTrackingAreas'
    'body': 'updateTrackingAreas()'
  'userInterfaceLayoutDirection':
    'prefix': 'userInterfaceLayoutDirection'
    'body': 'userInterfaceLayoutDirection()'
  'viewDidChangeBackingProperties':
    'prefix': 'viewDidChangeBackingProperties'
    'body': 'viewDidChangeBackingProperties()'
  'viewDidEndLiveResize':
    'prefix': 'viewDidEndLiveResize'
    'body': 'viewDidEndLiveResize()'
  'viewDidHide':
    'prefix': 'viewDidHide'
    'body': 'viewDidHide()'
  'viewDidMoveToSuperview':
    'prefix': 'viewDidMoveToSuperview'
    'body': 'viewDidMoveToSuperview()'
  'viewDidMoveToWindow':
    'prefix': 'viewDidMoveToWindow'
    'body': 'viewDidMoveToWindow()'
  'viewDidUnhide':
    'prefix': 'viewDidUnhide'
    'body': 'viewDidUnhide()'
  'viewWillDraw':
    'prefix': 'viewWillDraw'
    'body': 'viewWillDraw()'
  'viewWillMoveToSuperview:':
    'prefix': 'viewWillMoveToSuperview:'
    'body': 'viewWillMoveToSuperview(${1:NSView* newSuperview})'
  'viewWillMoveToWindow:':
    'prefix': 'viewWillMoveToWindow:'
    'body': 'viewWillMoveToWindow(${1:NSWindow* newWindow})'
  'viewWillStartLiveResize':
    'prefix': 'viewWillStartLiveResize'
    'body': 'viewWillStartLiveResize()'
  'viewWithTag:':
    'prefix': 'viewWithTag:'
    'body': 'viewWithTag(${1:NSInteger aTag})'
  'visibleRect':
    'prefix': 'visibleRect'
    'body': 'visibleRect()'
  'wantsBestResolutionOpenGLSurface':
    'prefix': 'wantsBestResolutionOpenGLSurface'
    'body': 'wantsBestResolutionOpenGLSurface()'
  'wantsDefaultClipping':
    'prefix': 'wantsDefaultClipping'
    'body': 'wantsDefaultClipping()'
  'wantsLayer':
    'prefix': 'wantsLayer'
    'body': 'wantsLayer()'
  'wantsRestingTouches':
    'prefix': 'wantsRestingTouches'
    'body': 'wantsRestingTouches()'
  'wantsUpdateLayer':
    'prefix': 'wantsUpdateLayer'
    'body': 'wantsUpdateLayer()'
  'widthAdjustLimit':
    'prefix': 'widthAdjustLimit'
    'body': 'widthAdjustLimit()'
  'willRemoveSubview:':
    'prefix': 'willRemoveSubview:'
    'body': 'willRemoveSubview(${1:NSView* subview})'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'writeEPSInsideRect:toPasteboard:':
    'prefix': 'writeEPSInsideRect:toPasteboard:'
    'body': 'writeEPSInsideRect(${1:NSRect rect}, toPasteboard:${2:NSPasteboard* pasteboard})'
  'writePDFInsideRect:toPasteboard:':
    'prefix': 'writePDFInsideRect:toPasteboard:'
    'body': 'writePDFInsideRect(${1:NSRect rect}, toPasteboard:${2:NSPasteboard* pasteboard})'
  'initWithViewAnimations:':
    'prefix': 'initWithViewAnimations:'
    'body': 'initWithViewAnimations(${1:NSArray* viewAnimations})'
  'setViewAnimations:':
    'prefix': 'setViewAnimations:'
    'body': 'setViewAnimations(${1:NSArray* viewAnimations})'
  'viewAnimations':
    'prefix': 'viewAnimations'
    'body': 'viewAnimations()'
  'commitEditing':
    'prefix': 'commitEditing'
    'body': 'commitEditing()'
  'commitEditingWithDelegate:didCommitSelector:contextInfo:':
    'prefix': 'commitEditingWithDelegate:didCommitSelector:contextInfo:'
    'body': 'commitEditingWithDelegate(${1:id delegate}, didCommitSelector:${2:SEL didCommitSelector}, contextInfo:${3:void* contextInfo})'
  'discardEditing':
    'prefix': 'discardEditing'
    'body': 'discardEditing()'
  'initWithNibName:bundle:':
    'prefix': 'initWithNibName:bundle:'
    'body': 'initWithNibName(${1:NSString* nibNameOrNil}, bundle:${2:NSBundle* nibBundleOrNil})'
  'loadView':
    'prefix': 'loadView'
    'body': 'loadView()'
  'nibBundle':
    'prefix': 'nibBundle'
    'body': 'nibBundle()'
  'nibName':
    'prefix': 'nibName'
    'body': 'nibName()'
  'representedObject':
    'prefix': 'representedObject'
    'body': 'representedObject()'
  'setRepresentedObject:':
    'prefix': 'setRepresentedObject:'
    'body': 'setRepresentedObject(${1:id representedObject})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* title})'
  'setView:':
    'prefix': 'setView:'
    'body': 'setView(${1:NSView* view})'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'view':
    'prefix': 'view'
    'body': 'view()'
  'acceptsMouseMovedEvents':
    'prefix': 'acceptsMouseMovedEvents'
    'body': 'acceptsMouseMovedEvents()'
  'addChildWindow:ordered:':
    'prefix': 'addChildWindow:ordered:'
    'body': 'addChildWindow(${1:NSWindow* childWin}, ordered:${2:NSWindowOrderingMode place})'
  'allowsConcurrentViewDrawing':
    'prefix': 'allowsConcurrentViewDrawing'
    'body': 'allowsConcurrentViewDrawing()'
  'allowsToolTipsWhenApplicationIsInactive':
    'prefix': 'allowsToolTipsWhenApplicationIsInactive'
    'body': 'allowsToolTipsWhenApplicationIsInactive()'
  'alphaValue':
    'prefix': 'alphaValue'
    'body': 'alphaValue()'
  'anchorAttributeForOrientation:':
    'prefix': 'anchorAttributeForOrientation:'
    'body': 'anchorAttributeForOrientation(${1:NSLayoutConstraintOrientation orientation})'
  'animationBehavior':
    'prefix': 'animationBehavior'
    'body': 'animationBehavior()'
  'animationResizeTime:':
    'prefix': 'animationResizeTime:'
    'body': 'animationResizeTime(${1:NSRect newFrame})'
  'areCursorRectsEnabled':
    'prefix': 'areCursorRectsEnabled'
    'body': 'areCursorRectsEnabled()'
  'aspectRatio':
    'prefix': 'aspectRatio'
    'body': 'aspectRatio()'
  'attachedSheet':
    'prefix': 'attachedSheet'
    'body': 'attachedSheet()'
  'autorecalculatesContentBorderThicknessForEdge:':
    'prefix': 'autorecalculatesContentBorderThicknessForEdge:'
    'body': 'autorecalculatesContentBorderThicknessForEdge(${1:NSRectEdge edge})'
  'autorecalculatesKeyViewLoop':
    'prefix': 'autorecalculatesKeyViewLoop'
    'body': 'autorecalculatesKeyViewLoop()'
  'backgroundColor':
    'prefix': 'backgroundColor'
    'body': 'backgroundColor()'
  'backingAlignedRect:options:':
    'prefix': 'backingAlignedRect:options:'
    'body': 'backingAlignedRect(${1:NSRect aRect}, options:${2:NSAlignmentOptions options})'
  'backingLocation':
    'prefix': 'backingLocation'
    'body': 'backingLocation()'
  'backingScaleFactor':
    'prefix': 'backingScaleFactor'
    'body': 'backingScaleFactor()'
  'backingType':
    'prefix': 'backingType'
    'body': 'backingType()'
  'becomeKeyWindow':
    'prefix': 'becomeKeyWindow'
    'body': 'becomeKeyWindow()'
  'becomeMainWindow':
    'prefix': 'becomeMainWindow'
    'body': 'becomeMainWindow()'
  'beginCriticalSheet:completionHandler:':
    'prefix': 'beginCriticalSheet:completionHandler:'
    'body': 'beginCriticalSheet(${1:NSWindow* sheetWindow}, completionHandler:${2:void (^)(NSModalResponse) handler})'
  'beginSheet:completionHandler:':
    'prefix': 'beginSheet:completionHandler:'
    'body': 'beginSheet(${1:NSWindow* sheetWindow}, completionHandler:${2:void (^)(NSModalResponse) handler})'
  'cacheImageInRect:':
    'prefix': 'cacheImageInRect:'
    'body': 'cacheImageInRect(${1:NSRect aRect})'
  'canBeVisibleOnAllSpaces':
    'prefix': 'canBeVisibleOnAllSpaces'
    'body': 'canBeVisibleOnAllSpaces()'
  'canBecomeKeyWindow':
    'prefix': 'canBecomeKeyWindow'
    'body': 'canBecomeKeyWindow()'
  'canBecomeMainWindow':
    'prefix': 'canBecomeMainWindow'
    'body': 'canBecomeMainWindow()'
  'canBecomeVisibleWithoutLogin':
    'prefix': 'canBecomeVisibleWithoutLogin'
    'body': 'canBecomeVisibleWithoutLogin()'
  'canHide':
    'prefix': 'canHide'
    'body': 'canHide()'
  'canStoreColor':
    'prefix': 'canStoreColor'
    'body': 'canStoreColor()'
  'cascadeTopLeftFromPoint:':
    'prefix': 'cascadeTopLeftFromPoint:'
    'body': 'cascadeTopLeftFromPoint(${1:NSPoint topLeftPoint})'
  'center':
    'prefix': 'center'
    'body': 'center()'
  'childWindows':
    'prefix': 'childWindows'
    'body': 'childWindows()'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'collectionBehavior':
    'prefix': 'collectionBehavior'
    'body': 'collectionBehavior()'
  'colorSpace':
    'prefix': 'colorSpace'
    'body': 'colorSpace()'
  'constrainFrameRect:toScreen:':
    'prefix': 'constrainFrameRect:toScreen:'
    'body': 'constrainFrameRect(${1:NSRect frameRect}, toScreen:${2:NSScreen* screen})'
  'contentAspectRatio':
    'prefix': 'contentAspectRatio'
    'body': 'contentAspectRatio()'
  'contentBorderThicknessForEdge:':
    'prefix': 'contentBorderThicknessForEdge:'
    'body': 'contentBorderThicknessForEdge(${1:NSRectEdge edge})'
  'contentMaxSize':
    'prefix': 'contentMaxSize'
    'body': 'contentMaxSize()'
  'contentMinSize':
    'prefix': 'contentMinSize'
    'body': 'contentMinSize()'
  'contentRectForFrameRect:':
    'prefix': 'contentRectForFrameRect:'
    'body': 'contentRectForFrameRect(${1:NSRect frameRect})'
  'NSWindow.contentRectForFrameRect:styleMask:':
    'prefix': 'contentRectForFrameRect:styleMask:'
    'body': 'contentRectForFrameRect(${1:NSRect fRect}, styleMask:${2:NSUInteger aStyle})'
  'contentResizeIncrements':
    'prefix': 'contentResizeIncrements'
    'body': 'contentResizeIncrements()'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'convertBaseToScreen:':
    'prefix': 'convertBaseToScreen:'
    'body': 'convertBaseToScreen(${1:NSPoint aPoint})'
  'convertRectFromBacking:':
    'prefix': 'convertRectFromBacking:'
    'body': 'convertRectFromBacking(${1:NSRect aRect})'
  'convertRectFromScreen:':
    'prefix': 'convertRectFromScreen:'
    'body': 'convertRectFromScreen(${1:NSRect aRect})'
  'convertRectToBacking:':
    'prefix': 'convertRectToBacking:'
    'body': 'convertRectToBacking(${1:NSRect aRect})'
  'convertRectToScreen:':
    'prefix': 'convertRectToScreen:'
    'body': 'convertRectToScreen(${1:NSRect aRect})'
  'convertScreenToBase:':
    'prefix': 'convertScreenToBase:'
    'body': 'convertScreenToBase(${1:NSPoint aPoint})'
  'currentEvent':
    'prefix': 'currentEvent'
    'body': 'currentEvent()'
  'dataWithEPSInsideRect:':
    'prefix': 'dataWithEPSInsideRect:'
    'body': 'dataWithEPSInsideRect(${1:NSRect rect})'
  'dataWithPDFInsideRect:':
    'prefix': 'dataWithPDFInsideRect:'
    'body': 'dataWithPDFInsideRect(${1:NSRect rect})'
  'deepestScreen':
    'prefix': 'deepestScreen'
    'body': 'deepestScreen()'
  'defaultButtonCell':
    'prefix': 'defaultButtonCell'
    'body': 'defaultButtonCell()'
  'NSWindow.defaultDepthLimit':
    'prefix': 'defaultDepthLimit'
    'body': 'defaultDepthLimit()'
  'delegate':
    'prefix': 'delegate'
    'body': 'delegate()'
  'deminiaturize:':
    'prefix': 'deminiaturize:'
    'body': 'deminiaturize(${1:id sender})'
  'depthLimit':
    'prefix': 'depthLimit'
    'body': 'depthLimit()'
  'deviceDescription':
    'prefix': 'deviceDescription'
    'body': 'deviceDescription()'
  'disableCursorRects':
    'prefix': 'disableCursorRects'
    'body': 'disableCursorRects()'
  'disableFlushWindow':
    'prefix': 'disableFlushWindow'
    'body': 'disableFlushWindow()'
  'disableKeyEquivalentForDefaultButtonCell':
    'prefix': 'disableKeyEquivalentForDefaultButtonCell'
    'body': 'disableKeyEquivalentForDefaultButtonCell()'
  'disableScreenUpdatesUntilFlush':
    'prefix': 'disableScreenUpdatesUntilFlush'
    'body': 'disableScreenUpdatesUntilFlush()'
  'disableSnapshotRestoration':
    'prefix': 'disableSnapshotRestoration'
    'body': 'disableSnapshotRestoration()'
  'discardCachedImage':
    'prefix': 'discardCachedImage'
    'body': 'discardCachedImage()'
  'discardCursorRects':
    'prefix': 'discardCursorRects'
    'body': 'discardCursorRects()'
  'discardEventsMatchingMask:beforeEvent:':
    'prefix': 'discardEventsMatchingMask:beforeEvent:'
    'body': 'discardEventsMatchingMask(${1:NSUInteger mask}, beforeEvent:${2:NSEvent* lastEvent})'
  'display':
    'prefix': 'display'
    'body': 'display()'
  'displayIfNeeded':
    'prefix': 'displayIfNeeded'
    'body': 'displayIfNeeded()'
  'displaysWhenScreenProfileChanges':
    'prefix': 'displaysWhenScreenProfileChanges'
    'body': 'displaysWhenScreenProfileChanges()'
  'dockTile':
    'prefix': 'dockTile'
    'body': 'dockTile()'
  'dragImage:at:offset:event:pasteboard:source:slideBack:':
    'prefix': 'dragImage:at:offset:event:pasteboard:source:slideBack:'
    'body': 'dragImage(${1:NSImage* anImage}, at:${2:NSPoint baseLocation}, offset:${3:NSSize initialOffset}, event:${4:NSEvent* event}, pasteboard:${5:NSPasteboard* pboard}, source:${6:id sourceObj}, slideBack:${7:BOOL slideFlag})'
  'drawers':
    'prefix': 'drawers'
    'body': 'drawers()'
  'enableCursorRects':
    'prefix': 'enableCursorRects'
    'body': 'enableCursorRects()'
  'enableFlushWindow':
    'prefix': 'enableFlushWindow'
    'body': 'enableFlushWindow()'
  'enableKeyEquivalentForDefaultButtonCell':
    'prefix': 'enableKeyEquivalentForDefaultButtonCell'
    'body': 'enableKeyEquivalentForDefaultButtonCell()'
  'enableSnapshotRestoration':
    'prefix': 'enableSnapshotRestoration'
    'body': 'enableSnapshotRestoration()'
  'endEditingFor:':
    'prefix': 'endEditingFor:'
    'body': 'endEditingFor(${1:id anObject})'
  'endSheet:':
    'prefix': 'endSheet:'
    'body': 'endSheet(${1:NSWindow* sheetWindow})'
  'endSheet:returnCode:':
    'prefix': 'endSheet:returnCode:'
    'body': 'endSheet(${1:NSWindow* sheetWindow}, returnCode:${2:NSModalResponse returnCode})'
  'fieldEditor:forObject:':
    'prefix': 'fieldEditor:forObject:'
    'body': 'fieldEditor(${1:BOOL createFlag}, forObject:${2:id anObject})'
  'firstResponder':
    'prefix': 'firstResponder'
    'body': 'firstResponder()'
  'flushWindow':
    'prefix': 'flushWindow'
    'body': 'flushWindow()'
  'flushWindowIfNeeded':
    'prefix': 'flushWindowIfNeeded'
    'body': 'flushWindowIfNeeded()'
  'frame':
    'prefix': 'frame'
    'body': 'frame()'
  'frameAutosaveName':
    'prefix': 'frameAutosaveName'
    'body': 'frameAutosaveName()'
  'frameRectForContentRect:':
    'prefix': 'frameRectForContentRect:'
    'body': 'frameRectForContentRect(${1:NSRect contentRect})'
  'NSWindow.frameRectForContentRect:styleMask:':
    'prefix': 'frameRectForContentRect:styleMask:'
    'body': 'frameRectForContentRect(${1:NSRect cRect}, styleMask:${2:NSUInteger aStyle})'
  'gState':
    'prefix': 'gState'
    'body': 'gState()'
  'graphicsContext':
    'prefix': 'graphicsContext'
    'body': 'graphicsContext()'
  'handleCloseScriptCommand:':
    'prefix': 'handleCloseScriptCommand:'
    'body': 'handleCloseScriptCommand(${1:NSCloseCommand* command})'
  'handlePrintScriptCommand:':
    'prefix': 'handlePrintScriptCommand:'
    'body': 'handlePrintScriptCommand(${1:NSScriptCommand* command})'
  'handleSaveScriptCommand:':
    'prefix': 'handleSaveScriptCommand:'
    'body': 'handleSaveScriptCommand(${1:NSScriptCommand* command})'
  'hasCloseBox':
    'prefix': 'hasCloseBox'
    'body': 'hasCloseBox()'
  'hasDynamicDepthLimit':
    'prefix': 'hasDynamicDepthLimit'
    'body': 'hasDynamicDepthLimit()'
  'hasShadow':
    'prefix': 'hasShadow'
    'body': 'hasShadow()'
  'hasTitleBar':
    'prefix': 'hasTitleBar'
    'body': 'hasTitleBar()'
  'hidesOnDeactivate':
    'prefix': 'hidesOnDeactivate'
    'body': 'hidesOnDeactivate()'
  'ignoresMouseEvents':
    'prefix': 'ignoresMouseEvents'
    'body': 'ignoresMouseEvents()'
  'inLiveResize':
    'prefix': 'inLiveResize'
    'body': 'inLiveResize()'
  'initWithContentRect:styleMask:backing:defer:':
    'prefix': 'initWithContentRect:styleMask:backing:defer:'
    'body': 'initWithContentRect(${1:NSRect contentRect}, styleMask:${2:NSUInteger aStyle}, backing:${3:NSBackingStoreType bufferingType}, defer:${4:BOOL flag})'
  'initWithContentRect:styleMask:backing:defer:screen:':
    'prefix': 'initWithContentRect:styleMask:backing:defer:screen:'
    'body': 'initWithContentRect(${1:NSRect contentRect}, styleMask:${2:NSUInteger aStyle}, backing:${3:NSBackingStoreType bufferingType}, defer:${4:BOOL flag}, screen:${5:NSScreen* screen})'
  'initWithWindowRef:':
    'prefix': 'initWithWindowRef:'
    'body': 'initWithWindowRef(${1:void* windowRef})'
  'initialFirstResponder':
    'prefix': 'initialFirstResponder'
    'body': 'initialFirstResponder()'
  'invalidateCursorRectsForView:':
    'prefix': 'invalidateCursorRectsForView:'
    'body': 'invalidateCursorRectsForView(${1:NSView* aView})'
  'invalidateShadow':
    'prefix': 'invalidateShadow'
    'body': 'invalidateShadow()'
  'isAutodisplay':
    'prefix': 'isAutodisplay'
    'body': 'isAutodisplay()'
  'isDocumentEdited':
    'prefix': 'isDocumentEdited'
    'body': 'isDocumentEdited()'
  'isExcludedFromWindowsMenu':
    'prefix': 'isExcludedFromWindowsMenu'
    'body': 'isExcludedFromWindowsMenu()'
  'isFloatingPanel':
    'prefix': 'isFloatingPanel'
    'body': 'isFloatingPanel()'
  'isFlushWindowDisabled':
    'prefix': 'isFlushWindowDisabled'
    'body': 'isFlushWindowDisabled()'
  'isKeyWindow':
    'prefix': 'isKeyWindow'
    'body': 'isKeyWindow()'
  'isMainWindow':
    'prefix': 'isMainWindow'
    'body': 'isMainWindow()'
  'isMiniaturizable':
    'prefix': 'isMiniaturizable'
    'body': 'isMiniaturizable()'
  'isMiniaturized':
    'prefix': 'isMiniaturized'
    'body': 'isMiniaturized()'
  'isModalPanel':
    'prefix': 'isModalPanel'
    'body': 'isModalPanel()'
  'isMovable':
    'prefix': 'isMovable'
    'body': 'isMovable()'
  'isMovableByWindowBackground':
    'prefix': 'isMovableByWindowBackground'
    'body': 'isMovableByWindowBackground()'
  'isOnActiveSpace':
    'prefix': 'isOnActiveSpace'
    'body': 'isOnActiveSpace()'
  'isOneShot':
    'prefix': 'isOneShot'
    'body': 'isOneShot()'
  'isOpaque':
    'prefix': 'isOpaque'
    'body': 'isOpaque()'
  'isReleasedWhenClosed':
    'prefix': 'isReleasedWhenClosed'
    'body': 'isReleasedWhenClosed()'
  'isResizable':
    'prefix': 'isResizable'
    'body': 'isResizable()'
  'isRestorable':
    'prefix': 'isRestorable'
    'body': 'isRestorable()'
  'isSheet':
    'prefix': 'isSheet'
    'body': 'isSheet()'
  'isVisible':
    'prefix': 'isVisible'
    'body': 'isVisible()'
  'isZoomable':
    'prefix': 'isZoomable'
    'body': 'isZoomable()'
  'isZoomed':
    'prefix': 'isZoomed'
    'body': 'isZoomed()'
  'keyDown:':
    'prefix': 'keyDown:'
    'body': 'KeyDown(${1:NSEvent* theEvent})'
  'keyViewSelectionDirection':
    'prefix': 'keyViewSelectionDirection'
    'body': 'KeyViewSelectionDirection()'
  'layoutIfNeeded':
    'prefix': 'layoutIfNeeded'
    'body': 'layoutIfNeeded()'
  'level':
    'prefix': 'level'
    'body': 'level()'
  'makeFirstResponder:':
    'prefix': 'makeFirstResponder:'
    'body': 'makeFirstResponder(${1:NSResponder* aResponder})'
  'makeKeyAndOrderFront:':
    'prefix': 'makeKeyAndOrderFront:'
    'body': 'makeKeyAndOrderFront(${1:id sender})'
  'makeKeyWindow':
    'prefix': 'makeKeyWindow'
    'body': 'makeKeyWindow()'
  'makeMainWindow':
    'prefix': 'makeMainWindow'
    'body': 'makeMainWindow()'
  'maxSize':
    'prefix': 'maxSize'
    'body': 'maxSize()'
  'NSWindow.menuChanged:':
    'prefix': 'menuChanged:'
    'body': 'menuChanged(${1:NSMenu* menu})'
  'NSWindow.minFrameWidthWithTitle:styleMask:':
    'prefix': 'minFrameWidthWithTitle:styleMask:'
    'body': 'minFrameWidthWithTitle(${1:NSString* aTitle}, styleMask:${2:NSUInteger aStyle})'
  'minSize':
    'prefix': 'minSize'
    'body': 'minSize()'
  'miniaturize:':
    'prefix': 'miniaturize:'
    'body': 'miniaturize(${1:id sender})'
  'miniwindowImage':
    'prefix': 'miniwindowImage'
    'body': 'miniwindowImage()'
  'miniwindowTitle':
    'prefix': 'miniwindowTitle'
    'body': 'miniwindowTitle()'
  'mouseLocationOutsideOfEventStream':
    'prefix': 'mouseLocationOutsideOfEventStream'
    'body': 'mouseLocationOutsideOfEventStream()'
  'nextEventMatchingMask:':
    'prefix': 'nextEventMatchingMask:'
    'body': 'nextEventMatchingMask(${1:NSUInteger mask})'
  'nextEventMatchingMask:untilDate:inMode:dequeue:':
    'prefix': 'nextEventMatchingMask:untilDate:inMode:dequeue:'
    'body': 'nextEventMatchingMask(${1:NSUInteger mask}, untilDate:${2:NSDate* expiration}, inMode:${3:NSString* mode}, dequeue:${4:BOOL deqFlag})'
  'occlusionState':
    'prefix': 'occlusionState'
    'body': 'occlusionState()'
  'orderBack:':
    'prefix': 'orderBack:'
    'body': 'orderBack(${1:id sender})'
  'orderFront:':
    'prefix': 'orderFront:'
    'body': 'orderFront(${1:id sender})'
  'orderFrontRegardless':
    'prefix': 'orderFrontRegardless'
    'body': 'orderFrontRegardless()'
  'orderOut:':
    'prefix': 'orderOut:'
    'body': 'orderOut(${1:id sender})'
  'orderWindow:relativeTo:':
    'prefix': 'orderWindow:relativeTo:'
    'body': 'orderWindow(${1:NSWindowOrderingMode place}, relativeTo:${2:NSInteger otherWin})'
  'orderedIndex':
    'prefix': 'orderedIndex'
    'body': 'orderedIndex()'
  'parentWindow':
    'prefix': 'parentWindow'
    'body': 'parentWindow()'
  'performClose:':
    'prefix': 'performClose:'
    'body': 'performClose(${1:id sender})'
  'performMiniaturize:':
    'prefix': 'performMiniaturize:'
    'body': 'performMiniaturize(${1:id sender})'
  'performZoom:':
    'prefix': 'performZoom:'
    'body': 'performZoom(${1:id sender})'
  'postEvent:atStart:':
    'prefix': 'postEvent:atStart:'
    'body': 'postEvent(${1:NSEvent* event}, atStart:${2:BOOL flag})'
  'preferredBackingLocation':
    'prefix': 'preferredBackingLocation'
    'body': 'preferredBackingLocation()'
  'preservesContentDuringLiveResize':
    'prefix': 'preservesContentDuringLiveResize'
    'body': 'preservesContentDuringLiveResize()'
  'preventsApplicationTerminationWhenModal':
    'prefix': 'preventsApplicationTerminationWhenModal'
    'body': 'preventsApplicationTerminationWhenModal()'
  'print:':
    'prefix': 'print:'
    'body': 'print(${1:id sender})'
  'recalculateKeyViewLoop':
    'prefix': 'recalculateKeyViewLoop'
    'body': 'recalculateKeyViewLoop()'
  'registerForDraggedTypes:':
    'prefix': 'registerForDraggedTypes:'
    'body': 'registerForDraggedTypes(${1:NSArray* newTypes})'
  'removeChildWindow:':
    'prefix': 'removeChildWindow:'
    'body': 'removeChildWindow(${1:NSWindow* childWin})'
  'NSWindow.removeFrameUsingName:':
    'prefix': 'removeFrameUsingName:'
    'body': 'removeFrameUsingName(${1:NSString* name})'
  'representedFilename':
    'prefix': 'representedFilename'
    'body': 'representedFilename()'
  'representedURL':
    'prefix': 'representedURL'
    'body': 'representedURL()'
  'resetCursorRects':
    'prefix': 'resetCursorRects'
    'body': 'resetCursorRects()'
  'resignKeyWindow':
    'prefix': 'resignKeyWindow'
    'body': 'resignKeyWindow()'
  'resignMainWindow':
    'prefix': 'resignMainWindow'
    'body': 'resignMainWindow()'
  'resizeFlags':
    'prefix': 'resizeFlags'
    'body': 'resizeFlags()'
  'resizeIncrements':
    'prefix': 'resizeIncrements'
    'body': 'resizeIncrements()'
  'restorationClass':
    'prefix': 'restorationClass'
    'body': 'restorationClass()'
  'restoreCachedImage':
    'prefix': 'restoreCachedImage'
    'body': 'restoreCachedImage()'
  'runToolbarCustomizationPalette:':
    'prefix': 'runToolbarCustomizationPalette:'
    'body': 'runToolbarCustomizationPalette(${1:id sender})'
  'saveFrameUsingName:':
    'prefix': 'saveFrameUsingName:'
    'body': 'saveFrameUsingName(${1:NSString* name})'
  'screen':
    'prefix': 'screen'
    'body': 'screen()'
  'selectKeyViewFollowingView:':
    'prefix': 'selectKeyViewFollowingView:'
    'body': 'selectKeyViewFollowingView(${1:NSView* aView})'
  'selectKeyViewPrecedingView:':
    'prefix': 'selectKeyViewPrecedingView:'
    'body': 'selectKeyViewPrecedingView(${1:NSView* aView})'
  'selectNextKeyView:':
    'prefix': 'selectNextKeyView:'
    'body': 'selectNextKeyView(${1:id sender})'
  'selectPreviousKeyView:':
    'prefix': 'selectPreviousKeyView:'
    'body': 'selectPreviousKeyView(${1:id sender})'
  'sendEvent:':
    'prefix': 'sendEvent:'
    'body': 'sendEvent(${1:NSEvent* theEvent})'
  'setAcceptsMouseMovedEvents:':
    'prefix': 'setAcceptsMouseMovedEvents:'
    'body': 'setAcceptsMouseMovedEvents(${1:BOOL flag})'
  'setAllowsConcurrentViewDrawing:':
    'prefix': 'setAllowsConcurrentViewDrawing:'
    'body': 'setAllowsConcurrentViewDrawing(${1:BOOL flag})'
  'setAllowsToolTipsWhenApplicationIsInactive:':
    'prefix': 'setAllowsToolTipsWhenApplicationIsInactive:'
    'body': 'setAllowsToolTipsWhenApplicationIsInactive(${1:BOOL allowWhenInactive})'
  'setAlphaValue:':
    'prefix': 'setAlphaValue:'
    'body': 'setAlphaValue(${1:CGFloat windowAlpha})'
  'setAnchorAttribute:forOrientation:':
    'prefix': 'setAnchorAttribute:forOrientation:'
    'body': 'setAnchorAttribute(${1:NSLayoutAttribute attr}, forOrientation:${2:NSLayoutConstraintOrientation orientation})'
  'setAnimationBehavior:':
    'prefix': 'setAnimationBehavior:'
    'body': 'setAnimationBehavior(${1:NSWindowAnimationBehavior newAnimationBehavior})'
  'setAspectRatio:':
    'prefix': 'setAspectRatio:'
    'body': 'setAspectRatio(${1:NSSize ratio})'
  'setAutodisplay:':
    'prefix': 'setAutodisplay:'
    'body': 'setAutodisplay(${1:BOOL flag})'
  'setAutorecalculatesContentBorderThickness:forEdge:':
    'prefix': 'setAutorecalculatesContentBorderThickness:forEdge:'
    'body': 'setAutorecalculatesContentBorderThickness(${1:BOOL flag}, forEdge:${2:NSRectEdge edge})'
  'setAutorecalculatesKeyViewLoop:':
    'prefix': 'setAutorecalculatesKeyViewLoop:'
    'body': 'setAutorecalculatesKeyViewLoop(${1:BOOL flag})'
  'setBackgroundColor:':
    'prefix': 'setBackgroundColor:'
    'body': 'setBackgroundColor(${1:NSColor* color})'
  'setBackingType:':
    'prefix': 'setBackingType:'
    'body': 'setBackingType(${1:NSBackingStoreType bufferingType})'
  'setCanBeVisibleOnAllSpaces:':
    'prefix': 'setCanBeVisibleOnAllSpaces:'
    'body': 'setCanBeVisibleOnAllSpaces(${1:BOOL flag})'
  'setCanBecomeVisibleWithoutLogin:':
    'prefix': 'setCanBecomeVisibleWithoutLogin:'
    'body': 'setCanBecomeVisibleWithoutLogin(${1:BOOL flag})'
  'setCanHide:':
    'prefix': 'setCanHide:'
    'body': 'setCanHide(${1:BOOL flag})'
  'setCollectionBehavior:':
    'prefix': 'setCollectionBehavior:'
    'body': 'setCollectionBehavior(${1:NSWindowCollectionBehavior behavior})'
  'setColorSpace:':
    'prefix': 'setColorSpace:'
    'body': 'setColorSpace(${1:NSColorSpace* colorSpace})'
  'setContentAspectRatio:':
    'prefix': 'setContentAspectRatio:'
    'body': 'setContentAspectRatio(${1:NSSize ratio})'
  'setContentBorderThickness:forEdge:':
    'prefix': 'setContentBorderThickness:forEdge:'
    'body': 'setContentBorderThickness(${1:CGFloat thickness}, forEdge:${2:NSRectEdge edge})'
  'setContentMaxSize:':
    'prefix': 'setContentMaxSize:'
    'body': 'setContentMaxSize(${1:NSSize size})'
  'setContentMinSize:':
    'prefix': 'setContentMinSize:'
    'body': 'setContentMinSize(${1:NSSize size})'
  'setContentResizeIncrements:':
    'prefix': 'setContentResizeIncrements:'
    'body': 'setContentResizeIncrements(${1:NSSize increments})'
  'setContentSize:':
    'prefix': 'setContentSize:'
    'body': 'setContentSize(${1:NSSize aSize})'
  'setContentView:':
    'prefix': 'setContentView:'
    'body': 'setContentView(${1:NSView* aView})'
  'setDefaultButtonCell:':
    'prefix': 'setDefaultButtonCell:'
    'body': 'setDefaultButtonCell(${1:NSButtonCell* defButt})'
  'setDelegate:':
    'prefix': 'setDelegate:'
    'body': 'setDelegate(${1:id anObject})'
  'setDepthLimit:':
    'prefix': 'setDepthLimit:'
    'body': 'setDepthLimit(${1:NSWindowDepth limit})'
  'setDisplaysWhenScreenProfileChanges:':
    'prefix': 'setDisplaysWhenScreenProfileChanges:'
    'body': 'setDisplaysWhenScreenProfileChanges(${1:BOOL flag})'
  'setDocumentEdited:':
    'prefix': 'setDocumentEdited:'
    'body': 'setDocumentEdited(${1:BOOL flag})'
  'setDynamicDepthLimit:':
    'prefix': 'setDynamicDepthLimit:'
    'body': 'setDynamicDepthLimit(${1:BOOL flag})'
  'setExcludedFromWindowsMenu:':
    'prefix': 'setExcludedFromWindowsMenu:'
    'body': 'setExcludedFromWindowsMenu(${1:BOOL flag})'
  'setFrame:display:':
    'prefix': 'setFrame:display:'
    'body': 'setFrame(${1:NSRect frameRect}, display:${2:BOOL flag})'
  'setFrame:display:animate:':
    'prefix': 'setFrame:display:animate:'
    'body': 'setFrame(${1:NSRect frameRect}, display:${2:BOOL displayFlag}, animate:${3:BOOL animateFlag})'
  'setFrameAutosaveName:':
    'prefix': 'setFrameAutosaveName:'
    'body': 'setFrameAutosaveName(${1:NSString* name})'
  'setFrameFromString:':
    'prefix': 'setFrameFromString:'
    'body': 'setFrameFromString(${1:NSString* string})'
  'setFrameOrigin:':
    'prefix': 'setFrameOrigin:'
    'body': 'setFrameOrigin(${1:NSPoint aPoint})'
  'setFrameTopLeftPoint:':
    'prefix': 'setFrameTopLeftPoint:'
    'body': 'setFrameTopLeftPoint(${1:NSPoint aPoint})'
  'setFrameUsingName:':
    'prefix': 'setFrameUsingName:'
    'body': 'setFrameUsingName(${1:NSString* name})'
  'setFrameUsingName:force:':
    'prefix': 'setFrameUsingName:force:'
    'body': 'setFrameUsingName(${1:NSString* name}, force:${2:BOOL force})'
  'setHasShadow:':
    'prefix': 'setHasShadow:'
    'body': 'setHasShadow(${1:BOOL hasShadow})'
  'setHidesOnDeactivate:':
    'prefix': 'setHidesOnDeactivate:'
    'body': 'setHidesOnDeactivate(${1:BOOL flag})'
  'setIgnoresMouseEvents:':
    'prefix': 'setIgnoresMouseEvents:'
    'body': 'setIgnoresMouseEvents(${1:BOOL flag})'
  'setInitialFirstResponder:':
    'prefix': 'setInitialFirstResponder:'
    'body': 'setInitialFirstResponder(${1:NSView* view})'
  'setIsMiniaturized:':
    'prefix': 'setIsMiniaturized:'
    'body': 'setIsMiniaturized(${1:BOOL flag})'
  'setIsVisible:':
    'prefix': 'setIsVisible:'
    'body': 'setIsVisible(${1:BOOL flag})'
  'setIsZoomed:':
    'prefix': 'setIsZoomed:'
    'body': 'setIsZoomed(${1:BOOL flag})'
  'setLevel:':
    'prefix': 'setLevel:'
    'body': 'setLevel(${1:NSInteger newLevel})'
  'setMaxSize:':
    'prefix': 'setMaxSize:'
    'body': 'setMaxSize(${1:NSSize size})'
  'setMinSize:':
    'prefix': 'setMinSize:'
    'body': 'setMinSize(${1:NSSize size})'
  'setMiniwindowImage:':
    'prefix': 'setMiniwindowImage:'
    'body': 'setMiniwindowImage(${1:NSImage* image})'
  'setMiniwindowTitle:':
    'prefix': 'setMiniwindowTitle:'
    'body': 'setMiniwindowTitle(${1:NSString* title})'
  'setMovable:':
    'prefix': 'setMovable:'
    'body': 'setMovable(${1:BOOL flag})'
  'setMovableByWindowBackground:':
    'prefix': 'setMovableByWindowBackground:'
    'body': 'setMovableByWindowBackground(${1:BOOL flag})'
  'setOneShot:':
    'prefix': 'setOneShot:'
    'body': 'setOneShot(${1:BOOL flag})'
  'setOpaque:':
    'prefix': 'setOpaque:'
    'body': 'setOpaque(${1:BOOL isOpaque})'
  'setOrderedIndex:':
    'prefix': 'setOrderedIndex:'
    'body': 'setOrderedIndex(${1:NSInteger index})'
  'setParentWindow:':
    'prefix': 'setParentWindow:'
    'body': 'setParentWindow(${1:NSWindow* window})'
  'setPreferredBackingLocation:':
    'prefix': 'setPreferredBackingLocation:'
    'body': 'setPreferredBackingLocation(${1:NSWindowBackingLocation backingLocation})'
  'setPreservesContentDuringLiveResize:':
    'prefix': 'setPreservesContentDuringLiveResize:'
    'body': 'setPreservesContentDuringLiveResize(${1:BOOL flag})'
  'setPreventsApplicationTerminationWhenModal:':
    'prefix': 'setPreventsApplicationTerminationWhenModal:'
    'body': 'setPreventsApplicationTerminationWhenModal(${1:BOOL flag})'
  'setReleasedWhenClosed:':
    'prefix': 'setReleasedWhenClosed:'
    'body': 'setReleasedWhenClosed(${1:BOOL flag})'
  'setRepresentedFilename:':
    'prefix': 'setRepresentedFilename:'
    'body': 'setRepresentedFilename(${1:NSString* aString})'
  'setRepresentedURL:':
    'prefix': 'setRepresentedURL:'
    'body': 'setRepresentedURL(${1:NSURL* url})'
  'setResizeIncrements:':
    'prefix': 'setResizeIncrements:'
    'body': 'setResizeIncrements(${1:NSSize increments})'
  'setRestorable:':
    'prefix': 'setRestorable:'
    'body': 'setRestorable(${1:BOOL flag})'
  'setRestorationClass:':
    'prefix': 'setRestorationClass:'
    'body': 'setRestorationClass(${1:Class* restorationClass})'
  'setSharingType:':
    'prefix': 'setSharingType:'
    'body': 'setSharingType(${1:NSWindowSharingType type})'
  'setShowsResizeIndicator:':
    'prefix': 'setShowsResizeIndicator:'
    'body': 'setShowsResizeIndicator(${1:BOOL show})'
  'setShowsToolbarButton:':
    'prefix': 'setShowsToolbarButton:'
    'body': 'setShowsToolbarButton(${1:BOOL show})'
  'setStyleMask:':
    'prefix': 'setStyleMask:'
    'body': 'setStyleMask(${1:NSUInteger styleMask})'
  'setTitle:':
    'prefix': 'setTitle:'
    'body': 'setTitle(${1:NSString* aString})'
  'setTitleWithRepresentedFilename:':
    'prefix': 'setTitleWithRepresentedFilename:'
    'body': 'setTitleWithRepresentedFilename(${1:NSString* filename})'
  'setToolbar:':
    'prefix': 'setToolbar:'
    'body': 'setToolbar(${1:NSToolbar* toolbar})'
  'setViewsNeedDisplay:':
    'prefix': 'setViewsNeedDisplay:'
    'body': 'setViewsNeedDisplay(${1:BOOL flag})'
  'setWindowController:':
    'prefix': 'setWindowController:'
    'body': 'setWindowController(${1:NSWindowController* windowController})'
  'sharingType':
    'prefix': 'sharingType'
    'body': 'sharingType()'
  'sheetParent':
    'prefix': 'sheetParent'
    'body': 'sheetParent()'
  'sheets':
    'prefix': 'sheets'
    'body': 'sheets()'
  'showsResizeIndicator':
    'prefix': 'showsResizeIndicator'
    'body': 'showsResizeIndicator()'
  'showsToolbarButton':
    'prefix': 'showsToolbarButton'
    'body': 'showsToolbarButton()'
  'standardWindowButton:':
    'prefix': 'standardWindowButton:'
    'body': 'standardWindowButton(${1:NSWindowButton b})'
  'NSWindow.standardWindowButton:forStyleMask:':
    'prefix': 'standardWindowButton:forStyleMask:'
    'body': 'standardWindowButton(${1:NSWindowButton b}, forStyleMask:${2:NSUInteger styleMask})'
  'stringWithSavedFrame':
    'prefix': 'stringWithSavedFrame'
    'body': 'stringWithSavedFrame()'
  'styleMask':
    'prefix': 'styleMask'
    'body': 'styleMask()'
  'title':
    'prefix': 'title'
    'body': 'title()'
  'toggleFullScreen:':
    'prefix': 'toggleFullScreen:'
    'body': 'toggleFullScreen(${1:id sender})'
  'toggleToolbarShown:':
    'prefix': 'toggleToolbarShown:'
    'body': 'toggleToolbarShown(${1:id sender})'
  'toolbar':
    'prefix': 'toolbar'
    'body': 'toolbar()'
  'tryToPerform:with:':
    'prefix': 'tryToPerform:with:'
    'body': 'tryToPerform(${1:SEL anAction}, with:${2:id anObject})'
  'unregisterDraggedTypes':
    'prefix': 'unregisterDraggedTypes'
    'body': 'unregisterDraggedTypes()'
  'update':
    'prefix': 'update'
    'body': 'update()'
  'updateConstraintsIfNeeded':
    'prefix': 'updateConstraintsIfNeeded'
    'body': 'updateConstraintsIfNeeded()'
  'useOptimizedDrawing:':
    'prefix': 'useOptimizedDrawing:'
    'body': 'useOptimizedDrawing(${1:BOOL flag})'
  'userSpaceScaleFactor':
    'prefix': 'userSpaceScaleFactor'
    'body': 'userSpaceScaleFactor()'
  'validRequestorForSendType:returnType:':
    'prefix': 'validRequestorForSendType:returnType:'
    'body': 'validRequestorForSendType(${1:NSString* sendType}, returnType:${2:NSString* returnType})'
  'viewsNeedDisplay':
    'prefix': 'viewsNeedDisplay'
    'body': 'viewsNeedDisplay()'
  'visualizeConstraints:':
    'prefix': 'visualizeConstraints:'
    'body': 'visualizeConstraints(${1:NSArray* constraints})'
  'windowController':
    'prefix': 'windowController'
    'body': 'windowController()'
  'windowNumber':
    'prefix': 'windowNumber'
    'body': 'windowNumber()'
  'NSWindow.windowNumberAtPoint:belowWindowWithWindowNumber:':
    'prefix': 'windowNumberAtPoint:belowWindowWithWindowNumber:'
    'body': 'windowNumberAtPoint(${1:NSPoint point}, belowWindowWithWindowNumber:${2:NSInteger windowNumber})'
  'NSWindow.windowNumbersWithOptions:':
    'prefix': 'windowNumbersWithOptions:'
    'body': 'windowNumbersWithOptions(${1:NSWindowNumberListOptions options})'
  'windowRef':
    'prefix': 'windowRef'
    'body': 'windowRef()'
  'worksWhenModal':
    'prefix': 'worksWhenModal'
    'body': 'worksWhenModal()'
  'zoom:':
    'prefix': 'zoom:'
    'body': 'zoom(${1:id sender})'
  'close':
    'prefix': 'close'
    'body': 'close()'
  'document':
    'prefix': 'document'
    'body': 'document()'
  'initWithWindow:':
    'prefix': 'initWithWindow:'
    'body': 'initWithWindow(${1:NSWindow* window})'
  'initWithWindowNibName:':
    'prefix': 'initWithWindowNibName:'
    'body': 'initWithWindowNibName(${1:NSString* windowNibName})'
  'initWithWindowNibName:owner:':
    'prefix': 'initWithWindowNibName:owner:'
    'body': 'initWithWindowNibName(${1:NSString* windowNibName}, owner:${2:id owner})'
  'initWithWindowNibPath:owner:':
    'prefix': 'initWithWindowNibPath:owner:'
    'body': 'initWithWindowNibPath(${1:NSString* windowNibPath}, owner:${2:id owner})'
  'isWindowLoaded':
    'prefix': 'isWindowLoaded'
    'body': 'isWindowLoaded()'
  'loadWindow':
    'prefix': 'loadWindow'
    'body': 'loadWindow()'
  'owner':
    'prefix': 'owner'
    'body': 'owner()'
  'setDocument:':
    'prefix': 'setDocument:'
    'body': 'setDocument(${1:NSDocument* document})'
  'setDocumentEdited:':
    'prefix': 'setDocumentEdited:'
    'body': 'setDocumentEdited(${1:BOOL dirtyFlag})'
  'setShouldCascadeWindows:':
    'prefix': 'setShouldCascadeWindows:'
    'body': 'setShouldCascadeWindows(${1:BOOL flag})'
  'setShouldCloseDocument:':
    'prefix': 'setShouldCloseDocument:'
    'body': 'setShouldCloseDocument(${1:BOOL flag})'
  'setWindow:':
    'prefix': 'setWindow:'
    'body': 'setWindow(${1:NSWindow* window})'
  'setWindowFrameAutosaveName:':
    'prefix': 'setWindowFrameAutosaveName:'
    'body': 'setWindowFrameAutosaveName(${1:NSString* name})'
  'shouldCascadeWindows':
    'prefix': 'shouldCascadeWindows'
    'body': 'shouldCascadeWindows()'
  'shouldCloseDocument':
    'prefix': 'shouldCloseDocument'
    'body': 'shouldCloseDocument()'
  'showWindow:':
    'prefix': 'showWindow:'
    'body': 'showWindow(${1:id sender})'
  'synchronizeWindowTitleWithDocumentName':
    'prefix': 'synchronizeWindowTitleWithDocumentName'
    'body': 'synchronizeWindowTitleWithDocumentName()'
  'window':
    'prefix': 'window'
    'body': 'window()'
  'windowDidLoad':
    'prefix': 'windowDidLoad'
    'body': 'windowDidLoad()'
  'windowFrameAutosaveName':
    'prefix': 'windowFrameAutosaveName'
    'body': 'windowFrameAutosaveName()'
  'windowNibName':
    'prefix': 'windowNibName'
    'body': 'windowNibName()'
  'windowNibPath':
    'prefix': 'windowNibPath'
    'body': 'windowNibPath()'
  'windowTitleForDocumentDisplayName:':
    'prefix': 'windowTitleForDocumentDisplayName:'
    'body': 'windowTitleForDocumentDisplayName(${1:NSString* displayName})'
  'windowWillLoad':
    'prefix': 'windowWillLoad'
    'body': 'windowWillLoad()'
  'URLForApplicationToOpenURL:':
    'prefix': 'URLForApplicationToOpenURL:'
    'body': 'URLForApplicationToOpenURL(${1:NSURL* url})'
  'URLForApplicationWithBundleIdentifier:':
    'prefix': 'URLForApplicationWithBundleIdentifier:'
    'body': 'URLForApplicationWithBundleIdentifier(${1:NSString* bundleIdentifier})'
  'absolutePathForAppBundleWithIdentifier:':
    'prefix': 'absolutePathForAppBundleWithIdentifier:'
    'body': 'absolutePathForAppBundleWithIdentifier(${1:NSString* bundleIdentifier})'
  'activateFileViewerSelectingURLs:':
    'prefix': 'activateFileViewerSelectingURLs:'
    'body': 'activateFileViewerSelectingURLs(${1:NSArray* fileURLs})'
  'activeApplication':
    'prefix': 'activeApplication'
    'body': 'activeApplication()'
  'checkForRemovableMedia':
    'prefix': 'checkForRemovableMedia'
    'body': 'checkForRemovableMedia()'
  'desktopImageOptionsForScreen:':
    'prefix': 'desktopImageOptionsForScreen:'
    'body': 'desktopImageOptionsForScreen(${1:NSScreen* screen})'
  'desktopImageURLForScreen:':
    'prefix': 'desktopImageURLForScreen:'
    'body': 'desktopImageURLForScreen(${1:NSScreen* screen})'
  'duplicateURLs:completionHandler:':
    'prefix': 'duplicateURLs:completionHandler:'
    'body': 'duplicateURLs(${1:NSArray* URLs}, completionHandler:${2:void (^)(NSDictionary *, NSError *) handler})'
  'extendPowerOffBy:':
    'prefix': 'extendPowerOffBy:'
    'body': 'extendPowerOffBy(${1:NSInteger requested})'
  'fileLabelColors':
    'prefix': 'fileLabelColors'
    'body': 'fileLabelColors()'
  'fileLabels':
    'prefix': 'fileLabels'
    'body': 'fileLabels()'
  'fileSystemChanged':
    'prefix': 'fileSystemChanged'
    'body': 'fileSystemChanged()'
  'filenameExtension:isValidForType:':
    'prefix': 'filenameExtension:isValidForType:'
    'body': 'filenameExtension(${1:NSString* filenameExtension}, isValidForType:${2:NSString* typeName})'
  'findApplications':
    'prefix': 'findApplications'
    'body': 'findApplications()'
  'frontmostApplication':
    'prefix': 'frontmostApplication'
    'body': 'frontmostApplication()'
  'fullPathForApplication:':
    'prefix': 'fullPathForApplication:'
    'body': 'fullPathForApplication(${1:NSString* appName})'
  'getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:':
    'prefix': 'getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'
    'body': 'getFileSystemInfoForPath(${1:NSString* fullPath}, isRemovable:${2:BOOL* removableFlag}, isWritable:${3:BOOL* writableFlag}, isUnmountable:${4:BOOL* unmountableFlag}, description:${5:NSString** description}, type:${6:NSString** fileSystemType})'
  'getInfoForFile:application:type:':
    'prefix': 'getInfoForFile:application:type:'
    'body': 'getInfoForFile(${1:NSString* fullPath}, application:${2:NSString** appName}, type:${3:NSString** type})'
  'hideOtherApplications':
    'prefix': 'hideOtherApplications'
    'body': 'hideOtherApplications()'
  'iconForFile:':
    'prefix': 'iconForFile:'
    'body': 'iconForFile(${1:NSString* fullPath})'
  'iconForFileType:':
    'prefix': 'iconForFileType:'
    'body': 'iconForFileType(${1:NSString* fileType})'
  'iconForFiles:':
    'prefix': 'iconForFiles:'
    'body': 'iconForFiles(${1:NSArray* fullPaths})'
  'isFilePackageAtPath:':
    'prefix': 'isFilePackageAtPath:'
    'body': 'isFilePackageAtPath(${1:NSString* fullPath})'
  'launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:':
    'prefix': 'launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'
    'body': 'launchAppWithBundleIdentifier(${1:NSString* bundleIdentifier}, options:${2:NSWorkspaceLaunchOptions options}, additionalEventParamDescriptor:${3:NSAppleEventDescriptor* descriptor}, launchIdentifier:${4:NSNumber** identifier})'
  'launchApplication:':
    'prefix': 'launchApplication:'
    'body': 'launchApplication(${1:NSString* appName})'
  'launchApplication:showIcon:autolaunch:':
    'prefix': 'launchApplication:showIcon:autolaunch:'
    'body': 'launchApplication(${1:NSString* appName}, showIcon:${2:BOOL showIcon}, autolaunch:${3:BOOL autolaunch})'
  'launchApplicationAtURL:options:configuration:error:':
    'prefix': 'launchApplicationAtURL:options:configuration:error:'
    'body': 'launchApplicationAtURL(${1:NSURL* url}, options:${2:NSWorkspaceLaunchOptions options}, configuration:${3:NSDictionary* configuration}, error:${4:NSError** error})'
  'launchedApplications':
    'prefix': 'launchedApplications'
    'body': 'launchedApplications()'
  'localizedDescriptionForType:':
    'prefix': 'localizedDescriptionForType:'
    'body': 'localizedDescriptionForType(${1:NSString* typeName})'
  'menuBarOwningApplication':
    'prefix': 'menuBarOwningApplication'
    'body': 'menuBarOwningApplication()'
  'mountNewRemovableMedia':
    'prefix': 'mountNewRemovableMedia'
    'body': 'mountNewRemovableMedia()'
  'mountedLocalVolumePaths':
    'prefix': 'mountedLocalVolumePaths'
    'body': 'mountedLocalVolumePaths()'
  'mountedRemovableMedia':
    'prefix': 'mountedRemovableMedia'
    'body': 'mountedRemovableMedia()'
  'noteFileSystemChanged':
    'prefix': 'noteFileSystemChanged'
    'body': 'noteFileSystemChanged()'
  'noteFileSystemChanged:':
    'prefix': 'noteFileSystemChanged:'
    'body': 'noteFileSystemChanged(${1:NSString* path})'
  'noteUserDefaultsChanged':
    'prefix': 'noteUserDefaultsChanged'
    'body': 'noteUserDefaultsChanged()'
  'notificationCenter':
    'prefix': 'notificationCenter'
    'body': 'notificationCenter()'
  'openFile:':
    'prefix': 'openFile:'
    'body': 'openFile(${1:NSString* fullPath})'
  'openFile:fromImage:at:inView:':
    'prefix': 'openFile:fromImage:at:inView:'
    'body': 'openFile(${1:NSString* fullPath}, fromImage:${2:NSImage* anImage}, at:${3:NSPoint point}, inView:${4:NSView* aView})'
  'openFile:withApplication:':
    'prefix': 'openFile:withApplication:'
    'body': 'openFile(${1:NSString* fullPath}, withApplication:${2:NSString* appName})'
  'openFile:withApplication:andDeactivate:':
    'prefix': 'openFile:withApplication:andDeactivate:'
    'body': 'openFile(${1:NSString* fullPath}, withApplication:${2:NSString* appName}, andDeactivate:${3:BOOL flag})'
  'openTempFile:':
    'prefix': 'openTempFile:'
    'body': 'openTempFile(${1:NSString* fullPath})'
  'openURL:':
    'prefix': 'openURL:'
    'body': 'openURL(${1:NSURL* url})'
  'openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:':
    'prefix': 'openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'
    'body': 'openURLs(${1:NSArray* urls}, withAppBundleIdentifier:${2:NSString* bundleIdentifier}, options:${3:NSWorkspaceLaunchOptions options}, additionalEventParamDescriptor:${4:NSAppleEventDescriptor* descriptor}, launchIdentifiers:${5:NSArray** identifiers})'
  'performFileOperation:source:destination:files:tag:':
    'prefix': 'performFileOperation:source:destination:files:tag:'
    'body': 'performFileOperation(${1:NSString* operation}, source:${2:NSString* source}, destination:${3:NSString* destination}, files:${4:NSArray* files}, tag:${5:NSInteger* tag})'
  'preferredFilenameExtensionForType:':
    'prefix': 'preferredFilenameExtensionForType:'
    'body': 'preferredFilenameExtensionForType(${1:NSString* typeName})'
  'recycleURLs:completionHandler:':
    'prefix': 'recycleURLs:completionHandler:'
    'body': 'recycleURLs(${1:NSArray* URLs}, completionHandler:${2:void (^)(NSDictionary *, NSError *) handler})'
  'runningApplications':
    'prefix': 'runningApplications'
    'body': 'runningApplications()'
  'selectFile:inFileViewerRootedAtPath:':
    'prefix': 'selectFile:inFileViewerRootedAtPath:'
    'body': 'selectFile(${1:NSString* fullPath}, inFileViewerRootedAtPath:${2:NSString* rootFullPath})'
  'setDesktopImageURL:forScreen:options:error:':
    'prefix': 'setDesktopImageURL:forScreen:options:error:'
    'body': 'setDesktopImageURL(${1:NSURL* url}, forScreen:${2:NSScreen* screen}, options:${3:NSDictionary* options}, error:${4:NSError** error})'
  'setIcon:forFile:options:':
    'prefix': 'setIcon:forFile:options:'
    'body': 'setIcon(${1:NSImage* image}, forFile:${2:NSString* fullPath}, options:${3:NSWorkspaceIconCreationOptions options})'
  'NSWorkspace.sharedWorkspace':
    'prefix': 'sharedWorkspace'
    'body': 'sharedWorkspace()'
  'showSearchResultsForQueryString:':
    'prefix': 'showSearchResultsForQueryString:'
    'body': 'showSearchResultsForQueryString(${1:NSString* queryString})'
  'slideImage:from:to:':
    'prefix': 'slideImage:from:to:'
    'body': 'slideImage(${1:NSImage* image}, from:${2:NSPoint fromPoint}, to:${3:NSPoint toPoint})'
  'type:conformsToType:':
    'prefix': 'type:conformsToType:'
    'body': 'type(${1:NSString* firstTypeName}, conformsToType:${2:NSString* secondTypeName})'
  'typeOfFile:error:':
    'prefix': 'typeOfFile:error:'
    'body': 'typeOfFile(${1:NSString* absoluteFilePath}, error:${2:NSError** outError})'
  'unmountAndEjectDeviceAtPath:':
    'prefix': 'unmountAndEjectDeviceAtPath:'
    'body': 'unmountAndEjectDeviceAtPath(${1:NSString* path})'
  'unmountAndEjectDeviceAtURL:error:':
    'prefix': 'unmountAndEjectDeviceAtURL:error:'
    'body': 'unmountAndEjectDeviceAtURL(${1:NSURL* url}, error:${2:NSError** error})'
  'userDefaultsChanged':
    'prefix': 'userDefaultsChanged'
    'body': 'userDefaultsChanged()'
  'accessibilityActionDescription:':
    'prefix': 'accessibilityActionDescription:'
    'body': 'accessibilityActionDescription(${1:NSString* action})'
  'accessibilityActionNames':
    'prefix': 'accessibilityActionNames'
    'body': 'accessibilityActionNames()'
  'accessibilityArrayAttributeCount:':
    'prefix': 'accessibilityArrayAttributeCount:'
    'body': 'accessibilityArrayAttributeCount(${1:NSString* attribute})'
  'accessibilityArrayAttributeValues:index:maxCount:':
    'prefix': 'accessibilityArrayAttributeValues:index:maxCount:'
    'body': 'accessibilityArrayAttributeValues(${1:NSString* attribute}, index:${2:NSUInteger index}, maxCount:${3:NSUInteger maxCount})'
  'accessibilityAttributeNames':
    'prefix': 'accessibilityAttributeNames'
    'body': 'accessibilityAttributeNames()'
  'accessibilityAttributeValue:':
    'prefix': 'accessibilityAttributeValue:'
    'body': 'accessibilityAttributeValue(${1:NSString* attribute})'
  'accessibilityAttributeValue:forParameter:':
    'prefix': 'accessibilityAttributeValue:forParameter:'
    'body': 'accessibilityAttributeValue(${1:NSString* attribute}, forParameter:${2:id parameter})'
  'accessibilityFocusedUIElement':
    'prefix': 'accessibilityFocusedUIElement'
    'body': 'accessibilityFocusedUIElement()'
  'accessibilityHitTest:':
    'prefix': 'accessibilityHitTest:'
    'body': 'accessibilityHitTest(${1:NSPoint point})'
  'accessibilityIndexOfChild:':
    'prefix': 'accessibilityIndexOfChild:'
    'body': 'accessibilityIndexOfChild(${1:id child})'
  'accessibilityIsAttributeSettable:':
    'prefix': 'accessibilityIsAttributeSettable:'
    'body': 'accessibilityIsAttributeSettable(${1:NSString* attribute})'
  'accessibilityIsIgnored':
    'prefix': 'accessibilityIsIgnored'
    'body': 'accessibilityIsIgnored()'
  'accessibilityNotifiesWhenDestroyed':
    'prefix': 'accessibilityNotifiesWhenDestroyed'
    'body': 'accessibilityNotifiesWhenDestroyed()'
  'accessibilityParameterizedAttributeNames':
    'prefix': 'accessibilityParameterizedAttributeNames'
    'body': 'accessibilityParameterizedAttributeNames()'
  'accessibilityPerformAction:':
    'prefix': 'accessibilityPerformAction:'
    'body': 'accessibilityPerformAction(${1:NSString* action})'
  'accessibilitySetValue:forAttribute:':
    'prefix': 'accessibilitySetValue:forAttribute:'
    'body': 'accessibilitySetValue(${1:id value}, forAttribute:${2:NSString* attribute})'
  'accessibilitySetOverrideValue:forAttribute:':
    'prefix': 'accessibilitySetOverrideValue:forAttribute:'
    'body': 'accessibilitySetOverrideValue(${1:id value}, forAttribute:${2:NSString* attribute})'
  'alertShowHelp:':
    'prefix': 'alertShowHelp:'
    'body': 'alertShowHelp(${1:NSAlert* alert})'
  'animationForKey:':
    'prefix': 'animationForKey:'
    'body': 'animationForKey(${1:NSString* key})'
  'animations':
    'prefix': 'animations'
    'body': 'animations()'
  'animator':
    'prefix': 'animator'
    'body': 'animator()'
  'NSAnimatablePropertyContainer.defaultAnimationForKey:':
    'prefix': 'defaultAnimationForKey:'
    'body': 'defaultAnimationForKey(${1:NSString* key})'
  'setAnimations:':
    'prefix': 'setAnimations:'
    'body': 'setAnimations(${1:NSDictionary* animations})'
  'animation:didReachProgressMark:':
    'prefix': 'animation:didReachProgressMark:'
    'body': 'animation(${1:NSAnimation* animation}, didReachProgressMark:${2:NSAnimationProgress progress})'
  'animation:valueForProgress:':
    'prefix': 'animation:valueForProgress:'
    'body': 'animation(${1:NSAnimation* animation}, valueForProgress:${2:NSAnimationProgress progress})'
  'animationDidEnd:':
    'prefix': 'animationDidEnd:'
    'body': 'animationDidEnd(${1:NSAnimation* animation})'
  'animationDidStop:':
    'prefix': 'animationDidStop:'
    'body': 'animationDidStop(${1:NSAnimation* animation})'
  'animationShouldStart:':
    'prefix': 'animationShouldStart:'
    'body': 'animationShouldStart(${1:NSAnimation* animation})'
  'appearance':
    'prefix': 'appearance'
    'body': 'appearance()'
  'effectiveAppearance':
    'prefix': 'effectiveAppearance'
    'body': 'effectiveAppearance()'
  'setAppearance:':
    'prefix': 'setAppearance:'
    'body': 'setAppearance(${1:NSAppearance* appearance})'
  'application:didDecodeRestorableState:':
    'prefix': 'application:didDecodeRestorableState:'
    'body': 'application(${1:NSApplication* app}, didDecodeRestorableState:${2:NSCoder* coder})'
  'application:didFailToRegisterForRemoteNotificationsWithError:':
    'prefix': 'application:didFailToRegisterForRemoteNotificationsWithError:'
    'body': 'application(${1:NSApplication* application}, didFailToRegisterForRemoteNotificationsWithError:${2:NSError* error})'
  'application:didReceiveRemoteNotification:':
    'prefix': 'application:didReceiveRemoteNotification:'
    'body': 'application(${1:NSApplication* application}, didReceiveRemoteNotification:${2:NSDictionary* userInfo})'
  'application:didRegisterForRemoteNotificationsWithDeviceToken:':
    'prefix': 'application:didRegisterForRemoteNotificationsWithDeviceToken:'
    'body': 'application(${1:NSApplication* application}, didRegisterForRemoteNotificationsWithDeviceToken:${2:NSData* deviceToken})'
  'application:openFile:':
    'prefix': 'application:openFile:'
    'body': 'application(${1:NSApplication* sender}, openFile:${2:NSString* filename})'
  'application:openFileWithoutUI:':
    'prefix': 'application:openFileWithoutUI:'
    'body': 'application(${1:id sender}, openFileWithoutUI:${2:NSString* filename})'
  'application:openFiles:':
    'prefix': 'application:openFiles:'
    'body': 'application(${1:NSApplication* sender}, openFiles:${2:NSArray* filenames})'
  'application:openTempFile:':
    'prefix': 'application:openTempFile:'
    'body': 'application(${1:NSApplication* sender}, openTempFile:${2:NSString* filename})'
  'application:printFile:':
    'prefix': 'application:printFile:'
    'body': 'application(${1:NSApplication* sender}, printFile:${2:NSString* filename})'
  'application:printFiles:withSettings:showPrintPanels:':
    'prefix': 'application:printFiles:withSettings:showPrintPanels:'
    'body': 'application(${1:NSApplication* application}, printFiles:${2:NSArray* fileNames}, withSettings:${3:NSDictionary* printSettings}, showPrintPanels:${4:BOOL showPrintPanels})'
  'application:willEncodeRestorableState:':
    'prefix': 'application:willEncodeRestorableState:'
    'body': 'application(${1:NSApplication* app}, willEncodeRestorableState:${2:NSCoder* coder})'
  'application:willPresentError:':
    'prefix': 'application:willPresentError:'
    'body': 'application(${1:NSApplication* application}, willPresentError:${2:NSError* error})'
  'applicationDidBecomeActive:':
    'prefix': 'applicationDidBecomeActive:'
    'body': 'applicationDidBecomeActive(${1:NSNotification* notification})'
  'applicationDidChangeOcclusionState:':
    'prefix': 'applicationDidChangeOcclusionState:'
    'body': 'applicationDidChangeOcclusionState(${1:NSNotification* notification})'
  'applicationDidChangeScreenParameters:':
    'prefix': 'applicationDidChangeScreenParameters:'
    'body': 'applicationDidChangeScreenParameters(${1:NSNotification* notification})'
  'applicationDidFinishLaunching:':
    'prefix': 'applicationDidFinishLaunching:'
    'body': 'applicationDidFinishLaunching(${1:NSNotification* notification})'
  'applicationDidHide:':
    'prefix': 'applicationDidHide:'
    'body': 'applicationDidHide(${1:NSNotification* notification})'
  'applicationDidResignActive:':
    'prefix': 'applicationDidResignActive:'
    'body': 'applicationDidResignActive(${1:NSNotification* notification})'
  'applicationDidUnhide:':
    'prefix': 'applicationDidUnhide:'
    'body': 'applicationDidUnhide(${1:NSNotification* notification})'
  'applicationDidUpdate:':
    'prefix': 'applicationDidUpdate:'
    'body': 'applicationDidUpdate(${1:NSNotification* notification})'
  'applicationDockMenu:':
    'prefix': 'applicationDockMenu:'
    'body': 'applicationDockMenu(${1:NSApplication* sender})'
  'applicationOpenUntitledFile:':
    'prefix': 'applicationOpenUntitledFile:'
    'body': 'applicationOpenUntitledFile(${1:NSApplication* sender})'
  'applicationShouldHandleReopen:hasVisibleWindows:':
    'prefix': 'applicationShouldHandleReopen:hasVisibleWindows:'
    'body': 'applicationShouldHandleReopen(${1:NSApplication* sender}, hasVisibleWindows:${2:BOOL flag})'
  'applicationShouldOpenUntitledFile:':
    'prefix': 'applicationShouldOpenUntitledFile:'
    'body': 'applicationShouldOpenUntitledFile(${1:NSApplication* sender})'
  'applicationShouldTerminate:':
    'prefix': 'applicationShouldTerminate:'
    'body': 'applicationShouldTerminate(${1:NSApplication* sender})'
  'applicationShouldTerminateAfterLastWindowClosed:':
    'prefix': 'applicationShouldTerminateAfterLastWindowClosed:'
    'body': 'applicationShouldTerminateAfterLastWindowClosed(${1:NSApplication* sender})'
  'applicationWillBecomeActive:':
    'prefix': 'applicationWillBecomeActive:'
    'body': 'applicationWillBecomeActive(${1:NSNotification* notification})'
  'applicationWillFinishLaunching:':
    'prefix': 'applicationWillFinishLaunching:'
    'body': 'applicationWillFinishLaunching(${1:NSNotification* notification})'
  'applicationWillHide:':
    'prefix': 'applicationWillHide:'
    'body': 'applicationWillHide(${1:NSNotification* notification})'
  'applicationWillResignActive:':
    'prefix': 'applicationWillResignActive:'
    'body': 'applicationWillResignActive(${1:NSNotification* notification})'
  'applicationWillTerminate:':
    'prefix': 'applicationWillTerminate:'
    'body': 'applicationWillTerminate(${1:NSNotification* notification})'
  'applicationWillUnhide:':
    'prefix': 'applicationWillUnhide:'
    'body': 'applicationWillUnhide(${1:NSNotification* notification})'
  'applicationWillUpdate:':
    'prefix': 'applicationWillUpdate:'
    'body': 'applicationWillUpdate(${1:NSNotification* notification})'
  'application:delegateHandlesKey:':
    'prefix': 'application:delegateHandlesKey:'
    'body': 'application(${1:NSApplication* sender}, delegateHandlesKey:${2:NSString* key})'
  'browser:acceptDrop:atRow:column:dropOperation:':
    'prefix': 'browser:acceptDrop:atRow:column:dropOperation:'
    'body': 'browser(${1:NSBrowser* browser}, acceptDrop:${2:id info}, atRow:${3:NSInteger row}, column:${4:NSInteger column}, dropOperation:${5:NSBrowserDropOperation dropOperation})'
  'browser:canDragRowsWithIndexes:inColumn:withEvent:':
    'prefix': 'browser:canDragRowsWithIndexes:inColumn:withEvent:'
    'body': 'browser(${1:NSBrowser* browser}, canDragRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, withEvent:${4:NSEvent* event})'
  'browser:child:ofItem:':
    'prefix': 'browser:child:ofItem:'
    'body': 'browser(${1:NSBrowser* browser}, child:${2:NSInteger index}, ofItem:${3:id item})'
  'browser:createRowsForColumn:inMatrix:':
    'prefix': 'browser:createRowsForColumn:inMatrix:'
    'body': 'browser(${1:NSBrowser* sender}, createRowsForColumn:${2:NSInteger column}, inMatrix:${3:NSMatrix* matrix})'
  'browser:didChangeLastColumn:toColumn:':
    'prefix': 'browser:didChangeLastColumn:toColumn:'
    'body': 'browser(${1:NSBrowser* browser}, didChangeLastColumn:${2:NSInteger oldLastColumn}, toColumn:${3:NSInteger column})'
  'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:':
    'prefix': 'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'
    'body': 'browser(${1:NSBrowser* browser}, draggingImageForRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, withEvent:${4:NSEvent* event}, offset:${5:NSPointPointer dragImageOffset})'
  'browser:headerViewControllerForItem:':
    'prefix': 'browser:headerViewControllerForItem:'
    'body': 'browser(${1:NSBrowser* browser}, headerViewControllerForItem:${2:id item})'
  'browser:heightOfRow:inColumn:':
    'prefix': 'browser:heightOfRow:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, heightOfRow:${2:NSInteger row}, inColumn:${3:NSInteger columnIndex})'
  'browser:isColumnValid:':
    'prefix': 'browser:isColumnValid:'
    'body': 'browser(${1:NSBrowser* sender}, isColumnValid:${2:NSInteger column})'
  'browser:isLeafItem:':
    'prefix': 'browser:isLeafItem:'
    'body': 'browser(${1:NSBrowser* browser}, isLeafItem:${2:id item})'
  'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:':
    'prefix': 'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedRowsWithIndexes:${3:NSIndexSet* rowIndexes}, inColumn:${4:NSInteger column})'
  'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:':
    'prefix': 'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'
    'body': 'browser(${1:NSBrowser* browser}, nextTypeSelectMatchFromRow:${2:NSInteger startRow}, toRow:${3:NSInteger endRow}, inColumn:${4:NSInteger column}, forString:${5:NSString* searchString})'
  'browser:numberOfChildrenOfItem:':
    'prefix': 'browser:numberOfChildrenOfItem:'
    'body': 'browser(${1:NSBrowser* browser}, numberOfChildrenOfItem:${2:id item})'
  'browser:numberOfRowsInColumn:':
    'prefix': 'browser:numberOfRowsInColumn:'
    'body': 'browser(${1:NSBrowser* sender}, numberOfRowsInColumn:${2:NSInteger column})'
  'browser:objectValueForItem:':
    'prefix': 'browser:objectValueForItem:'
    'body': 'browser(${1:NSBrowser* browser}, objectValueForItem:${2:id item})'
  'browser:previewViewControllerForLeafItem:':
    'prefix': 'browser:previewViewControllerForLeafItem:'
    'body': 'browser(${1:NSBrowser* browser}, previewViewControllerForLeafItem:${2:id item})'
  'browser:selectCellWithString:inColumn:':
    'prefix': 'browser:selectCellWithString:inColumn:'
    'body': 'browser(${1:NSBrowser* sender}, selectCellWithString:${2:NSString* title}, inColumn:${3:NSInteger column})'
  'browser:selectRow:inColumn:':
    'prefix': 'browser:selectRow:inColumn:'
    'body': 'browser(${1:NSBrowser* sender}, selectRow:${2:NSInteger row}, inColumn:${3:NSInteger column})'
  'browser:selectionIndexesForProposedSelection:inColumn:':
    'prefix': 'browser:selectionIndexesForProposedSelection:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes}, inColumn:${3:NSInteger column})'
  'browser:setObjectValue:forItem:':
    'prefix': 'browser:setObjectValue:forItem:'
    'body': 'browser(${1:NSBrowser* browser}, setObjectValue:${2:id object}, forItem:${3:id item})'
  'browser:shouldEditItem:':
    'prefix': 'browser:shouldEditItem:'
    'body': 'browser(${1:NSBrowser* browser}, shouldEditItem:${2:id item})'
  'browser:shouldShowCellExpansionForRow:column:':
    'prefix': 'browser:shouldShowCellExpansionForRow:column:'
    'body': 'browser(${1:NSBrowser* browser}, shouldShowCellExpansionForRow:${2:NSInteger row}, column:${3:NSInteger column})'
  'browser:shouldSizeColumn:forUserResize:toWidth:':
    'prefix': 'browser:shouldSizeColumn:forUserResize:toWidth:'
    'body': 'browser(${1:NSBrowser* browser}, shouldSizeColumn:${2:NSInteger columnIndex}, forUserResize:${3:BOOL forUserResize}, toWidth:${4:CGFloat suggestedWidth})'
  'browser:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'browser:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'browser(${1:NSBrowser* browser}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'browser:sizeToFitWidthOfColumn:':
    'prefix': 'browser:sizeToFitWidthOfColumn:'
    'body': 'browser(${1:NSBrowser* browser}, sizeToFitWidthOfColumn:${2:NSInteger columnIndex})'
  'browser:titleOfColumn:':
    'prefix': 'browser:titleOfColumn:'
    'body': 'browser(${1:NSBrowser* sender}, titleOfColumn:${2:NSInteger column})'
  'browser:typeSelectStringForRow:inColumn:':
    'prefix': 'browser:typeSelectStringForRow:inColumn:'
    'body': 'browser(${1:NSBrowser* browser}, typeSelectStringForRow:${2:NSInteger row}, inColumn:${3:NSInteger column})'
  'browser:validateDrop:proposedRow:column:dropOperation:':
    'prefix': 'browser:validateDrop:proposedRow:column:dropOperation:'
    'body': 'browser(${1:NSBrowser* browser}, validateDrop:${2:id info}, proposedRow:${3:NSInteger* row}, column:${4:NSInteger* column}, dropOperation:${5:NSBrowserDropOperation* dropOperation})'
  'browser:willDisplayCell:atRow:column:':
    'prefix': 'browser:willDisplayCell:atRow:column:'
    'body': 'browser(${1:NSBrowser* sender}, willDisplayCell:${2:id cell}, atRow:${3:NSInteger row}, column:${4:NSInteger column})'
  'browser:writeRowsWithIndexes:inColumn:toPasteboard:':
    'prefix': 'browser:writeRowsWithIndexes:inColumn:toPasteboard:'
    'body': 'browser(${1:NSBrowser* browser}, writeRowsWithIndexes:${2:NSIndexSet* rowIndexes}, inColumn:${3:NSInteger column}, toPasteboard:${4:NSPasteboard* pasteboard})'
  'browserColumnConfigurationDidChange:':
    'prefix': 'browserColumnConfigurationDidChange:'
    'body': 'browserColumnConfigurationDidChange(${1:NSNotification* notification})'
  'browserDidScroll:':
    'prefix': 'browserDidScroll:'
    'body': 'browserDidScroll(${1:NSBrowser* sender})'
  'browserWillScroll:':
    'prefix': 'browserWillScroll:'
    'body': 'browserWillScroll(${1:NSBrowser* sender})'
  'rootItemForBrowser:':
    'prefix': 'rootItemForBrowser:'
    'body': 'rootItemForBrowser(${1:NSBrowser* browser})'
  'changeSpelling:':
    'prefix': 'changeSpelling:'
    'body': 'changeSpelling(${1:id sender})'
  'collectionView:acceptDrop:index:dropOperation:':
    'prefix': 'collectionView:acceptDrop:index:dropOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, acceptDrop:${2:id draggingInfo}, index:${3:NSInteger index}, dropOperation:${4:NSCollectionViewDropOperation dropOperation})'
  'collectionView:canDragItemsAtIndexes:withEvent:':
    'prefix': 'collectionView:canDragItemsAtIndexes:withEvent:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, canDragItemsAtIndexes:${2:NSIndexSet* indexes}, withEvent:${3:NSEvent* event})'
  'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:':
    'prefix': 'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingImageForItemsAtIndexes:${2:NSIndexSet* indexes}, withEvent:${3:NSEvent* event}, offset:${4:NSPointPointer dragImageOffset})'
  'collectionView:draggingSession:endedAtPoint:dragOperation:':
    'prefix': 'collectionView:draggingSession:endedAtPoint:dragOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, dragOperation:${4:NSDragOperation operation})'
  'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:':
    'prefix': 'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forItemsAtIndexes:${4:NSIndexSet* indexes})'
  'collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:':
    'prefix': 'collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropURL}, forDraggedItemsAtIndexes:${3:NSIndexSet* indexes})'
  'collectionView:pasteboardWriterForItemAtIndex:':
    'prefix': 'collectionView:pasteboardWriterForItemAtIndex:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, pasteboardWriterForItemAtIndex:${2:NSUInteger index})'
  'collectionView:updateDraggingItemsForDrag:':
    'prefix': 'collectionView:updateDraggingItemsForDrag:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'collectionView:validateDrop:proposedIndex:dropOperation:':
    'prefix': 'collectionView:validateDrop:proposedIndex:dropOperation:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, validateDrop:${2:id draggingInfo}, proposedIndex:${3:NSInteger* proposedDropIndex}, dropOperation:${4:NSCollectionViewDropOperation* proposedDropOperation})'
  'collectionView:writeItemsAtIndexes:toPasteboard:':
    'prefix': 'collectionView:writeItemsAtIndexes:toPasteboard:'
    'body': 'collectionView(${1:NSCollectionView* collectionView}, writeItemsAtIndexes:${2:NSIndexSet* indexes}, toPasteboard:${3:NSPasteboard* pasteboard})'
  'changeColor:':
    'prefix': 'changeColor:'
    'body': 'changeColor(${1:id sender})'
  'currentMode':
    'prefix': 'currentMode'
    'body': 'currentMode()'
  'provideNewView:':
    'prefix': 'provideNewView:'
    'body': 'provideNewView(${1:BOOL initialRequest})'
  'setColor:':
    'prefix': 'setColor:'
    'body': 'setColor(${1:NSColor* newColor})'
  'supportsMode:':
    'prefix': 'supportsMode:'
    'body': 'supportsMode(${1:NSColorPanelMode mode})'
  'alphaControlAddedOrRemoved:':
    'prefix': 'alphaControlAddedOrRemoved:'
    'body': 'alphaControlAddedOrRemoved(${1:id sender})'
  'attachColorList:':
    'prefix': 'attachColorList:'
    'body': 'attachColorList(${1:NSColorList* colorList})'
  'buttonToolTip':
    'prefix': 'buttonToolTip'
    'body': 'buttonToolTip()'
  'detachColorList:':
    'prefix': 'detachColorList:'
    'body': 'detachColorList(${1:NSColorList* colorList})'
  'initWithPickerMask:colorPanel:':
    'prefix': 'initWithPickerMask:colorPanel:'
    'body': 'initWithPickerMask(${1:NSUInteger mask}, colorPanel:${2:NSColorPanel* owningColorPanel})'
  'insertNewButtonImage:in:':
    'prefix': 'insertNewButtonImage:in:'
    'body': 'insertNewButtonImage(${1:NSImage* newButtonImage}, in:${2:NSButtonCell* buttonCell})'
  'minContentSize':
    'prefix': 'minContentSize'
    'body': 'minContentSize()'
  'provideNewButtonImage':
    'prefix': 'provideNewButtonImage'
    'body': 'provideNewButtonImage()'
  'setMode:':
    'prefix': 'setMode:'
    'body': 'setMode(${1:NSColorPanelMode mode})'
  'viewSizeChanged:':
    'prefix': 'viewSizeChanged:'
    'body': 'viewSizeChanged(${1:id sender})'
  'comboBoxCell:completedString:':
    'prefix': 'comboBoxCell:completedString:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, completedString:${2:NSString* uncompletedString})'
  'comboBoxCell:indexOfItemWithStringValue:':
    'prefix': 'comboBoxCell:indexOfItemWithStringValue:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, indexOfItemWithStringValue:${2:NSString* string})'
  'comboBoxCell:objectValueForItemAtIndex:':
    'prefix': 'comboBoxCell:objectValueForItemAtIndex:'
    'body': 'comboBoxCell(${1:NSComboBoxCell* aComboBoxCell}, objectValueForItemAtIndex:${2:NSInteger index})'
  'numberOfItemsInComboBoxCell:':
    'prefix': 'numberOfItemsInComboBoxCell:'
    'body': 'numberOfItemsInComboBoxCell(${1:NSComboBoxCell* comboBoxCell})'
  'comboBox:completedString:':
    'prefix': 'comboBox:completedString:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, completedString:${2:NSString* string})'
  'comboBox:indexOfItemWithStringValue:':
    'prefix': 'comboBox:indexOfItemWithStringValue:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, indexOfItemWithStringValue:${2:NSString* string})'
  'comboBox:objectValueForItemAtIndex:':
    'prefix': 'comboBox:objectValueForItemAtIndex:'
    'body': 'comboBox(${1:NSComboBox* aComboBox}, objectValueForItemAtIndex:${2:NSInteger index})'
  'numberOfItemsInComboBox:':
    'prefix': 'numberOfItemsInComboBox:'
    'body': 'numberOfItemsInComboBox(${1:NSComboBox* aComboBox})'
  'comboBoxSelectionDidChange:':
    'prefix': 'comboBoxSelectionDidChange:'
    'body': 'comboBoxSelectionDidChange(${1:NSNotification* notification})'
  'comboBoxSelectionIsChanging:':
    'prefix': 'comboBoxSelectionIsChanging:'
    'body': 'comboBoxSelectionIsChanging(${1:NSNotification* notification})'
  'comboBoxWillDismiss:':
    'prefix': 'comboBoxWillDismiss:'
    'body': 'comboBoxWillDismiss(${1:NSNotification* notification})'
  'comboBoxWillPopUp:':
    'prefix': 'comboBoxWillPopUp:'
    'body': 'comboBoxWillPopUp(${1:NSNotification* notification})'
  'controlTextDidBeginEditing:':
    'prefix': 'controlTextDidBeginEditing:'
    'body': 'controlTextDidBeginEditing(${1:NSNotification* obj})'
  'controlTextDidChange:':
    'prefix': 'controlTextDidChange:'
    'body': 'controlTextDidChange(${1:NSNotification* obj})'
  'controlTextDidEndEditing:':
    'prefix': 'controlTextDidEndEditing:'
    'body': 'controlTextDidEndEditing(${1:NSNotification* obj})'
  'control:didFailToFormatString:errorDescription:':
    'prefix': 'control:didFailToFormatString:errorDescription:'
    'body': 'control(${1:NSControl* control}, didFailToFormatString:${2:NSString* string}, errorDescription:${3:NSString* error})'
  'control:didFailToValidatePartialString:errorDescription:':
    'prefix': 'control:didFailToValidatePartialString:errorDescription:'
    'body': 'control(${1:NSControl* control}, didFailToValidatePartialString:${2:NSString* string}, errorDescription:${3:NSString* error})'
  'control:isValidObject:':
    'prefix': 'control:isValidObject:'
    'body': 'control(${1:NSControl* control}, isValidObject:${2:id obj})'
  'control:textShouldBeginEditing:':
    'prefix': 'control:textShouldBeginEditing:'
    'body': 'control(${1:NSControl* control}, textShouldBeginEditing:${2:NSText* fieldEditor})'
  'control:textShouldEndEditing:':
    'prefix': 'control:textShouldEndEditing:'
    'body': 'control(${1:NSControl* control}, textShouldEndEditing:${2:NSText* fieldEditor})'
  'control:textView:completions:forPartialWordRange:indexOfSelectedItem:':
    'prefix': 'control:textView:completions:forPartialWordRange:indexOfSelectedItem:'
    'body': 'control(${1:NSControl* control}, textView:${2:NSTextView* textView}, completions:${3:NSArray* words}, forPartialWordRange:${4:NSRange charRange}, indexOfSelectedItem:${5:NSInteger* index})'
  'control:textView:doCommandBySelector:':
    'prefix': 'control:textView:doCommandBySelector:'
    'body': 'control(${1:NSControl* control}, textView:${2:NSTextView* textView}, doCommandBySelector:${3:SEL commandSelector})'
  'datePickerCell:validateProposedDateValue:timeInterval:':
    'prefix': 'datePickerCell:validateProposedDateValue:timeInterval:'
    'body': 'datePickerCell(${1:NSDatePickerCell* aDatePickerCell}, validateProposedDateValue:${2:NSDate** proposedDateValue}, timeInterval:${3:NSTimeInterval* proposedTimeInterval})'
  'isExplicitlyIncluded':
    'prefix': 'isExplicitlyIncluded'
    'body': 'isExplicitlyIncluded()'
  'key':
    'prefix': 'key'
    'body': 'Key()'
  'localizedKey':
    'prefix': 'localizedKey'
    'body': 'localizedKey()'
  'setKey:':
    'prefix': 'setKey:'
    'body': 'setKey(${1:NSString* key})'
  'setLocalizedKey:':
    'prefix': 'setLocalizedKey:'
    'body': 'setLocalizedKey(${1:NSString* localizedKey})'
  'setValue:':
    'prefix': 'setValue:'
    'body': 'setValue(${1:id value})'
  'value':
    'prefix': 'value'
    'body': 'value()'
  'dockMenu':
    'prefix': 'dockMenu'
    'body': 'dockMenu()'
  'setDockTile:':
    'prefix': 'setDockTile:'
    'body': 'setDockTile(${1:NSDockTile* dockTile})'
  'concludeDragOperation:':
    'prefix': 'concludeDragOperation:'
    'body': 'concludeDragOperation(${1:id sender})'
  'draggingEnded:':
    'prefix': 'draggingEnded:'
    'body': 'draggingEnded(${1:id sender})'
  'draggingEntered:':
    'prefix': 'draggingEntered:'
    'body': 'draggingEntered(${1:id sender})'
  'draggingExited:':
    'prefix': 'draggingExited:'
    'body': 'draggingExited(${1:id sender})'
  'draggingUpdated:':
    'prefix': 'draggingUpdated:'
    'body': 'draggingUpdated(${1:id sender})'
  'performDragOperation:':
    'prefix': 'performDragOperation:'
    'body': 'performDragOperation(${1:id sender})'
  'prepareForDragOperation:':
    'prefix': 'prepareForDragOperation:'
    'body': 'prepareForDragOperation(${1:id sender})'
  'updateDraggingItemsForDrag:':
    'prefix': 'updateDraggingItemsForDrag:'
    'body': 'updateDraggingItemsForDrag(${1:id sender})'
  'wantsPeriodicDraggingUpdates':
    'prefix': 'wantsPeriodicDraggingUpdates'
    'body': 'wantsPeriodicDraggingUpdates()'
  'animatesToDestination':
    'prefix': 'animatesToDestination'
    'body': 'animatesToDestination()'
  'draggedImage':
    'prefix': 'draggedImage'
    'body': 'draggedImage()'
  'draggedImageLocation':
    'prefix': 'draggedImageLocation'
    'body': 'draggedImageLocation()'
  'draggingDestinationWindow':
    'prefix': 'draggingDestinationWindow'
    'body': 'draggingDestinationWindow()'
  'draggingFormation':
    'prefix': 'draggingFormation'
    'body': 'draggingFormation()'
  'draggingLocation':
    'prefix': 'draggingLocation'
    'body': 'draggingLocation()'
  'draggingPasteboard':
    'prefix': 'draggingPasteboard'
    'body': 'draggingPasteboard()'
  'draggingSequenceNumber':
    'prefix': 'draggingSequenceNumber'
    'body': 'draggingSequenceNumber()'
  'draggingSource':
    'prefix': 'draggingSource'
    'body': 'draggingSource()'
  'draggingSourceOperationMask':
    'prefix': 'draggingSourceOperationMask'
    'body': 'draggingSourceOperationMask()'
  'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:':
    'prefix': 'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'
    'body': 'enumerateDraggingItemsWithOptions(${1:NSDraggingItemEnumerationOptions enumOpts}, forView:${2:NSView* view}, classes:${3:NSArray* classArray}, searchOptions:${4:NSDictionary* searchOptions}, usingBlock:${5:void (^)(NSDraggingItem *, NSInteger, BOOL *) block})'
  'namesOfPromisedFilesDroppedAtDestination:':
    'prefix': 'namesOfPromisedFilesDroppedAtDestination:'
    'body': 'namesOfPromisedFilesDroppedAtDestination(${1:NSURL* dropDestination})'
  'numberOfValidItemsForDrop':
    'prefix': 'numberOfValidItemsForDrop'
    'body': 'numberOfValidItemsForDrop()'
  'setAnimatesToDestination:':
    'prefix': 'setAnimatesToDestination:'
    'body': 'setAnimatesToDestination(${1:BOOL animatesToDestination})'
  'setDraggingFormation:':
    'prefix': 'setDraggingFormation:'
    'body': 'setDraggingFormation(${1:NSDraggingFormation draggingFormation})'
  'setNumberOfValidItemsForDrop:':
    'prefix': 'setNumberOfValidItemsForDrop:'
    'body': 'setNumberOfValidItemsForDrop(${1:NSInteger numberOfValidItemsForDrop})'
  'slideDraggedImageTo:':
    'prefix': 'slideDraggedImageTo:'
    'body': 'slideDraggedImageTo(${1:NSPoint screenPoint})'
  'draggingSession:endedAtPoint:operation:':
    'prefix': 'draggingSession:endedAtPoint:operation:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, endedAtPoint:${2:NSPoint screenPoint}, operation:${3:NSDragOperation operation})'
  'draggingSession:movedToPoint:':
    'prefix': 'draggingSession:movedToPoint:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, movedToPoint:${2:NSPoint screenPoint})'
  'draggingSession:sourceOperationMaskForDraggingContext:':
    'prefix': 'draggingSession:sourceOperationMaskForDraggingContext:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, sourceOperationMaskForDraggingContext:${2:NSDraggingContext context})'
  'draggingSession:willBeginAtPoint:':
    'prefix': 'draggingSession:willBeginAtPoint:'
    'body': 'draggingSession(${1:NSDraggingSession* session}, willBeginAtPoint:${2:NSPoint screenPoint})'
  'ignoreModifierKeysForDraggingSession:':
    'prefix': 'ignoreModifierKeysForDraggingSession:'
    'body': 'ignoreModifierKeysForDraggingSession(${1:NSDraggingSession* session})'
  'draggedImage:beganAt:':
    'prefix': 'draggedImage:beganAt:'
    'body': 'draggedImage(${1:NSImage* image}, beganAt:${2:NSPoint screenPoint})'
  'draggedImage:endedAt:deposited:':
    'prefix': 'draggedImage:endedAt:deposited:'
    'body': 'draggedImage(${1:NSImage* image}, endedAt:${2:NSPoint screenPoint}, deposited:${3:BOOL flag})'
  'draggedImage:endedAt:operation:':
    'prefix': 'draggedImage:endedAt:operation:'
    'body': 'draggedImage(${1:NSImage* image}, endedAt:${2:NSPoint screenPoint}, operation:${3:NSDragOperation operation})'
  'draggedImage:movedTo:':
    'prefix': 'draggedImage:movedTo:'
    'body': 'draggedImage(${1:NSImage* image}, movedTo:${2:NSPoint screenPoint})'
  'draggingSourceOperationMaskForLocal:':
    'prefix': 'draggingSourceOperationMaskForLocal:'
    'body': 'draggingSourceOperationMaskForLocal(${1:BOOL flag})'
  'ignoreModifierKeysWhileDragging':
    'prefix': 'ignoreModifierKeysWhileDragging'
    'body': 'ignoreModifierKeysWhileDragging()'
  'namesOfPromisedFilesDroppedAtDestination:':
    'prefix': 'namesOfPromisedFilesDroppedAtDestination:'
    'body': 'namesOfPromisedFilesDroppedAtDestination(${1:NSURL* dropDestination})'
  'drawerDidClose:':
    'prefix': 'drawerDidClose:'
    'body': 'drawerDidClose(${1:NSNotification* notification})'
  'drawerDidOpen:':
    'prefix': 'drawerDidOpen:'
    'body': 'drawerDidOpen(${1:NSNotification* notification})'
  'drawerShouldClose:':
    'prefix': 'drawerShouldClose:'
    'body': 'drawerShouldClose(${1:NSDrawer* sender})'
  'drawerShouldOpen:':
    'prefix': 'drawerShouldOpen:'
    'body': 'drawerShouldOpen(${1:NSDrawer* sender})'
  'drawerWillClose:':
    'prefix': 'drawerWillClose:'
    'body': 'drawerWillClose(${1:NSNotification* notification})'
  'drawerWillOpen:':
    'prefix': 'drawerWillOpen:'
    'body': 'drawerWillOpen(${1:NSNotification* notification})'
  'drawerWillResizeContents:toSize:':
    'prefix': 'drawerWillResizeContents:toSize:'
    'body': 'drawerWillResizeContents(${1:NSDrawer* sender}, toSize:${2:NSSize contentSize})'
  'commitEditing':
    'prefix': 'commitEditing'
    'body': 'commitEditing()'
  'commitEditingAndReturnError:':
    'prefix': 'commitEditingAndReturnError:'
    'body': 'commitEditingAndReturnError(${1:NSError** error})'
  'commitEditingWithDelegate:didCommitSelector:contextInfo:':
    'prefix': 'commitEditingWithDelegate:didCommitSelector:contextInfo:'
    'body': 'commitEditingWithDelegate(${1:id delegate}, didCommitSelector:${2:SEL didCommitSelector}, contextInfo:${3:void* contextInfo})'
  'discardEditing':
    'prefix': 'discardEditing'
    'body': 'discardEditing()'
  'objectDidBeginEditing:':
    'prefix': 'objectDidBeginEditing:'
    'body': 'objectDidBeginEditing(${1:id editor})'
  'objectDidEndEditing:':
    'prefix': 'objectDidEndEditing:'
    'body': 'objectDidEndEditing(${1:id editor})'
  'fontManager:willIncludeFont:':
    'prefix': 'fontManager:willIncludeFont:'
    'body': 'fontManager(${1:id sender}, willIncludeFont:${2:NSString* fontName})'
  'changeFont:':
    'prefix': 'changeFont:'
    'body': 'changeFont(${1:id sender})'
  'validModesForFontPanel:':
    'prefix': 'validModesForFontPanel:'
    'body': 'validModesForFontPanel(${1:NSFontPanel* fontPanel})'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:':
    'prefix': 'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'
    'body': 'insertGlyphs(${1:NSGlyph* glyphs}, length:${2:NSUInteger length}, forStartingGlyphAtIndex:${3:NSUInteger glyphIndex}, characterIndex:${4:NSUInteger charIndex})'
  'layoutOptions':
    'prefix': 'layoutOptions'
    'body': 'layoutOptions()'
  'setIntAttribute:value:forGlyphAtIndex:':
    'prefix': 'setIntAttribute:value:forGlyphAtIndex:'
    'body': 'setIntAttribute(${1:NSInteger attributeTag}, value:${2:NSInteger val}, forGlyphAtIndex:${3:NSUInteger glyphIndex})'
  'ignoreSpelling:':
    'prefix': 'ignoreSpelling:'
    'body': 'ignoreSpelling(${1:id sender})'
  'image:didLoadPartOfRepresentation:withValidRows:':
    'prefix': 'image:didLoadPartOfRepresentation:withValidRows:'
    'body': 'image(${1:NSImage* image}, didLoadPartOfRepresentation:${2:NSImageRep* rep}, withValidRows:${3:NSInteger rows})'
  'image:didLoadRepresentation:withStatus:':
    'prefix': 'image:didLoadRepresentation:withStatus:'
    'body': 'image(${1:NSImage* image}, didLoadRepresentation:${2:NSImageRep* rep}, withStatus:${3:NSImageLoadStatus status})'
  'image:didLoadRepresentationHeader:':
    'prefix': 'image:didLoadRepresentationHeader:'
    'body': 'image(${1:NSImage* image}, didLoadRepresentationHeader:${2:NSImageRep* rep})'
  'image:willLoadRepresentation:':
    'prefix': 'image:willLoadRepresentation:'
    'body': 'image(${1:NSImage* image}, willLoadRepresentation:${2:NSImageRep* rep})'
  'imageDidNotDraw:inRect:':
    'prefix': 'imageDidNotDraw:inRect:'
    'body': 'imageDidNotDraw(${1:id sender}, inRect:${2:NSRect aRect})'
  'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseDownOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseDraggedOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:':
    'prefix': 'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'
    'body': 'mouseUpOnCharacterIndex(${1:NSUInteger theIndex}, atCoordinate:${2:NSPoint thePoint}, withModifier:${3:NSUInteger theFlags}, client:${4:id sender})'
  'activeConversationChanged:toNewConversation:':
    'prefix': 'activeConversationChanged:toNewConversation:'
    'body': 'activeConversationChanged(${1:id sender}, toNewConversation:${2:NSInteger newConversation})'
  'activeConversationWillChange:fromOldConversation:':
    'prefix': 'activeConversationWillChange:fromOldConversation:'
    'body': 'activeConversationWillChange(${1:id sender}, fromOldConversation:${2:NSInteger oldConversation})'
  'canBeDisabled':
    'prefix': 'canBeDisabled'
    'body': 'canBeDisabled()'
  'doCommandBySelector:client:':
    'prefix': 'doCommandBySelector:client:'
    'body': 'doCommandBySelector(${1:SEL aSelector}, client:${2:id sender})'
  'inputClientBecomeActive:':
    'prefix': 'inputClientBecomeActive:'
    'body': 'inputClientBecomeActive(${1:id sender})'
  'inputClientDisabled:':
    'prefix': 'inputClientDisabled:'
    'body': 'inputClientDisabled(${1:id sender})'
  'inputClientEnabled:':
    'prefix': 'inputClientEnabled:'
    'body': 'inputClientEnabled(${1:id sender})'
  'inputClientResignActive:':
    'prefix': 'inputClientResignActive:'
    'body': 'inputClientResignActive(${1:id sender})'
  'insertText:client:':
    'prefix': 'insertText:client:'
    'body': 'insertText(${1:id aString}, client:${2:id sender})'
  'markedTextAbandoned:':
    'prefix': 'markedTextAbandoned:'
    'body': 'markedTextAbandoned(${1:id sender})'
  'markedTextSelectionChanged:client:':
    'prefix': 'markedTextSelectionChanged:client:'
    'body': 'markedTextSelectionChanged(${1:NSRange newSel}, client:${2:id sender})'
  'terminate:':
    'prefix': 'terminate:'
    'body': 'terminate(${1:id sender})'
  'wantsToDelayTextChangeNotifications':
    'prefix': 'wantsToDelayTextChangeNotifications'
    'body': 'wantsToDelayTextChangeNotifications()'
  'wantsToHandleMouseEvents':
    'prefix': 'wantsToHandleMouseEvents'
    'body': 'wantsToHandleMouseEvents()'
  'wantsToInterpretAllKeystrokes':
    'prefix': 'wantsToInterpretAllKeystrokes'
    'body': 'wantsToInterpretAllKeystrokes()'
  'bind:toObject:withKeyPath:options:':
    'prefix': 'bind:toObject:withKeyPath:options:'
    'body': 'bind(${1:NSString* binding}, toObject:${2:id observable}, withKeyPath:${3:NSString* keyPath}, options:${4:NSDictionary* options})'
  'NSKeyValueBindingCreation.exposeBinding:':
    'prefix': 'exposeBinding:'
    'body': 'exposeBinding(${1:NSString* binding})'
  'exposedBindings':
    'prefix': 'exposedBindings'
    'body': 'exposedBindings()'
  'infoForBinding:':
    'prefix': 'infoForBinding:'
    'body': 'infoForBinding(${1:NSString* binding})'
  'optionDescriptionsForBinding:':
    'prefix': 'optionDescriptionsForBinding:'
    'body': 'optionDescriptionsForBinding(${1:NSString* aBinding})'
  'unbind:':
    'prefix': 'unbind:'
    'body': 'unbind(${1:NSString* binding})'
  'valueClassForBinding:':
    'prefix': 'valueClassForBinding:'
    'body': 'valueClassForBinding(${1:NSString* binding})'
  'layer:shouldInheritContentsScale:fromWindow:':
    'prefix': 'layer:shouldInheritContentsScale:fromWindow:'
    'body': 'layer(${1:CALayer* layer}, shouldInheritContentsScale:${2:CGFloat newScale}, fromWindow:${3:NSWindow* window})'
  'layoutManager:didCompleteLayoutForTextContainer:atEnd:':
    'prefix': 'layoutManager:didCompleteLayoutForTextContainer:atEnd:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, didCompleteLayoutForTextContainer:${2:NSTextContainer* textContainer}, atEnd:${3:BOOL layoutFinishedFlag})'
  'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:':
    'prefix': 'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'
    'body': 'layoutManager(${1:NSLayoutManager* layoutManager}, shouldUseTemporaryAttributes:${2:NSDictionary* attrs}, forDrawingToScreen:${3:BOOL toScreen}, atCharacterIndex:${4:NSUInteger charIndex}, effectiveRange:${5:NSRangePointer effectiveCharRange})'
  'layoutManagerDidInvalidateLayout:':
    'prefix': 'layoutManagerDidInvalidateLayout:'
    'body': 'layoutManagerDidInvalidateLayout(${1:NSLayoutManager* sender})'
  'confinementRectForMenu:onScreen:':
    'prefix': 'confinementRectForMenu:onScreen:'
    'body': 'confinementRectForMenu(${1:NSMenu* menu}, onScreen:${2:NSScreen* screen})'
  'menu:updateItem:atIndex:shouldCancel:':
    'prefix': 'menu:updateItem:atIndex:shouldCancel:'
    'body': 'menu(${1:NSMenu* menu}, updateItem:${2:NSMenuItem* item}, atIndex:${3:NSInteger index}, shouldCancel:${4:BOOL shouldCancel})'
  'menu:willHighlightItem:':
    'prefix': 'menu:willHighlightItem:'
    'body': 'menu(${1:NSMenu* menu}, willHighlightItem:${2:NSMenuItem* item})'
  'menuDidClose:':
    'prefix': 'menuDidClose:'
    'body': 'menuDidClose(${1:NSMenu* menu})'
  'menuHasKeyEquivalent:forEvent:target:action:':
    'prefix': 'menuHasKeyEquivalent:forEvent:target:action:'
    'body': 'menuHasKeyEquivalent(${1:NSMenu* menu}, forEvent:${2:NSEvent* event}, target:${3:id* target}, action:${4:SEL* action})'
  'menuNeedsUpdate:':
    'prefix': 'menuNeedsUpdate:'
    'body': 'menuNeedsUpdate(${1:NSMenu* menu})'
  'menuWillOpen:':
    'prefix': 'menuWillOpen:'
    'body': 'menuWillOpen(${1:NSMenu* menu})'
  'numberOfItemsInMenu:':
    'prefix': 'numberOfItemsInMenu:'
    'body': 'numberOfItemsInMenu(${1:NSMenu* menu})'
  'validateMenuItem:':
    'prefix': 'validateMenuItem:'
    'body': 'validateMenuItem(${1:NSMenuItem* menuItem})'
  'awakeFromNib':
    'prefix': 'awakeFromNib'
    'body': 'awakeFromNib()'
  'panel:didChangeToDirectoryURL:':
    'prefix': 'panel:didChangeToDirectoryURL:'
    'body': 'panel(${1:id sender}, didChangeToDirectoryURL:${2:NSURL* url})'
  'panel:shouldEnableURL:':
    'prefix': 'panel:shouldEnableURL:'
    'body': 'panel(${1:id sender}, shouldEnableURL:${2:NSURL* url})'
  'panel:userEnteredFilename:confirmed:':
    'prefix': 'panel:userEnteredFilename:confirmed:'
    'body': 'panel(${1:id sender}, userEnteredFilename:${2:NSString* filename}, confirmed:${3:BOOL okFlag})'
  'panel:validateURL:error:':
    'prefix': 'panel:validateURL:error:'
    'body': 'panel(${1:id sender}, validateURL:${2:NSURL* url}, error:${3:NSError** outError})'
  'panel:willExpand:':
    'prefix': 'panel:willExpand:'
    'body': 'panel(${1:id sender}, willExpand:${2:BOOL expanding})'
  'panelSelectionDidChange:':
    'prefix': 'panelSelectionDidChange:'
    'body': 'panelSelectionDidChange(${1:id sender})'
  'outlineView:acceptDrop:item:childIndex:':
    'prefix': 'outlineView:acceptDrop:item:childIndex:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, acceptDrop:${2:id info}, item:${3:id item}, childIndex:${4:NSInteger index})'
  'outlineView:child:ofItem:':
    'prefix': 'outlineView:child:ofItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, child:${2:NSInteger index}, ofItem:${3:id item})'
  'outlineView:draggingSession:endedAtPoint:operation:':
    'prefix': 'outlineView:draggingSession:endedAtPoint:operation:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, operation:${4:NSDragOperation operation})'
  'outlineView:draggingSession:willBeginAtPoint:forItems:':
    'prefix': 'outlineView:draggingSession:willBeginAtPoint:forItems:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forItems:${4:NSArray* draggedItems})'
  'outlineView:isItemExpandable:':
    'prefix': 'outlineView:isItemExpandable:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, isItemExpandable:${2:id item})'
  'outlineView:itemForPersistentObject:':
    'prefix': 'outlineView:itemForPersistentObject:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, itemForPersistentObject:${2:id object})'
  'outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:':
    'prefix': 'outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedItems:${3:NSArray* items})'
  'outlineView:numberOfChildrenOfItem:':
    'prefix': 'outlineView:numberOfChildrenOfItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, numberOfChildrenOfItem:${2:id item})'
  'outlineView:objectValueForTableColumn:byItem:':
    'prefix': 'outlineView:objectValueForTableColumn:byItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, objectValueForTableColumn:${2:NSTableColumn* tableColumn}, byItem:${3:id item})'
  'outlineView:pasteboardWriterForItem:':
    'prefix': 'outlineView:pasteboardWriterForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, pasteboardWriterForItem:${2:id item})'
  'outlineView:persistentObjectForItem:':
    'prefix': 'outlineView:persistentObjectForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, persistentObjectForItem:${2:id item})'
  'outlineView:setObjectValue:forTableColumn:byItem:':
    'prefix': 'outlineView:setObjectValue:forTableColumn:byItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, setObjectValue:${2:id object}, forTableColumn:${3:NSTableColumn* tableColumn}, byItem:${4:id item})'
  'outlineView:sortDescriptorsDidChange:':
    'prefix': 'outlineView:sortDescriptorsDidChange:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, sortDescriptorsDidChange:${2:NSArray* oldDescriptors})'
  'outlineView:updateDraggingItemsForDrag:':
    'prefix': 'outlineView:updateDraggingItemsForDrag:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'outlineView:validateDrop:proposedItem:proposedChildIndex:':
    'prefix': 'outlineView:validateDrop:proposedItem:proposedChildIndex:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, validateDrop:${2:id info}, proposedItem:${3:id item}, proposedChildIndex:${4:NSInteger index})'
  'outlineView:writeItems:toPasteboard:':
    'prefix': 'outlineView:writeItems:toPasteboard:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, writeItems:${2:NSArray* items}, toPasteboard:${3:NSPasteboard* pasteboard})'
  'outlineView:dataCellForTableColumn:item:':
    'prefix': 'outlineView:dataCellForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, dataCellForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:didAddRowView:forRow:':
    'prefix': 'outlineView:didAddRowView:forRow:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didAddRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'outlineView:didClickTableColumn:':
    'prefix': 'outlineView:didClickTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didClickTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:didDragTableColumn:':
    'prefix': 'outlineView:didDragTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didDragTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:didRemoveRowView:forRow:':
    'prefix': 'outlineView:didRemoveRowView:forRow:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, didRemoveRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'outlineView:heightOfRowByItem:':
    'prefix': 'outlineView:heightOfRowByItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, heightOfRowByItem:${2:id item})'
  'outlineView:isGroupItem:':
    'prefix': 'outlineView:isGroupItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, isGroupItem:${2:id item})'
  'outlineView:mouseDownInHeaderOfTableColumn:':
    'prefix': 'outlineView:mouseDownInHeaderOfTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, mouseDownInHeaderOfTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:nextTypeSelectMatchFromItem:toItem:forString:':
    'prefix': 'outlineView:nextTypeSelectMatchFromItem:toItem:forString:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, nextTypeSelectMatchFromItem:${2:id startItem}, toItem:${3:id endItem}, forString:${4:NSString* searchString})'
  'outlineView:rowViewForItem:':
    'prefix': 'outlineView:rowViewForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, rowViewForItem:${2:id item})'
  'outlineView:selectionIndexesForProposedSelection:':
    'prefix': 'outlineView:selectionIndexesForProposedSelection:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes})'
  'outlineView:shouldCollapseItem:':
    'prefix': 'outlineView:shouldCollapseItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldCollapseItem:${2:id item})'
  'outlineView:shouldEditTableColumn:item:':
    'prefix': 'outlineView:shouldEditTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldEditTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:shouldExpandItem:':
    'prefix': 'outlineView:shouldExpandItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldExpandItem:${2:id item})'
  'outlineView:shouldReorderColumn:toColumn:':
    'prefix': 'outlineView:shouldReorderColumn:toColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldReorderColumn:${2:NSInteger columnIndex}, toColumn:${3:NSInteger newColumnIndex})'
  'outlineView:shouldSelectItem:':
    'prefix': 'outlineView:shouldSelectItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldSelectItem:${2:id item})'
  'outlineView:shouldSelectTableColumn:':
    'prefix': 'outlineView:shouldSelectTableColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldSelectTableColumn:${2:NSTableColumn* tableColumn})'
  'outlineView:shouldShowCellExpansionForTableColumn:item:':
    'prefix': 'outlineView:shouldShowCellExpansionForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldShowCellExpansionForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:shouldShowOutlineCellForItem:':
    'prefix': 'outlineView:shouldShowOutlineCellForItem:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldShowOutlineCellForItem:${2:id item})'
  'outlineView:shouldTrackCell:forTableColumn:item:':
    'prefix': 'outlineView:shouldTrackCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldTrackCell:${2:NSCell* cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'outlineView:sizeToFitWidthOfColumn:':
    'prefix': 'outlineView:sizeToFitWidthOfColumn:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, sizeToFitWidthOfColumn:${2:NSInteger column})'
  'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:':
    'prefix': 'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, toolTipForCell:${2:NSCell* cell}, rect:${3:NSRectPointer rect}, tableColumn:${4:NSTableColumn* tableColumn}, item:${5:id item}, mouseLocation:${6:NSPoint mouseLocation})'
  'outlineView:typeSelectStringForTableColumn:item:':
    'prefix': 'outlineView:typeSelectStringForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, typeSelectStringForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:viewForTableColumn:item:':
    'prefix': 'outlineView:viewForTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, viewForTableColumn:${2:NSTableColumn* tableColumn}, item:${3:id item})'
  'outlineView:willDisplayCell:forTableColumn:item:':
    'prefix': 'outlineView:willDisplayCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, willDisplayCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineView:willDisplayOutlineCell:forTableColumn:item:':
    'prefix': 'outlineView:willDisplayOutlineCell:forTableColumn:item:'
    'body': 'outlineView(${1:NSOutlineView* outlineView}, willDisplayOutlineCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, item:${4:id item})'
  'outlineViewColumnDidMove:':
    'prefix': 'outlineViewColumnDidMove:'
    'body': 'outlineViewColumnDidMove(${1:NSNotification* notification})'
  'outlineViewColumnDidResize:':
    'prefix': 'outlineViewColumnDidResize:'
    'body': 'outlineViewColumnDidResize(${1:NSNotification* notification})'
  'outlineViewItemDidCollapse:':
    'prefix': 'outlineViewItemDidCollapse:'
    'body': 'outlineViewItemDidCollapse(${1:NSNotification* notification})'
  'outlineViewItemDidExpand:':
    'prefix': 'outlineViewItemDidExpand:'
    'body': 'outlineViewItemDidExpand(${1:NSNotification* notification})'
  'outlineViewItemWillCollapse:':
    'prefix': 'outlineViewItemWillCollapse:'
    'body': 'outlineViewItemWillCollapse(${1:NSNotification* notification})'
  'outlineViewItemWillExpand:':
    'prefix': 'outlineViewItemWillExpand:'
    'body': 'outlineViewItemWillExpand(${1:NSNotification* notification})'
  'outlineViewSelectionDidChange:':
    'prefix': 'outlineViewSelectionDidChange:'
    'body': 'outlineViewSelectionDidChange(${1:NSNotification* notification})'
  'outlineViewSelectionIsChanging:':
    'prefix': 'outlineViewSelectionIsChanging:'
    'body': 'outlineViewSelectionIsChanging(${1:NSNotification* notification})'
  'selectionShouldChangeInOutlineView:':
    'prefix': 'selectionShouldChangeInOutlineView:'
    'body': 'selectionShouldChangeInOutlineView(${1:NSOutlineView* outlineView})'
  'pageController:didTransitionToObject:':
    'prefix': 'pageController:didTransitionToObject:'
    'body': 'pageController(${1:NSPageController* pageController}, didTransitionToObject:${2:id object})'
  'pageController:frameForObject:':
    'prefix': 'pageController:frameForObject:'
    'body': 'pageController(${1:NSPageController* pageController}, frameForObject:${2:id object})'
  'pageController:identifierForObject:':
    'prefix': 'pageController:identifierForObject:'
    'body': 'pageController(${1:NSPageController* pageController}, identifierForObject:${2:id object})'
  'pageController:prepareViewController:withObject:':
    'prefix': 'pageController:prepareViewController:withObject:'
    'body': 'pageController(${1:NSPageController* pageController}, prepareViewController:${2:NSViewController* viewController}, withObject:${3:id object})'
  'pageController:viewControllerForIdentifier:':
    'prefix': 'pageController:viewControllerForIdentifier:'
    'body': 'pageController(${1:NSPageController* pageController}, viewControllerForIdentifier:${2:NSString* identifier})'
  'pageControllerDidEndLiveTransition:':
    'prefix': 'pageControllerDidEndLiveTransition:'
    'body': 'pageControllerDidEndLiveTransition(${1:NSPageController* pageController})'
  'pageControllerWillStartLiveTransition:':
    'prefix': 'pageControllerWillStartLiveTransition:'
    'body': 'pageControllerWillStartLiveTransition(${1:NSPageController* pageController})'
  'pasteboard:item:provideDataForType:':
    'prefix': 'pasteboard:item:provideDataForType:'
    'body': 'pasteboard(${1:NSPasteboard* pasteboard}, item:${2:NSPasteboardItem* item}, provideDataForType:${3:NSString* type})'
  'pasteboardFinishedWithDataProvider:':
    'prefix': 'pasteboardFinishedWithDataProvider:'
    'body': 'pasteboardFinishedWithDataProvider(${1:NSPasteboard* pasteboard})'
  'pasteboard:provideDataForType:':
    'prefix': 'pasteboard:provideDataForType:'
    'body': 'pasteboard(${1:NSPasteboard* sender}, provideDataForType:${2:NSString* type})'
  'pasteboardChangedOwner:':
    'prefix': 'pasteboardChangedOwner:'
    'body': 'pasteboardChangedOwner(${1:NSPasteboard* sender})'
  'initWithPasteboardPropertyList:ofType:':
    'prefix': 'initWithPasteboardPropertyList:ofType:'
    'body': 'initWithPasteboardPropertyList(${1:id propertyList}, ofType:${2:NSString* type})'
  'NSPasteboardReading.readableTypesForPasteboard:':
    'prefix': 'readableTypesForPasteboard:'
    'body': 'readableTypesForPasteboard(${1:NSPasteboard* pasteboard})'
  'NSPasteboardReading.readingOptionsForType:pasteboard:':
    'prefix': 'readingOptionsForType:pasteboard:'
    'body': 'readingOptionsForType(${1:NSString* type}, pasteboard:${2:NSPasteboard* pasteboard})'
  'pasteboardPropertyListForType:':
    'prefix': 'pasteboardPropertyListForType:'
    'body': 'pasteboardPropertyListForType(${1:NSString* type})'
  'writableTypesForPasteboard:':
    'prefix': 'writableTypesForPasteboard:'
    'body': 'writableTypesForPasteboard(${1:NSPasteboard* pasteboard})'
  'writingOptionsForType:pasteboard:':
    'prefix': 'writingOptionsForType:pasteboard:'
    'body': 'writingOptionsForType(${1:NSString* type}, pasteboard:${2:NSPasteboard* pasteboard})'
  'pathCell:willDisplayOpenPanel:':
    'prefix': 'pathCell:willDisplayOpenPanel:'
    'body': 'pathCell(${1:NSPathCell* pathCell}, willDisplayOpenPanel:${2:NSOpenPanel* openPanel})'
  'pathCell:willPopUpMenu:':
    'prefix': 'pathCell:willPopUpMenu:'
    'body': 'pathCell(${1:NSPathCell* pathCell}, willPopUpMenu:${2:NSMenu* menu})'
  'pathControl:acceptDrop:':
    'prefix': 'pathControl:acceptDrop:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, acceptDrop:${2:id info})'
  'pathControl:shouldDragPathComponentCell:withPasteboard:':
    'prefix': 'pathControl:shouldDragPathComponentCell:withPasteboard:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, shouldDragPathComponentCell:${2:NSPathComponentCell* pathComponentCell}, withPasteboard:${3:NSPasteboard* pasteboard})'
  'pathControl:validateDrop:':
    'prefix': 'pathControl:validateDrop:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, validateDrop:${2:id info})'
  'pathControl:willDisplayOpenPanel:':
    'prefix': 'pathControl:willDisplayOpenPanel:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, willDisplayOpenPanel:${2:NSOpenPanel* openPanel})'
  'pathControl:willPopUpMenu:':
    'prefix': 'pathControl:willPopUpMenu:'
    'body': 'pathControl(${1:NSPathControl* pathControl}, willPopUpMenu:${2:NSMenu* menu})'
  'NSPlaceholders.defaultPlaceholderForMarker:withBinding:':
    'prefix': 'defaultPlaceholderForMarker:withBinding:'
    'body': 'defaultPlaceholderForMarker(${1:id marker}, withBinding:${2:NSString* binding})'
  'NSPlaceholders.setDefaultPlaceholder:forMarker:withBinding:':
    'prefix': 'setDefaultPlaceholder:forMarker:withBinding:'
    'body': 'setDefaultPlaceholder(${1:id placeholder}, forMarker:${2:id marker}, withBinding:${3:NSString* binding})'
  'detachableWindowForPopover:':
    'prefix': 'detachableWindowForPopover:'
    'body': 'detachableWindowForPopover(${1:NSPopover* popover})'
  'popoverDidClose:':
    'prefix': 'popoverDidClose:'
    'body': 'popoverDidClose(${1:NSNotification* notification})'
  'popoverDidShow:':
    'prefix': 'popoverDidShow:'
    'body': 'popoverDidShow(${1:NSNotification* notification})'
  'popoverShouldClose:':
    'prefix': 'popoverShouldClose:'
    'body': 'popoverShouldClose(${1:NSPopover* popover})'
  'popoverWillClose:':
    'prefix': 'popoverWillClose:'
    'body': 'popoverWillClose(${1:NSNotification* notification})'
  'popoverWillShow:':
    'prefix': 'popoverWillShow:'
    'body': 'popoverWillShow(${1:NSNotification* notification})'
  'keyPathsForValuesAffectingPreview':
    'prefix': 'keyPathsForValuesAffectingPreview'
    'body': 'KeyPathsForValuesAffectingPreview()'
  'localizedSummaryItems':
    'prefix': 'localizedSummaryItems'
    'body': 'localizedSummaryItems()'
  'ruleEditor:child:forCriterion:withRowType:':
    'prefix': 'ruleEditor:child:forCriterion:withRowType:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, child:${2:NSInteger index}, forCriterion:${3:id criterion}, withRowType:${4:NSRuleEditorRowType rowType})'
  'ruleEditor:displayValueForCriterion:inRow:':
    'prefix': 'ruleEditor:displayValueForCriterion:inRow:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, displayValueForCriterion:${2:id criterion}, inRow:${3:NSInteger row})'
  'ruleEditor:numberOfChildrenForCriterion:withRowType:':
    'prefix': 'ruleEditor:numberOfChildrenForCriterion:withRowType:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, numberOfChildrenForCriterion:${2:id criterion}, withRowType:${3:NSRuleEditorRowType rowType})'
  'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:':
    'prefix': 'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'
    'body': 'ruleEditor(${1:NSRuleEditor* editor}, predicatePartsForCriterion:${2:id criterion}, withDisplayValue:${3:id value}, inRow:${4:NSInteger row})'
  'ruleEditorRowsDidChange:':
    'prefix': 'ruleEditorRowsDidChange:'
    'body': 'ruleEditorRowsDidChange(${1:NSNotification* notification})'
  'panel:compareFilename:with:caseSensitive:':
    'prefix': 'panel:compareFilename:with:caseSensitive:'
    'body': 'panel(${1:id sender}, compareFilename:${2:NSString* name1}, with:${3:NSString* name2}, caseSensitive:${4:BOOL caseSensitive})'
  'panel:directoryDidChange:':
    'prefix': 'panel:directoryDidChange:'
    'body': 'panel(${1:id sender}, directoryDidChange:${2:NSString* path})'
  'panel:isValidFilename:':
    'prefix': 'panel:isValidFilename:'
    'body': 'panel(${1:id sender}, isValidFilename:${2:NSString* filename})'
  'panel:shouldShowFilename:':
    'prefix': 'panel:shouldShowFilename:'
    'body': 'panel(${1:id sender}, shouldShowFilename:${2:NSString* filename})'
  'readSelectionFromPasteboard:':
    'prefix': 'readSelectionFromPasteboard:'
    'body': 'readSelectionFromPasteboard(${1:NSPasteboard* pboard})'
  'writeSelectionToPasteboard:types:':
    'prefix': 'writeSelectionToPasteboard:types:'
    'body': 'writeSelectionToPasteboard(${1:NSPasteboard* pboard}, types:${2:NSArray* types})'
  'sharingService:didFailToShareItems:error:':
    'prefix': 'sharingService:didFailToShareItems:error:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, didFailToShareItems:${2:NSArray* items}, error:${3:NSError* error})'
  'sharingService:didShareItems:':
    'prefix': 'sharingService:didShareItems:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, didShareItems:${2:NSArray* items})'
  'sharingService:sourceFrameOnScreenForShareItem:':
    'prefix': 'sharingService:sourceFrameOnScreenForShareItem:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, sourceFrameOnScreenForShareItem:${2:id item})'
  'sharingService:sourceWindowForShareItems:sharingContentScope:':
    'prefix': 'sharingService:sourceWindowForShareItems:sharingContentScope:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, sourceWindowForShareItems:${2:NSArray* items}, sharingContentScope:${3:NSSharingContentScope* sharingContentScope})'
  'sharingService:transitionImageForShareItem:contentRect:':
    'prefix': 'sharingService:transitionImageForShareItem:contentRect:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, transitionImageForShareItem:${2:id item}, contentRect:${3:NSRect* contentRect})'
  'sharingService:willShareItems:':
    'prefix': 'sharingService:willShareItems:'
    'body': 'sharingService(${1:NSSharingService* sharingService}, willShareItems:${2:NSArray* items})'
  'sharingServicePicker:delegateForSharingService:':
    'prefix': 'sharingServicePicker:delegateForSharingService:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, delegateForSharingService:${2:NSSharingService* sharingService})'
  'sharingServicePicker:didChooseSharingService:':
    'prefix': 'sharingServicePicker:didChooseSharingService:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, didChooseSharingService:${2:NSSharingService* service})'
  'sharingServicePicker:sharingServicesForItems:proposedSharingServices:':
    'prefix': 'sharingServicePicker:sharingServicesForItems:proposedSharingServices:'
    'body': 'sharingServicePicker(${1:NSSharingServicePicker* sharingServicePicker}, sharingServicesForItems:${2:NSArray* items}, proposedSharingServices:${3:NSArray* proposedServices})'
  'sound:didFinishPlaying:':
    'prefix': 'sound:didFinishPlaying:'
    'body': 'sound(${1:NSSound* sound}, didFinishPlaying:${2:BOOL aBool})'
  'speechRecognizer:didRecognizeCommand:':
    'prefix': 'speechRecognizer:didRecognizeCommand:'
    'body': 'speechRecognizer(${1:NSSpeechRecognizer* sender}, didRecognizeCommand:${2:id command})'
  'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:':
    'prefix': 'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didEncounterErrorAtIndex:${2:NSUInteger characterIndex}, ofString:${3:NSString* string}, message:${4:NSString* message})'
  'speechSynthesizer:didEncounterSyncMessage:':
    'prefix': 'speechSynthesizer:didEncounterSyncMessage:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didEncounterSyncMessage:${2:NSString* message})'
  'speechSynthesizer:didFinishSpeaking:':
    'prefix': 'speechSynthesizer:didFinishSpeaking:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, didFinishSpeaking:${2:BOOL finishedSpeaking})'
  'speechSynthesizer:willSpeakPhoneme:':
    'prefix': 'speechSynthesizer:willSpeakPhoneme:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, willSpeakPhoneme:${2:short phonemeOpcode})'
  'speechSynthesizer:willSpeakWord:ofString:':
    'prefix': 'speechSynthesizer:willSpeakWord:ofString:'
    'body': 'speechSynthesizer(${1:NSSpeechSynthesizer* sender}, willSpeakWord:${2:NSRange characterRange}, ofString:${3:NSString* string})'
  'splitView:additionalEffectiveRectOfDividerAtIndex:':
    'prefix': 'splitView:additionalEffectiveRectOfDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, additionalEffectiveRectOfDividerAtIndex:${2:NSInteger dividerIndex})'
  'splitView:canCollapseSubview:':
    'prefix': 'splitView:canCollapseSubview:'
    'body': 'splitView(${1:NSSplitView* splitView}, canCollapseSubview:${2:NSView* subview})'
  'splitView:constrainMaxCoordinate:ofSubviewAt:':
    'prefix': 'splitView:constrainMaxCoordinate:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainMaxCoordinate:${2:CGFloat proposedMaximumPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:constrainMinCoordinate:ofSubviewAt:':
    'prefix': 'splitView:constrainMinCoordinate:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainMinCoordinate:${2:CGFloat proposedMinimumPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:constrainSplitPosition:ofSubviewAt:':
    'prefix': 'splitView:constrainSplitPosition:ofSubviewAt:'
    'body': 'splitView(${1:NSSplitView* splitView}, constrainSplitPosition:${2:CGFloat proposedPosition}, ofSubviewAt:${3:NSInteger dividerIndex})'
  'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:':
    'prefix': 'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, effectiveRect:${2:NSRect proposedEffectiveRect}, forDrawnRect:${3:NSRect drawnRect}, ofDividerAtIndex:${4:NSInteger dividerIndex})'
  'splitView:resizeSubviewsWithOldSize:':
    'prefix': 'splitView:resizeSubviewsWithOldSize:'
    'body': 'splitView(${1:NSSplitView* splitView}, resizeSubviewsWithOldSize:${2:NSSize oldSize})'
  'splitView:shouldAdjustSizeOfSubview:':
    'prefix': 'splitView:shouldAdjustSizeOfSubview:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldAdjustSizeOfSubview:${2:NSView* view})'
  'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:':
    'prefix': 'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldCollapseSubview:${2:NSView* subview}, forDoubleClickOnDividerAtIndex:${3:NSInteger dividerIndex})'
  'splitView:shouldHideDividerAtIndex:':
    'prefix': 'splitView:shouldHideDividerAtIndex:'
    'body': 'splitView(${1:NSSplitView* splitView}, shouldHideDividerAtIndex:${2:NSInteger dividerIndex})'
  'splitViewDidResizeSubviews:':
    'prefix': 'splitViewDidResizeSubviews:'
    'body': 'splitViewDidResizeSubviews(${1:NSNotification* notification})'
  'splitViewWillResizeSubviews:':
    'prefix': 'splitViewWillResizeSubviews:'
    'body': 'splitViewWillResizeSubviews(${1:NSNotification* notification})'
  'stackView:didReattachViews:':
    'prefix': 'stackView:didReattachViews:'
    'body': 'stackView(${1:NSStackView* stackView}, didReattachViews:${2:NSArray* views})'
  'stackView:willDetachViews:':
    'prefix': 'stackView:willDetachViews:'
    'body': 'stackView(${1:NSStackView* stackView}, willDetachViews:${2:NSArray* views})'
  'tabView:didSelectTabViewItem:':
    'prefix': 'tabView:didSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, didSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabView:shouldSelectTabViewItem:':
    'prefix': 'tabView:shouldSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, shouldSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabView:willSelectTabViewItem:':
    'prefix': 'tabView:willSelectTabViewItem:'
    'body': 'tabView(${1:NSTabView* tabView}, willSelectTabViewItem:${2:NSTabViewItem* tabViewItem})'
  'tabViewDidChangeNumberOfTabViewItems:':
    'prefix': 'tabViewDidChangeNumberOfTabViewItems:'
    'body': 'tabViewDidChangeNumberOfTabViewItems(${1:NSTabView* tabView})'
  'numberOfRowsInTableView:':
    'prefix': 'numberOfRowsInTableView:'
    'body': 'numberOfRowsInTableView(${1:NSTableView* tableView})'
  'tableView:acceptDrop:row:dropOperation:':
    'prefix': 'tableView:acceptDrop:row:dropOperation:'
    'body': 'tableView(${1:NSTableView* tableView}, acceptDrop:${2:id info}, row:${3:NSInteger row}, dropOperation:${4:NSTableViewDropOperation dropOperation})'
  'tableView:draggingSession:endedAtPoint:operation:':
    'prefix': 'tableView:draggingSession:endedAtPoint:operation:'
    'body': 'tableView(${1:NSTableView* tableView}, draggingSession:${2:NSDraggingSession* session}, endedAtPoint:${3:NSPoint screenPoint}, operation:${4:NSDragOperation operation})'
  'tableView:draggingSession:willBeginAtPoint:forRowIndexes:':
    'prefix': 'tableView:draggingSession:willBeginAtPoint:forRowIndexes:'
    'body': 'tableView(${1:NSTableView* tableView}, draggingSession:${2:NSDraggingSession* session}, willBeginAtPoint:${3:NSPoint screenPoint}, forRowIndexes:${4:NSIndexSet* rowIndexes})'
  'tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:':
    'prefix': 'tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'
    'body': 'tableView(${1:NSTableView* tableView}, namesOfPromisedFilesDroppedAtDestination:${2:NSURL* dropDestination}, forDraggedRowsWithIndexes:${3:NSIndexSet* indexSet})'
  'tableView:objectValueForTableColumn:row:':
    'prefix': 'tableView:objectValueForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, objectValueForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:pasteboardWriterForRow:':
    'prefix': 'tableView:pasteboardWriterForRow:'
    'body': 'tableView(${1:NSTableView* tableView}, pasteboardWriterForRow:${2:NSInteger row})'
  'tableView:setObjectValue:forTableColumn:row:':
    'prefix': 'tableView:setObjectValue:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, setObjectValue:${2:id object}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableView:sortDescriptorsDidChange:':
    'prefix': 'tableView:sortDescriptorsDidChange:'
    'body': 'tableView(${1:NSTableView* tableView}, sortDescriptorsDidChange:${2:NSArray* oldDescriptors})'
  'tableView:updateDraggingItemsForDrag:':
    'prefix': 'tableView:updateDraggingItemsForDrag:'
    'body': 'tableView(${1:NSTableView* tableView}, updateDraggingItemsForDrag:${2:id draggingInfo})'
  'tableView:validateDrop:proposedRow:proposedDropOperation:':
    'prefix': 'tableView:validateDrop:proposedRow:proposedDropOperation:'
    'body': 'tableView(${1:NSTableView* tableView}, validateDrop:${2:id info}, proposedRow:${3:NSInteger row}, proposedDropOperation:${4:NSTableViewDropOperation dropOperation})'
  'tableView:writeRowsWithIndexes:toPasteboard:':
    'prefix': 'tableView:writeRowsWithIndexes:toPasteboard:'
    'body': 'tableView(${1:NSTableView* tableView}, writeRowsWithIndexes:${2:NSIndexSet* rowIndexes}, toPasteboard:${3:NSPasteboard* pboard})'
  'tableView:writeRows:toPasteboard:':
    'prefix': 'tableView:writeRows:toPasteboard:'
    'body': 'tableView(${1:NSTableView* tableView}, writeRows:${2:NSArray* rows}, toPasteboard:${3:NSPasteboard* pboard})'
  'selectionShouldChangeInTableView:':
    'prefix': 'selectionShouldChangeInTableView:'
    'body': 'selectionShouldChangeInTableView(${1:NSTableView* tableView})'
  'tableView:dataCellForTableColumn:row:':
    'prefix': 'tableView:dataCellForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, dataCellForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:didAddRowView:forRow:':
    'prefix': 'tableView:didAddRowView:forRow:'
    'body': 'tableView(${1:NSTableView* tableView}, didAddRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'tableView:didClickTableColumn:':
    'prefix': 'tableView:didClickTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, didClickTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:didDragTableColumn:':
    'prefix': 'tableView:didDragTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, didDragTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:didRemoveRowView:forRow:':
    'prefix': 'tableView:didRemoveRowView:forRow:'
    'body': 'tableView(${1:NSTableView* tableView}, didRemoveRowView:${2:NSTableRowView* rowView}, forRow:${3:NSInteger row})'
  'tableView:heightOfRow:':
    'prefix': 'tableView:heightOfRow:'
    'body': 'tableView(${1:NSTableView* tableView}, heightOfRow:${2:NSInteger row})'
  'tableView:isGroupRow:':
    'prefix': 'tableView:isGroupRow:'
    'body': 'tableView(${1:NSTableView* tableView}, isGroupRow:${2:NSInteger row})'
  'tableView:mouseDownInHeaderOfTableColumn:':
    'prefix': 'tableView:mouseDownInHeaderOfTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, mouseDownInHeaderOfTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:nextTypeSelectMatchFromRow:toRow:forString:':
    'prefix': 'tableView:nextTypeSelectMatchFromRow:toRow:forString:'
    'body': 'tableView(${1:NSTableView* tableView}, nextTypeSelectMatchFromRow:${2:NSInteger startRow}, toRow:${3:NSInteger endRow}, forString:${4:NSString* searchString})'
  'tableView:rowViewForRow:':
    'prefix': 'tableView:rowViewForRow:'
    'body': 'tableView(${1:NSTableView* tableView}, rowViewForRow:${2:NSInteger row})'
  'tableView:selectionIndexesForProposedSelection:':
    'prefix': 'tableView:selectionIndexesForProposedSelection:'
    'body': 'tableView(${1:NSTableView* tableView}, selectionIndexesForProposedSelection:${2:NSIndexSet* proposedSelectionIndexes})'
  'tableView:shouldEditTableColumn:row:':
    'prefix': 'tableView:shouldEditTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldEditTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:shouldReorderColumn:toColumn:':
    'prefix': 'tableView:shouldReorderColumn:toColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldReorderColumn:${2:NSInteger columnIndex}, toColumn:${3:NSInteger newColumnIndex})'
  'tableView:shouldSelectRow:':
    'prefix': 'tableView:shouldSelectRow:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldSelectRow:${2:NSInteger row})'
  'tableView:shouldSelectTableColumn:':
    'prefix': 'tableView:shouldSelectTableColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldSelectTableColumn:${2:NSTableColumn* tableColumn})'
  'tableView:shouldShowCellExpansionForTableColumn:row:':
    'prefix': 'tableView:shouldShowCellExpansionForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldShowCellExpansionForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:shouldTrackCell:forTableColumn:row:':
    'prefix': 'tableView:shouldTrackCell:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldTrackCell:${2:NSCell* cell}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableView:shouldTypeSelectForEvent:withCurrentSearchString:':
    'prefix': 'tableView:shouldTypeSelectForEvent:withCurrentSearchString:'
    'body': 'tableView(${1:NSTableView* tableView}, shouldTypeSelectForEvent:${2:NSEvent* event}, withCurrentSearchString:${3:NSString* searchString})'
  'tableView:sizeToFitWidthOfColumn:':
    'prefix': 'tableView:sizeToFitWidthOfColumn:'
    'body': 'tableView(${1:NSTableView* tableView}, sizeToFitWidthOfColumn:${2:NSInteger column})'
  'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:':
    'prefix': 'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'
    'body': 'tableView(${1:NSTableView* tableView}, toolTipForCell:${2:NSCell* cell}, rect:${3:NSRectPointer rect}, tableColumn:${4:NSTableColumn* tableColumn}, row:${5:NSInteger row}, mouseLocation:${6:NSPoint mouseLocation})'
  'tableView:typeSelectStringForTableColumn:row:':
    'prefix': 'tableView:typeSelectStringForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, typeSelectStringForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:viewForTableColumn:row:':
    'prefix': 'tableView:viewForTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, viewForTableColumn:${2:NSTableColumn* tableColumn}, row:${3:NSInteger row})'
  'tableView:willDisplayCell:forTableColumn:row:':
    'prefix': 'tableView:willDisplayCell:forTableColumn:row:'
    'body': 'tableView(${1:NSTableView* tableView}, willDisplayCell:${2:id cell}, forTableColumn:${3:NSTableColumn* tableColumn}, row:${4:NSInteger row})'
  'tableViewColumnDidMove:':
    'prefix': 'tableViewColumnDidMove:'
    'body': 'tableViewColumnDidMove(${1:NSNotification* notification})'
  'tableViewColumnDidResize:':
    'prefix': 'tableViewColumnDidResize:'
    'body': 'tableViewColumnDidResize(${1:NSNotification* notification})'
  'tableViewSelectionDidChange:':
    'prefix': 'tableViewSelectionDidChange:'
    'body': 'tableViewSelectionDidChange(${1:NSNotification* notification})'
  'tableViewSelectionIsChanging:':
    'prefix': 'tableViewSelectionIsChanging:'
    'body': 'tableViewSelectionIsChanging(${1:NSNotification* notification})'
  'attachment':
    'prefix': 'attachment'
    'body': 'attachment()'
  'cellBaselineOffset':
    'prefix': 'cellBaselineOffset'
    'body': 'cellBaselineOffset()'
  'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
    'prefix': 'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'
    'body': 'cellFrameForTextContainer(${1:NSTextContainer* textContainer}, proposedLineFragment:${2:NSRect lineFrag}, glyphPosition:${3:NSPoint position}, characterIndex:${4:NSUInteger charIndex})'
  'cellSize':
    'prefix': 'cellSize'
    'body': 'cellSize()'
  'drawWithFrame:inView:':
    'prefix': 'drawWithFrame:inView:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView})'
  'drawWithFrame:inView:characterIndex:':
    'prefix': 'drawWithFrame:inView:characterIndex:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView}, characterIndex:${3:NSUInteger charIndex})'
  'drawWithFrame:inView:characterIndex:layoutManager:':
    'prefix': 'drawWithFrame:inView:characterIndex:layoutManager:'
    'body': 'drawWithFrame(${1:NSRect cellFrame}, inView:${2:NSView* controlView}, characterIndex:${3:NSUInteger charIndex}, layoutManager:${4:NSLayoutManager* layoutManager})'
  'highlight:withFrame:inView:':
    'prefix': 'highlight:withFrame:inView:'
    'body': 'highlight(${1:BOOL flag}, withFrame:${2:NSRect cellFrame}, inView:${3:NSView* controlView})'
  'setAttachment:':
    'prefix': 'setAttachment:'
    'body': 'setAttachment(${1:NSTextAttachment* anObject})'
  'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:':
    'prefix': 'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'
    'body': 'trackMouse(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, atCharacterIndex:${4:NSUInteger charIndex}, untilMouseUp:${5:BOOL flag})'
  'trackMouse:inRect:ofView:untilMouseUp:':
    'prefix': 'trackMouse:inRect:ofView:untilMouseUp:'
    'body': 'trackMouse(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, untilMouseUp:${4:BOOL flag})'
  'wantsToTrackMouse':
    'prefix': 'wantsToTrackMouse'
    'body': 'wantsToTrackMouse()'
  'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:':
    'prefix': 'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'
    'body': 'wantsToTrackMouseForEvent(${1:NSEvent* theEvent}, inRect:${2:NSRect cellFrame}, ofView:${3:NSView* controlView}, atCharacterIndex:${4:NSUInteger charIndex})'
  'textDidBeginEditing:':
    'prefix': 'textDidBeginEditing:'
    'body': 'textDidBeginEditing(${1:NSNotification* notification})'
  'textDidChange:':
    'prefix': 'textDidChange:'
    'body': 'textDidChange(${1:NSNotification* notification})'
  'textDidEndEditing:':
    'prefix': 'textDidEndEditing:'
    'body': 'textDidEndEditing(${1:NSNotification* notification})'
  'textShouldBeginEditing:':
    'prefix': 'textShouldBeginEditing:'
    'body': 'textShouldBeginEditing(${1:NSText* textObject})'
  'textShouldEndEditing:':
    'prefix': 'textShouldEndEditing:'
    'body': 'textShouldEndEditing(${1:NSText* textObject})'
  'contentView':
    'prefix': 'contentView'
    'body': 'contentView()'
  'findBarView':
    'prefix': 'findBarView'
    'body': 'findBarView()'
  'findBarViewDidChangeHeight':
    'prefix': 'findBarViewDidChangeHeight'
    'body': 'findBarViewDidChangeHeight()'
  'isFindBarVisible':
    'prefix': 'isFindBarVisible'
    'body': 'isFindBarVisible()'
  'setFindBarView:':
    'prefix': 'setFindBarView:'
    'body': 'setFindBarView(${1:NSView* findBarView})'
  'setFindBarVisible:':
    'prefix': 'setFindBarVisible:'
    'body': 'setFindBarVisible(${1:BOOL findBarVisible})'
  'allowsMultipleSelection':
    'prefix': 'allowsMultipleSelection'
    'body': 'allowsMultipleSelection()'
  'contentViewAtIndex:effectiveCharacterRange:':
    'prefix': 'contentViewAtIndex:effectiveCharacterRange:'
    'body': 'contentViewAtIndex(${1:NSUInteger index}, effectiveCharacterRange:${2:NSRangePointer outRange})'
  'didReplaceCharacters':
    'prefix': 'didReplaceCharacters'
    'body': 'didReplaceCharacters()'
  'drawCharactersInRange:forContentView:':
    'prefix': 'drawCharactersInRange:forContentView:'
    'body': 'drawCharactersInRange(${1:NSRange range}, forContentView:${2:NSView* view})'
  'firstSelectedRange':
    'prefix': 'firstSelectedRange'
    'body': 'firstSelectedRange()'
  'isEditable':
    'prefix': 'isEditable'
    'body': 'isEditable()'
  'isSelectable':
    'prefix': 'isSelectable'
    'body': 'isSelectable()'
  'rectsForCharacterRange:':
    'prefix': 'rectsForCharacterRange:'
    'body': 'rectsForCharacterRange(${1:NSRange range})'
  'replaceCharactersInRange:withString:':
    'prefix': 'replaceCharactersInRange:withString:'
    'body': 'replaceCharactersInRange(${1:NSRange range}, withString:${2:NSString* string})'
  'scrollRangeToVisible:':
    'prefix': 'scrollRangeToVisible:'
    'body': 'scrollRangeToVisible(${1:NSRange range})'
  'selectedRanges':
    'prefix': 'selectedRanges'
    'body': 'selectedRanges()'
  'setSelectedRanges:':
    'prefix': 'setSelectedRanges:'
    'body': 'setSelectedRanges(${1:NSArray* selectedRanges})'
  'shouldReplaceCharactersInRanges:withStrings:':
    'prefix': 'shouldReplaceCharactersInRanges:withStrings:'
    'body': 'shouldReplaceCharactersInRanges(${1:NSArray* ranges}, withStrings:${2:NSArray* strings})'
  'string':
    'prefix': 'string'
    'body': 'string()'
  'stringAtIndex:effectiveRange:endsWithSearchBoundary:':
    'prefix': 'stringAtIndex:effectiveRange:endsWithSearchBoundary:'
    'body': 'stringAtIndex(${1:NSUInteger characterIndex}, effectiveRange:${2:NSRangePointer outRange}, endsWithSearchBoundary:${3:BOOL* outFlag})'
  'stringLength':
    'prefix': 'stringLength'
    'body': 'stringLength()'
  'visibleCharacterRanges':
    'prefix': 'visibleCharacterRanges'
    'body': 'visibleCharacterRanges()'
  'attributedSubstringFromRange:':
    'prefix': 'attributedSubstringFromRange:'
    'body': 'attributedSubstringFromRange(${1:NSRange theRange})'
  'characterIndexForPoint:':
    'prefix': 'characterIndexForPoint:'
    'body': 'characterIndexForPoint(${1:NSPoint aPoint})'
  'conversationIdentifier':
    'prefix': 'conversationIdentifier'
    'body': 'conversationIdentifier()'
  'doCommandBySelector:':
    'prefix': 'doCommandBySelector:'
    'body': 'doCommandBySelector(${1:SEL aSelector})'
  'firstRectForCharacterRange:':
    'prefix': 'firstRectForCharacterRange:'
    'body': 'firstRectForCharacterRange(${1:NSRange theRange})'
  'hasMarkedText':
    'prefix': 'hasMarkedText'
    'body': 'hasMarkedText()'
  'insertText:':
    'prefix': 'insertText:'
    'body': 'insertText(${1:id aString})'
  'markedRange':
    'prefix': 'markedRange'
    'body': 'markedRange()'
  'selectedRange':
    'prefix': 'selectedRange'
    'body': 'selectedRange()'
  'setMarkedText:selectedRange:':
    'prefix': 'setMarkedText:selectedRange:'
    'body': 'setMarkedText(${1:id aString}, selectedRange:${2:NSRange selRange})'
  'unmarkText':
    'prefix': 'unmarkText'
    'body': 'unmarkText()'
  'validAttributesForMarkedText':
    'prefix': 'validAttributesForMarkedText'
    'body': 'validAttributesForMarkedText()'
  'attributedString':
    'prefix': 'attributedString'
    'body': 'attributedString()'
  'attributedSubstringForProposedRange:actualRange:':
    'prefix': 'attributedSubstringForProposedRange:actualRange:'
    'body': 'attributedSubstringForProposedRange(${1:NSRange aRange}, actualRange:${2:NSRangePointer actualRange})'
  'baselineDeltaForCharacterAtIndex:':
    'prefix': 'baselineDeltaForCharacterAtIndex:'
    'body': 'baselineDeltaForCharacterAtIndex(${1:NSUInteger anIndex})'
  'characterIndexForPoint:':
    'prefix': 'characterIndexForPoint:'
    'body': 'characterIndexForPoint(${1:NSPoint aPoint})'
  'doCommandBySelector:':
    'prefix': 'doCommandBySelector:'
    'body': 'doCommandBySelector(${1:SEL aSelector})'
  'drawsVerticallyForCharacterAtIndex:':
    'prefix': 'drawsVerticallyForCharacterAtIndex:'
    'body': 'drawsVerticallyForCharacterAtIndex(${1:NSUInteger charIndex})'
  'firstRectForCharacterRange:actualRange:':
    'prefix': 'firstRectForCharacterRange:actualRange:'
    'body': 'firstRectForCharacterRange(${1:NSRange aRange}, actualRange:${2:NSRangePointer actualRange})'
  'fractionOfDistanceThroughGlyphForPoint:':
    'prefix': 'fractionOfDistanceThroughGlyphForPoint:'
    'body': 'fractionOfDistanceThroughGlyphForPoint(${1:NSPoint aPoint})'
  'hasMarkedText':
    'prefix': 'hasMarkedText'
    'body': 'hasMarkedText()'
  'insertText:replacementRange:':
    'prefix': 'insertText:replacementRange:'
    'body': 'insertText(${1:id aString}, replacementRange:${2:NSRange replacementRange})'
  'markedRange':
    'prefix': 'markedRange'
    'body': 'markedRange()'
  'selectedRange':
    'prefix': 'selectedRange'
    'body': 'selectedRange()'
  'setMarkedText:selectedRange:replacementRange:':
    'prefix': 'setMarkedText:selectedRange:replacementRange:'
    'body': 'setMarkedText(${1:id aString}, selectedRange:${2:NSRange selectedRange}, replacementRange:${3:NSRange replacementRange})'
  'unmarkText':
    'prefix': 'unmarkText'
    'body': 'unmarkText()'
  'validAttributesForMarkedText':
    'prefix': 'validAttributesForMarkedText'
    'body': 'validAttributesForMarkedText()'
  'windowLevel':
    'prefix': 'windowLevel'
    'body': 'windowLevel()'
  'layoutOrientation':
    'prefix': 'layoutOrientation'
    'body': 'layoutOrientation()'
  'textStorageDidProcessEditing:':
    'prefix': 'textStorageDidProcessEditing:'
    'body': 'textStorageDidProcessEditing(${1:NSNotification* notification})'
  'textStorageWillProcessEditing:':
    'prefix': 'textStorageWillProcessEditing:'
    'body': 'textStorageWillProcessEditing(${1:NSNotification* notification})'
  'textView:URLForContentsOfTextAttachment:atIndex:':
    'prefix': 'textView:URLForContentsOfTextAttachment:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, URLForContentsOfTextAttachment:${2:NSTextAttachment* textAttachment}, atIndex:${3:NSUInteger charIndex})'
  'textView:clickedOnCell:inRect:':
    'prefix': 'textView:clickedOnCell:inRect:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame})'
  'textView:clickedOnCell:inRect:atIndex:':
    'prefix': 'textView:clickedOnCell:inRect:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame}, atIndex:${4:NSUInteger charIndex})'
  'textView:clickedOnLink:':
    'prefix': 'textView:clickedOnLink:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnLink:${2:id link})'
  'textView:clickedOnLink:atIndex:':
    'prefix': 'textView:clickedOnLink:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, clickedOnLink:${2:id link}, atIndex:${3:NSUInteger charIndex})'
  'textView:completions:forPartialWordRange:indexOfSelectedItem:':
    'prefix': 'textView:completions:forPartialWordRange:indexOfSelectedItem:'
    'body': 'textView(${1:NSTextView* textView}, completions:${2:NSArray* words}, forPartialWordRange:${3:NSRange charRange}, indexOfSelectedItem:${4:NSInteger* index})'
  'textView:didCheckTextInRange:types:options:results:orthography:wordCount:':
    'prefix': 'textView:didCheckTextInRange:types:options:results:orthography:wordCount:'
    'body': 'textView(${1:NSTextView* view}, didCheckTextInRange:${2:NSRange range}, types:${3:NSTextCheckingTypes checkingTypes}, options:${4:NSDictionary* options}, results:${5:NSArray* results}, orthography:${6:NSOrthography* orthography}, wordCount:${7:NSInteger wordCount})'
  'textView:doCommandBySelector:':
    'prefix': 'textView:doCommandBySelector:'
    'body': 'textView(${1:NSTextView* textView}, doCommandBySelector:${2:SEL commandSelector})'
  'textView:doubleClickedOnCell:inRect:':
    'prefix': 'textView:doubleClickedOnCell:inRect:'
    'body': 'textView(${1:NSTextView* textView}, doubleClickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame})'
  'textView:doubleClickedOnCell:inRect:atIndex:':
    'prefix': 'textView:doubleClickedOnCell:inRect:atIndex:'
    'body': 'textView(${1:NSTextView* textView}, doubleClickedOnCell:${2:id cell}, inRect:${3:NSRect cellFrame}, atIndex:${4:NSUInteger charIndex})'
  'textView:draggedCell:inRect:event:':
    'prefix': 'textView:draggedCell:inRect:event:'
    'body': 'textView(${1:NSTextView* view}, draggedCell:${2:id cell}, inRect:${3:NSRect rect}, event:${4:NSEvent* event})'
  'textView:draggedCell:inRect:event:atIndex:':
    'prefix': 'textView:draggedCell:inRect:event:atIndex:'
    'body': 'textView(${1:NSTextView* view}, draggedCell:${2:id cell}, inRect:${3:NSRect rect}, event:${4:NSEvent* event}, atIndex:${5:NSUInteger charIndex})'
  'textView:menu:forEvent:atIndex:':
    'prefix': 'textView:menu:forEvent:atIndex:'
    'body': 'textView(${1:NSTextView* view}, menu:${2:NSMenu* menu}, forEvent:${3:NSEvent* event}, atIndex:${4:NSUInteger charIndex})'
  'textView:shouldChangeTextInRange:replacementString:':
    'prefix': 'textView:shouldChangeTextInRange:replacementString:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTextInRange:${2:NSRange affectedCharRange}, replacementString:${3:NSString* replacementString})'
  'textView:shouldChangeTextInRanges:replacementStrings:':
    'prefix': 'textView:shouldChangeTextInRanges:replacementStrings:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTextInRanges:${2:NSArray* affectedRanges}, replacementStrings:${3:NSArray* replacementStrings})'
  'textView:shouldChangeTypingAttributes:toAttributes:':
    'prefix': 'textView:shouldChangeTypingAttributes:toAttributes:'
    'body': 'textView(${1:NSTextView* textView}, shouldChangeTypingAttributes:${2:NSDictionary* oldTypingAttributes}, toAttributes:${3:NSDictionary* newTypingAttributes})'
  'textView:shouldSetSpellingState:range:':
    'prefix': 'textView:shouldSetSpellingState:range:'
    'body': 'textView(${1:NSTextView* textView}, shouldSetSpellingState:${2:NSInteger value}, range:${3:NSRange affectedCharRange})'
  'textView:willChangeSelectionFromCharacterRange:toCharacterRange:':
    'prefix': 'textView:willChangeSelectionFromCharacterRange:toCharacterRange:'
    'body': 'textView(${1:NSTextView* textView}, willChangeSelectionFromCharacterRange:${2:NSRange oldSelectedCharRange}, toCharacterRange:${3:NSRange newSelectedCharRange})'
  'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:':
    'prefix': 'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'
    'body': 'textView(${1:NSTextView* textView}, willChangeSelectionFromCharacterRanges:${2:NSArray* oldSelectedCharRanges}, toCharacterRanges:${3:NSArray* newSelectedCharRanges})'
  'textView:willCheckTextInRange:options:types:':
    'prefix': 'textView:willCheckTextInRange:options:types:'
    'body': 'textView(${1:NSTextView* view}, willCheckTextInRange:${2:NSRange range}, options:${3:NSDictionary* options}, types:${4:NSTextCheckingTypes* checkingTypes})'
  'textView:willDisplayToolTip:forCharacterAtIndex:':
    'prefix': 'textView:willDisplayToolTip:forCharacterAtIndex:'
    'body': 'textView(${1:NSTextView* textView}, willDisplayToolTip:${2:NSString* tooltip}, forCharacterAtIndex:${3:NSUInteger characterIndex})'
  'textView:willShowSharingServicePicker:forItems:':
    'prefix': 'textView:willShowSharingServicePicker:forItems:'
    'body': 'textView(${1:NSTextView* textView}, willShowSharingServicePicker:${2:NSSharingServicePicker* servicePicker}, forItems:${3:NSArray* items})'
  'textView:writablePasteboardTypesForCell:atIndex:':
    'prefix': 'textView:writablePasteboardTypesForCell:atIndex:'
    'body': 'textView(${1:NSTextView* view}, writablePasteboardTypesForCell:${2:id cell}, atIndex:${3:NSUInteger charIndex})'
  'textView:writeCell:atIndex:toPasteboard:type:':
    'prefix': 'textView:writeCell:atIndex:toPasteboard:type:'
    'body': 'textView(${1:NSTextView* view}, writeCell:${2:id cell}, atIndex:${3:NSUInteger charIndex}, toPasteboard:${4:NSPasteboard* pboard}, type:${5:NSString* type})'
  'textViewDidChangeSelection:':
    'prefix': 'textViewDidChangeSelection:'
    'body': 'textViewDidChangeSelection(${1:NSNotification* notification})'
  'textViewDidChangeTypingAttributes:':
    'prefix': 'textViewDidChangeTypingAttributes:'
    'body': 'textViewDidChangeTypingAttributes(${1:NSNotification* notification})'
  'undoManagerForTextView:':
    'prefix': 'undoManagerForTextView:'
    'body': 'undoManagerForTextView(${1:NSTextView* view})'
  'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:':
    'prefix': 'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, completionsForSubstring:${2:NSString* substring}, indexOfToken:${3:NSInteger tokenIndex}, indexOfSelectedItem:${4:NSInteger* selectedIndex})'
  'tokenFieldCell:displayStringForRepresentedObject:':
    'prefix': 'tokenFieldCell:displayStringForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, displayStringForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:editingStringForRepresentedObject:':
    'prefix': 'tokenFieldCell:editingStringForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, editingStringForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:hasMenuForRepresentedObject:':
    'prefix': 'tokenFieldCell:hasMenuForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, hasMenuForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:menuForRepresentedObject:':
    'prefix': 'tokenFieldCell:menuForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, menuForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:readFromPasteboard:':
    'prefix': 'tokenFieldCell:readFromPasteboard:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, readFromPasteboard:${2:NSPasteboard* pboard})'
  'tokenFieldCell:representedObjectForEditingString:':
    'prefix': 'tokenFieldCell:representedObjectForEditingString:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, representedObjectForEditingString:${2:NSString* editingString})'
  'tokenFieldCell:shouldAddObjects:atIndex:':
    'prefix': 'tokenFieldCell:shouldAddObjects:atIndex:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, shouldAddObjects:${2:NSArray* tokens}, atIndex:${3:NSUInteger index})'
  'tokenFieldCell:styleForRepresentedObject:':
    'prefix': 'tokenFieldCell:styleForRepresentedObject:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, styleForRepresentedObject:${2:id representedObject})'
  'tokenFieldCell:writeRepresentedObjects:toPasteboard:':
    'prefix': 'tokenFieldCell:writeRepresentedObjects:toPasteboard:'
    'body': 'tokenFieldCell(${1:NSTokenFieldCell* tokenFieldCell}, writeRepresentedObjects:${2:NSArray* objects}, toPasteboard:${3:NSPasteboard* pboard})'
  'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:':
    'prefix': 'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, completionsForSubstring:${2:NSString* substring}, indexOfToken:${3:NSInteger tokenIndex}, indexOfSelectedItem:${4:NSInteger* selectedIndex})'
  'tokenField:displayStringForRepresentedObject:':
    'prefix': 'tokenField:displayStringForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, displayStringForRepresentedObject:${2:id representedObject})'
  'tokenField:editingStringForRepresentedObject:':
    'prefix': 'tokenField:editingStringForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, editingStringForRepresentedObject:${2:id representedObject})'
  'tokenField:hasMenuForRepresentedObject:':
    'prefix': 'tokenField:hasMenuForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, hasMenuForRepresentedObject:${2:id representedObject})'
  'tokenField:menuForRepresentedObject:':
    'prefix': 'tokenField:menuForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, menuForRepresentedObject:${2:id representedObject})'
  'tokenField:readFromPasteboard:':
    'prefix': 'tokenField:readFromPasteboard:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, readFromPasteboard:${2:NSPasteboard* pboard})'
  'tokenField:representedObjectForEditingString:':
    'prefix': 'tokenField:representedObjectForEditingString:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, representedObjectForEditingString:${2:NSString* editingString})'
  'tokenField:shouldAddObjects:atIndex:':
    'prefix': 'tokenField:shouldAddObjects:atIndex:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, shouldAddObjects:${2:NSArray* tokens}, atIndex:${3:NSUInteger index})'
  'tokenField:styleForRepresentedObject:':
    'prefix': 'tokenField:styleForRepresentedObject:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, styleForRepresentedObject:${2:id representedObject})'
  'tokenField:writeRepresentedObjects:toPasteboard:':
    'prefix': 'tokenField:writeRepresentedObjects:toPasteboard:'
    'body': 'tokenField(${1:NSTokenField* tokenField}, writeRepresentedObjects:${2:NSArray* objects}, toPasteboard:${3:NSPasteboard* pboard})'
  'view:stringForToolTip:point:userData:':
    'prefix': 'view:stringForToolTip:point:userData:'
    'body': 'view(${1:NSView* view}, stringForToolTip:${2:NSToolTipTag tag}, point:${3:NSPoint point}, userData:${4:void* data})'
  'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:':
    'prefix': 'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'
    'body': 'toolbar(${1:NSToolbar* toolbar}, itemForItemIdentifier:${2:NSString* itemIdentifier}, willBeInsertedIntoToolbar:${3:BOOL flag})'
  'toolbarAllowedItemIdentifiers:':
    'prefix': 'toolbarAllowedItemIdentifiers:'
    'body': 'toolbarAllowedItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarDefaultItemIdentifiers:':
    'prefix': 'toolbarDefaultItemIdentifiers:'
    'body': 'toolbarDefaultItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarDidRemoveItem:':
    'prefix': 'toolbarDidRemoveItem:'
    'body': 'toolbarDidRemoveItem(${1:NSNotification* notification})'
  'toolbarSelectableItemIdentifiers:':
    'prefix': 'toolbarSelectableItemIdentifiers:'
    'body': 'toolbarSelectableItemIdentifiers(${1:NSToolbar* toolbar})'
  'toolbarWillAddItem:':
    'prefix': 'toolbarWillAddItem:'
    'body': 'toolbarWillAddItem(${1:NSNotification* notification})'
  'validateToolbarItem:':
    'prefix': 'validateToolbarItem:'
    'body': 'validateToolbarItem(${1:NSToolbarItem* theItem})'
  'identifier':
    'prefix': 'identifier'
    'body': 'identifier()'
  'setIdentifier:':
    'prefix': 'setIdentifier:'
    'body': 'setIdentifier(${1:NSString* identifier})'
  'localizedTitlesForItem:':
    'prefix': 'localizedTitlesForItem:'
    'body': 'localizedTitlesForItem(${1:id item})'
  'performActionForItem:':
    'prefix': 'performActionForItem:'
    'body': 'performActionForItem(${1:id item})'
  'searchForItemsWithSearchString:resultLimit:matchedItemHandler:':
    'prefix': 'searchForItemsWithSearchString:resultLimit:matchedItemHandler:'
    'body': 'searchForItemsWithSearchString(${1:NSString* searchString}, resultLimit:${2:NSInteger resultLimit}, matchedItemHandler:${3:void (^)(NSArray *) handleMatchedItems})'
  'showAllHelpTopicsForSearchString:':
    'prefix': 'showAllHelpTopicsForSearchString:'
    'body': 'showAllHelpTopicsForSearchString(${1:NSString* searchString})'
  'validateUserInterfaceItem:':
    'prefix': 'validateUserInterfaceItem:'
    'body': 'validateUserInterfaceItem(${1:id anItem})'
  'action':
    'prefix': 'action'
    'body': 'action()'
  'tag':
    'prefix': 'tag'
    'body': 'tag()'
  'customWindowsToEnterFullScreenForWindow:':
    'prefix': 'customWindowsToEnterFullScreenForWindow:'
    'body': 'customWindowsToEnterFullScreenForWindow(${1:NSWindow* window})'
  'customWindowsToEnterFullScreenForWindow:onScreen:':
    'prefix': 'customWindowsToEnterFullScreenForWindow:onScreen:'
    'body': 'customWindowsToEnterFullScreenForWindow(${1:NSWindow* window}, onScreen:${2:NSScreen* screen})'
  'customWindowsToExitFullScreenForWindow:':
    'prefix': 'customWindowsToExitFullScreenForWindow:'
    'body': 'customWindowsToExitFullScreenForWindow(${1:NSWindow* window})'
  'window:didDecodeRestorableState:':
    'prefix': 'window:didDecodeRestorableState:'
    'body': 'window(${1:NSWindow* window}, didDecodeRestorableState:${2:NSCoder* state})'
  'window:shouldDragDocumentWithEvent:from:withPasteboard:':
    'prefix': 'window:shouldDragDocumentWithEvent:from:withPasteboard:'
    'body': 'window(${1:NSWindow* window}, shouldDragDocumentWithEvent:${2:NSEvent* event}, from:${3:NSPoint dragImageLocation}, withPasteboard:${4:NSPasteboard* pasteboard})'
  'window:shouldPopUpDocumentPathMenu:':
    'prefix': 'window:shouldPopUpDocumentPathMenu:'
    'body': 'window(${1:NSWindow* window}, shouldPopUpDocumentPathMenu:${2:NSMenu* menu})'
  'window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:':
    'prefix': 'window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToEnterFullScreenOnScreen:${2:NSScreen* screen}, withDuration:${3:NSTimeInterval duration})'
  'window:startCustomAnimationToEnterFullScreenWithDuration:':
    'prefix': 'window:startCustomAnimationToEnterFullScreenWithDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToEnterFullScreenWithDuration:${2:NSTimeInterval duration})'
  'window:startCustomAnimationToExitFullScreenWithDuration:':
    'prefix': 'window:startCustomAnimationToExitFullScreenWithDuration:'
    'body': 'window(${1:NSWindow* window}, startCustomAnimationToExitFullScreenWithDuration:${2:NSTimeInterval duration})'
  'window:willEncodeRestorableState:':
    'prefix': 'window:willEncodeRestorableState:'
    'body': 'window(${1:NSWindow* window}, willEncodeRestorableState:${2:NSCoder* state})'
  'window:willPositionSheet:usingRect:':
    'prefix': 'window:willPositionSheet:usingRect:'
    'body': 'window(${1:NSWindow* window}, willPositionSheet:${2:NSWindow* sheet}, usingRect:${3:NSRect rect})'
  'window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:':
    'prefix': 'window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'
    'body': 'window(${1:NSWindow* window}, willResizeForVersionBrowserWithMaxPreferredSize:${2:NSSize maxPreferredFrameSize}, maxAllowedSize:${3:NSSize maxAllowedFrameSize})'
  'window:willUseFullScreenContentSize:':
    'prefix': 'window:willUseFullScreenContentSize:'
    'body': 'window(${1:NSWindow* window}, willUseFullScreenContentSize:${2:NSSize proposedSize})'
  'window:willUseFullScreenPresentationOptions:':
    'prefix': 'window:willUseFullScreenPresentationOptions:'
    'body': 'window(${1:NSWindow* window}, willUseFullScreenPresentationOptions:${2:NSApplicationPresentationOptions proposedOptions})'
  'windowDidBecomeKey:':
    'prefix': 'windowDidBecomeKey:'
    'body': 'windowDidBecomeKey(${1:NSNotification* notification})'
  'windowDidBecomeMain:':
    'prefix': 'windowDidBecomeMain:'
    'body': 'windowDidBecomeMain(${1:NSNotification* notification})'
  'windowDidChangeBackingProperties:':
    'prefix': 'windowDidChangeBackingProperties:'
    'body': 'windowDidChangeBackingProperties(${1:NSNotification* notification})'
  'windowDidChangeOcclusionState:':
    'prefix': 'windowDidChangeOcclusionState:'
    'body': 'windowDidChangeOcclusionState(${1:NSNotification* notification})'
  'windowDidChangeScreen:':
    'prefix': 'windowDidChangeScreen:'
    'body': 'windowDidChangeScreen(${1:NSNotification* notification})'
  'windowDidChangeScreenProfile:':
    'prefix': 'windowDidChangeScreenProfile:'
    'body': 'windowDidChangeScreenProfile(${1:NSNotification* notification})'
  'windowDidDeminiaturize:':
    'prefix': 'windowDidDeminiaturize:'
    'body': 'windowDidDeminiaturize(${1:NSNotification* notification})'
  'windowDidEndLiveResize:':
    'prefix': 'windowDidEndLiveResize:'
    'body': 'windowDidEndLiveResize(${1:NSNotification* notification})'
  'windowDidEndSheet:':
    'prefix': 'windowDidEndSheet:'
    'body': 'windowDidEndSheet(${1:NSNotification* notification})'
  'windowDidEnterFullScreen:':
    'prefix': 'windowDidEnterFullScreen:'
    'body': 'windowDidEnterFullScreen(${1:NSNotification* notification})'
  'windowDidEnterVersionBrowser:':
    'prefix': 'windowDidEnterVersionBrowser:'
    'body': 'windowDidEnterVersionBrowser(${1:NSNotification* notification})'
  'windowDidExitFullScreen:':
    'prefix': 'windowDidExitFullScreen:'
    'body': 'windowDidExitFullScreen(${1:NSNotification* notification})'
  'windowDidExitVersionBrowser:':
    'prefix': 'windowDidExitVersionBrowser:'
    'body': 'windowDidExitVersionBrowser(${1:NSNotification* notification})'
  'windowDidExpose:':
    'prefix': 'windowDidExpose:'
    'body': 'windowDidExpose(${1:NSNotification* notification})'
  'windowDidFailToEnterFullScreen:':
    'prefix': 'windowDidFailToEnterFullScreen:'
    'body': 'windowDidFailToEnterFullScreen(${1:NSWindow* window})'
  'windowDidFailToExitFullScreen:':
    'prefix': 'windowDidFailToExitFullScreen:'
    'body': 'windowDidFailToExitFullScreen(${1:NSWindow* window})'
  'windowDidMiniaturize:':
    'prefix': 'windowDidMiniaturize:'
    'body': 'windowDidMiniaturize(${1:NSNotification* notification})'
  'windowDidMove:':
    'prefix': 'windowDidMove:'
    'body': 'windowDidMove(${1:NSNotification* notification})'
  'windowDidResignKey:':
    'prefix': 'windowDidResignKey:'
    'body': 'windowDidResignKey(${1:NSNotification* notification})'
  'windowDidResignMain:':
    'prefix': 'windowDidResignMain:'
    'body': 'windowDidResignMain(${1:NSNotification* notification})'
  'windowDidResize:':
    'prefix': 'windowDidResize:'
    'body': 'windowDidResize(${1:NSNotification* notification})'
  'windowDidUpdate:':
    'prefix': 'windowDidUpdate:'
    'body': 'windowDidUpdate(${1:NSNotification* notification})'
  'windowShouldClose:':
    'prefix': 'windowShouldClose:'
    'body': 'windowShouldClose(${1:id sender})'
  'windowShouldZoom:toFrame:':
    'prefix': 'windowShouldZoom:toFrame:'
    'body': 'windowShouldZoom(${1:NSWindow* window}, toFrame:${2:NSRect newFrame})'
  'windowWillBeginSheet:':
    'prefix': 'windowWillBeginSheet:'
    'body': 'windowWillBeginSheet(${1:NSNotification* notification})'
  'windowWillClose:':
    'prefix': 'windowWillClose:'
    'body': 'windowWillClose(${1:NSNotification* notification})'
  'windowWillEnterFullScreen:':
    'prefix': 'windowWillEnterFullScreen:'
    'body': 'windowWillEnterFullScreen(${1:NSNotification* notification})'
  'windowWillEnterVersionBrowser:':
    'prefix': 'windowWillEnterVersionBrowser:'
    'body': 'windowWillEnterVersionBrowser(${1:NSNotification* notification})'
  'windowWillExitFullScreen:':
    'prefix': 'windowWillExitFullScreen:'
    'body': 'windowWillExitFullScreen(${1:NSNotification* notification})'
  'windowWillExitVersionBrowser:':
    'prefix': 'windowWillExitVersionBrowser:'
    'body': 'windowWillExitVersionBrowser(${1:NSNotification* notification})'
  'windowWillMiniaturize:':
    'prefix': 'windowWillMiniaturize:'
    'body': 'windowWillMiniaturize(${1:NSNotification* notification})'
  'windowWillMove:':
    'prefix': 'windowWillMove:'
    'body': 'windowWillMove(${1:NSNotification* notification})'
  'windowWillResize:toSize:':
    'prefix': 'windowWillResize:toSize:'
    'body': 'windowWillResize(${1:NSWindow* sender}, toSize:${2:NSSize frameSize})'
  'windowWillReturnFieldEditor:toObject:':
    'prefix': 'windowWillReturnFieldEditor:toObject:'
    'body': 'windowWillReturnFieldEditor(${1:NSWindow* sender}, toObject:${2:id client})'
  'windowWillReturnUndoManager:':
    'prefix': 'windowWillReturnUndoManager:'
    'body': 'windowWillReturnUndoManager(${1:NSWindow* window})'
  'windowWillStartLiveResize:':
    'prefix': 'windowWillStartLiveResize:'
    'body': 'windowWillStartLiveResize(${1:NSNotification* notification})'
  'windowWillUseStandardFrame:defaultFrame:':
    'prefix': 'windowWillUseStandardFrame:defaultFrame:'
    'body': 'windowWillUseStandardFrame(${1:NSWindow* window}, defaultFrame:${2:NSRect newFrame})'
  'NSWindowRestoration.restoreWindowWithIdentifier:state:completionHandler:':
    'prefix': 'restoreWindowWithIdentifier:state:completionHandler:'
    'body': 'restoreWindowWithIdentifier(${1:NSString* identifier}, state:${2:NSCoder* state}, completionHandler:${3:void (^)(NSWindow *, NSError *) completionHandler})'
