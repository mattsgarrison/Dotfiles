(function() {
  var $;

  $ = require('jquery');

  module.exports = {
    activate: function(state) {
      atom.workspaceView.command("layout-manager:maximize-active-pane", (function(_this) {
        return function() {
          return _this.maximize();
        };
      })(this));
      atom.workspaceView.command("layout-manager:enlarge-active-pane", (function(_this) {
        return function() {
          return _this.enlarge();
        };
      })(this));
      atom.workspaceView.command("layout-manager:shrink-active-pane", (function(_this) {
        return function() {
          return _this.shrink();
        };
      })(this));
      atom.workspaceView.command("layout-manager:move-pane-right", (function(_this) {
        return function() {
          return _this.moveRight();
        };
      })(this));
      atom.workspaceView.command("layout-manager:move-pane-left", (function(_this) {
        return function() {
          return _this.moveLeft();
        };
      })(this));
      atom.workspaceView.command("layout-manager:move-pane-down", (function(_this) {
        return function() {
          return _this.moveDown();
        };
      })(this));
      atom.workspaceView.command("layout-manager:move-pane-up", (function(_this) {
        return function() {
          return _this.moveUp();
        };
      })(this));
      atom.workspaceView.command("layout-manager:move-pane-next", (function(_this) {
        return function() {
          return _this.moveNext();
        };
      })(this));
      return atom.workspaceView.command("layout-manager:move-pane-previous", (function(_this) {
        return function() {
          return _this.movePrevious();
        };
      })(this));
    },
    maximize: function() {
      return $('html').toggleClass('maximize-pane-on');
    },
    enlarge: function() {
      var flex;
      flex = this.getFlex();
      flex.grow *= 1.1;
      flex.shrink *= 1.1;
      return this.setFlex(flex);
    },
    shrink: function() {
      var flex;
      flex = this.getFlex();
      flex.shrink /= 1.1;
      flex.grow /= 1.1;
      return this.setFlex(flex);
    },
    moveRight: function() {
      return this.move('horizontal', +1);
    },
    moveLeft: function() {
      return this.move('horizontal', -1);
    },
    moveUp: function() {
      return this.move('vertical', -1);
    },
    moveDown: function() {
      return this.move('vertical', +1);
    },
    moveNext: function() {
      return this.moveOrder(+1);
    },
    movePrevious: function() {
      return this.moveOrder(-1);
    },
    moveOrder: function(delta) {
      var pane, target;
      pane = atom.workspace.getActivePane();
      if (delta > 0) {
        atom.workspace.activateNextPane();
      } else {
        atom.workspace.activatePreviousPane();
      }
      target = atom.workspace.getActivePane();
      return this.swapEditor(pane, target);
    },
    move: function(orientation, delta) {
      var axis, child, pane, target, _ref;
      pane = atom.workspace.getActivePane();
      _ref = this.getAxis(pane, orientation), axis = _ref[0], child = _ref[1];
      if (axis != null) {
        target = this.getRelativePane(axis, child, delta);
      }
      if (target != null) {
        return this.swapEditor(pane, target);
      }
    },
    swapEditor: function(source, target) {
      var editor;
      editor = source.getActiveItem();
      source.removeItem(editor);
      target.addItem(editor);
      target.activateItem(editor);
      return target.activate();
    },
    getAxis: function(pane, orientation) {
      var axis, child;
      axis = pane.parent;
      child = pane;
      while (true) {
        if (axis.constructor.name !== 'PaneAxis') {
          return;
        }
        if (axis.orientation === orientation) {
          break;
        }
        child = axis;
        axis = axis.parent;
      }
      return [axis, child];
    },
    getRelativePane: function(axis, source, delta) {
      var position, target;
      position = axis.children.indexOf(source);
      target = position + delta;
      if (!(target < axis.children.length)) {
        return;
      }
      return axis.children[target].getPanes()[0];
    },
    getFlex: function() {
      var basis, grow, shrink, _ref;
      _ref = $('.pane.active').css('-webkit-flex').split(' '), grow = _ref[0], shrink = _ref[1], basis = _ref[2];
      return {
        grow: grow,
        shrink: shrink,
        basis: basis
      };
    },
    setFlex: function(_arg) {
      var basis, flex, grow, shrink;
      grow = _arg.grow, shrink = _arg.shrink, basis = _arg.basis;
      flex = [grow, shrink, basis].join(' ');
      return $('.pane.active').css('-webkit-flex', flex);
    },
    deactivate: function() {},
    serialize: function() {}
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLENBQUE7O0FBQUEsRUFBQSxDQUFBLEdBQUksT0FBQSxDQUFRLFFBQVIsQ0FBSixDQUFBOztBQUFBLEVBRUEsTUFBTSxDQUFDLE9BQVAsR0FDRTtBQUFBLElBQUEsUUFBQSxFQUFVLFNBQUMsS0FBRCxHQUFBO0FBQ1IsTUFBQSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQW5CLENBQTJCLHFDQUEzQixFQUFrRSxDQUFBLFNBQUEsS0FBQSxHQUFBO2VBQUEsU0FBQSxHQUFBO2lCQUFHLEtBQUMsQ0FBQSxRQUFELENBQUEsRUFBSDtRQUFBLEVBQUE7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQWxFLENBQUEsQ0FBQTtBQUFBLE1BQ0EsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFuQixDQUEyQixvQ0FBM0IsRUFBaUUsQ0FBQSxTQUFBLEtBQUEsR0FBQTtlQUFBLFNBQUEsR0FBQTtpQkFBRyxLQUFDLENBQUEsT0FBRCxDQUFBLEVBQUg7UUFBQSxFQUFBO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFqRSxDQURBLENBQUE7QUFBQSxNQUVBLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBbkIsQ0FBMkIsbUNBQTNCLEVBQWdFLENBQUEsU0FBQSxLQUFBLEdBQUE7ZUFBQSxTQUFBLEdBQUE7aUJBQUcsS0FBQyxDQUFBLE1BQUQsQ0FBQSxFQUFIO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBaEUsQ0FGQSxDQUFBO0FBQUEsTUFHQSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQW5CLENBQTJCLGdDQUEzQixFQUE2RCxDQUFBLFNBQUEsS0FBQSxHQUFBO2VBQUEsU0FBQSxHQUFBO2lCQUFHLEtBQUMsQ0FBQSxTQUFELENBQUEsRUFBSDtRQUFBLEVBQUE7TUFBQSxDQUFBLENB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
//# sourceURL=/Users/mattgarrison/Dotfiles/atom/packages/layout-manager/lib/layout-manager.coffee