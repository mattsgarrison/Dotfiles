{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1208,"height":774},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test","buffers":[{"text":"{\n  \"name\": \"ruby-test\",\n  \"author\": {\n    \"name\": \"Moxley Stratton\"\n  },\n  \"homepage\": \"https://github.com/moxley/atom-ruby-test\",\n  \"bugs\": {\n    \"url\": \"https://github.com/moxley/atom-ruby-test/issues\"\n  },\n  \"main\": \"./lib/ruby-test\",\n  \"version\": \"0.7.0\",\n  \"description\": \"Run Ruby tests, Rspec examples, and Cucumber features from Atom\",\n  \"activationEvents\": [\n    \"ruby-test:toggle\",\n    \"ruby-test:test-file\",\n    \"ruby-test:test-single\",\n    \"ruby-test:test-previous\",\n    \"ruby-test:test-all\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/moxley/atom-ruby-test\"\n  },\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"atom\": \">0.50.0\"\n  },\n  \"dependencies\": {\n    \"underscore-plus\": \"^1.0.6\",\n    \"ansi-to-html\": \"^0.2\"\n  },\n  \"keywords\": [\n    \"ruby\",\n    \"test\",\n    \"rspec\",\n    \"spec\",\n    \"cucumber\"\n  ],\n  \"readme\": \"# ruby-test package\\n\\nRun Ruby tests, Rspec examples, and Cucumber features from Atom,\\nquickly and easily.\\n\\n![Running tests is quick and easy](http://cl.ly/image/300n2g101z0y/ruby-test6.gif)\\n\\n## Install\\n\\nIn Atom's Settings, go to Packages, search for \\\"Ruby Test\\\".\\nClick the `Install` button.\\n\\n## Configure\\n\\n![Ruby Test Settings view](http://cl.ly/image/1l3H0g1C1J3g/ruby-test-settings.png)\\n\\n## Run\\n\\nOpen the test file you want to run, then issue one of the following:\\n\\n* `cmd-ctrl-y` - Run all the test files\\n* `cmd-ctrl-t` - Run the current test file\\n* `cmd-ctrl-r` - Run the test at the current line in test file\\n* `cmd-ctrl-e` - Re-run the previous test (doesn't need to have the test file active)\\n* `cmd-ctrl-x` - Show/hide the test panel\\n\\n## Features\\n\\n* Run all the tests in the project\\n* Run the tests for current test file\\n* Run single test at cursor\\n* Run previous test\\n* Configure the shell commands that run the tests\\n* Supports Ruby managers, like `rvm` and `rbenv`\\n* Supports TestUnit, Rspec, and Cucumber\\n\\n## How To\\n\\n### Zeus + RSpec color output\\n\\n* In rspec_helper.rb, add `config.tty = true` to the\\n  `RSpec.configure do |config| ...` block\\n\\n## Contributing\\n\\nAny of the following are appreciated:\\n\\n* [Submit a Pull Request](https://github.com/moxley/atom-ruby-test/pulls)\\n* [Submit an Issue](https://github.com/moxley/atom-ruby-test/issues)\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"_id\": \"ruby-test@0.7.0\",\n  \"dist\": {\n    \"shasum\": \"8e25d0ecb99a42498c97cd74ea86df08c3b05545\"\n  },\n  \"_resolved\": \"/var/folders/wz/f6fydm714hqc77v48hsnkh7r0000gn/T/d-114629-70789-1sj8kdh/package.tgz\",\n  \"_from\": \"/var/folders/wz/f6fydm714hqc77v48hsnkh7r0000gn/T/d-114629-70789-1sj8kdh/package.tgz\"\n}\n","markers":{"markers":{"1":{"id":1,"range":[[30,4],[30,4]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/package.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b5375b2d9c307192bfbbfa121f26985b3cddc803","deserializer":"TextBuffer"},{"text":"# See https://atom.io/docs/latest/creating-a-package#menus for more details\n'context-menu':\n  '.overlayer':\n      'Show ruby-test': 'ruby-test:toggle'\n      'Run ruby-test for file': 'ruby-test:test-file'\n      'Run ruby-test at line': 'ruby-test:test-single'\n\n'menu': [\n  {\n    'label': 'Packages'\n    'submenu': [\n      'label': 'Ruby Test'\n      'submenu': [\n        { 'label': 'Toggle Panel', 'command': 'ruby-test:toggle' }\n        { 'label': 'Run test file', 'command': 'ruby-test:test-file' }\n        { 'label': 'Run single test', 'command': 'ruby-test:test-single' }\n      ]\n    ]\n  }\n]\n","markers":{"markers":{"1":{"id":1,"range":[[13,24],[13,24]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":35,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/menus/ruby-test.cson","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8f2c1e40397030a8365622ce68884e3d7497153f","deserializer":"TextBuffer"},{"text":"ShellRunner = require './shell-runner'\nSourceInfo = require './source-info'\n\nmodule.exports =\n  class TestRunner\n    constructor: (params) ->\n      @initialize params\n\n    initialize: (params) ->\n      @params = params\n      @testParams = new SourceInfo()\n\n    run: ->\n      shell = new ShellRunner(@shellRunnerParams())\n      @params.setTestInfo(@command())\n      shell.run()\n\n    shellRunnerParams: ->\n      write:   @params.write\n      exit:    @params.exit\n      command: @command\n      cwd:     @testParams.cwd\n\n    command: =>\n      cmd = if @params.testScope == \"single\"\n          @testParams.testSingleCommand()\n        else if @params.testScope == \"all\"\n          @testParams.testAllCommand()\n        else\n          @testParams.testFileCommand()\n      cmd.replace('{relative_path}', @testParams.activeFile()).\n          replace('{line_number}', @testParams.currentLine())\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":39,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/test-runner.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c45950aa3a8eb7440816e98287dff9cd4b87306c","deserializer":"TextBuffer"},{"text":"fs = require('fs')\n\nmodule.exports =\n  class SourceInfo\n    frameworkLookup:\n      test:    'test'\n      spec:    'rspec'\n      feature: 'cucumber'\n\n    cwd: ->\n      atom.project.getPath()\n\n    testFileCommand: ->\n      atom.config.get(\"ruby-test.#{@testFramework()}FileCommand\")\n\n    testAllCommand: ->\n      configName = \"ruby-test.#{@testFramework()}AllCommand\"\n      atom.config.get(\"ruby-test.#{@testFramework()}AllCommand\")\n\n    testSingleCommand: ->\n      atom.config.get(\"ruby-test.#{@testFramework()}SingleCommand\")\n\n    activeFile: ->\n      @_activeFile ||= atom.project.relativize(atom.workspace.getActiveEditor().buffer.file.path)\n\n    currentLine: ->\n      @_currentLine ||= unless @_currentLine\n        editor = atom.workspace.getActiveEditor()\n        cursor = editor.getCursor()\n        cursor.getScreenRow() + 1\n\n    testFramework: ->\n      @_testFramework ||= unless @_testFramework\n        (t = @fileType()) and @frameworkLookup[t] or\n        @projectType()\n\n    fileType: ->\n      @_fileType ||= if matches = @activeFile().match(/_(test|spec)\\.rb$/)\n        matches[1]\n      else if matches = @activeFile().match(/\\.(feature)$/)\n        matches[1]\n\n    projectType: ->\n      if fs.existsSync(atom.project.path + '/test')\n        'test'\n      else if fs.existsSync(atom.project.path + '/spec')\n        'rspec'\n      else if fs.existsSync(atom.project.path + '/feature')\n        'cucumber'\n      else\n        null\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":44,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/source-info.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f03916a06fe0c6506877dbf482ab8a67577f6f28","deserializer":"TextBuffer"},{"text":"ChildProcess = require 'child_process'\n\nmodule.exports =\n  class ShellRunner\n    constructor: (params) ->\n      @initialize(params)\n\n    initialize: (params) ->\n      @params = params || throw \"Missing ::params argument\"\n      @write = params.write || throw \"Missing ::write parameter\"\n      @write = (data) => params.write \"#{data}\"\n      @exit = params.exit || throw \"Missing ::exit parameter\"\n      @command = params.command || throw \"Missing ::command parameter\"\n\n    run: ->\n      p = @newProcess()\n      fullCommand = \"cd #{@params.cwd()} && #{@params.command()}; exit\\n\"\n      p.stdin.write fullCommand\n\n    newProcess: ->\n      spawn = ChildProcess.spawn\n      terminal = spawn('zsh', ['-l', '-i'])\n      terminal.on 'close', =>\n        @params.exit()\n      terminal.stdout.on 'data', @write\n      terminal.stderr.on 'data', @write\n      terminal\n","markers":{"markers":{"1":{"id":1,"range":[[21,25],[21,25]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":48,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[21,37],[21,40]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[21,36],[21,36]],"newRange":[[21,36],[21,37]],"oldText":"","newText":",","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,37],[21,37]],"newRange":[[21,37],[21,38]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,38],[21,38]],"newRange":[[21,38],[21,40]],"oldText":"","newText":"''","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,39],[21,39]],"newRange":[[21,39],[21,40]],"oldText":"","newText":"i","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,39],[21,39]],"newRange":[[21,39],[21,40]],"oldText":"","newText":"-","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[21,26],[21,26]]},"newParams":{"reversed":true,"range":[[21,25],[21,26]]},"deserializer":"MarkerPatch"},{"oldRange":[[21,25],[21,26]],"newRange":[[21,25],[21,25]],"oldText":"a","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[21,25],[21,25]]},"newParams":{"range":[[21,24],[21,25]]},"deserializer":"MarkerPatch"},{"oldRange":[[21,24],[21,25]],"newRange":[[21,24],[21,24]],"oldText":"b","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,24],[21,24]],"newRange":[[21,24],[21,25]],"oldText":"","newText":"z","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/shell-runner.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4d12dbf2800e025dcdcad8f318918e2d1440c060","deserializer":"TextBuffer"},{"text":"RubyTestView = require './ruby-test-view'\n\nmodule.exports =\n  configDefaults:\n    testAllCommand: \"bundle exec ruby -I test test\"\n    testFileCommand: \"bundle exec ruby -I test {relative_path}\"\n    testSingleCommand: \"bundle exec ruby -I test {relative_path}:{line_number}\"\n    rspecAllCommand: \"bundle exec rspec --tty spec\"\n    rspecFileCommand: \"bundle exec rspec --tty {relative_path}\"\n    rspecSingleCommand: \"bundle exec rspec --tty {relative_path}:{line_number}\"\n    cucumberAllCommand: \"bundle exec cucumber features\"\n    cucumberFileCommand: \"bundle exec cucumber {relative_path}\"\n    cucumberSingleCommand: \"bundle exec cucumber {relative_path}:{line_number}\"\n\n  rubyTestView: null\n\n  activate: (state) ->\n    atom.config.setDefaults \"ruby-test\", @configDefaults\n    @rubyTestView = new RubyTestView(state.rubyTestViewState)\n\n  deactivate: ->\n    @rubyTestView.destroy()\n\n  serialize: ->\n    rubyTestViewState: @rubyTestView.serialize()\n","markers":{"markers":{"1":{"id":1,"range":[[17,47],[17,47]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":84,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/ruby-test.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"28b18b63bbfe7a91e48f25724ef702c8b1b582a0","deserializer":"TextBuffer"},{"text":"# Keybindings require three things to be fully defined: A selector that is\n# matched against the focused element, the keystroke and the command to\n# execute.\n#\n# Below is a basic keybinding which registers on all platforms by applying to\n# the root workspace element.\n\n# For more detailed documentation see\n# https://atom.io/docs/latest/advanced/keymaps\n'.workspace':\n  'cmd-ctrl-x': 'ruby-test:toggle'\n  'cmd-ctrl-y': 'ruby-test:test-all'\n  'cmd-ctrl-t': 'ruby-test:test-file'\n  'cmd-ctrl-r': 'ruby-test:test-single'\n  'cmd-ctrl-e': 'ruby-test:test-previous'\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":120},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/keymaps/ruby-test.cson","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"db078ee07f667432866be29b89aa0f6f91e70621","deserializer":"TextBuffer"},{"text":"{$} = require 'atom'\n\nmodule.exports =\n  class ResizeHandle\n    constructor: (view) ->\n      @view = view\n      @view.on 'dblclick', '.ruby-test-resize-handle', @resizeToFitContent\n      @view.on 'mousedown', '.ruby-test-resize-handle', @resizeStarted\n      @panelBody = @view.find('.panel-body')\n      @resultsEl = @view.results\n\n    resizeToFitContent: =>\n      @panelBody.height(1)\n      @panelBody.height(Math.max(@resultsEl.outerHeight(), 40))\n\n    resizeTreeView: (_arg) =>\n      workspaceHeight = $('.workspace').outerHeight()\n      statusBarHeight = $('.status-bar').outerHeight()\n      testBarHeight = $('.ruby-test .panel-heading').outerHeight()\n      @panelBody.height(workspaceHeight - _arg.pageY - statusBarHeight - testBarHeight - 28)\n\n    resizeStarted: =>\n      $(document.body).on 'mousemove', @resizeTreeView\n      $(document.body).on 'mouseup', @resizeStopped\n\n    resizeStopped: =>\n      $(document.body).off('mousemove', @resizeTreeView)\n      $(document.body).off('mouseup', @resizeStopped)\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":124},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/resize-handle.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d070e893562f4391e5b15ee0503ecbbfdb3bf939","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrap":false,"editorWidthInChars":null,"scrollTop":285,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/package.json","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":35,"softTabs":true,"displayBuffer":{"id":36,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/menus/ruby-test.cson","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":44,"softTabs":true,"displayBuffer":{"id":45,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/source-info.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":48,"softTabs":true,"displayBuffer":{"id":49,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/shell-runner.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":84,"softTabs":true,"displayBuffer":{"id":85,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/ruby-test.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":120,"softTabs":true,"displayBuffer":{"id":121,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/keymaps/ruby-test.cson","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":124,"softTabs":true,"displayBuffer":{"id":125,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/resize-handle.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":39,"softTabs":true,"displayBuffer":{"id":40,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/test-runner.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/shell-runner.coffee","focused":false,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-json","language-coffee-script"],"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"core:move-up":{"count":5,"name":"core:move-up","lastRun":1406651259838},"tree-view:expand-directory":{"count":1,"name":"tree-view:expand-directory","lastRun":1406651260051},"core:move-down":{"count":1,"name":"core:move-down","lastRun":1406651260510},"core:select-right":{"count":8,"name":"core:select-right","lastRun":1406651305072},"core:move-left":{"count":4,"name":"core:move-left","lastRun":1406652774278},"find-and-replace:select-next":{"count":20,"name":"find-and-replace:select-next","lastRun":1406651696547},"core:move-right":{"count":7,"name":"core:move-right","lastRun":1406652878922},"core:copy":{"count":6,"name":"core:copy","lastRun":1406651322816},"editor:select-to-end-of-line":{"count":5,"name":"editor:select-to-end-of-line","lastRun":1406651322264},"core:select-left":{"count":9,"name":"core:select-left","lastRun":1406651694469},"editor:select-to-end-of-word":{"count":1,"name":"editor:select-to-end-of-word","lastRun":1406651303761},"core:undo":{"count":1,"name":"core:undo","lastRun":1406651335816},"core:close":{"count":3,"name":"core:close","lastRun":1406651341555},"core:save":{"count":3,"name":"core:save","lastRun":1406652879835},"core:backspace":{"count":2,"name":"core:backspace","lastRun":1406652879429}}},"find-and-replace":{},"fuzzy-finder":{"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/package.json":1406651241637,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/menus/ruby-test.cson":1406651256036,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/source-info.coffee":1406651257047,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/shell-runner.coffee":1406652224641,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/ruby-test.coffee":1406652216602,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/keymaps/ruby-test.cson":1406652214188,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/resize-handle.coffee":1406652215075,"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/test-runner.coffee":1406651253932},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":688623},"tree-view":{"directoryExpansionStates":{"keymaps":{},"lib":{},"menus":{},"node_modules":{},"spec":{}},"selectedPath":"/Users/mattgarrison/Dotfiles/atom/packages/ruby-test/lib/shell-runner.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}