{"mode":"editor","version":"0.75.0","windowDimensions":{"x":392,"y":22,"width":1895,"height":1414},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mattgarrison/Projects/forks/RubyMotion","buffers":[{"text":"# Copyright (c) 2012, HipByte SPRL and contributors\n# All rights reserved.\n# \n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n# \n# 1. Redistributions of source code must retain the above copyright notice, this\n#    list of conditions and the following disclaimer.\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n#    this list of conditions and the following disclaimer in the documentation\n#    and/or other materials provided with the distribution.\n# \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nrequire 'motion/project/template'\n\nmodule Motion; module Project\n  class App\n    VERBOSE =\n      begin\n        if Rake.send(:verbose) != true\n          Rake.send(:verbose, false)\n          false\n        else\n          true\n        end\n      rescue\n        true\n      end\n\n    class << self\n      attr_accessor :template\n\n      def config_mode\n        @config_mode ||= begin\n          if mode = ENV['mode']\n            case mode = mode.intern\n              when :development, :release\n                mode\n              else\n                fail \"Invalid value for build mode `#{mode}' (must be :development or :release)\"\n            end\n          else\n            :development\n          end\n        end\n      end\n\n      def config_without_setup\n        @configs ||= {}\n        @configs[config_mode] ||= Motion::Project::Config.make(@template, '.', config_mode)\n      end\n\n      def config\n        config_without_setup.setup\n      end\n\n      def builder\n        @builder ||= Motion::Project::Builder.new\n      end\n\n      def setup(&block)\n        config.setup_blocks << block\n      end\n\n      def build(platform, opts={})\n        builder.build(config, platform, opts)\n      end\n\n      def archive\n        builder.archive(config)\n      end\n\n      def codesign(platform)\n        builder.codesign(config, platform)\n      end\n\n      def create(app_name, template_name=:ios)\n        Motion::Project::Template.new(app_name, template_name).generate\n      end\n\n      def log(what, msg)\n        require 'thread'\n        @print_mutex ||= Mutex.new\n        # Because this method can be called concurrently, we don't want to mess any output.\n        @print_mutex.synchronize do\n          what = \"\\e[1m\" + what.rjust(10) + \"\\e[0m\" # bold\n          $stderr.puts what + ' ' + msg \n        end\n      end\n\n      def warn(msg)\n        log 'WARNING!', msg\n      end\n\n      def fail(msg)\n        log 'ERROR!', msg\n        exit 1\n      end\n\n      def info(what, msg)\n        log what, msg unless VERBOSE\n      end\n    end\n  end\nend; end\n","markers":{"markers":{"1":{"id":1,"range":[[82,10],[82,18]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":23,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/app.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a917cbfcc72d2cf783966f412986b045a39e61b6","deserializer":"TextBuffer"},{"text":"# Copyright (c) 2012, HipByte SPRL and contributors\n# All rights reserved.\n# \n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n# \n# 1. Redistributions of source code must retain the above copyright notice, this\n#    list of conditions and the following disclaimer.\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n#    this list of conditions and the following disclaimer in the documentation\n#    and/or other materials provided with the distribution.\n# \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nrequire 'motion/project/app'\n\nApp = Motion::Project::App\nApp.template = :ios\n\nrequire 'motion/project'\nrequire 'motion/project/template/ios/config'\nrequire 'motion/project/template/ios/builder'\n\ndesc \"Build the project, then run the simulator\"\ntask :default => :simulator\n\ndesc \"Build everything\"\ntask :build => ['build:simulator', 'build:device']\n\nnamespace :build do\n  desc \"Build the simulator version\"\n  task :simulator do\n    App.build('iPhoneSimulator')\n  end\n\n  desc \"Build the device version\"\n  task :device do\n    App.build('iPhoneOS')\n    App.codesign('iPhoneOS')\n  end\nend\n\ndesc \"Run the simulator\"\ntask :simulator do\n  unless ENV[\"skip_build\"]\n    Rake::Task[\"build:simulator\"].invoke\n  end\n  app = App.config.app_bundle('iPhoneSimulator')\n  target = ENV['target'] || App.config.sdk_version\n\n  if ENV['TMUX']\n    tmux_default_command = `tmux show-options -g default-command`.strip\n    unless tmux_default_command.include?(\"reattach-to-user-namespace\")\n      App.warn(<<END\n\n    It appears you are using tmux without 'reattach-to-user-namespace', the simulator might not work properly. You can either disable tmux or run the following commands:\n\n      $ brew install reattach-to-user-namespace\n      $ echo 'set-option -g default-command \"reattach-to-user-namespace -l $SHELL\"' >> ~/.tmux.conf\n\nEND\n      )\n    end\n  end\n\n  # Cleanup the simulator application sandbox, to avoid having old resource files there.\n  if ENV['clean']\n    sim_apps = File.expand_path(\"~/Library/Application Support/iPhone Simulator/#{target}/Applications\")\n    Dir.glob(\"#{sim_apps}/**/*.app\").each do |app_bundle|\n      if File.basename(app_bundle) == File.basename(app)\n        rm_rf File.dirname(app_bundle)\n        break\n      end  \n    end\n  end\n\n  # Prepare the device family.\n  family_int =\n    if family = ENV['device_family']\n      App.config.device_family_int(family.downcase.intern)\n    else\n      App.config.device_family_ints[0]\n    end\n  retina = ENV['retina']\n\n  # Configure the SimulateDevice variable (the only way to specify if we want to run in retina mode or not).\n  simulate_device = App.config.device_family_string(family_int, target, retina)\n  default_simulator = `/usr/bin/defaults read com.apple.iphonesimulator \"SimulateDevice\"`.strip\n  if default_simulator != simulate_device && default_simulator != \"'#{simulate_device}'\"\n    system(\"/usr/bin/killall \\\"iPhone Simulator\\\" >& /dev/null\")\n    system(\"/usr/bin/defaults write com.apple.iphonesimulator \\\"SimulateDevice\\\" \\\"'#{simulate_device}'\\\"\")\n  end\n\n  # Launch the simulator.\n  xcode = App.config.xcode_dir\n  env = \"DYLD_FRAMEWORK_PATH=\\\"#{xcode}/../Frameworks\\\":\\\"#{xcode}/../OtherFrameworks\\\"\"\n  env << ' SIM_SPEC_MODE=1' if App.config.spec_mode\n  sim = File.join(App.config.bindir, 'ios/sim')\n  debug = (ENV['debug'] ? 1 : (App.config.spec_mode ? '0' : '2'))\n  app_args = (ENV['args'] or '')\n  App.info 'Simulate', app\n  at_exit { system(\"stty echo\") } if $stdout.tty? # Just in case the simulator launcher crashes and leaves the terminal without echo.\n  sh \"#{env} #{sim} #{debug} #{family_int} #{target} \\\"#{xcode}\\\" \\\"#{app}\\\" #{app_args}\"\nend\n\ndesc \"Create an .ipa archive\"\ntask :archive => ['build:device'] do\n  App.archive\nend\n\nnamespace :archive do\n  desc \"Create an .ipa archive for distribution (AppStore)\"\n  task :distribution do\n    App.config_without_setup.build_mode = :release\n    App.config_without_setup.distribution_mode = true\n    Rake::Task[\"archive\"].invoke\n  end\nend\n\ndesc \"Same as 'spec:simulator'\"\ntask :spec => ['spec:simulator']\n\nnamespace :spec do\n  desc \"Run the test/spec suite on the simulator\"\n  task :simulator do\n    App.config_without_setup.spec_mode = true\n    Rake::Task[\"simulator\"].invoke\n  end\n\n  desc \"Run the test/spec suite on the device\"\n  task :device do\n    App.config_without_setup.spec_mode = true\n    ENV['debug'] ||= '1'\n    Rake::Task[\"device\"].invoke\n  end\nend\n\ndesc \"Deploy on the device\"\ntask :device => :archive do\n  App.info 'Deploy', App.config.archive\n  device_id = (ENV['id'] or App.config.device_id)\n  unless App.config.provisioned_devices.include?(device_id)\n    App.fail \"Device ID `#{device_id}' not provisioned in profile `#{App.config.provisioning_profile}'\"\n  end\n  env = \"XCODE_DIR=\\\"#{App.config.xcode_dir}\\\"\"\n  deploy = File.join(App.config.bindir, 'ios/deploy')\n  flags = Rake.application.options.trace ? '-d' : ''\n  sh \"#{env} #{deploy} #{flags} \\\"#{device_id}\\\" \\\"#{App.config.archive}\\\"\"\nend\n\ndesc \"Create a .a static library\"\ntask :static do\n  libs = %w{iPhoneSimulator iPhoneOS}.map do |platform|\n    '\"' + App.build(platform, :static => true) + '\"'\n  end\n  fat_lib = File.join(App.config.build_dir, App.config.name + '-universal.a')\n  App.info 'Create', fat_lib\n  sh \"/usr/bin/lipo -create #{libs.join(' ')} -output \\\"#{fat_lib}\\\"\"\nend\n","markers":{"markers":{"1":{"id":1,"range":[[47,8],[47,16]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":27,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b1c44dcf30d27449d39b3127742d950abc7c28a4","deserializer":"TextBuffer"},{"text":"# Copyright (c) 2012, HipByte SPRL and contributors\n# All rights reserved.\n# \n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n# \n# 1. Redistributions of source code must retain the above copyright notice, this\n#    list of conditions and the following disclaimer.\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n#    this list of conditions and the following disclaimer in the documentation\n#    and/or other materials provided with the distribution.\n# \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nrequire 'motion/project/builder'\n\nmodule Motion; module Project\n  class Builder\n    def archive(config)\n      # Create .ipa archive.\n      app_bundle = config.app_bundle('iPhoneOS')\n      archive = config.archive\n      if !File.exist?(archive) or File.mtime(app_bundle) > File.mtime(archive)\n        App.info 'Create', archive\n        tmp = \"/tmp/ipa_root\"\n        sh \"/bin/rm -rf #{tmp}\"\n        sh \"/bin/mkdir -p #{tmp}/Payload\"\n        sh \"/bin/cp -r \\\"#{app_bundle}\\\" #{tmp}/Payload\"\n        Dir.chdir(tmp) do\n          sh \"/bin/chmod -R 755 Payload\"\n          sh \"/usr/bin/zip -q -r archive.zip Payload\"\n        end\n        sh \"/bin/cp #{tmp}/archive.zip \\\"#{archive}\\\"\"\n      end\n\n      # Create manifest file (if needed).\n      manifest_plist = File.join(config.versionized_build_dir('iPhoneOS'), 'manifest.plist')\n      manifest_plist_data = config.manifest_plist_data\n      if manifest_plist_data and (!File.exist?(manifest_plist) or File.mtime(config.project_file) > File.mtime(manifest_plist))\n        App.info 'Create', manifest_plist\n        File.open(manifest_plist, 'w') { |io| io.write(manifest_plist_data) } \n      end\n    end\n\n    def codesign(config, platform)\n      bundle_path = config.app_bundle(platform)\n      raise unless File.exist?(bundle_path)\n\n      # Create bundle/ResourceRules.plist.\n      resource_rules_plist = File.join(bundle_path, 'ResourceRules.plist')\n      unless File.exist?(resource_rules_plist)\n        App.info 'Create', resource_rules_plist\n        File.open(resource_rules_plist, 'w') do |io|\n          io.write(<<-PLIST)\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n        <key>rules</key>\n        <dict>\n                <key>.*</key>\n                <true/>\n                <key>Info.plist</key>\n                <dict>\n                        <key>omit</key>\n                        <true/>\n                        <key>weight</key>\n                        <real>10</real>\n                </dict>\n                <key>ResourceRules.plist</key>\n                <dict>\n                        <key>omit</key>\n                        <true/>\n                        <key>weight</key>\n                        <real>100</real>\n                </dict>\n        </dict>\n</dict>\n</plist>\nPLIST\n        end\n      end\n\n      # Copy the provisioning profile.\n      bundle_provision = File.join(bundle_path, \"embedded.mobileprovision\")\n      if !File.exist?(bundle_provision) or File.mtime(config.provisioning_profile) > File.mtime(bundle_provision)\n        App.info 'Create', bundle_provision\n        FileUtils.cp config.provisioning_profile, bundle_provision\n      end\n\n      # Codesign.\n      codesign_cmd = \"CODESIGN_ALLOCATE=\\\"#{File.join(config.platform_dir(platform), 'Developer/usr/bin/codesign_allocate')}\\\" /usr/bin/codesign\"\n      if File.mtime(config.project_file) > File.mtime(bundle_path) \\\n          or !system(\"#{codesign_cmd} --verify \\\"#{bundle_path}\\\" >& /dev/null\")\n        App.info 'Codesign', bundle_path\n        entitlements = File.join(config.versionized_build_dir(platform), \"Entitlements.plist\")\n        File.open(entitlements, 'w') { |io| io.write(config.entitlements_data) }\n        sh \"#{codesign_cmd} -f -s \\\"#{config.codesign_certificate}\\\" --resource-rules=\\\"#{resource_rules_plist}\\\" --entitlements #{entitlements} \\\"#{bundle_path}\\\"\"\n      end\n    end\n  end\nend; end\n","markers":{"markers":{"1":{"id":1,"range":[[89,11],[89,11]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":31,"autoscroll":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios/builder.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0e73eb5dd523bba00824467b08da5b76efc88d9a","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":23,"softTabs":true,"scrollTop":1381,"scrollLeft":0,"displayBuffer":{"id":24,"softWrap":false,"editorWidthInChars":49,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/app.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":27,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":28,"softWrap":false,"editorWidthInChars":68,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":31,"softTabs":true,"scrollTop":1491,"scrollLeft":0,"displayBuffer":{"id":32,"softWrap":false,"editorWidthInChars":74,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios/builder.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios/builder.rb","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"project-find:show":{"count":1,"name":"project-find:show","lastRun":1396455531224}}},"find-and-replace":{"projectViewState":{"findHistory":["codesign"],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}},"fuzzy-finder":{"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/app.rb":1396455540069,"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios.rb":1396455545597,"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion/project/template/ios/builder.rb":1396455558488},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1947419},"tree-view":{"directoryExpansionStates":{"lib":{},"test":{}},"selectedPath":"/Users/mattgarrison/Projects/forks/RubyMotion/lib/motion","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}