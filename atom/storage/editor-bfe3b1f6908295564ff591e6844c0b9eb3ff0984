{"mode":"editor","version":1,"windowDimensions":{"x":-71,"y":-787,"width":1415,"height":774},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mattgarrison/Projects/apps/UICKeyChainStore","buffers":[{"text":"//\n//  main.m\n//  UICKeyChainStore\n//\n//  Created by kishikawa katsumi on 2014/06/22.\n//  Copyright (c) 2014 kishikawa katsumi. All rights reserved.\n//\n\n#import <UIKit/UIKit.h>\n\n#import \"UICAppDelegate.h\"\n\nint main(int argc, char * argv[])\n{\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, nil, NSStringFromClass([UICAppDelegate class]));\n    }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":29},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/main.m","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fdb9e01ea77270dbe034205b00415ede95c58485","deserializer":"TextBuffer"},{"text":"//\n//  UICAppDelegate.m\n//  UICKeyChainStore\n//\n//  Created by kishikawa katsumi on 2014/06/22.\n//  Copyright (c) 2014 kishikawa katsumi. All rights reserved.\n//\n\n#import \"UICAppDelegate.h\"\n\n@implementation UICAppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    self.window.backgroundColor = [UIColor whiteColor];\n    self.window.rootViewController = [[UIViewController alloc] init];\n    [self.window makeKeyAndVisible];\n    return YES;\n}\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":33},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICAppDelegate.m","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fb80a00c80922deb23f30d8b5eb94480e43fa1b3","deserializer":"TextBuffer"},{"text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>CFBundleDevelopmentRegion</key>\n\t<string>en</string>\n\t<key>CFBundleDisplayName</key>\n\t<string>${PRODUCT_NAME}</string>\n\t<key>CFBundleExecutable</key>\n\t<string>${EXECUTABLE_NAME}</string>\n\t<key>CFBundleIdentifier</key>\n\t<string>com.kishikawakatsumi.${PRODUCT_NAME:rfc1034identifier}</string>\n\t<key>CFBundleInfoDictionaryVersion</key>\n\t<string>6.0</string>\n\t<key>CFBundleName</key>\n\t<string>${PRODUCT_NAME}</string>\n\t<key>CFBundlePackageType</key>\n\t<string>APPL</string>\n\t<key>CFBundleShortVersionString</key>\n\t<string>1.0</string>\n\t<key>CFBundleSignature</key>\n\t<string>????</string>\n\t<key>CFBundleVersion</key>\n\t<string>1.0</string>\n\t<key>LSRequiresIPhoneOS</key>\n\t<true/>\n\t<key>UIRequiredDeviceCapabilities</key>\n\t<array>\n\t\t<string>armv7</string>\n\t</array>\n\t<key>UISupportedInterfaceOrientations</key>\n\t<array>\n\t\t<string>UIInterfaceOrientationPortrait</string>\n\t\t<string>UIInterfaceOrientationLandscapeLeft</string>\n\t\t<string>UIInterfaceOrientationLandscapeRight</string>\n\t</array>\n</dict>\n</plist>\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":37},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICKeyChainStore-Info.plist","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"45e9ae09b2e7bed23358f5d0f2d5b59edf3d1e07","deserializer":"TextBuffer"},{"text":"//\n//  UICKeyChainStore.m\n//  UICKeyChainStore\n//\n//  Created by Kishikawa Katsumi on 11/11/20.\n//  Copyright (c) 2011 Kishikawa Katsumi. All rights reserved.\n//\n\n#import \"UICKeyChainStore.h\"\n\nstatic NSString *_defaultService;\n\n@interface UICKeyChainStore () {\n    NSMutableDictionary *itemsToUpdate;\n}\n\n@end\n\n@implementation UICKeyChainStore\n\n+ (NSString *)defaultService\n{\n    if (!_defaultService) {\n        _defaultService = [[NSBundle mainBundle] bundleIdentifier];\n    }\n\n    return _defaultService;\n}\n\n+ (void)setDefaultService:(NSString *)defaultService\n{\n    _defaultService = defaultService;\n}\n\n#pragma mark -\n\n+ (UICKeyChainStore *)keyChainStore\n{\n    return [[self alloc] initWithService:[self defaultService]];\n}\n\n+ (UICKeyChainStore *)keyChainStoreWithService:(NSString *)service\n{\n    return [[self alloc] initWithService:service];\n}\n\n+ (UICKeyChainStore *)keyChainStoreWithService:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    return [[self alloc] initWithService:service accessGroup:accessGroup];\n}\n\n- (instancetype)init\n{\n    return [self initWithService:[self.class defaultService] accessGroup:nil];\n}\n\n- (instancetype)initWithService:(NSString *)service\n{\n    return [self initWithService:service accessGroup:nil];\n}\n\n- (instancetype)initWithService:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    self = [super init];\n    if (self) {\n        if (!service) {\n            service = [self.class defaultService];\n        }\n        _service = [service copy];\n        _accessGroup = [accessGroup copy];\n\n        itemsToUpdate = [[NSMutableDictionary alloc] init];\n    }\n\n    return self;\n}\n\n#pragma mark -\n\n+ (NSString *)stringForKey:(NSString *)key\n{\n    return [self stringForKey:key service:[self defaultService] accessGroup:nil];\n}\n\n+ (NSString *)stringForKey:(NSString *)key service:(NSString *)service\n{\n    return [self stringForKey:key service:service accessGroup:nil];\n}\n\n+ (NSString *)stringForKey:(NSString *)key service:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    NSData *data = [self dataForKey:key service:service accessGroup:accessGroup];\n    if (data) {\n        return [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n    }\n\n    return nil;\n}\n\n+ (BOOL)setString:(NSString *)value forKey:(NSString *)key\n{\n    return [self setString:value forKey:key service:[self defaultService] accessGroup:nil];\n}\n\n+ (BOOL)setString:(NSString *)value forKey:(NSString *)key service:(NSString *)service\n{\n    return [self setString:value forKey:key service:service accessGroup:nil];\n}\n\n+ (BOOL)setString:(NSString *)value forKey:(NSString *)key service:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    NSData *data = [value dataUsingEncoding:NSUTF8StringEncoding];\n    return [self setData:data forKey:key service:service accessGroup:accessGroup];\n}\n\n#pragma mark -\n\n+ (NSData *)dataForKey:(NSString *)key\n{\n    return [self dataForKey:key service:[self defaultService] accessGroup:nil];\n}\n\n+ (NSData *)dataForKey:(NSString *)key service:(NSString *)service\n{\n    return [self dataForKey:key service:service accessGroup:nil];\n}\n\n\n# compare with https://github.com/mordaroso/carabiner/blob/master/lib/carabiner/base_item.rb\n+ (NSData *)dataForKey:(NSString *)key service:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    if (!key) {\n        return nil;\n    }\n    if (!service) {\n        service = [self defaultService];\n    }\n\n    NSMutableDictionary *query = [[NSMutableDictionary alloc] init];\n    [query setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n    [query setObject:(__bridge id)kCFBooleanTrue forKey:(__bridge id)kSecReturnData];\n    [query setObject:(__bridge id)kSecMatchLimitOne forKey:(__bridge id)kSecMatchLimit];\n    [query setObject:service forKey:(__bridge id)kSecAttrService];\n    [query setObject:key forKey:(__bridge id)kSecAttrGeneric];\n    [query setObject:key forKey:(__bridge id)kSecAttrAccount];\n#if !TARGET_IPHONE_SIMULATOR && defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n    if (accessGroup) {\n        [query setObject:accessGroup forKey:(__bridge id)kSecAttrAccessGroup];\n    }\n#endif\n\n    CFTypeRef data = nil;\n    OSStatus status = SecItemCopyMatching((__bridge CFDictionaryRef)query, &data);\n    if (status != errSecSuccess) {\n        return nil;\n    }\n\n    NSData *ret = [NSData dataWithData:(__bridge NSData *)data];\n    if (data) {\n        CFRelease(data);\n    }\n\n    return ret;\n}\n\n+ (BOOL)setData:(NSData *)data forKey:(NSString *)key\n{\n    return [self setData:data forKey:key service:[self defaultService] accessGroup:nil];\n}\n\n+ (BOOL)setData:(NSData *)data forKey:(NSString *)key service:(NSString *)service\n{\n    return [self setData:data forKey:key service:service accessGroup:nil];\n}\n\n+ (BOOL)setData:(NSData *)data forKey:(NSString *)key service:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    if (!key) {\n        return NO;\n    }\n    if (!service) {\n        service = [self defaultService];\n    }\n\n    NSMutableDictionary *query = [[NSMutableDictionary alloc] init];\n    [query setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n    [query setObject:service forKey:(__bridge id)kSecAttrService];\n    [query setObject:key forKey:(__bridge id)kSecAttrGeneric];\n    [query setObject:key forKey:(__bridge id)kSecAttrAccount];\n#if !TARGET_IPHONE_SIMULATOR && defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n    if (accessGroup) {\n        [query setObject:accessGroup forKey:(__bridge id)kSecAttrAccessGroup];\n    }\n#endif\n\n    OSStatus status = SecItemCopyMatching((__bridge CFDictionaryRef)query, NULL);\n    if (status == errSecSuccess) {\n        if (data) {\n            NSMutableDictionary *attributesToUpdate = [[NSMutableDictionary alloc] init];\n            [attributesToUpdate setObject:data forKey:(__bridge id)kSecValueData];\n\n            status = SecItemUpdate((__bridge CFDictionaryRef)query, (__bridge CFDictionaryRef)attributesToUpdate);\n            if (status != errSecSuccess) {\n                return NO;\n            }\n        } else {\n            [self removeItemForKey:key service:service accessGroup:accessGroup];\n        }\n    } else if (status == errSecItemNotFound) {\n        NSMutableDictionary *attributes = [[NSMutableDictionary alloc] init];\n        [attributes setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n        [attributes setObject:service forKey:(__bridge id)kSecAttrService];\n        [attributes setObject:key forKey:(__bridge id)kSecAttrGeneric];\n        [attributes setObject:key forKey:(__bridge id)kSecAttrAccount];\n#if TARGET_OS_IPHONE || (defined(MAC_OS_X_VERSION_10_9) && MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_9)\n        [attributes setObject:(__bridge id)kSecAttrAccessibleAfterFirstUnlock forKey:(__bridge id)kSecAttrAccessible];\n#endif\n        [attributes setObject:data forKey:(__bridge id)kSecValueData];\n#if !TARGET_IPHONE_SIMULATOR && defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n        if (accessGroup) {\n            [attributes setObject:accessGroup forKey:(__bridge id)kSecAttrAccessGroup];\n        }\n#endif\n\n        status = SecItemAdd((__bridge CFDictionaryRef)attributes, NULL);\n        if (status != errSecSuccess) {\n            return NO;\n        }\n    } else {\n        return NO;\n    }\n\n    return YES;\n}\n\n#pragma mark -\n\n- (void)setString:(NSString *)string forKey:(NSString *)key\n{\n    [self setData:[string dataUsingEncoding:NSUTF8StringEncoding] forKey:key];\n}\n\n- (NSString *)stringForKey:(id)key\n{\n    NSData *data = [self dataForKey:key];\n    if (data) {\n        return [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n    }\n\n    return nil;\n}\n\n#pragma mark -\n\n- (void)setData:(NSData *)data forKey:(NSString *)key\n{\n    if (!key) {\n        return;\n    }\n    if (!data) {\n        [self removeItemForKey:key];\n    } else {\n        [itemsToUpdate setObject:data forKey:key];\n    }\n}\n\n- (NSData *)dataForKey:(NSString *)key\n{\n    NSData *data = [itemsToUpdate objectForKey:key];\n    if (!data) {\n        data = [[self class] dataForKey:key service:self.service accessGroup:self.accessGroup];\n    }\n\n    return data;\n}\n\n#pragma mark -\n\n+ (BOOL)removeItemForKey:(NSString *)key\n{\n    return [UICKeyChainStore removeItemForKey:key service:[self defaultService] accessGroup:nil];\n}\n\n+ (BOOL)removeItemForKey:(NSString *)key service:(NSString *)service\n{\n    return [UICKeyChainStore removeItemForKey:key service:service accessGroup:nil];\n}\n\n+ (BOOL)removeItemForKey:(NSString *)key service:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    if (!key) {\n        return NO;\n    }\n    if (!service) {\n        service = [self defaultService];\n    }\n\n    NSMutableDictionary *itemToDelete = [[NSMutableDictionary alloc] init];\n    [itemToDelete setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n    [itemToDelete setObject:service forKey:(__bridge id)kSecAttrService];\n    [itemToDelete setObject:key forKey:(__bridge id)kSecAttrGeneric];\n    [itemToDelete setObject:key forKey:(__bridge id)kSecAttrAccount];\n#if !TARGET_IPHONE_SIMULATOR && defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n    if (accessGroup) {\n        [itemToDelete setObject:accessGroup forKey:(__bridge id)kSecAttrAccessGroup];\n    }\n#endif\n\n    OSStatus status = SecItemDelete((__bridge CFDictionaryRef)itemToDelete);\n    if (status != errSecSuccess && status != errSecItemNotFound) {\n        return NO;\n    }\n\n    return YES;\n}\n\n+ (NSArray *)itemsForService:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    if (!service) {\n        service = [self defaultService];\n    }\n\n    NSMutableDictionary *query = [[NSMutableDictionary alloc] init];\n    [query setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n    [query setObject:(id)kCFBooleanTrue forKey:(__bridge id)kSecReturnAttributes];\n    [query setObject:(id)kCFBooleanTrue forKey:(__bridge id)kSecReturnData];\n    [query setObject:(__bridge id)kSecMatchLimitAll forKey:(__bridge id)kSecMatchLimit];\n    [query setObject:service forKey:(__bridge id)kSecAttrService];\n#if !TARGET_IPHONE_SIMULATOR && defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n    if (accessGroup) {\n        [query setObject:accessGroup forKey:(__bridge id)kSecAttrAccessGroup];\n    }\n#endif\n\n    CFArrayRef result = nil;\n    OSStatus status = SecItemCopyMatching((__bridge CFDictionaryRef)query, (CFTypeRef *)&result);\n    if (status == errSecSuccess || status == errSecItemNotFound) {\n        return CFBridgingRelease(result);\n    } else {\n        return nil;\n    }\n}\n\n+ (BOOL)removeAllItems\n{\n    return [self removeAllItemsForService:[self defaultService] accessGroup:nil];\n}\n\n+ (BOOL)removeAllItemsForService:(NSString *)service\n{\n    return [self removeAllItemsForService:service accessGroup:nil];\n}\n\n+ (BOOL)removeAllItemsForService:(NSString *)service accessGroup:(NSString *)accessGroup\n{\n    NSArray *items = [UICKeyChainStore itemsForService:service accessGroup:accessGroup];\n    for (NSDictionary *item in items) {\n        NSMutableDictionary *itemToDelete = [[NSMutableDictionary alloc] initWithDictionary:item];\n        [itemToDelete setObject:(__bridge id)kSecClassGenericPassword forKey:(__bridge id)kSecClass];\n\n        OSStatus status = SecItemDelete((__bridge CFDictionaryRef)itemToDelete);\n        if (status != errSecSuccess) {\n            return NO;\n        }\n    }\n\n    return YES;\n}\n\n#pragma mark -\n\n- (void)removeItemForKey:(NSString *)key\n{\n    if ([itemsToUpdate objectForKey:key]) {\n        [itemsToUpdate removeObjectForKey:key];\n    } else {\n        [[self class] removeItemForKey:key service:self.service accessGroup:self.accessGroup];\n    }\n}\n\n- (void)removeAllItems\n{\n    [itemsToUpdate removeAllObjects];\n    [[self class] removeAllItemsForService:self.service accessGroup:self.accessGroup];\n}\n\n#pragma mark -\n\n- (void)synchronize\n{\n    for (NSString *key in itemsToUpdate) {\n        [[self class] setData:[itemsToUpdate objectForKey:key] forKey:key service:self.service accessGroup:self.accessGroup];\n    }\n\n    [itemsToUpdate removeAllObjects];\n}\n\n#pragma mark -\n\n- (NSString *)description\n{\n    NSArray *items = [UICKeyChainStore itemsForService:self.service accessGroup:self.accessGroup];\n    NSMutableArray *list = [[NSMutableArray alloc] initWithCapacity:items.count];\n    for (NSDictionary *attributes in items) {\n        NSMutableDictionary *attrs = [[NSMutableDictionary alloc] init];\n        [attrs setObject:[attributes objectForKey:(__bridge id)kSecAttrService] forKey:@\"Service\"];\n        [attrs setObject:[attributes objectForKey:(__bridge id)kSecAttrAccount] forKey:@\"Account\"];\n#if defined(__IPHONE_OS_VERSION_MIN_REQUIRED)\n        [attrs setObject:[attributes objectForKey:(__bridge id)kSecAttrAccessGroup] forKey:@\"AccessGroup\"];\n#endif\n        NSData *data = [attributes objectForKey:(__bridge id)kSecValueData];\n        NSString *string = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n        if (string) {\n            [attrs setObject:string forKey:@\"Value\"];\n        } else {\n            [attrs setObject:data forKey:@\"Value\"];\n        }\n        [list addObject:attrs];\n    }\n\n    return [list description];\n}\n\n#pragma mark - Object Subscripting\n\n- (NSString *)objectForKeyedSubscript:(NSString <NSCopying> *)key\n{\n    return [self stringForKey:key];\n}\n\n- (void)setObject:(NSString *)obj forKeyedSubscript:(NSString <NSCopying> *)key\n{\n    [self setString:obj forKey:key];\n}\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[425,14],[425,37]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":46,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[127,0],[127,0]],"newRange":[[127,0],[129,0]],"oldText":"","newText":"\n# here\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[128,0],[128,0]],"newRange":[[128,0],[129,0]],"oldText":"","newText":"# stopped here\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[129,0],[130,0]],"newRange":[[129,0],[129,0]],"oldText":"# here\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[129,0],[129,0]],"newRange":[[129,0],[131,0]],"oldText":"","newText":"\n# compare with https://github.com/mordaroso/carabiner/blob/master/lib/carabiner/base_item.rb\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[127,0],[129,0]],"newRange":[[127,0],[127,0]],"oldText":"\n# stopped here\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[419,0],[419,4]],"newRange":[[419,0],[419,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[393,0],[393,4]],"newRange":[[393,0],[393,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[365,0],[365,4]],"newRange":[[365,0],[365,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[359,0],[359,8]],"newRange":[[359,0],[359,0]],"oldText":"        ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[333,0],[333,4]],"newRange":[[333,0],[333,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[321,0],[321,4]],"newRange":[[321,0],[321,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[312,0],[312,4]],"newRange":[[312,0],[312,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[307,0],[307,4]],"newRange":[[307,0],[307,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[296,0],[296,4]],"newRange":[[296,0],[296,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[272,0],[272,4]],"newRange":[[272,0],[272,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[248,0],[248,4]],"newRange":[[248,0],[248,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[231,0],[231,4]],"newRange":[[231,0],[231,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[223,0],[223,8]],"newRange":[[223,0],[223,0]],"oldText":"        ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[200,0],[200,12]],"newRange":[[200,0],[200,0]],"oldText":"            ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[194,0],[194,4]],"newRange":[[194,0],[194,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[183,0],[183,4]],"newRange":[[183,0],[183,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[161,0],[161,4]],"newRange":[[161,0],[161,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[156,0],[156,4]],"newRange":[[156,0],[156,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[150,0],[150,4]],"newRange":[[150,0],[150,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[137,0],[137,4]],"newRange":[[137,0],[137,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[95,0],[95,4]],"newRange":[[95,0],[95,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[73,0],[73,4]],"newRange":[[73,0],[73,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[70,0],[70,8]],"newRange":[[70,0],[70,0]],"oldText":"        ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[25,4]],"newRange":[[25,0],[25,0]],"oldText":"    ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Lib/UICKeyChainStore.m","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4a8a999302c300acfed2a0917ccd6a5d1d3f6cc3","deserializer":"TextBuffer"},{"text":"//\n//  Prefix header\n//\n//  The contents of this file are implicitly included at the beginning of every source file.\n//\n\n#ifdef __OBJC__\n    #import <Cocoa/Cocoa.h>\n#endif\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":54},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Mac/UICKeyChainStore/UICKeyChainStore-Prefix.pch","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"20e7bb07f31dd07e3d747bc425f9e4da53c91b38","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":29,"softTabs":true,"displayBuffer":{"id":30,"softWrap":false,"editorWidthInChars":118,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/main.m","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":33,"softTabs":true,"displayBuffer":{"id":34,"softWrap":false,"editorWidthInChars":118,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICAppDelegate.m","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":46,"softTabs":true,"displayBuffer":{"id":47,"softWrap":false,"editorWidthInChars":118,"scrollTop":7733,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Lib/UICKeyChainStore.m","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":54,"softTabs":true,"displayBuffer":{"id":55,"softWrap":false,"editorWidthInChars":118,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Mac/UICKeyChainStore/UICKeyChainStore-Prefix.pch","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":37,"softTabs":false,"displayBuffer":{"id":38,"softWrap":false,"editorWidthInChars":118,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICKeyChainStore-Info.plist","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Lib/UICKeyChainStore.m","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"core:select-up":{"count":2,"name":"core:select-up","lastRun":1404917676624},"core:backspace":{"count":1,"name":"core:backspace","lastRun":1404917676927},"core:copy":{"count":13,"name":"core:copy","lastRun":1404921228798},"find-and-replace:show":{"count":2,"name":"find-and-replace:show","lastRun":1404918066293},"core:paste":{"count":1,"name":"core:paste","lastRun":1404918066355},"core:confirm":{"count":4,"name":"core:confirm","lastRun":1404918068847},"editor:select-to-end-of-line":{"count":1,"name":"editor:select-to-end-of-line","lastRun":1404918818898},"core:select-left":{"count":2,"name":"core:select-left","lastRun":1404918819568},"editor:select-to-end-of-word":{"count":3,"name":"editor:select-to-end-of-word","lastRun":1404921033392},"core:save":{"count":1,"name":"core:save","lastRun":1404921193965}}},"find-and-replace":{"viewState":{"findHistory":["data"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}}},"fuzzy-finder":{"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/main.m":1404853400972,"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICAppDelegate.m":1404853406498,"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Lib/UICKeyChainStore.m":1404853448364,"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Mac/UICKeyChainStore/UICKeyChainStore-Prefix.pch":1404853440330,"/Users/mattgarrison/Projects/apps/UICKeyChainStore/iOS/UICKeyChainStore/UICKeyChainStore-Info.plist":1404853405407},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":70127207},"tree-view":{"directoryExpansionStates":{"iOS":{"UICKeyChainStore":{},"UICKeyChainStore.xcodeproj":{}},"Lib":{},"Mac":{"UICKeyChainStore":{}},"UICKeyChainStore.xcworkspace":{}},"selectedPath":"/Users/mattgarrison/Projects/apps/UICKeyChainStore/Lib/UICKeyChainStore.m","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}